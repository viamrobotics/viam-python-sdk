# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: src/proto/summation.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client

if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
from .. import proto


class SummationServiceBase(abc.ABC):
    @abc.abstractmethod
    async def Sum(self, stream: "grpclib.server.Stream[proto.summation_pb2.SumRequest, proto.summation_pb2.SumResponse]") -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            "/acme.service.summation.v1.SummationService/Sum": grpclib.const.Handler(
                self.Sum,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.summation_pb2.SumRequest,
                proto.summation_pb2.SumResponse,
            ),
        }


class SummationServiceStub:
    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Sum = grpclib.client.UnaryUnaryMethod(
            channel,
            "/acme.service.summation.v1.SummationService/Sum",
            proto.summation_pb2.SumRequest,
            proto.summation_pb2.SumResponse,
        )
