Traceback (most recent call last):
  File "/github/home/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/github/home/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/nbclient/client.py", line 1269, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/github/home/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/nbclient/util.py", line 85, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/github/home/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/nbclient/util.py", line 60, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/github/home/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/nbclient/client.py", line 707, in async_execute
    await self.async_execute_cell(
  File "/github/home/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/nbclient/client.py", line 1025, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/github/home/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/nbclient/client.py", line 919, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from viam import logging
from viam.robot.client import RobotClient
from viam.rpc.dial import DialOptions, dial


async def connect_with_channel() -> RobotClient:
    async with await dial("localhost:9091", DialOptions(insecure=True, disable_webrtc=True)) as channel:
        return await RobotClient.with_channel(channel, RobotClient.Options(refresh_interval=10, log_level=logging.FATAL))


robot = await connect_with_channel()
print(robot.resource_names)
await robot.close()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mOSError[0m                                   Traceback (most recent call last)
File [0;32m/__w/viam-python-sdk/viam-python-sdk/src/viam/robot/client.py:183[0m, in [0;36mRobotClient._with_channel[0;34m(cls, channel, options, close_channel)[0m
[1;32m    182[0m [38;5;28;01mtry[39;00m:
[0;32m--> 183[0m     [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mrefresh()
[1;32m    184[0m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m:

File [0;32m/__w/viam-python-sdk/viam-python-sdk/src/viam/robot/client.py:221[0m, in [0;36mRobotClient.refresh[0;34m(self)[0m
[1;32m    218[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    219[0m [38;5;124;03mManually refresh the underlying parts of this robot[39;00m
[1;32m    220[0m [38;5;124;03m"""[39;00m
[0;32m--> 221[0m response: ResourceNamesResponse [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_client[38;5;241m.[39mResourceNames(ResourceNamesRequest())
[1;32m    222[0m resource_names: List[ResourceName] [38;5;241m=[39m [38;5;28mlist[39m(response[38;5;241m.[39mresources)

File [0;32m~/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/grpclib/client.py:903[0m, in [0;36mUnaryUnaryMethod.__call__[0;34m(self, message, timeout, metadata)[0m
[1;32m    902[0m [38;5;28;01masync[39;00m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39mopen(timeout[38;5;241m=[39mtimeout, metadata[38;5;241m=[39mmetadata) [38;5;28;01mas[39;00m stream:
[0;32m--> 903[0m     [38;5;28;01mawait[39;00m stream[38;5;241m.[39msend_message(message, end[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m    904[0m     reply [38;5;241m=[39m [38;5;28;01mawait[39;00m stream[38;5;241m.[39mrecv_message()

File [0;32m~/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/grpclib/client.py:241[0m, in [0;36mStream.send_message[0;34m(self, message, end)[0m
[1;32m    240[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_send_request_done:
[0;32m--> 241[0m     [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39msend_request()
[1;32m    243[0m end_stream [38;5;241m=[39m end

File [0;32m~/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/grpclib/client.py:173[0m, in [0;36mStream.send_request[0;34m(self, end)[0m
[1;32m    172[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39m_wrapper:
[0;32m--> 173[0m     protocol [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_channel[38;5;241m.[39m__connect__()
[1;32m    174[0m     stream [38;5;241m=[39m protocol[38;5;241m.[39mprocessor[38;5;241m.[39mconnection\
[1;32m    175[0m         [38;5;241m.[39mcreate_stream(wrapper[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_wrapper)

File [0;32m~/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/grpclib/client.py:748[0m, in [0;36mChannel.__connect__[0;34m(self)[0m
[1;32m    747[0m [38;5;28;01mtry[39;00m:
[0;32m--> 748[0m     [38;5;28mself[39m[38;5;241m.[39m_protocol [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_create_connection()
[1;32m    749[0m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m:

File [0;32m~/.cache/pypoetry/virtualenvs/viam-sdk-BVXXZUuz-py3.9/lib/python3.9/site-packages/grpclib/client.py:725[0m, in [0;36mChannel._create_connection[0;34m(self)[0m
[1;32m    724[0m [38;5;28;01melse[39;00m:
[0;32m--> 725[0m     _, protocol [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_loop[38;5;241m.[39mcreate_connection(
[1;32m    726[0m         [38;5;28mself[39m[38;5;241m.[39m_protocol_factory,
[1;32m    727[0m         [38;5;28mself[39m[38;5;241m.[39m_host,
[1;32m    728[0m         [38;5;28mself[39m[38;5;241m.[39m_port,
[1;32m    729[0m         ssl[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39m_ssl,
[1;32m    730[0m         server_hostname[38;5;241m=[39m(
[1;32m    731[0m             [38;5;28mself[39m[38;5;241m.[39m_config[38;5;241m.[39mssl_target_name_override
[1;32m    732[0m             [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_ssl [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m
[1;32m    733[0m         ),
[1;32m    734[0m     )
[1;32m    735[0m [38;5;28;01mreturn[39;00m protocol

File [0;32m/usr/lib/python3.9/asyncio/base_events.py:1064[0m, in [0;36mBaseEventLoop.create_connection[0;34m(self, protocol_factory, host, port, ssl, family, proto, flags, sock, local_addr, server_hostname, ssl_handshake_timeout, happy_eyeballs_delay, interleave)[0m
[1;32m   1062[0m             [38;5;66;03m# Raise a combined exception so the user can see all[39;00m
[1;32m   1063[0m             [38;5;66;03m# the various error messages.[39;00m
[0;32m-> 1064[0m             [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([38;5;124m'[39m[38;5;124mMultiple exceptions: [39m[38;5;132;01m{}[39;00m[38;5;124m'[39m[38;5;241m.[39mformat(
[1;32m   1065[0m                 [38;5;124m'[39m[38;5;124m, [39m[38;5;124m'[39m[38;5;241m.[39mjoin([38;5;28mstr[39m(exc) [38;5;28;01mfor[39;00m exc [38;5;129;01min[39;00m exceptions)))
[1;32m   1067[0m [38;5;28;01melse[39;00m:

[0;31mOSError[0m: Multiple exceptions: [Errno 111] Connect call failed ('127.0.0.1', 9091), [Errno 99] Cannot assign requested address

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
Cell [0;32mIn[3], line 11[0m
[1;32m      7[0m     [38;5;28;01masync[39;00m [38;5;28;01mwith[39;00m [38;5;28;01mawait[39;00m dial([38;5;124m"[39m[38;5;124mlocalhost:9091[39m[38;5;124m"[39m, DialOptions(insecure[38;5;241m=[39m[38;5;28;01mTrue[39;00m, disable_webrtc[38;5;241m=[39m[38;5;28;01mTrue[39;00m)) [38;5;28;01mas[39;00m channel:
[1;32m      8[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m RobotClient[38;5;241m.[39mwith_channel(channel, RobotClient[38;5;241m.[39mOptions(refresh_interval[38;5;241m=[39m[38;5;241m10[39m, log_level[38;5;241m=[39mlogging[38;5;241m.[39mFATAL))
[0;32m---> 11[0m robot [38;5;241m=[39m [38;5;28;01mawait[39;00m connect_with_channel()
[1;32m     12[0m [38;5;28mprint[39m(robot[38;5;241m.[39mresource_names)
[1;32m     13[0m [38;5;28;01mawait[39;00m robot[38;5;241m.[39mclose()

Cell [0;32mIn[3], line 8[0m, in [0;36mconnect_with_channel[0;34m()[0m
[1;32m      6[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21mconnect_with_channel[39m() [38;5;241m-[39m[38;5;241m>[39m RobotClient:
[1;32m      7[0m     [38;5;28;01masync[39;00m [38;5;28;01mwith[39;00m [38;5;28;01mawait[39;00m dial([38;5;124m"[39m[38;5;124mlocalhost:9091[39m[38;5;124m"[39m, DialOptions(insecure[38;5;241m=[39m[38;5;28;01mTrue[39;00m, disable_webrtc[38;5;241m=[39m[38;5;28;01mTrue[39;00m)) [38;5;28;01mas[39;00m channel:
[0;32m----> 8[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m RobotClient[38;5;241m.[39mwith_channel(channel, RobotClient[38;5;241m.[39mOptions(refresh_interval[38;5;241m=[39m[38;5;241m10[39m, log_level[38;5;241m=[39mlogging[38;5;241m.[39mFATAL))

File [0;32m/__w/viam-python-sdk/viam-python-sdk/src/viam/robot/client.py:155[0m, in [0;36mRobotClient.with_channel[0;34m(cls, channel, options)[0m
[1;32m    143[0m [38;5;250m[39m[38;5;124;03m"""Create a robot that is connected to a robot over the given channel.[39;00m
[1;32m    144[0m 
[1;32m    145[0m [38;5;124;03mAny robots created using this method will *NOT* automatically close the channel upon exit.[39;00m
[0;32m   (...)[0m
[1;32m    152[0m [38;5;124;03m    Self: the RobotClient[39;00m
[1;32m    153[0m [38;5;124;03m"""[39;00m
[1;32m    154[0m logging[38;5;241m.[39msetLevel(options[38;5;241m.[39mlog_level)
[0;32m--> 155[0m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28mcls[39m[38;5;241m.[39m_with_channel(channel, options, [38;5;28;01mFalse[39;00m)

File [0;32m/__w/viam-python-sdk/viam-python-sdk/src/viam/robot/client.py:187[0m, in [0;36mRobotClient._with_channel[0;34m(cls, channel, options, close_channel)[0m
[1;32m    185[0m     LOGGER[38;5;241m.[39merror([38;5;124m"[39m[38;5;124mUnable to establish a connection to the robot. Ensure the robot is online and reachable and try again.[39m[38;5;124m"[39m)
[1;32m    186[0m     [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mclose()
[0;32m--> 187[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m([38;5;124m"[39m[38;5;124mUnable to establish a connection to the robot.[39m[38;5;124m"[39m)
[1;32m    189[0m [38;5;28;01mif[39;00m options[38;5;241m.[39mrefresh_interval [38;5;241m>[39m [38;5;241m0[39m:
[1;32m    190[0m     [38;5;28mself[39m[38;5;241m.[39m_refresh_task [38;5;241m=[39m asyncio[38;5;241m.[39mcreate_task(
[1;32m    191[0m         [38;5;28mself[39m[38;5;241m.[39m_refresh_every(options[38;5;241m.[39mrefresh_interval), name[38;5;241m=[39m[38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mviam[38;5;241m.[39m_TASK_PREFIX[38;5;132;01m}[39;00m[38;5;124m-robot_refresh_metadata[39m[38;5;124m"[39m
[1;32m    192[0m     )

[0;31mConnectionError[0m: Unable to establish a connection to the robot.
ConnectionError: Unable to establish a connection to the robot.

