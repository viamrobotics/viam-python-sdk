"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class PaymentsAccount(google.protobuf.message.Message):
    """Proto file describing the PaymentsAccount resource.

    A payments account, which can be used to set up billing for an Ads customer.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    PAYMENTS_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CURRENCY_CODE_FIELD_NUMBER: builtins.int
    PAYMENTS_PROFILE_ID_FIELD_NUMBER: builtins.int
    SECONDARY_PAYMENTS_PROFILE_ID_FIELD_NUMBER: builtins.int
    PAYING_MANAGER_CUSTOMER_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """Output only. The resource name of the payments account.
    PaymentsAccount resource names have the form:

    `customers/{customer_id}/paymentsAccounts/{payments_account_id}`
    """

    payments_account_id: typing.Text = ...
    """Output only. A 16 digit ID used to identify a payments account."""

    name: typing.Text = ...
    """Output only. The name of the payments account."""

    currency_code: typing.Text = ...
    """Output only. The currency code of the payments account.
    A subset of the currency codes derived from the ISO 4217 standard is
    supported.
    """

    payments_profile_id: typing.Text = ...
    """Output only. A 12 digit ID used to identify the payments profile associated with the
    payments account.
    """

    secondary_payments_profile_id: typing.Text = ...
    """Output only. A secondary payments profile ID present in uncommon situations, e.g.
    when a sequential liability agreement has been arranged.
    """

    paying_manager_customer: typing.Text = ...
    """Output only. Paying manager of this payment account."""

    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        payments_account_id : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        currency_code : typing.Optional[typing.Text] = ...,
        payments_profile_id : typing.Optional[typing.Text] = ...,
        secondary_payments_profile_id : typing.Optional[typing.Text] = ...,
        paying_manager_customer : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_currency_code",b"_currency_code","_name",b"_name","_paying_manager_customer",b"_paying_manager_customer","_payments_account_id",b"_payments_account_id","_payments_profile_id",b"_payments_profile_id","_secondary_payments_profile_id",b"_secondary_payments_profile_id","currency_code",b"currency_code","name",b"name","paying_manager_customer",b"paying_manager_customer","payments_account_id",b"payments_account_id","payments_profile_id",b"payments_profile_id","secondary_payments_profile_id",b"secondary_payments_profile_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_currency_code",b"_currency_code","_name",b"_name","_paying_manager_customer",b"_paying_manager_customer","_payments_account_id",b"_payments_account_id","_payments_profile_id",b"_payments_profile_id","_secondary_payments_profile_id",b"_secondary_payments_profile_id","currency_code",b"currency_code","name",b"name","paying_manager_customer",b"paying_manager_customer","payments_account_id",b"payments_account_id","payments_profile_id",b"payments_profile_id","resource_name",b"resource_name","secondary_payments_profile_id",b"secondary_payments_profile_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_currency_code",b"_currency_code"]) -> typing.Optional[typing_extensions.Literal["currency_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_paying_manager_customer",b"_paying_manager_customer"]) -> typing.Optional[typing_extensions.Literal["paying_manager_customer"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_payments_account_id",b"_payments_account_id"]) -> typing.Optional[typing_extensions.Literal["payments_account_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_payments_profile_id",b"_payments_profile_id"]) -> typing.Optional[typing_extensions.Literal["payments_profile_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_secondary_payments_profile_id",b"_secondary_payments_profile_id"]) -> typing.Optional[typing_extensions.Literal["secondary_payments_profile_id"]]: ...
global___PaymentsAccount = PaymentsAccount
