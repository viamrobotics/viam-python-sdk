"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v7.common.text_label_pb2
import google.ads.googleads.v7.enums.label_status_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Label(google.protobuf.message.Message):
    """A label."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    TEXT_LABEL_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """Immutable. Name of the resource.
    Label resource names have the form:
    `customers/{customer_id}/labels/{label_id}`
    """

    id: builtins.int = ...
    """Output only. Id of the label. Read only."""

    name: typing.Text = ...
    """The name of the label.

    This field is required and should not be empty when creating a new label.

    The length of this string should be between 1 and 80, inclusive.
    """

    status: google.ads.googleads.v7.enums.label_status_pb2.LabelStatusEnum.LabelStatus.ValueType = ...
    """Output only. Status of the label. Read only."""

    @property
    def text_label(self) -> google.ads.googleads.v7.common.text_label_pb2.TextLabel:
        """A type of label displaying text on a colored background."""
        pass
    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        id : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        status : google.ads.googleads.v7.enums.label_status_pb2.LabelStatusEnum.LabelStatus.ValueType = ...,
        text_label : typing.Optional[google.ads.googleads.v7.common.text_label_pb2.TextLabel] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_name",b"_name","id",b"id","name",b"name","text_label",b"text_label"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_name",b"_name","id",b"id","name",b"name","resource_name",b"resource_name","status",b"status","text_label",b"text_label"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
global___Label = Label
