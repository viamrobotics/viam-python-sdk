"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CustomerClient(google.protobuf.message.Message):
    """Proto file describing the CustomerClient resource.

    A link between the given customer and a client customer. CustomerClients only
    exist for manager customers. All direct and indirect client customers are
    included, as well as the manager itself.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    CLIENT_CUSTOMER_FIELD_NUMBER: builtins.int
    HIDDEN_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    TIME_ZONE_FIELD_NUMBER: builtins.int
    TEST_ACCOUNT_FIELD_NUMBER: builtins.int
    MANAGER_FIELD_NUMBER: builtins.int
    DESCRIPTIVE_NAME_FIELD_NUMBER: builtins.int
    CURRENCY_CODE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """Output only. The resource name of the customer client.
    CustomerClient resource names have the form:
    `customers/{customer_id}/customerClients/{client_customer_id}`
    """

    client_customer: typing.Text = ...
    """Output only. The resource name of the client-customer which is linked to
    the given customer. Read only.
    """

    hidden: builtins.bool = ...
    """Output only. Specifies whether this is a
    [hidden account](https://support.google.com/google-ads/answer/7519830).
    Read only.
    """

    level: builtins.int = ...
    """Output only. Distance between given customer and client. For self link, the level value
    will be 0. Read only.
    """

    time_zone: typing.Text = ...
    """Output only. Common Locale Data Repository (CLDR) string representation of the
    time zone of the client, e.g. America/Los_Angeles. Read only.
    """

    test_account: builtins.bool = ...
    """Output only. Identifies if the client is a test account. Read only."""

    manager: builtins.bool = ...
    """Output only. Identifies if the client is a manager. Read only."""

    descriptive_name: typing.Text = ...
    """Output only. Descriptive name for the client. Read only."""

    currency_code: typing.Text = ...
    """Output only. Currency code (e.g. 'USD', 'EUR') for the client. Read only."""

    id: builtins.int = ...
    """Output only. The ID of the client customer. Read only."""

    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        client_customer : typing.Optional[typing.Text] = ...,
        hidden : typing.Optional[builtins.bool] = ...,
        level : typing.Optional[builtins.int] = ...,
        time_zone : typing.Optional[typing.Text] = ...,
        test_account : typing.Optional[builtins.bool] = ...,
        manager : typing.Optional[builtins.bool] = ...,
        descriptive_name : typing.Optional[typing.Text] = ...,
        currency_code : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_client_customer",b"_client_customer","_currency_code",b"_currency_code","_descriptive_name",b"_descriptive_name","_hidden",b"_hidden","_id",b"_id","_level",b"_level","_manager",b"_manager","_test_account",b"_test_account","_time_zone",b"_time_zone","client_customer",b"client_customer","currency_code",b"currency_code","descriptive_name",b"descriptive_name","hidden",b"hidden","id",b"id","level",b"level","manager",b"manager","test_account",b"test_account","time_zone",b"time_zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_client_customer",b"_client_customer","_currency_code",b"_currency_code","_descriptive_name",b"_descriptive_name","_hidden",b"_hidden","_id",b"_id","_level",b"_level","_manager",b"_manager","_test_account",b"_test_account","_time_zone",b"_time_zone","client_customer",b"client_customer","currency_code",b"currency_code","descriptive_name",b"descriptive_name","hidden",b"hidden","id",b"id","level",b"level","manager",b"manager","resource_name",b"resource_name","test_account",b"test_account","time_zone",b"time_zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_client_customer",b"_client_customer"]) -> typing.Optional[typing_extensions.Literal["client_customer"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_currency_code",b"_currency_code"]) -> typing.Optional[typing_extensions.Literal["currency_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_descriptive_name",b"_descriptive_name"]) -> typing.Optional[typing_extensions.Literal["descriptive_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_hidden",b"_hidden"]) -> typing.Optional[typing_extensions.Literal["hidden"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_level",b"_level"]) -> typing.Optional[typing_extensions.Literal["level"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_manager",b"_manager"]) -> typing.Optional[typing_extensions.Literal["manager"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_test_account",b"_test_account"]) -> typing.Optional[typing_extensions.Literal["test_account"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_time_zone",b"_time_zone"]) -> typing.Optional[typing_extensions.Literal["time_zone"]]: ...
global___CustomerClient = CustomerClient
