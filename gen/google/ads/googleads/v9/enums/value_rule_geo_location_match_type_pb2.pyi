"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ValueRuleGeoLocationMatchTypeEnum(google.protobuf.message.Message):
    """Proto file describing conversion value rule geo location match type.

    Container for enum describing possible geographic location matching types
    used in a conversion value rule.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ValueRuleGeoLocationMatchType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ValueRuleGeoLocationMatchTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ValueRuleGeoLocationMatchType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: ValueRuleGeoLocationMatchTypeEnum.ValueRuleGeoLocationMatchType.ValueType = ...  # 0
        """Not specified."""

        UNKNOWN: ValueRuleGeoLocationMatchTypeEnum.ValueRuleGeoLocationMatchType.ValueType = ...  # 1
        """Used for return value only. Represents value unknown in this version."""

        ANY: ValueRuleGeoLocationMatchTypeEnum.ValueRuleGeoLocationMatchType.ValueType = ...  # 2
        """Either Area of Interest or Location of Presence can be used to match."""

        LOCATION_OF_PRESENCE: ValueRuleGeoLocationMatchTypeEnum.ValueRuleGeoLocationMatchType.ValueType = ...  # 3
        """Only Location of Presence can be used to match."""

    class ValueRuleGeoLocationMatchType(_ValueRuleGeoLocationMatchType, metaclass=_ValueRuleGeoLocationMatchTypeEnumTypeWrapper):
        """Possible geographic location matching types."""
        pass

    UNSPECIFIED: ValueRuleGeoLocationMatchTypeEnum.ValueRuleGeoLocationMatchType.ValueType = ...  # 0
    """Not specified."""

    UNKNOWN: ValueRuleGeoLocationMatchTypeEnum.ValueRuleGeoLocationMatchType.ValueType = ...  # 1
    """Used for return value only. Represents value unknown in this version."""

    ANY: ValueRuleGeoLocationMatchTypeEnum.ValueRuleGeoLocationMatchType.ValueType = ...  # 2
    """Either Area of Interest or Location of Presence can be used to match."""

    LOCATION_OF_PRESENCE: ValueRuleGeoLocationMatchTypeEnum.ValueRuleGeoLocationMatchType.ValueType = ...  # 3
    """Only Location of Presence can be used to match."""


    def __init__(self,
        ) -> None: ...
global___ValueRuleGeoLocationMatchTypeEnum = ValueRuleGeoLocationMatchTypeEnum
