"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ValueRuleOperationEnum(google.protobuf.message.Message):
    """Proto file describing conversion value rule operation.

    Container for enum describing possible operations for value rules which are
    executed when rules are triggered.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ValueRuleOperation:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ValueRuleOperationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ValueRuleOperation.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: ValueRuleOperationEnum.ValueRuleOperation.ValueType = ...  # 0
        """Not specified."""

        UNKNOWN: ValueRuleOperationEnum.ValueRuleOperation.ValueType = ...  # 1
        """Used for return value only. Represents value unknown in this version."""

        ADD: ValueRuleOperationEnum.ValueRuleOperation.ValueType = ...  # 2
        """Add provided value to conversion value."""

        MULTIPLY: ValueRuleOperationEnum.ValueRuleOperation.ValueType = ...  # 3
        """Multiply conversion value by provided value."""

        SET: ValueRuleOperationEnum.ValueRuleOperation.ValueType = ...  # 4
        """Set conversion value to provided value."""

    class ValueRuleOperation(_ValueRuleOperation, metaclass=_ValueRuleOperationEnumTypeWrapper):
        """Possible operations of the action of a conversion value rule."""
        pass

    UNSPECIFIED: ValueRuleOperationEnum.ValueRuleOperation.ValueType = ...  # 0
    """Not specified."""

    UNKNOWN: ValueRuleOperationEnum.ValueRuleOperation.ValueType = ...  # 1
    """Used for return value only. Represents value unknown in this version."""

    ADD: ValueRuleOperationEnum.ValueRuleOperation.ValueType = ...  # 2
    """Add provided value to conversion value."""

    MULTIPLY: ValueRuleOperationEnum.ValueRuleOperation.ValueType = ...  # 3
    """Multiply conversion value by provided value."""

    SET: ValueRuleOperationEnum.ValueRuleOperation.ValueType = ...  # 4
    """Set conversion value to provided value."""


    def __init__(self,
        ) -> None: ...
global___ValueRuleOperationEnum = ValueRuleOperationEnum
