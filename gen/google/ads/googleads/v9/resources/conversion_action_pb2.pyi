"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v9.common.tag_snippet_pb2
import google.ads.googleads.v9.enums.attribution_model_pb2
import google.ads.googleads.v9.enums.conversion_action_category_pb2
import google.ads.googleads.v9.enums.conversion_action_counting_type_pb2
import google.ads.googleads.v9.enums.conversion_action_status_pb2
import google.ads.googleads.v9.enums.conversion_action_type_pb2
import google.ads.googleads.v9.enums.conversion_origin_pb2
import google.ads.googleads.v9.enums.data_driven_model_status_pb2
import google.ads.googleads.v9.enums.mobile_app_vendor_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ConversionAction(google.protobuf.message.Message):
    """Proto file describing the Conversion Action resource.

    A conversion action.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AttributionModelSettings(google.protobuf.message.Message):
        """Settings related to this conversion action's attribution model."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ATTRIBUTION_MODEL_FIELD_NUMBER: builtins.int
        DATA_DRIVEN_MODEL_STATUS_FIELD_NUMBER: builtins.int
        attribution_model: google.ads.googleads.v9.enums.attribution_model_pb2.AttributionModelEnum.AttributionModel.ValueType = ...
        """The attribution model type of this conversion action."""

        data_driven_model_status: google.ads.googleads.v9.enums.data_driven_model_status_pb2.DataDrivenModelStatusEnum.DataDrivenModelStatus.ValueType = ...
        """Output only. The status of the data-driven attribution model for the conversion
        action.
        """

        def __init__(self,
            *,
            attribution_model : google.ads.googleads.v9.enums.attribution_model_pb2.AttributionModelEnum.AttributionModel.ValueType = ...,
            data_driven_model_status : google.ads.googleads.v9.enums.data_driven_model_status_pb2.DataDrivenModelStatusEnum.DataDrivenModelStatus.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["attribution_model",b"attribution_model","data_driven_model_status",b"data_driven_model_status"]) -> None: ...

    class ValueSettings(google.protobuf.message.Message):
        """Settings related to the value for conversion events associated with this
        conversion action.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DEFAULT_VALUE_FIELD_NUMBER: builtins.int
        DEFAULT_CURRENCY_CODE_FIELD_NUMBER: builtins.int
        ALWAYS_USE_DEFAULT_VALUE_FIELD_NUMBER: builtins.int
        default_value: builtins.float = ...
        """The value to use when conversion events for this conversion action are
        sent with an invalid, disallowed or missing value, or when
        this conversion action is configured to always use the default value.
        """

        default_currency_code: typing.Text = ...
        """The currency code to use when conversion events for this conversion
        action are sent with an invalid or missing currency code, or when this
        conversion action is configured to always use the default value.
        """

        always_use_default_value: builtins.bool = ...
        """Controls whether the default value and default currency code are used in
        place of the value and currency code specified in conversion events for
        this conversion action.
        """

        def __init__(self,
            *,
            default_value : typing.Optional[builtins.float] = ...,
            default_currency_code : typing.Optional[typing.Text] = ...,
            always_use_default_value : typing.Optional[builtins.bool] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_always_use_default_value",b"_always_use_default_value","_default_currency_code",b"_default_currency_code","_default_value",b"_default_value","always_use_default_value",b"always_use_default_value","default_currency_code",b"default_currency_code","default_value",b"default_value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_always_use_default_value",b"_always_use_default_value","_default_currency_code",b"_default_currency_code","_default_value",b"_default_value","always_use_default_value",b"always_use_default_value","default_currency_code",b"default_currency_code","default_value",b"default_value"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_always_use_default_value",b"_always_use_default_value"]) -> typing.Optional[typing_extensions.Literal["always_use_default_value"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_currency_code",b"_default_currency_code"]) -> typing.Optional[typing_extensions.Literal["default_currency_code"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_value",b"_default_value"]) -> typing.Optional[typing_extensions.Literal["default_value"]]: ...

    class ThirdPartyAppAnalyticsSettings(google.protobuf.message.Message):
        """Settings related to a third party app analytics conversion action."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        EVENT_NAME_FIELD_NUMBER: builtins.int
        PROVIDER_NAME_FIELD_NUMBER: builtins.int
        event_name: typing.Text = ...
        """Output only. The event name of a third-party app analytics conversion."""

        provider_name: typing.Text = ...
        """Output only. Name of the third-party app analytics provider."""

        def __init__(self,
            *,
            event_name : typing.Optional[typing.Text] = ...,
            provider_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_event_name",b"_event_name","event_name",b"event_name"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_event_name",b"_event_name","event_name",b"event_name","provider_name",b"provider_name"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_event_name",b"_event_name"]) -> typing.Optional[typing_extensions.Literal["event_name"]]: ...

    class FirebaseSettings(google.protobuf.message.Message):
        """Settings related to a Firebase conversion action."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        EVENT_NAME_FIELD_NUMBER: builtins.int
        PROJECT_ID_FIELD_NUMBER: builtins.int
        event_name: typing.Text = ...
        """Output only. The event name of a Firebase conversion."""

        project_id: typing.Text = ...
        """Output only. The Firebase project ID of the conversion."""

        def __init__(self,
            *,
            event_name : typing.Optional[typing.Text] = ...,
            project_id : typing.Optional[typing.Text] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_event_name",b"_event_name","_project_id",b"_project_id","event_name",b"event_name","project_id",b"project_id"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_event_name",b"_event_name","_project_id",b"_project_id","event_name",b"event_name","project_id",b"project_id"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_event_name",b"_event_name"]) -> typing.Optional[typing_extensions.Literal["event_name"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_project_id",b"_project_id"]) -> typing.Optional[typing_extensions.Literal["project_id"]]: ...

    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    ORIGIN_FIELD_NUMBER: builtins.int
    PRIMARY_FOR_GOAL_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    OWNER_CUSTOMER_FIELD_NUMBER: builtins.int
    INCLUDE_IN_CONVERSIONS_METRIC_FIELD_NUMBER: builtins.int
    CLICK_THROUGH_LOOKBACK_WINDOW_DAYS_FIELD_NUMBER: builtins.int
    VIEW_THROUGH_LOOKBACK_WINDOW_DAYS_FIELD_NUMBER: builtins.int
    VALUE_SETTINGS_FIELD_NUMBER: builtins.int
    COUNTING_TYPE_FIELD_NUMBER: builtins.int
    ATTRIBUTION_MODEL_SETTINGS_FIELD_NUMBER: builtins.int
    TAG_SNIPPETS_FIELD_NUMBER: builtins.int
    PHONE_CALL_DURATION_SECONDS_FIELD_NUMBER: builtins.int
    APP_ID_FIELD_NUMBER: builtins.int
    MOBILE_APP_VENDOR_FIELD_NUMBER: builtins.int
    FIREBASE_SETTINGS_FIELD_NUMBER: builtins.int
    THIRD_PARTY_APP_ANALYTICS_SETTINGS_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """Immutable. The resource name of the conversion action.
    Conversion action resource names have the form:

    `customers/{customer_id}/conversionActions/{conversion_action_id}`
    """

    id: builtins.int = ...
    """Output only. The ID of the conversion action."""

    name: typing.Text = ...
    """The name of the conversion action.

    This field is required and should not be empty when creating new
    conversion actions.
    """

    status: google.ads.googleads.v9.enums.conversion_action_status_pb2.ConversionActionStatusEnum.ConversionActionStatus.ValueType = ...
    """The status of this conversion action for conversion event accrual."""

    type: google.ads.googleads.v9.enums.conversion_action_type_pb2.ConversionActionTypeEnum.ConversionActionType.ValueType = ...
    """Immutable. The type of this conversion action."""

    origin: google.ads.googleads.v9.enums.conversion_origin_pb2.ConversionOriginEnum.ConversionOrigin.ValueType = ...
    """Output only. The conversion origin of this conversion action."""

    primary_for_goal: builtins.bool = ...
    """If a conversion action’s primary_for_goal bit is false, the conversion
    action is non-biddable for all campaigns regardless of their customer
    conversion goal or campaign conversion goal.
    However, custom conversion goals do not respect primary_for_goal, so if
    a campaign has a custom conversion goal configured with a
    primary_for_goal = false conversion action, that conversion action is
    still biddable.
    """

    category: google.ads.googleads.v9.enums.conversion_action_category_pb2.ConversionActionCategoryEnum.ConversionActionCategory.ValueType = ...
    """The category of conversions reported for this conversion action."""

    owner_customer: typing.Text = ...
    """Output only. The resource name of the conversion action owner customer, or null if this
    is a system-defined conversion action.
    """

    include_in_conversions_metric: builtins.bool = ...
    """Whether this conversion action should be included in the "conversions"
    metric.
    """

    click_through_lookback_window_days: builtins.int = ...
    """The maximum number of days that may elapse between an interaction
    (e.g., a click) and a conversion event.
    """

    view_through_lookback_window_days: builtins.int = ...
    """The maximum number of days which may elapse between an impression and a
    conversion without an interaction.
    """

    @property
    def value_settings(self) -> global___ConversionAction.ValueSettings:
        """Settings related to the value for conversion events associated with this
        conversion action.
        """
        pass
    counting_type: google.ads.googleads.v9.enums.conversion_action_counting_type_pb2.ConversionActionCountingTypeEnum.ConversionActionCountingType.ValueType = ...
    """How to count conversion events for the conversion action."""

    @property
    def attribution_model_settings(self) -> global___ConversionAction.AttributionModelSettings:
        """Settings related to this conversion action's attribution model."""
        pass
    @property
    def tag_snippets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v9.common.tag_snippet_pb2.TagSnippet]:
        """Output only. The snippets used for tracking conversions."""
        pass
    phone_call_duration_seconds: builtins.int = ...
    """The phone call duration in seconds after which a conversion should be
    reported for this conversion action.

    The value must be between 0 and 10000, inclusive.
    """

    app_id: typing.Text = ...
    """App ID for an app conversion action."""

    mobile_app_vendor: google.ads.googleads.v9.enums.mobile_app_vendor_pb2.MobileAppVendorEnum.MobileAppVendor.ValueType = ...
    """Output only. Mobile app vendor for an app conversion action."""

    @property
    def firebase_settings(self) -> global___ConversionAction.FirebaseSettings:
        """Output only. Firebase settings for Firebase conversion types."""
        pass
    @property
    def third_party_app_analytics_settings(self) -> global___ConversionAction.ThirdPartyAppAnalyticsSettings:
        """Output only. Third Party App Analytics settings for third party conversion types."""
        pass
    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        id : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        status : google.ads.googleads.v9.enums.conversion_action_status_pb2.ConversionActionStatusEnum.ConversionActionStatus.ValueType = ...,
        type : google.ads.googleads.v9.enums.conversion_action_type_pb2.ConversionActionTypeEnum.ConversionActionType.ValueType = ...,
        origin : google.ads.googleads.v9.enums.conversion_origin_pb2.ConversionOriginEnum.ConversionOrigin.ValueType = ...,
        primary_for_goal : builtins.bool = ...,
        category : google.ads.googleads.v9.enums.conversion_action_category_pb2.ConversionActionCategoryEnum.ConversionActionCategory.ValueType = ...,
        owner_customer : typing.Optional[typing.Text] = ...,
        include_in_conversions_metric : typing.Optional[builtins.bool] = ...,
        click_through_lookback_window_days : typing.Optional[builtins.int] = ...,
        view_through_lookback_window_days : typing.Optional[builtins.int] = ...,
        value_settings : typing.Optional[global___ConversionAction.ValueSettings] = ...,
        counting_type : google.ads.googleads.v9.enums.conversion_action_counting_type_pb2.ConversionActionCountingTypeEnum.ConversionActionCountingType.ValueType = ...,
        attribution_model_settings : typing.Optional[global___ConversionAction.AttributionModelSettings] = ...,
        tag_snippets : typing.Optional[typing.Iterable[google.ads.googleads.v9.common.tag_snippet_pb2.TagSnippet]] = ...,
        phone_call_duration_seconds : typing.Optional[builtins.int] = ...,
        app_id : typing.Optional[typing.Text] = ...,
        mobile_app_vendor : google.ads.googleads.v9.enums.mobile_app_vendor_pb2.MobileAppVendorEnum.MobileAppVendor.ValueType = ...,
        firebase_settings : typing.Optional[global___ConversionAction.FirebaseSettings] = ...,
        third_party_app_analytics_settings : typing.Optional[global___ConversionAction.ThirdPartyAppAnalyticsSettings] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_app_id",b"_app_id","_click_through_lookback_window_days",b"_click_through_lookback_window_days","_id",b"_id","_include_in_conversions_metric",b"_include_in_conversions_metric","_name",b"_name","_owner_customer",b"_owner_customer","_phone_call_duration_seconds",b"_phone_call_duration_seconds","_view_through_lookback_window_days",b"_view_through_lookback_window_days","app_id",b"app_id","attribution_model_settings",b"attribution_model_settings","click_through_lookback_window_days",b"click_through_lookback_window_days","firebase_settings",b"firebase_settings","id",b"id","include_in_conversions_metric",b"include_in_conversions_metric","name",b"name","owner_customer",b"owner_customer","phone_call_duration_seconds",b"phone_call_duration_seconds","third_party_app_analytics_settings",b"third_party_app_analytics_settings","value_settings",b"value_settings","view_through_lookback_window_days",b"view_through_lookback_window_days"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_app_id",b"_app_id","_click_through_lookback_window_days",b"_click_through_lookback_window_days","_id",b"_id","_include_in_conversions_metric",b"_include_in_conversions_metric","_name",b"_name","_owner_customer",b"_owner_customer","_phone_call_duration_seconds",b"_phone_call_duration_seconds","_view_through_lookback_window_days",b"_view_through_lookback_window_days","app_id",b"app_id","attribution_model_settings",b"attribution_model_settings","category",b"category","click_through_lookback_window_days",b"click_through_lookback_window_days","counting_type",b"counting_type","firebase_settings",b"firebase_settings","id",b"id","include_in_conversions_metric",b"include_in_conversions_metric","mobile_app_vendor",b"mobile_app_vendor","name",b"name","origin",b"origin","owner_customer",b"owner_customer","phone_call_duration_seconds",b"phone_call_duration_seconds","primary_for_goal",b"primary_for_goal","resource_name",b"resource_name","status",b"status","tag_snippets",b"tag_snippets","third_party_app_analytics_settings",b"third_party_app_analytics_settings","type",b"type","value_settings",b"value_settings","view_through_lookback_window_days",b"view_through_lookback_window_days"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_app_id",b"_app_id"]) -> typing.Optional[typing_extensions.Literal["app_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_click_through_lookback_window_days",b"_click_through_lookback_window_days"]) -> typing.Optional[typing_extensions.Literal["click_through_lookback_window_days"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_in_conversions_metric",b"_include_in_conversions_metric"]) -> typing.Optional[typing_extensions.Literal["include_in_conversions_metric"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_owner_customer",b"_owner_customer"]) -> typing.Optional[typing_extensions.Literal["owner_customer"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_phone_call_duration_seconds",b"_phone_call_duration_seconds"]) -> typing.Optional[typing_extensions.Literal["phone_call_duration_seconds"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_view_through_lookback_window_days",b"_view_through_lookback_window_days"]) -> typing.Optional[typing_extensions.Literal["view_through_lookback_window_days"]]: ...
global___ConversionAction = ConversionAction
