"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v9.enums.search_term_targeting_status_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SearchTermView(google.protobuf.message.Message):
    """Proto file describing the SearchTermView resource.

    A search term view with metrics aggregated by search term at the ad group
    level.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    SEARCH_TERM_FIELD_NUMBER: builtins.int
    AD_GROUP_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """Output only. The resource name of the search term view.
    Search term view resource names have the form:

    `customers/{customer_id}/searchTermViews/{campaign_id}~{ad_group_id}~{URL-base64_search_term}`
    """

    search_term: typing.Text = ...
    """Output only. The search term."""

    ad_group: typing.Text = ...
    """Output only. The ad group the search term served in."""

    status: google.ads.googleads.v9.enums.search_term_targeting_status_pb2.SearchTermTargetingStatusEnum.SearchTermTargetingStatus.ValueType = ...
    """Output only. Indicates whether the search term is currently one of your
    targeted or excluded keywords.
    """

    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        search_term : typing.Optional[typing.Text] = ...,
        ad_group : typing.Optional[typing.Text] = ...,
        status : google.ads.googleads.v9.enums.search_term_targeting_status_pb2.SearchTermTargetingStatusEnum.SearchTermTargetingStatus.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ad_group",b"_ad_group","_search_term",b"_search_term","ad_group",b"ad_group","search_term",b"search_term"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ad_group",b"_ad_group","_search_term",b"_search_term","ad_group",b"ad_group","resource_name",b"resource_name","search_term",b"search_term","status",b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ad_group",b"_ad_group"]) -> typing.Optional[typing_extensions.Literal["ad_group"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_term",b"_search_term"]) -> typing.Optional[typing_extensions.Literal["search_term"]]: ...
global___SearchTermView = SearchTermView
