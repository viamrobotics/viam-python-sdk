"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v8.enums.interaction_event_type_pb2
import google.ads.googleads.v8.enums.quality_score_bucket_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Metrics(google.protobuf.message.Message):
    """Proto file describing metrics.

    Metrics data.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ABSOLUTE_TOP_IMPRESSION_PERCENTAGE_FIELD_NUMBER: builtins.int
    ACTIVE_VIEW_CPM_FIELD_NUMBER: builtins.int
    ACTIVE_VIEW_CTR_FIELD_NUMBER: builtins.int
    ACTIVE_VIEW_IMPRESSIONS_FIELD_NUMBER: builtins.int
    ACTIVE_VIEW_MEASURABILITY_FIELD_NUMBER: builtins.int
    ACTIVE_VIEW_MEASURABLE_COST_MICROS_FIELD_NUMBER: builtins.int
    ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_FIELD_NUMBER: builtins.int
    ACTIVE_VIEW_VIEWABILITY_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_FROM_INTERACTIONS_RATE_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_VALUE_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_VALUE_BY_CONVERSION_DATE_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_VALUE_PER_COST_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_FROM_CLICK_TO_CALL_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_FROM_DIRECTIONS_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_FROM_INTERACTIONS_VALUE_PER_INTERACTION_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_FROM_MENU_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_FROM_ORDER_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_FROM_OTHER_ENGAGEMENT_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_FROM_STORE_VISIT_FIELD_NUMBER: builtins.int
    ALL_CONVERSIONS_FROM_STORE_WEBSITE_FIELD_NUMBER: builtins.int
    AVERAGE_COST_FIELD_NUMBER: builtins.int
    AVERAGE_CPC_FIELD_NUMBER: builtins.int
    AVERAGE_CPE_FIELD_NUMBER: builtins.int
    AVERAGE_CPM_FIELD_NUMBER: builtins.int
    AVERAGE_CPV_FIELD_NUMBER: builtins.int
    AVERAGE_PAGE_VIEWS_FIELD_NUMBER: builtins.int
    AVERAGE_TIME_ON_SITE_FIELD_NUMBER: builtins.int
    BENCHMARK_AVERAGE_MAX_CPC_FIELD_NUMBER: builtins.int
    BENCHMARK_CTR_FIELD_NUMBER: builtins.int
    BOUNCE_RATE_FIELD_NUMBER: builtins.int
    CLICKS_FIELD_NUMBER: builtins.int
    COMBINED_CLICKS_FIELD_NUMBER: builtins.int
    COMBINED_CLICKS_PER_QUERY_FIELD_NUMBER: builtins.int
    COMBINED_QUERIES_FIELD_NUMBER: builtins.int
    CONTENT_BUDGET_LOST_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    CONTENT_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    CONVERSION_LAST_RECEIVED_REQUEST_DATE_TIME_FIELD_NUMBER: builtins.int
    CONVERSION_LAST_CONVERSION_DATE_FIELD_NUMBER: builtins.int
    CONTENT_RANK_LOST_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    CONVERSIONS_FROM_INTERACTIONS_RATE_FIELD_NUMBER: builtins.int
    CONVERSIONS_VALUE_FIELD_NUMBER: builtins.int
    CONVERSIONS_VALUE_BY_CONVERSION_DATE_FIELD_NUMBER: builtins.int
    CONVERSIONS_VALUE_PER_COST_FIELD_NUMBER: builtins.int
    CONVERSIONS_FROM_INTERACTIONS_VALUE_PER_INTERACTION_FIELD_NUMBER: builtins.int
    CONVERSIONS_FIELD_NUMBER: builtins.int
    CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER: builtins.int
    COST_MICROS_FIELD_NUMBER: builtins.int
    COST_PER_ALL_CONVERSIONS_FIELD_NUMBER: builtins.int
    COST_PER_CONVERSION_FIELD_NUMBER: builtins.int
    COST_PER_CURRENT_MODEL_ATTRIBUTED_CONVERSION_FIELD_NUMBER: builtins.int
    CROSS_DEVICE_CONVERSIONS_FIELD_NUMBER: builtins.int
    CTR_FIELD_NUMBER: builtins.int
    CURRENT_MODEL_ATTRIBUTED_CONVERSIONS_FIELD_NUMBER: builtins.int
    CURRENT_MODEL_ATTRIBUTED_CONVERSIONS_FROM_INTERACTIONS_RATE_FIELD_NUMBER: builtins.int
    CURRENT_MODEL_ATTRIBUTED_CONVERSIONS_FROM_INTERACTIONS_VALUE_PER_INTERACTION_FIELD_NUMBER: builtins.int
    CURRENT_MODEL_ATTRIBUTED_CONVERSIONS_VALUE_FIELD_NUMBER: builtins.int
    CURRENT_MODEL_ATTRIBUTED_CONVERSIONS_VALUE_PER_COST_FIELD_NUMBER: builtins.int
    ENGAGEMENT_RATE_FIELD_NUMBER: builtins.int
    ENGAGEMENTS_FIELD_NUMBER: builtins.int
    HOTEL_AVERAGE_LEAD_VALUE_MICROS_FIELD_NUMBER: builtins.int
    HOTEL_PRICE_DIFFERENCE_PERCENTAGE_FIELD_NUMBER: builtins.int
    HOTEL_ELIGIBLE_IMPRESSIONS_FIELD_NUMBER: builtins.int
    HISTORICAL_CREATIVE_QUALITY_SCORE_FIELD_NUMBER: builtins.int
    HISTORICAL_LANDING_PAGE_QUALITY_SCORE_FIELD_NUMBER: builtins.int
    HISTORICAL_QUALITY_SCORE_FIELD_NUMBER: builtins.int
    HISTORICAL_SEARCH_PREDICTED_CTR_FIELD_NUMBER: builtins.int
    GMAIL_FORWARDS_FIELD_NUMBER: builtins.int
    GMAIL_SAVES_FIELD_NUMBER: builtins.int
    GMAIL_SECONDARY_CLICKS_FIELD_NUMBER: builtins.int
    IMPRESSIONS_FROM_STORE_REACH_FIELD_NUMBER: builtins.int
    IMPRESSIONS_FIELD_NUMBER: builtins.int
    INTERACTION_RATE_FIELD_NUMBER: builtins.int
    INTERACTIONS_FIELD_NUMBER: builtins.int
    INTERACTION_EVENT_TYPES_FIELD_NUMBER: builtins.int
    INVALID_CLICK_RATE_FIELD_NUMBER: builtins.int
    INVALID_CLICKS_FIELD_NUMBER: builtins.int
    MESSAGE_CHATS_FIELD_NUMBER: builtins.int
    MESSAGE_IMPRESSIONS_FIELD_NUMBER: builtins.int
    MESSAGE_CHAT_RATE_FIELD_NUMBER: builtins.int
    MOBILE_FRIENDLY_CLICKS_PERCENTAGE_FIELD_NUMBER: builtins.int
    OPTIMIZATION_SCORE_UPLIFT_FIELD_NUMBER: builtins.int
    OPTIMIZATION_SCORE_URL_FIELD_NUMBER: builtins.int
    ORGANIC_CLICKS_FIELD_NUMBER: builtins.int
    ORGANIC_CLICKS_PER_QUERY_FIELD_NUMBER: builtins.int
    ORGANIC_IMPRESSIONS_FIELD_NUMBER: builtins.int
    ORGANIC_IMPRESSIONS_PER_QUERY_FIELD_NUMBER: builtins.int
    ORGANIC_QUERIES_FIELD_NUMBER: builtins.int
    PERCENT_NEW_VISITORS_FIELD_NUMBER: builtins.int
    PHONE_CALLS_FIELD_NUMBER: builtins.int
    PHONE_IMPRESSIONS_FIELD_NUMBER: builtins.int
    PHONE_THROUGH_RATE_FIELD_NUMBER: builtins.int
    RELATIVE_CTR_FIELD_NUMBER: builtins.int
    SEARCH_ABSOLUTE_TOP_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    SEARCH_BUDGET_LOST_ABSOLUTE_TOP_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    SEARCH_BUDGET_LOST_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    SEARCH_BUDGET_LOST_TOP_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    SEARCH_CLICK_SHARE_FIELD_NUMBER: builtins.int
    SEARCH_EXACT_MATCH_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    SEARCH_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    SEARCH_RANK_LOST_ABSOLUTE_TOP_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    SEARCH_RANK_LOST_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    SEARCH_RANK_LOST_TOP_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    SEARCH_TOP_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    SPEED_SCORE_FIELD_NUMBER: builtins.int
    TOP_IMPRESSION_PERCENTAGE_FIELD_NUMBER: builtins.int
    VALID_ACCELERATED_MOBILE_PAGES_CLICKS_PERCENTAGE_FIELD_NUMBER: builtins.int
    VALUE_PER_ALL_CONVERSIONS_FIELD_NUMBER: builtins.int
    VALUE_PER_ALL_CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER: builtins.int
    VALUE_PER_CONVERSION_FIELD_NUMBER: builtins.int
    VALUE_PER_CONVERSIONS_BY_CONVERSION_DATE_FIELD_NUMBER: builtins.int
    VALUE_PER_CURRENT_MODEL_ATTRIBUTED_CONVERSION_FIELD_NUMBER: builtins.int
    VIDEO_QUARTILE_P100_RATE_FIELD_NUMBER: builtins.int
    VIDEO_QUARTILE_P25_RATE_FIELD_NUMBER: builtins.int
    VIDEO_QUARTILE_P50_RATE_FIELD_NUMBER: builtins.int
    VIDEO_QUARTILE_P75_RATE_FIELD_NUMBER: builtins.int
    VIDEO_VIEW_RATE_FIELD_NUMBER: builtins.int
    VIDEO_VIEWS_FIELD_NUMBER: builtins.int
    VIEW_THROUGH_CONVERSIONS_FIELD_NUMBER: builtins.int
    SK_AD_NETWORK_CONVERSIONS_FIELD_NUMBER: builtins.int
    absolute_top_impression_percentage: builtins.float = ...
    """The percent of your ad impressions that are shown as the very first ad
    above the organic search results.
    """

    active_view_cpm: builtins.float = ...
    """Average cost of viewable impressions (`active_view_impressions`)."""

    active_view_ctr: builtins.float = ...
    """Active view measurable clicks divided by active view viewable impressions.
    This metric is reported only for display network.
    """

    active_view_impressions: builtins.int = ...
    """A measurement of how often your ad has become viewable on a Display
    Network site.
    """

    active_view_measurability: builtins.float = ...
    """The ratio of impressions that could be measured by Active View over the
    number of served impressions.
    """

    active_view_measurable_cost_micros: builtins.int = ...
    """The cost of the impressions you received that were measurable by Active
    View.
    """

    active_view_measurable_impressions: builtins.int = ...
    """The number of times your ads are appearing on placements in positions
    where they can be seen.
    """

    active_view_viewability: builtins.float = ...
    """The percentage of time when your ad appeared on an Active View enabled site
    (measurable impressions) and was viewable (viewable impressions).
    """

    all_conversions_from_interactions_rate: builtins.float = ...
    """All conversions from interactions (as oppose to view through conversions)
    divided by the number of ad interactions.
    """

    all_conversions_value: builtins.float = ...
    """The value of all conversions."""

    all_conversions_value_by_conversion_date: builtins.float = ...
    """The value of all conversions. When this column is selected with date, the
    values in date column means the conversion date. Details for the
    by_conversion_date columns are available at
    https://support.google.com/google-ads/answer/9549009.
    """

    all_conversions: builtins.float = ...
    """The total number of conversions. This includes all conversions regardless
    of the value of include_in_conversions_metric.
    """

    all_conversions_by_conversion_date: builtins.float = ...
    """The total number of conversions. This includes all conversions regardless
    of the value of include_in_conversions_metric. When this column is selected
    with date, the values in date column means the conversion date. Details for
    the by_conversion_date columns are available at
    https://support.google.com/google-ads/answer/9549009.
    """

    all_conversions_value_per_cost: builtins.float = ...
    """The value of all conversions divided by the total cost of ad interactions
    (such as clicks for text ads or views for video ads).
    """

    all_conversions_from_click_to_call: builtins.float = ...
    """The number of times people clicked the "Call" button to call a store during
    or after clicking an ad. This number doesn't include whether or not calls
    were connected, or the duration of any calls.
    This metric applies to feed items only.
    """

    all_conversions_from_directions: builtins.float = ...
    """The number of times people clicked a "Get directions" button to navigate to
    a store after clicking an ad.
    This metric applies to feed items only.
    """

    all_conversions_from_interactions_value_per_interaction: builtins.float = ...
    """The value of all conversions from interactions divided by the total number
    of interactions.
    """

    all_conversions_from_menu: builtins.float = ...
    """The number of times people clicked a link to view a store's menu after
    clicking an ad.
    This metric applies to feed items only.
    """

    all_conversions_from_order: builtins.float = ...
    """The number of times people placed an order at a store after clicking an ad.
    This metric applies to feed items only.
    """

    all_conversions_from_other_engagement: builtins.float = ...
    """The number of other conversions (for example, posting a review or saving a
    location for a store) that occurred after people clicked an ad.
    This metric applies to feed items only.
    """

    all_conversions_from_store_visit: builtins.float = ...
    """Estimated number of times people visited a store after clicking an ad.
    This metric applies to feed items only.
    """

    all_conversions_from_store_website: builtins.float = ...
    """The number of times that people were taken to a store's URL after clicking
    an ad.
    This metric applies to feed items only.
    """

    average_cost: builtins.float = ...
    """The average amount you pay per interaction. This amount is the total cost
    of your ads divided by the total number of interactions.
    """

    average_cpc: builtins.float = ...
    """The total cost of all clicks divided by the total number of clicks
    received.
    """

    average_cpe: builtins.float = ...
    """The average amount that you've been charged for an ad engagement. This
    amount is the total cost of all ad engagements divided by the total number
    of ad engagements.
    """

    average_cpm: builtins.float = ...
    """Average cost-per-thousand impressions (CPM)."""

    average_cpv: builtins.float = ...
    """The average amount you pay each time someone views your ad.
    The average CPV is defined by the total cost of all ad views divided by
    the number of views.
    """

    average_page_views: builtins.float = ...
    """Average number of pages viewed per session."""

    average_time_on_site: builtins.float = ...
    """Total duration of all sessions (in seconds) / number of sessions. Imported
    from Google Analytics.
    """

    benchmark_average_max_cpc: builtins.float = ...
    """An indication of how other advertisers are bidding on similar products."""

    benchmark_ctr: builtins.float = ...
    """An indication on how other advertisers' Shopping ads for similar products
    are performing based on how often people who see their ad click on it.
    """

    bounce_rate: builtins.float = ...
    """Percentage of clicks where the user only visited a single page on your
    site. Imported from Google Analytics.
    """

    clicks: builtins.int = ...
    """The number of clicks."""

    combined_clicks: builtins.int = ...
    """The number of times your ad or your site's listing in the unpaid
    results was clicked. See the help page at
    https://support.google.com/google-ads/answer/3097241 for details.
    """

    combined_clicks_per_query: builtins.float = ...
    """The number of times your ad or your site's listing in the unpaid
    results was clicked (combined_clicks) divided by combined_queries. See the
    help page at https://support.google.com/google-ads/answer/3097241 for
    details.
    """

    combined_queries: builtins.int = ...
    """The number of searches that returned pages from your site in the unpaid
    results or showed one of your text ads. See the help page at
    https://support.google.com/google-ads/answer/3097241 for details.
    """

    content_budget_lost_impression_share: builtins.float = ...
    """The estimated percent of times that your ad was eligible to show
    on the Display Network but didn't because your budget was too low.
    Note: Content budget lost impression share is reported in the range of 0
    to 0.9. Any value above 0.9 is reported as 0.9001.
    """

    content_impression_share: builtins.float = ...
    """The impressions you've received on the Display Network divided
    by the estimated number of impressions you were eligible to receive.
    Note: Content impression share is reported in the range of 0.1 to 1. Any
    value below 0.1 is reported as 0.0999.
    """

    conversion_last_received_request_date_time: typing.Text = ...
    """The last date/time a conversion tag for this conversion action successfully
    fired and was seen by Google Ads. This firing event may not have been the
    result of an attributable conversion (e.g. because the tag was fired from a
    browser that did not previously click an ad from an appropriate
    advertiser). The date/time is in the customer's time zone.
    """

    conversion_last_conversion_date: typing.Text = ...
    """The date of the most recent conversion for this conversion action. The date
    is in the customer's time zone.
    """

    content_rank_lost_impression_share: builtins.float = ...
    """The estimated percentage of impressions on the Display Network
    that your ads didn't receive due to poor Ad Rank.
    Note: Content rank lost impression share is reported in the range of 0
    to 0.9. Any value above 0.9 is reported as 0.9001.
    """

    conversions_from_interactions_rate: builtins.float = ...
    """Conversions from interactions divided by the number of ad interactions
    (such as clicks for text ads or views for video ads). This only includes
    conversion actions which include_in_conversions_metric attribute is set to
    true. If you use conversion-based bidding, your bid strategies will
    optimize for these conversions.
    """

    conversions_value: builtins.float = ...
    """The value of conversions. This only includes conversion actions which
    include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions.
    """

    conversions_value_by_conversion_date: builtins.float = ...
    """The value of conversions. This only includes conversion actions which
    include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions. When this column is selected with date, the values in date
    column means the conversion date. Details for the by_conversion_date
    columns are available at
    https://support.google.com/google-ads/answer/9549009.
    """

    conversions_value_per_cost: builtins.float = ...
    """The value of conversions divided by the cost of ad interactions. This only
    includes conversion actions which include_in_conversions_metric attribute
    is set to true. If you use conversion-based bidding, your bid strategies
    will optimize for these conversions.
    """

    conversions_from_interactions_value_per_interaction: builtins.float = ...
    """The value of conversions from interactions divided by the number of ad
    interactions. This only includes conversion actions which
    include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions.
    """

    conversions: builtins.float = ...
    """The number of conversions. This only includes conversion actions which
    include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions.
    """

    conversions_by_conversion_date: builtins.float = ...
    """The number of conversions. This only includes conversion actions which
    include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions. When this column is selected with date, the values in date
    column means the conversion date. Details for the by_conversion_date
    columns are available at
    https://support.google.com/google-ads/answer/9549009.
    """

    cost_micros: builtins.int = ...
    """The sum of your cost-per-click (CPC) and cost-per-thousand impressions
    (CPM) costs during this period.
    """

    cost_per_all_conversions: builtins.float = ...
    """The cost of ad interactions divided by all conversions."""

    cost_per_conversion: builtins.float = ...
    """The cost of ad interactions divided by conversions. This only includes
    conversion actions which include_in_conversions_metric attribute is set to
    true. If you use conversion-based bidding, your bid strategies will
    optimize for these conversions.
    """

    cost_per_current_model_attributed_conversion: builtins.float = ...
    """The cost of ad interactions divided by current model attributed
    conversions. This only includes conversion actions which
    include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions.
    """

    cross_device_conversions: builtins.float = ...
    """Conversions from when a customer clicks on a Google Ads ad on one device,
    then converts on a different device or browser.
    Cross-device conversions are already included in all_conversions.
    """

    ctr: builtins.float = ...
    """The number of clicks your ad receives (Clicks) divided by the number
    of times your ad is shown (Impressions).
    """

    current_model_attributed_conversions: builtins.float = ...
    """Shows how your historic conversions data would look under the attribution
    model you've currently selected. This only includes conversion actions
    which include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions.
    """

    current_model_attributed_conversions_from_interactions_rate: builtins.float = ...
    """Current model attributed conversions from interactions divided by the
    number of ad interactions (such as clicks for text ads or views for video
    ads). This only includes conversion actions which
    include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions.
    """

    current_model_attributed_conversions_from_interactions_value_per_interaction: builtins.float = ...
    """The value of current model attributed conversions from interactions divided
    by the number of ad interactions. This only includes conversion actions
    which include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions.
    """

    current_model_attributed_conversions_value: builtins.float = ...
    """The value of current model attributed conversions. This only includes
    conversion actions which include_in_conversions_metric attribute is set to
    true. If you use conversion-based bidding, your bid strategies will
    optimize for these conversions.
    """

    current_model_attributed_conversions_value_per_cost: builtins.float = ...
    """The value of current model attributed conversions divided by the cost of ad
    interactions. This only includes conversion actions which
    include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions.
    """

    engagement_rate: builtins.float = ...
    """How often people engage with your ad after it's shown to them. This is the
    number of ad expansions divided by the number of times your ad is shown.
    """

    engagements: builtins.int = ...
    """The number of engagements.
    An engagement occurs when a viewer expands your Lightbox ad. Also, in the
    future, other ad types may support engagement metrics.
    """

    hotel_average_lead_value_micros: builtins.float = ...
    """Average lead value based on clicks."""

    hotel_price_difference_percentage: builtins.float = ...
    """The average price difference between the price offered by reporting hotel
    advertiser and the cheapest price offered by the competing advertiser.
    """

    hotel_eligible_impressions: builtins.int = ...
    """The number of impressions that hotel partners could have had given their
    feed performance.
    """

    historical_creative_quality_score: google.ads.googleads.v8.enums.quality_score_bucket_pb2.QualityScoreBucketEnum.QualityScoreBucket.ValueType = ...
    """The creative historical quality score."""

    historical_landing_page_quality_score: google.ads.googleads.v8.enums.quality_score_bucket_pb2.QualityScoreBucketEnum.QualityScoreBucket.ValueType = ...
    """The quality of historical landing page experience."""

    historical_quality_score: builtins.int = ...
    """The historical quality score."""

    historical_search_predicted_ctr: google.ads.googleads.v8.enums.quality_score_bucket_pb2.QualityScoreBucketEnum.QualityScoreBucket.ValueType = ...
    """The historical search predicted click through rate (CTR)."""

    gmail_forwards: builtins.int = ...
    """The number of times the ad was forwarded to someone else as a message."""

    gmail_saves: builtins.int = ...
    """The number of times someone has saved your Gmail ad to their inbox as a
    message.
    """

    gmail_secondary_clicks: builtins.int = ...
    """The number of clicks to the landing page on the expanded state of Gmail
    ads.
    """

    impressions_from_store_reach: builtins.int = ...
    """The number of times a store's location-based ad was shown.
    This metric applies to feed items only.
    """

    impressions: builtins.int = ...
    """Count of how often your ad has appeared on a search results page or
    website on the Google Network.
    """

    interaction_rate: builtins.float = ...
    """How often people interact with your ad after it is shown to them.
    This is the number of interactions divided by the number of times your ad
    is shown.
    """

    interactions: builtins.int = ...
    """The number of interactions.
    An interaction is the main user action associated with an ad format-clicks
    for text and shopping ads, views for video ads, and so on.
    """

    @property
    def interaction_event_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[google.ads.googleads.v8.enums.interaction_event_type_pb2.InteractionEventTypeEnum.InteractionEventType.ValueType]:
        """The types of payable and free interactions."""
        pass
    invalid_click_rate: builtins.float = ...
    """The percentage of clicks filtered out of your total number of clicks
    (filtered + non-filtered clicks) during the reporting period.
    """

    invalid_clicks: builtins.int = ...
    """Number of clicks Google considers illegitimate and doesn't charge you for."""

    message_chats: builtins.int = ...
    """Number of message chats initiated for Click To Message impressions that
    were message tracking eligible.
    """

    message_impressions: builtins.int = ...
    """Number of Click To Message impressions that were message tracking eligible."""

    message_chat_rate: builtins.float = ...
    """Number of message chats initiated (message_chats) divided by the number
    of message impressions (message_impressions).
    Rate at which a user initiates a message chat from an ad impression with
    a messaging option and message tracking enabled.
    Note that this rate can be more than 1.0 for a given message impression.
    """

    mobile_friendly_clicks_percentage: builtins.float = ...
    """The percentage of mobile clicks that go to a mobile-friendly page."""

    optimization_score_uplift: builtins.float = ...
    """Total optimization score uplift of all recommendations."""

    optimization_score_url: typing.Text = ...
    """URL for the optimization score page in the Google Ads web interface.
    This metric can be selected from `customer` or `campaign`, and can be
    segmented by `segments.recommendation_type`. For example, `SELECT
    metrics.optimization_score_url, segments.recommendation_type FROM
    customer` will return a URL for each unique (customer, recommendation_type)
    combination.
    """

    organic_clicks: builtins.int = ...
    """The number of times someone clicked your site's listing in the unpaid
    results for a particular query. See the help page at
    https://support.google.com/google-ads/answer/3097241 for details.
    """

    organic_clicks_per_query: builtins.float = ...
    """The number of times someone clicked your site's listing in the unpaid
    results (organic_clicks) divided by the total number of searches that
    returned pages from your site (organic_queries). See the help page at
    https://support.google.com/google-ads/answer/3097241 for details.
    """

    organic_impressions: builtins.int = ...
    """The number of listings for your site in the unpaid search results. See the
    help page at https://support.google.com/google-ads/answer/3097241 for
    details.
    """

    organic_impressions_per_query: builtins.float = ...
    """The number of times a page from your site was listed in the unpaid search
    results (organic_impressions) divided by the number of searches returning
    your site's listing in the unpaid results (organic_queries). See the help
    page at https://support.google.com/google-ads/answer/3097241 for details.
    """

    organic_queries: builtins.int = ...
    """The total number of searches that returned your site's listing in the
    unpaid results. See the help page at
    https://support.google.com/google-ads/answer/3097241 for details.
    """

    percent_new_visitors: builtins.float = ...
    """Percentage of first-time sessions (from people who had never visited your
    site before). Imported from Google Analytics.
    """

    phone_calls: builtins.int = ...
    """Number of offline phone calls."""

    phone_impressions: builtins.int = ...
    """Number of offline phone impressions."""

    phone_through_rate: builtins.float = ...
    """Number of phone calls received (phone_calls) divided by the number of
    times your phone number is shown (phone_impressions).
    """

    relative_ctr: builtins.float = ...
    """Your clickthrough rate (Ctr) divided by the average clickthrough rate of
    all advertisers on the websites that show your ads. Measures how your ads
    perform on Display Network sites compared to other ads on the same sites.
    """

    search_absolute_top_impression_share: builtins.float = ...
    """The percentage of the customer's Shopping or Search ad impressions that are
    shown in the most prominent Shopping position. See
    https://support.google.com/google-ads/answer/7501826
    for details. Any value below 0.1 is reported as 0.0999.
    """

    search_budget_lost_absolute_top_impression_share: builtins.float = ...
    """The number estimating how often your ad wasn't the very first ad above the
    organic search results due to a low budget. Note: Search
    budget lost absolute top impression share is reported in the range of 0 to
    0.9. Any value above 0.9 is reported as 0.9001.
    """

    search_budget_lost_impression_share: builtins.float = ...
    """The estimated percent of times that your ad was eligible to show on the
    Search Network but didn't because your budget was too low. Note: Search
    budget lost impression share is reported in the range of 0 to 0.9. Any
    value above 0.9 is reported as 0.9001.
    """

    search_budget_lost_top_impression_share: builtins.float = ...
    """The number estimating how often your ad didn't show anywhere above the
    organic search results due to a low budget. Note: Search
    budget lost top impression share is reported in the range of 0 to 0.9. Any
    value above 0.9 is reported as 0.9001.
    """

    search_click_share: builtins.float = ...
    """The number of clicks you've received on the Search Network
    divided by the estimated number of clicks you were eligible to receive.
    Note: Search click share is reported in the range of 0.1 to 1. Any value
    below 0.1 is reported as 0.0999.
    """

    search_exact_match_impression_share: builtins.float = ...
    """The impressions you've received divided by the estimated number of
    impressions you were eligible to receive on the Search Network for search
    terms that matched your keywords exactly (or were close variants of your
    keyword), regardless of your keyword match types. Note: Search exact match
    impression share is reported in the range of 0.1 to 1. Any value below 0.1
    is reported as 0.0999.
    """

    search_impression_share: builtins.float = ...
    """The impressions you've received on the Search Network divided
    by the estimated number of impressions you were eligible to receive.
    Note: Search impression share is reported in the range of 0.1 to 1. Any
    value below 0.1 is reported as 0.0999.
    """

    search_rank_lost_absolute_top_impression_share: builtins.float = ...
    """The number estimating how often your ad wasn't the very first ad above the
    organic search results due to poor Ad Rank.
    Note: Search rank lost absolute top impression share is reported in the
    range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
    """

    search_rank_lost_impression_share: builtins.float = ...
    """The estimated percentage of impressions on the Search Network
    that your ads didn't receive due to poor Ad Rank.
    Note: Search rank lost impression share is reported in the range of 0 to
    0.9. Any value above 0.9 is reported as 0.9001.
    """

    search_rank_lost_top_impression_share: builtins.float = ...
    """The number estimating how often your ad didn't show anywhere above the
    organic search results due to poor Ad Rank.
    Note: Search rank lost top impression share is reported in the range of 0
    to 0.9. Any value above 0.9 is reported as 0.9001.
    """

    search_top_impression_share: builtins.float = ...
    """The impressions you've received in the top location (anywhere above the
    organic search results) compared to the estimated number of impressions you
    were eligible to receive in the top location.
    Note: Search top impression share is reported in the range of 0.1 to 1. Any
    value below 0.1 is reported as 0.0999.
    """

    speed_score: builtins.int = ...
    """A measure of how quickly your page loads after clicks on your mobile ads.
    The score is a range from 1 to 10, 10 being the fastest.
    """

    top_impression_percentage: builtins.float = ...
    """The percent of your ad impressions that are shown anywhere above the
    organic search results.
    """

    valid_accelerated_mobile_pages_clicks_percentage: builtins.float = ...
    """The percentage of ad clicks to Accelerated Mobile Pages (AMP) landing pages
    that reach a valid AMP page.
    """

    value_per_all_conversions: builtins.float = ...
    """The value of all conversions divided by the number of all conversions."""

    value_per_all_conversions_by_conversion_date: builtins.float = ...
    """The value of all conversions divided by the number of all conversions. When
    this column is selected with date, the values in date column means the
    conversion date. Details for the by_conversion_date columns are available
    at https://support.google.com/google-ads/answer/9549009.
    """

    value_per_conversion: builtins.float = ...
    """The value of conversions divided by the number of conversions. This only
    includes conversion actions which include_in_conversions_metric attribute
    is set to true. If you use conversion-based bidding, your bid strategies
    will optimize for these conversions.
    """

    value_per_conversions_by_conversion_date: builtins.float = ...
    """The value of conversions divided by the number of conversions. This only
    includes conversion actions which include_in_conversions_metric attribute
    is set to true. If you use conversion-based bidding, your bid strategies
    will optimize for these conversions. When this column is selected with
    date, the values in date column means the conversion date. Details for the
    by_conversion_date columns are available at
    https://support.google.com/google-ads/answer/9549009.
    """

    value_per_current_model_attributed_conversion: builtins.float = ...
    """The value of current model attributed conversions divided by the number of
    the conversions. This only includes conversion actions which
    include_in_conversions_metric attribute is set to true. If you use
    conversion-based bidding, your bid strategies will optimize for these
    conversions.
    """

    video_quartile_p100_rate: builtins.float = ...
    """Percentage of impressions where the viewer watched all of your video."""

    video_quartile_p25_rate: builtins.float = ...
    """Percentage of impressions where the viewer watched 25% of your video."""

    video_quartile_p50_rate: builtins.float = ...
    """Percentage of impressions where the viewer watched 50% of your video."""

    video_quartile_p75_rate: builtins.float = ...
    """Percentage of impressions where the viewer watched 75% of your video."""

    video_view_rate: builtins.float = ...
    """The number of views your TrueView video ad receives divided by its number
    of impressions, including thumbnail impressions for TrueView in-display
    ads.
    """

    video_views: builtins.int = ...
    """The number of times your video ads were viewed."""

    view_through_conversions: builtins.int = ...
    """The total number of view-through conversions.
    These happen when a customer sees an image or rich media ad, then later
    completes a conversion on your site without interacting with (e.g.,
    clicking on) another ad.
    """

    sk_ad_network_conversions: builtins.int = ...
    """The number of iOS Store Kit Ad Network conversions."""

    def __init__(self,
        *,
        absolute_top_impression_percentage : typing.Optional[builtins.float] = ...,
        active_view_cpm : typing.Optional[builtins.float] = ...,
        active_view_ctr : typing.Optional[builtins.float] = ...,
        active_view_impressions : typing.Optional[builtins.int] = ...,
        active_view_measurability : typing.Optional[builtins.float] = ...,
        active_view_measurable_cost_micros : typing.Optional[builtins.int] = ...,
        active_view_measurable_impressions : typing.Optional[builtins.int] = ...,
        active_view_viewability : typing.Optional[builtins.float] = ...,
        all_conversions_from_interactions_rate : typing.Optional[builtins.float] = ...,
        all_conversions_value : typing.Optional[builtins.float] = ...,
        all_conversions_value_by_conversion_date : builtins.float = ...,
        all_conversions : typing.Optional[builtins.float] = ...,
        all_conversions_by_conversion_date : builtins.float = ...,
        all_conversions_value_per_cost : typing.Optional[builtins.float] = ...,
        all_conversions_from_click_to_call : typing.Optional[builtins.float] = ...,
        all_conversions_from_directions : typing.Optional[builtins.float] = ...,
        all_conversions_from_interactions_value_per_interaction : typing.Optional[builtins.float] = ...,
        all_conversions_from_menu : typing.Optional[builtins.float] = ...,
        all_conversions_from_order : typing.Optional[builtins.float] = ...,
        all_conversions_from_other_engagement : typing.Optional[builtins.float] = ...,
        all_conversions_from_store_visit : typing.Optional[builtins.float] = ...,
        all_conversions_from_store_website : typing.Optional[builtins.float] = ...,
        average_cost : typing.Optional[builtins.float] = ...,
        average_cpc : typing.Optional[builtins.float] = ...,
        average_cpe : typing.Optional[builtins.float] = ...,
        average_cpm : typing.Optional[builtins.float] = ...,
        average_cpv : typing.Optional[builtins.float] = ...,
        average_page_views : typing.Optional[builtins.float] = ...,
        average_time_on_site : typing.Optional[builtins.float] = ...,
        benchmark_average_max_cpc : typing.Optional[builtins.float] = ...,
        benchmark_ctr : typing.Optional[builtins.float] = ...,
        bounce_rate : typing.Optional[builtins.float] = ...,
        clicks : typing.Optional[builtins.int] = ...,
        combined_clicks : typing.Optional[builtins.int] = ...,
        combined_clicks_per_query : typing.Optional[builtins.float] = ...,
        combined_queries : typing.Optional[builtins.int] = ...,
        content_budget_lost_impression_share : typing.Optional[builtins.float] = ...,
        content_impression_share : typing.Optional[builtins.float] = ...,
        conversion_last_received_request_date_time : typing.Optional[typing.Text] = ...,
        conversion_last_conversion_date : typing.Optional[typing.Text] = ...,
        content_rank_lost_impression_share : typing.Optional[builtins.float] = ...,
        conversions_from_interactions_rate : typing.Optional[builtins.float] = ...,
        conversions_value : typing.Optional[builtins.float] = ...,
        conversions_value_by_conversion_date : builtins.float = ...,
        conversions_value_per_cost : typing.Optional[builtins.float] = ...,
        conversions_from_interactions_value_per_interaction : typing.Optional[builtins.float] = ...,
        conversions : typing.Optional[builtins.float] = ...,
        conversions_by_conversion_date : builtins.float = ...,
        cost_micros : typing.Optional[builtins.int] = ...,
        cost_per_all_conversions : typing.Optional[builtins.float] = ...,
        cost_per_conversion : typing.Optional[builtins.float] = ...,
        cost_per_current_model_attributed_conversion : typing.Optional[builtins.float] = ...,
        cross_device_conversions : typing.Optional[builtins.float] = ...,
        ctr : typing.Optional[builtins.float] = ...,
        current_model_attributed_conversions : typing.Optional[builtins.float] = ...,
        current_model_attributed_conversions_from_interactions_rate : typing.Optional[builtins.float] = ...,
        current_model_attributed_conversions_from_interactions_value_per_interaction : typing.Optional[builtins.float] = ...,
        current_model_attributed_conversions_value : typing.Optional[builtins.float] = ...,
        current_model_attributed_conversions_value_per_cost : typing.Optional[builtins.float] = ...,
        engagement_rate : typing.Optional[builtins.float] = ...,
        engagements : typing.Optional[builtins.int] = ...,
        hotel_average_lead_value_micros : typing.Optional[builtins.float] = ...,
        hotel_price_difference_percentage : typing.Optional[builtins.float] = ...,
        hotel_eligible_impressions : typing.Optional[builtins.int] = ...,
        historical_creative_quality_score : google.ads.googleads.v8.enums.quality_score_bucket_pb2.QualityScoreBucketEnum.QualityScoreBucket.ValueType = ...,
        historical_landing_page_quality_score : google.ads.googleads.v8.enums.quality_score_bucket_pb2.QualityScoreBucketEnum.QualityScoreBucket.ValueType = ...,
        historical_quality_score : typing.Optional[builtins.int] = ...,
        historical_search_predicted_ctr : google.ads.googleads.v8.enums.quality_score_bucket_pb2.QualityScoreBucketEnum.QualityScoreBucket.ValueType = ...,
        gmail_forwards : typing.Optional[builtins.int] = ...,
        gmail_saves : typing.Optional[builtins.int] = ...,
        gmail_secondary_clicks : typing.Optional[builtins.int] = ...,
        impressions_from_store_reach : typing.Optional[builtins.int] = ...,
        impressions : typing.Optional[builtins.int] = ...,
        interaction_rate : typing.Optional[builtins.float] = ...,
        interactions : typing.Optional[builtins.int] = ...,
        interaction_event_types : typing.Optional[typing.Iterable[google.ads.googleads.v8.enums.interaction_event_type_pb2.InteractionEventTypeEnum.InteractionEventType.ValueType]] = ...,
        invalid_click_rate : typing.Optional[builtins.float] = ...,
        invalid_clicks : typing.Optional[builtins.int] = ...,
        message_chats : typing.Optional[builtins.int] = ...,
        message_impressions : typing.Optional[builtins.int] = ...,
        message_chat_rate : typing.Optional[builtins.float] = ...,
        mobile_friendly_clicks_percentage : typing.Optional[builtins.float] = ...,
        optimization_score_uplift : typing.Optional[builtins.float] = ...,
        optimization_score_url : typing.Optional[typing.Text] = ...,
        organic_clicks : typing.Optional[builtins.int] = ...,
        organic_clicks_per_query : typing.Optional[builtins.float] = ...,
        organic_impressions : typing.Optional[builtins.int] = ...,
        organic_impressions_per_query : typing.Optional[builtins.float] = ...,
        organic_queries : typing.Optional[builtins.int] = ...,
        percent_new_visitors : typing.Optional[builtins.float] = ...,
        phone_calls : typing.Optional[builtins.int] = ...,
        phone_impressions : typing.Optional[builtins.int] = ...,
        phone_through_rate : typing.Optional[builtins.float] = ...,
        relative_ctr : typing.Optional[builtins.float] = ...,
        search_absolute_top_impression_share : typing.Optional[builtins.float] = ...,
        search_budget_lost_absolute_top_impression_share : typing.Optional[builtins.float] = ...,
        search_budget_lost_impression_share : typing.Optional[builtins.float] = ...,
        search_budget_lost_top_impression_share : typing.Optional[builtins.float] = ...,
        search_click_share : typing.Optional[builtins.float] = ...,
        search_exact_match_impression_share : typing.Optional[builtins.float] = ...,
        search_impression_share : typing.Optional[builtins.float] = ...,
        search_rank_lost_absolute_top_impression_share : typing.Optional[builtins.float] = ...,
        search_rank_lost_impression_share : typing.Optional[builtins.float] = ...,
        search_rank_lost_top_impression_share : typing.Optional[builtins.float] = ...,
        search_top_impression_share : typing.Optional[builtins.float] = ...,
        speed_score : typing.Optional[builtins.int] = ...,
        top_impression_percentage : typing.Optional[builtins.float] = ...,
        valid_accelerated_mobile_pages_clicks_percentage : typing.Optional[builtins.float] = ...,
        value_per_all_conversions : typing.Optional[builtins.float] = ...,
        value_per_all_conversions_by_conversion_date : typing.Optional[builtins.float] = ...,
        value_per_conversion : typing.Optional[builtins.float] = ...,
        value_per_conversions_by_conversion_date : typing.Optional[builtins.float] = ...,
        value_per_current_model_attributed_conversion : typing.Optional[builtins.float] = ...,
        video_quartile_p100_rate : typing.Optional[builtins.float] = ...,
        video_quartile_p25_rate : typing.Optional[builtins.float] = ...,
        video_quartile_p50_rate : typing.Optional[builtins.float] = ...,
        video_quartile_p75_rate : typing.Optional[builtins.float] = ...,
        video_view_rate : typing.Optional[builtins.float] = ...,
        video_views : typing.Optional[builtins.int] = ...,
        view_through_conversions : typing.Optional[builtins.int] = ...,
        sk_ad_network_conversions : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_absolute_top_impression_percentage",b"_absolute_top_impression_percentage","_active_view_cpm",b"_active_view_cpm","_active_view_ctr",b"_active_view_ctr","_active_view_impressions",b"_active_view_impressions","_active_view_measurability",b"_active_view_measurability","_active_view_measurable_cost_micros",b"_active_view_measurable_cost_micros","_active_view_measurable_impressions",b"_active_view_measurable_impressions","_active_view_viewability",b"_active_view_viewability","_all_conversions",b"_all_conversions","_all_conversions_from_click_to_call",b"_all_conversions_from_click_to_call","_all_conversions_from_directions",b"_all_conversions_from_directions","_all_conversions_from_interactions_rate",b"_all_conversions_from_interactions_rate","_all_conversions_from_interactions_value_per_interaction",b"_all_conversions_from_interactions_value_per_interaction","_all_conversions_from_menu",b"_all_conversions_from_menu","_all_conversions_from_order",b"_all_conversions_from_order","_all_conversions_from_other_engagement",b"_all_conversions_from_other_engagement","_all_conversions_from_store_visit",b"_all_conversions_from_store_visit","_all_conversions_from_store_website",b"_all_conversions_from_store_website","_all_conversions_value",b"_all_conversions_value","_all_conversions_value_per_cost",b"_all_conversions_value_per_cost","_average_cost",b"_average_cost","_average_cpc",b"_average_cpc","_average_cpe",b"_average_cpe","_average_cpm",b"_average_cpm","_average_cpv",b"_average_cpv","_average_page_views",b"_average_page_views","_average_time_on_site",b"_average_time_on_site","_benchmark_average_max_cpc",b"_benchmark_average_max_cpc","_benchmark_ctr",b"_benchmark_ctr","_bounce_rate",b"_bounce_rate","_clicks",b"_clicks","_combined_clicks",b"_combined_clicks","_combined_clicks_per_query",b"_combined_clicks_per_query","_combined_queries",b"_combined_queries","_content_budget_lost_impression_share",b"_content_budget_lost_impression_share","_content_impression_share",b"_content_impression_share","_content_rank_lost_impression_share",b"_content_rank_lost_impression_share","_conversion_last_conversion_date",b"_conversion_last_conversion_date","_conversion_last_received_request_date_time",b"_conversion_last_received_request_date_time","_conversions",b"_conversions","_conversions_from_interactions_rate",b"_conversions_from_interactions_rate","_conversions_from_interactions_value_per_interaction",b"_conversions_from_interactions_value_per_interaction","_conversions_value",b"_conversions_value","_conversions_value_per_cost",b"_conversions_value_per_cost","_cost_micros",b"_cost_micros","_cost_per_all_conversions",b"_cost_per_all_conversions","_cost_per_conversion",b"_cost_per_conversion","_cost_per_current_model_attributed_conversion",b"_cost_per_current_model_attributed_conversion","_cross_device_conversions",b"_cross_device_conversions","_ctr",b"_ctr","_current_model_attributed_conversions",b"_current_model_attributed_conversions","_current_model_attributed_conversions_from_interactions_rate",b"_current_model_attributed_conversions_from_interactions_rate","_current_model_attributed_conversions_from_interactions_value_per_interaction",b"_current_model_attributed_conversions_from_interactions_value_per_interaction","_current_model_attributed_conversions_value",b"_current_model_attributed_conversions_value","_current_model_attributed_conversions_value_per_cost",b"_current_model_attributed_conversions_value_per_cost","_engagement_rate",b"_engagement_rate","_engagements",b"_engagements","_gmail_forwards",b"_gmail_forwards","_gmail_saves",b"_gmail_saves","_gmail_secondary_clicks",b"_gmail_secondary_clicks","_historical_quality_score",b"_historical_quality_score","_hotel_average_lead_value_micros",b"_hotel_average_lead_value_micros","_hotel_eligible_impressions",b"_hotel_eligible_impressions","_hotel_price_difference_percentage",b"_hotel_price_difference_percentage","_impressions",b"_impressions","_impressions_from_store_reach",b"_impressions_from_store_reach","_interaction_rate",b"_interaction_rate","_interactions",b"_interactions","_invalid_click_rate",b"_invalid_click_rate","_invalid_clicks",b"_invalid_clicks","_message_chat_rate",b"_message_chat_rate","_message_chats",b"_message_chats","_message_impressions",b"_message_impressions","_mobile_friendly_clicks_percentage",b"_mobile_friendly_clicks_percentage","_optimization_score_uplift",b"_optimization_score_uplift","_optimization_score_url",b"_optimization_score_url","_organic_clicks",b"_organic_clicks","_organic_clicks_per_query",b"_organic_clicks_per_query","_organic_impressions",b"_organic_impressions","_organic_impressions_per_query",b"_organic_impressions_per_query","_organic_queries",b"_organic_queries","_percent_new_visitors",b"_percent_new_visitors","_phone_calls",b"_phone_calls","_phone_impressions",b"_phone_impressions","_phone_through_rate",b"_phone_through_rate","_relative_ctr",b"_relative_ctr","_search_absolute_top_impression_share",b"_search_absolute_top_impression_share","_search_budget_lost_absolute_top_impression_share",b"_search_budget_lost_absolute_top_impression_share","_search_budget_lost_impression_share",b"_search_budget_lost_impression_share","_search_budget_lost_top_impression_share",b"_search_budget_lost_top_impression_share","_search_click_share",b"_search_click_share","_search_exact_match_impression_share",b"_search_exact_match_impression_share","_search_impression_share",b"_search_impression_share","_search_rank_lost_absolute_top_impression_share",b"_search_rank_lost_absolute_top_impression_share","_search_rank_lost_impression_share",b"_search_rank_lost_impression_share","_search_rank_lost_top_impression_share",b"_search_rank_lost_top_impression_share","_search_top_impression_share",b"_search_top_impression_share","_speed_score",b"_speed_score","_top_impression_percentage",b"_top_impression_percentage","_valid_accelerated_mobile_pages_clicks_percentage",b"_valid_accelerated_mobile_pages_clicks_percentage","_value_per_all_conversions",b"_value_per_all_conversions","_value_per_all_conversions_by_conversion_date",b"_value_per_all_conversions_by_conversion_date","_value_per_conversion",b"_value_per_conversion","_value_per_conversions_by_conversion_date",b"_value_per_conversions_by_conversion_date","_value_per_current_model_attributed_conversion",b"_value_per_current_model_attributed_conversion","_video_quartile_p100_rate",b"_video_quartile_p100_rate","_video_quartile_p25_rate",b"_video_quartile_p25_rate","_video_quartile_p50_rate",b"_video_quartile_p50_rate","_video_quartile_p75_rate",b"_video_quartile_p75_rate","_video_view_rate",b"_video_view_rate","_video_views",b"_video_views","_view_through_conversions",b"_view_through_conversions","absolute_top_impression_percentage",b"absolute_top_impression_percentage","active_view_cpm",b"active_view_cpm","active_view_ctr",b"active_view_ctr","active_view_impressions",b"active_view_impressions","active_view_measurability",b"active_view_measurability","active_view_measurable_cost_micros",b"active_view_measurable_cost_micros","active_view_measurable_impressions",b"active_view_measurable_impressions","active_view_viewability",b"active_view_viewability","all_conversions",b"all_conversions","all_conversions_from_click_to_call",b"all_conversions_from_click_to_call","all_conversions_from_directions",b"all_conversions_from_directions","all_conversions_from_interactions_rate",b"all_conversions_from_interactions_rate","all_conversions_from_interactions_value_per_interaction",b"all_conversions_from_interactions_value_per_interaction","all_conversions_from_menu",b"all_conversions_from_menu","all_conversions_from_order",b"all_conversions_from_order","all_conversions_from_other_engagement",b"all_conversions_from_other_engagement","all_conversions_from_store_visit",b"all_conversions_from_store_visit","all_conversions_from_store_website",b"all_conversions_from_store_website","all_conversions_value",b"all_conversions_value","all_conversions_value_per_cost",b"all_conversions_value_per_cost","average_cost",b"average_cost","average_cpc",b"average_cpc","average_cpe",b"average_cpe","average_cpm",b"average_cpm","average_cpv",b"average_cpv","average_page_views",b"average_page_views","average_time_on_site",b"average_time_on_site","benchmark_average_max_cpc",b"benchmark_average_max_cpc","benchmark_ctr",b"benchmark_ctr","bounce_rate",b"bounce_rate","clicks",b"clicks","combined_clicks",b"combined_clicks","combined_clicks_per_query",b"combined_clicks_per_query","combined_queries",b"combined_queries","content_budget_lost_impression_share",b"content_budget_lost_impression_share","content_impression_share",b"content_impression_share","content_rank_lost_impression_share",b"content_rank_lost_impression_share","conversion_last_conversion_date",b"conversion_last_conversion_date","conversion_last_received_request_date_time",b"conversion_last_received_request_date_time","conversions",b"conversions","conversions_from_interactions_rate",b"conversions_from_interactions_rate","conversions_from_interactions_value_per_interaction",b"conversions_from_interactions_value_per_interaction","conversions_value",b"conversions_value","conversions_value_per_cost",b"conversions_value_per_cost","cost_micros",b"cost_micros","cost_per_all_conversions",b"cost_per_all_conversions","cost_per_conversion",b"cost_per_conversion","cost_per_current_model_attributed_conversion",b"cost_per_current_model_attributed_conversion","cross_device_conversions",b"cross_device_conversions","ctr",b"ctr","current_model_attributed_conversions",b"current_model_attributed_conversions","current_model_attributed_conversions_from_interactions_rate",b"current_model_attributed_conversions_from_interactions_rate","current_model_attributed_conversions_from_interactions_value_per_interaction",b"current_model_attributed_conversions_from_interactions_value_per_interaction","current_model_attributed_conversions_value",b"current_model_attributed_conversions_value","current_model_attributed_conversions_value_per_cost",b"current_model_attributed_conversions_value_per_cost","engagement_rate",b"engagement_rate","engagements",b"engagements","gmail_forwards",b"gmail_forwards","gmail_saves",b"gmail_saves","gmail_secondary_clicks",b"gmail_secondary_clicks","historical_quality_score",b"historical_quality_score","hotel_average_lead_value_micros",b"hotel_average_lead_value_micros","hotel_eligible_impressions",b"hotel_eligible_impressions","hotel_price_difference_percentage",b"hotel_price_difference_percentage","impressions",b"impressions","impressions_from_store_reach",b"impressions_from_store_reach","interaction_rate",b"interaction_rate","interactions",b"interactions","invalid_click_rate",b"invalid_click_rate","invalid_clicks",b"invalid_clicks","message_chat_rate",b"message_chat_rate","message_chats",b"message_chats","message_impressions",b"message_impressions","mobile_friendly_clicks_percentage",b"mobile_friendly_clicks_percentage","optimization_score_uplift",b"optimization_score_uplift","optimization_score_url",b"optimization_score_url","organic_clicks",b"organic_clicks","organic_clicks_per_query",b"organic_clicks_per_query","organic_impressions",b"organic_impressions","organic_impressions_per_query",b"organic_impressions_per_query","organic_queries",b"organic_queries","percent_new_visitors",b"percent_new_visitors","phone_calls",b"phone_calls","phone_impressions",b"phone_impressions","phone_through_rate",b"phone_through_rate","relative_ctr",b"relative_ctr","search_absolute_top_impression_share",b"search_absolute_top_impression_share","search_budget_lost_absolute_top_impression_share",b"search_budget_lost_absolute_top_impression_share","search_budget_lost_impression_share",b"search_budget_lost_impression_share","search_budget_lost_top_impression_share",b"search_budget_lost_top_impression_share","search_click_share",b"search_click_share","search_exact_match_impression_share",b"search_exact_match_impression_share","search_impression_share",b"search_impression_share","search_rank_lost_absolute_top_impression_share",b"search_rank_lost_absolute_top_impression_share","search_rank_lost_impression_share",b"search_rank_lost_impression_share","search_rank_lost_top_impression_share",b"search_rank_lost_top_impression_share","search_top_impression_share",b"search_top_impression_share","speed_score",b"speed_score","top_impression_percentage",b"top_impression_percentage","valid_accelerated_mobile_pages_clicks_percentage",b"valid_accelerated_mobile_pages_clicks_percentage","value_per_all_conversions",b"value_per_all_conversions","value_per_all_conversions_by_conversion_date",b"value_per_all_conversions_by_conversion_date","value_per_conversion",b"value_per_conversion","value_per_conversions_by_conversion_date",b"value_per_conversions_by_conversion_date","value_per_current_model_attributed_conversion",b"value_per_current_model_attributed_conversion","video_quartile_p100_rate",b"video_quartile_p100_rate","video_quartile_p25_rate",b"video_quartile_p25_rate","video_quartile_p50_rate",b"video_quartile_p50_rate","video_quartile_p75_rate",b"video_quartile_p75_rate","video_view_rate",b"video_view_rate","video_views",b"video_views","view_through_conversions",b"view_through_conversions"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_absolute_top_impression_percentage",b"_absolute_top_impression_percentage","_active_view_cpm",b"_active_view_cpm","_active_view_ctr",b"_active_view_ctr","_active_view_impressions",b"_active_view_impressions","_active_view_measurability",b"_active_view_measurability","_active_view_measurable_cost_micros",b"_active_view_measurable_cost_micros","_active_view_measurable_impressions",b"_active_view_measurable_impressions","_active_view_viewability",b"_active_view_viewability","_all_conversions",b"_all_conversions","_all_conversions_from_click_to_call",b"_all_conversions_from_click_to_call","_all_conversions_from_directions",b"_all_conversions_from_directions","_all_conversions_from_interactions_rate",b"_all_conversions_from_interactions_rate","_all_conversions_from_interactions_value_per_interaction",b"_all_conversions_from_interactions_value_per_interaction","_all_conversions_from_menu",b"_all_conversions_from_menu","_all_conversions_from_order",b"_all_conversions_from_order","_all_conversions_from_other_engagement",b"_all_conversions_from_other_engagement","_all_conversions_from_store_visit",b"_all_conversions_from_store_visit","_all_conversions_from_store_website",b"_all_conversions_from_store_website","_all_conversions_value",b"_all_conversions_value","_all_conversions_value_per_cost",b"_all_conversions_value_per_cost","_average_cost",b"_average_cost","_average_cpc",b"_average_cpc","_average_cpe",b"_average_cpe","_average_cpm",b"_average_cpm","_average_cpv",b"_average_cpv","_average_page_views",b"_average_page_views","_average_time_on_site",b"_average_time_on_site","_benchmark_average_max_cpc",b"_benchmark_average_max_cpc","_benchmark_ctr",b"_benchmark_ctr","_bounce_rate",b"_bounce_rate","_clicks",b"_clicks","_combined_clicks",b"_combined_clicks","_combined_clicks_per_query",b"_combined_clicks_per_query","_combined_queries",b"_combined_queries","_content_budget_lost_impression_share",b"_content_budget_lost_impression_share","_content_impression_share",b"_content_impression_share","_content_rank_lost_impression_share",b"_content_rank_lost_impression_share","_conversion_last_conversion_date",b"_conversion_last_conversion_date","_conversion_last_received_request_date_time",b"_conversion_last_received_request_date_time","_conversions",b"_conversions","_conversions_from_interactions_rate",b"_conversions_from_interactions_rate","_conversions_from_interactions_value_per_interaction",b"_conversions_from_interactions_value_per_interaction","_conversions_value",b"_conversions_value","_conversions_value_per_cost",b"_conversions_value_per_cost","_cost_micros",b"_cost_micros","_cost_per_all_conversions",b"_cost_per_all_conversions","_cost_per_conversion",b"_cost_per_conversion","_cost_per_current_model_attributed_conversion",b"_cost_per_current_model_attributed_conversion","_cross_device_conversions",b"_cross_device_conversions","_ctr",b"_ctr","_current_model_attributed_conversions",b"_current_model_attributed_conversions","_current_model_attributed_conversions_from_interactions_rate",b"_current_model_attributed_conversions_from_interactions_rate","_current_model_attributed_conversions_from_interactions_value_per_interaction",b"_current_model_attributed_conversions_from_interactions_value_per_interaction","_current_model_attributed_conversions_value",b"_current_model_attributed_conversions_value","_current_model_attributed_conversions_value_per_cost",b"_current_model_attributed_conversions_value_per_cost","_engagement_rate",b"_engagement_rate","_engagements",b"_engagements","_gmail_forwards",b"_gmail_forwards","_gmail_saves",b"_gmail_saves","_gmail_secondary_clicks",b"_gmail_secondary_clicks","_historical_quality_score",b"_historical_quality_score","_hotel_average_lead_value_micros",b"_hotel_average_lead_value_micros","_hotel_eligible_impressions",b"_hotel_eligible_impressions","_hotel_price_difference_percentage",b"_hotel_price_difference_percentage","_impressions",b"_impressions","_impressions_from_store_reach",b"_impressions_from_store_reach","_interaction_rate",b"_interaction_rate","_interactions",b"_interactions","_invalid_click_rate",b"_invalid_click_rate","_invalid_clicks",b"_invalid_clicks","_message_chat_rate",b"_message_chat_rate","_message_chats",b"_message_chats","_message_impressions",b"_message_impressions","_mobile_friendly_clicks_percentage",b"_mobile_friendly_clicks_percentage","_optimization_score_uplift",b"_optimization_score_uplift","_optimization_score_url",b"_optimization_score_url","_organic_clicks",b"_organic_clicks","_organic_clicks_per_query",b"_organic_clicks_per_query","_organic_impressions",b"_organic_impressions","_organic_impressions_per_query",b"_organic_impressions_per_query","_organic_queries",b"_organic_queries","_percent_new_visitors",b"_percent_new_visitors","_phone_calls",b"_phone_calls","_phone_impressions",b"_phone_impressions","_phone_through_rate",b"_phone_through_rate","_relative_ctr",b"_relative_ctr","_search_absolute_top_impression_share",b"_search_absolute_top_impression_share","_search_budget_lost_absolute_top_impression_share",b"_search_budget_lost_absolute_top_impression_share","_search_budget_lost_impression_share",b"_search_budget_lost_impression_share","_search_budget_lost_top_impression_share",b"_search_budget_lost_top_impression_share","_search_click_share",b"_search_click_share","_search_exact_match_impression_share",b"_search_exact_match_impression_share","_search_impression_share",b"_search_impression_share","_search_rank_lost_absolute_top_impression_share",b"_search_rank_lost_absolute_top_impression_share","_search_rank_lost_impression_share",b"_search_rank_lost_impression_share","_search_rank_lost_top_impression_share",b"_search_rank_lost_top_impression_share","_search_top_impression_share",b"_search_top_impression_share","_speed_score",b"_speed_score","_top_impression_percentage",b"_top_impression_percentage","_valid_accelerated_mobile_pages_clicks_percentage",b"_valid_accelerated_mobile_pages_clicks_percentage","_value_per_all_conversions",b"_value_per_all_conversions","_value_per_all_conversions_by_conversion_date",b"_value_per_all_conversions_by_conversion_date","_value_per_conversion",b"_value_per_conversion","_value_per_conversions_by_conversion_date",b"_value_per_conversions_by_conversion_date","_value_per_current_model_attributed_conversion",b"_value_per_current_model_attributed_conversion","_video_quartile_p100_rate",b"_video_quartile_p100_rate","_video_quartile_p25_rate",b"_video_quartile_p25_rate","_video_quartile_p50_rate",b"_video_quartile_p50_rate","_video_quartile_p75_rate",b"_video_quartile_p75_rate","_video_view_rate",b"_video_view_rate","_video_views",b"_video_views","_view_through_conversions",b"_view_through_conversions","absolute_top_impression_percentage",b"absolute_top_impression_percentage","active_view_cpm",b"active_view_cpm","active_view_ctr",b"active_view_ctr","active_view_impressions",b"active_view_impressions","active_view_measurability",b"active_view_measurability","active_view_measurable_cost_micros",b"active_view_measurable_cost_micros","active_view_measurable_impressions",b"active_view_measurable_impressions","active_view_viewability",b"active_view_viewability","all_conversions",b"all_conversions","all_conversions_by_conversion_date",b"all_conversions_by_conversion_date","all_conversions_from_click_to_call",b"all_conversions_from_click_to_call","all_conversions_from_directions",b"all_conversions_from_directions","all_conversions_from_interactions_rate",b"all_conversions_from_interactions_rate","all_conversions_from_interactions_value_per_interaction",b"all_conversions_from_interactions_value_per_interaction","all_conversions_from_menu",b"all_conversions_from_menu","all_conversions_from_order",b"all_conversions_from_order","all_conversions_from_other_engagement",b"all_conversions_from_other_engagement","all_conversions_from_store_visit",b"all_conversions_from_store_visit","all_conversions_from_store_website",b"all_conversions_from_store_website","all_conversions_value",b"all_conversions_value","all_conversions_value_by_conversion_date",b"all_conversions_value_by_conversion_date","all_conversions_value_per_cost",b"all_conversions_value_per_cost","average_cost",b"average_cost","average_cpc",b"average_cpc","average_cpe",b"average_cpe","average_cpm",b"average_cpm","average_cpv",b"average_cpv","average_page_views",b"average_page_views","average_time_on_site",b"average_time_on_site","benchmark_average_max_cpc",b"benchmark_average_max_cpc","benchmark_ctr",b"benchmark_ctr","bounce_rate",b"bounce_rate","clicks",b"clicks","combined_clicks",b"combined_clicks","combined_clicks_per_query",b"combined_clicks_per_query","combined_queries",b"combined_queries","content_budget_lost_impression_share",b"content_budget_lost_impression_share","content_impression_share",b"content_impression_share","content_rank_lost_impression_share",b"content_rank_lost_impression_share","conversion_last_conversion_date",b"conversion_last_conversion_date","conversion_last_received_request_date_time",b"conversion_last_received_request_date_time","conversions",b"conversions","conversions_by_conversion_date",b"conversions_by_conversion_date","conversions_from_interactions_rate",b"conversions_from_interactions_rate","conversions_from_interactions_value_per_interaction",b"conversions_from_interactions_value_per_interaction","conversions_value",b"conversions_value","conversions_value_by_conversion_date",b"conversions_value_by_conversion_date","conversions_value_per_cost",b"conversions_value_per_cost","cost_micros",b"cost_micros","cost_per_all_conversions",b"cost_per_all_conversions","cost_per_conversion",b"cost_per_conversion","cost_per_current_model_attributed_conversion",b"cost_per_current_model_attributed_conversion","cross_device_conversions",b"cross_device_conversions","ctr",b"ctr","current_model_attributed_conversions",b"current_model_attributed_conversions","current_model_attributed_conversions_from_interactions_rate",b"current_model_attributed_conversions_from_interactions_rate","current_model_attributed_conversions_from_interactions_value_per_interaction",b"current_model_attributed_conversions_from_interactions_value_per_interaction","current_model_attributed_conversions_value",b"current_model_attributed_conversions_value","current_model_attributed_conversions_value_per_cost",b"current_model_attributed_conversions_value_per_cost","engagement_rate",b"engagement_rate","engagements",b"engagements","gmail_forwards",b"gmail_forwards","gmail_saves",b"gmail_saves","gmail_secondary_clicks",b"gmail_secondary_clicks","historical_creative_quality_score",b"historical_creative_quality_score","historical_landing_page_quality_score",b"historical_landing_page_quality_score","historical_quality_score",b"historical_quality_score","historical_search_predicted_ctr",b"historical_search_predicted_ctr","hotel_average_lead_value_micros",b"hotel_average_lead_value_micros","hotel_eligible_impressions",b"hotel_eligible_impressions","hotel_price_difference_percentage",b"hotel_price_difference_percentage","impressions",b"impressions","impressions_from_store_reach",b"impressions_from_store_reach","interaction_event_types",b"interaction_event_types","interaction_rate",b"interaction_rate","interactions",b"interactions","invalid_click_rate",b"invalid_click_rate","invalid_clicks",b"invalid_clicks","message_chat_rate",b"message_chat_rate","message_chats",b"message_chats","message_impressions",b"message_impressions","mobile_friendly_clicks_percentage",b"mobile_friendly_clicks_percentage","optimization_score_uplift",b"optimization_score_uplift","optimization_score_url",b"optimization_score_url","organic_clicks",b"organic_clicks","organic_clicks_per_query",b"organic_clicks_per_query","organic_impressions",b"organic_impressions","organic_impressions_per_query",b"organic_impressions_per_query","organic_queries",b"organic_queries","percent_new_visitors",b"percent_new_visitors","phone_calls",b"phone_calls","phone_impressions",b"phone_impressions","phone_through_rate",b"phone_through_rate","relative_ctr",b"relative_ctr","search_absolute_top_impression_share",b"search_absolute_top_impression_share","search_budget_lost_absolute_top_impression_share",b"search_budget_lost_absolute_top_impression_share","search_budget_lost_impression_share",b"search_budget_lost_impression_share","search_budget_lost_top_impression_share",b"search_budget_lost_top_impression_share","search_click_share",b"search_click_share","search_exact_match_impression_share",b"search_exact_match_impression_share","search_impression_share",b"search_impression_share","search_rank_lost_absolute_top_impression_share",b"search_rank_lost_absolute_top_impression_share","search_rank_lost_impression_share",b"search_rank_lost_impression_share","search_rank_lost_top_impression_share",b"search_rank_lost_top_impression_share","search_top_impression_share",b"search_top_impression_share","sk_ad_network_conversions",b"sk_ad_network_conversions","speed_score",b"speed_score","top_impression_percentage",b"top_impression_percentage","valid_accelerated_mobile_pages_clicks_percentage",b"valid_accelerated_mobile_pages_clicks_percentage","value_per_all_conversions",b"value_per_all_conversions","value_per_all_conversions_by_conversion_date",b"value_per_all_conversions_by_conversion_date","value_per_conversion",b"value_per_conversion","value_per_conversions_by_conversion_date",b"value_per_conversions_by_conversion_date","value_per_current_model_attributed_conversion",b"value_per_current_model_attributed_conversion","video_quartile_p100_rate",b"video_quartile_p100_rate","video_quartile_p25_rate",b"video_quartile_p25_rate","video_quartile_p50_rate",b"video_quartile_p50_rate","video_quartile_p75_rate",b"video_quartile_p75_rate","video_view_rate",b"video_view_rate","video_views",b"video_views","view_through_conversions",b"view_through_conversions"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_absolute_top_impression_percentage",b"_absolute_top_impression_percentage"]) -> typing.Optional[typing_extensions.Literal["absolute_top_impression_percentage"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active_view_cpm",b"_active_view_cpm"]) -> typing.Optional[typing_extensions.Literal["active_view_cpm"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active_view_ctr",b"_active_view_ctr"]) -> typing.Optional[typing_extensions.Literal["active_view_ctr"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active_view_impressions",b"_active_view_impressions"]) -> typing.Optional[typing_extensions.Literal["active_view_impressions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active_view_measurability",b"_active_view_measurability"]) -> typing.Optional[typing_extensions.Literal["active_view_measurability"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active_view_measurable_cost_micros",b"_active_view_measurable_cost_micros"]) -> typing.Optional[typing_extensions.Literal["active_view_measurable_cost_micros"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active_view_measurable_impressions",b"_active_view_measurable_impressions"]) -> typing.Optional[typing_extensions.Literal["active_view_measurable_impressions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active_view_viewability",b"_active_view_viewability"]) -> typing.Optional[typing_extensions.Literal["active_view_viewability"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions",b"_all_conversions"]) -> typing.Optional[typing_extensions.Literal["all_conversions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_from_click_to_call",b"_all_conversions_from_click_to_call"]) -> typing.Optional[typing_extensions.Literal["all_conversions_from_click_to_call"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_from_directions",b"_all_conversions_from_directions"]) -> typing.Optional[typing_extensions.Literal["all_conversions_from_directions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_from_interactions_rate",b"_all_conversions_from_interactions_rate"]) -> typing.Optional[typing_extensions.Literal["all_conversions_from_interactions_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_from_interactions_value_per_interaction",b"_all_conversions_from_interactions_value_per_interaction"]) -> typing.Optional[typing_extensions.Literal["all_conversions_from_interactions_value_per_interaction"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_from_menu",b"_all_conversions_from_menu"]) -> typing.Optional[typing_extensions.Literal["all_conversions_from_menu"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_from_order",b"_all_conversions_from_order"]) -> typing.Optional[typing_extensions.Literal["all_conversions_from_order"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_from_other_engagement",b"_all_conversions_from_other_engagement"]) -> typing.Optional[typing_extensions.Literal["all_conversions_from_other_engagement"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_from_store_visit",b"_all_conversions_from_store_visit"]) -> typing.Optional[typing_extensions.Literal["all_conversions_from_store_visit"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_from_store_website",b"_all_conversions_from_store_website"]) -> typing.Optional[typing_extensions.Literal["all_conversions_from_store_website"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_value",b"_all_conversions_value"]) -> typing.Optional[typing_extensions.Literal["all_conversions_value"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_conversions_value_per_cost",b"_all_conversions_value_per_cost"]) -> typing.Optional[typing_extensions.Literal["all_conversions_value_per_cost"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_average_cost",b"_average_cost"]) -> typing.Optional[typing_extensions.Literal["average_cost"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_average_cpc",b"_average_cpc"]) -> typing.Optional[typing_extensions.Literal["average_cpc"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_average_cpe",b"_average_cpe"]) -> typing.Optional[typing_extensions.Literal["average_cpe"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_average_cpm",b"_average_cpm"]) -> typing.Optional[typing_extensions.Literal["average_cpm"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_average_cpv",b"_average_cpv"]) -> typing.Optional[typing_extensions.Literal["average_cpv"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_average_page_views",b"_average_page_views"]) -> typing.Optional[typing_extensions.Literal["average_page_views"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_average_time_on_site",b"_average_time_on_site"]) -> typing.Optional[typing_extensions.Literal["average_time_on_site"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_benchmark_average_max_cpc",b"_benchmark_average_max_cpc"]) -> typing.Optional[typing_extensions.Literal["benchmark_average_max_cpc"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_benchmark_ctr",b"_benchmark_ctr"]) -> typing.Optional[typing_extensions.Literal["benchmark_ctr"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_bounce_rate",b"_bounce_rate"]) -> typing.Optional[typing_extensions.Literal["bounce_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_clicks",b"_clicks"]) -> typing.Optional[typing_extensions.Literal["clicks"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_combined_clicks",b"_combined_clicks"]) -> typing.Optional[typing_extensions.Literal["combined_clicks"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_combined_clicks_per_query",b"_combined_clicks_per_query"]) -> typing.Optional[typing_extensions.Literal["combined_clicks_per_query"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_combined_queries",b"_combined_queries"]) -> typing.Optional[typing_extensions.Literal["combined_queries"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_content_budget_lost_impression_share",b"_content_budget_lost_impression_share"]) -> typing.Optional[typing_extensions.Literal["content_budget_lost_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_content_impression_share",b"_content_impression_share"]) -> typing.Optional[typing_extensions.Literal["content_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_content_rank_lost_impression_share",b"_content_rank_lost_impression_share"]) -> typing.Optional[typing_extensions.Literal["content_rank_lost_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_last_conversion_date",b"_conversion_last_conversion_date"]) -> typing.Optional[typing_extensions.Literal["conversion_last_conversion_date"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_last_received_request_date_time",b"_conversion_last_received_request_date_time"]) -> typing.Optional[typing_extensions.Literal["conversion_last_received_request_date_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversions",b"_conversions"]) -> typing.Optional[typing_extensions.Literal["conversions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversions_from_interactions_rate",b"_conversions_from_interactions_rate"]) -> typing.Optional[typing_extensions.Literal["conversions_from_interactions_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversions_from_interactions_value_per_interaction",b"_conversions_from_interactions_value_per_interaction"]) -> typing.Optional[typing_extensions.Literal["conversions_from_interactions_value_per_interaction"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversions_value",b"_conversions_value"]) -> typing.Optional[typing_extensions.Literal["conversions_value"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversions_value_per_cost",b"_conversions_value_per_cost"]) -> typing.Optional[typing_extensions.Literal["conversions_value_per_cost"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cost_micros",b"_cost_micros"]) -> typing.Optional[typing_extensions.Literal["cost_micros"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cost_per_all_conversions",b"_cost_per_all_conversions"]) -> typing.Optional[typing_extensions.Literal["cost_per_all_conversions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cost_per_conversion",b"_cost_per_conversion"]) -> typing.Optional[typing_extensions.Literal["cost_per_conversion"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cost_per_current_model_attributed_conversion",b"_cost_per_current_model_attributed_conversion"]) -> typing.Optional[typing_extensions.Literal["cost_per_current_model_attributed_conversion"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cross_device_conversions",b"_cross_device_conversions"]) -> typing.Optional[typing_extensions.Literal["cross_device_conversions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ctr",b"_ctr"]) -> typing.Optional[typing_extensions.Literal["ctr"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_current_model_attributed_conversions",b"_current_model_attributed_conversions"]) -> typing.Optional[typing_extensions.Literal["current_model_attributed_conversions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_current_model_attributed_conversions_from_interactions_rate",b"_current_model_attributed_conversions_from_interactions_rate"]) -> typing.Optional[typing_extensions.Literal["current_model_attributed_conversions_from_interactions_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_current_model_attributed_conversions_from_interactions_value_per_interaction",b"_current_model_attributed_conversions_from_interactions_value_per_interaction"]) -> typing.Optional[typing_extensions.Literal["current_model_attributed_conversions_from_interactions_value_per_interaction"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_current_model_attributed_conversions_value",b"_current_model_attributed_conversions_value"]) -> typing.Optional[typing_extensions.Literal["current_model_attributed_conversions_value"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_current_model_attributed_conversions_value_per_cost",b"_current_model_attributed_conversions_value_per_cost"]) -> typing.Optional[typing_extensions.Literal["current_model_attributed_conversions_value_per_cost"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_engagement_rate",b"_engagement_rate"]) -> typing.Optional[typing_extensions.Literal["engagement_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_engagements",b"_engagements"]) -> typing.Optional[typing_extensions.Literal["engagements"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gmail_forwards",b"_gmail_forwards"]) -> typing.Optional[typing_extensions.Literal["gmail_forwards"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gmail_saves",b"_gmail_saves"]) -> typing.Optional[typing_extensions.Literal["gmail_saves"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gmail_secondary_clicks",b"_gmail_secondary_clicks"]) -> typing.Optional[typing_extensions.Literal["gmail_secondary_clicks"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_historical_quality_score",b"_historical_quality_score"]) -> typing.Optional[typing_extensions.Literal["historical_quality_score"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_hotel_average_lead_value_micros",b"_hotel_average_lead_value_micros"]) -> typing.Optional[typing_extensions.Literal["hotel_average_lead_value_micros"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_hotel_eligible_impressions",b"_hotel_eligible_impressions"]) -> typing.Optional[typing_extensions.Literal["hotel_eligible_impressions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_hotel_price_difference_percentage",b"_hotel_price_difference_percentage"]) -> typing.Optional[typing_extensions.Literal["hotel_price_difference_percentage"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_impressions",b"_impressions"]) -> typing.Optional[typing_extensions.Literal["impressions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_impressions_from_store_reach",b"_impressions_from_store_reach"]) -> typing.Optional[typing_extensions.Literal["impressions_from_store_reach"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_interaction_rate",b"_interaction_rate"]) -> typing.Optional[typing_extensions.Literal["interaction_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_interactions",b"_interactions"]) -> typing.Optional[typing_extensions.Literal["interactions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_invalid_click_rate",b"_invalid_click_rate"]) -> typing.Optional[typing_extensions.Literal["invalid_click_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_invalid_clicks",b"_invalid_clicks"]) -> typing.Optional[typing_extensions.Literal["invalid_clicks"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message_chat_rate",b"_message_chat_rate"]) -> typing.Optional[typing_extensions.Literal["message_chat_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message_chats",b"_message_chats"]) -> typing.Optional[typing_extensions.Literal["message_chats"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message_impressions",b"_message_impressions"]) -> typing.Optional[typing_extensions.Literal["message_impressions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mobile_friendly_clicks_percentage",b"_mobile_friendly_clicks_percentage"]) -> typing.Optional[typing_extensions.Literal["mobile_friendly_clicks_percentage"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_optimization_score_uplift",b"_optimization_score_uplift"]) -> typing.Optional[typing_extensions.Literal["optimization_score_uplift"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_optimization_score_url",b"_optimization_score_url"]) -> typing.Optional[typing_extensions.Literal["optimization_score_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_organic_clicks",b"_organic_clicks"]) -> typing.Optional[typing_extensions.Literal["organic_clicks"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_organic_clicks_per_query",b"_organic_clicks_per_query"]) -> typing.Optional[typing_extensions.Literal["organic_clicks_per_query"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_organic_impressions",b"_organic_impressions"]) -> typing.Optional[typing_extensions.Literal["organic_impressions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_organic_impressions_per_query",b"_organic_impressions_per_query"]) -> typing.Optional[typing_extensions.Literal["organic_impressions_per_query"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_organic_queries",b"_organic_queries"]) -> typing.Optional[typing_extensions.Literal["organic_queries"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_percent_new_visitors",b"_percent_new_visitors"]) -> typing.Optional[typing_extensions.Literal["percent_new_visitors"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_phone_calls",b"_phone_calls"]) -> typing.Optional[typing_extensions.Literal["phone_calls"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_phone_impressions",b"_phone_impressions"]) -> typing.Optional[typing_extensions.Literal["phone_impressions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_phone_through_rate",b"_phone_through_rate"]) -> typing.Optional[typing_extensions.Literal["phone_through_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_relative_ctr",b"_relative_ctr"]) -> typing.Optional[typing_extensions.Literal["relative_ctr"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_absolute_top_impression_share",b"_search_absolute_top_impression_share"]) -> typing.Optional[typing_extensions.Literal["search_absolute_top_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_budget_lost_absolute_top_impression_share",b"_search_budget_lost_absolute_top_impression_share"]) -> typing.Optional[typing_extensions.Literal["search_budget_lost_absolute_top_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_budget_lost_impression_share",b"_search_budget_lost_impression_share"]) -> typing.Optional[typing_extensions.Literal["search_budget_lost_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_budget_lost_top_impression_share",b"_search_budget_lost_top_impression_share"]) -> typing.Optional[typing_extensions.Literal["search_budget_lost_top_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_click_share",b"_search_click_share"]) -> typing.Optional[typing_extensions.Literal["search_click_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_exact_match_impression_share",b"_search_exact_match_impression_share"]) -> typing.Optional[typing_extensions.Literal["search_exact_match_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_impression_share",b"_search_impression_share"]) -> typing.Optional[typing_extensions.Literal["search_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_rank_lost_absolute_top_impression_share",b"_search_rank_lost_absolute_top_impression_share"]) -> typing.Optional[typing_extensions.Literal["search_rank_lost_absolute_top_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_rank_lost_impression_share",b"_search_rank_lost_impression_share"]) -> typing.Optional[typing_extensions.Literal["search_rank_lost_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_rank_lost_top_impression_share",b"_search_rank_lost_top_impression_share"]) -> typing.Optional[typing_extensions.Literal["search_rank_lost_top_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_search_top_impression_share",b"_search_top_impression_share"]) -> typing.Optional[typing_extensions.Literal["search_top_impression_share"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_speed_score",b"_speed_score"]) -> typing.Optional[typing_extensions.Literal["speed_score"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_top_impression_percentage",b"_top_impression_percentage"]) -> typing.Optional[typing_extensions.Literal["top_impression_percentage"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_valid_accelerated_mobile_pages_clicks_percentage",b"_valid_accelerated_mobile_pages_clicks_percentage"]) -> typing.Optional[typing_extensions.Literal["valid_accelerated_mobile_pages_clicks_percentage"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value_per_all_conversions",b"_value_per_all_conversions"]) -> typing.Optional[typing_extensions.Literal["value_per_all_conversions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value_per_all_conversions_by_conversion_date",b"_value_per_all_conversions_by_conversion_date"]) -> typing.Optional[typing_extensions.Literal["value_per_all_conversions_by_conversion_date"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value_per_conversion",b"_value_per_conversion"]) -> typing.Optional[typing_extensions.Literal["value_per_conversion"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value_per_conversions_by_conversion_date",b"_value_per_conversions_by_conversion_date"]) -> typing.Optional[typing_extensions.Literal["value_per_conversions_by_conversion_date"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value_per_current_model_attributed_conversion",b"_value_per_current_model_attributed_conversion"]) -> typing.Optional[typing_extensions.Literal["value_per_current_model_attributed_conversion"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_video_quartile_p100_rate",b"_video_quartile_p100_rate"]) -> typing.Optional[typing_extensions.Literal["video_quartile_p100_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_video_quartile_p25_rate",b"_video_quartile_p25_rate"]) -> typing.Optional[typing_extensions.Literal["video_quartile_p25_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_video_quartile_p50_rate",b"_video_quartile_p50_rate"]) -> typing.Optional[typing_extensions.Literal["video_quartile_p50_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_video_quartile_p75_rate",b"_video_quartile_p75_rate"]) -> typing.Optional[typing_extensions.Literal["video_quartile_p75_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_video_view_rate",b"_video_view_rate"]) -> typing.Optional[typing_extensions.Literal["video_view_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_video_views",b"_video_views"]) -> typing.Optional[typing_extensions.Literal["video_views"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_view_through_conversions",b"_view_through_conversions"]) -> typing.Optional[typing_extensions.Literal["view_through_conversions"]]: ...
global___Metrics = Metrics
