"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v8.enums.bidding_strategy_type_pb2
import google.ads.googleads.v8.enums.target_impression_share_location_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AccessibleBiddingStrategy(google.protobuf.message.Message):
    """Represents a view of BiddingStrategies owned by and shared with the customer.

    In contrast to BiddingStrategy, this resource includes strategies owned by
    managers of the customer and shared with this customer - in addition to
    strategies owned by this customer. This resource does not provide metrics and
    only exposes a limited subset of the BiddingStrategy attributes.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MaximizeConversionValue(google.protobuf.message.Message):
        """An automated bidding strategy to help get the most conversion value for
        your campaigns while spending your budget.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TARGET_ROAS_FIELD_NUMBER: builtins.int
        target_roas: builtins.float = ...
        """Output only. The target return on ad spend (ROAS) option. If set, the bid strategy
        will maximize revenue while averaging the target return on ad spend. If
        the target ROAS is high, the bid strategy may not be able to spend the
        full budget. If the target ROAS is not set, the bid strategy will aim to
        achieve the highest possible ROAS for the budget.
        """

        def __init__(self,
            *,
            target_roas : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["target_roas",b"target_roas"]) -> None: ...

    class MaximizeConversions(google.protobuf.message.Message):
        """An automated bidding strategy to help get the most conversions for your
        campaigns while spending your budget.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TARGET_CPA_FIELD_NUMBER: builtins.int
        target_cpa: builtins.int = ...
        """Output only. The target cost per acquisition (CPA) option. This is the average amount
        that you would like to spend per acquisition.
        """

        def __init__(self,
            *,
            target_cpa : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["target_cpa",b"target_cpa"]) -> None: ...

    class TargetCpa(google.protobuf.message.Message):
        """An automated bid strategy that sets bids to help get as many conversions as
        possible at the target cost-per-acquisition (CPA) you set.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TARGET_CPA_MICROS_FIELD_NUMBER: builtins.int
        target_cpa_micros: builtins.int = ...
        """Output only. Average CPA target.
        This target should be greater than or equal to minimum billable unit
        based on the currency for the account.
        """

        def __init__(self,
            *,
            target_cpa_micros : typing.Optional[builtins.int] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_target_cpa_micros",b"_target_cpa_micros","target_cpa_micros",b"target_cpa_micros"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_target_cpa_micros",b"_target_cpa_micros","target_cpa_micros",b"target_cpa_micros"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_cpa_micros",b"_target_cpa_micros"]) -> typing.Optional[typing_extensions.Literal["target_cpa_micros"]]: ...

    class TargetImpressionShare(google.protobuf.message.Message):
        """An automated bidding strategy that sets bids so that a certain percentage
        of search ads are shown at the top of the first page (or other targeted
        location).
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        LOCATION_FIELD_NUMBER: builtins.int
        LOCATION_FRACTION_MICROS_FIELD_NUMBER: builtins.int
        CPC_BID_CEILING_MICROS_FIELD_NUMBER: builtins.int
        location: google.ads.googleads.v8.enums.target_impression_share_location_pb2.TargetImpressionShareLocationEnum.TargetImpressionShareLocation.ValueType = ...
        """Output only. The targeted location on the search results page."""

        location_fraction_micros: builtins.int = ...
        """The desired fraction of ads to be shown in the targeted location in
        micros. E.g. 1% equals 10,000.
        """

        cpc_bid_ceiling_micros: builtins.int = ...
        """Output only. The highest CPC bid the automated bidding system is permitted to specify.
        This is a required field entered by the advertiser that sets the ceiling
        and specified in local micros.
        """

        def __init__(self,
            *,
            location : google.ads.googleads.v8.enums.target_impression_share_location_pb2.TargetImpressionShareLocationEnum.TargetImpressionShareLocation.ValueType = ...,
            location_fraction_micros : typing.Optional[builtins.int] = ...,
            cpc_bid_ceiling_micros : typing.Optional[builtins.int] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_cpc_bid_ceiling_micros",b"_cpc_bid_ceiling_micros","_location_fraction_micros",b"_location_fraction_micros","cpc_bid_ceiling_micros",b"cpc_bid_ceiling_micros","location_fraction_micros",b"location_fraction_micros"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_cpc_bid_ceiling_micros",b"_cpc_bid_ceiling_micros","_location_fraction_micros",b"_location_fraction_micros","cpc_bid_ceiling_micros",b"cpc_bid_ceiling_micros","location",b"location","location_fraction_micros",b"location_fraction_micros"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_cpc_bid_ceiling_micros",b"_cpc_bid_ceiling_micros"]) -> typing.Optional[typing_extensions.Literal["cpc_bid_ceiling_micros"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_location_fraction_micros",b"_location_fraction_micros"]) -> typing.Optional[typing_extensions.Literal["location_fraction_micros"]]: ...

    class TargetRoas(google.protobuf.message.Message):
        """An automated bidding strategy that helps you maximize revenue while
        averaging a specific target return on ad spend (ROAS).
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TARGET_ROAS_FIELD_NUMBER: builtins.int
        target_roas: builtins.float = ...
        """Output only. The desired revenue (based on conversion data) per unit of spend."""

        def __init__(self,
            *,
            target_roas : typing.Optional[builtins.float] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_target_roas",b"_target_roas","target_roas",b"target_roas"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_target_roas",b"_target_roas","target_roas",b"target_roas"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_roas",b"_target_roas"]) -> typing.Optional[typing_extensions.Literal["target_roas"]]: ...

    class TargetSpend(google.protobuf.message.Message):
        """An automated bid strategy that sets your bids to help get as many clicks
        as possible within your budget.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TARGET_SPEND_MICROS_FIELD_NUMBER: builtins.int
        CPC_BID_CEILING_MICROS_FIELD_NUMBER: builtins.int
        target_spend_micros: builtins.int = ...
        """Output only. The spend target under which to maximize clicks.
        A TargetSpend bidder will attempt to spend the smaller of this value
        or the natural throttling spend amount.
        If not specified, the budget is used as the spend target.
        This field is deprecated and should no longer be used. See
        https://ads-developers.googleblog.com/2020/05/reminder-about-sunset-creation-of.html
        for details.
        """

        cpc_bid_ceiling_micros: builtins.int = ...
        """Output only. Maximum bid limit that can be set by the bid strategy.
        The limit applies to all keywords managed by the strategy.
        """

        def __init__(self,
            *,
            target_spend_micros : typing.Optional[builtins.int] = ...,
            cpc_bid_ceiling_micros : typing.Optional[builtins.int] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_cpc_bid_ceiling_micros",b"_cpc_bid_ceiling_micros","_target_spend_micros",b"_target_spend_micros","cpc_bid_ceiling_micros",b"cpc_bid_ceiling_micros","target_spend_micros",b"target_spend_micros"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_cpc_bid_ceiling_micros",b"_cpc_bid_ceiling_micros","_target_spend_micros",b"_target_spend_micros","cpc_bid_ceiling_micros",b"cpc_bid_ceiling_micros","target_spend_micros",b"target_spend_micros"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_cpc_bid_ceiling_micros",b"_cpc_bid_ceiling_micros"]) -> typing.Optional[typing_extensions.Literal["cpc_bid_ceiling_micros"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_spend_micros",b"_target_spend_micros"]) -> typing.Optional[typing_extensions.Literal["target_spend_micros"]]: ...

    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    OWNER_CUSTOMER_ID_FIELD_NUMBER: builtins.int
    OWNER_DESCRIPTIVE_NAME_FIELD_NUMBER: builtins.int
    MAXIMIZE_CONVERSION_VALUE_FIELD_NUMBER: builtins.int
    MAXIMIZE_CONVERSIONS_FIELD_NUMBER: builtins.int
    TARGET_CPA_FIELD_NUMBER: builtins.int
    TARGET_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    TARGET_ROAS_FIELD_NUMBER: builtins.int
    TARGET_SPEND_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """Output only. The resource name of the accessible bidding strategy.
    AccessibleBiddingStrategy resource names have the form:

    `customers/{customer_id}/accessibleBiddingStrategies/{bidding_strategy_id}`
    """

    id: builtins.int = ...
    """Output only. The ID of the bidding strategy."""

    name: typing.Text = ...
    """Output only. The name of the bidding strategy."""

    type: google.ads.googleads.v8.enums.bidding_strategy_type_pb2.BiddingStrategyTypeEnum.BiddingStrategyType.ValueType = ...
    """Output only. The type of the bidding strategy."""

    owner_customer_id: builtins.int = ...
    """Output only. The ID of the Customer which owns the bidding strategy."""

    owner_descriptive_name: typing.Text = ...
    """Output only. descriptive_name of the Customer which owns the bidding strategy."""

    @property
    def maximize_conversion_value(self) -> global___AccessibleBiddingStrategy.MaximizeConversionValue:
        """Output only. An automated bidding strategy to help get the most conversion value for
        your campaigns while spending your budget.
        """
        pass
    @property
    def maximize_conversions(self) -> global___AccessibleBiddingStrategy.MaximizeConversions:
        """Output only. An automated bidding strategy to help get the most conversions for your
        campaigns while spending your budget.
        """
        pass
    @property
    def target_cpa(self) -> global___AccessibleBiddingStrategy.TargetCpa:
        """Output only. A bidding strategy that sets bids to help get as many conversions as
        possible at the target cost-per-acquisition (CPA) you set.
        """
        pass
    @property
    def target_impression_share(self) -> global___AccessibleBiddingStrategy.TargetImpressionShare:
        """Output only. A bidding strategy that automatically optimizes towards a desired
        percentage of impressions.
        """
        pass
    @property
    def target_roas(self) -> global___AccessibleBiddingStrategy.TargetRoas:
        """Output only. A bidding strategy that helps you maximize revenue while averaging a
        specific target Return On Ad Spend (ROAS).
        """
        pass
    @property
    def target_spend(self) -> global___AccessibleBiddingStrategy.TargetSpend:
        """Output only. A bid strategy that sets your bids to help get as many clicks as
        possible within your budget.
        """
        pass
    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        id : builtins.int = ...,
        name : typing.Text = ...,
        type : google.ads.googleads.v8.enums.bidding_strategy_type_pb2.BiddingStrategyTypeEnum.BiddingStrategyType.ValueType = ...,
        owner_customer_id : builtins.int = ...,
        owner_descriptive_name : typing.Text = ...,
        maximize_conversion_value : typing.Optional[global___AccessibleBiddingStrategy.MaximizeConversionValue] = ...,
        maximize_conversions : typing.Optional[global___AccessibleBiddingStrategy.MaximizeConversions] = ...,
        target_cpa : typing.Optional[global___AccessibleBiddingStrategy.TargetCpa] = ...,
        target_impression_share : typing.Optional[global___AccessibleBiddingStrategy.TargetImpressionShare] = ...,
        target_roas : typing.Optional[global___AccessibleBiddingStrategy.TargetRoas] = ...,
        target_spend : typing.Optional[global___AccessibleBiddingStrategy.TargetSpend] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["maximize_conversion_value",b"maximize_conversion_value","maximize_conversions",b"maximize_conversions","scheme",b"scheme","target_cpa",b"target_cpa","target_impression_share",b"target_impression_share","target_roas",b"target_roas","target_spend",b"target_spend"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","maximize_conversion_value",b"maximize_conversion_value","maximize_conversions",b"maximize_conversions","name",b"name","owner_customer_id",b"owner_customer_id","owner_descriptive_name",b"owner_descriptive_name","resource_name",b"resource_name","scheme",b"scheme","target_cpa",b"target_cpa","target_impression_share",b"target_impression_share","target_roas",b"target_roas","target_spend",b"target_spend","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["scheme",b"scheme"]) -> typing.Optional[typing_extensions.Literal["maximize_conversion_value","maximize_conversions","target_cpa","target_impression_share","target_roas","target_spend"]]: ...
global___AccessibleBiddingStrategy = AccessibleBiddingStrategy
