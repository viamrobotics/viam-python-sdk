"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v8.common.bidding_pb2
import google.ads.googleads.v8.common.custom_parameter_pb2
import google.ads.googleads.v8.common.frequency_cap_pb2
import google.ads.googleads.v8.common.real_time_bidding_setting_pb2
import google.ads.googleads.v8.common.targeting_setting_pb2
import google.ads.googleads.v8.enums.ad_serving_optimization_status_pb2
import google.ads.googleads.v8.enums.advertising_channel_sub_type_pb2
import google.ads.googleads.v8.enums.advertising_channel_type_pb2
import google.ads.googleads.v8.enums.app_campaign_app_store_pb2
import google.ads.googleads.v8.enums.app_campaign_bidding_strategy_goal_type_pb2
import google.ads.googleads.v8.enums.asset_field_type_pb2
import google.ads.googleads.v8.enums.bidding_strategy_type_pb2
import google.ads.googleads.v8.enums.brand_safety_suitability_pb2
import google.ads.googleads.v8.enums.campaign_experiment_type_pb2
import google.ads.googleads.v8.enums.campaign_serving_status_pb2
import google.ads.googleads.v8.enums.campaign_status_pb2
import google.ads.googleads.v8.enums.location_source_type_pb2
import google.ads.googleads.v8.enums.negative_geo_target_type_pb2
import google.ads.googleads.v8.enums.optimization_goal_type_pb2
import google.ads.googleads.v8.enums.payment_mode_pb2
import google.ads.googleads.v8.enums.positive_geo_target_type_pb2
import google.ads.googleads.v8.enums.vanity_pharma_display_url_mode_pb2
import google.ads.googleads.v8.enums.vanity_pharma_text_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Campaign(google.protobuf.message.Message):
    """Proto file describing the Campaign resource.

    A campaign.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class NetworkSettings(google.protobuf.message.Message):
        """The network settings for the campaign."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TARGET_GOOGLE_SEARCH_FIELD_NUMBER: builtins.int
        TARGET_SEARCH_NETWORK_FIELD_NUMBER: builtins.int
        TARGET_CONTENT_NETWORK_FIELD_NUMBER: builtins.int
        TARGET_PARTNER_SEARCH_NETWORK_FIELD_NUMBER: builtins.int
        target_google_search: builtins.bool = ...
        """Whether ads will be served with google.com search results."""

        target_search_network: builtins.bool = ...
        """Whether ads will be served on partner sites in the Google Search Network
        (requires `target_google_search` to also be `true`).
        """

        target_content_network: builtins.bool = ...
        """Whether ads will be served on specified placements in the Google Display
        Network. Placements are specified using the Placement criterion.
        """

        target_partner_search_network: builtins.bool = ...
        """Whether ads will be served on the Google Partner Network.
        This is available only to some select Google partner accounts.
        """

        def __init__(self,
            *,
            target_google_search : typing.Optional[builtins.bool] = ...,
            target_search_network : typing.Optional[builtins.bool] = ...,
            target_content_network : typing.Optional[builtins.bool] = ...,
            target_partner_search_network : typing.Optional[builtins.bool] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_target_content_network",b"_target_content_network","_target_google_search",b"_target_google_search","_target_partner_search_network",b"_target_partner_search_network","_target_search_network",b"_target_search_network","target_content_network",b"target_content_network","target_google_search",b"target_google_search","target_partner_search_network",b"target_partner_search_network","target_search_network",b"target_search_network"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_target_content_network",b"_target_content_network","_target_google_search",b"_target_google_search","_target_partner_search_network",b"_target_partner_search_network","_target_search_network",b"_target_search_network","target_content_network",b"target_content_network","target_google_search",b"target_google_search","target_partner_search_network",b"target_partner_search_network","target_search_network",b"target_search_network"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_content_network",b"_target_content_network"]) -> typing.Optional[typing_extensions.Literal["target_content_network"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_google_search",b"_target_google_search"]) -> typing.Optional[typing_extensions.Literal["target_google_search"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_partner_search_network",b"_target_partner_search_network"]) -> typing.Optional[typing_extensions.Literal["target_partner_search_network"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_search_network",b"_target_search_network"]) -> typing.Optional[typing_extensions.Literal["target_search_network"]]: ...

    class HotelSettingInfo(google.protobuf.message.Message):
        """Campaign-level settings for hotel ads."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        HOTEL_CENTER_ID_FIELD_NUMBER: builtins.int
        hotel_center_id: builtins.int = ...
        """Immutable. The linked Hotel Center account."""

        def __init__(self,
            *,
            hotel_center_id : typing.Optional[builtins.int] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_hotel_center_id",b"_hotel_center_id","hotel_center_id",b"hotel_center_id"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_hotel_center_id",b"_hotel_center_id","hotel_center_id",b"hotel_center_id"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_hotel_center_id",b"_hotel_center_id"]) -> typing.Optional[typing_extensions.Literal["hotel_center_id"]]: ...

    class DynamicSearchAdsSetting(google.protobuf.message.Message):
        """The setting for controlling Dynamic Search Ads (DSA)."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DOMAIN_NAME_FIELD_NUMBER: builtins.int
        LANGUAGE_CODE_FIELD_NUMBER: builtins.int
        USE_SUPPLIED_URLS_ONLY_FIELD_NUMBER: builtins.int
        FEEDS_FIELD_NUMBER: builtins.int
        domain_name: typing.Text = ...
        """Required. The Internet domain name that this setting represents, e.g., "google.com"
        or "www.google.com".
        """

        language_code: typing.Text = ...
        """Required. The language code specifying the language of the domain, e.g., "en"."""

        use_supplied_urls_only: builtins.bool = ...
        """Whether the campaign uses advertiser supplied URLs exclusively."""

        @property
        def feeds(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """The list of page feeds associated with the campaign."""
            pass
        def __init__(self,
            *,
            domain_name : typing.Text = ...,
            language_code : typing.Text = ...,
            use_supplied_urls_only : typing.Optional[builtins.bool] = ...,
            feeds : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_use_supplied_urls_only",b"_use_supplied_urls_only","use_supplied_urls_only",b"use_supplied_urls_only"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_use_supplied_urls_only",b"_use_supplied_urls_only","domain_name",b"domain_name","feeds",b"feeds","language_code",b"language_code","use_supplied_urls_only",b"use_supplied_urls_only"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_use_supplied_urls_only",b"_use_supplied_urls_only"]) -> typing.Optional[typing_extensions.Literal["use_supplied_urls_only"]]: ...

    class SelectiveOptimization(google.protobuf.message.Message):
        """Selective optimization setting for this campaign, which includes a set of
        conversion actions to optimize this campaign towards.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CONVERSION_ACTIONS_FIELD_NUMBER: builtins.int
        @property
        def conversion_actions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """The selected set of conversion actions for optimizing this campaign."""
            pass
        def __init__(self,
            *,
            conversion_actions : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["conversion_actions",b"conversion_actions"]) -> None: ...

    class ShoppingSetting(google.protobuf.message.Message):
        """The setting for Shopping campaigns. Defines the universe of products that
        can be advertised by the campaign, and how this campaign interacts with
        other Shopping campaigns.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MERCHANT_ID_FIELD_NUMBER: builtins.int
        SALES_COUNTRY_FIELD_NUMBER: builtins.int
        CAMPAIGN_PRIORITY_FIELD_NUMBER: builtins.int
        ENABLE_LOCAL_FIELD_NUMBER: builtins.int
        merchant_id: builtins.int = ...
        """Immutable. ID of the Merchant Center account.
        This field is required for create operations. This field is immutable for
        Shopping campaigns.
        """

        sales_country: typing.Text = ...
        """Sales country of products to include in the campaign.
        This field is required for Shopping campaigns.
        This field is optional for non-Shopping campaigns, but it must be equal
        to 'ZZ' if set.
        """

        campaign_priority: builtins.int = ...
        """Priority of the campaign. Campaigns with numerically higher priorities
        take precedence over those with lower priorities.
        This field is required for Shopping campaigns, with values between 0 and
        2, inclusive.
        This field is optional for Smart Shopping campaigns, but must be equal to
        3 if set.
        """

        enable_local: builtins.bool = ...
        """Whether to include local products."""

        def __init__(self,
            *,
            merchant_id : typing.Optional[builtins.int] = ...,
            sales_country : typing.Optional[typing.Text] = ...,
            campaign_priority : typing.Optional[builtins.int] = ...,
            enable_local : typing.Optional[builtins.bool] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_campaign_priority",b"_campaign_priority","_enable_local",b"_enable_local","_merchant_id",b"_merchant_id","_sales_country",b"_sales_country","campaign_priority",b"campaign_priority","enable_local",b"enable_local","merchant_id",b"merchant_id","sales_country",b"sales_country"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_campaign_priority",b"_campaign_priority","_enable_local",b"_enable_local","_merchant_id",b"_merchant_id","_sales_country",b"_sales_country","campaign_priority",b"campaign_priority","enable_local",b"enable_local","merchant_id",b"merchant_id","sales_country",b"sales_country"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_campaign_priority",b"_campaign_priority"]) -> typing.Optional[typing_extensions.Literal["campaign_priority"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_local",b"_enable_local"]) -> typing.Optional[typing_extensions.Literal["enable_local"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_merchant_id",b"_merchant_id"]) -> typing.Optional[typing_extensions.Literal["merchant_id"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_sales_country",b"_sales_country"]) -> typing.Optional[typing_extensions.Literal["sales_country"]]: ...

    class OptimizationGoalSetting(google.protobuf.message.Message):
        """Optimization goal setting for this campaign, which includes a set of
        optimization goal types.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        OPTIMIZATION_GOAL_TYPES_FIELD_NUMBER: builtins.int
        @property
        def optimization_goal_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[google.ads.googleads.v8.enums.optimization_goal_type_pb2.OptimizationGoalTypeEnum.OptimizationGoalType.ValueType]:
            """The list of optimization goal types."""
            pass
        def __init__(self,
            *,
            optimization_goal_types : typing.Optional[typing.Iterable[google.ads.googleads.v8.enums.optimization_goal_type_pb2.OptimizationGoalTypeEnum.OptimizationGoalType.ValueType]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["optimization_goal_types",b"optimization_goal_types"]) -> None: ...

    class TrackingSetting(google.protobuf.message.Message):
        """Campaign-level settings for tracking information."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TRACKING_URL_FIELD_NUMBER: builtins.int
        tracking_url: typing.Text = ...
        """Output only. The url used for dynamic tracking."""

        def __init__(self,
            *,
            tracking_url : typing.Optional[typing.Text] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_tracking_url",b"_tracking_url","tracking_url",b"tracking_url"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_tracking_url",b"_tracking_url","tracking_url",b"tracking_url"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_tracking_url",b"_tracking_url"]) -> typing.Optional[typing_extensions.Literal["tracking_url"]]: ...

    class GeoTargetTypeSetting(google.protobuf.message.Message):
        """Represents a collection of settings related to ads geotargeting."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        POSITIVE_GEO_TARGET_TYPE_FIELD_NUMBER: builtins.int
        NEGATIVE_GEO_TARGET_TYPE_FIELD_NUMBER: builtins.int
        positive_geo_target_type: google.ads.googleads.v8.enums.positive_geo_target_type_pb2.PositiveGeoTargetTypeEnum.PositiveGeoTargetType.ValueType = ...
        """The setting used for positive geotargeting in this particular campaign."""

        negative_geo_target_type: google.ads.googleads.v8.enums.negative_geo_target_type_pb2.NegativeGeoTargetTypeEnum.NegativeGeoTargetType.ValueType = ...
        """The setting used for negative geotargeting in this particular campaign."""

        def __init__(self,
            *,
            positive_geo_target_type : google.ads.googleads.v8.enums.positive_geo_target_type_pb2.PositiveGeoTargetTypeEnum.PositiveGeoTargetType.ValueType = ...,
            negative_geo_target_type : google.ads.googleads.v8.enums.negative_geo_target_type_pb2.NegativeGeoTargetTypeEnum.NegativeGeoTargetType.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["negative_geo_target_type",b"negative_geo_target_type","positive_geo_target_type",b"positive_geo_target_type"]) -> None: ...

    class LocalCampaignSetting(google.protobuf.message.Message):
        """Campaign setting for local campaigns."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        LOCATION_SOURCE_TYPE_FIELD_NUMBER: builtins.int
        location_source_type: google.ads.googleads.v8.enums.location_source_type_pb2.LocationSourceTypeEnum.LocationSourceType.ValueType = ...
        """The location source type for this local campaign."""

        def __init__(self,
            *,
            location_source_type : google.ads.googleads.v8.enums.location_source_type_pb2.LocationSourceTypeEnum.LocationSourceType.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["location_source_type",b"location_source_type"]) -> None: ...

    class AppCampaignSetting(google.protobuf.message.Message):
        """Campaign-level settings for App Campaigns."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        BIDDING_STRATEGY_GOAL_TYPE_FIELD_NUMBER: builtins.int
        APP_ID_FIELD_NUMBER: builtins.int
        APP_STORE_FIELD_NUMBER: builtins.int
        bidding_strategy_goal_type: google.ads.googleads.v8.enums.app_campaign_bidding_strategy_goal_type_pb2.AppCampaignBiddingStrategyGoalTypeEnum.AppCampaignBiddingStrategyGoalType.ValueType = ...
        """Represents the goal which the bidding strategy of this app campaign
        should optimize towards.
        """

        app_id: typing.Text = ...
        """Immutable. A string that uniquely identifies a mobile application."""

        app_store: google.ads.googleads.v8.enums.app_campaign_app_store_pb2.AppCampaignAppStoreEnum.AppCampaignAppStore.ValueType = ...
        """Immutable. The application store that distributes this specific app."""

        def __init__(self,
            *,
            bidding_strategy_goal_type : google.ads.googleads.v8.enums.app_campaign_bidding_strategy_goal_type_pb2.AppCampaignBiddingStrategyGoalTypeEnum.AppCampaignBiddingStrategyGoalType.ValueType = ...,
            app_id : typing.Optional[typing.Text] = ...,
            app_store : google.ads.googleads.v8.enums.app_campaign_app_store_pb2.AppCampaignAppStoreEnum.AppCampaignAppStore.ValueType = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_app_id",b"_app_id","app_id",b"app_id"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_app_id",b"_app_id","app_id",b"app_id","app_store",b"app_store","bidding_strategy_goal_type",b"bidding_strategy_goal_type"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_app_id",b"_app_id"]) -> typing.Optional[typing_extensions.Literal["app_id"]]: ...

    class VanityPharma(google.protobuf.message.Message):
        """Describes how unbranded pharma ads will be displayed."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VANITY_PHARMA_DISPLAY_URL_MODE_FIELD_NUMBER: builtins.int
        VANITY_PHARMA_TEXT_FIELD_NUMBER: builtins.int
        vanity_pharma_display_url_mode: google.ads.googleads.v8.enums.vanity_pharma_display_url_mode_pb2.VanityPharmaDisplayUrlModeEnum.VanityPharmaDisplayUrlMode.ValueType = ...
        """The display mode for vanity pharma URLs."""

        vanity_pharma_text: google.ads.googleads.v8.enums.vanity_pharma_text_pb2.VanityPharmaTextEnum.VanityPharmaText.ValueType = ...
        """The text that will be displayed in display URL of the text ad when
        website description is the selected display mode for vanity pharma URLs.
        """

        def __init__(self,
            *,
            vanity_pharma_display_url_mode : google.ads.googleads.v8.enums.vanity_pharma_display_url_mode_pb2.VanityPharmaDisplayUrlModeEnum.VanityPharmaDisplayUrlMode.ValueType = ...,
            vanity_pharma_text : google.ads.googleads.v8.enums.vanity_pharma_text_pb2.VanityPharmaTextEnum.VanityPharmaText.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["vanity_pharma_display_url_mode",b"vanity_pharma_display_url_mode","vanity_pharma_text",b"vanity_pharma_text"]) -> None: ...

    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    SERVING_STATUS_FIELD_NUMBER: builtins.int
    AD_SERVING_OPTIMIZATION_STATUS_FIELD_NUMBER: builtins.int
    ADVERTISING_CHANNEL_TYPE_FIELD_NUMBER: builtins.int
    ADVERTISING_CHANNEL_SUB_TYPE_FIELD_NUMBER: builtins.int
    TRACKING_URL_TEMPLATE_FIELD_NUMBER: builtins.int
    URL_CUSTOM_PARAMETERS_FIELD_NUMBER: builtins.int
    REAL_TIME_BIDDING_SETTING_FIELD_NUMBER: builtins.int
    NETWORK_SETTINGS_FIELD_NUMBER: builtins.int
    HOTEL_SETTING_FIELD_NUMBER: builtins.int
    DYNAMIC_SEARCH_ADS_SETTING_FIELD_NUMBER: builtins.int
    SHOPPING_SETTING_FIELD_NUMBER: builtins.int
    TARGETING_SETTING_FIELD_NUMBER: builtins.int
    GEO_TARGET_TYPE_SETTING_FIELD_NUMBER: builtins.int
    LOCAL_CAMPAIGN_SETTING_FIELD_NUMBER: builtins.int
    APP_CAMPAIGN_SETTING_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    EXPERIMENT_TYPE_FIELD_NUMBER: builtins.int
    BASE_CAMPAIGN_FIELD_NUMBER: builtins.int
    CAMPAIGN_BUDGET_FIELD_NUMBER: builtins.int
    BIDDING_STRATEGY_TYPE_FIELD_NUMBER: builtins.int
    ACCESSIBLE_BIDDING_STRATEGY_FIELD_NUMBER: builtins.int
    START_DATE_FIELD_NUMBER: builtins.int
    END_DATE_FIELD_NUMBER: builtins.int
    FINAL_URL_SUFFIX_FIELD_NUMBER: builtins.int
    FREQUENCY_CAPS_FIELD_NUMBER: builtins.int
    VIDEO_BRAND_SAFETY_SUITABILITY_FIELD_NUMBER: builtins.int
    VANITY_PHARMA_FIELD_NUMBER: builtins.int
    SELECTIVE_OPTIMIZATION_FIELD_NUMBER: builtins.int
    OPTIMIZATION_GOAL_SETTING_FIELD_NUMBER: builtins.int
    TRACKING_SETTING_FIELD_NUMBER: builtins.int
    PAYMENT_MODE_FIELD_NUMBER: builtins.int
    OPTIMIZATION_SCORE_FIELD_NUMBER: builtins.int
    EXCLUDED_PARENT_ASSET_FIELD_TYPES_FIELD_NUMBER: builtins.int
    BIDDING_STRATEGY_FIELD_NUMBER: builtins.int
    COMMISSION_FIELD_NUMBER: builtins.int
    MANUAL_CPC_FIELD_NUMBER: builtins.int
    MANUAL_CPM_FIELD_NUMBER: builtins.int
    MANUAL_CPV_FIELD_NUMBER: builtins.int
    MAXIMIZE_CONVERSIONS_FIELD_NUMBER: builtins.int
    MAXIMIZE_CONVERSION_VALUE_FIELD_NUMBER: builtins.int
    TARGET_CPA_FIELD_NUMBER: builtins.int
    TARGET_IMPRESSION_SHARE_FIELD_NUMBER: builtins.int
    TARGET_ROAS_FIELD_NUMBER: builtins.int
    TARGET_SPEND_FIELD_NUMBER: builtins.int
    PERCENT_CPC_FIELD_NUMBER: builtins.int
    TARGET_CPM_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """Immutable. The resource name of the campaign.
    Campaign resource names have the form:

    `customers/{customer_id}/campaigns/{campaign_id}`
    """

    id: builtins.int = ...
    """Output only. The ID of the campaign."""

    name: typing.Text = ...
    """The name of the campaign.

    This field is required and should not be empty when creating new
    campaigns.

    It must not contain any null (code point 0x0), NL line feed
    (code point 0xA) or carriage return (code point 0xD) characters.
    """

    status: google.ads.googleads.v8.enums.campaign_status_pb2.CampaignStatusEnum.CampaignStatus.ValueType = ...
    """The status of the campaign.

    When a new campaign is added, the status defaults to ENABLED.
    """

    serving_status: google.ads.googleads.v8.enums.campaign_serving_status_pb2.CampaignServingStatusEnum.CampaignServingStatus.ValueType = ...
    """Output only. The ad serving status of the campaign."""

    ad_serving_optimization_status: google.ads.googleads.v8.enums.ad_serving_optimization_status_pb2.AdServingOptimizationStatusEnum.AdServingOptimizationStatus.ValueType = ...
    """The ad serving optimization status of the campaign."""

    advertising_channel_type: google.ads.googleads.v8.enums.advertising_channel_type_pb2.AdvertisingChannelTypeEnum.AdvertisingChannelType.ValueType = ...
    """Immutable. The primary serving target for ads within the campaign.
    The targeting options can be refined in `network_settings`.

    This field is required and should not be empty when creating new
    campaigns.

    Can be set only when creating campaigns.
    After the campaign is created, the field can not be changed.
    """

    advertising_channel_sub_type: google.ads.googleads.v8.enums.advertising_channel_sub_type_pb2.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType.ValueType = ...
    """Immutable. Optional refinement to `advertising_channel_type`.
    Must be a valid sub-type of the parent channel type.

    Can be set only when creating campaigns.
    After campaign is created, the field can not be changed.
    """

    tracking_url_template: typing.Text = ...
    """The URL template for constructing a tracking URL."""

    @property
    def url_custom_parameters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.custom_parameter_pb2.CustomParameter]:
        """The list of mappings used to substitute custom parameter tags in a
        `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
        """
        pass
    @property
    def real_time_bidding_setting(self) -> google.ads.googleads.v8.common.real_time_bidding_setting_pb2.RealTimeBiddingSetting:
        """Settings for Real-Time Bidding, a feature only available for campaigns
        targeting the Ad Exchange network.
        """
        pass
    @property
    def network_settings(self) -> global___Campaign.NetworkSettings:
        """The network settings for the campaign."""
        pass
    @property
    def hotel_setting(self) -> global___Campaign.HotelSettingInfo:
        """Immutable. The hotel setting for the campaign."""
        pass
    @property
    def dynamic_search_ads_setting(self) -> global___Campaign.DynamicSearchAdsSetting:
        """The setting for controlling Dynamic Search Ads (DSA)."""
        pass
    @property
    def shopping_setting(self) -> global___Campaign.ShoppingSetting:
        """The setting for controlling Shopping campaigns."""
        pass
    @property
    def targeting_setting(self) -> google.ads.googleads.v8.common.targeting_setting_pb2.TargetingSetting:
        """Setting for targeting related features."""
        pass
    @property
    def geo_target_type_setting(self) -> global___Campaign.GeoTargetTypeSetting:
        """The setting for ads geotargeting."""
        pass
    @property
    def local_campaign_setting(self) -> global___Campaign.LocalCampaignSetting:
        """The setting for local campaign."""
        pass
    @property
    def app_campaign_setting(self) -> global___Campaign.AppCampaignSetting:
        """The setting related to App Campaign."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Output only. The resource names of labels attached to this campaign."""
        pass
    experiment_type: google.ads.googleads.v8.enums.campaign_experiment_type_pb2.CampaignExperimentTypeEnum.CampaignExperimentType.ValueType = ...
    """Output only. The type of campaign: normal, draft, or experiment."""

    base_campaign: typing.Text = ...
    """Output only. The resource name of the base campaign of a draft or experiment campaign.
    For base campaigns, this is equal to `resource_name`.

    This field is read-only.
    """

    campaign_budget: typing.Text = ...
    """The budget of the campaign."""

    bidding_strategy_type: google.ads.googleads.v8.enums.bidding_strategy_type_pb2.BiddingStrategyTypeEnum.BiddingStrategyType.ValueType = ...
    """Output only. The type of bidding strategy.

    A bidding strategy can be created by setting either the bidding scheme to
    create a standard bidding strategy or the `bidding_strategy` field to
    create a portfolio bidding strategy.

    This field is read-only.
    """

    accessible_bidding_strategy: typing.Text = ...
    """Output only. Resource name of AccessibleBiddingStrategy, a read-only view of the
    unrestricted attributes of the attached portfolio bidding
    strategy identified by 'bidding_strategy'. Empty, if the campaign does not
    use a portfolio strategy.
    Unrestricted strategy attributes are available to all customers
    with whom the strategy is shared and are read from the
    AccessibleBiddingStrategy resource. In contrast, restricted attributes are
    only available to the owner customer of the strategy and their managers.
    Restricted attributes can only be read from the BiddingStrategy resource.
    """

    start_date: typing.Text = ...
    """The date when campaign started."""

    end_date: typing.Text = ...
    """The last day of the campaign."""

    final_url_suffix: typing.Text = ...
    """Suffix used to append query parameters to landing pages that are served
    with parallel tracking.
    """

    @property
    def frequency_caps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.frequency_cap_pb2.FrequencyCapEntry]:
        """A list that limits how often each user will see this campaign's ads."""
        pass
    video_brand_safety_suitability: google.ads.googleads.v8.enums.brand_safety_suitability_pb2.BrandSafetySuitabilityEnum.BrandSafetySuitability.ValueType = ...
    """Output only. 3-Tier Brand Safety setting for the campaign."""

    @property
    def vanity_pharma(self) -> global___Campaign.VanityPharma:
        """Describes how unbranded pharma ads will be displayed."""
        pass
    @property
    def selective_optimization(self) -> global___Campaign.SelectiveOptimization:
        """Selective optimization setting for this campaign, which includes a set of
        conversion actions to optimize this campaign towards.
        """
        pass
    @property
    def optimization_goal_setting(self) -> global___Campaign.OptimizationGoalSetting:
        """Optimization goal setting for this campaign, which includes a set of
        optimization goal types.
        """
        pass
    @property
    def tracking_setting(self) -> global___Campaign.TrackingSetting:
        """Output only. Campaign-level settings for tracking information."""
        pass
    payment_mode: google.ads.googleads.v8.enums.payment_mode_pb2.PaymentModeEnum.PaymentMode.ValueType = ...
    """Payment mode for the campaign."""

    optimization_score: builtins.float = ...
    """Output only. Optimization score of the campaign.

    Optimization score is an estimate of how well a campaign is set to perform.
    It ranges from 0% (0.0) to 100% (1.0), with 100% indicating that the
    campaign is performing at full potential. This field is null for unscored
    campaigns.

    See "About optimization score" at
    https://support.google.com/google-ads/answer/9061546.

    This field is read-only.
    """

    @property
    def excluded_parent_asset_field_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[google.ads.googleads.v8.enums.asset_field_type_pb2.AssetFieldTypeEnum.AssetFieldType.ValueType]:
        """The asset field types that should be excluded from this campaign. Asset
        links with these field types will not be inherited by this campaign from
        the upper level.
        """
        pass
    bidding_strategy: typing.Text = ...
    """Portfolio bidding strategy used by campaign."""

    @property
    def commission(self) -> google.ads.googleads.v8.common.bidding_pb2.Commission:
        """Commission is an automatic bidding strategy in which the advertiser pays
        a certain portion of the conversion value.
        """
        pass
    @property
    def manual_cpc(self) -> google.ads.googleads.v8.common.bidding_pb2.ManualCpc:
        """Standard Manual CPC bidding strategy.
        Manual click-based bidding where user pays per click.
        """
        pass
    @property
    def manual_cpm(self) -> google.ads.googleads.v8.common.bidding_pb2.ManualCpm:
        """Standard Manual CPM bidding strategy.
        Manual impression-based bidding where user pays per thousand
        impressions.
        """
        pass
    @property
    def manual_cpv(self) -> google.ads.googleads.v8.common.bidding_pb2.ManualCpv:
        """Output only. A bidding strategy that pays a configurable amount per video view."""
        pass
    @property
    def maximize_conversions(self) -> google.ads.googleads.v8.common.bidding_pb2.MaximizeConversions:
        """Standard Maximize Conversions bidding strategy that automatically
        maximizes number of conversions while spending your budget.
        """
        pass
    @property
    def maximize_conversion_value(self) -> google.ads.googleads.v8.common.bidding_pb2.MaximizeConversionValue:
        """Standard Maximize Conversion Value bidding strategy that automatically
        sets bids to maximize revenue while spending your budget.
        """
        pass
    @property
    def target_cpa(self) -> google.ads.googleads.v8.common.bidding_pb2.TargetCpa:
        """Standard Target CPA bidding strategy that automatically sets bids to
        help get as many conversions as possible at the target
        cost-per-acquisition (CPA) you set.
        """
        pass
    @property
    def target_impression_share(self) -> google.ads.googleads.v8.common.bidding_pb2.TargetImpressionShare:
        """Target Impression Share bidding strategy. An automated bidding strategy
        that sets bids to achieve a desired percentage of impressions.
        """
        pass
    @property
    def target_roas(self) -> google.ads.googleads.v8.common.bidding_pb2.TargetRoas:
        """Standard Target ROAS bidding strategy that automatically maximizes
        revenue while averaging a specific target return on ad spend (ROAS).
        """
        pass
    @property
    def target_spend(self) -> google.ads.googleads.v8.common.bidding_pb2.TargetSpend:
        """Standard Target Spend bidding strategy that automatically sets your bids
        to help get as many clicks as possible within your budget.
        """
        pass
    @property
    def percent_cpc(self) -> google.ads.googleads.v8.common.bidding_pb2.PercentCpc:
        """Standard Percent Cpc bidding strategy where bids are a fraction of the
        advertised price for some good or service.
        """
        pass
    @property
    def target_cpm(self) -> google.ads.googleads.v8.common.bidding_pb2.TargetCpm:
        """A bidding strategy that automatically optimizes cost per thousand
        impressions.
        """
        pass
    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        id : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        status : google.ads.googleads.v8.enums.campaign_status_pb2.CampaignStatusEnum.CampaignStatus.ValueType = ...,
        serving_status : google.ads.googleads.v8.enums.campaign_serving_status_pb2.CampaignServingStatusEnum.CampaignServingStatus.ValueType = ...,
        ad_serving_optimization_status : google.ads.googleads.v8.enums.ad_serving_optimization_status_pb2.AdServingOptimizationStatusEnum.AdServingOptimizationStatus.ValueType = ...,
        advertising_channel_type : google.ads.googleads.v8.enums.advertising_channel_type_pb2.AdvertisingChannelTypeEnum.AdvertisingChannelType.ValueType = ...,
        advertising_channel_sub_type : google.ads.googleads.v8.enums.advertising_channel_sub_type_pb2.AdvertisingChannelSubTypeEnum.AdvertisingChannelSubType.ValueType = ...,
        tracking_url_template : typing.Optional[typing.Text] = ...,
        url_custom_parameters : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.custom_parameter_pb2.CustomParameter]] = ...,
        real_time_bidding_setting : typing.Optional[google.ads.googleads.v8.common.real_time_bidding_setting_pb2.RealTimeBiddingSetting] = ...,
        network_settings : typing.Optional[global___Campaign.NetworkSettings] = ...,
        hotel_setting : typing.Optional[global___Campaign.HotelSettingInfo] = ...,
        dynamic_search_ads_setting : typing.Optional[global___Campaign.DynamicSearchAdsSetting] = ...,
        shopping_setting : typing.Optional[global___Campaign.ShoppingSetting] = ...,
        targeting_setting : typing.Optional[google.ads.googleads.v8.common.targeting_setting_pb2.TargetingSetting] = ...,
        geo_target_type_setting : typing.Optional[global___Campaign.GeoTargetTypeSetting] = ...,
        local_campaign_setting : typing.Optional[global___Campaign.LocalCampaignSetting] = ...,
        app_campaign_setting : typing.Optional[global___Campaign.AppCampaignSetting] = ...,
        labels : typing.Optional[typing.Iterable[typing.Text]] = ...,
        experiment_type : google.ads.googleads.v8.enums.campaign_experiment_type_pb2.CampaignExperimentTypeEnum.CampaignExperimentType.ValueType = ...,
        base_campaign : typing.Optional[typing.Text] = ...,
        campaign_budget : typing.Optional[typing.Text] = ...,
        bidding_strategy_type : google.ads.googleads.v8.enums.bidding_strategy_type_pb2.BiddingStrategyTypeEnum.BiddingStrategyType.ValueType = ...,
        accessible_bidding_strategy : typing.Text = ...,
        start_date : typing.Optional[typing.Text] = ...,
        end_date : typing.Optional[typing.Text] = ...,
        final_url_suffix : typing.Optional[typing.Text] = ...,
        frequency_caps : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.frequency_cap_pb2.FrequencyCapEntry]] = ...,
        video_brand_safety_suitability : google.ads.googleads.v8.enums.brand_safety_suitability_pb2.BrandSafetySuitabilityEnum.BrandSafetySuitability.ValueType = ...,
        vanity_pharma : typing.Optional[global___Campaign.VanityPharma] = ...,
        selective_optimization : typing.Optional[global___Campaign.SelectiveOptimization] = ...,
        optimization_goal_setting : typing.Optional[global___Campaign.OptimizationGoalSetting] = ...,
        tracking_setting : typing.Optional[global___Campaign.TrackingSetting] = ...,
        payment_mode : google.ads.googleads.v8.enums.payment_mode_pb2.PaymentModeEnum.PaymentMode.ValueType = ...,
        optimization_score : typing.Optional[builtins.float] = ...,
        excluded_parent_asset_field_types : typing.Optional[typing.Iterable[google.ads.googleads.v8.enums.asset_field_type_pb2.AssetFieldTypeEnum.AssetFieldType.ValueType]] = ...,
        bidding_strategy : typing.Text = ...,
        commission : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.Commission] = ...,
        manual_cpc : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.ManualCpc] = ...,
        manual_cpm : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.ManualCpm] = ...,
        manual_cpv : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.ManualCpv] = ...,
        maximize_conversions : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.MaximizeConversions] = ...,
        maximize_conversion_value : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.MaximizeConversionValue] = ...,
        target_cpa : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.TargetCpa] = ...,
        target_impression_share : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.TargetImpressionShare] = ...,
        target_roas : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.TargetRoas] = ...,
        target_spend : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.TargetSpend] = ...,
        percent_cpc : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.PercentCpc] = ...,
        target_cpm : typing.Optional[google.ads.googleads.v8.common.bidding_pb2.TargetCpm] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_base_campaign",b"_base_campaign","_campaign_budget",b"_campaign_budget","_end_date",b"_end_date","_final_url_suffix",b"_final_url_suffix","_id",b"_id","_name",b"_name","_optimization_score",b"_optimization_score","_start_date",b"_start_date","_tracking_url_template",b"_tracking_url_template","app_campaign_setting",b"app_campaign_setting","base_campaign",b"base_campaign","bidding_strategy",b"bidding_strategy","campaign_bidding_strategy",b"campaign_bidding_strategy","campaign_budget",b"campaign_budget","commission",b"commission","dynamic_search_ads_setting",b"dynamic_search_ads_setting","end_date",b"end_date","final_url_suffix",b"final_url_suffix","geo_target_type_setting",b"geo_target_type_setting","hotel_setting",b"hotel_setting","id",b"id","local_campaign_setting",b"local_campaign_setting","manual_cpc",b"manual_cpc","manual_cpm",b"manual_cpm","manual_cpv",b"manual_cpv","maximize_conversion_value",b"maximize_conversion_value","maximize_conversions",b"maximize_conversions","name",b"name","network_settings",b"network_settings","optimization_goal_setting",b"optimization_goal_setting","optimization_score",b"optimization_score","percent_cpc",b"percent_cpc","real_time_bidding_setting",b"real_time_bidding_setting","selective_optimization",b"selective_optimization","shopping_setting",b"shopping_setting","start_date",b"start_date","target_cpa",b"target_cpa","target_cpm",b"target_cpm","target_impression_share",b"target_impression_share","target_roas",b"target_roas","target_spend",b"target_spend","targeting_setting",b"targeting_setting","tracking_setting",b"tracking_setting","tracking_url_template",b"tracking_url_template","vanity_pharma",b"vanity_pharma"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_base_campaign",b"_base_campaign","_campaign_budget",b"_campaign_budget","_end_date",b"_end_date","_final_url_suffix",b"_final_url_suffix","_id",b"_id","_name",b"_name","_optimization_score",b"_optimization_score","_start_date",b"_start_date","_tracking_url_template",b"_tracking_url_template","accessible_bidding_strategy",b"accessible_bidding_strategy","ad_serving_optimization_status",b"ad_serving_optimization_status","advertising_channel_sub_type",b"advertising_channel_sub_type","advertising_channel_type",b"advertising_channel_type","app_campaign_setting",b"app_campaign_setting","base_campaign",b"base_campaign","bidding_strategy",b"bidding_strategy","bidding_strategy_type",b"bidding_strategy_type","campaign_bidding_strategy",b"campaign_bidding_strategy","campaign_budget",b"campaign_budget","commission",b"commission","dynamic_search_ads_setting",b"dynamic_search_ads_setting","end_date",b"end_date","excluded_parent_asset_field_types",b"excluded_parent_asset_field_types","experiment_type",b"experiment_type","final_url_suffix",b"final_url_suffix","frequency_caps",b"frequency_caps","geo_target_type_setting",b"geo_target_type_setting","hotel_setting",b"hotel_setting","id",b"id","labels",b"labels","local_campaign_setting",b"local_campaign_setting","manual_cpc",b"manual_cpc","manual_cpm",b"manual_cpm","manual_cpv",b"manual_cpv","maximize_conversion_value",b"maximize_conversion_value","maximize_conversions",b"maximize_conversions","name",b"name","network_settings",b"network_settings","optimization_goal_setting",b"optimization_goal_setting","optimization_score",b"optimization_score","payment_mode",b"payment_mode","percent_cpc",b"percent_cpc","real_time_bidding_setting",b"real_time_bidding_setting","resource_name",b"resource_name","selective_optimization",b"selective_optimization","serving_status",b"serving_status","shopping_setting",b"shopping_setting","start_date",b"start_date","status",b"status","target_cpa",b"target_cpa","target_cpm",b"target_cpm","target_impression_share",b"target_impression_share","target_roas",b"target_roas","target_spend",b"target_spend","targeting_setting",b"targeting_setting","tracking_setting",b"tracking_setting","tracking_url_template",b"tracking_url_template","url_custom_parameters",b"url_custom_parameters","vanity_pharma",b"vanity_pharma","video_brand_safety_suitability",b"video_brand_safety_suitability"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_base_campaign",b"_base_campaign"]) -> typing.Optional[typing_extensions.Literal["base_campaign"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_campaign_budget",b"_campaign_budget"]) -> typing.Optional[typing_extensions.Literal["campaign_budget"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_end_date",b"_end_date"]) -> typing.Optional[typing_extensions.Literal["end_date"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_final_url_suffix",b"_final_url_suffix"]) -> typing.Optional[typing_extensions.Literal["final_url_suffix"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_optimization_score",b"_optimization_score"]) -> typing.Optional[typing_extensions.Literal["optimization_score"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_date",b"_start_date"]) -> typing.Optional[typing_extensions.Literal["start_date"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tracking_url_template",b"_tracking_url_template"]) -> typing.Optional[typing_extensions.Literal["tracking_url_template"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["campaign_bidding_strategy",b"campaign_bidding_strategy"]) -> typing.Optional[typing_extensions.Literal["bidding_strategy","commission","manual_cpc","manual_cpm","manual_cpv","maximize_conversions","maximize_conversion_value","target_cpa","target_impression_share","target_roas","target_spend","percent_cpc","target_cpm"]]: ...
global___Campaign = Campaign
