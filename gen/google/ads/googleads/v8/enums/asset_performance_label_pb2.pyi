"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AssetPerformanceLabelEnum(google.protobuf.message.Message):
    """Proto file describing the performance label of an asset.

    Container for enum describing the performance label of an asset.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AssetPerformanceLabel:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AssetPerformanceLabelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssetPerformanceLabel.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 0
        """Not specified."""

        UNKNOWN: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 1
        """Used for return value only. Represents value unknown in this version."""

        PENDING: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 2
        """This asset does not yet have any performance informantion. This may be
        because it is still under review.
        """

        LEARNING: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 3
        """The asset has started getting impressions but the stats are not
        statistically significant enough to get an asset performance label.
        """

        LOW: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 4
        """Worst performing assets."""

        GOOD: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 5
        """Good performing assets."""

        BEST: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 6
        """Best performing assets."""

    class AssetPerformanceLabel(_AssetPerformanceLabel, metaclass=_AssetPerformanceLabelEnumTypeWrapper):
        """Enum describing the possible performance labels of an asset, usually
        computed in the context of a linkage.
        """
        pass

    UNSPECIFIED: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 0
    """Not specified."""

    UNKNOWN: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 1
    """Used for return value only. Represents value unknown in this version."""

    PENDING: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 2
    """This asset does not yet have any performance informantion. This may be
    because it is still under review.
    """

    LEARNING: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 3
    """The asset has started getting impressions but the stats are not
    statistically significant enough to get an asset performance label.
    """

    LOW: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 4
    """Worst performing assets."""

    GOOD: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 5
    """Good performing assets."""

    BEST: AssetPerformanceLabelEnum.AssetPerformanceLabel.ValueType = ...  # 6
    """Best performing assets."""


    def __init__(self,
        ) -> None: ...
global___AssetPerformanceLabelEnum = AssetPerformanceLabelEnum
