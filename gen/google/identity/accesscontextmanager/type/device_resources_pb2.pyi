"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _DeviceEncryptionStatus:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DeviceEncryptionStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DeviceEncryptionStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    ENCRYPTION_UNSPECIFIED: DeviceEncryptionStatus.ValueType = ...  # 0
    """The encryption status of the device is not specified or not known."""

    ENCRYPTION_UNSUPPORTED: DeviceEncryptionStatus.ValueType = ...  # 1
    """The device does not support encryption."""

    UNENCRYPTED: DeviceEncryptionStatus.ValueType = ...  # 2
    """The device supports encryption, but is currently unencrypted."""

    ENCRYPTED: DeviceEncryptionStatus.ValueType = ...  # 3
    """The device is encrypted."""

class DeviceEncryptionStatus(_DeviceEncryptionStatus, metaclass=_DeviceEncryptionStatusEnumTypeWrapper):
    """The encryption state of the device."""
    pass

ENCRYPTION_UNSPECIFIED: DeviceEncryptionStatus.ValueType = ...  # 0
"""The encryption status of the device is not specified or not known."""

ENCRYPTION_UNSUPPORTED: DeviceEncryptionStatus.ValueType = ...  # 1
"""The device does not support encryption."""

UNENCRYPTED: DeviceEncryptionStatus.ValueType = ...  # 2
"""The device supports encryption, but is currently unencrypted."""

ENCRYPTED: DeviceEncryptionStatus.ValueType = ...  # 3
"""The device is encrypted."""

global___DeviceEncryptionStatus = DeviceEncryptionStatus


class _OsType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _OsTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OsType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    OS_UNSPECIFIED: OsType.ValueType = ...  # 0
    """The operating system of the device is not specified or not known."""

    DESKTOP_MAC: OsType.ValueType = ...  # 1
    """A desktop Mac operating system."""

    DESKTOP_WINDOWS: OsType.ValueType = ...  # 2
    """A desktop Windows operating system."""

    DESKTOP_LINUX: OsType.ValueType = ...  # 3
    """A desktop Linux operating system."""

    DESKTOP_CHROME_OS: OsType.ValueType = ...  # 6
    """A desktop ChromeOS operating system."""

    ANDROID: OsType.ValueType = ...  # 4
    """An Android operating system."""

    IOS: OsType.ValueType = ...  # 5
    """An iOS operating system."""

class OsType(_OsType, metaclass=_OsTypeEnumTypeWrapper):
    """The operating system type of the device.
    Next id: 7
    """
    pass

OS_UNSPECIFIED: OsType.ValueType = ...  # 0
"""The operating system of the device is not specified or not known."""

DESKTOP_MAC: OsType.ValueType = ...  # 1
"""A desktop Mac operating system."""

DESKTOP_WINDOWS: OsType.ValueType = ...  # 2
"""A desktop Windows operating system."""

DESKTOP_LINUX: OsType.ValueType = ...  # 3
"""A desktop Linux operating system."""

DESKTOP_CHROME_OS: OsType.ValueType = ...  # 6
"""A desktop ChromeOS operating system."""

ANDROID: OsType.ValueType = ...  # 4
"""An Android operating system."""

IOS: OsType.ValueType = ...  # 5
"""An iOS operating system."""

global___OsType = OsType


class _DeviceManagementLevel:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DeviceManagementLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DeviceManagementLevel.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    MANAGEMENT_UNSPECIFIED: DeviceManagementLevel.ValueType = ...  # 0
    """The device's management level is not specified or not known."""

    NONE: DeviceManagementLevel.ValueType = ...  # 1
    """The device is not managed."""

    BASIC: DeviceManagementLevel.ValueType = ...  # 2
    """Basic management is enabled, which is generally limited to monitoring and
    wiping the corporate account.
    """

    COMPLETE: DeviceManagementLevel.ValueType = ...  # 3
    """Complete device management. This includes more thorough monitoring and the
    ability to directly manage the device (such as remote wiping). This can be
    enabled through the Android Enterprise Platform.
    """

class DeviceManagementLevel(_DeviceManagementLevel, metaclass=_DeviceManagementLevelEnumTypeWrapper):
    """The degree to which the device is managed by the Cloud organization."""
    pass

MANAGEMENT_UNSPECIFIED: DeviceManagementLevel.ValueType = ...  # 0
"""The device's management level is not specified or not known."""

NONE: DeviceManagementLevel.ValueType = ...  # 1
"""The device is not managed."""

BASIC: DeviceManagementLevel.ValueType = ...  # 2
"""Basic management is enabled, which is generally limited to monitoring and
wiping the corporate account.
"""

COMPLETE: DeviceManagementLevel.ValueType = ...  # 3
"""Complete device management. This includes more thorough monitoring and the
ability to directly manage the device (such as remote wiping). This can be
enabled through the Android Enterprise Platform.
"""

global___DeviceManagementLevel = DeviceManagementLevel

