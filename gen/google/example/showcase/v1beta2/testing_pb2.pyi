"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Session(google.protobuf.message.Message):
    """A session is a suite of tests, generally being made in the context
    of testing code generation.

    A session defines tests it may expect, based on which version of the
    code generation spec is in use.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Version:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _VersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Version.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        VERSION_UNSPECIFIED: Session.Version.ValueType = ...  # 0
        """Unspecified version. If passed on creation, the session will default
        to using the latest stable release.
        """

        V1_LATEST: Session.Version.ValueType = ...  # 1
        """The latest v1. Currently, this is v1.0."""

        V1_0: Session.Version.ValueType = ...  # 2
        """v1.0. (Until the spec is "GA", this will be a moving target.)"""

    class Version(_Version, metaclass=_VersionEnumTypeWrapper):
        """The specification versions understood by Showcase."""
        pass

    VERSION_UNSPECIFIED: Session.Version.ValueType = ...  # 0
    """Unspecified version. If passed on creation, the session will default
    to using the latest stable release.
    """

    V1_LATEST: Session.Version.ValueType = ...  # 1
    """The latest v1. Currently, this is v1.0."""

    V1_0: Session.Version.ValueType = ...  # 2
    """v1.0. (Until the spec is "GA", this will be a moving target.)"""


    NAME_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the session. The ID must conform to ^[a-z]+$
    If this is not provided, Showcase chooses one at random.
    """

    version: global___Session.Version.ValueType = ...
    """Required. The version this session is using."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        version : global___Session.Version.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","version",b"version"]) -> None: ...
global___Session = Session

class CreateSessionRequest(google.protobuf.message.Message):
    """The request for the CreateSession method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SESSION_FIELD_NUMBER: builtins.int
    @property
    def session(self) -> global___Session:
        """The session to be created.
        Sessions are immutable once they are created (although they can
        be deleted).
        """
        pass
    def __init__(self,
        *,
        session : typing.Optional[global___Session] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["session",b"session"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["session",b"session"]) -> None: ...
global___CreateSessionRequest = CreateSessionRequest

class GetSessionRequest(google.protobuf.message.Message):
    """The request for the GetSession method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The session to be retrieved."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetSessionRequest = GetSessionRequest

class ListSessionsRequest(google.protobuf.message.Message):
    """The request for the ListSessions method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    page_size: builtins.int = ...
    """The maximum number of sessions to return per page."""

    page_token: typing.Text = ...
    """The page token, for retrieving subsequent pages."""

    def __init__(self,
        *,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListSessionsRequest = ListSessionsRequest

class ListSessionsResponse(google.protobuf.message.Message):
    """Response for the ListSessions method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SESSIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def sessions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Session]:
        """The sessions being returned."""
        pass
    next_page_token: typing.Text = ...
    """The next page token, if any.
    An empty value here means the last page has been reached.
    """

    def __init__(self,
        *,
        sessions : typing.Optional[typing.Iterable[global___Session]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","sessions",b"sessions"]) -> None: ...
global___ListSessionsResponse = ListSessionsResponse

class DeleteSessionRequest(google.protobuf.message.Message):
    """Request for the DeleteSession method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The session to be deleted."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteSessionRequest = DeleteSessionRequest

class ReportSessionRequest(google.protobuf.message.Message):
    """Request message for reporting on a session."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The session to be reported on."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___ReportSessionRequest = ReportSessionRequest

class ReportSessionResponse(google.protobuf.message.Message):
    """Response message for reporting on a session."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Result:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ResultEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Result.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        RESULT_UNSPECIFIED: ReportSessionResponse.Result.ValueType = ...  # 0
        PASSED: ReportSessionResponse.Result.ValueType = ...  # 1
        """The session is complete, and everything passed."""

        FAILED: ReportSessionResponse.Result.ValueType = ...  # 2
        """The session had an explicit failure."""

        INCOMPLETE: ReportSessionResponse.Result.ValueType = ...  # 3
        """The session is incomplete. This is a failure response."""

    class Result(_Result, metaclass=_ResultEnumTypeWrapper):
        """The topline state of the report."""
        pass

    RESULT_UNSPECIFIED: ReportSessionResponse.Result.ValueType = ...  # 0
    PASSED: ReportSessionResponse.Result.ValueType = ...  # 1
    """The session is complete, and everything passed."""

    FAILED: ReportSessionResponse.Result.ValueType = ...  # 2
    """The session had an explicit failure."""

    INCOMPLETE: ReportSessionResponse.Result.ValueType = ...  # 3
    """The session is incomplete. This is a failure response."""


    RESULT_FIELD_NUMBER: builtins.int
    TEST_RUNS_FIELD_NUMBER: builtins.int
    result: global___ReportSessionResponse.Result.ValueType = ...
    """The state of the report."""

    @property
    def test_runs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TestRun]:
        """The test runs of this session."""
        pass
    def __init__(self,
        *,
        result : global___ReportSessionResponse.Result.ValueType = ...,
        test_runs : typing.Optional[typing.Iterable[global___TestRun]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["result",b"result","test_runs",b"test_runs"]) -> None: ...
global___ReportSessionResponse = ReportSessionResponse

class Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ExpectationLevel:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ExpectationLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ExpectationLevel.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        EXPECTATION_LEVEL_UNSPECIFIED: Test.ExpectationLevel.ValueType = ...  # 0
        REQUIRED: Test.ExpectationLevel.ValueType = ...  # 1
        """This test is strictly required."""

        RECOMMENDED: Test.ExpectationLevel.ValueType = ...  # 2
        """This test is recommended.

        If a generator explicitly ignores a recommended test (see `DeleteTest`),
        then the report may still pass, but with a warning.

        If a generator skips a recommended test and does not explicitly
        express that intention, the report will fail.
        """

        OPTIONAL: Test.ExpectationLevel.ValueType = ...  # 3
        """This test is optional.

        If a generator explicitly ignores an optional test (see `DeleteTest`),
        then the report may still pass, and no warning will be issued.

        If a generator skips an optional test and does not explicitly
        express that intention, the report may still pass, but with a
        warning.
        """

    class ExpectationLevel(_ExpectationLevel, metaclass=_ExpectationLevelEnumTypeWrapper):
        """Whether or not a test is required, recommended, or optional."""
        pass

    EXPECTATION_LEVEL_UNSPECIFIED: Test.ExpectationLevel.ValueType = ...  # 0
    REQUIRED: Test.ExpectationLevel.ValueType = ...  # 1
    """This test is strictly required."""

    RECOMMENDED: Test.ExpectationLevel.ValueType = ...  # 2
    """This test is recommended.

    If a generator explicitly ignores a recommended test (see `DeleteTest`),
    then the report may still pass, but with a warning.

    If a generator skips a recommended test and does not explicitly
    express that intention, the report will fail.
    """

    OPTIONAL: Test.ExpectationLevel.ValueType = ...  # 3
    """This test is optional.

    If a generator explicitly ignores an optional test (see `DeleteTest`),
    then the report may still pass, and no warning will be issued.

    If a generator skips an optional test and does not explicitly
    express that intention, the report may still pass, but with a
    warning.
    """


    class Blueprint(google.protobuf.message.Message):
        """A blueprint is an explicit definition of methods and requests that are
        needed to be made to test this specific test case. Ideally this would be
        represented by something more robust like CEL, but as of writing this, I am
        unsure if CEL is ready.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Invocation(google.protobuf.message.Message):
            """A message representing a method invocation."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            METHOD_FIELD_NUMBER: builtins.int
            SERIALIZED_REQUEST_FIELD_NUMBER: builtins.int
            method: typing.Text = ...
            """The fully qualified name of the showcase method to be invoked."""

            serialized_request: builtins.bytes = ...
            """The request to be made if a specific request is necessary."""

            def __init__(self,
                *,
                method : typing.Text = ...,
                serialized_request : builtins.bytes = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["method",b"method","serialized_request",b"serialized_request"]) -> None: ...

        NAME_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        REQUEST_FIELD_NUMBER: builtins.int
        ADDITIONAL_REQUESTS_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """The name of this blueprint."""

        description: typing.Text = ...
        """A description of this blueprint."""

        @property
        def request(self) -> global___Test.Blueprint.Invocation:
            """The initial request to trigger this test."""
            pass
        @property
        def additional_requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Test.Blueprint.Invocation]:
            """An ordered list of method calls that can be called to trigger this test."""
            pass
        def __init__(self,
            *,
            name : typing.Text = ...,
            description : typing.Text = ...,
            request : typing.Optional[global___Test.Blueprint.Invocation] = ...,
            additional_requests : typing.Optional[typing.Iterable[global___Test.Blueprint.Invocation]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["request",b"request"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["additional_requests",b"additional_requests","description",b"description","name",b"name","request",b"request"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    EXPECTATION_LEVEL_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    BLUEPRINTS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the test.
    The tests/* portion of the names are hard-coded, and do not change
    from session to session.
    """

    expectation_level: global___Test.ExpectationLevel.ValueType = ...
    """The expectation level for this test."""

    description: typing.Text = ...
    """A description of the test."""

    @property
    def blueprints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Test.Blueprint]:
        """The blueprints that will satisfy this test. There may be multiple
        blueprints that can signal to the server that this test case is being
        exercised. Although multiple blueprints are specified, only a single
        blueprint needs to be run to signal that the test case was exercised.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        expectation_level : global___Test.ExpectationLevel.ValueType = ...,
        description : typing.Text = ...,
        blueprints : typing.Optional[typing.Iterable[global___Test.Blueprint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["blueprints",b"blueprints","description",b"description","expectation_level",b"expectation_level","name",b"name"]) -> None: ...
global___Test = Test

class Issue(google.protobuf.message.Message):
    """An issue found in the test."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TYPE_UNSPECIFIED: Issue.Type.ValueType = ...  # 0
        SKIPPED: Issue.Type.ValueType = ...  # 1
        """The test was never instrumented."""

        PENDING: Issue.Type.ValueType = ...  # 2
        """The test was started but never confirmed."""

        INCORRECT_CONFIRMATION: Issue.Type.ValueType = ...  # 3
        """The test was instrumented, but Showcase got an unexpected
        value when the generator tried to confirm success.
        """

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The different potential types of issues."""
        pass

    TYPE_UNSPECIFIED: Issue.Type.ValueType = ...  # 0
    SKIPPED: Issue.Type.ValueType = ...  # 1
    """The test was never instrumented."""

    PENDING: Issue.Type.ValueType = ...  # 2
    """The test was started but never confirmed."""

    INCORRECT_CONFIRMATION: Issue.Type.ValueType = ...  # 3
    """The test was instrumented, but Showcase got an unexpected
    value when the generator tried to confirm success.
    """


    class _Severity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SeverityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Severity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SEVERITY_UNSPECIFIED: Issue.Severity.ValueType = ...  # 0
        ERROR: Issue.Severity.ValueType = ...  # 1
        """Errors."""

        WARNING: Issue.Severity.ValueType = ...  # 2
        """Warnings."""

    class Severity(_Severity, metaclass=_SeverityEnumTypeWrapper):
        """Severity levels."""
        pass

    SEVERITY_UNSPECIFIED: Issue.Severity.ValueType = ...  # 0
    ERROR: Issue.Severity.ValueType = ...  # 1
    """Errors."""

    WARNING: Issue.Severity.ValueType = ...  # 2
    """Warnings."""


    TYPE_FIELD_NUMBER: builtins.int
    SEVERITY_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    type: global___Issue.Type.ValueType = ...
    """The type of the issue."""

    severity: global___Issue.Severity.ValueType = ...
    """The severity of the issue."""

    description: typing.Text = ...
    """A description of the issue."""

    def __init__(self,
        *,
        type : global___Issue.Type.ValueType = ...,
        severity : global___Issue.Severity.ValueType = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","severity",b"severity","type",b"type"]) -> None: ...
global___Issue = Issue

class ListTestsRequest(google.protobuf.message.Message):
    """The request for the ListTests method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """The session."""

    page_size: builtins.int = ...
    """The maximum number of tests to return per page."""

    page_token: typing.Text = ...
    """The page token, for retrieving subsequent pages."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListTestsRequest = ListTestsRequest

class ListTestsResponse(google.protobuf.message.Message):
    """The response for the ListTests method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TESTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def tests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Test]:
        """The tests being returned."""
        pass
    next_page_token: typing.Text = ...
    """The next page token, if any.
    An empty value here means the last page has been reached.
    """

    def __init__(self,
        *,
        tests : typing.Optional[typing.Iterable[global___Test]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","tests",b"tests"]) -> None: ...
global___ListTestsResponse = ListTestsResponse

class TestRun(google.protobuf.message.Message):
    """A TestRun is the result of running a Test."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEST_FIELD_NUMBER: builtins.int
    ISSUE_FIELD_NUMBER: builtins.int
    test: typing.Text = ...
    """The name of the test.
    The tests/* portion of the names are hard-coded, and do not change
    from session to session.
    """

    @property
    def issue(self) -> global___Issue:
        """An issue found with the test run. If empty, this test run was successful."""
        pass
    def __init__(self,
        *,
        test : typing.Text = ...,
        issue : typing.Optional[global___Issue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["issue",b"issue"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["issue",b"issue","test",b"test"]) -> None: ...
global___TestRun = TestRun

class DeleteTestRequest(google.protobuf.message.Message):
    """Request message for deleting a test."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The test to be deleted."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteTestRequest = DeleteTestRequest

class VerifyTestRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ANSWER_FIELD_NUMBER: builtins.int
    ANSWERS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The test to have an answer registered to it."""

    answer: builtins.bytes = ...
    """The answer from the test."""

    @property
    def answers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]:
        """The answers from the test if multiple are to be checked"""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        answer : builtins.bytes = ...,
        answers : typing.Optional[typing.Iterable[builtins.bytes]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer",b"answer","answers",b"answers","name",b"name"]) -> None: ...
global___VerifyTestRequest = VerifyTestRequest

class VerifyTestResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ISSUE_FIELD_NUMBER: builtins.int
    @property
    def issue(self) -> global___Issue:
        """An issue if check answer was unsuccessful. This will be empty if the check
        answer succeeded.
        """
        pass
    def __init__(self,
        *,
        issue : typing.Optional[global___Issue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["issue",b"issue"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["issue",b"issue"]) -> None: ...
global___VerifyTestResponse = VerifyTestResponse
