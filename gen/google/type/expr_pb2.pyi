"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Expr(google.protobuf.message.Message):
    """Represents a textual expression in the Common Expression Language (CEL)
    syntax. CEL is a C-like expression language. The syntax and semantics of CEL
    are documented at https://github.com/google/cel-spec.

    Example (Comparison):

        title: "Summary size limit"
        description: "Determines if a summary is less than 100 chars"
        expression: "document.summary.size() < 100"

    Example (Equality):

        title: "Requestor is owner"
        description: "Determines if requestor is the document owner"
        expression: "document.owner == request.auth.claims.email"

    Example (Logic):

        title: "Public documents"
        description: "Determine whether the document should be publicly visible"
        expression: "document.type != 'private' && document.type != 'internal'"

    Example (Data Manipulation):

        title: "Notification string"
        description: "Create a notification string with a timestamp."
        expression: "'New message received at ' + string(document.create_time)"

    The exact variables and functions that may be referenced within an expression
    are determined by the service that evaluates it. See the service
    documentation for additional information.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXPRESSION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    expression: typing.Text = ...
    """Textual representation of an expression in Common Expression Language
    syntax.
    """

    title: typing.Text = ...
    """Optional. Title for the expression, i.e. a short string describing
    its purpose. This can be used e.g. in UIs which allow to enter the
    expression.
    """

    description: typing.Text = ...
    """Optional. Description of the expression. This is a longer text which
    describes the expression, e.g. when hovered over it in a UI.
    """

    location: typing.Text = ...
    """Optional. String indicating the location of the expression for error
    reporting, e.g. a file name and a position in the file.
    """

    def __init__(self,
        *,
        expression : typing.Text = ...,
        title : typing.Text = ...,
        description : typing.Text = ...,
        location : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","expression",b"expression","location",b"location","title",b"title"]) -> None: ...
global___Expr = Expr
