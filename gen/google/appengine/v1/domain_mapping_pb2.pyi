"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class DomainMapping(google.protobuf.message.Message):
    """A domain serving an App Engine application."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    SSL_SETTINGS_FIELD_NUMBER: builtins.int
    RESOURCE_RECORDS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Full path to the `DomainMapping` resource in the API. Example:
    `apps/myapp/domainMapping/example.com`.

    @OutputOnly
    """

    id: typing.Text = ...
    """Relative name of the domain serving the application. Example:
    `example.com`.
    """

    @property
    def ssl_settings(self) -> global___SslSettings:
        """SSL configuration for this domain. If unconfigured, this domain will not
        serve with SSL.
        """
        pass
    @property
    def resource_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourceRecord]:
        """The resource records required to configure this domain mapping. These
        records must be added to the domain's DNS configuration in order to
        serve the application via this domain mapping.

        @OutputOnly
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Text = ...,
        ssl_settings : typing.Optional[global___SslSettings] = ...,
        resource_records : typing.Optional[typing.Iterable[global___ResourceRecord]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ssl_settings",b"ssl_settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name","resource_records",b"resource_records","ssl_settings",b"ssl_settings"]) -> None: ...
global___DomainMapping = DomainMapping

class SslSettings(google.protobuf.message.Message):
    """SSL configuration for a `DomainMapping` resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SslManagementType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SslManagementTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SslManagementType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SSL_MANAGEMENT_TYPE_UNSPECIFIED: SslSettings.SslManagementType.ValueType = ...  # 0
        """Defaults to `AUTOMATIC`."""

        AUTOMATIC: SslSettings.SslManagementType.ValueType = ...  # 1
        """SSL support for this domain is configured automatically. The mapped SSL
        certificate will be automatically renewed.
        """

        MANUAL: SslSettings.SslManagementType.ValueType = ...  # 2
        """SSL support for this domain is configured manually by the user. Either
        the domain has no SSL support or a user-obtained SSL certificate has been
        explictly mapped to this domain.
        """

    class SslManagementType(_SslManagementType, metaclass=_SslManagementTypeEnumTypeWrapper):
        """The SSL management type for this domain."""
        pass

    SSL_MANAGEMENT_TYPE_UNSPECIFIED: SslSettings.SslManagementType.ValueType = ...  # 0
    """Defaults to `AUTOMATIC`."""

    AUTOMATIC: SslSettings.SslManagementType.ValueType = ...  # 1
    """SSL support for this domain is configured automatically. The mapped SSL
    certificate will be automatically renewed.
    """

    MANUAL: SslSettings.SslManagementType.ValueType = ...  # 2
    """SSL support for this domain is configured manually by the user. Either
    the domain has no SSL support or a user-obtained SSL certificate has been
    explictly mapped to this domain.
    """


    CERTIFICATE_ID_FIELD_NUMBER: builtins.int
    SSL_MANAGEMENT_TYPE_FIELD_NUMBER: builtins.int
    PENDING_MANAGED_CERTIFICATE_ID_FIELD_NUMBER: builtins.int
    certificate_id: typing.Text = ...
    """ID of the `AuthorizedCertificate` resource configuring SSL for the
    application. Clearing this field will remove SSL support.

    By default, a managed certificate is automatically created for every
    domain mapping. To omit SSL support or to configure SSL manually, specify
    `SslManagementType.MANUAL` on a `CREATE` or `UPDATE` request. You must
    be authorized to administer the `AuthorizedCertificate` resource to
    manually map it to a `DomainMapping` resource.
    Example: `12345`.
    """

    ssl_management_type: global___SslSettings.SslManagementType.ValueType = ...
    """SSL management type for this domain. If `AUTOMATIC`, a managed certificate
    is automatically provisioned. If `MANUAL`, `certificate_id` must be
    manually specified in order to configure SSL for this domain.
    """

    pending_managed_certificate_id: typing.Text = ...
    """ID of the managed `AuthorizedCertificate` resource currently being
    provisioned, if applicable. Until the new managed certificate has been
    successfully provisioned, the previous SSL state will be preserved. Once
    the provisioning process completes, the `certificate_id` field will reflect
    the new managed certificate and this field will be left empty. To remove
    SSL support while there is still a pending managed certificate, clear the
    `certificate_id` field with an `UpdateDomainMappingRequest`.

    @OutputOnly
    """

    def __init__(self,
        *,
        certificate_id : typing.Text = ...,
        ssl_management_type : global___SslSettings.SslManagementType.ValueType = ...,
        pending_managed_certificate_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["certificate_id",b"certificate_id","pending_managed_certificate_id",b"pending_managed_certificate_id","ssl_management_type",b"ssl_management_type"]) -> None: ...
global___SslSettings = SslSettings

class ResourceRecord(google.protobuf.message.Message):
    """A DNS resource record."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RecordType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RecordTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RecordType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        RECORD_TYPE_UNSPECIFIED: ResourceRecord.RecordType.ValueType = ...  # 0
        """An unknown resource record."""

        A: ResourceRecord.RecordType.ValueType = ...  # 1
        """An A resource record. Data is an IPv4 address."""

        AAAA: ResourceRecord.RecordType.ValueType = ...  # 2
        """An AAAA resource record. Data is an IPv6 address."""

        CNAME: ResourceRecord.RecordType.ValueType = ...  # 3
        """A CNAME resource record. Data is a domain name to be aliased."""

    class RecordType(_RecordType, metaclass=_RecordTypeEnumTypeWrapper):
        """A resource record type."""
        pass

    RECORD_TYPE_UNSPECIFIED: ResourceRecord.RecordType.ValueType = ...  # 0
    """An unknown resource record."""

    A: ResourceRecord.RecordType.ValueType = ...  # 1
    """An A resource record. Data is an IPv4 address."""

    AAAA: ResourceRecord.RecordType.ValueType = ...  # 2
    """An AAAA resource record. Data is an IPv6 address."""

    CNAME: ResourceRecord.RecordType.ValueType = ...  # 3
    """A CNAME resource record. Data is a domain name to be aliased."""


    NAME_FIELD_NUMBER: builtins.int
    RRDATA_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Relative name of the object affected by this record. Only applicable for
    `CNAME` records. Example: 'www'.
    """

    rrdata: typing.Text = ...
    """Data for this record. Values vary by record type, as defined in RFC 1035
    (section 5) and RFC 1034 (section 3.6.1).
    """

    type: global___ResourceRecord.RecordType.ValueType = ...
    """Resource record type. Example: `AAAA`."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        rrdata : typing.Text = ...,
        type : global___ResourceRecord.RecordType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","rrdata",b"rrdata","type",b"type"]) -> None: ...
global___ResourceRecord = ResourceRecord
