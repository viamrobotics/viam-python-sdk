"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class FirewallRule(google.protobuf.message.Message):
    """A single firewall rule that is evaluated against incoming traffic
    and provides an action to take on matched requests.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Action:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Action.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED_ACTION: FirewallRule.Action.ValueType = ...  # 0
        ALLOW: FirewallRule.Action.ValueType = ...  # 1
        """Matching requests are allowed."""

        DENY: FirewallRule.Action.ValueType = ...  # 2
        """Matching requests are denied."""

    class Action(_Action, metaclass=_ActionEnumTypeWrapper):
        """Available actions to take on matching requests."""
        pass

    UNSPECIFIED_ACTION: FirewallRule.Action.ValueType = ...  # 0
    ALLOW: FirewallRule.Action.ValueType = ...  # 1
    """Matching requests are allowed."""

    DENY: FirewallRule.Action.ValueType = ...  # 2
    """Matching requests are denied."""


    PRIORITY_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    SOURCE_RANGE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    priority: builtins.int = ...
    """A positive integer between [1, Int32.MaxValue-1] that defines the order of
    rule evaluation. Rules with the lowest priority are evaluated first.

    A default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic
    when no previous rule matches. Only the action of this rule can be modified
    by the user.
    """

    action: global___FirewallRule.Action.ValueType = ...
    """The action to take on matched requests."""

    source_range: typing.Text = ...
    """IP address or range, defined using CIDR notation, of requests that this
    rule applies to. You can use the wildcard character "*" to match all IPs
    equivalent to "0/0" and "::/0" together.
    Examples: `192.168.1.1` or `192.168.0.0/16` or `2001:db8::/32`
              or `2001:0db8:0000:0042:0000:8a2e:0370:7334`.


    <p>Truncation will be silently performed on addresses which are not
    properly truncated. For example, `1.2.3.4/24` is accepted as the same
    address as `1.2.3.0/24`. Similarly, for IPv6, `2001:db8::1/32` is accepted
    as the same address as `2001:db8::/32`.
    """

    description: typing.Text = ...
    """An optional string description of this rule.
    This field has a maximum length of 100 characters.
    """

    def __init__(self,
        *,
        priority : builtins.int = ...,
        action : global___FirewallRule.Action.ValueType = ...,
        source_range : typing.Text = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","description",b"description","priority",b"priority","source_range",b"source_range"]) -> None: ...
global___FirewallRule = FirewallRule
