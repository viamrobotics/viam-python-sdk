"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.appengine.v1beta.network_settings_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Service(google.protobuf.message.Message):
    """A Service resource is a logical component of an application that can share
    state and communicate in a secure fashion with other services.
    For example, an application that handles customer requests might
    include separate services to handle tasks such as backend data
    analysis or API requests from mobile devices. Each service has a
    collection of versions that define a specific set of code used to
    implement the functionality of that service.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    SPLIT_FIELD_NUMBER: builtins.int
    NETWORK_SETTINGS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Full path to the Service resource in the API.
    Example: `apps/myapp/services/default`.

    @OutputOnly
    """

    id: typing.Text = ...
    """Relative name of the service within the application.
    Example: `default`.

    @OutputOnly
    """

    @property
    def split(self) -> global___TrafficSplit:
        """Mapping that defines fractional HTTP traffic diversion to
        different versions within the service.
        """
        pass
    @property
    def network_settings(self) -> google.appengine.v1beta.network_settings_pb2.NetworkSettings:
        """Ingress settings for this service. Will apply to all versions."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Text = ...,
        split : typing.Optional[global___TrafficSplit] = ...,
        network_settings : typing.Optional[google.appengine.v1beta.network_settings_pb2.NetworkSettings] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["network_settings",b"network_settings","split",b"split"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name","network_settings",b"network_settings","split",b"split"]) -> None: ...
global___Service = Service

class TrafficSplit(google.protobuf.message.Message):
    """Traffic routing configuration for versions within a single service. Traffic
    splits define how traffic directed to the service is assigned to versions.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ShardBy:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ShardByEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ShardBy.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: TrafficSplit.ShardBy.ValueType = ...  # 0
        """Diversion method unspecified."""

        COOKIE: TrafficSplit.ShardBy.ValueType = ...  # 1
        """Diversion based on a specially named cookie, "GOOGAPPUID." The cookie
        must be set by the application itself or no diversion will occur.
        """

        IP: TrafficSplit.ShardBy.ValueType = ...  # 2
        """Diversion based on applying the modulus operation to a fingerprint
        of the IP address.
        """

        RANDOM: TrafficSplit.ShardBy.ValueType = ...  # 3
        """Diversion based on weighted random assignment. An incoming request is
        randomly routed to a version in the traffic split, with probability
        proportional to the version's traffic share.
        """

    class ShardBy(_ShardBy, metaclass=_ShardByEnumTypeWrapper):
        """Available sharding mechanisms."""
        pass

    UNSPECIFIED: TrafficSplit.ShardBy.ValueType = ...  # 0
    """Diversion method unspecified."""

    COOKIE: TrafficSplit.ShardBy.ValueType = ...  # 1
    """Diversion based on a specially named cookie, "GOOGAPPUID." The cookie
    must be set by the application itself or no diversion will occur.
    """

    IP: TrafficSplit.ShardBy.ValueType = ...  # 2
    """Diversion based on applying the modulus operation to a fingerprint
    of the IP address.
    """

    RANDOM: TrafficSplit.ShardBy.ValueType = ...  # 3
    """Diversion based on weighted random assignment. An incoming request is
    randomly routed to a version in the traffic split, with probability
    proportional to the version's traffic share.
    """


    class AllocationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.float = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    SHARD_BY_FIELD_NUMBER: builtins.int
    ALLOCATIONS_FIELD_NUMBER: builtins.int
    shard_by: global___TrafficSplit.ShardBy.ValueType = ...
    """Mechanism used to determine which version a request is sent to.
    The traffic selection algorithm will
    be stable for either type until allocations are changed.
    """

    @property
    def allocations(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.float]:
        """Mapping from version IDs within the service to fractional
        (0.000, 1] allocations of traffic for that version. Each version can
        be specified only once, but some versions in the service may not
        have any traffic allocation. Services that have traffic allocated
        cannot be deleted until either the service is deleted or
        their traffic allocation is removed. Allocations must sum to 1.
        Up to two decimal place precision is supported for IP-based splits and
        up to three decimal places is supported for cookie-based splits.
        """
        pass
    def __init__(self,
        *,
        shard_by : global___TrafficSplit.ShardBy.ValueType = ...,
        allocations : typing.Optional[typing.Mapping[typing.Text, builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allocations",b"allocations","shard_by",b"shard_by"]) -> None: ...
global___TrafficSplit = TrafficSplit
