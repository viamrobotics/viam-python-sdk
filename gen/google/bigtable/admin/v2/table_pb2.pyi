"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _RestoreSourceType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _RestoreSourceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RestoreSourceType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    RESTORE_SOURCE_TYPE_UNSPECIFIED: RestoreSourceType.ValueType = ...  # 0
    """No restore associated."""

    BACKUP: RestoreSourceType.ValueType = ...  # 1
    """A backup was used as the source of the restore."""

class RestoreSourceType(_RestoreSourceType, metaclass=_RestoreSourceTypeEnumTypeWrapper):
    """Indicates the type of the restore source."""
    pass

RESTORE_SOURCE_TYPE_UNSPECIFIED: RestoreSourceType.ValueType = ...  # 0
"""No restore associated."""

BACKUP: RestoreSourceType.ValueType = ...  # 1
"""A backup was used as the source of the restore."""

global___RestoreSourceType = RestoreSourceType


class RestoreInfo(google.protobuf.message.Message):
    """Information about a table restore."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOURCE_TYPE_FIELD_NUMBER: builtins.int
    BACKUP_INFO_FIELD_NUMBER: builtins.int
    source_type: global___RestoreSourceType.ValueType = ...
    """The type of the restore source."""

    @property
    def backup_info(self) -> global___BackupInfo:
        """Information about the backup used to restore the table. The backup
        may no longer exist.
        """
        pass
    def __init__(self,
        *,
        source_type : global___RestoreSourceType.ValueType = ...,
        backup_info : typing.Optional[global___BackupInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["backup_info",b"backup_info","source_info",b"source_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_info",b"backup_info","source_info",b"source_info","source_type",b"source_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["source_info",b"source_info"]) -> typing.Optional[typing_extensions.Literal["backup_info"]]: ...
global___RestoreInfo = RestoreInfo

class Table(google.protobuf.message.Message):
    """A collection of user data indexed by row, column, and timestamp.
    Each table is served using the resources of its parent cluster.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _TimestampGranularity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TimestampGranularityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TimestampGranularity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TIMESTAMP_GRANULARITY_UNSPECIFIED: Table.TimestampGranularity.ValueType = ...  # 0
        """The user did not specify a granularity. Should not be returned.
        When specified during table creation, MILLIS will be used.
        """

        MILLIS: Table.TimestampGranularity.ValueType = ...  # 1
        """The table keeps data versioned at a granularity of 1ms."""

    class TimestampGranularity(_TimestampGranularity, metaclass=_TimestampGranularityEnumTypeWrapper):
        """Possible timestamp granularities to use when keeping multiple versions
        of data in a table.
        """
        pass

    TIMESTAMP_GRANULARITY_UNSPECIFIED: Table.TimestampGranularity.ValueType = ...  # 0
    """The user did not specify a granularity. Should not be returned.
    When specified during table creation, MILLIS will be used.
    """

    MILLIS: Table.TimestampGranularity.ValueType = ...  # 1
    """The table keeps data versioned at a granularity of 1ms."""


    class _View:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ViewEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_View.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        VIEW_UNSPECIFIED: Table.View.ValueType = ...  # 0
        """Uses the default view for each method as documented in its request."""

        NAME_ONLY: Table.View.ValueType = ...  # 1
        """Only populates `name`."""

        SCHEMA_VIEW: Table.View.ValueType = ...  # 2
        """Only populates `name` and fields related to the table's schema."""

        REPLICATION_VIEW: Table.View.ValueType = ...  # 3
        """Only populates `name` and fields related to the table's replication
        state.
        """

        ENCRYPTION_VIEW: Table.View.ValueType = ...  # 5
        """Only populates 'name' and fields related to the table's encryption state."""

        FULL: Table.View.ValueType = ...  # 4
        """Populates all fields."""

    class View(_View, metaclass=_ViewEnumTypeWrapper):
        """Defines a view over a table's fields."""
        pass

    VIEW_UNSPECIFIED: Table.View.ValueType = ...  # 0
    """Uses the default view for each method as documented in its request."""

    NAME_ONLY: Table.View.ValueType = ...  # 1
    """Only populates `name`."""

    SCHEMA_VIEW: Table.View.ValueType = ...  # 2
    """Only populates `name` and fields related to the table's schema."""

    REPLICATION_VIEW: Table.View.ValueType = ...  # 3
    """Only populates `name` and fields related to the table's replication
    state.
    """

    ENCRYPTION_VIEW: Table.View.ValueType = ...  # 5
    """Only populates 'name' and fields related to the table's encryption state."""

    FULL: Table.View.ValueType = ...  # 4
    """Populates all fields."""


    class ClusterState(google.protobuf.message.Message):
        """The state of a table's data in a particular cluster."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _ReplicationState:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReplicationStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ReplicationState.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            STATE_NOT_KNOWN: Table.ClusterState.ReplicationState.ValueType = ...  # 0
            """The replication state of the table is unknown in this cluster."""

            INITIALIZING: Table.ClusterState.ReplicationState.ValueType = ...  # 1
            """The cluster was recently created, and the table must finish copying
            over pre-existing data from other clusters before it can begin
            receiving live replication updates and serving Data API requests.
            """

            PLANNED_MAINTENANCE: Table.ClusterState.ReplicationState.ValueType = ...  # 2
            """The table is temporarily unable to serve Data API requests from this
            cluster due to planned internal maintenance.
            """

            UNPLANNED_MAINTENANCE: Table.ClusterState.ReplicationState.ValueType = ...  # 3
            """The table is temporarily unable to serve Data API requests from this
            cluster due to unplanned or emergency maintenance.
            """

            READY: Table.ClusterState.ReplicationState.ValueType = ...  # 4
            """The table can serve Data API requests from this cluster. Depending on
            replication delay, reads may not immediately reflect the state of the
            table in other clusters.
            """

            READY_OPTIMIZING: Table.ClusterState.ReplicationState.ValueType = ...  # 5
            """The table is fully created and ready for use after a restore, and is
            being optimized for performance. When optimizations are complete, the
            table will transition to `READY` state.
            """

        class ReplicationState(_ReplicationState, metaclass=_ReplicationStateEnumTypeWrapper):
            """Table replication states."""
            pass

        STATE_NOT_KNOWN: Table.ClusterState.ReplicationState.ValueType = ...  # 0
        """The replication state of the table is unknown in this cluster."""

        INITIALIZING: Table.ClusterState.ReplicationState.ValueType = ...  # 1
        """The cluster was recently created, and the table must finish copying
        over pre-existing data from other clusters before it can begin
        receiving live replication updates and serving Data API requests.
        """

        PLANNED_MAINTENANCE: Table.ClusterState.ReplicationState.ValueType = ...  # 2
        """The table is temporarily unable to serve Data API requests from this
        cluster due to planned internal maintenance.
        """

        UNPLANNED_MAINTENANCE: Table.ClusterState.ReplicationState.ValueType = ...  # 3
        """The table is temporarily unable to serve Data API requests from this
        cluster due to unplanned or emergency maintenance.
        """

        READY: Table.ClusterState.ReplicationState.ValueType = ...  # 4
        """The table can serve Data API requests from this cluster. Depending on
        replication delay, reads may not immediately reflect the state of the
        table in other clusters.
        """

        READY_OPTIMIZING: Table.ClusterState.ReplicationState.ValueType = ...  # 5
        """The table is fully created and ready for use after a restore, and is
        being optimized for performance. When optimizations are complete, the
        table will transition to `READY` state.
        """


        REPLICATION_STATE_FIELD_NUMBER: builtins.int
        ENCRYPTION_INFO_FIELD_NUMBER: builtins.int
        replication_state: global___Table.ClusterState.ReplicationState.ValueType = ...
        """Output only. The state of replication for the table in this cluster."""

        @property
        def encryption_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EncryptionInfo]:
            """Output only. The encryption information for the table in this cluster.
            If the encryption key protecting this resource is customer managed, then
            its version can be rotated in Cloud Key Management Service (Cloud KMS).
            The primary version of the key and its status will be reflected here when
            changes propagate from Cloud KMS.
            """
            pass
        def __init__(self,
            *,
            replication_state : global___Table.ClusterState.ReplicationState.ValueType = ...,
            encryption_info : typing.Optional[typing.Iterable[global___EncryptionInfo]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["encryption_info",b"encryption_info","replication_state",b"replication_state"]) -> None: ...

    class ClusterStatesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Table.ClusterState: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Table.ClusterState] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class ColumnFamiliesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___ColumnFamily: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___ColumnFamily] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CLUSTER_STATES_FIELD_NUMBER: builtins.int
    COLUMN_FAMILIES_FIELD_NUMBER: builtins.int
    GRANULARITY_FIELD_NUMBER: builtins.int
    RESTORE_INFO_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The unique name of the table. Values are of the form
    `projects/{project}/instances/{instance}/tables/[_a-zA-Z0-9][-_.a-zA-Z0-9]*`.
    Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`
    """

    @property
    def cluster_states(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Table.ClusterState]:
        """Output only. Map from cluster ID to per-cluster table state.
        If it could not be determined whether or not the table has data in a
        particular cluster (for example, if its zone is unavailable), then
        there will be an entry for the cluster with UNKNOWN `replication_status`.
        Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`
        """
        pass
    @property
    def column_families(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ColumnFamily]:
        """(`CreationOnly`)
        The column families configured for this table, mapped by column family ID.
        Views: `SCHEMA_VIEW`, `FULL`
        """
        pass
    granularity: global___Table.TimestampGranularity.ValueType = ...
    """(`CreationOnly`)
    The granularity (i.e. `MILLIS`) at which timestamps are stored in
    this table. Timestamps not matching the granularity will be rejected.
    If unspecified at creation time, the value will be set to `MILLIS`.
    Views: `SCHEMA_VIEW`, `FULL`.
    """

    @property
    def restore_info(self) -> global___RestoreInfo:
        """Output only. If this table was restored from another data source (e.g. a
        backup), this field will be populated with information about the restore.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        cluster_states : typing.Optional[typing.Mapping[typing.Text, global___Table.ClusterState]] = ...,
        column_families : typing.Optional[typing.Mapping[typing.Text, global___ColumnFamily]] = ...,
        granularity : global___Table.TimestampGranularity.ValueType = ...,
        restore_info : typing.Optional[global___RestoreInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["restore_info",b"restore_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_states",b"cluster_states","column_families",b"column_families","granularity",b"granularity","name",b"name","restore_info",b"restore_info"]) -> None: ...
global___Table = Table

class ColumnFamily(google.protobuf.message.Message):
    """A set of columns within a table which share a common configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GC_RULE_FIELD_NUMBER: builtins.int
    @property
    def gc_rule(self) -> global___GcRule:
        """Garbage collection rule specified as a protobuf.
        Must serialize to at most 500 bytes.

        NOTE: Garbage collection executes opportunistically in the background, and
        so it's possible for reads to return a cell even if it matches the active
        GC expression for its family.
        """
        pass
    def __init__(self,
        *,
        gc_rule : typing.Optional[global___GcRule] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["gc_rule",b"gc_rule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["gc_rule",b"gc_rule"]) -> None: ...
global___ColumnFamily = ColumnFamily

class GcRule(google.protobuf.message.Message):
    """Rule for determining which cells to delete during garbage collection."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Intersection(google.protobuf.message.Message):
        """A GcRule which deletes cells matching all of the given rules."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        RULES_FIELD_NUMBER: builtins.int
        @property
        def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GcRule]:
            """Only delete cells which would be deleted by every element of `rules`."""
            pass
        def __init__(self,
            *,
            rules : typing.Optional[typing.Iterable[global___GcRule]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["rules",b"rules"]) -> None: ...

    class Union(google.protobuf.message.Message):
        """A GcRule which deletes cells matching any of the given rules."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        RULES_FIELD_NUMBER: builtins.int
        @property
        def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GcRule]:
            """Delete cells which would be deleted by any element of `rules`."""
            pass
        def __init__(self,
            *,
            rules : typing.Optional[typing.Iterable[global___GcRule]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["rules",b"rules"]) -> None: ...

    MAX_NUM_VERSIONS_FIELD_NUMBER: builtins.int
    MAX_AGE_FIELD_NUMBER: builtins.int
    INTERSECTION_FIELD_NUMBER: builtins.int
    UNION_FIELD_NUMBER: builtins.int
    max_num_versions: builtins.int = ...
    """Delete all cells in a column except the most recent N."""

    @property
    def max_age(self) -> google.protobuf.duration_pb2.Duration:
        """Delete cells in a column older than the given age.
        Values must be at least one millisecond, and will be truncated to
        microsecond granularity.
        """
        pass
    @property
    def intersection(self) -> global___GcRule.Intersection:
        """Delete cells that would be deleted by every nested rule."""
        pass
    @property
    def union(self) -> global___GcRule.Union:
        """Delete cells that would be deleted by any nested rule."""
        pass
    def __init__(self,
        *,
        max_num_versions : builtins.int = ...,
        max_age : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        intersection : typing.Optional[global___GcRule.Intersection] = ...,
        union : typing.Optional[global___GcRule.Union] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["intersection",b"intersection","max_age",b"max_age","max_num_versions",b"max_num_versions","rule",b"rule","union",b"union"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["intersection",b"intersection","max_age",b"max_age","max_num_versions",b"max_num_versions","rule",b"rule","union",b"union"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["rule",b"rule"]) -> typing.Optional[typing_extensions.Literal["max_num_versions","max_age","intersection","union"]]: ...
global___GcRule = GcRule

class EncryptionInfo(google.protobuf.message.Message):
    """Encryption information for a given resource.
    If this resource is protected with customer managed encryption, the in-use
    Cloud Key Management Service (Cloud KMS) key version is specified along with
    its status.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EncryptionType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EncryptionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EncryptionType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ENCRYPTION_TYPE_UNSPECIFIED: EncryptionInfo.EncryptionType.ValueType = ...  # 0
        """Encryption type was not specified, though data at rest remains encrypted."""

        GOOGLE_DEFAULT_ENCRYPTION: EncryptionInfo.EncryptionType.ValueType = ...  # 1
        """The data backing this resource is encrypted at rest with a key that is
        fully managed by Google. No key version or status will be populated.
        This is the default state.
        """

        CUSTOMER_MANAGED_ENCRYPTION: EncryptionInfo.EncryptionType.ValueType = ...  # 2
        """The data backing this resource is encrypted at rest with a key that is
        managed by the customer.
        The in-use version of the key and its status are populated for
        CMEK-protected tables.
        CMEK-protected backups are pinned to the key version that was in use at
        the time the backup was taken. This key version is populated but its
        status is not tracked and is reported as `UNKNOWN`.
        """

    class EncryptionType(_EncryptionType, metaclass=_EncryptionTypeEnumTypeWrapper):
        """Possible encryption types for a resource."""
        pass

    ENCRYPTION_TYPE_UNSPECIFIED: EncryptionInfo.EncryptionType.ValueType = ...  # 0
    """Encryption type was not specified, though data at rest remains encrypted."""

    GOOGLE_DEFAULT_ENCRYPTION: EncryptionInfo.EncryptionType.ValueType = ...  # 1
    """The data backing this resource is encrypted at rest with a key that is
    fully managed by Google. No key version or status will be populated.
    This is the default state.
    """

    CUSTOMER_MANAGED_ENCRYPTION: EncryptionInfo.EncryptionType.ValueType = ...  # 2
    """The data backing this resource is encrypted at rest with a key that is
    managed by the customer.
    The in-use version of the key and its status are populated for
    CMEK-protected tables.
    CMEK-protected backups are pinned to the key version that was in use at
    the time the backup was taken. This key version is populated but its
    status is not tracked and is reported as `UNKNOWN`.
    """


    ENCRYPTION_TYPE_FIELD_NUMBER: builtins.int
    ENCRYPTION_STATUS_FIELD_NUMBER: builtins.int
    KMS_KEY_VERSION_FIELD_NUMBER: builtins.int
    encryption_type: global___EncryptionInfo.EncryptionType.ValueType = ...
    """Output only. The type of encryption used to protect this resource."""

    @property
    def encryption_status(self) -> google.rpc.status_pb2.Status:
        """Output only. The status of encrypt/decrypt calls on underlying data for
        this resource. Regardless of status, the existing data is always encrypted
        at rest.
        """
        pass
    kms_key_version: typing.Text = ...
    """Output only. The version of the Cloud KMS key specified in the parent
    cluster that is in use for the data underlying this table.
    """

    def __init__(self,
        *,
        encryption_type : global___EncryptionInfo.EncryptionType.ValueType = ...,
        encryption_status : typing.Optional[google.rpc.status_pb2.Status] = ...,
        kms_key_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["encryption_status",b"encryption_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["encryption_status",b"encryption_status","encryption_type",b"encryption_type","kms_key_version",b"kms_key_version"]) -> None: ...
global___EncryptionInfo = EncryptionInfo

class Snapshot(google.protobuf.message.Message):
    """A snapshot of a table at a particular time. A snapshot can be used as a
    checkpoint for data restoration or a data source for a new table.

    Note: This is a private alpha release of Cloud Bigtable snapshots. This
    feature is not currently available to most Cloud Bigtable customers. This
    feature might be changed in backward-incompatible ways and is not recommended
    for production use. It is not subject to any SLA or deprecation policy.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_NOT_KNOWN: Snapshot.State.ValueType = ...  # 0
        """The state of the snapshot could not be determined."""

        READY: Snapshot.State.ValueType = ...  # 1
        """The snapshot has been successfully created and can serve all requests."""

        CREATING: Snapshot.State.ValueType = ...  # 2
        """The snapshot is currently being created, and may be destroyed if the
        creation process encounters an error. A snapshot may not be restored to a
        table while it is being created.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Possible states of a snapshot."""
        pass

    STATE_NOT_KNOWN: Snapshot.State.ValueType = ...  # 0
    """The state of the snapshot could not be determined."""

    READY: Snapshot.State.ValueType = ...  # 1
    """The snapshot has been successfully created and can serve all requests."""

    CREATING: Snapshot.State.ValueType = ...  # 2
    """The snapshot is currently being created, and may be destroyed if the
    creation process encounters an error. A snapshot may not be restored to a
    table while it is being created.
    """


    NAME_FIELD_NUMBER: builtins.int
    SOURCE_TABLE_FIELD_NUMBER: builtins.int
    DATA_SIZE_BYTES_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    DELETE_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The unique name of the snapshot.
    Values are of the form
    `projects/{project}/instances/{instance}/clusters/{cluster}/snapshots/{snapshot}`.
    """

    @property
    def source_table(self) -> global___Table:
        """Output only. The source table at the time the snapshot was taken."""
        pass
    data_size_bytes: builtins.int = ...
    """Output only. The size of the data in the source table at the time the
    snapshot was taken. In some cases, this value may be computed
    asynchronously via a background process and a placeholder of 0 will be used
    in the meantime.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the snapshot is created."""
        pass
    @property
    def delete_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the snapshot will be deleted. The maximum amount
        of time a snapshot can stay active is 365 days. If 'ttl' is not specified,
        the default maximum of 365 days will be used.
        """
        pass
    state: global___Snapshot.State.ValueType = ...
    """Output only. The current state of the snapshot."""

    description: typing.Text = ...
    """Output only. Description of the snapshot."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        source_table : typing.Optional[global___Table] = ...,
        data_size_bytes : builtins.int = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        delete_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___Snapshot.State.ValueType = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","delete_time",b"delete_time","source_table",b"source_table"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","data_size_bytes",b"data_size_bytes","delete_time",b"delete_time","description",b"description","name",b"name","source_table",b"source_table","state",b"state"]) -> None: ...
global___Snapshot = Snapshot

class Backup(google.protobuf.message.Message):
    """A backup of a Cloud Bigtable table."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Backup.State.ValueType = ...  # 0
        """Not specified."""

        CREATING: Backup.State.ValueType = ...  # 1
        """The pending backup is still being created. Operations on the
        backup may fail with `FAILED_PRECONDITION` in this state.
        """

        READY: Backup.State.ValueType = ...  # 2
        """The backup is complete and ready for use."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Indicates the current state of the backup."""
        pass

    STATE_UNSPECIFIED: Backup.State.ValueType = ...  # 0
    """Not specified."""

    CREATING: Backup.State.ValueType = ...  # 1
    """The pending backup is still being created. Operations on the
    backup may fail with `FAILED_PRECONDITION` in this state.
    """

    READY: Backup.State.ValueType = ...  # 2
    """The backup is complete and ready for use."""


    NAME_FIELD_NUMBER: builtins.int
    SOURCE_TABLE_FIELD_NUMBER: builtins.int
    EXPIRE_TIME_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    SIZE_BYTES_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    ENCRYPTION_INFO_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. A globally unique identifier for the backup which cannot be
    changed. Values are of the form
    `projects/{project}/instances/{instance}/clusters/{cluster}/
       backups/[_a-zA-Z0-9][-_.a-zA-Z0-9]*`
    The final segment of the name must be between 1 and 50 characters
    in length.

    The backup is stored in the cluster identified by the prefix of the backup
    name of the form
    `projects/{project}/instances/{instance}/clusters/{cluster}`.
    """

    source_table: typing.Text = ...
    """Required. Immutable. Name of the table from which this backup was created.
    This needs to be in the same instance as the backup. Values are of the form
    `projects/{project}/instances/{instance}/tables/{source_table}`.
    """

    @property
    def expire_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Required. The expiration time of the backup, with microseconds
        granularity that must be at least 6 hours and at most 30 days
        from the time the request is received. Once the `expire_time`
        has passed, Cloud Bigtable will delete the backup and free the
        resources used by the backup.
        """
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. `start_time` is the time that the backup was started
        (i.e. approximately the time the
        [CreateBackup][google.bigtable.admin.v2.BigtableTableAdmin.CreateBackup]
        request is received).  The row data in this backup will be no older than
        this timestamp.
        """
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. `end_time` is the time that the backup was finished. The row
        data in the backup will be no newer than this timestamp.
        """
        pass
    size_bytes: builtins.int = ...
    """Output only. Size of the backup in bytes."""

    state: global___Backup.State.ValueType = ...
    """Output only. The current state of the backup."""

    @property
    def encryption_info(self) -> global___EncryptionInfo:
        """Output only. The encryption information for the backup."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        source_table : typing.Text = ...,
        expire_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        size_bytes : builtins.int = ...,
        state : global___Backup.State.ValueType = ...,
        encryption_info : typing.Optional[global___EncryptionInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["encryption_info",b"encryption_info","end_time",b"end_time","expire_time",b"expire_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["encryption_info",b"encryption_info","end_time",b"end_time","expire_time",b"expire_time","name",b"name","size_bytes",b"size_bytes","source_table",b"source_table","start_time",b"start_time","state",b"state"]) -> None: ...
global___Backup = Backup

class BackupInfo(google.protobuf.message.Message):
    """Information about a backup."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKUP_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    SOURCE_TABLE_FIELD_NUMBER: builtins.int
    backup: typing.Text = ...
    """Output only. Name of the backup."""

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time that the backup was started. Row data in the backup
        will be no older than this timestamp.
        """
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. This time that the backup was finished. Row data in the
        backup will be no newer than this timestamp.
        """
        pass
    source_table: typing.Text = ...
    """Output only. Name of the table the backup was created from."""

    def __init__(self,
        *,
        backup : typing.Text = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        source_table : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup",b"backup","end_time",b"end_time","source_table",b"source_table","start_time",b"start_time"]) -> None: ...
global___BackupInfo = BackupInfo
