"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TagKey(google.protobuf.message.Message):
    """A TagKey, used to group a set of TagValues."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    SHORT_NAME_FIELD_NUMBER: builtins.int
    NAMESPACED_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Immutable. The resource name for a TagKey. Must be in the format
    `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for
    the TagKey.
    """

    parent: typing.Text = ...
    """Immutable. The resource name of the new TagKey's parent.
    Must be of the form `organizations/{org_id}`.
    """

    short_name: typing.Text = ...
    """Required. Immutable. The user friendly name for a TagKey. The short name should be
    unique for TagKeys within the same tag namespace.

    The short name must be 1-63 characters, beginning and ending with
    an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_),
    dots (.), and alphanumerics between.
    """

    namespaced_name: typing.Text = ...
    """Output only. Immutable. Namespaced name of the TagKey."""

    description: typing.Text = ...
    """Optional. User-assigned description of the TagKey. Must not exceed 256 characters.

    Read-write.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Creation time."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Update time."""
        pass
    etag: typing.Text = ...
    """Optional. Entity tag which users can pass to prevent race conditions. This field is
    always set in server responses. See UpdateTagKeyRequest for details.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        parent : typing.Text = ...,
        short_name : typing.Text = ...,
        namespaced_name : typing.Text = ...,
        description : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","etag",b"etag","name",b"name","namespaced_name",b"namespaced_name","parent",b"parent","short_name",b"short_name","update_time",b"update_time"]) -> None: ...
global___TagKey = TagKey

class ListTagKeysRequest(google.protobuf.message.Message):
    """The request message for listing all TagKeys under a parent resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The resource name of the new TagKey's parent.
    Must be of the form `folders/{folder_id}` or `organizations/{org_id}`.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of TagKeys to return in the response. The server allows
    a maximum of 300 TagKeys to return. If unspecified, the server will use 100
    as the default.
    """

    page_token: typing.Text = ...
    """Optional. A pagination token returned from a previous call to `ListTagKey`
    that indicates where this listing should continue from.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListTagKeysRequest = ListTagKeysRequest

class ListTagKeysResponse(google.protobuf.message.Message):
    """The ListTagKeys response message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAG_KEYS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def tag_keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TagKey]:
        """List of TagKeys that live under the specified parent in the request."""
        pass
    next_page_token: typing.Text = ...
    """A pagination token returned from a previous call to `ListTagKeys`
    that indicates from where listing should continue.
    """

    def __init__(self,
        *,
        tag_keys : typing.Optional[typing.Iterable[global___TagKey]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","tag_keys",b"tag_keys"]) -> None: ...
global___ListTagKeysResponse = ListTagKeysResponse

class GetTagKeyRequest(google.protobuf.message.Message):
    """The request message for getting a TagKey."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. A resource name in the format `tagKeys/{id}`, such as
    `tagKeys/123`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetTagKeyRequest = GetTagKeyRequest

class CreateTagKeyRequest(google.protobuf.message.Message):
    """The request message for creating a TagKey."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAG_KEY_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    @property
    def tag_key(self) -> global___TagKey:
        """Required. The TagKey to be created. Only fields `short_name`, `description`,
        and `parent` are considered during the creation request.
        """
        pass
    validate_only: builtins.bool = ...
    """Optional. Set to true to perform validations necessary for creating the resource, but
    not actually perform the action.
    """

    def __init__(self,
        *,
        tag_key : typing.Optional[global___TagKey] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tag_key",b"tag_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["tag_key",b"tag_key","validate_only",b"validate_only"]) -> None: ...
global___CreateTagKeyRequest = CreateTagKeyRequest

class CreateTagKeyMetadata(google.protobuf.message.Message):
    """Runtime operation information for creating a TagKey."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___CreateTagKeyMetadata = CreateTagKeyMetadata

class UpdateTagKeyRequest(google.protobuf.message.Message):
    """The request message for updating a TagKey."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAG_KEY_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    @property
    def tag_key(self) -> global___TagKey:
        """Required. The new definition of the TagKey. Only the `description` and `etag` fields
        can be updated by this request. If the `etag` field is not empty, it
        must match the `etag` field of the existing tag key. Otherwise,
        `FAILED_PRECONDITION` will be returned.
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Fields to be updated. The mask may only contain `description` or
        `etag`. If omitted entirely, both `description` and `etag` are assumed to
        be significant.
        """
        pass
    validate_only: builtins.bool = ...
    """Set as true to perform validations necessary for updating the resource, but
    not actually perform the action.
    """

    def __init__(self,
        *,
        tag_key : typing.Optional[global___TagKey] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tag_key",b"tag_key","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["tag_key",b"tag_key","update_mask",b"update_mask","validate_only",b"validate_only"]) -> None: ...
global___UpdateTagKeyRequest = UpdateTagKeyRequest

class UpdateTagKeyMetadata(google.protobuf.message.Message):
    """Runtime operation information for updating a TagKey."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___UpdateTagKeyMetadata = UpdateTagKeyMetadata

class DeleteTagKeyRequest(google.protobuf.message.Message):
    """The request message for deleting a TagKey."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of a TagKey to be deleted in the format `tagKeys/123`.
    The TagKey cannot be a parent of any existing TagValues or it will not be
    deleted successfully.
    """

    validate_only: builtins.bool = ...
    """Optional. Set as true to perform validations necessary for deletion, but not actually
    perform the action.
    """

    etag: typing.Text = ...
    """Optional. The etag known to the client for the expected state of the TagKey. This is
    to be used for optimistic concurrency.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        validate_only : builtins.bool = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["etag",b"etag","name",b"name","validate_only",b"validate_only"]) -> None: ...
global___DeleteTagKeyRequest = DeleteTagKeyRequest

class DeleteTagKeyMetadata(google.protobuf.message.Message):
    """Runtime operation information for deleting a TagKey."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___DeleteTagKeyMetadata = DeleteTagKeyMetadata
