# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/resourcemanager/v3/organizations.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.iam.v1.iam_policy_pb2
import google.iam.v1.policy_pb2
import google.longrunning.operations_pb2
import google.protobuf.timestamp_pb2
import google.cloud.resourcemanager.v3.organizations_pb2


class OrganizationsBase(abc.ABC):

    @abc.abstractmethod
    async def GetOrganization(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.organizations_pb2.GetOrganizationRequest, google.cloud.resourcemanager.v3.organizations_pb2.Organization]') -> None:
        pass

    @abc.abstractmethod
    async def SearchOrganizations(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.organizations_pb2.SearchOrganizationsRequest, google.cloud.resourcemanager.v3.organizations_pb2.SearchOrganizationsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.GetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def SetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.SetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def TestIamPermissions(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest, google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.resourcemanager.v3.Organizations/GetOrganization': grpclib.const.Handler(
                self.GetOrganization,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.organizations_pb2.GetOrganizationRequest,
                google.cloud.resourcemanager.v3.organizations_pb2.Organization,
            ),
            '/google.cloud.resourcemanager.v3.Organizations/SearchOrganizations': grpclib.const.Handler(
                self.SearchOrganizations,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.organizations_pb2.SearchOrganizationsRequest,
                google.cloud.resourcemanager.v3.organizations_pb2.SearchOrganizationsResponse,
            ),
            '/google.cloud.resourcemanager.v3.Organizations/GetIamPolicy': grpclib.const.Handler(
                self.GetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.cloud.resourcemanager.v3.Organizations/SetIamPolicy': grpclib.const.Handler(
                self.SetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.cloud.resourcemanager.v3.Organizations/TestIamPermissions': grpclib.const.Handler(
                self.TestIamPermissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
            ),
        }


class OrganizationsStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetOrganization = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Organizations/GetOrganization',
            google.cloud.resourcemanager.v3.organizations_pb2.GetOrganizationRequest,
            google.cloud.resourcemanager.v3.organizations_pb2.Organization,
        )
        self.SearchOrganizations = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Organizations/SearchOrganizations',
            google.cloud.resourcemanager.v3.organizations_pb2.SearchOrganizationsRequest,
            google.cloud.resourcemanager.v3.organizations_pb2.SearchOrganizationsResponse,
        )
        self.GetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Organizations/GetIamPolicy',
            google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.SetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Organizations/SetIamPolicy',
            google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.TestIamPermissions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Organizations/TestIamPermissions',
            google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
            google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
        )
