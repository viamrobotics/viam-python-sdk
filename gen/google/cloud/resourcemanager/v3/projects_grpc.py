# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/resourcemanager/v3/projects.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.iam.v1.iam_policy_pb2
import google.iam.v1.policy_pb2
import google.longrunning.operations_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.timestamp_pb2
import google.cloud.resourcemanager.v3.projects_pb2


class ProjectsBase(abc.ABC):

    @abc.abstractmethod
    async def GetProject(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.projects_pb2.GetProjectRequest, google.cloud.resourcemanager.v3.projects_pb2.Project]') -> None:
        pass

    @abc.abstractmethod
    async def ListProjects(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.projects_pb2.ListProjectsRequest, google.cloud.resourcemanager.v3.projects_pb2.ListProjectsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SearchProjects(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.projects_pb2.SearchProjectsRequest, google.cloud.resourcemanager.v3.projects_pb2.SearchProjectsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateProject(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.projects_pb2.CreateProjectRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateProject(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.projects_pb2.UpdateProjectRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def MoveProject(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.projects_pb2.MoveProjectRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteProject(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.projects_pb2.DeleteProjectRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UndeleteProject(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.projects_pb2.UndeleteProjectRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def GetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.GetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def SetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.SetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def TestIamPermissions(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest, google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.resourcemanager.v3.Projects/GetProject': grpclib.const.Handler(
                self.GetProject,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.projects_pb2.GetProjectRequest,
                google.cloud.resourcemanager.v3.projects_pb2.Project,
            ),
            '/google.cloud.resourcemanager.v3.Projects/ListProjects': grpclib.const.Handler(
                self.ListProjects,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.projects_pb2.ListProjectsRequest,
                google.cloud.resourcemanager.v3.projects_pb2.ListProjectsResponse,
            ),
            '/google.cloud.resourcemanager.v3.Projects/SearchProjects': grpclib.const.Handler(
                self.SearchProjects,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.projects_pb2.SearchProjectsRequest,
                google.cloud.resourcemanager.v3.projects_pb2.SearchProjectsResponse,
            ),
            '/google.cloud.resourcemanager.v3.Projects/CreateProject': grpclib.const.Handler(
                self.CreateProject,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.projects_pb2.CreateProjectRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.resourcemanager.v3.Projects/UpdateProject': grpclib.const.Handler(
                self.UpdateProject,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.projects_pb2.UpdateProjectRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.resourcemanager.v3.Projects/MoveProject': grpclib.const.Handler(
                self.MoveProject,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.projects_pb2.MoveProjectRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.resourcemanager.v3.Projects/DeleteProject': grpclib.const.Handler(
                self.DeleteProject,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.projects_pb2.DeleteProjectRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.resourcemanager.v3.Projects/UndeleteProject': grpclib.const.Handler(
                self.UndeleteProject,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.projects_pb2.UndeleteProjectRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.resourcemanager.v3.Projects/GetIamPolicy': grpclib.const.Handler(
                self.GetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.cloud.resourcemanager.v3.Projects/SetIamPolicy': grpclib.const.Handler(
                self.SetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.cloud.resourcemanager.v3.Projects/TestIamPermissions': grpclib.const.Handler(
                self.TestIamPermissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
            ),
        }


class ProjectsStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetProject = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/GetProject',
            google.cloud.resourcemanager.v3.projects_pb2.GetProjectRequest,
            google.cloud.resourcemanager.v3.projects_pb2.Project,
        )
        self.ListProjects = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/ListProjects',
            google.cloud.resourcemanager.v3.projects_pb2.ListProjectsRequest,
            google.cloud.resourcemanager.v3.projects_pb2.ListProjectsResponse,
        )
        self.SearchProjects = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/SearchProjects',
            google.cloud.resourcemanager.v3.projects_pb2.SearchProjectsRequest,
            google.cloud.resourcemanager.v3.projects_pb2.SearchProjectsResponse,
        )
        self.CreateProject = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/CreateProject',
            google.cloud.resourcemanager.v3.projects_pb2.CreateProjectRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.UpdateProject = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/UpdateProject',
            google.cloud.resourcemanager.v3.projects_pb2.UpdateProjectRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.MoveProject = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/MoveProject',
            google.cloud.resourcemanager.v3.projects_pb2.MoveProjectRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.DeleteProject = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/DeleteProject',
            google.cloud.resourcemanager.v3.projects_pb2.DeleteProjectRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.UndeleteProject = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/UndeleteProject',
            google.cloud.resourcemanager.v3.projects_pb2.UndeleteProjectRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.GetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/GetIamPolicy',
            google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.SetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/SetIamPolicy',
            google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.TestIamPermissions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.Projects/TestIamPermissions',
            google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
            google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
        )
