"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Job(google.protobuf.message.Message):
    """Transcoding job resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ProcessingState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProcessingStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProcessingState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PROCESSING_STATE_UNSPECIFIED: Job.ProcessingState.ValueType = ...  # 0
        """The processing state is not specified."""

        PENDING: Job.ProcessingState.ValueType = ...  # 1
        """The job is enqueued and will be picked up for processing soon."""

        RUNNING: Job.ProcessingState.ValueType = ...  # 2
        """The job is being processed."""

        SUCCEEDED: Job.ProcessingState.ValueType = ...  # 3
        """The job has been completed successfully."""

        FAILED: Job.ProcessingState.ValueType = ...  # 4
        """The job has failed. For additional information, see `failure_reason` and
        `failure_details`
        """

    class ProcessingState(_ProcessingState, metaclass=_ProcessingStateEnumTypeWrapper):
        """The current state of the job."""
        pass

    PROCESSING_STATE_UNSPECIFIED: Job.ProcessingState.ValueType = ...  # 0
    """The processing state is not specified."""

    PENDING: Job.ProcessingState.ValueType = ...  # 1
    """The job is enqueued and will be picked up for processing soon."""

    RUNNING: Job.ProcessingState.ValueType = ...  # 2
    """The job is being processed."""

    SUCCEEDED: Job.ProcessingState.ValueType = ...  # 3
    """The job has been completed successfully."""

    FAILED: Job.ProcessingState.ValueType = ...  # 4
    """The job has failed. For additional information, see `failure_reason` and
    `failure_details`
    """


    NAME_FIELD_NUMBER: builtins.int
    INPUT_URI_FIELD_NUMBER: builtins.int
    OUTPUT_URI_FIELD_NUMBER: builtins.int
    TEMPLATE_ID_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TTL_AFTER_COMPLETION_DAYS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the job.
    Format: `projects/{project_number}/locations/{location}/jobs/{job}`
    """

    input_uri: typing.Text = ...
    """Input only. Specify the `input_uri` to populate empty `uri` fields in each element of
    `Job.config.inputs` or `JobTemplate.config.inputs` when using template.
    URI of the media. Input files must be at least 5 seconds in duration and
    stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`).
    """

    output_uri: typing.Text = ...
    """Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or
    `JobTemplate.config.output.uri` when using template.
    URI for the output file(s). For example, `gs://my-bucket/outputs/`.
    """

    template_id: typing.Text = ...
    """Input only. Specify the `template_id` to use for populating `Job.config`. The default
    is `preset/web-hd`.

    Preset Transcoder templates:
    - `preset/{preset_id}`

    - User defined JobTemplate:
      `{job_template_id}`
    """

    @property
    def config(self) -> global___JobConfig:
        """The configuration for this job."""
        pass
    state: global___Job.ProcessingState.ValueType = ...
    """Output only. The current state of the job."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the job was created."""
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the transcoding started."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the transcoding finished."""
        pass
    ttl_after_completion_days: builtins.int = ...
    """Job time to live value in days, which will be effective after job
    completion. Job should be deleted automatically after the given TTL. Enter
    a value between 1 and 90. The default is 30.
    """

    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """Output only. An error object that describes the reason for the failure.
        This property is always present when `state` is `FAILED`.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        input_uri : typing.Text = ...,
        output_uri : typing.Text = ...,
        template_id : typing.Text = ...,
        config : typing.Optional[global___JobConfig] = ...,
        state : global___Job.ProcessingState.ValueType = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ttl_after_completion_days : builtins.int = ...,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config","create_time",b"create_time","end_time",b"end_time","error",b"error","job_config",b"job_config","start_time",b"start_time","template_id",b"template_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config",b"config","create_time",b"create_time","end_time",b"end_time","error",b"error","input_uri",b"input_uri","job_config",b"job_config","name",b"name","output_uri",b"output_uri","start_time",b"start_time","state",b"state","template_id",b"template_id","ttl_after_completion_days",b"ttl_after_completion_days"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["job_config",b"job_config"]) -> typing.Optional[typing_extensions.Literal["template_id","config"]]: ...
global___Job = Job

class JobTemplate(google.protobuf.message.Message):
    """Transcoding job template resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the job template.
    Format:
    `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`
    """

    @property
    def config(self) -> global___JobConfig:
        """The configuration for this template."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        config : typing.Optional[global___JobConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config",b"config","name",b"name"]) -> None: ...
global___JobTemplate = JobTemplate

class JobConfig(google.protobuf.message.Message):
    """Job configuration"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INPUTS_FIELD_NUMBER: builtins.int
    EDIT_LIST_FIELD_NUMBER: builtins.int
    ELEMENTARY_STREAMS_FIELD_NUMBER: builtins.int
    MUX_STREAMS_FIELD_NUMBER: builtins.int
    MANIFESTS_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    AD_BREAKS_FIELD_NUMBER: builtins.int
    PUBSUB_DESTINATION_FIELD_NUMBER: builtins.int
    SPRITE_SHEETS_FIELD_NUMBER: builtins.int
    OVERLAYS_FIELD_NUMBER: builtins.int
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Input]:
        """List of input assets stored in Cloud Storage."""
        pass
    @property
    def edit_list(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EditAtom]:
        """List of `Edit atom`s. Defines the ultimate timeline of the resulting
        file or manifest.
        """
        pass
    @property
    def elementary_streams(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ElementaryStream]:
        """List of elementary streams."""
        pass
    @property
    def mux_streams(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MuxStream]:
        """List of multiplexing settings for output streams."""
        pass
    @property
    def manifests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Manifest]:
        """List of output manifests."""
        pass
    @property
    def output(self) -> global___Output:
        """Output configuration."""
        pass
    @property
    def ad_breaks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AdBreak]:
        """List of ad breaks. Specifies where to insert ad break tags in the output
        manifests.
        """
        pass
    @property
    def pubsub_destination(self) -> global___PubsubDestination:
        """Destination on Pub/Sub."""
        pass
    @property
    def sprite_sheets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SpriteSheet]:
        """List of output sprite sheets."""
        pass
    @property
    def overlays(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Overlay]:
        """List of overlays on the output video, in descending Z-order."""
        pass
    def __init__(self,
        *,
        inputs : typing.Optional[typing.Iterable[global___Input]] = ...,
        edit_list : typing.Optional[typing.Iterable[global___EditAtom]] = ...,
        elementary_streams : typing.Optional[typing.Iterable[global___ElementaryStream]] = ...,
        mux_streams : typing.Optional[typing.Iterable[global___MuxStream]] = ...,
        manifests : typing.Optional[typing.Iterable[global___Manifest]] = ...,
        output : typing.Optional[global___Output] = ...,
        ad_breaks : typing.Optional[typing.Iterable[global___AdBreak]] = ...,
        pubsub_destination : typing.Optional[global___PubsubDestination] = ...,
        sprite_sheets : typing.Optional[typing.Iterable[global___SpriteSheet]] = ...,
        overlays : typing.Optional[typing.Iterable[global___Overlay]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["output",b"output","pubsub_destination",b"pubsub_destination"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ad_breaks",b"ad_breaks","edit_list",b"edit_list","elementary_streams",b"elementary_streams","inputs",b"inputs","manifests",b"manifests","mux_streams",b"mux_streams","output",b"output","overlays",b"overlays","pubsub_destination",b"pubsub_destination","sprite_sheets",b"sprite_sheets"]) -> None: ...
global___JobConfig = JobConfig

class Input(google.protobuf.message.Message):
    """Input asset."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    PREPROCESSING_CONFIG_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """A unique key for this input. Must be specified when using advanced
    mapping and edit lists.
    """

    uri: typing.Text = ...
    """URI of the media. Input files must be at least 5 seconds in duration and
    stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`).
    If empty, the value will be populated from `Job.input_uri`.
    """

    @property
    def preprocessing_config(self) -> global___PreprocessingConfig:
        """Preprocessing configurations."""
        pass
    def __init__(self,
        *,
        key : typing.Text = ...,
        uri : typing.Text = ...,
        preprocessing_config : typing.Optional[global___PreprocessingConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["preprocessing_config",b"preprocessing_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","preprocessing_config",b"preprocessing_config","uri",b"uri"]) -> None: ...
global___Input = Input

class Output(google.protobuf.message.Message):
    """Location of output file(s) in a Cloud Storage bucket."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URI_FIELD_NUMBER: builtins.int
    uri: typing.Text = ...
    """URI for the output file(s). For example, `gs://my-bucket/outputs/`.
    If empty the value is populated from `Job.output_uri`.
    """

    def __init__(self,
        *,
        uri : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...
global___Output = Output

class EditAtom(google.protobuf.message.Message):
    """Edit atom."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    END_TIME_OFFSET_FIELD_NUMBER: builtins.int
    START_TIME_OFFSET_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """A unique key for this atom. Must be specified when using advanced
    mapping.
    """

    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of `Input.key`s identifying files that should be used in this atom.
        The listed `inputs` must have the same timeline.
        """
        pass
    @property
    def end_time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """End time in seconds for the atom, relative to the input file timeline.
        When `end_time_offset` is not specified, the `inputs` are used until
        the end of the atom.
        """
        pass
    @property
    def start_time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """Start time in seconds for the atom, relative to the input file timeline.
        The default is `0s`.
        """
        pass
    def __init__(self,
        *,
        key : typing.Text = ...,
        inputs : typing.Optional[typing.Iterable[typing.Text]] = ...,
        end_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        start_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time_offset",b"end_time_offset","start_time_offset",b"start_time_offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time_offset",b"end_time_offset","inputs",b"inputs","key",b"key","start_time_offset",b"start_time_offset"]) -> None: ...
global___EditAtom = EditAtom

class AdBreak(google.protobuf.message.Message):
    """Ad break."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_TIME_OFFSET_FIELD_NUMBER: builtins.int
    @property
    def start_time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """Start time in seconds for the ad break, relative to the output file
        timeline. The default is `0s`.
        """
        pass
    def __init__(self,
        *,
        start_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["start_time_offset",b"start_time_offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["start_time_offset",b"start_time_offset"]) -> None: ...
global___AdBreak = AdBreak

class ElementaryStream(google.protobuf.message.Message):
    """Encoding of an input file such as an audio, video, or text track.
    Elementary streams must be packaged before
    mapping and sharing between different output formats.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    VIDEO_STREAM_FIELD_NUMBER: builtins.int
    AUDIO_STREAM_FIELD_NUMBER: builtins.int
    TEXT_STREAM_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """A unique key for this elementary stream."""

    @property
    def video_stream(self) -> global___VideoStream:
        """Encoding of a video stream."""
        pass
    @property
    def audio_stream(self) -> global___AudioStream:
        """Encoding of an audio stream."""
        pass
    @property
    def text_stream(self) -> global___TextStream:
        """Encoding of a text stream. For example, closed captions or subtitles."""
        pass
    def __init__(self,
        *,
        key : typing.Text = ...,
        video_stream : typing.Optional[global___VideoStream] = ...,
        audio_stream : typing.Optional[global___AudioStream] = ...,
        text_stream : typing.Optional[global___TextStream] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["audio_stream",b"audio_stream","elementary_stream",b"elementary_stream","text_stream",b"text_stream","video_stream",b"video_stream"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_stream",b"audio_stream","elementary_stream",b"elementary_stream","key",b"key","text_stream",b"text_stream","video_stream",b"video_stream"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["elementary_stream",b"elementary_stream"]) -> typing.Optional[typing_extensions.Literal["video_stream","audio_stream","text_stream"]]: ...
global___ElementaryStream = ElementaryStream

class MuxStream(google.protobuf.message.Message):
    """Multiplexing settings for output stream."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    FILE_NAME_FIELD_NUMBER: builtins.int
    CONTAINER_FIELD_NUMBER: builtins.int
    ELEMENTARY_STREAMS_FIELD_NUMBER: builtins.int
    SEGMENT_SETTINGS_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """A unique key for this multiplexed stream. HLS media manifests will be
    named `MuxStream.key` with the `.m3u8` extension suffix.
    """

    file_name: typing.Text = ...
    """The name of the generated file. The default is `MuxStream.key` with the
    extension suffix corresponding to the `MuxStream.container`.

    Individual segments also have an incremental 10-digit zero-padded suffix
    starting from 0 before the extension, such as `mux_stream0000000123.ts`.
    """

    container: typing.Text = ...
    """The container format. The default is `mp4`

    Supported container formats:

    - `ts`
    - `fmp4`- the corresponding file extension is `.m4s`
    - `mp4`
    - `vtt`
    """

    @property
    def elementary_streams(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of `ElementaryStream.key`s multiplexed in this stream."""
        pass
    @property
    def segment_settings(self) -> global___SegmentSettings:
        """Segment settings for `ts`, `fmp4` and `vtt`."""
        pass
    def __init__(self,
        *,
        key : typing.Text = ...,
        file_name : typing.Text = ...,
        container : typing.Text = ...,
        elementary_streams : typing.Optional[typing.Iterable[typing.Text]] = ...,
        segment_settings : typing.Optional[global___SegmentSettings] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["segment_settings",b"segment_settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["container",b"container","elementary_streams",b"elementary_streams","file_name",b"file_name","key",b"key","segment_settings",b"segment_settings"]) -> None: ...
global___MuxStream = MuxStream

class Manifest(google.protobuf.message.Message):
    """Manifest configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ManifestType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ManifestTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ManifestType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        MANIFEST_TYPE_UNSPECIFIED: Manifest.ManifestType.ValueType = ...  # 0
        """The manifest type is not specified."""

        HLS: Manifest.ManifestType.ValueType = ...  # 1
        """Create `HLS` manifest. The corresponding file extension is `.m3u8`."""

        DASH: Manifest.ManifestType.ValueType = ...  # 2
        """Create `DASH` manifest. The corresponding file extension is `.mpd`."""

    class ManifestType(_ManifestType, metaclass=_ManifestTypeEnumTypeWrapper):
        """The manifest type can be either `HLS` or `DASH`."""
        pass

    MANIFEST_TYPE_UNSPECIFIED: Manifest.ManifestType.ValueType = ...  # 0
    """The manifest type is not specified."""

    HLS: Manifest.ManifestType.ValueType = ...  # 1
    """Create `HLS` manifest. The corresponding file extension is `.m3u8`."""

    DASH: Manifest.ManifestType.ValueType = ...  # 2
    """Create `DASH` manifest. The corresponding file extension is `.mpd`."""


    FILE_NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    MUX_STREAMS_FIELD_NUMBER: builtins.int
    file_name: typing.Text = ...
    """The name of the generated file. The default is `manifest` with the
    extension suffix corresponding to the `Manifest.type`.
    """

    type: global___Manifest.ManifestType.ValueType = ...
    """Required. Type of the manifest, can be `HLS` or `DASH`."""

    @property
    def mux_streams(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. List of user given `MuxStream.key`s that should appear in this manifest.

        When `Manifest.type` is `HLS`, a media manifest with name `MuxStream.key`
        and `.m3u8` extension is generated for each element of the
        `Manifest.mux_streams`.
        """
        pass
    def __init__(self,
        *,
        file_name : typing.Text = ...,
        type : global___Manifest.ManifestType.ValueType = ...,
        mux_streams : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_name",b"file_name","mux_streams",b"mux_streams","type",b"type"]) -> None: ...
global___Manifest = Manifest

class PubsubDestination(google.protobuf.message.Message):
    """A Pub/Sub destination."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOPIC_FIELD_NUMBER: builtins.int
    topic: typing.Text = ...
    """The name of the Pub/Sub topic to publish job completion notification
    to. For example: `projects/{project}/topics/{topic}`.
    """

    def __init__(self,
        *,
        topic : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["topic",b"topic"]) -> None: ...
global___PubsubDestination = PubsubDestination

class SpriteSheet(google.protobuf.message.Message):
    """Sprite sheet configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORMAT_FIELD_NUMBER: builtins.int
    FILE_PREFIX_FIELD_NUMBER: builtins.int
    SPRITE_WIDTH_PIXELS_FIELD_NUMBER: builtins.int
    SPRITE_HEIGHT_PIXELS_FIELD_NUMBER: builtins.int
    COLUMN_COUNT_FIELD_NUMBER: builtins.int
    ROW_COUNT_FIELD_NUMBER: builtins.int
    START_TIME_OFFSET_FIELD_NUMBER: builtins.int
    END_TIME_OFFSET_FIELD_NUMBER: builtins.int
    TOTAL_COUNT_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    QUALITY_FIELD_NUMBER: builtins.int
    format: typing.Text = ...
    """Format type. The default is `jpeg`.

    Supported formats:

    - `jpeg`
    """

    file_prefix: typing.Text = ...
    """Required. File name prefix for the generated sprite sheets.

    Each sprite sheet has an incremental 10-digit zero-padded suffix starting
    from 0 before the extension, such as `sprite_sheet0000000123.jpeg`.
    """

    sprite_width_pixels: builtins.int = ...
    """Required. The width of sprite in pixels. Must be an even integer. To preserve the
    source aspect ratio, set the [SpriteSheet.sprite_width_pixels][google.cloud.video.transcoder.v1.SpriteSheet.sprite_width_pixels] field or
    the [SpriteSheet.sprite_height_pixels][google.cloud.video.transcoder.v1.SpriteSheet.sprite_height_pixels] field, but not both (the API will
    automatically calculate the missing field).
    """

    sprite_height_pixels: builtins.int = ...
    """Required. The height of sprite in pixels. Must be an even integer. To preserve the
    source aspect ratio, set the [SpriteSheet.sprite_height_pixels][google.cloud.video.transcoder.v1.SpriteSheet.sprite_height_pixels] field or
    the [SpriteSheet.sprite_width_pixels][google.cloud.video.transcoder.v1.SpriteSheet.sprite_width_pixels] field, but not both (the API will
    automatically calculate the missing field).
    """

    column_count: builtins.int = ...
    """The maximum number of sprites per row in a sprite sheet. The default is 0,
    which indicates no maximum limit.
    """

    row_count: builtins.int = ...
    """The maximum number of rows per sprite sheet. When the sprite sheet is full,
    a new sprite sheet is created. The default is 0, which indicates no maximum
    limit.
    """

    @property
    def start_time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """Start time in seconds, relative to the output file timeline. Determines the
        first sprite to pick. The default is `0s`.
        """
        pass
    @property
    def end_time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """End time in seconds, relative to the output file timeline. When
        `end_time_offset` is not specified, the sprites are generated until the end
        of the output file.
        """
        pass
    total_count: builtins.int = ...
    """Total number of sprites. Create the specified number of sprites
    distributed evenly across the timeline of the output media. The default
    is 100.
    """

    @property
    def interval(self) -> google.protobuf.duration_pb2.Duration:
        """Starting from `0s`, create sprites at regular intervals. Specify the
        interval value in seconds.
        """
        pass
    quality: builtins.int = ...
    """The quality of the generated sprite sheet. Enter a value between 1
    and 100, where 1 is the lowest quality and 100 is the highest quality.
    The default is 100. A high quality value corresponds to a low image data
    compression ratio.
    """

    def __init__(self,
        *,
        format : typing.Text = ...,
        file_prefix : typing.Text = ...,
        sprite_width_pixels : builtins.int = ...,
        sprite_height_pixels : builtins.int = ...,
        column_count : builtins.int = ...,
        row_count : builtins.int = ...,
        start_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        end_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        total_count : builtins.int = ...,
        interval : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        quality : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time_offset",b"end_time_offset","extraction_strategy",b"extraction_strategy","interval",b"interval","start_time_offset",b"start_time_offset","total_count",b"total_count"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["column_count",b"column_count","end_time_offset",b"end_time_offset","extraction_strategy",b"extraction_strategy","file_prefix",b"file_prefix","format",b"format","interval",b"interval","quality",b"quality","row_count",b"row_count","sprite_height_pixels",b"sprite_height_pixels","sprite_width_pixels",b"sprite_width_pixels","start_time_offset",b"start_time_offset","total_count",b"total_count"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["extraction_strategy",b"extraction_strategy"]) -> typing.Optional[typing_extensions.Literal["total_count","interval"]]: ...
global___SpriteSheet = SpriteSheet

class Overlay(google.protobuf.message.Message):
    """Overlay configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _FadeType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FadeTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FadeType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        FADE_TYPE_UNSPECIFIED: Overlay.FadeType.ValueType = ...  # 0
        """The fade type is not specified."""

        FADE_IN: Overlay.FadeType.ValueType = ...  # 1
        """Fade the overlay object into view."""

        FADE_OUT: Overlay.FadeType.ValueType = ...  # 2
        """Fade the overlay object out of view."""

    class FadeType(_FadeType, metaclass=_FadeTypeEnumTypeWrapper):
        """Fade type for the overlay: `FADE_IN` or `FADE_OUT`."""
        pass

    FADE_TYPE_UNSPECIFIED: Overlay.FadeType.ValueType = ...  # 0
    """The fade type is not specified."""

    FADE_IN: Overlay.FadeType.ValueType = ...  # 1
    """Fade the overlay object into view."""

    FADE_OUT: Overlay.FadeType.ValueType = ...  # 2
    """Fade the overlay object out of view."""


    class NormalizedCoordinate(google.protobuf.message.Message):
        """2D normalized coordinates. Default: `{0.0, 0.0}`"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        X_FIELD_NUMBER: builtins.int
        Y_FIELD_NUMBER: builtins.int
        x: builtins.float = ...
        """Normalized x coordinate."""

        y: builtins.float = ...
        """Normalized y coordinate."""

        def __init__(self,
            *,
            x : builtins.float = ...,
            y : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["x",b"x","y",b"y"]) -> None: ...

    class Image(google.protobuf.message.Message):
        """Overlaid jpeg image."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        URI_FIELD_NUMBER: builtins.int
        RESOLUTION_FIELD_NUMBER: builtins.int
        ALPHA_FIELD_NUMBER: builtins.int
        uri: typing.Text = ...
        """Required. URI of the JPEG image in Cloud Storage. For example,
        `gs://bucket/inputs/image.jpeg`. JPEG is the only supported image type.
        """

        @property
        def resolution(self) -> global___Overlay.NormalizedCoordinate:
            """Normalized image resolution, based on output video resolution. Valid
            values: `0.0`–`1.0`. To respect the original image aspect ratio, set
            either `x` or `y` to `0.0`. To use the original image resolution, set
            both `x` and `y` to `0.0`.
            """
            pass
        alpha: builtins.float = ...
        """Target image opacity. Valid values are from  `1.0` (solid, default) to
        `0.0` (transparent), exclusive. Set this to a value greater than `0.0`.
        """

        def __init__(self,
            *,
            uri : typing.Text = ...,
            resolution : typing.Optional[global___Overlay.NormalizedCoordinate] = ...,
            alpha : builtins.float = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["resolution",b"resolution"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["alpha",b"alpha","resolution",b"resolution","uri",b"uri"]) -> None: ...

    class AnimationStatic(google.protobuf.message.Message):
        """Display static overlay object."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        XY_FIELD_NUMBER: builtins.int
        START_TIME_OFFSET_FIELD_NUMBER: builtins.int
        @property
        def xy(self) -> global___Overlay.NormalizedCoordinate:
            """Normalized coordinates based on output video resolution. Valid
            values: `0.0`–`1.0`. `xy` is the upper-left coordinate of the overlay
            object. For example, use the x and y coordinates {0,0} to position the
            top-left corner of the overlay animation in the top-left corner of the
            output video.
            """
            pass
        @property
        def start_time_offset(self) -> google.protobuf.duration_pb2.Duration:
            """The time to start displaying the overlay object, in seconds. Default: 0"""
            pass
        def __init__(self,
            *,
            xy : typing.Optional[global___Overlay.NormalizedCoordinate] = ...,
            start_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["start_time_offset",b"start_time_offset","xy",b"xy"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["start_time_offset",b"start_time_offset","xy",b"xy"]) -> None: ...

    class AnimationFade(google.protobuf.message.Message):
        """Display overlay object with fade animation."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FADE_TYPE_FIELD_NUMBER: builtins.int
        XY_FIELD_NUMBER: builtins.int
        START_TIME_OFFSET_FIELD_NUMBER: builtins.int
        END_TIME_OFFSET_FIELD_NUMBER: builtins.int
        fade_type: global___Overlay.FadeType.ValueType = ...
        """Required. Type of fade animation: `FADE_IN` or `FADE_OUT`."""

        @property
        def xy(self) -> global___Overlay.NormalizedCoordinate:
            """Normalized coordinates based on output video resolution. Valid
            values: `0.0`–`1.0`. `xy` is the upper-left coordinate of the overlay
            object. For example, use the x and y coordinates {0,0} to position the
            top-left corner of the overlay animation in the top-left corner of the
            output video.
            """
            pass
        @property
        def start_time_offset(self) -> google.protobuf.duration_pb2.Duration:
            """The time to start the fade animation, in seconds. Default: 0"""
            pass
        @property
        def end_time_offset(self) -> google.protobuf.duration_pb2.Duration:
            """The time to end the fade animation, in seconds. Default:
            `start_time_offset` + 1s
            """
            pass
        def __init__(self,
            *,
            fade_type : global___Overlay.FadeType.ValueType = ...,
            xy : typing.Optional[global___Overlay.NormalizedCoordinate] = ...,
            start_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            end_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["end_time_offset",b"end_time_offset","start_time_offset",b"start_time_offset","xy",b"xy"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["end_time_offset",b"end_time_offset","fade_type",b"fade_type","start_time_offset",b"start_time_offset","xy",b"xy"]) -> None: ...

    class AnimationEnd(google.protobuf.message.Message):
        """End previous overlay animation from the video. Without AnimationEnd, the
        overlay object will keep the state of previous animation until the end of
        the video.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        START_TIME_OFFSET_FIELD_NUMBER: builtins.int
        @property
        def start_time_offset(self) -> google.protobuf.duration_pb2.Duration:
            """The time to end overlay object, in seconds. Default: 0"""
            pass
        def __init__(self,
            *,
            start_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["start_time_offset",b"start_time_offset"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["start_time_offset",b"start_time_offset"]) -> None: ...

    class Animation(google.protobuf.message.Message):
        """Animation types."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ANIMATION_STATIC_FIELD_NUMBER: builtins.int
        ANIMATION_FADE_FIELD_NUMBER: builtins.int
        ANIMATION_END_FIELD_NUMBER: builtins.int
        @property
        def animation_static(self) -> global___Overlay.AnimationStatic:
            """Display static overlay object."""
            pass
        @property
        def animation_fade(self) -> global___Overlay.AnimationFade:
            """Display overlay object with fade animation."""
            pass
        @property
        def animation_end(self) -> global___Overlay.AnimationEnd:
            """End previous animation."""
            pass
        def __init__(self,
            *,
            animation_static : typing.Optional[global___Overlay.AnimationStatic] = ...,
            animation_fade : typing.Optional[global___Overlay.AnimationFade] = ...,
            animation_end : typing.Optional[global___Overlay.AnimationEnd] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["animation_end",b"animation_end","animation_fade",b"animation_fade","animation_static",b"animation_static","animation_type",b"animation_type"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["animation_end",b"animation_end","animation_fade",b"animation_fade","animation_static",b"animation_static","animation_type",b"animation_type"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["animation_type",b"animation_type"]) -> typing.Optional[typing_extensions.Literal["animation_static","animation_fade","animation_end"]]: ...

    IMAGE_FIELD_NUMBER: builtins.int
    ANIMATIONS_FIELD_NUMBER: builtins.int
    @property
    def image(self) -> global___Overlay.Image:
        """Image overlay."""
        pass
    @property
    def animations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Overlay.Animation]:
        """List of Animations. The list should be chronological, without any time
        overlap.
        """
        pass
    def __init__(self,
        *,
        image : typing.Optional[global___Overlay.Image] = ...,
        animations : typing.Optional[typing.Iterable[global___Overlay.Animation]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["image",b"image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["animations",b"animations","image",b"image"]) -> None: ...
global___Overlay = Overlay

class PreprocessingConfig(google.protobuf.message.Message):
    """Preprocessing configurations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Color(google.protobuf.message.Message):
        """Color preprocessing configuration."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SATURATION_FIELD_NUMBER: builtins.int
        CONTRAST_FIELD_NUMBER: builtins.int
        BRIGHTNESS_FIELD_NUMBER: builtins.int
        saturation: builtins.float = ...
        """Control color saturation of the video. Enter a value between -1 and 1,
        where -1 is fully desaturated and 1 is maximum saturation. 0 is no
        change. The default is 0.
        """

        contrast: builtins.float = ...
        """Control black and white contrast of the video. Enter a value between -1
        and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no
        change. The default is 0.
        """

        brightness: builtins.float = ...
        """Control brightness of the video. Enter a value between -1 and 1, where -1
        is minimum brightness and 1 is maximum brightness. 0 is no change. The
        default is 0.
        """

        def __init__(self,
            *,
            saturation : builtins.float = ...,
            contrast : builtins.float = ...,
            brightness : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["brightness",b"brightness","contrast",b"contrast","saturation",b"saturation"]) -> None: ...

    class Denoise(google.protobuf.message.Message):
        """Denoise preprocessing configuration."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        STRENGTH_FIELD_NUMBER: builtins.int
        TUNE_FIELD_NUMBER: builtins.int
        strength: builtins.float = ...
        """Set strength of the denoise. Enter a value between 0 and 1. The higher
        the value, the smoother the image. 0 is no denoising. The default is 0.
        """

        tune: typing.Text = ...
        """Set the denoiser mode. The default is `standard`.

        Supported denoiser modes:

        - `standard`
        - `grain`
        """

        def __init__(self,
            *,
            strength : builtins.float = ...,
            tune : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["strength",b"strength","tune",b"tune"]) -> None: ...

    class Deblock(google.protobuf.message.Message):
        """Deblock preprocessing configuration."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        STRENGTH_FIELD_NUMBER: builtins.int
        ENABLED_FIELD_NUMBER: builtins.int
        strength: builtins.float = ...
        """Set strength of the deblocker. Enter a value between 0 and 1. The higher
        the value, the stronger the block removal. 0 is no deblocking. The
        default is 0.
        """

        enabled: builtins.bool = ...
        """Enable deblocker. The default is `false`."""

        def __init__(self,
            *,
            strength : builtins.float = ...,
            enabled : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","strength",b"strength"]) -> None: ...

    class Audio(google.protobuf.message.Message):
        """Audio preprocessing configuration."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        LUFS_FIELD_NUMBER: builtins.int
        HIGH_BOOST_FIELD_NUMBER: builtins.int
        LOW_BOOST_FIELD_NUMBER: builtins.int
        lufs: builtins.float = ...
        """Specify audio loudness normalization in loudness units relative to full
        scale (LUFS). Enter a value between -24 and 0 (the default), where:

        *   -24 is the Advanced Television Systems Committee (ATSC A/85) standard
        *   -23 is the EU R128 broadcast standard
        *   -19 is the prior standard for online mono audio
        *   -18 is the ReplayGain standard
        *   -16 is the prior standard for stereo audio
        *   -14 is the new online audio standard recommended by Spotify, as well
            as Amazon Echo
        *   0 disables normalization
        """

        high_boost: builtins.bool = ...
        """Enable boosting high frequency components. The default is `false`."""

        low_boost: builtins.bool = ...
        """Enable boosting low frequency components. The default is `false`."""

        def __init__(self,
            *,
            lufs : builtins.float = ...,
            high_boost : builtins.bool = ...,
            low_boost : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["high_boost",b"high_boost","low_boost",b"low_boost","lufs",b"lufs"]) -> None: ...

    class Crop(google.protobuf.message.Message):
        """Video cropping configuration for the input video. The cropped input video
        is scaled to match the output resolution.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TOP_PIXELS_FIELD_NUMBER: builtins.int
        BOTTOM_PIXELS_FIELD_NUMBER: builtins.int
        LEFT_PIXELS_FIELD_NUMBER: builtins.int
        RIGHT_PIXELS_FIELD_NUMBER: builtins.int
        top_pixels: builtins.int = ...
        """The number of pixels to crop from the top. The default is 0."""

        bottom_pixels: builtins.int = ...
        """The number of pixels to crop from the bottom. The default is 0."""

        left_pixels: builtins.int = ...
        """The number of pixels to crop from the left. The default is 0."""

        right_pixels: builtins.int = ...
        """The number of pixels to crop from the right. The default is 0."""

        def __init__(self,
            *,
            top_pixels : builtins.int = ...,
            bottom_pixels : builtins.int = ...,
            left_pixels : builtins.int = ...,
            right_pixels : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["bottom_pixels",b"bottom_pixels","left_pixels",b"left_pixels","right_pixels",b"right_pixels","top_pixels",b"top_pixels"]) -> None: ...

    class Pad(google.protobuf.message.Message):
        """Pad filter configuration for the input video. The padded input video
        is scaled after padding with black to match the output resolution.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TOP_PIXELS_FIELD_NUMBER: builtins.int
        BOTTOM_PIXELS_FIELD_NUMBER: builtins.int
        LEFT_PIXELS_FIELD_NUMBER: builtins.int
        RIGHT_PIXELS_FIELD_NUMBER: builtins.int
        top_pixels: builtins.int = ...
        """The number of pixels to add to the top. The default is 0."""

        bottom_pixels: builtins.int = ...
        """The number of pixels to add to the bottom. The default is 0."""

        left_pixels: builtins.int = ...
        """The number of pixels to add to the left. The default is 0."""

        right_pixels: builtins.int = ...
        """The number of pixels to add to the right. The default is 0."""

        def __init__(self,
            *,
            top_pixels : builtins.int = ...,
            bottom_pixels : builtins.int = ...,
            left_pixels : builtins.int = ...,
            right_pixels : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["bottom_pixels",b"bottom_pixels","left_pixels",b"left_pixels","right_pixels",b"right_pixels","top_pixels",b"top_pixels"]) -> None: ...

    COLOR_FIELD_NUMBER: builtins.int
    DENOISE_FIELD_NUMBER: builtins.int
    DEBLOCK_FIELD_NUMBER: builtins.int
    AUDIO_FIELD_NUMBER: builtins.int
    CROP_FIELD_NUMBER: builtins.int
    PAD_FIELD_NUMBER: builtins.int
    @property
    def color(self) -> global___PreprocessingConfig.Color:
        """Color preprocessing configuration."""
        pass
    @property
    def denoise(self) -> global___PreprocessingConfig.Denoise:
        """Denoise preprocessing configuration."""
        pass
    @property
    def deblock(self) -> global___PreprocessingConfig.Deblock:
        """Deblock preprocessing configuration."""
        pass
    @property
    def audio(self) -> global___PreprocessingConfig.Audio:
        """Audio preprocessing configuration."""
        pass
    @property
    def crop(self) -> global___PreprocessingConfig.Crop:
        """Specify the video cropping configuration."""
        pass
    @property
    def pad(self) -> global___PreprocessingConfig.Pad:
        """Specify the video pad filter configuration."""
        pass
    def __init__(self,
        *,
        color : typing.Optional[global___PreprocessingConfig.Color] = ...,
        denoise : typing.Optional[global___PreprocessingConfig.Denoise] = ...,
        deblock : typing.Optional[global___PreprocessingConfig.Deblock] = ...,
        audio : typing.Optional[global___PreprocessingConfig.Audio] = ...,
        crop : typing.Optional[global___PreprocessingConfig.Crop] = ...,
        pad : typing.Optional[global___PreprocessingConfig.Pad] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["audio",b"audio","color",b"color","crop",b"crop","deblock",b"deblock","denoise",b"denoise","pad",b"pad"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio",b"audio","color",b"color","crop",b"crop","deblock",b"deblock","denoise",b"denoise","pad",b"pad"]) -> None: ...
global___PreprocessingConfig = PreprocessingConfig

class VideoStream(google.protobuf.message.Message):
    """Video stream resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class H264CodecSettings(google.protobuf.message.Message):
        """H264 codec settings."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        WIDTH_PIXELS_FIELD_NUMBER: builtins.int
        HEIGHT_PIXELS_FIELD_NUMBER: builtins.int
        FRAME_RATE_FIELD_NUMBER: builtins.int
        BITRATE_BPS_FIELD_NUMBER: builtins.int
        PIXEL_FORMAT_FIELD_NUMBER: builtins.int
        RATE_CONTROL_MODE_FIELD_NUMBER: builtins.int
        CRF_LEVEL_FIELD_NUMBER: builtins.int
        ALLOW_OPEN_GOP_FIELD_NUMBER: builtins.int
        GOP_FRAME_COUNT_FIELD_NUMBER: builtins.int
        GOP_DURATION_FIELD_NUMBER: builtins.int
        ENABLE_TWO_PASS_FIELD_NUMBER: builtins.int
        VBV_SIZE_BITS_FIELD_NUMBER: builtins.int
        VBV_FULLNESS_BITS_FIELD_NUMBER: builtins.int
        ENTROPY_CODER_FIELD_NUMBER: builtins.int
        B_PYRAMID_FIELD_NUMBER: builtins.int
        B_FRAME_COUNT_FIELD_NUMBER: builtins.int
        AQ_STRENGTH_FIELD_NUMBER: builtins.int
        PROFILE_FIELD_NUMBER: builtins.int
        TUNE_FIELD_NUMBER: builtins.int
        PRESET_FIELD_NUMBER: builtins.int
        width_pixels: builtins.int = ...
        """The width of the video in pixels. Must be an even integer.
        When not specified, the width is adjusted to match the specified height
        and input aspect ratio. If both are omitted, the input width is used.
        """

        height_pixels: builtins.int = ...
        """The height of the video in pixels. Must be an even integer.
        When not specified, the height is adjusted to match the specified width
        and input aspect ratio. If both are omitted, the input height is used.
        """

        frame_rate: builtins.float = ...
        """Required. The target video frame rate in frames per second (FPS). Must be less than
        or equal to 120. Will default to the input frame rate if larger than the
        input frame rate. The API will generate an output FPS that is divisible
        by the input FPS, and smaller or equal to the target FPS. See
        [Calculating frame
        rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for
        more information.
        """

        bitrate_bps: builtins.int = ...
        """Required. The video bitrate in bits per second. The minimum value is 1,000.
        The maximum value is 800,000,000.
        """

        pixel_format: typing.Text = ...
        """Pixel format to use. The default is `yuv420p`.

        Supported pixel formats:

        - `yuv420p` pixel format
        - `yuv422p` pixel format
        - `yuv444p` pixel format
        - `yuv420p10` 10-bit HDR pixel format
        - `yuv422p10` 10-bit HDR pixel format
        - `yuv444p10` 10-bit HDR pixel format
        - `yuv420p12` 12-bit HDR pixel format
        - `yuv422p12` 12-bit HDR pixel format
        - `yuv444p12` 12-bit HDR pixel format
        """

        rate_control_mode: typing.Text = ...
        """Specify the `rate_control_mode`. The default is `vbr`.

        Supported rate control modes:

        - `vbr` - variable bitrate
        - `crf` - constant rate factor
        """

        crf_level: builtins.int = ...
        """Target CRF level. Must be between 10 and 36, where 10 is the highest
        quality and 36 is the most efficient compression. The default is 21.
        """

        allow_open_gop: builtins.bool = ...
        """Specifies whether an open Group of Pictures (GOP) structure should be
        allowed or not. The default is `false`.
        """

        gop_frame_count: builtins.int = ...
        """Select the GOP size based on the specified frame count. Must be greater
        than zero.
        """

        @property
        def gop_duration(self) -> google.protobuf.duration_pb2.Duration:
            """Select the GOP size based on the specified duration. The default is
            `3s`. Note that `gopDuration` must be less than or equal to
            [`segmentDuration`](#SegmentSettings), and
            [`segmentDuration`](#SegmentSettings) must be divisible by
            `gopDuration`.
            """
            pass
        enable_two_pass: builtins.bool = ...
        """Use two-pass encoding strategy to achieve better video quality.
        `VideoStream.rate_control_mode` must be `vbr`. The default is `false`.
        """

        vbv_size_bits: builtins.int = ...
        """Size of the Video Buffering Verifier (VBV) buffer in bits. Must be
        greater than zero. The default is equal to `VideoStream.bitrate_bps`.
        """

        vbv_fullness_bits: builtins.int = ...
        """Initial fullness of the Video Buffering Verifier (VBV) buffer in bits.
        Must be greater than zero. The default is equal to 90% of
        `VideoStream.vbv_size_bits`.
        """

        entropy_coder: typing.Text = ...
        """The entropy coder to use. The default is `cabac`.

        Supported entropy coders:

        - `cavlc`
        - `cabac`
        """

        b_pyramid: builtins.bool = ...
        """Allow B-pyramid for reference frame selection. This may not be supported
        on all decoders. The default is `false`.
        """

        b_frame_count: builtins.int = ...
        """The number of consecutive B-frames. Must be greater than or equal to
        zero. Must be less than `VideoStream.gop_frame_count` if set. The default
        is 0.
        """

        aq_strength: builtins.float = ...
        """Specify the intensity of the adaptive quantizer (AQ). Must be between 0
        and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A
        higher value equals a lower bitrate but smoother image. The default is 0.
        """

        profile: typing.Text = ...
        """Enforces the specified codec profile. The following profiles are
        supported:

        *   `baseline`
        *   `main`
        *   `high` (default)

        The available options are
        [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune).
        Note that certain values for this field may cause the
        transcoder to override other fields you set in the `H264CodecSettings`
        message.
        """

        tune: typing.Text = ...
        """Enforces the specified codec tune. The available options are
        [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune).
        Note that certain values for this field may cause the
        transcoder to override other fields you set in the `H264CodecSettings`
        message.
        """

        preset: typing.Text = ...
        """Enforces the specified codec preset. The default is `veryfast`. The
        available options are
        [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Preset).
        Note that certain values for this field may cause the
        transcoder to override other fields you set in the `H264CodecSettings`
        message.
        """

        def __init__(self,
            *,
            width_pixels : builtins.int = ...,
            height_pixels : builtins.int = ...,
            frame_rate : builtins.float = ...,
            bitrate_bps : builtins.int = ...,
            pixel_format : typing.Text = ...,
            rate_control_mode : typing.Text = ...,
            crf_level : builtins.int = ...,
            allow_open_gop : builtins.bool = ...,
            gop_frame_count : builtins.int = ...,
            gop_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            enable_two_pass : builtins.bool = ...,
            vbv_size_bits : builtins.int = ...,
            vbv_fullness_bits : builtins.int = ...,
            entropy_coder : typing.Text = ...,
            b_pyramid : builtins.bool = ...,
            b_frame_count : builtins.int = ...,
            aq_strength : builtins.float = ...,
            profile : typing.Text = ...,
            tune : typing.Text = ...,
            preset : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["gop_duration",b"gop_duration","gop_frame_count",b"gop_frame_count","gop_mode",b"gop_mode"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["allow_open_gop",b"allow_open_gop","aq_strength",b"aq_strength","b_frame_count",b"b_frame_count","b_pyramid",b"b_pyramid","bitrate_bps",b"bitrate_bps","crf_level",b"crf_level","enable_two_pass",b"enable_two_pass","entropy_coder",b"entropy_coder","frame_rate",b"frame_rate","gop_duration",b"gop_duration","gop_frame_count",b"gop_frame_count","gop_mode",b"gop_mode","height_pixels",b"height_pixels","pixel_format",b"pixel_format","preset",b"preset","profile",b"profile","rate_control_mode",b"rate_control_mode","tune",b"tune","vbv_fullness_bits",b"vbv_fullness_bits","vbv_size_bits",b"vbv_size_bits","width_pixels",b"width_pixels"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["gop_mode",b"gop_mode"]) -> typing.Optional[typing_extensions.Literal["gop_frame_count","gop_duration"]]: ...

    class H265CodecSettings(google.protobuf.message.Message):
        """H265 codec settings."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        WIDTH_PIXELS_FIELD_NUMBER: builtins.int
        HEIGHT_PIXELS_FIELD_NUMBER: builtins.int
        FRAME_RATE_FIELD_NUMBER: builtins.int
        BITRATE_BPS_FIELD_NUMBER: builtins.int
        PIXEL_FORMAT_FIELD_NUMBER: builtins.int
        RATE_CONTROL_MODE_FIELD_NUMBER: builtins.int
        CRF_LEVEL_FIELD_NUMBER: builtins.int
        ALLOW_OPEN_GOP_FIELD_NUMBER: builtins.int
        GOP_FRAME_COUNT_FIELD_NUMBER: builtins.int
        GOP_DURATION_FIELD_NUMBER: builtins.int
        ENABLE_TWO_PASS_FIELD_NUMBER: builtins.int
        VBV_SIZE_BITS_FIELD_NUMBER: builtins.int
        VBV_FULLNESS_BITS_FIELD_NUMBER: builtins.int
        B_PYRAMID_FIELD_NUMBER: builtins.int
        B_FRAME_COUNT_FIELD_NUMBER: builtins.int
        AQ_STRENGTH_FIELD_NUMBER: builtins.int
        PROFILE_FIELD_NUMBER: builtins.int
        TUNE_FIELD_NUMBER: builtins.int
        PRESET_FIELD_NUMBER: builtins.int
        width_pixels: builtins.int = ...
        """The width of the video in pixels. Must be an even integer.
        When not specified, the width is adjusted to match the specified height
        and input aspect ratio. If both are omitted, the input width is used.
        """

        height_pixels: builtins.int = ...
        """The height of the video in pixels. Must be an even integer.
        When not specified, the height is adjusted to match the specified width
        and input aspect ratio. If both are omitted, the input height is used.
        """

        frame_rate: builtins.float = ...
        """Required. The target video frame rate in frames per second (FPS). Must be less than
        or equal to 120. Will default to the input frame rate if larger than the
        input frame rate. The API will generate an output FPS that is divisible
        by the input FPS, and smaller or equal to the target FPS. See
        [Calculating frame
        rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for
        more information.
        """

        bitrate_bps: builtins.int = ...
        """Required. The video bitrate in bits per second. The minimum value is 1,000.
        The maximum value is 800,000,000.
        """

        pixel_format: typing.Text = ...
        """Pixel format to use. The default is `yuv420p`.

        Supported pixel formats:

        - `yuv420p` pixel format
        - `yuv422p` pixel format
        - `yuv444p` pixel format
        - `yuv420p10` 10-bit HDR pixel format
        - `yuv422p10` 10-bit HDR pixel format
        - `yuv444p10` 10-bit HDR pixel format
        - `yuv420p12` 12-bit HDR pixel format
        - `yuv422p12` 12-bit HDR pixel format
        - `yuv444p12` 12-bit HDR pixel format
        """

        rate_control_mode: typing.Text = ...
        """Specify the `rate_control_mode`. The default is `vbr`.

        Supported rate control modes:

        - `vbr` - variable bitrate
        - `crf` - constant rate factor
        """

        crf_level: builtins.int = ...
        """Target CRF level. Must be between 10 and 36, where 10 is the highest
        quality and 36 is the most efficient compression. The default is 21.
        """

        allow_open_gop: builtins.bool = ...
        """Specifies whether an open Group of Pictures (GOP) structure should be
        allowed or not. The default is `false`.
        """

        gop_frame_count: builtins.int = ...
        """Select the GOP size based on the specified frame count. Must be greater
        than zero.
        """

        @property
        def gop_duration(self) -> google.protobuf.duration_pb2.Duration:
            """Select the GOP size based on the specified duration. The default is
            `3s`. Note that `gopDuration` must be less than or equal to
            [`segmentDuration`](#SegmentSettings), and
            [`segmentDuration`](#SegmentSettings) must be divisible by
            `gopDuration`.
            """
            pass
        enable_two_pass: builtins.bool = ...
        """Use two-pass encoding strategy to achieve better video quality.
        `VideoStream.rate_control_mode` must be `vbr`. The default is `false`.
        """

        vbv_size_bits: builtins.int = ...
        """Size of the Video Buffering Verifier (VBV) buffer in bits. Must be
        greater than zero. The default is equal to `VideoStream.bitrate_bps`.
        """

        vbv_fullness_bits: builtins.int = ...
        """Initial fullness of the Video Buffering Verifier (VBV) buffer in bits.
        Must be greater than zero. The default is equal to 90% of
        `VideoStream.vbv_size_bits`.
        """

        b_pyramid: builtins.bool = ...
        """Allow B-pyramid for reference frame selection. This may not be supported
        on all decoders. The default is `false`.
        """

        b_frame_count: builtins.int = ...
        """The number of consecutive B-frames. Must be greater than or equal to
        zero. Must be less than `VideoStream.gop_frame_count` if set. The default
        is 0.
        """

        aq_strength: builtins.float = ...
        """Specify the intensity of the adaptive quantizer (AQ). Must be between 0
        and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A
        higher value equals a lower bitrate but smoother image. The default is 0.
        """

        profile: typing.Text = ...
        """Enforces the specified codec profile. The following profiles are
        supported:

        *   8-bit profiles
            *   `main` (default)
            *   `main-intra`
            *   `mainstillpicture`
        *   10-bit profiles
            *   `main10` (default)
            *   `main10-intra`
            *   `main422-10`
            *   `main422-10-intra`
            *   `main444-10`
            *   `main444-10-intra`
        *   12-bit profiles
            *   `main12` (default)
            *   `main12-intra`
            *   `main422-12`
            *   `main422-12-intra`
            *   `main444-12`
            *   `main444-12-intra`

        The available options are
        [FFmpeg-compatible](https://x265.readthedocs.io/).
        Note that certain values for this field may cause the
        transcoder to override other fields you set in the `H265CodecSettings`
        message.
        """

        tune: typing.Text = ...
        """Enforces the specified codec tune. The available options are
        [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.265).
        Note that certain values for this field may cause the
        transcoder to override other fields you set in the `H265CodecSettings`
        message.
        """

        preset: typing.Text = ...
        """Enforces the specified codec preset. The default is `veryfast`. The
        available options are
        [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.265).
        Note that certain values for this field may cause the
        transcoder to override other fields you set in the `H265CodecSettings`
        message.
        """

        def __init__(self,
            *,
            width_pixels : builtins.int = ...,
            height_pixels : builtins.int = ...,
            frame_rate : builtins.float = ...,
            bitrate_bps : builtins.int = ...,
            pixel_format : typing.Text = ...,
            rate_control_mode : typing.Text = ...,
            crf_level : builtins.int = ...,
            allow_open_gop : builtins.bool = ...,
            gop_frame_count : builtins.int = ...,
            gop_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            enable_two_pass : builtins.bool = ...,
            vbv_size_bits : builtins.int = ...,
            vbv_fullness_bits : builtins.int = ...,
            b_pyramid : builtins.bool = ...,
            b_frame_count : builtins.int = ...,
            aq_strength : builtins.float = ...,
            profile : typing.Text = ...,
            tune : typing.Text = ...,
            preset : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["gop_duration",b"gop_duration","gop_frame_count",b"gop_frame_count","gop_mode",b"gop_mode"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["allow_open_gop",b"allow_open_gop","aq_strength",b"aq_strength","b_frame_count",b"b_frame_count","b_pyramid",b"b_pyramid","bitrate_bps",b"bitrate_bps","crf_level",b"crf_level","enable_two_pass",b"enable_two_pass","frame_rate",b"frame_rate","gop_duration",b"gop_duration","gop_frame_count",b"gop_frame_count","gop_mode",b"gop_mode","height_pixels",b"height_pixels","pixel_format",b"pixel_format","preset",b"preset","profile",b"profile","rate_control_mode",b"rate_control_mode","tune",b"tune","vbv_fullness_bits",b"vbv_fullness_bits","vbv_size_bits",b"vbv_size_bits","width_pixels",b"width_pixels"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["gop_mode",b"gop_mode"]) -> typing.Optional[typing_extensions.Literal["gop_frame_count","gop_duration"]]: ...

    class Vp9CodecSettings(google.protobuf.message.Message):
        """VP9 codec settings."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        WIDTH_PIXELS_FIELD_NUMBER: builtins.int
        HEIGHT_PIXELS_FIELD_NUMBER: builtins.int
        FRAME_RATE_FIELD_NUMBER: builtins.int
        BITRATE_BPS_FIELD_NUMBER: builtins.int
        PIXEL_FORMAT_FIELD_NUMBER: builtins.int
        RATE_CONTROL_MODE_FIELD_NUMBER: builtins.int
        CRF_LEVEL_FIELD_NUMBER: builtins.int
        GOP_FRAME_COUNT_FIELD_NUMBER: builtins.int
        GOP_DURATION_FIELD_NUMBER: builtins.int
        PROFILE_FIELD_NUMBER: builtins.int
        width_pixels: builtins.int = ...
        """The width of the video in pixels. Must be an even integer.
        When not specified, the width is adjusted to match the specified height
        and input aspect ratio. If both are omitted, the input width is used.
        """

        height_pixels: builtins.int = ...
        """The height of the video in pixels. Must be an even integer.
        When not specified, the height is adjusted to match the specified width
        and input aspect ratio. If both are omitted, the input height is used.
        """

        frame_rate: builtins.float = ...
        """Required. The target video frame rate in frames per second (FPS). Must be less than
        or equal to 120. Will default to the input frame rate if larger than the
        input frame rate. The API will generate an output FPS that is divisible
        by the input FPS, and smaller or equal to the target FPS. See
        [Calculating frame
        rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for
        more information.
        """

        bitrate_bps: builtins.int = ...
        """Required. The video bitrate in bits per second. The minimum value is 1,000.
        The maximum value is 480,000,000.
        """

        pixel_format: typing.Text = ...
        """Pixel format to use. The default is `yuv420p`.

        Supported pixel formats:

        - `yuv420p` pixel format
        - `yuv422p` pixel format
        - `yuv444p` pixel format
        - `yuv420p10` 10-bit HDR pixel format
        - `yuv422p10` 10-bit HDR pixel format
        - `yuv444p10` 10-bit HDR pixel format
        - `yuv420p12` 12-bit HDR pixel format
        - `yuv422p12` 12-bit HDR pixel format
        - `yuv444p12` 12-bit HDR pixel format
        """

        rate_control_mode: typing.Text = ...
        """Specify the `rate_control_mode`. The default is `vbr`.

        Supported rate control modes:

        - `vbr` - variable bitrate
        - `crf` - constant rate factor
        """

        crf_level: builtins.int = ...
        """Target CRF level. Must be between 10 and 36, where 10 is the highest
        quality and 36 is the most efficient compression. The default is 21.
        """

        gop_frame_count: builtins.int = ...
        """Select the GOP size based on the specified frame count. Must be greater
        than zero.
        """

        @property
        def gop_duration(self) -> google.protobuf.duration_pb2.Duration:
            """Select the GOP size based on the specified duration. The default is
            `3s`. Note that `gopDuration` must be less than or equal to
            [`segmentDuration`](#SegmentSettings), and
            [`segmentDuration`](#SegmentSettings) must be divisible by
            `gopDuration`.
            """
            pass
        profile: typing.Text = ...
        """Enforces the specified codec profile. The following profiles are
        supported:

        *   `profile0` (default)
        *   `profile1`
        *   `profile2`
        *   `profile3`

        The available options are
        [WebM-compatible](https://www.webmproject.org/vp9/profiles/).
        Note that certain values for this field may cause the
        transcoder to override other fields you set in the `Vp9CodecSettings`
        message.
        """

        def __init__(self,
            *,
            width_pixels : builtins.int = ...,
            height_pixels : builtins.int = ...,
            frame_rate : builtins.float = ...,
            bitrate_bps : builtins.int = ...,
            pixel_format : typing.Text = ...,
            rate_control_mode : typing.Text = ...,
            crf_level : builtins.int = ...,
            gop_frame_count : builtins.int = ...,
            gop_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            profile : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["gop_duration",b"gop_duration","gop_frame_count",b"gop_frame_count","gop_mode",b"gop_mode"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["bitrate_bps",b"bitrate_bps","crf_level",b"crf_level","frame_rate",b"frame_rate","gop_duration",b"gop_duration","gop_frame_count",b"gop_frame_count","gop_mode",b"gop_mode","height_pixels",b"height_pixels","pixel_format",b"pixel_format","profile",b"profile","rate_control_mode",b"rate_control_mode","width_pixels",b"width_pixels"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["gop_mode",b"gop_mode"]) -> typing.Optional[typing_extensions.Literal["gop_frame_count","gop_duration"]]: ...

    H264_FIELD_NUMBER: builtins.int
    H265_FIELD_NUMBER: builtins.int
    VP9_FIELD_NUMBER: builtins.int
    @property
    def h264(self) -> global___VideoStream.H264CodecSettings:
        """H264 codec settings."""
        pass
    @property
    def h265(self) -> global___VideoStream.H265CodecSettings:
        """H265 codec settings."""
        pass
    @property
    def vp9(self) -> global___VideoStream.Vp9CodecSettings:
        """VP9 codec settings."""
        pass
    def __init__(self,
        *,
        h264 : typing.Optional[global___VideoStream.H264CodecSettings] = ...,
        h265 : typing.Optional[global___VideoStream.H265CodecSettings] = ...,
        vp9 : typing.Optional[global___VideoStream.Vp9CodecSettings] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["codec_settings",b"codec_settings","h264",b"h264","h265",b"h265","vp9",b"vp9"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["codec_settings",b"codec_settings","h264",b"h264","h265",b"h265","vp9",b"vp9"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["codec_settings",b"codec_settings"]) -> typing.Optional[typing_extensions.Literal["h264","h265","vp9"]]: ...
global___VideoStream = VideoStream

class AudioStream(google.protobuf.message.Message):
    """Audio stream resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AudioMapping(google.protobuf.message.Message):
        """The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ATOM_KEY_FIELD_NUMBER: builtins.int
        INPUT_KEY_FIELD_NUMBER: builtins.int
        INPUT_TRACK_FIELD_NUMBER: builtins.int
        INPUT_CHANNEL_FIELD_NUMBER: builtins.int
        OUTPUT_CHANNEL_FIELD_NUMBER: builtins.int
        GAIN_DB_FIELD_NUMBER: builtins.int
        atom_key: typing.Text = ...
        """Required. The `EditAtom.key` that references the atom with audio inputs in the
        `Job.edit_list`.
        """

        input_key: typing.Text = ...
        """Required. The `Input.key` that identifies the input file."""

        input_track: builtins.int = ...
        """Required. The zero-based index of the track in the input file."""

        input_channel: builtins.int = ...
        """Required. The zero-based index of the channel in the input audio stream."""

        output_channel: builtins.int = ...
        """Required. The zero-based index of the channel in the output audio stream."""

        gain_db: builtins.float = ...
        """Audio volume control in dB. Negative values decrease volume,
        positive values increase. The default is 0.
        """

        def __init__(self,
            *,
            atom_key : typing.Text = ...,
            input_key : typing.Text = ...,
            input_track : builtins.int = ...,
            input_channel : builtins.int = ...,
            output_channel : builtins.int = ...,
            gain_db : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["atom_key",b"atom_key","gain_db",b"gain_db","input_channel",b"input_channel","input_key",b"input_key","input_track",b"input_track","output_channel",b"output_channel"]) -> None: ...

    CODEC_FIELD_NUMBER: builtins.int
    BITRATE_BPS_FIELD_NUMBER: builtins.int
    CHANNEL_COUNT_FIELD_NUMBER: builtins.int
    CHANNEL_LAYOUT_FIELD_NUMBER: builtins.int
    MAPPING_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_HERTZ_FIELD_NUMBER: builtins.int
    codec: typing.Text = ...
    """The codec for this audio stream. The default is `aac`.

    Supported audio codecs:

    - `aac`
    - `aac-he`
    - `aac-he-v2`
    - `mp3`
    - `ac3`
    - `eac3`
    """

    bitrate_bps: builtins.int = ...
    """Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000."""

    channel_count: builtins.int = ...
    """Number of audio channels. Must be between 1 and 6. The default is 2."""

    @property
    def channel_layout(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of channel names specifying layout of the audio channels.
        This only affects the metadata embedded in the container headers, if
        supported by the specified format. The default is `["fl", "fr"]`.

        Supported channel names:

        - `fl` - Front left channel
        - `fr` - Front right channel
        - `sl` - Side left channel
        - `sr` - Side right channel
        - `fc` - Front center channel
        - `lfe` - Low frequency
        """
        pass
    @property
    def mapping(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AudioStream.AudioMapping]:
        """The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`."""
        pass
    sample_rate_hertz: builtins.int = ...
    """The audio sample rate in Hertz. The default is 48000 Hertz."""

    def __init__(self,
        *,
        codec : typing.Text = ...,
        bitrate_bps : builtins.int = ...,
        channel_count : builtins.int = ...,
        channel_layout : typing.Optional[typing.Iterable[typing.Text]] = ...,
        mapping : typing.Optional[typing.Iterable[global___AudioStream.AudioMapping]] = ...,
        sample_rate_hertz : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bitrate_bps",b"bitrate_bps","channel_count",b"channel_count","channel_layout",b"channel_layout","codec",b"codec","mapping",b"mapping","sample_rate_hertz",b"sample_rate_hertz"]) -> None: ...
global___AudioStream = AudioStream

class TextStream(google.protobuf.message.Message):
    """Encoding of a text stream. For example, closed captions or subtitles."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TextMapping(google.protobuf.message.Message):
        """The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ATOM_KEY_FIELD_NUMBER: builtins.int
        INPUT_KEY_FIELD_NUMBER: builtins.int
        INPUT_TRACK_FIELD_NUMBER: builtins.int
        atom_key: typing.Text = ...
        """Required. The `EditAtom.key` that references atom with text inputs in the
        `Job.edit_list`.
        """

        input_key: typing.Text = ...
        """Required. The `Input.key` that identifies the input file."""

        input_track: builtins.int = ...
        """Required. The zero-based index of the track in the input file."""

        def __init__(self,
            *,
            atom_key : typing.Text = ...,
            input_key : typing.Text = ...,
            input_track : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["atom_key",b"atom_key","input_key",b"input_key","input_track",b"input_track"]) -> None: ...

    CODEC_FIELD_NUMBER: builtins.int
    MAPPING_FIELD_NUMBER: builtins.int
    codec: typing.Text = ...
    """The codec for this text stream. The default is `webvtt`.

    Supported text codecs:

    - `srt`
    - `ttml`
    - `cea608`
    - `cea708`
    - `webvtt`
    """

    @property
    def mapping(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TextStream.TextMapping]:
        """The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`."""
        pass
    def __init__(self,
        *,
        codec : typing.Text = ...,
        mapping : typing.Optional[typing.Iterable[global___TextStream.TextMapping]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["codec",b"codec","mapping",b"mapping"]) -> None: ...
global___TextStream = TextStream

class SegmentSettings(google.protobuf.message.Message):
    """Segment settings for `ts`, `fmp4` and `vtt`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SEGMENT_DURATION_FIELD_NUMBER: builtins.int
    INDIVIDUAL_SEGMENTS_FIELD_NUMBER: builtins.int
    @property
    def segment_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Duration of the segments in seconds. The default is `6.0s`. Note that
        `segmentDuration` must be greater than or equal to
        [`gopDuration`](#videostream), and `segmentDuration` must be divisible by
        [`gopDuration`](#videostream).
        """
        pass
    individual_segments: builtins.bool = ...
    """Required. Create an individual segment file. The default is `false`."""

    def __init__(self,
        *,
        segment_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        individual_segments : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["segment_duration",b"segment_duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["individual_segments",b"individual_segments","segment_duration",b"segment_duration"]) -> None: ...
global___SegmentSettings = SegmentSettings
