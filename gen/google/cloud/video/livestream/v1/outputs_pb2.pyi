"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ElementaryStream(google.protobuf.message.Message):
    """Encoding of an input element such as an audio, video, or text track.
    Elementary streams must be packaged before mapping and sharing between
    different output formats.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    VIDEO_STREAM_FIELD_NUMBER: builtins.int
    AUDIO_STREAM_FIELD_NUMBER: builtins.int
    TEXT_STREAM_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """A unique key for this elementary stream."""

    @property
    def video_stream(self) -> global___VideoStream:
        """Encoding of a video stream."""
        pass
    @property
    def audio_stream(self) -> global___AudioStream:
        """Encoding of an audio stream."""
        pass
    @property
    def text_stream(self) -> global___TextStream:
        """Encoding of a text stream. For example, closed captions or subtitles."""
        pass
    def __init__(self,
        *,
        key : typing.Text = ...,
        video_stream : typing.Optional[global___VideoStream] = ...,
        audio_stream : typing.Optional[global___AudioStream] = ...,
        text_stream : typing.Optional[global___TextStream] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["audio_stream",b"audio_stream","elementary_stream",b"elementary_stream","text_stream",b"text_stream","video_stream",b"video_stream"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_stream",b"audio_stream","elementary_stream",b"elementary_stream","key",b"key","text_stream",b"text_stream","video_stream",b"video_stream"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["elementary_stream",b"elementary_stream"]) -> typing.Optional[typing_extensions.Literal["video_stream","audio_stream","text_stream"]]: ...
global___ElementaryStream = ElementaryStream

class MuxStream(google.protobuf.message.Message):
    """Multiplexing settings for output stream."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    CONTAINER_FIELD_NUMBER: builtins.int
    ELEMENTARY_STREAMS_FIELD_NUMBER: builtins.int
    SEGMENT_SETTINGS_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """A unique key for this multiplexed stream."""

    container: typing.Text = ...
    """The container format. The default is `fmp4`.

    Supported container formats:

    - `fmp4` - the corresponding file extension is `.m4s`
    - `ts` - the corresponding file extension is `.ts`
    """

    @property
    def elementary_streams(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of `ElementaryStream` [key][google.cloud.video.livestream.v1.ElementaryStream.key]s multiplexed in this
        stream.

        - For `fmp4` container, must contain either one video or one audio stream.
        - For `ts` container, must contain exactly one audio stream and up to one
        video stream.
        """
        pass
    @property
    def segment_settings(self) -> global___SegmentSettings:
        """Segment settings for `fmp4` and `ts`."""
        pass
    def __init__(self,
        *,
        key : typing.Text = ...,
        container : typing.Text = ...,
        elementary_streams : typing.Optional[typing.Iterable[typing.Text]] = ...,
        segment_settings : typing.Optional[global___SegmentSettings] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["segment_settings",b"segment_settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["container",b"container","elementary_streams",b"elementary_streams","key",b"key","segment_settings",b"segment_settings"]) -> None: ...
global___MuxStream = MuxStream

class Manifest(google.protobuf.message.Message):
    """Manifest configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ManifestType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ManifestTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ManifestType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        MANIFEST_TYPE_UNSPECIFIED: Manifest.ManifestType.ValueType = ...  # 0
        """The manifest type is not specified."""

        HLS: Manifest.ManifestType.ValueType = ...  # 1
        """Create an `HLS` manifest. The corresponding file extension is `.m3u8`."""

        DASH: Manifest.ManifestType.ValueType = ...  # 2
        """Create a `DASH` manifest. The corresponding file extension is `.mpd`."""

    class ManifestType(_ManifestType, metaclass=_ManifestTypeEnumTypeWrapper):
        """The manifest type can be either `HLS` or `DASH`."""
        pass

    MANIFEST_TYPE_UNSPECIFIED: Manifest.ManifestType.ValueType = ...  # 0
    """The manifest type is not specified."""

    HLS: Manifest.ManifestType.ValueType = ...  # 1
    """Create an `HLS` manifest. The corresponding file extension is `.m3u8`."""

    DASH: Manifest.ManifestType.ValueType = ...  # 2
    """Create a `DASH` manifest. The corresponding file extension is `.mpd`."""


    FILE_NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    MUX_STREAMS_FIELD_NUMBER: builtins.int
    MAX_SEGMENT_COUNT_FIELD_NUMBER: builtins.int
    SEGMENT_KEEP_DURATION_FIELD_NUMBER: builtins.int
    file_name: typing.Text = ...
    """The name of the generated file. The default is `manifest` with the
    extension suffix corresponding to the `Manifest` [type][google.cloud.video.livestream.v1.Manifest.type]. If multiple
    manifests are added to the channel, each must have a unique file name.
    """

    type: global___Manifest.ManifestType.ValueType = ...
    """Required. Type of the manifest, can be `HLS` or `DASH`."""

    @property
    def mux_streams(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. List of `MuxStream` [key][google.cloud.video.livestream.v1.MuxStream.key]s that should appear in this
        manifest.

        - For HLS, either `fmp4` or `ts` mux streams can be specified but not
        mixed.
        - For DASH, only `fmp4` mux streams can be specified.
        """
        pass
    max_segment_count: builtins.int = ...
    """Maximum number of segments that this manifest holds. Once the manifest
    reaches this maximum number of segments, whenever a new segment is added to
    the manifest, the oldest segment will be removed from the manifest.
    The minimum value is 1 and the default value is 5.
    """

    @property
    def segment_keep_duration(self) -> google.protobuf.duration_pb2.Duration:
        """How long to keep a segment on the output Google Cloud Storage bucket after
        it is removed from the manifest. This field should be large enough to cover
        the manifest propagation delay. Otherwise, a player could receive 404
        errors while accessing segments which are listed in the manifest that the
        player has, but were already deleted from the output Google Cloud Storage
        bucket. Default value is `60s`.
        """
        pass
    def __init__(self,
        *,
        file_name : typing.Text = ...,
        type : global___Manifest.ManifestType.ValueType = ...,
        mux_streams : typing.Optional[typing.Iterable[typing.Text]] = ...,
        max_segment_count : builtins.int = ...,
        segment_keep_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["segment_keep_duration",b"segment_keep_duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_name",b"file_name","max_segment_count",b"max_segment_count","mux_streams",b"mux_streams","segment_keep_duration",b"segment_keep_duration","type",b"type"]) -> None: ...
global___Manifest = Manifest

class SpriteSheet(google.protobuf.message.Message):
    """Sprite sheet configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORMAT_FIELD_NUMBER: builtins.int
    FILE_PREFIX_FIELD_NUMBER: builtins.int
    SPRITE_WIDTH_PIXELS_FIELD_NUMBER: builtins.int
    SPRITE_HEIGHT_PIXELS_FIELD_NUMBER: builtins.int
    COLUMN_COUNT_FIELD_NUMBER: builtins.int
    ROW_COUNT_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    QUALITY_FIELD_NUMBER: builtins.int
    format: typing.Text = ...
    """Format type. The default is `jpeg`.

    Supported formats:

    - `jpeg`
    """

    file_prefix: typing.Text = ...
    """Required. File name prefix for the generated sprite sheets. If multiple
    sprite sheets are added to the channel, each must have a unique file
    prefix.
    Each sprite sheet has an incremental 10-digit zero-padded suffix starting
    from 0 before the extension, such as `sprite_sheet0000000123.jpeg`.
    """

    sprite_width_pixels: builtins.int = ...
    """Required. The width of the sprite in pixels. Must be an even integer."""

    sprite_height_pixels: builtins.int = ...
    """Required. The height of the sprite in pixels. Must be an even integer."""

    column_count: builtins.int = ...
    """The maximum number of sprites per row in a sprite sheet. Valid range is
    [1, 10] and the default value is 1.
    """

    row_count: builtins.int = ...
    """The maximum number of rows per sprite sheet. When the sprite sheet is full,
    a new sprite sheet is created. Valid range is [1, 10] and the default value
    is 1.
    """

    @property
    def interval(self) -> google.protobuf.duration_pb2.Duration:
        """Create sprites at regular intervals. Valid range is [1 second, 1 hour] and
        the default value is `10s`.
        """
        pass
    quality: builtins.int = ...
    """The quality of the generated sprite sheet. Enter a value between 1
    and 100, where 1 is the lowest quality and 100 is the highest quality.
    The default is 100. A high quality value corresponds to a low image data
    compression ratio.
    """

    def __init__(self,
        *,
        format : typing.Text = ...,
        file_prefix : typing.Text = ...,
        sprite_width_pixels : builtins.int = ...,
        sprite_height_pixels : builtins.int = ...,
        column_count : builtins.int = ...,
        row_count : builtins.int = ...,
        interval : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        quality : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["interval",b"interval"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["column_count",b"column_count","file_prefix",b"file_prefix","format",b"format","interval",b"interval","quality",b"quality","row_count",b"row_count","sprite_height_pixels",b"sprite_height_pixels","sprite_width_pixels",b"sprite_width_pixels"]) -> None: ...
global___SpriteSheet = SpriteSheet

class PreprocessingConfig(google.protobuf.message.Message):
    """Preprocessing configurations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Crop(google.protobuf.message.Message):
        """Video cropping configuration for the input video. The cropped input video
        is scaled to match the output resolution.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TOP_PIXELS_FIELD_NUMBER: builtins.int
        BOTTOM_PIXELS_FIELD_NUMBER: builtins.int
        LEFT_PIXELS_FIELD_NUMBER: builtins.int
        RIGHT_PIXELS_FIELD_NUMBER: builtins.int
        top_pixels: builtins.int = ...
        """The number of pixels to crop from the top. The default is 0."""

        bottom_pixels: builtins.int = ...
        """The number of pixels to crop from the bottom. The default is 0."""

        left_pixels: builtins.int = ...
        """The number of pixels to crop from the left. The default is 0."""

        right_pixels: builtins.int = ...
        """The number of pixels to crop from the right. The default is 0."""

        def __init__(self,
            *,
            top_pixels : builtins.int = ...,
            bottom_pixels : builtins.int = ...,
            left_pixels : builtins.int = ...,
            right_pixels : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["bottom_pixels",b"bottom_pixels","left_pixels",b"left_pixels","right_pixels",b"right_pixels","top_pixels",b"top_pixels"]) -> None: ...

    class Pad(google.protobuf.message.Message):
        """Pad filter configuration for the input video. The padded input video
        is scaled after padding with black to match the output resolution.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TOP_PIXELS_FIELD_NUMBER: builtins.int
        BOTTOM_PIXELS_FIELD_NUMBER: builtins.int
        LEFT_PIXELS_FIELD_NUMBER: builtins.int
        RIGHT_PIXELS_FIELD_NUMBER: builtins.int
        top_pixels: builtins.int = ...
        """The number of pixels to add to the top. The default is 0."""

        bottom_pixels: builtins.int = ...
        """The number of pixels to add to the bottom. The default is 0."""

        left_pixels: builtins.int = ...
        """The number of pixels to add to the left. The default is 0."""

        right_pixels: builtins.int = ...
        """The number of pixels to add to the right. The default is 0."""

        def __init__(self,
            *,
            top_pixels : builtins.int = ...,
            bottom_pixels : builtins.int = ...,
            left_pixels : builtins.int = ...,
            right_pixels : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["bottom_pixels",b"bottom_pixels","left_pixels",b"left_pixels","right_pixels",b"right_pixels","top_pixels",b"top_pixels"]) -> None: ...

    CROP_FIELD_NUMBER: builtins.int
    PAD_FIELD_NUMBER: builtins.int
    @property
    def crop(self) -> global___PreprocessingConfig.Crop:
        """Specify the video cropping configuration."""
        pass
    @property
    def pad(self) -> global___PreprocessingConfig.Pad:
        """Specify the video pad filter configuration."""
        pass
    def __init__(self,
        *,
        crop : typing.Optional[global___PreprocessingConfig.Crop] = ...,
        pad : typing.Optional[global___PreprocessingConfig.Pad] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["crop",b"crop","pad",b"pad"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["crop",b"crop","pad",b"pad"]) -> None: ...
global___PreprocessingConfig = PreprocessingConfig

class VideoStream(google.protobuf.message.Message):
    """Video stream resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class H264CodecSettings(google.protobuf.message.Message):
        """H264 codec settings."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        WIDTH_PIXELS_FIELD_NUMBER: builtins.int
        HEIGHT_PIXELS_FIELD_NUMBER: builtins.int
        FRAME_RATE_FIELD_NUMBER: builtins.int
        BITRATE_BPS_FIELD_NUMBER: builtins.int
        ALLOW_OPEN_GOP_FIELD_NUMBER: builtins.int
        GOP_FRAME_COUNT_FIELD_NUMBER: builtins.int
        GOP_DURATION_FIELD_NUMBER: builtins.int
        VBV_SIZE_BITS_FIELD_NUMBER: builtins.int
        VBV_FULLNESS_BITS_FIELD_NUMBER: builtins.int
        ENTROPY_CODER_FIELD_NUMBER: builtins.int
        B_PYRAMID_FIELD_NUMBER: builtins.int
        B_FRAME_COUNT_FIELD_NUMBER: builtins.int
        AQ_STRENGTH_FIELD_NUMBER: builtins.int
        PROFILE_FIELD_NUMBER: builtins.int
        TUNE_FIELD_NUMBER: builtins.int
        width_pixels: builtins.int = ...
        """Required. The width of the video in pixels. Must be an even integer.
        Valid range is [320, 1920].
        """

        height_pixels: builtins.int = ...
        """Required. The height of the video in pixels. Must be an even integer.
        Valid range is [180, 1080].
        """

        frame_rate: builtins.float = ...
        """Required. The target video frame rate in frames per second (FPS). Must be less
        than or equal to 60. Will default to the input frame rate if larger
        than the input frame rate. The API will generate an output FPS that is
        divisible by the input FPS, and smaller or equal to the target FPS. See
        [Calculating frame
        rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for
        more information.
        """

        bitrate_bps: builtins.int = ...
        """Required. The video bitrate in bits per second. Minimum value is 10,000.

        - For SD resolution (< 720p), must be <= 3,000,000 (3 Mbps).
        - For HD resolution (<= 1080p), must be <= 15,000,000 (15 Mbps).
        """

        allow_open_gop: builtins.bool = ...
        """Specifies whether an open Group of Pictures (GOP) structure should be
        allowed or not. The default is `false`.
        """

        gop_frame_count: builtins.int = ...
        """Select the GOP size based on the specified frame count.
        If GOP frame count is set instead of GOP duration, GOP duration will be
        calculated by `gopFrameCount`/`frameRate`. The calculated GOP duration
        must satisfy the limitations on `gopDuration` as well.
        Valid range is [60, 600].
        """

        @property
        def gop_duration(self) -> google.protobuf.duration_pb2.Duration:
            """Select the GOP size based on the specified duration. The default is
            `2s`. Note that `gopDuration` must be less than or equal to
            [segment_duration][google.cloud.video.livestream.v1.SegmentSettings.segment_duration], and
            [segment_duration][google.cloud.video.livestream.v1.SegmentSettings.segment_duration] must be divisible
            by `gopDuration`. Valid range is [2s, 20s].

            All video streams in the same channel must have the same GOP size.
            """
            pass
        vbv_size_bits: builtins.int = ...
        """Size of the Video Buffering Verifier (VBV) buffer in bits. Must be
        greater than zero. The default is equal to [bitrate_bps][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings.bitrate_bps].
        """

        vbv_fullness_bits: builtins.int = ...
        """Initial fullness of the Video Buffering Verifier (VBV) buffer in bits.
        Must be greater than zero. The default is equal to 90% of
        [vbv_size_bits][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings.vbv_size_bits].
        """

        entropy_coder: typing.Text = ...
        """The entropy coder to use. The default is `cabac`.

        Supported entropy coders:

        - `cavlc`
        - `cabac`
        """

        b_pyramid: builtins.bool = ...
        """Allow B-pyramid for reference frame selection. This may not be supported
        on all decoders. The default is `false`.
        """

        b_frame_count: builtins.int = ...
        """The number of consecutive B-frames. Must be greater than or equal to
        zero. Must be less than [gop_frame_count][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings.gop_frame_count] if set. The default
        is 0.
        """

        aq_strength: builtins.float = ...
        """Specify the intensity of the adaptive quantizer (AQ). Must be between 0
        and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A
        higher value equals a lower bitrate but smoother image. The default is 0.
        """

        profile: typing.Text = ...
        """Enforces the specified codec profile. The following profiles are
        supported:

        *   `baseline`
        *   `main` (default)
        *   `high`

        The available options are [FFmpeg-compatible Profile
        Options](https://trac.ffmpeg.org/wiki/Encode/H.264#Profile).
        Note that certain values for this field may cause the
        transcoder to override other fields you set in the [H264CodecSettings][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings]
        message.
        """

        tune: typing.Text = ...
        """Enforces the specified codec tune. The available options are
        [FFmpeg-compatible Encode
        Options](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune)
        Note that certain values for this field may cause the transcoder to
        override other fields you set in the [H264CodecSettings][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings] message.
        """

        def __init__(self,
            *,
            width_pixels : builtins.int = ...,
            height_pixels : builtins.int = ...,
            frame_rate : builtins.float = ...,
            bitrate_bps : builtins.int = ...,
            allow_open_gop : builtins.bool = ...,
            gop_frame_count : builtins.int = ...,
            gop_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            vbv_size_bits : builtins.int = ...,
            vbv_fullness_bits : builtins.int = ...,
            entropy_coder : typing.Text = ...,
            b_pyramid : builtins.bool = ...,
            b_frame_count : builtins.int = ...,
            aq_strength : builtins.float = ...,
            profile : typing.Text = ...,
            tune : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["gop_duration",b"gop_duration","gop_frame_count",b"gop_frame_count","gop_mode",b"gop_mode"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["allow_open_gop",b"allow_open_gop","aq_strength",b"aq_strength","b_frame_count",b"b_frame_count","b_pyramid",b"b_pyramid","bitrate_bps",b"bitrate_bps","entropy_coder",b"entropy_coder","frame_rate",b"frame_rate","gop_duration",b"gop_duration","gop_frame_count",b"gop_frame_count","gop_mode",b"gop_mode","height_pixels",b"height_pixels","profile",b"profile","tune",b"tune","vbv_fullness_bits",b"vbv_fullness_bits","vbv_size_bits",b"vbv_size_bits","width_pixels",b"width_pixels"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["gop_mode",b"gop_mode"]) -> typing.Optional[typing_extensions.Literal["gop_frame_count","gop_duration"]]: ...

    H264_FIELD_NUMBER: builtins.int
    @property
    def h264(self) -> global___VideoStream.H264CodecSettings:
        """H264 codec settings."""
        pass
    def __init__(self,
        *,
        h264 : typing.Optional[global___VideoStream.H264CodecSettings] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["codec_settings",b"codec_settings","h264",b"h264"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["codec_settings",b"codec_settings","h264",b"h264"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["codec_settings",b"codec_settings"]) -> typing.Optional[typing_extensions.Literal["h264"]]: ...
global___VideoStream = VideoStream

class AudioStream(google.protobuf.message.Message):
    """Audio stream resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AudioMapping(google.protobuf.message.Message):
        """The mapping for the input streams and audio channels."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        INPUT_KEY_FIELD_NUMBER: builtins.int
        INPUT_TRACK_FIELD_NUMBER: builtins.int
        INPUT_CHANNEL_FIELD_NUMBER: builtins.int
        OUTPUT_CHANNEL_FIELD_NUMBER: builtins.int
        input_key: typing.Text = ...
        """Required. The `Channel` [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key] that identifies the input that this
        audio mapping applies to. If an active input doesn't have an audio
        mapping, the primary audio track in the input stream will be selected.
        """

        input_track: builtins.int = ...
        """Required. The zero-based index of the track in the input stream.
        All [mapping][google.cloud.video.livestream.v1.AudioStream.mapping]s in the same [AudioStream][google.cloud.video.livestream.v1.AudioStream]
        must have the same input track.
        """

        input_channel: builtins.int = ...
        """Required. The zero-based index of the channel in the input stream."""

        output_channel: builtins.int = ...
        """Required. The zero-based index of the channel in the output audio stream.
        Must be consistent with the [input_channel][google.cloud.video.livestream.v1.AudioStream.AudioMapping.input_channel].
        """

        def __init__(self,
            *,
            input_key : typing.Text = ...,
            input_track : builtins.int = ...,
            input_channel : builtins.int = ...,
            output_channel : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["input_channel",b"input_channel","input_key",b"input_key","input_track",b"input_track","output_channel",b"output_channel"]) -> None: ...

    TRANSMUX_FIELD_NUMBER: builtins.int
    CODEC_FIELD_NUMBER: builtins.int
    BITRATE_BPS_FIELD_NUMBER: builtins.int
    CHANNEL_COUNT_FIELD_NUMBER: builtins.int
    CHANNEL_LAYOUT_FIELD_NUMBER: builtins.int
    MAPPING_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_HERTZ_FIELD_NUMBER: builtins.int
    transmux: builtins.bool = ...
    """Specifies whether pass through (transmuxing) is enabled or not.
    If set to `true`, the rest of the settings, other than `mapping`, will be
    ignored. The default is `false`.
    """

    codec: typing.Text = ...
    """The codec for this audio stream. The default is `aac`.

    Supported audio codecs:

    - `aac`
    """

    bitrate_bps: builtins.int = ...
    """Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000."""

    channel_count: builtins.int = ...
    """Number of audio channels. Must be between 1 and 6. The default is 2."""

    @property
    def channel_layout(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of channel names specifying layout of the audio channels.
        This only affects the metadata embedded in the container headers, if
        supported by the specified format. The default is `[fl, fr]`.

        Supported channel names:

        - `fl` - Front left channel
        - `fr` - Front right channel
        - `sl` - Side left channel
        - `sr` - Side right channel
        - `fc` - Front center channel
        - `lfe` - Low frequency
        """
        pass
    @property
    def mapping(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AudioStream.AudioMapping]:
        """The mapping for the input streams and audio channels."""
        pass
    sample_rate_hertz: builtins.int = ...
    """The audio sample rate in Hertz. The default is 48000 Hertz."""

    def __init__(self,
        *,
        transmux : builtins.bool = ...,
        codec : typing.Text = ...,
        bitrate_bps : builtins.int = ...,
        channel_count : builtins.int = ...,
        channel_layout : typing.Optional[typing.Iterable[typing.Text]] = ...,
        mapping : typing.Optional[typing.Iterable[global___AudioStream.AudioMapping]] = ...,
        sample_rate_hertz : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bitrate_bps",b"bitrate_bps","channel_count",b"channel_count","channel_layout",b"channel_layout","codec",b"codec","mapping",b"mapping","sample_rate_hertz",b"sample_rate_hertz","transmux",b"transmux"]) -> None: ...
global___AudioStream = AudioStream

class TextStream(google.protobuf.message.Message):
    """Encoding of a text stream. For example, closed captions or subtitles."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODEC_FIELD_NUMBER: builtins.int
    codec: typing.Text = ...
    """Required. The codec for this text stream.

    Supported text codecs:

    - `cea608`
    - `cea708`
    """

    def __init__(self,
        *,
        codec : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["codec",b"codec"]) -> None: ...
global___TextStream = TextStream

class SegmentSettings(google.protobuf.message.Message):
    """Segment settings for `fmp4` and `ts`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SEGMENT_DURATION_FIELD_NUMBER: builtins.int
    @property
    def segment_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Duration of the segments in seconds. The default is `6s`. Note that
        `segmentDuration` must be greater than or equal to
        [gop_duration][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings.gop_duration], and
        `segmentDuration` must be divisible by
        [gop_duration][google.cloud.video.livestream.v1.VideoStream.H264CodecSettings.gop_duration].
        Valid range is [2s, 20s].

        All [mux_streams][google.cloud.video.livestream.v1.Manifest.mux_streams] in the same manifest must have the
        same segment duration.
        """
        pass
    def __init__(self,
        *,
        segment_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["segment_duration",b"segment_duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["segment_duration",b"segment_duration"]) -> None: ...
global___SegmentSettings = SegmentSettings
