"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.video.livestream.v1.outputs_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Input(google.protobuf.message.Message):
    """Input resource represents the endpoint from which the channel ingests
    the input stream.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TYPE_UNSPECIFIED: Input.Type.ValueType = ...  # 0
        """Input type is not specified."""

        RTMP_PUSH: Input.Type.ValueType = ...  # 1
        """Input will take an rtmp input stream."""

        SRT_PUSH: Input.Type.ValueType = ...  # 2
        """Input will take an srt (Secure Reliable Transport) input stream."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The type of the input."""
        pass

    TYPE_UNSPECIFIED: Input.Type.ValueType = ...  # 0
    """Input type is not specified."""

    RTMP_PUSH: Input.Type.ValueType = ...  # 1
    """Input will take an rtmp input stream."""

    SRT_PUSH: Input.Type.ValueType = ...  # 2
    """Input will take an srt (Secure Reliable Transport) input stream."""


    class _Tier:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TierEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Tier.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TIER_UNSPECIFIED: Input.Tier.ValueType = ...  # 0
        """Tier is not specified."""

        SD: Input.Tier.ValueType = ...  # 1
        """Resolution less than 1280x720."""

        HD: Input.Tier.ValueType = ...  # 2
        """Resolution from 1280x720 to 1920x1080."""

        UHD: Input.Tier.ValueType = ...  # 3
        """Resolution more than 1920x1080 to 4096x2160."""

    class Tier(_Tier, metaclass=_TierEnumTypeWrapper):
        """Tier of the input specification."""
        pass

    TIER_UNSPECIFIED: Input.Tier.ValueType = ...  # 0
    """Tier is not specified."""

    SD: Input.Tier.ValueType = ...  # 1
    """Resolution less than 1280x720."""

    HD: Input.Tier.ValueType = ...  # 2
    """Resolution from 1280x720 to 1920x1080."""

    UHD: Input.Tier.ValueType = ...  # 3
    """Resolution more than 1920x1080 to 4096x2160."""


    class SecurityRule(google.protobuf.message.Message):
        """Security rules for access control. Each field represents one security rule.
        Only when the source of the input stream satisfies all the fields, this
        input stream can be accepted.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        IP_RANGES_FIELD_NUMBER: builtins.int
        @property
        def ip_ranges(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """At least one ip range must match unless none specified. The IP range is
            defined by CIDR block: for example, `192.0.1.0/24` for a range and
            `192.0.1.0/32` for a single IP address.
            """
            pass
        def __init__(self,
            *,
            ip_ranges : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ip_ranges",b"ip_ranges"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    TIER_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    PREPROCESSING_CONFIG_FIELD_NUMBER: builtins.int
    SECURITY_RULES_FIELD_NUMBER: builtins.int
    INPUT_STREAM_PROPERTY_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the input, in the form of:
    `projects/{project}/locations/{location}/inputs/{inputId}`.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The creation time."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The update time."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User-defined key/value metadata."""
        pass
    type: global___Input.Type.ValueType = ...
    """Source type."""

    tier: global___Input.Tier.ValueType = ...
    """Tier defines the maximum input specification (for example, resolution)
    that will be accepted by the video pipeline. The default is `HD`.
    """

    uri: typing.Text = ...
    """Output only. URI to push the input stream to.
    Its format depends on the input [type][google.cloud.video.livestream.v1.Input.type], for example:

    *  `RTMP_PUSH`: `rtmp://1.2.3.4/live/{STREAM-ID}`
    *  `SRT_PUSH`: `srt://1.2.3.4:4201?streamid={STREAM-ID}`
    """

    @property
    def preprocessing_config(self) -> google.cloud.video.livestream.v1.outputs_pb2.PreprocessingConfig:
        """Preprocessing configurations."""
        pass
    @property
    def security_rules(self) -> global___Input.SecurityRule:
        """Security rule for access control."""
        pass
    @property
    def input_stream_property(self) -> global___InputStreamProperty:
        """Output only. The information for the input stream. This field will be present only when
        this input receives the input stream.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        type : global___Input.Type.ValueType = ...,
        tier : global___Input.Tier.ValueType = ...,
        uri : typing.Text = ...,
        preprocessing_config : typing.Optional[google.cloud.video.livestream.v1.outputs_pb2.PreprocessingConfig] = ...,
        security_rules : typing.Optional[global___Input.SecurityRule] = ...,
        input_stream_property : typing.Optional[global___InputStreamProperty] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","input_stream_property",b"input_stream_property","preprocessing_config",b"preprocessing_config","security_rules",b"security_rules","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","input_stream_property",b"input_stream_property","labels",b"labels","name",b"name","preprocessing_config",b"preprocessing_config","security_rules",b"security_rules","tier",b"tier","type",b"type","update_time",b"update_time","uri",b"uri"]) -> None: ...
global___Input = Input

class Channel(google.protobuf.message.Message):
    """Channel resource represents the processor that does a user-defined
    "streaming" operation, which includes getting an input stream through an
    input, transcoding it to multiple renditions, and publishing output live
    streams in certain formats (for example, HLS or DASH) to the specified
    location.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _StreamingState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StreamingStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_StreamingState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STREAMING_STATE_UNSPECIFIED: Channel.StreamingState.ValueType = ...  # 0
        """Streaming state is not specified."""

        STREAMING: Channel.StreamingState.ValueType = ...  # 1
        """Channel is getting the input stream, generating the live streams to the
        specified output location.
        """

        AWAITING_INPUT: Channel.StreamingState.ValueType = ...  # 2
        """Channel is waiting for the input stream through the input. Live streams
        do not start yet.
        """

        STREAMING_ERROR: Channel.StreamingState.ValueType = ...  # 4
        """Channel is running, but has trouble publishing the live streams onto the
        specified output location (for example, the specified Cloud Storage
        bucket is not writable).
        """

        STREAMING_NO_INPUT: Channel.StreamingState.ValueType = ...  # 5
        """Channel is generating live streams with no input stream. Live streams are
        filled out with black screen, while input stream is missing.
        """

        STOPPED: Channel.StreamingState.ValueType = ...  # 6
        """Channel is stopped, finishing live streams."""

        STARTING: Channel.StreamingState.ValueType = ...  # 7
        """Channel is starting."""

        STOPPING: Channel.StreamingState.ValueType = ...  # 8
        """Channel is stopping."""

    class StreamingState(_StreamingState, metaclass=_StreamingStateEnumTypeWrapper):
        """State of streaming operation that the channel is running."""
        pass

    STREAMING_STATE_UNSPECIFIED: Channel.StreamingState.ValueType = ...  # 0
    """Streaming state is not specified."""

    STREAMING: Channel.StreamingState.ValueType = ...  # 1
    """Channel is getting the input stream, generating the live streams to the
    specified output location.
    """

    AWAITING_INPUT: Channel.StreamingState.ValueType = ...  # 2
    """Channel is waiting for the input stream through the input. Live streams
    do not start yet.
    """

    STREAMING_ERROR: Channel.StreamingState.ValueType = ...  # 4
    """Channel is running, but has trouble publishing the live streams onto the
    specified output location (for example, the specified Cloud Storage
    bucket is not writable).
    """

    STREAMING_NO_INPUT: Channel.StreamingState.ValueType = ...  # 5
    """Channel is generating live streams with no input stream. Live streams are
    filled out with black screen, while input stream is missing.
    """

    STOPPED: Channel.StreamingState.ValueType = ...  # 6
    """Channel is stopped, finishing live streams."""

    STARTING: Channel.StreamingState.ValueType = ...  # 7
    """Channel is starting."""

    STOPPING: Channel.StreamingState.ValueType = ...  # 8
    """Channel is stopping."""


    class Output(google.protobuf.message.Message):
        """Location of output file(s) in a Google Cloud Storage bucket."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        URI_FIELD_NUMBER: builtins.int
        uri: typing.Text = ...
        """URI for the output file(s). For example, `gs://my-bucket/outputs/`."""

        def __init__(self,
            *,
            uri : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    INPUT_ATTACHMENTS_FIELD_NUMBER: builtins.int
    ACTIVE_INPUT_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    ELEMENTARY_STREAMS_FIELD_NUMBER: builtins.int
    MUX_STREAMS_FIELD_NUMBER: builtins.int
    MANIFESTS_FIELD_NUMBER: builtins.int
    SPRITE_SHEETS_FIELD_NUMBER: builtins.int
    STREAMING_STATE_FIELD_NUMBER: builtins.int
    STREAMING_ERROR_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the channel, in the form of:
    `projects/{project}/locations/{location}/channels/{channelId}`.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The creation time."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The update time."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User-defined key/value metadata."""
        pass
    @property
    def input_attachments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InputAttachment]:
        """A list of input attachments that this channel uses.
        One channel can have multiple inputs as the input sources. Only one
        input can be selected as the input source at one time.
        """
        pass
    active_input: typing.Text = ...
    """Output only. The [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key] that serves as the current input source. The
    first input in the [input_attachments][google.cloud.video.livestream.v1.Channel.input_attachments] is the initial input source.
    """

    @property
    def output(self) -> global___Channel.Output:
        """Required. Information about the output (that is, the Cloud Storage bucket to store
        the generated live stream).
        """
        pass
    @property
    def elementary_streams(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.video.livestream.v1.outputs_pb2.ElementaryStream]:
        """List of elementary streams."""
        pass
    @property
    def mux_streams(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.video.livestream.v1.outputs_pb2.MuxStream]:
        """List of multiplexing settings for output streams."""
        pass
    @property
    def manifests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.video.livestream.v1.outputs_pb2.Manifest]:
        """List of output manifests."""
        pass
    @property
    def sprite_sheets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.video.livestream.v1.outputs_pb2.SpriteSheet]:
        """List of output sprite sheets."""
        pass
    streaming_state: global___Channel.StreamingState.ValueType = ...
    """Output only. State of the streaming operation."""

    @property
    def streaming_error(self) -> google.rpc.status_pb2.Status:
        """Output only. A description of the reason for the streaming error. This property is
        always present when [streaming_state][google.cloud.video.livestream.v1.Channel.streaming_state] is
        [STREAMING_ERROR][google.cloud.video.livestream.v1.Channel.StreamingState.STREAMING_ERROR].
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        input_attachments : typing.Optional[typing.Iterable[global___InputAttachment]] = ...,
        active_input : typing.Text = ...,
        output : typing.Optional[global___Channel.Output] = ...,
        elementary_streams : typing.Optional[typing.Iterable[google.cloud.video.livestream.v1.outputs_pb2.ElementaryStream]] = ...,
        mux_streams : typing.Optional[typing.Iterable[google.cloud.video.livestream.v1.outputs_pb2.MuxStream]] = ...,
        manifests : typing.Optional[typing.Iterable[google.cloud.video.livestream.v1.outputs_pb2.Manifest]] = ...,
        sprite_sheets : typing.Optional[typing.Iterable[google.cloud.video.livestream.v1.outputs_pb2.SpriteSheet]] = ...,
        streaming_state : global___Channel.StreamingState.ValueType = ...,
        streaming_error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","output",b"output","streaming_error",b"streaming_error","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["active_input",b"active_input","create_time",b"create_time","elementary_streams",b"elementary_streams","input_attachments",b"input_attachments","labels",b"labels","manifests",b"manifests","mux_streams",b"mux_streams","name",b"name","output",b"output","sprite_sheets",b"sprite_sheets","streaming_error",b"streaming_error","streaming_state",b"streaming_state","update_time",b"update_time"]) -> None: ...
global___Channel = Channel

class InputStreamProperty(google.protobuf.message.Message):
    """Properties of the input stream."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAST_ESTABLISH_TIME_FIELD_NUMBER: builtins.int
    VIDEO_STREAMS_FIELD_NUMBER: builtins.int
    AUDIO_STREAMS_FIELD_NUMBER: builtins.int
    @property
    def last_establish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time that the current input stream is accepted and the connection is
        established.
        """
        pass
    @property
    def video_streams(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VideoStreamProperty]:
        """Properties of the video streams."""
        pass
    @property
    def audio_streams(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AudioStreamProperty]:
        """Properties of the audio streams."""
        pass
    def __init__(self,
        *,
        last_establish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        video_streams : typing.Optional[typing.Iterable[global___VideoStreamProperty]] = ...,
        audio_streams : typing.Optional[typing.Iterable[global___AudioStreamProperty]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["last_establish_time",b"last_establish_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_streams",b"audio_streams","last_establish_time",b"last_establish_time","video_streams",b"video_streams"]) -> None: ...
global___InputStreamProperty = InputStreamProperty

class VideoStreamProperty(google.protobuf.message.Message):
    """Properties of the video stream."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INDEX_FIELD_NUMBER: builtins.int
    VIDEO_FORMAT_FIELD_NUMBER: builtins.int
    index: builtins.int = ...
    """Index of this video stream."""

    @property
    def video_format(self) -> global___VideoFormat:
        """Properties of the video format."""
        pass
    def __init__(self,
        *,
        index : builtins.int = ...,
        video_format : typing.Optional[global___VideoFormat] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["video_format",b"video_format"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["index",b"index","video_format",b"video_format"]) -> None: ...
global___VideoStreamProperty = VideoStreamProperty

class VideoFormat(google.protobuf.message.Message):
    """Properties of the video format."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODEC_FIELD_NUMBER: builtins.int
    WIDTH_PIXELS_FIELD_NUMBER: builtins.int
    HEIGHT_PIXELS_FIELD_NUMBER: builtins.int
    FRAME_RATE_FIELD_NUMBER: builtins.int
    codec: typing.Text = ...
    """Video codec used in this video stream."""

    width_pixels: builtins.int = ...
    """The width of the video stream in pixels."""

    height_pixels: builtins.int = ...
    """The height of the video stream in pixels."""

    frame_rate: builtins.float = ...
    """The frame rate of the input video stream."""

    def __init__(self,
        *,
        codec : typing.Text = ...,
        width_pixels : builtins.int = ...,
        height_pixels : builtins.int = ...,
        frame_rate : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["codec",b"codec","frame_rate",b"frame_rate","height_pixels",b"height_pixels","width_pixels",b"width_pixels"]) -> None: ...
global___VideoFormat = VideoFormat

class AudioStreamProperty(google.protobuf.message.Message):
    """Properties of the audio stream."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INDEX_FIELD_NUMBER: builtins.int
    AUDIO_FORMAT_FIELD_NUMBER: builtins.int
    index: builtins.int = ...
    """Index of this audio stream."""

    @property
    def audio_format(self) -> global___AudioFormat:
        """Properties of the audio format."""
        pass
    def __init__(self,
        *,
        index : builtins.int = ...,
        audio_format : typing.Optional[global___AudioFormat] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["audio_format",b"audio_format"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_format",b"audio_format","index",b"index"]) -> None: ...
global___AudioStreamProperty = AudioStreamProperty

class AudioFormat(google.protobuf.message.Message):
    """Properties of the audio format."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODEC_FIELD_NUMBER: builtins.int
    CHANNEL_COUNT_FIELD_NUMBER: builtins.int
    CHANNEL_LAYOUT_FIELD_NUMBER: builtins.int
    codec: typing.Text = ...
    """Audio codec used in this audio stream."""

    channel_count: builtins.int = ...
    """The number of audio channels."""

    @property
    def channel_layout(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of channel names specifying the layout of the audio channels."""
        pass
    def __init__(self,
        *,
        codec : typing.Text = ...,
        channel_count : builtins.int = ...,
        channel_layout : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel_count",b"channel_count","channel_layout",b"channel_layout","codec",b"codec"]) -> None: ...
global___AudioFormat = AudioFormat

class InputAttachment(google.protobuf.message.Message):
    """A group of information for attaching an input resource to this channel."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AutomaticFailover(google.protobuf.message.Message):
        """Configurations to follow when automatic failover happens."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        INPUT_KEYS_FIELD_NUMBER: builtins.int
        @property
        def input_keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """The [InputAttachment.key][google.cloud.video.livestream.v1.InputAttachment.key]s of inputs to failover to when this input is
            disconnected. Currently, only up to one backup input is supported.
            """
            pass
        def __init__(self,
            *,
            input_keys : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["input_keys",b"input_keys"]) -> None: ...

    KEY_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    AUTOMATIC_FAILOVER_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """A unique key for this input attachment."""

    input: typing.Text = ...
    """The resource name of an existing input, in the form of:
    `projects/{project}/locations/{location}/inputs/{inputId}`.
    """

    @property
    def automatic_failover(self) -> global___InputAttachment.AutomaticFailover:
        """Automatic failover configurations."""
        pass
    def __init__(self,
        *,
        key : typing.Text = ...,
        input : typing.Text = ...,
        automatic_failover : typing.Optional[global___InputAttachment.AutomaticFailover] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["automatic_failover",b"automatic_failover"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["automatic_failover",b"automatic_failover","input",b"input","key",b"key"]) -> None: ...
global___InputAttachment = InputAttachment

class Event(google.protobuf.message.Message):
    """Event is a sub-resource of a channel, which can be scheduled by the user to
    execute operations on a channel resource without having to stop the channel.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Event.State.ValueType = ...  # 0
        """Event state is not specified."""

        SCHEDULED: Event.State.ValueType = ...  # 1
        """Event is scheduled but not executed yet."""

        RUNNING: Event.State.ValueType = ...  # 2
        """Event is being executed."""

        SUCCEEDED: Event.State.ValueType = ...  # 3
        """Event has been successfully executed."""

        FAILED: Event.State.ValueType = ...  # 4
        """Event fails to be executed."""

        PENDING: Event.State.ValueType = ...  # 5
        """Event has been created but not scheduled yet."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """State of the event"""
        pass

    STATE_UNSPECIFIED: Event.State.ValueType = ...  # 0
    """Event state is not specified."""

    SCHEDULED: Event.State.ValueType = ...  # 1
    """Event is scheduled but not executed yet."""

    RUNNING: Event.State.ValueType = ...  # 2
    """Event is being executed."""

    SUCCEEDED: Event.State.ValueType = ...  # 3
    """Event has been successfully executed."""

    FAILED: Event.State.ValueType = ...  # 4
    """Event fails to be executed."""

    PENDING: Event.State.ValueType = ...  # 5
    """Event has been created but not scheduled yet."""


    class AdBreakTask(google.protobuf.message.Message):
        """Inserts a new ad opportunity."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DURATION_FIELD_NUMBER: builtins.int
        @property
        def duration(self) -> google.protobuf.duration_pb2.Duration:
            """Duration of an ad opportunity. Must be greater than 0."""
            pass
        def __init__(self,
            *,
            duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["duration",b"duration"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["duration",b"duration"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    AD_BREAK_FIELD_NUMBER: builtins.int
    EXECUTE_NOW_FIELD_NUMBER: builtins.int
    EXECUTION_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the event, in the form of:
    `projects/{project}/locations/{location}/channels/{channelId}/events/{eventId}`.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The creation time."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The update time."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User-defined key/value metadata."""
        pass
    @property
    def ad_break(self) -> global___Event.AdBreakTask:
        """Required. Inserts a new ad opportunity."""
        pass
    execute_now: builtins.bool = ...
    """When this field is set to true, the event will be executed at the earliest
    time that the server can schedule the event and [execution_time][google.cloud.video.livestream.v1.Event.execution_time] will be
    populated with the time that the server actually schedules the event.
    """

    @property
    def execution_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the event should be executed. When [execute_now][google.cloud.video.livestream.v1.Event.execute_now] is set to
        `true`, this field should not be set in `CreateEvent` request and will be
        populated with the time that the server schedules the event.
        """
        pass
    state: global___Event.State.ValueType = ...
    """Output only. The state of the event."""

    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """Output only. An error object that describes the reason for the failure.
        This property is always present when `state` is `FAILED`.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ad_break : typing.Optional[global___Event.AdBreakTask] = ...,
        execute_now : builtins.bool = ...,
        execution_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___Event.State.ValueType = ...,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ad_break",b"ad_break","create_time",b"create_time","error",b"error","execution_time",b"execution_time","task",b"task","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ad_break",b"ad_break","create_time",b"create_time","error",b"error","execute_now",b"execute_now","execution_time",b"execution_time","labels",b"labels","name",b"name","state",b"state","task",b"task","update_time",b"update_time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["task",b"task"]) -> typing.Optional[typing_extensions.Literal["ad_break"]]: ...
global___Event = Event
