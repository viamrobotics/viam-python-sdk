"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import google.type.latlng_pb2
import google.type.money_pb2
import google.type.postal_address_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _CompanySize:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _CompanySizeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CompanySize.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    COMPANY_SIZE_UNSPECIFIED: CompanySize.ValueType = ...  # 0
    """Default value if the size isn't specified."""

    MINI: CompanySize.ValueType = ...  # 1
    """The company has less than 50 employees."""

    SMALL: CompanySize.ValueType = ...  # 2
    """The company has between 50 and 99 employees."""

    SMEDIUM: CompanySize.ValueType = ...  # 3
    """The company has between 100 and 499 employees."""

    MEDIUM: CompanySize.ValueType = ...  # 4
    """The company has between 500 and 999 employees."""

    BIG: CompanySize.ValueType = ...  # 5
    """The company has between 1,000 and 4,999 employees."""

    BIGGER: CompanySize.ValueType = ...  # 6
    """The company has between 5,000 and 9,999 employees."""

    GIANT: CompanySize.ValueType = ...  # 7
    """The company has 10,000 or more employees."""

class CompanySize(_CompanySize, metaclass=_CompanySizeEnumTypeWrapper):
    """An enum that represents the size of the company."""
    pass

COMPANY_SIZE_UNSPECIFIED: CompanySize.ValueType = ...  # 0
"""Default value if the size isn't specified."""

MINI: CompanySize.ValueType = ...  # 1
"""The company has less than 50 employees."""

SMALL: CompanySize.ValueType = ...  # 2
"""The company has between 50 and 99 employees."""

SMEDIUM: CompanySize.ValueType = ...  # 3
"""The company has between 100 and 499 employees."""

MEDIUM: CompanySize.ValueType = ...  # 4
"""The company has between 500 and 999 employees."""

BIG: CompanySize.ValueType = ...  # 5
"""The company has between 1,000 and 4,999 employees."""

BIGGER: CompanySize.ValueType = ...  # 6
"""The company has between 5,000 and 9,999 employees."""

GIANT: CompanySize.ValueType = ...  # 7
"""The company has 10,000 or more employees."""

global___CompanySize = CompanySize


class _JobBenefit:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _JobBenefitEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_JobBenefit.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    JOB_BENEFIT_UNSPECIFIED: JobBenefit.ValueType = ...  # 0
    """Default value if the type isn't specified."""

    CHILD_CARE: JobBenefit.ValueType = ...  # 1
    """The job includes access to programs that support child care, such
    as daycare.
    """

    DENTAL: JobBenefit.ValueType = ...  # 2
    """The job includes dental services covered by a dental
    insurance plan.
    """

    DOMESTIC_PARTNER: JobBenefit.ValueType = ...  # 3
    """The job offers specific benefits to domestic partners."""

    FLEXIBLE_HOURS: JobBenefit.ValueType = ...  # 4
    """The job allows for a flexible work schedule."""

    MEDICAL: JobBenefit.ValueType = ...  # 5
    """The job includes health services covered by a medical insurance plan."""

    LIFE_INSURANCE: JobBenefit.ValueType = ...  # 6
    """The job includes a life insurance plan provided by the employer or
    available for purchase by the employee.
    """

    PARENTAL_LEAVE: JobBenefit.ValueType = ...  # 7
    """The job allows for a leave of absence to a parent to care for a newborn
    child.
    """

    RETIREMENT_PLAN: JobBenefit.ValueType = ...  # 8
    """The job includes a workplace retirement plan provided by the
    employer or available for purchase by the employee.
    """

    SICK_DAYS: JobBenefit.ValueType = ...  # 9
    """The job allows for paid time off due to illness."""

    VACATION: JobBenefit.ValueType = ...  # 10
    """The job includes paid time off for vacation."""

    VISION: JobBenefit.ValueType = ...  # 11
    """The job includes vision services covered by a vision
    insurance plan.
    """

class JobBenefit(_JobBenefit, metaclass=_JobBenefitEnumTypeWrapper):
    """An enum that represents employee benefits included with the job."""
    pass

JOB_BENEFIT_UNSPECIFIED: JobBenefit.ValueType = ...  # 0
"""Default value if the type isn't specified."""

CHILD_CARE: JobBenefit.ValueType = ...  # 1
"""The job includes access to programs that support child care, such
as daycare.
"""

DENTAL: JobBenefit.ValueType = ...  # 2
"""The job includes dental services covered by a dental
insurance plan.
"""

DOMESTIC_PARTNER: JobBenefit.ValueType = ...  # 3
"""The job offers specific benefits to domestic partners."""

FLEXIBLE_HOURS: JobBenefit.ValueType = ...  # 4
"""The job allows for a flexible work schedule."""

MEDICAL: JobBenefit.ValueType = ...  # 5
"""The job includes health services covered by a medical insurance plan."""

LIFE_INSURANCE: JobBenefit.ValueType = ...  # 6
"""The job includes a life insurance plan provided by the employer or
available for purchase by the employee.
"""

PARENTAL_LEAVE: JobBenefit.ValueType = ...  # 7
"""The job allows for a leave of absence to a parent to care for a newborn
child.
"""

RETIREMENT_PLAN: JobBenefit.ValueType = ...  # 8
"""The job includes a workplace retirement plan provided by the
employer or available for purchase by the employee.
"""

SICK_DAYS: JobBenefit.ValueType = ...  # 9
"""The job allows for paid time off due to illness."""

VACATION: JobBenefit.ValueType = ...  # 10
"""The job includes paid time off for vacation."""

VISION: JobBenefit.ValueType = ...  # 11
"""The job includes vision services covered by a vision
insurance plan.
"""

global___JobBenefit = JobBenefit


class _DegreeType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DegreeTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DegreeType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    DEGREE_TYPE_UNSPECIFIED: DegreeType.ValueType = ...  # 0
    """Default value. Represents no degree, or early childhood education.
    Maps to ISCED code 0.
    Ex) Kindergarten
    """

    PRIMARY_EDUCATION: DegreeType.ValueType = ...  # 1
    """Primary education which is typically the first stage of compulsory
    education. ISCED code 1.
    Ex) Elementary school
    """

    LOWER_SECONDARY_EDUCATION: DegreeType.ValueType = ...  # 2
    """Lower secondary education; First stage of secondary education building on
    primary education, typically with a more subject-oriented curriculum.
    ISCED code 2.
    Ex) Middle school
    """

    UPPER_SECONDARY_EDUCATION: DegreeType.ValueType = ...  # 3
    """Middle education; Second/final stage of secondary education preparing for
    tertiary education and/or providing skills relevant to employment.
    Usually with an increased range of subject options and streams. ISCED
    code 3.
    Ex) High school
    """

    ADULT_REMEDIAL_EDUCATION: DegreeType.ValueType = ...  # 4
    """Adult Remedial Education; Programmes providing learning experiences that
    build on secondary education and prepare for labour market entry and/or
    tertiary education. The content is broader than secondary but not as
    complex as tertiary education. ISCED code 4.
    """

    ASSOCIATES_OR_EQUIVALENT: DegreeType.ValueType = ...  # 5
    """Associate's or equivalent; Short first tertiary programmes that are
    typically practically-based, occupationally-specific and prepare for
    labour market entry. These programmes may also provide a pathway to other
    tertiary programmes. ISCED code 5.
    """

    BACHELORS_OR_EQUIVALENT: DegreeType.ValueType = ...  # 6
    """Bachelor's or equivalent; Programmes designed to provide intermediate
    academic and/or professional knowledge, skills and competencies leading
    to a first tertiary degree or equivalent qualification. ISCED code 6.
    """

    MASTERS_OR_EQUIVALENT: DegreeType.ValueType = ...  # 7
    """Master's or equivalent; Programmes designed to provide advanced academic
    and/or professional knowledge, skills and competencies leading to a
    second tertiary degree or equivalent qualification. ISCED code 7.
    """

    DOCTORAL_OR_EQUIVALENT: DegreeType.ValueType = ...  # 8
    """Doctoral or equivalent; Programmes designed primarily to lead to an
    advanced research qualification, usually concluding with the submission
    and defense of a substantive dissertation of publishable quality based on
    original research. ISCED code 8.
    """

class DegreeType(_DegreeType, metaclass=_DegreeTypeEnumTypeWrapper):
    """Educational degree level defined in International Standard Classification
    of Education (ISCED).
    """
    pass

DEGREE_TYPE_UNSPECIFIED: DegreeType.ValueType = ...  # 0
"""Default value. Represents no degree, or early childhood education.
Maps to ISCED code 0.
Ex) Kindergarten
"""

PRIMARY_EDUCATION: DegreeType.ValueType = ...  # 1
"""Primary education which is typically the first stage of compulsory
education. ISCED code 1.
Ex) Elementary school
"""

LOWER_SECONDARY_EDUCATION: DegreeType.ValueType = ...  # 2
"""Lower secondary education; First stage of secondary education building on
primary education, typically with a more subject-oriented curriculum.
ISCED code 2.
Ex) Middle school
"""

UPPER_SECONDARY_EDUCATION: DegreeType.ValueType = ...  # 3
"""Middle education; Second/final stage of secondary education preparing for
tertiary education and/or providing skills relevant to employment.
Usually with an increased range of subject options and streams. ISCED
code 3.
Ex) High school
"""

ADULT_REMEDIAL_EDUCATION: DegreeType.ValueType = ...  # 4
"""Adult Remedial Education; Programmes providing learning experiences that
build on secondary education and prepare for labour market entry and/or
tertiary education. The content is broader than secondary but not as
complex as tertiary education. ISCED code 4.
"""

ASSOCIATES_OR_EQUIVALENT: DegreeType.ValueType = ...  # 5
"""Associate's or equivalent; Short first tertiary programmes that are
typically practically-based, occupationally-specific and prepare for
labour market entry. These programmes may also provide a pathway to other
tertiary programmes. ISCED code 5.
"""

BACHELORS_OR_EQUIVALENT: DegreeType.ValueType = ...  # 6
"""Bachelor's or equivalent; Programmes designed to provide intermediate
academic and/or professional knowledge, skills and competencies leading
to a first tertiary degree or equivalent qualification. ISCED code 6.
"""

MASTERS_OR_EQUIVALENT: DegreeType.ValueType = ...  # 7
"""Master's or equivalent; Programmes designed to provide advanced academic
and/or professional knowledge, skills and competencies leading to a
second tertiary degree or equivalent qualification. ISCED code 7.
"""

DOCTORAL_OR_EQUIVALENT: DegreeType.ValueType = ...  # 8
"""Doctoral or equivalent; Programmes designed primarily to lead to an
advanced research qualification, usually concluding with the submission
and defense of a substantive dissertation of publishable quality based on
original research. ISCED code 8.
"""

global___DegreeType = DegreeType


class _EmploymentType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _EmploymentTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EmploymentType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    EMPLOYMENT_TYPE_UNSPECIFIED: EmploymentType.ValueType = ...  # 0
    """The default value if the employment type isn't specified."""

    FULL_TIME: EmploymentType.ValueType = ...  # 1
    """The job requires working a number of hours that constitute full
    time employment, typically 40 or more hours per week.
    """

    PART_TIME: EmploymentType.ValueType = ...  # 2
    """The job entails working fewer hours than a full time job,
    typically less than 40 hours a week.
    """

    CONTRACTOR: EmploymentType.ValueType = ...  # 3
    """The job is offered as a contracted, as opposed to a salaried employee,
    position.
    """

    CONTRACT_TO_HIRE: EmploymentType.ValueType = ...  # 4
    """The job is offered as a contracted position with the understanding
    that it's converted into a full-time position at the end of the
    contract. Jobs of this type are also returned by a search for
    [EmploymentType.CONTRACTOR][google.cloud.talent.v4.EmploymentType.CONTRACTOR] jobs.
    """

    TEMPORARY: EmploymentType.ValueType = ...  # 5
    """The job is offered as a temporary employment opportunity, usually
    a short-term engagement.
    """

    INTERN: EmploymentType.ValueType = ...  # 6
    """The job is a fixed-term opportunity for students or entry-level job
    seekers to obtain on-the-job training, typically offered as a summer
    position.
    """

    VOLUNTEER: EmploymentType.ValueType = ...  # 7
    """The is an opportunity for an individual to volunteer, where there's no
    expectation of compensation for the provided services.
    """

    PER_DIEM: EmploymentType.ValueType = ...  # 8
    """The job requires an employee to work on an as-needed basis with a
    flexible schedule.
    """

    FLY_IN_FLY_OUT: EmploymentType.ValueType = ...  # 9
    """The job involves employing people in remote areas and flying them
    temporarily to the work site instead of relocating employees and their
    families permanently.
    """

    OTHER_EMPLOYMENT_TYPE: EmploymentType.ValueType = ...  # 10
    """The job does not fit any of the other listed types."""

class EmploymentType(_EmploymentType, metaclass=_EmploymentTypeEnumTypeWrapper):
    """An enum that represents the employment type of a job."""
    pass

EMPLOYMENT_TYPE_UNSPECIFIED: EmploymentType.ValueType = ...  # 0
"""The default value if the employment type isn't specified."""

FULL_TIME: EmploymentType.ValueType = ...  # 1
"""The job requires working a number of hours that constitute full
time employment, typically 40 or more hours per week.
"""

PART_TIME: EmploymentType.ValueType = ...  # 2
"""The job entails working fewer hours than a full time job,
typically less than 40 hours a week.
"""

CONTRACTOR: EmploymentType.ValueType = ...  # 3
"""The job is offered as a contracted, as opposed to a salaried employee,
position.
"""

CONTRACT_TO_HIRE: EmploymentType.ValueType = ...  # 4
"""The job is offered as a contracted position with the understanding
that it's converted into a full-time position at the end of the
contract. Jobs of this type are also returned by a search for
[EmploymentType.CONTRACTOR][google.cloud.talent.v4.EmploymentType.CONTRACTOR] jobs.
"""

TEMPORARY: EmploymentType.ValueType = ...  # 5
"""The job is offered as a temporary employment opportunity, usually
a short-term engagement.
"""

INTERN: EmploymentType.ValueType = ...  # 6
"""The job is a fixed-term opportunity for students or entry-level job
seekers to obtain on-the-job training, typically offered as a summer
position.
"""

VOLUNTEER: EmploymentType.ValueType = ...  # 7
"""The is an opportunity for an individual to volunteer, where there's no
expectation of compensation for the provided services.
"""

PER_DIEM: EmploymentType.ValueType = ...  # 8
"""The job requires an employee to work on an as-needed basis with a
flexible schedule.
"""

FLY_IN_FLY_OUT: EmploymentType.ValueType = ...  # 9
"""The job involves employing people in remote areas and flying them
temporarily to the work site instead of relocating employees and their
families permanently.
"""

OTHER_EMPLOYMENT_TYPE: EmploymentType.ValueType = ...  # 10
"""The job does not fit any of the other listed types."""

global___EmploymentType = EmploymentType


class _JobLevel:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _JobLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_JobLevel.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    JOB_LEVEL_UNSPECIFIED: JobLevel.ValueType = ...  # 0
    """The default value if the level isn't specified."""

    ENTRY_LEVEL: JobLevel.ValueType = ...  # 1
    """Entry-level individual contributors, typically with less than 2 years of
    experience in a similar role. Includes interns.
    """

    EXPERIENCED: JobLevel.ValueType = ...  # 2
    """Experienced individual contributors, typically with 2+ years of
    experience in a similar role.
    """

    MANAGER: JobLevel.ValueType = ...  # 3
    """Entry- to mid-level managers responsible for managing a team of people."""

    DIRECTOR: JobLevel.ValueType = ...  # 4
    """Senior-level managers responsible for managing teams of managers."""

    EXECUTIVE: JobLevel.ValueType = ...  # 5
    """Executive-level managers and above, including C-level positions."""

class JobLevel(_JobLevel, metaclass=_JobLevelEnumTypeWrapper):
    """An enum that represents the required experience level required for the job."""
    pass

JOB_LEVEL_UNSPECIFIED: JobLevel.ValueType = ...  # 0
"""The default value if the level isn't specified."""

ENTRY_LEVEL: JobLevel.ValueType = ...  # 1
"""Entry-level individual contributors, typically with less than 2 years of
experience in a similar role. Includes interns.
"""

EXPERIENCED: JobLevel.ValueType = ...  # 2
"""Experienced individual contributors, typically with 2+ years of
experience in a similar role.
"""

MANAGER: JobLevel.ValueType = ...  # 3
"""Entry- to mid-level managers responsible for managing a team of people."""

DIRECTOR: JobLevel.ValueType = ...  # 4
"""Senior-level managers responsible for managing teams of managers."""

EXECUTIVE: JobLevel.ValueType = ...  # 5
"""Executive-level managers and above, including C-level positions."""

global___JobLevel = JobLevel


class _JobCategory:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _JobCategoryEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_JobCategory.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    JOB_CATEGORY_UNSPECIFIED: JobCategory.ValueType = ...  # 0
    """The default value if the category isn't specified."""

    ACCOUNTING_AND_FINANCE: JobCategory.ValueType = ...  # 1
    """An accounting and finance job, such as an Accountant."""

    ADMINISTRATIVE_AND_OFFICE: JobCategory.ValueType = ...  # 2
    """An administrative and office job, such as an Administrative Assistant."""

    ADVERTISING_AND_MARKETING: JobCategory.ValueType = ...  # 3
    """An advertising and marketing job, such as Marketing Manager."""

    ANIMAL_CARE: JobCategory.ValueType = ...  # 4
    """An animal care job, such as Veterinarian."""

    ART_FASHION_AND_DESIGN: JobCategory.ValueType = ...  # 5
    """An art, fashion, or design job, such as Designer."""

    BUSINESS_OPERATIONS: JobCategory.ValueType = ...  # 6
    """A business operations job, such as Business Operations Manager."""

    CLEANING_AND_FACILITIES: JobCategory.ValueType = ...  # 7
    """A cleaning and facilities job, such as Custodial Staff."""

    COMPUTER_AND_IT: JobCategory.ValueType = ...  # 8
    """A computer and IT job, such as Systems Administrator."""

    CONSTRUCTION: JobCategory.ValueType = ...  # 9
    """A construction job, such as General Laborer."""

    CUSTOMER_SERVICE: JobCategory.ValueType = ...  # 10
    """A customer service job, such s Cashier."""

    EDUCATION: JobCategory.ValueType = ...  # 11
    """An education job, such as School Teacher."""

    ENTERTAINMENT_AND_TRAVEL: JobCategory.ValueType = ...  # 12
    """An entertainment and travel job, such as Flight Attendant."""

    FARMING_AND_OUTDOORS: JobCategory.ValueType = ...  # 13
    """A farming or outdoor job, such as Park Ranger."""

    HEALTHCARE: JobCategory.ValueType = ...  # 14
    """A healthcare job, such as Registered Nurse."""

    HUMAN_RESOURCES: JobCategory.ValueType = ...  # 15
    """A human resources job, such as Human Resources Director."""

    INSTALLATION_MAINTENANCE_AND_REPAIR: JobCategory.ValueType = ...  # 16
    """An installation, maintenance, or repair job, such as Electrician."""

    LEGAL: JobCategory.ValueType = ...  # 17
    """A legal job, such as Law Clerk."""

    MANAGEMENT: JobCategory.ValueType = ...  # 18
    """A management job, often used in conjunction with another category,
    such as Store Manager.
    """

    MANUFACTURING_AND_WAREHOUSE: JobCategory.ValueType = ...  # 19
    """A manufacturing or warehouse job, such as Assembly Technician."""

    MEDIA_COMMUNICATIONS_AND_WRITING: JobCategory.ValueType = ...  # 20
    """A media, communications, or writing job, such as Media Relations."""

    OIL_GAS_AND_MINING: JobCategory.ValueType = ...  # 21
    """An oil, gas or mining job, such as Offshore Driller."""

    PERSONAL_CARE_AND_SERVICES: JobCategory.ValueType = ...  # 22
    """A personal care and services job, such as Hair Stylist."""

    PROTECTIVE_SERVICES: JobCategory.ValueType = ...  # 23
    """A protective services job, such as Security Guard."""

    REAL_ESTATE: JobCategory.ValueType = ...  # 24
    """A real estate job, such as Buyer's Agent."""

    RESTAURANT_AND_HOSPITALITY: JobCategory.ValueType = ...  # 25
    """A restaurant and hospitality job, such as Restaurant Server."""

    SALES_AND_RETAIL: JobCategory.ValueType = ...  # 26
    """A sales and/or retail job, such Sales Associate."""

    SCIENCE_AND_ENGINEERING: JobCategory.ValueType = ...  # 27
    """A science and engineering job, such as Lab Technician."""

    SOCIAL_SERVICES_AND_NON_PROFIT: JobCategory.ValueType = ...  # 28
    """A social services or non-profit job, such as Case Worker."""

    SPORTS_FITNESS_AND_RECREATION: JobCategory.ValueType = ...  # 29
    """A sports, fitness, or recreation job, such as Personal Trainer."""

    TRANSPORTATION_AND_LOGISTICS: JobCategory.ValueType = ...  # 30
    """A transportation or logistics job, such as Truck Driver."""

class JobCategory(_JobCategory, metaclass=_JobCategoryEnumTypeWrapper):
    """An enum that represents the categorization or primary focus of specific
    role. This value is different than the "industry" associated with a role,
    which is related to the categorization of the company listing the job.
    """
    pass

JOB_CATEGORY_UNSPECIFIED: JobCategory.ValueType = ...  # 0
"""The default value if the category isn't specified."""

ACCOUNTING_AND_FINANCE: JobCategory.ValueType = ...  # 1
"""An accounting and finance job, such as an Accountant."""

ADMINISTRATIVE_AND_OFFICE: JobCategory.ValueType = ...  # 2
"""An administrative and office job, such as an Administrative Assistant."""

ADVERTISING_AND_MARKETING: JobCategory.ValueType = ...  # 3
"""An advertising and marketing job, such as Marketing Manager."""

ANIMAL_CARE: JobCategory.ValueType = ...  # 4
"""An animal care job, such as Veterinarian."""

ART_FASHION_AND_DESIGN: JobCategory.ValueType = ...  # 5
"""An art, fashion, or design job, such as Designer."""

BUSINESS_OPERATIONS: JobCategory.ValueType = ...  # 6
"""A business operations job, such as Business Operations Manager."""

CLEANING_AND_FACILITIES: JobCategory.ValueType = ...  # 7
"""A cleaning and facilities job, such as Custodial Staff."""

COMPUTER_AND_IT: JobCategory.ValueType = ...  # 8
"""A computer and IT job, such as Systems Administrator."""

CONSTRUCTION: JobCategory.ValueType = ...  # 9
"""A construction job, such as General Laborer."""

CUSTOMER_SERVICE: JobCategory.ValueType = ...  # 10
"""A customer service job, such s Cashier."""

EDUCATION: JobCategory.ValueType = ...  # 11
"""An education job, such as School Teacher."""

ENTERTAINMENT_AND_TRAVEL: JobCategory.ValueType = ...  # 12
"""An entertainment and travel job, such as Flight Attendant."""

FARMING_AND_OUTDOORS: JobCategory.ValueType = ...  # 13
"""A farming or outdoor job, such as Park Ranger."""

HEALTHCARE: JobCategory.ValueType = ...  # 14
"""A healthcare job, such as Registered Nurse."""

HUMAN_RESOURCES: JobCategory.ValueType = ...  # 15
"""A human resources job, such as Human Resources Director."""

INSTALLATION_MAINTENANCE_AND_REPAIR: JobCategory.ValueType = ...  # 16
"""An installation, maintenance, or repair job, such as Electrician."""

LEGAL: JobCategory.ValueType = ...  # 17
"""A legal job, such as Law Clerk."""

MANAGEMENT: JobCategory.ValueType = ...  # 18
"""A management job, often used in conjunction with another category,
such as Store Manager.
"""

MANUFACTURING_AND_WAREHOUSE: JobCategory.ValueType = ...  # 19
"""A manufacturing or warehouse job, such as Assembly Technician."""

MEDIA_COMMUNICATIONS_AND_WRITING: JobCategory.ValueType = ...  # 20
"""A media, communications, or writing job, such as Media Relations."""

OIL_GAS_AND_MINING: JobCategory.ValueType = ...  # 21
"""An oil, gas or mining job, such as Offshore Driller."""

PERSONAL_CARE_AND_SERVICES: JobCategory.ValueType = ...  # 22
"""A personal care and services job, such as Hair Stylist."""

PROTECTIVE_SERVICES: JobCategory.ValueType = ...  # 23
"""A protective services job, such as Security Guard."""

REAL_ESTATE: JobCategory.ValueType = ...  # 24
"""A real estate job, such as Buyer's Agent."""

RESTAURANT_AND_HOSPITALITY: JobCategory.ValueType = ...  # 25
"""A restaurant and hospitality job, such as Restaurant Server."""

SALES_AND_RETAIL: JobCategory.ValueType = ...  # 26
"""A sales and/or retail job, such Sales Associate."""

SCIENCE_AND_ENGINEERING: JobCategory.ValueType = ...  # 27
"""A science and engineering job, such as Lab Technician."""

SOCIAL_SERVICES_AND_NON_PROFIT: JobCategory.ValueType = ...  # 28
"""A social services or non-profit job, such as Case Worker."""

SPORTS_FITNESS_AND_RECREATION: JobCategory.ValueType = ...  # 29
"""A sports, fitness, or recreation job, such as Personal Trainer."""

TRANSPORTATION_AND_LOGISTICS: JobCategory.ValueType = ...  # 30
"""A transportation or logistics job, such as Truck Driver."""

global___JobCategory = JobCategory


class _PostingRegion:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PostingRegionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PostingRegion.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    POSTING_REGION_UNSPECIFIED: PostingRegion.ValueType = ...  # 0
    """If the region is unspecified, the job is only returned if it
    matches the [LocationFilter][google.cloud.talent.v4.LocationFilter].
    """

    ADMINISTRATIVE_AREA: PostingRegion.ValueType = ...  # 1
    """In addition to exact location matching, job posting is returned when the
    [LocationFilter][google.cloud.talent.v4.LocationFilter] in the search query is in the same administrative area
    as the returned job posting. For example, if a `ADMINISTRATIVE_AREA` job
    is posted in "CA, USA", it's returned if [LocationFilter][google.cloud.talent.v4.LocationFilter] has
    "Mountain View".

    Administrative area refers to top-level administrative subdivision of this
    country. For example, US state, IT region, UK constituent nation and
    JP prefecture.
    """

    NATION: PostingRegion.ValueType = ...  # 2
    """In addition to exact location matching, job is returned when
    [LocationFilter][google.cloud.talent.v4.LocationFilter] in search query is in the same country as this job.
    For example, if a `NATION_WIDE` job is posted in "USA", it's
    returned if [LocationFilter][google.cloud.talent.v4.LocationFilter] has 'Mountain View'.
    """

    TELECOMMUTE: PostingRegion.ValueType = ...  # 3
    """Job allows employees to work remotely (telecommute).
    If locations are provided with this value, the job is
    considered as having a location, but telecommuting is allowed.
    """

class PostingRegion(_PostingRegion, metaclass=_PostingRegionEnumTypeWrapper):
    """An enum that represents the job posting region. In most cases, job postings
    don't need to specify a region. If a region is given, jobs are
    eligible for searches in the specified region.
    """
    pass

POSTING_REGION_UNSPECIFIED: PostingRegion.ValueType = ...  # 0
"""If the region is unspecified, the job is only returned if it
matches the [LocationFilter][google.cloud.talent.v4.LocationFilter].
"""

ADMINISTRATIVE_AREA: PostingRegion.ValueType = ...  # 1
"""In addition to exact location matching, job posting is returned when the
[LocationFilter][google.cloud.talent.v4.LocationFilter] in the search query is in the same administrative area
as the returned job posting. For example, if a `ADMINISTRATIVE_AREA` job
is posted in "CA, USA", it's returned if [LocationFilter][google.cloud.talent.v4.LocationFilter] has
"Mountain View".

Administrative area refers to top-level administrative subdivision of this
country. For example, US state, IT region, UK constituent nation and
JP prefecture.
"""

NATION: PostingRegion.ValueType = ...  # 2
"""In addition to exact location matching, job is returned when
[LocationFilter][google.cloud.talent.v4.LocationFilter] in search query is in the same country as this job.
For example, if a `NATION_WIDE` job is posted in "USA", it's
returned if [LocationFilter][google.cloud.talent.v4.LocationFilter] has 'Mountain View'.
"""

TELECOMMUTE: PostingRegion.ValueType = ...  # 3
"""Job allows employees to work remotely (telecommute).
If locations are provided with this value, the job is
considered as having a location, but telecommuting is allowed.
"""

global___PostingRegion = PostingRegion


class _Visibility:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _VisibilityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Visibility.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    VISIBILITY_UNSPECIFIED: Visibility.ValueType = ...  # 0
    """Default value."""

    ACCOUNT_ONLY: Visibility.ValueType = ...  # 1
    """The resource is only visible to the GCP account who owns it."""

    SHARED_WITH_GOOGLE: Visibility.ValueType = ...  # 2
    """The resource is visible to the owner and may be visible to other
    applications and processes at Google.
    """

    SHARED_WITH_PUBLIC: Visibility.ValueType = ...  # 3
    """The resource is visible to the owner and may be visible to all other API
    clients.
    """

class Visibility(_Visibility, metaclass=_VisibilityEnumTypeWrapper):
    """Deprecated. All resources are only visible to the owner.

    An enum that represents who has view access to the resource.
    """
    pass

VISIBILITY_UNSPECIFIED: Visibility.ValueType = ...  # 0
"""Default value."""

ACCOUNT_ONLY: Visibility.ValueType = ...  # 1
"""The resource is only visible to the GCP account who owns it."""

SHARED_WITH_GOOGLE: Visibility.ValueType = ...  # 2
"""The resource is visible to the owner and may be visible to other
applications and processes at Google.
"""

SHARED_WITH_PUBLIC: Visibility.ValueType = ...  # 3
"""The resource is visible to the owner and may be visible to all other API
clients.
"""

global___Visibility = Visibility


class _HtmlSanitization:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _HtmlSanitizationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HtmlSanitization.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    HTML_SANITIZATION_UNSPECIFIED: HtmlSanitization.ValueType = ...  # 0
    """Default value."""

    HTML_SANITIZATION_DISABLED: HtmlSanitization.ValueType = ...  # 1
    """Disables sanitization on HTML input."""

    SIMPLE_FORMATTING_ONLY: HtmlSanitization.ValueType = ...  # 2
    """Sanitizes HTML input, only accepts bold, italic, ordered list, and
    unordered list markup tags.
    """

class HtmlSanitization(_HtmlSanitization, metaclass=_HtmlSanitizationEnumTypeWrapper):
    """Option for HTML content sanitization on user input fields, for example, job
    description. By setting this option, user can determine whether and how
    sanitization is performed on these fields.
    """
    pass

HTML_SANITIZATION_UNSPECIFIED: HtmlSanitization.ValueType = ...  # 0
"""Default value."""

HTML_SANITIZATION_DISABLED: HtmlSanitization.ValueType = ...  # 1
"""Disables sanitization on HTML input."""

SIMPLE_FORMATTING_ONLY: HtmlSanitization.ValueType = ...  # 2
"""Sanitizes HTML input, only accepts bold, italic, ordered list, and
unordered list markup tags.
"""

global___HtmlSanitization = HtmlSanitization


class _CommuteMethod:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _CommuteMethodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CommuteMethod.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    COMMUTE_METHOD_UNSPECIFIED: CommuteMethod.ValueType = ...  # 0
    """Commute method isn't specified."""

    DRIVING: CommuteMethod.ValueType = ...  # 1
    """Commute time is calculated based on driving time."""

    TRANSIT: CommuteMethod.ValueType = ...  # 2
    """Commute time is calculated based on public transit including bus, metro,
    subway, and so on.
    """

    WALKING: CommuteMethod.ValueType = ...  # 3
    """Commute time is calculated based on walking time."""

    CYCLING: CommuteMethod.ValueType = ...  # 4
    """Commute time is calculated based on biking time."""

    TRANSIT_ACCESSIBLE: CommuteMethod.ValueType = ...  # 5
    """Commute time is calculated based on public transit that is wheelchair
    accessible.
    """

class CommuteMethod(_CommuteMethod, metaclass=_CommuteMethodEnumTypeWrapper):
    """Method for commute. Walking, biking and wheelchair accessible transit is
    still in the Preview stage.
    """
    pass

COMMUTE_METHOD_UNSPECIFIED: CommuteMethod.ValueType = ...  # 0
"""Commute method isn't specified."""

DRIVING: CommuteMethod.ValueType = ...  # 1
"""Commute time is calculated based on driving time."""

TRANSIT: CommuteMethod.ValueType = ...  # 2
"""Commute time is calculated based on public transit including bus, metro,
subway, and so on.
"""

WALKING: CommuteMethod.ValueType = ...  # 3
"""Commute time is calculated based on walking time."""

CYCLING: CommuteMethod.ValueType = ...  # 4
"""Commute time is calculated based on biking time."""

TRANSIT_ACCESSIBLE: CommuteMethod.ValueType = ...  # 5
"""Commute time is calculated based on public transit that is wheelchair
accessible.
"""

global___CommuteMethod = CommuteMethod


class TimestampRange(google.protobuf.message.Message):
    """Message representing a period of time between two timestamps."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Begin of the period (inclusive)."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """End of the period (exclusive)."""
        pass
    def __init__(self,
        *,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> None: ...
global___TimestampRange = TimestampRange

class Location(google.protobuf.message.Message):
    """A resource that represents a location with full geographic information."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _LocationType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LocationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LocationType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        LOCATION_TYPE_UNSPECIFIED: Location.LocationType.ValueType = ...  # 0
        """Default value if the type isn't specified."""

        COUNTRY: Location.LocationType.ValueType = ...  # 1
        """A country level location."""

        ADMINISTRATIVE_AREA: Location.LocationType.ValueType = ...  # 2
        """A state or equivalent level location."""

        SUB_ADMINISTRATIVE_AREA: Location.LocationType.ValueType = ...  # 3
        """A county or equivalent level location."""

        LOCALITY: Location.LocationType.ValueType = ...  # 4
        """A city or equivalent level location."""

        POSTAL_CODE: Location.LocationType.ValueType = ...  # 5
        """A postal code level location."""

        SUB_LOCALITY: Location.LocationType.ValueType = ...  # 6
        """A sublocality is a subdivision of a locality, for example a city borough,
        ward, or arrondissement. Sublocalities are usually recognized by a local
        political authority. For example, Manhattan and Brooklyn are recognized
        as boroughs by the City of New York, and are therefore modeled as
        sublocalities.
        """

        SUB_LOCALITY_1: Location.LocationType.ValueType = ...  # 7
        """A district or equivalent level location."""

        SUB_LOCALITY_2: Location.LocationType.ValueType = ...  # 8
        """A smaller district or equivalent level display."""

        NEIGHBORHOOD: Location.LocationType.ValueType = ...  # 9
        """A neighborhood level location."""

        STREET_ADDRESS: Location.LocationType.ValueType = ...  # 10
        """A street address level location."""

    class LocationType(_LocationType, metaclass=_LocationTypeEnumTypeWrapper):
        """An enum which represents the type of a location."""
        pass

    LOCATION_TYPE_UNSPECIFIED: Location.LocationType.ValueType = ...  # 0
    """Default value if the type isn't specified."""

    COUNTRY: Location.LocationType.ValueType = ...  # 1
    """A country level location."""

    ADMINISTRATIVE_AREA: Location.LocationType.ValueType = ...  # 2
    """A state or equivalent level location."""

    SUB_ADMINISTRATIVE_AREA: Location.LocationType.ValueType = ...  # 3
    """A county or equivalent level location."""

    LOCALITY: Location.LocationType.ValueType = ...  # 4
    """A city or equivalent level location."""

    POSTAL_CODE: Location.LocationType.ValueType = ...  # 5
    """A postal code level location."""

    SUB_LOCALITY: Location.LocationType.ValueType = ...  # 6
    """A sublocality is a subdivision of a locality, for example a city borough,
    ward, or arrondissement. Sublocalities are usually recognized by a local
    political authority. For example, Manhattan and Brooklyn are recognized
    as boroughs by the City of New York, and are therefore modeled as
    sublocalities.
    """

    SUB_LOCALITY_1: Location.LocationType.ValueType = ...  # 7
    """A district or equivalent level location."""

    SUB_LOCALITY_2: Location.LocationType.ValueType = ...  # 8
    """A smaller district or equivalent level display."""

    NEIGHBORHOOD: Location.LocationType.ValueType = ...  # 9
    """A neighborhood level location."""

    STREET_ADDRESS: Location.LocationType.ValueType = ...  # 10
    """A street address level location."""


    LOCATION_TYPE_FIELD_NUMBER: builtins.int
    POSTAL_ADDRESS_FIELD_NUMBER: builtins.int
    LAT_LNG_FIELD_NUMBER: builtins.int
    RADIUS_MILES_FIELD_NUMBER: builtins.int
    location_type: global___Location.LocationType.ValueType = ...
    """The type of a location, which corresponds to the address lines field of
    [google.type.PostalAddress][google.type.PostalAddress]. For example, "Downtown, Atlanta, GA, USA"
    has a type of [LocationType.NEIGHBORHOOD][google.cloud.talent.v4.Location.LocationType.NEIGHBORHOOD], and "Kansas City, KS, USA"
    has a type of [LocationType.LOCALITY][google.cloud.talent.v4.Location.LocationType.LOCALITY].
    """

    @property
    def postal_address(self) -> google.type.postal_address_pb2.PostalAddress:
        """Postal address of the location that includes human readable information,
        such as postal delivery and payments addresses. Given a postal address,
        a postal service can deliver items to a premises, P.O. Box, or other
        delivery location.
        """
        pass
    @property
    def lat_lng(self) -> google.type.latlng_pb2.LatLng:
        """An object representing a latitude/longitude pair."""
        pass
    radius_miles: builtins.float = ...
    """Radius in miles of the job location. This value is derived from the
    location bounding box in which a circle with the specified radius
    centered from [google.type.LatLng][google.type.LatLng] covers the area associated with the
    job location.
    For example, currently, "Mountain View, CA, USA" has a radius of
    6.17 miles.
    """

    def __init__(self,
        *,
        location_type : global___Location.LocationType.ValueType = ...,
        postal_address : typing.Optional[google.type.postal_address_pb2.PostalAddress] = ...,
        lat_lng : typing.Optional[google.type.latlng_pb2.LatLng] = ...,
        radius_miles : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["lat_lng",b"lat_lng","postal_address",b"postal_address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["lat_lng",b"lat_lng","location_type",b"location_type","postal_address",b"postal_address","radius_miles",b"radius_miles"]) -> None: ...
global___Location = Location

class RequestMetadata(google.protobuf.message.Message):
    """Meta information related to the job searcher or entity
    conducting the job search. This information is used to improve the
    performance of the service.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DOMAIN_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    ALLOW_MISSING_IDS_FIELD_NUMBER: builtins.int
    DEVICE_INFO_FIELD_NUMBER: builtins.int
    domain: typing.Text = ...
    """Required if [allow_missing_ids][google.cloud.talent.v4.RequestMetadata.allow_missing_ids] is unset or `false`.

    The client-defined scope or source of the service call, which typically
    is the domain on
    which the service has been implemented and is currently being run.

    For example, if the service is being run by client <em>Foo, Inc.</em>, on
    job board www.foo.com and career site www.bar.com, then this field is
    set to "foo.com" for use on the job board, and "bar.com" for use on the
    career site.

    Note that any improvements to the model for a particular tenant site rely
    on this field being set correctly to a unique domain.

    The maximum number of allowed characters is 255.
    """

    session_id: typing.Text = ...
    """Required if [allow_missing_ids][google.cloud.talent.v4.RequestMetadata.allow_missing_ids] is unset or `false`.

    A unique session identification string. A session is defined as the
    duration of an end user's interaction with the service over a certain
    period.
    Obfuscate this field for privacy concerns before
    providing it to the service.

    Note that any improvements to the model for a particular tenant site rely
    on this field being set correctly to a unique session ID.

    The maximum number of allowed characters is 255.
    """

    user_id: typing.Text = ...
    """Required if [allow_missing_ids][google.cloud.talent.v4.RequestMetadata.allow_missing_ids] is unset or `false`.

    A unique user identification string, as determined by the client.
    To have the strongest positive impact on search quality
    make sure the client-level is unique.
    Obfuscate this field for privacy concerns before
    providing it to the service.

    Note that any improvements to the model for a particular tenant site rely
    on this field being set correctly to a unique user ID.

    The maximum number of allowed characters is 255.
    """

    allow_missing_ids: builtins.bool = ...
    """Only set when any of [domain][google.cloud.talent.v4.RequestMetadata.domain], [session_id][google.cloud.talent.v4.RequestMetadata.session_id] and [user_id][google.cloud.talent.v4.RequestMetadata.user_id] isn't
    available for some reason. It is highly recommended not to set this field
    and provide accurate [domain][google.cloud.talent.v4.RequestMetadata.domain], [session_id][google.cloud.talent.v4.RequestMetadata.session_id] and [user_id][google.cloud.talent.v4.RequestMetadata.user_id] for the
    best service experience.
    """

    @property
    def device_info(self) -> global___DeviceInfo:
        """The type of device used by the job seeker at the time of the call to the
        service.
        """
        pass
    def __init__(self,
        *,
        domain : typing.Text = ...,
        session_id : typing.Text = ...,
        user_id : typing.Text = ...,
        allow_missing_ids : builtins.bool = ...,
        device_info : typing.Optional[global___DeviceInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_info",b"device_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_missing_ids",b"allow_missing_ids","device_info",b"device_info","domain",b"domain","session_id",b"session_id","user_id",b"user_id"]) -> None: ...
global___RequestMetadata = RequestMetadata

class ResponseMetadata(google.protobuf.message.Message):
    """Additional information returned to client, such as debugging information."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique id associated with this call.
    This id is logged for tracking purposes.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_id",b"request_id"]) -> None: ...
global___ResponseMetadata = ResponseMetadata

class DeviceInfo(google.protobuf.message.Message):
    """Device information collected from the job seeker, candidate, or
    other entity conducting the job search. Providing this information improves
    the quality of the search results across devices.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DeviceType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DeviceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DeviceType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DEVICE_TYPE_UNSPECIFIED: DeviceInfo.DeviceType.ValueType = ...  # 0
        """The device type isn't specified."""

        WEB: DeviceInfo.DeviceType.ValueType = ...  # 1
        """A desktop web browser, such as, Chrome, Firefox, Safari, or Internet
        Explorer)
        """

        MOBILE_WEB: DeviceInfo.DeviceType.ValueType = ...  # 2
        """A mobile device web browser, such as a phone or tablet with a Chrome
        browser.
        """

        ANDROID: DeviceInfo.DeviceType.ValueType = ...  # 3
        """An Android device native application."""

        IOS: DeviceInfo.DeviceType.ValueType = ...  # 4
        """An iOS device native application."""

        BOT: DeviceInfo.DeviceType.ValueType = ...  # 5
        """A bot, as opposed to a device operated by human beings, such as a web
        crawler.
        """

        OTHER: DeviceInfo.DeviceType.ValueType = ...  # 6
        """Other devices types."""

    class DeviceType(_DeviceType, metaclass=_DeviceTypeEnumTypeWrapper):
        """An enumeration describing an API access portal and exposure mechanism."""
        pass

    DEVICE_TYPE_UNSPECIFIED: DeviceInfo.DeviceType.ValueType = ...  # 0
    """The device type isn't specified."""

    WEB: DeviceInfo.DeviceType.ValueType = ...  # 1
    """A desktop web browser, such as, Chrome, Firefox, Safari, or Internet
    Explorer)
    """

    MOBILE_WEB: DeviceInfo.DeviceType.ValueType = ...  # 2
    """A mobile device web browser, such as a phone or tablet with a Chrome
    browser.
    """

    ANDROID: DeviceInfo.DeviceType.ValueType = ...  # 3
    """An Android device native application."""

    IOS: DeviceInfo.DeviceType.ValueType = ...  # 4
    """An iOS device native application."""

    BOT: DeviceInfo.DeviceType.ValueType = ...  # 5
    """A bot, as opposed to a device operated by human beings, such as a web
    crawler.
    """

    OTHER: DeviceInfo.DeviceType.ValueType = ...  # 6
    """Other devices types."""


    DEVICE_TYPE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    device_type: global___DeviceInfo.DeviceType.ValueType = ...
    """Type of the device."""

    id: typing.Text = ...
    """A device-specific ID. The ID must be a unique identifier that
    distinguishes the device from other devices.
    """

    def __init__(self,
        *,
        device_type : global___DeviceInfo.DeviceType.ValueType = ...,
        id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_type",b"device_type","id",b"id"]) -> None: ...
global___DeviceInfo = DeviceInfo

class CustomAttribute(google.protobuf.message.Message):
    """Custom attribute values that are either filterable or non-filterable."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STRING_VALUES_FIELD_NUMBER: builtins.int
    LONG_VALUES_FIELD_NUMBER: builtins.int
    FILTERABLE_FIELD_NUMBER: builtins.int
    KEYWORD_SEARCHABLE_FIELD_NUMBER: builtins.int
    @property
    def string_values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Exactly one of [string_values][google.cloud.talent.v4.CustomAttribute.string_values] or [long_values][google.cloud.talent.v4.CustomAttribute.long_values] must be specified.

        This field is used to perform a string match (`CASE_SENSITIVE_MATCH` or
        `CASE_INSENSITIVE_MATCH`) search.
        For filterable `string_value`s, a maximum total number of 200 values
        is allowed, with each `string_value` has a byte size of no more than
        500B. For unfilterable `string_values`, the maximum total byte size of
        unfilterable `string_values` is 50KB.

        Empty string isn't allowed.
        """
        pass
    @property
    def long_values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Exactly one of [string_values][google.cloud.talent.v4.CustomAttribute.string_values] or [long_values][google.cloud.talent.v4.CustomAttribute.long_values] must be specified.

        This field is used to perform number range search.
        (`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`.

        Currently at most 1 [long_values][google.cloud.talent.v4.CustomAttribute.long_values] is supported.
        """
        pass
    filterable: builtins.bool = ...
    """If the `filterable` flag is true, the custom field values may be used for
    custom attribute filters [JobQuery.custom_attribute_filter][google.cloud.talent.v4.JobQuery.custom_attribute_filter].
    If false, these values may not be used for custom attribute filters.

    Default is false.
    """

    keyword_searchable: builtins.bool = ...
    """If the `keyword_searchable` flag is true, the keywords in custom fields are
    searchable by keyword match.
    If false, the values are not searchable by keyword match.

    Default is false.
    """

    def __init__(self,
        *,
        string_values : typing.Optional[typing.Iterable[typing.Text]] = ...,
        long_values : typing.Optional[typing.Iterable[builtins.int]] = ...,
        filterable : builtins.bool = ...,
        keyword_searchable : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filterable",b"filterable","keyword_searchable",b"keyword_searchable","long_values",b"long_values","string_values",b"string_values"]) -> None: ...
global___CustomAttribute = CustomAttribute

class SpellingCorrection(google.protobuf.message.Message):
    """Spell check result."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CORRECTED_FIELD_NUMBER: builtins.int
    CORRECTED_TEXT_FIELD_NUMBER: builtins.int
    CORRECTED_HTML_FIELD_NUMBER: builtins.int
    corrected: builtins.bool = ...
    """Indicates if the query was corrected by the spell checker."""

    corrected_text: typing.Text = ...
    """Correction output consisting of the corrected keyword string."""

    corrected_html: typing.Text = ...
    """Corrected output with html tags to highlight the corrected words.
    Corrected words are called out with the "<b><i>...</i></b>" html tags.

    For example, the user input query is "software enginear", where the second
    word, "enginear," is incorrect. It should be "engineer". When spelling
    correction is enabled, this value is
    "software <b><i>engineer</i></b>".
    """

    def __init__(self,
        *,
        corrected : builtins.bool = ...,
        corrected_text : typing.Text = ...,
        corrected_html : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["corrected",b"corrected","corrected_html",b"corrected_html","corrected_text",b"corrected_text"]) -> None: ...
global___SpellingCorrection = SpellingCorrection

class CompensationInfo(google.protobuf.message.Message):
    """Job compensation details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CompensationType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CompensationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CompensationType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        COMPENSATION_TYPE_UNSPECIFIED: CompensationInfo.CompensationType.ValueType = ...  # 0
        """Default value."""

        BASE: CompensationInfo.CompensationType.ValueType = ...  # 1
        """Base compensation: Refers to the fixed amount of money paid to an
        employee by an employer in return for work performed. Base compensation
        does not include benefits, bonuses or any other potential compensation
        from an employer.
        """

        BONUS: CompensationInfo.CompensationType.ValueType = ...  # 2
        """Bonus."""

        SIGNING_BONUS: CompensationInfo.CompensationType.ValueType = ...  # 3
        """Signing bonus."""

        EQUITY: CompensationInfo.CompensationType.ValueType = ...  # 4
        """Equity."""

        PROFIT_SHARING: CompensationInfo.CompensationType.ValueType = ...  # 5
        """Profit sharing."""

        COMMISSIONS: CompensationInfo.CompensationType.ValueType = ...  # 6
        """Commission."""

        TIPS: CompensationInfo.CompensationType.ValueType = ...  # 7
        """Tips."""

        OTHER_COMPENSATION_TYPE: CompensationInfo.CompensationType.ValueType = ...  # 8
        """Other compensation type."""

    class CompensationType(_CompensationType, metaclass=_CompensationTypeEnumTypeWrapper):
        """The type of compensation.

        For compensation amounts specified in non-monetary amounts,
        describe the compensation scheme in the [CompensationEntry.description][google.cloud.talent.v4.CompensationInfo.CompensationEntry.description].

        For example, tipping format is described in
        [CompensationEntry.description][google.cloud.talent.v4.CompensationInfo.CompensationEntry.description] (for example, "expect 15-20% tips based
        on customer bill.") and an estimate of the tips provided in
        [CompensationEntry.amount][google.cloud.talent.v4.CompensationInfo.CompensationEntry.amount] or [CompensationEntry.range][google.cloud.talent.v4.CompensationInfo.CompensationEntry.range] ($10 per hour).

        For example, equity is described in [CompensationEntry.description][google.cloud.talent.v4.CompensationInfo.CompensationEntry.description]
        (for example, "1% - 2% equity vesting over 4 years, 1 year cliff") and
        value estimated in [CompensationEntry.amount][google.cloud.talent.v4.CompensationInfo.CompensationEntry.amount] or
        [CompensationEntry.range][google.cloud.talent.v4.CompensationInfo.CompensationEntry.range]. If no value estimate is possible, units are
        [CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED][google.cloud.talent.v4.CompensationInfo.CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED] and then further
        clarified in [CompensationEntry.description][google.cloud.talent.v4.CompensationInfo.CompensationEntry.description] field.
        """
        pass

    COMPENSATION_TYPE_UNSPECIFIED: CompensationInfo.CompensationType.ValueType = ...  # 0
    """Default value."""

    BASE: CompensationInfo.CompensationType.ValueType = ...  # 1
    """Base compensation: Refers to the fixed amount of money paid to an
    employee by an employer in return for work performed. Base compensation
    does not include benefits, bonuses or any other potential compensation
    from an employer.
    """

    BONUS: CompensationInfo.CompensationType.ValueType = ...  # 2
    """Bonus."""

    SIGNING_BONUS: CompensationInfo.CompensationType.ValueType = ...  # 3
    """Signing bonus."""

    EQUITY: CompensationInfo.CompensationType.ValueType = ...  # 4
    """Equity."""

    PROFIT_SHARING: CompensationInfo.CompensationType.ValueType = ...  # 5
    """Profit sharing."""

    COMMISSIONS: CompensationInfo.CompensationType.ValueType = ...  # 6
    """Commission."""

    TIPS: CompensationInfo.CompensationType.ValueType = ...  # 7
    """Tips."""

    OTHER_COMPENSATION_TYPE: CompensationInfo.CompensationType.ValueType = ...  # 8
    """Other compensation type."""


    class _CompensationUnit:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CompensationUnitEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CompensationUnit.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        COMPENSATION_UNIT_UNSPECIFIED: CompensationInfo.CompensationUnit.ValueType = ...  # 0
        """Default value."""

        HOURLY: CompensationInfo.CompensationUnit.ValueType = ...  # 1
        """Hourly."""

        DAILY: CompensationInfo.CompensationUnit.ValueType = ...  # 2
        """Daily."""

        WEEKLY: CompensationInfo.CompensationUnit.ValueType = ...  # 3
        """Weekly"""

        MONTHLY: CompensationInfo.CompensationUnit.ValueType = ...  # 4
        """Monthly."""

        YEARLY: CompensationInfo.CompensationUnit.ValueType = ...  # 5
        """Yearly."""

        ONE_TIME: CompensationInfo.CompensationUnit.ValueType = ...  # 6
        """One time."""

        OTHER_COMPENSATION_UNIT: CompensationInfo.CompensationUnit.ValueType = ...  # 7
        """Other compensation units."""

    class CompensationUnit(_CompensationUnit, metaclass=_CompensationUnitEnumTypeWrapper):
        """Pay frequency."""
        pass

    COMPENSATION_UNIT_UNSPECIFIED: CompensationInfo.CompensationUnit.ValueType = ...  # 0
    """Default value."""

    HOURLY: CompensationInfo.CompensationUnit.ValueType = ...  # 1
    """Hourly."""

    DAILY: CompensationInfo.CompensationUnit.ValueType = ...  # 2
    """Daily."""

    WEEKLY: CompensationInfo.CompensationUnit.ValueType = ...  # 3
    """Weekly"""

    MONTHLY: CompensationInfo.CompensationUnit.ValueType = ...  # 4
    """Monthly."""

    YEARLY: CompensationInfo.CompensationUnit.ValueType = ...  # 5
    """Yearly."""

    ONE_TIME: CompensationInfo.CompensationUnit.ValueType = ...  # 6
    """One time."""

    OTHER_COMPENSATION_UNIT: CompensationInfo.CompensationUnit.ValueType = ...  # 7
    """Other compensation units."""


    class CompensationEntry(google.protobuf.message.Message):
        """A compensation entry that represents one component of compensation, such
        as base pay, bonus, or other compensation type.

        Annualization: One compensation entry can be annualized if
        - it contains valid [amount][google.cloud.talent.v4.CompensationInfo.CompensationEntry.amount] or [range][google.cloud.talent.v4.CompensationInfo.CompensationEntry.range].
        - and its [expected_units_per_year][google.cloud.talent.v4.CompensationInfo.CompensationEntry.expected_units_per_year] is set or can be derived.
        Its annualized range is determined as ([amount][google.cloud.talent.v4.CompensationInfo.CompensationEntry.amount] or [range][google.cloud.talent.v4.CompensationInfo.CompensationEntry.range]) times
        [expected_units_per_year][google.cloud.talent.v4.CompensationInfo.CompensationEntry.expected_units_per_year].
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TYPE_FIELD_NUMBER: builtins.int
        UNIT_FIELD_NUMBER: builtins.int
        AMOUNT_FIELD_NUMBER: builtins.int
        RANGE_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        EXPECTED_UNITS_PER_YEAR_FIELD_NUMBER: builtins.int
        type: global___CompensationInfo.CompensationType.ValueType = ...
        """Compensation type.

        Default is [CompensationType.COMPENSATION_TYPE_UNSPECIFIED][google.cloud.talent.v4.CompensationInfo.CompensationType.COMPENSATION_TYPE_UNSPECIFIED].
        """

        unit: global___CompensationInfo.CompensationUnit.ValueType = ...
        """Frequency of the specified amount.

        Default is [CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED][google.cloud.talent.v4.CompensationInfo.CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED].
        """

        @property
        def amount(self) -> google.type.money_pb2.Money:
            """Compensation amount."""
            pass
        @property
        def range(self) -> global___CompensationInfo.CompensationRange:
            """Compensation range."""
            pass
        description: typing.Text = ...
        """Compensation description.  For example, could
        indicate equity terms or provide additional context to an estimated
        bonus.
        """

        @property
        def expected_units_per_year(self) -> google.protobuf.wrappers_pb2.DoubleValue:
            """Expected number of units paid each year. If not specified, when
            [Job.employment_types][google.cloud.talent.v4.Job.employment_types] is FULLTIME, a default value is inferred
            based on [unit][google.cloud.talent.v4.CompensationInfo.CompensationEntry.unit]. Default values:
            - HOURLY: 2080
            - DAILY: 260
            - WEEKLY: 52
            - MONTHLY: 12
            - ANNUAL: 1
            """
            pass
        def __init__(self,
            *,
            type : global___CompensationInfo.CompensationType.ValueType = ...,
            unit : global___CompensationInfo.CompensationUnit.ValueType = ...,
            amount : typing.Optional[google.type.money_pb2.Money] = ...,
            range : typing.Optional[global___CompensationInfo.CompensationRange] = ...,
            description : typing.Text = ...,
            expected_units_per_year : typing.Optional[google.protobuf.wrappers_pb2.DoubleValue] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["amount",b"amount","compensation_amount",b"compensation_amount","expected_units_per_year",b"expected_units_per_year","range",b"range"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["amount",b"amount","compensation_amount",b"compensation_amount","description",b"description","expected_units_per_year",b"expected_units_per_year","range",b"range","type",b"type","unit",b"unit"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["compensation_amount",b"compensation_amount"]) -> typing.Optional[typing_extensions.Literal["amount","range"]]: ...

    class CompensationRange(google.protobuf.message.Message):
        """Compensation range."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MAX_COMPENSATION_FIELD_NUMBER: builtins.int
        MIN_COMPENSATION_FIELD_NUMBER: builtins.int
        @property
        def max_compensation(self) -> google.type.money_pb2.Money:
            """The maximum amount of compensation. If left empty, the value is set
            to a maximal compensation value and the currency code is set to
            match the [currency code][google.type.Money.currency_code] of
            min_compensation.
            """
            pass
        @property
        def min_compensation(self) -> google.type.money_pb2.Money:
            """The minimum amount of compensation. If left empty, the value is set
            to zero and the currency code is set to match the
            [currency code][google.type.Money.currency_code] of max_compensation.
            """
            pass
        def __init__(self,
            *,
            max_compensation : typing.Optional[google.type.money_pb2.Money] = ...,
            min_compensation : typing.Optional[google.type.money_pb2.Money] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["max_compensation",b"max_compensation","min_compensation",b"min_compensation"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["max_compensation",b"max_compensation","min_compensation",b"min_compensation"]) -> None: ...

    ENTRIES_FIELD_NUMBER: builtins.int
    ANNUALIZED_BASE_COMPENSATION_RANGE_FIELD_NUMBER: builtins.int
    ANNUALIZED_TOTAL_COMPENSATION_RANGE_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CompensationInfo.CompensationEntry]:
        """Job compensation information.

        At most one entry can be of type
        [CompensationInfo.CompensationType.BASE][google.cloud.talent.v4.CompensationInfo.CompensationType.BASE], which is
        referred as **base compensation entry** for the job.
        """
        pass
    @property
    def annualized_base_compensation_range(self) -> global___CompensationInfo.CompensationRange:
        """Output only. Annualized base compensation range. Computed as base compensation entry's
        [CompensationEntry.amount][google.cloud.talent.v4.CompensationInfo.CompensationEntry.amount] times
        [CompensationEntry.expected_units_per_year][google.cloud.talent.v4.CompensationInfo.CompensationEntry.expected_units_per_year].

        See [CompensationEntry][google.cloud.talent.v4.CompensationInfo.CompensationEntry] for explanation on compensation annualization.
        """
        pass
    @property
    def annualized_total_compensation_range(self) -> global___CompensationInfo.CompensationRange:
        """Output only. Annualized total compensation range. Computed as all compensation entries'
        [CompensationEntry.amount][google.cloud.talent.v4.CompensationInfo.CompensationEntry.amount] times
        [CompensationEntry.expected_units_per_year][google.cloud.talent.v4.CompensationInfo.CompensationEntry.expected_units_per_year].

        See [CompensationEntry][google.cloud.talent.v4.CompensationInfo.CompensationEntry] for explanation on compensation annualization.
        """
        pass
    def __init__(self,
        *,
        entries : typing.Optional[typing.Iterable[global___CompensationInfo.CompensationEntry]] = ...,
        annualized_base_compensation_range : typing.Optional[global___CompensationInfo.CompensationRange] = ...,
        annualized_total_compensation_range : typing.Optional[global___CompensationInfo.CompensationRange] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["annualized_base_compensation_range",b"annualized_base_compensation_range","annualized_total_compensation_range",b"annualized_total_compensation_range"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annualized_base_compensation_range",b"annualized_base_compensation_range","annualized_total_compensation_range",b"annualized_total_compensation_range","entries",b"entries"]) -> None: ...
global___CompensationInfo = CompensationInfo

class BatchOperationMetadata(google.protobuf.message.Message):
    """Metadata used for long running operations returned by CTS batch APIs.
    It's used to replace [google.longrunning.Operation.metadata][google.longrunning.Operation.metadata].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: BatchOperationMetadata.State.ValueType = ...  # 0
        """Default value."""

        INITIALIZING: BatchOperationMetadata.State.ValueType = ...  # 1
        """The batch operation is being prepared for processing."""

        PROCESSING: BatchOperationMetadata.State.ValueType = ...  # 2
        """The batch operation is actively being processed."""

        SUCCEEDED: BatchOperationMetadata.State.ValueType = ...  # 3
        """The batch operation is processed, and at least one item has been
        successfully processed.
        """

        FAILED: BatchOperationMetadata.State.ValueType = ...  # 4
        """The batch operation is done and no item has been successfully processed."""

        CANCELLING: BatchOperationMetadata.State.ValueType = ...  # 5
        """The batch operation is in the process of cancelling after
        [google.longrunning.Operations.CancelOperation][google.longrunning.Operations.CancelOperation] is called.
        """

        CANCELLED: BatchOperationMetadata.State.ValueType = ...  # 6
        """The batch operation is done after
        [google.longrunning.Operations.CancelOperation][google.longrunning.Operations.CancelOperation] is called. Any items
        processed before cancelling are returned in the response.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper):
        pass

    STATE_UNSPECIFIED: BatchOperationMetadata.State.ValueType = ...  # 0
    """Default value."""

    INITIALIZING: BatchOperationMetadata.State.ValueType = ...  # 1
    """The batch operation is being prepared for processing."""

    PROCESSING: BatchOperationMetadata.State.ValueType = ...  # 2
    """The batch operation is actively being processed."""

    SUCCEEDED: BatchOperationMetadata.State.ValueType = ...  # 3
    """The batch operation is processed, and at least one item has been
    successfully processed.
    """

    FAILED: BatchOperationMetadata.State.ValueType = ...  # 4
    """The batch operation is done and no item has been successfully processed."""

    CANCELLING: BatchOperationMetadata.State.ValueType = ...  # 5
    """The batch operation is in the process of cancelling after
    [google.longrunning.Operations.CancelOperation][google.longrunning.Operations.CancelOperation] is called.
    """

    CANCELLED: BatchOperationMetadata.State.ValueType = ...  # 6
    """The batch operation is done after
    [google.longrunning.Operations.CancelOperation][google.longrunning.Operations.CancelOperation] is called. Any items
    processed before cancelling are returned in the response.
    """


    STATE_FIELD_NUMBER: builtins.int
    STATE_DESCRIPTION_FIELD_NUMBER: builtins.int
    SUCCESS_COUNT_FIELD_NUMBER: builtins.int
    FAILURE_COUNT_FIELD_NUMBER: builtins.int
    TOTAL_COUNT_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    state: global___BatchOperationMetadata.State.ValueType = ...
    """The state of a long running operation."""

    state_description: typing.Text = ...
    """More detailed information about operation state."""

    success_count: builtins.int = ...
    """Count of successful item(s) inside an operation."""

    failure_count: builtins.int = ...
    """Count of failed item(s) inside an operation."""

    total_count: builtins.int = ...
    """Count of total item(s) inside an operation."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the batch operation is created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the batch operation status is updated. The metadata and the
        [update_time][google.cloud.talent.v4.BatchOperationMetadata.update_time] is refreshed every minute otherwise cached data is
        returned.
        """
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the batch operation is finished and
        [google.longrunning.Operation.done][google.longrunning.Operation.done] is set to `true`.
        """
        pass
    def __init__(self,
        *,
        state : global___BatchOperationMetadata.State.ValueType = ...,
        state_description : typing.Text = ...,
        success_count : builtins.int = ...,
        failure_count : builtins.int = ...,
        total_count : builtins.int = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","failure_count",b"failure_count","state",b"state","state_description",b"state_description","success_count",b"success_count","total_count",b"total_count","update_time",b"update_time"]) -> None: ...
global___BatchOperationMetadata = BatchOperationMetadata
