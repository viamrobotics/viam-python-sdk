"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.talent.v4beta1.common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Job(google.protobuf.message.Message):
    """A Job resource represents a job posting (also referred to as a "job listing"
    or "job requisition"). A job belongs to a [Company][google.cloud.talent.v4beta1.Company], which is the hiring
    entity responsible for the job.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ApplicationInfo(google.protobuf.message.Message):
        """Application related details of a job posting."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        EMAILS_FIELD_NUMBER: builtins.int
        INSTRUCTION_FIELD_NUMBER: builtins.int
        URIS_FIELD_NUMBER: builtins.int
        @property
        def emails(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Use this field to specify email address(es) to which resumes or
            applications can be sent.

            The maximum number of allowed characters for each entry is 255.
            """
            pass
        instruction: typing.Text = ...
        """Use this field to provide instructions, such as "Mail your application
        to ...", that a candidate can follow to apply for the job.

        This field accepts and sanitizes HTML input, and also accepts
        bold, italic, ordered list, and unordered list markup tags.

        The maximum number of allowed characters is 3,000.
        """

        @property
        def uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Use this URI field to direct an applicant to a website, for example to
            link to an online application form.

            The maximum number of allowed characters for each entry is 2,000.
            """
            pass
        def __init__(self,
            *,
            emails : typing.Optional[typing.Iterable[typing.Text]] = ...,
            instruction : typing.Text = ...,
            uris : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["emails",b"emails","instruction",b"instruction","uris",b"uris"]) -> None: ...

    class DerivedInfo(google.protobuf.message.Message):
        """Derived details about the job posting."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        LOCATIONS_FIELD_NUMBER: builtins.int
        JOB_CATEGORIES_FIELD_NUMBER: builtins.int
        @property
        def locations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.talent.v4beta1.common_pb2.Location]:
            """Structured locations of the job, resolved from [Job.addresses][google.cloud.talent.v4beta1.Job.addresses].

            [locations][google.cloud.talent.v4beta1.Job.DerivedInfo.locations] are exactly matched to [Job.addresses][google.cloud.talent.v4beta1.Job.addresses] in the same
            order.
            """
            pass
        @property
        def job_categories(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[google.cloud.talent.v4beta1.common_pb2.JobCategory.ValueType]:
            """Job categories derived from [Job.title][google.cloud.talent.v4beta1.Job.title] and [Job.description][google.cloud.talent.v4beta1.Job.description]."""
            pass
        def __init__(self,
            *,
            locations : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.common_pb2.Location]] = ...,
            job_categories : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.common_pb2.JobCategory.ValueType]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_categories",b"job_categories","locations",b"locations"]) -> None: ...

    class ProcessingOptions(google.protobuf.message.Message):
        """Options for job processing."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DISABLE_STREET_ADDRESS_RESOLUTION_FIELD_NUMBER: builtins.int
        HTML_SANITIZATION_FIELD_NUMBER: builtins.int
        disable_street_address_resolution: builtins.bool = ...
        """If set to `true`, the service does not attempt to resolve a
        more precise address for the job.
        """

        html_sanitization: google.cloud.talent.v4beta1.common_pb2.HtmlSanitization.ValueType = ...
        """Option for job HTML content sanitization. Applied fields are:

        * description
        * applicationInfo.instruction
        * incentives
        * qualifications
        * responsibilities

        HTML tags in these fields may be stripped if sanitiazation isn't
        disabled.

        Defaults to [HtmlSanitization.SIMPLE_FORMATTING_ONLY][google.cloud.talent.v4beta1.HtmlSanitization.SIMPLE_FORMATTING_ONLY].
        """

        def __init__(self,
            *,
            disable_street_address_resolution : builtins.bool = ...,
            html_sanitization : google.cloud.talent.v4beta1.common_pb2.HtmlSanitization.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["disable_street_address_resolution",b"disable_street_address_resolution","html_sanitization",b"html_sanitization"]) -> None: ...

    class CustomAttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> google.cloud.talent.v4beta1.common_pb2.CustomAttribute: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[google.cloud.talent.v4beta1.common_pb2.CustomAttribute] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    COMPANY_FIELD_NUMBER: builtins.int
    REQUISITION_ID_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ADDRESSES_FIELD_NUMBER: builtins.int
    APPLICATION_INFO_FIELD_NUMBER: builtins.int
    JOB_BENEFITS_FIELD_NUMBER: builtins.int
    COMPENSATION_INFO_FIELD_NUMBER: builtins.int
    CUSTOM_ATTRIBUTES_FIELD_NUMBER: builtins.int
    DEGREE_TYPES_FIELD_NUMBER: builtins.int
    DEPARTMENT_FIELD_NUMBER: builtins.int
    EMPLOYMENT_TYPES_FIELD_NUMBER: builtins.int
    INCENTIVES_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    JOB_LEVEL_FIELD_NUMBER: builtins.int
    PROMOTION_VALUE_FIELD_NUMBER: builtins.int
    QUALIFICATIONS_FIELD_NUMBER: builtins.int
    RESPONSIBILITIES_FIELD_NUMBER: builtins.int
    POSTING_REGION_FIELD_NUMBER: builtins.int
    VISIBILITY_FIELD_NUMBER: builtins.int
    JOB_START_TIME_FIELD_NUMBER: builtins.int
    JOB_END_TIME_FIELD_NUMBER: builtins.int
    POSTING_PUBLISH_TIME_FIELD_NUMBER: builtins.int
    POSTING_EXPIRE_TIME_FIELD_NUMBER: builtins.int
    POSTING_CREATE_TIME_FIELD_NUMBER: builtins.int
    POSTING_UPDATE_TIME_FIELD_NUMBER: builtins.int
    COMPANY_DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DERIVED_INFO_FIELD_NUMBER: builtins.int
    PROCESSING_OPTIONS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required during job update.

    The resource name for the job. This is generated by the service when a
    job is created.

    The format is
    "projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}". For
    example, "projects/foo/tenants/bar/jobs/baz".

    If tenant id is unspecified, the default tenant is used. For
    example, "projects/foo/jobs/bar".

    Use of this field in job queries and API calls is preferred over the use of
    [requisition_id][google.cloud.talent.v4beta1.Job.requisition_id] since this value is unique.
    """

    company: typing.Text = ...
    """Required. The resource name of the company listing the job.

    The format is
    "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}". For
    example, "projects/foo/tenants/bar/companies/baz".

    If tenant id is unspecified, the default tenant is used. For
    example, "projects/foo/companies/bar".
    """

    requisition_id: typing.Text = ...
    """Required. The requisition ID, also referred to as the posting ID, is assigned by the
    client to identify a job. This field is intended to be used by clients
    for client identification and tracking of postings. A job isn't allowed
    to be created if there is another job with the same [company][google.cloud.talent.v4beta1.Job.name],
    [language_code][google.cloud.talent.v4beta1.Job.language_code] and [requisition_id][google.cloud.talent.v4beta1.Job.requisition_id].

    The maximum number of allowed characters is 255.
    """

    title: typing.Text = ...
    """Required. The title of the job, such as "Software Engineer"

    The maximum number of allowed characters is 500.
    """

    description: typing.Text = ...
    """Required. The description of the job, which typically includes a multi-paragraph
    description of the company and related information. Separate fields are
    provided on the job object for [responsibilities][google.cloud.talent.v4beta1.Job.responsibilities],
    [qualifications][google.cloud.talent.v4beta1.Job.qualifications], and other job characteristics. Use of
    these separate job fields is recommended.

    This field accepts and sanitizes HTML input, and also accepts
    bold, italic, ordered list, and unordered list markup tags.

    The maximum number of allowed characters is 100,000.
    """

    @property
    def addresses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Strongly recommended for the best service experience.

        Location(s) where the employer is looking to hire for this job posting.

        Specifying the full street address(es) of the hiring location enables
        better API results, especially job searches by commute time.

        At most 50 locations are allowed for best search performance. If a job has
        more locations, it is suggested to split it into multiple jobs with unique
        [requisition_id][google.cloud.talent.v4beta1.Job.requisition_id]s (e.g. 'ReqA' becomes 'ReqA-1', 'ReqA-2', and so on.) as
        multiple jobs with the same [company][google.cloud.talent.v4beta1.Job.company], [language_code][google.cloud.talent.v4beta1.Job.language_code] and
        [requisition_id][google.cloud.talent.v4beta1.Job.requisition_id] are not allowed. If the original [requisition_id][google.cloud.talent.v4beta1.Job.requisition_id] must
        be preserved, a custom field should be used for storage. It is also
        suggested to group the locations that close to each other in the same job
        for better search experience.

        The maximum number of allowed characters is 500.
        """
        pass
    @property
    def application_info(self) -> global___Job.ApplicationInfo:
        """Job application information."""
        pass
    @property
    def job_benefits(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[google.cloud.talent.v4beta1.common_pb2.JobBenefit.ValueType]:
        """The benefits included with the job."""
        pass
    @property
    def compensation_info(self) -> google.cloud.talent.v4beta1.common_pb2.CompensationInfo:
        """Job compensation information (a.k.a. "pay rate") i.e., the compensation
        that will paid to the employee.
        """
        pass
    @property
    def custom_attributes(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.cloud.talent.v4beta1.common_pb2.CustomAttribute]:
        """A map of fields to hold both filterable and non-filterable custom job
        attributes that are not covered by the provided structured fields.

        The keys of the map are strings up to 64 bytes and must match the
        pattern: `[a-zA-Z][a-zA-Z0-9_]*`. For example, key0LikeThis or
        KEY_1_LIKE_THIS.

        At most 100 filterable and at most 100 unfilterable keys are supported.
        For filterable `string_values`, across all keys at most 200 values are
        allowed, with each string no more than 255 characters. For unfilterable
        `string_values`, the maximum total size of `string_values` across all keys
        is 50KB.
        """
        pass
    @property
    def degree_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[google.cloud.talent.v4beta1.common_pb2.DegreeType.ValueType]:
        """The desired education degrees for the job, such as Bachelors, Masters."""
        pass
    department: typing.Text = ...
    """The department or functional area within the company with the open
    position.

    The maximum number of allowed characters is 255.
    """

    @property
    def employment_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[google.cloud.talent.v4beta1.common_pb2.EmploymentType.ValueType]:
        """The employment type(s) of a job, for example,
        [full time][google.cloud.talent.v4beta1.EmploymentType.FULL_TIME] or
        [part time][google.cloud.talent.v4beta1.EmploymentType.PART_TIME].
        """
        pass
    incentives: typing.Text = ...
    """A description of bonus, commission, and other compensation
    incentives associated with the job not including salary or pay.

    The maximum number of allowed characters is 10,000.
    """

    language_code: typing.Text = ...
    """The language of the posting. This field is distinct from
    any requirements for fluency that are associated with the job.

    Language codes must be in BCP-47 format, such as "en-US" or "sr-Latn".
    For more information, see
    [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47){:
    class="external" target="_blank" }.

    If this field is unspecified and [Job.description][google.cloud.talent.v4beta1.Job.description] is present, detected
    language code based on [Job.description][google.cloud.talent.v4beta1.Job.description] is assigned, otherwise
    defaults to 'en_US'.
    """

    job_level: google.cloud.talent.v4beta1.common_pb2.JobLevel.ValueType = ...
    """The experience level associated with the job, such as "Entry Level"."""

    promotion_value: builtins.int = ...
    """A promotion value of the job, as determined by the client.
    The value determines the sort order of the jobs returned when searching for
    jobs using the featured jobs search call, with higher promotional values
    being returned first and ties being resolved by relevance sort. Only the
    jobs with a promotionValue >0 are returned in a FEATURED_JOB_SEARCH.

    Default value is 0, and negative values are treated as 0.
    """

    qualifications: typing.Text = ...
    """A description of the qualifications required to perform the
    job. The use of this field is recommended
    as an alternative to using the more general [description][google.cloud.talent.v4beta1.Job.description] field.

    This field accepts and sanitizes HTML input, and also accepts
    bold, italic, ordered list, and unordered list markup tags.

    The maximum number of allowed characters is 10,000.
    """

    responsibilities: typing.Text = ...
    """A description of job responsibilities. The use of this field is
    recommended as an alternative to using the more general [description][google.cloud.talent.v4beta1.Job.description]
    field.

    This field accepts and sanitizes HTML input, and also accepts
    bold, italic, ordered list, and unordered list markup tags.

    The maximum number of allowed characters is 10,000.
    """

    posting_region: google.cloud.talent.v4beta1.common_pb2.PostingRegion.ValueType = ...
    """The job [PostingRegion][google.cloud.talent.v4beta1.PostingRegion] (for example, state, country) throughout
    which the job is available. If this field is set, a [LocationFilter][google.cloud.talent.v4beta1.LocationFilter]
    in a search query within the job region finds this job posting if an
    exact location match isn't specified. If this field is set to
    [PostingRegion.NATION][google.cloud.talent.v4beta1.PostingRegion.NATION] or [PostingRegion.ADMINISTRATIVE_AREA][google.cloud.talent.v4beta1.PostingRegion.ADMINISTRATIVE_AREA],
    setting job [Job.addresses][google.cloud.talent.v4beta1.Job.addresses] to the same location level as this field
    is strongly recommended.
    """

    visibility: google.cloud.talent.v4beta1.common_pb2.Visibility.ValueType = ...
    """Deprecated. The job is only visible to the owner.

    The visibility of the job.

    Defaults to [Visibility.ACCOUNT_ONLY][google.cloud.talent.v4beta1.Visibility.ACCOUNT_ONLY] if not specified.
    """

    @property
    def job_start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The start timestamp of the job in UTC time zone. Typically this field
        is used for contracting engagements. Invalid timestamps are ignored.
        """
        pass
    @property
    def job_end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The end timestamp of the job. Typically this field is used for contracting
        engagements. Invalid timestamps are ignored.
        """
        pass
    @property
    def posting_publish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp this job posting was most recently published. The default
        value is the time the request arrives at the server. Invalid timestamps are
        ignored.
        """
        pass
    @property
    def posting_expire_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Strongly recommended for the best service experience.

        The expiration timestamp of the job. After this timestamp, the
        job is marked as expired, and it no longer appears in search results. The
        expired job can't be listed by the [ListJobs][google.cloud.talent.v4beta1.JobService.ListJobs] API,
        but it can be retrieved with the [GetJob][google.cloud.talent.v4beta1.JobService.GetJob] API or
        updated with the [UpdateJob][google.cloud.talent.v4beta1.JobService.UpdateJob] API or deleted with
        the [DeleteJob][google.cloud.talent.v4beta1.JobService.DeleteJob] API. An expired job can
        be updated and opened again by using a future expiration timestamp.
        Updating an expired job fails if there is another existing open job with
        same [company][google.cloud.talent.v4beta1.Job.company], [language_code][google.cloud.talent.v4beta1.Job.language_code] and [requisition_id][google.cloud.talent.v4beta1.Job.requisition_id].

        The expired jobs are retained in our system for 90 days. However, the
        overall expired job count cannot exceed 3 times the maximum number of
        open jobs over previous 7 days. If this threshold is exceeded,
        expired jobs are cleaned out in order of earliest expire time.
        Expired jobs are no longer accessible after they are cleaned
        out.

        Invalid timestamps are ignored, and treated as expire time not provided.

        If the timestamp is before the instant request is made, the job
        is treated as expired immediately on creation. This kind of job can
        not be updated. And when creating a job with past timestamp, the
        [posting_publish_time][google.cloud.talent.v4beta1.Job.posting_publish_time] must be set before
        [posting_expire_time][google.cloud.talent.v4beta1.Job.posting_expire_time]. The purpose of this feature is
        to allow other objects, such as [Application][google.cloud.talent.v4beta1.Application], to refer a job
        that didn't exist in the system prior to becoming expired. If you
        want to modify a job that was expired on creation,
        delete it and create a new one.

        If this value isn't provided at the time of job creation or is invalid,
        the job posting expires after 30 days from the job's creation time. For
        example, if the job was created on 2017/01/01 13:00AM UTC with an
        unspecified expiration date, the job expires after 2017/01/31 13:00AM UTC.

        If this value isn't provided on job update, it depends on the field masks
        set by [UpdateJobRequest.update_mask][google.cloud.talent.v4beta1.UpdateJobRequest.update_mask]. If the field masks include
        [job_end_time][google.cloud.talent.v4beta1.Job.job_end_time], or the masks are empty meaning that every field is
        updated, the job posting expires after 30 days from the job's last
        update time. Otherwise the expiration date isn't updated.
        """
        pass
    @property
    def posting_create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The timestamp when this job posting was created."""
        pass
    @property
    def posting_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The timestamp when this job posting was last updated."""
        pass
    company_display_name: typing.Text = ...
    """Output only. Display name of the company listing the job."""

    @property
    def derived_info(self) -> global___Job.DerivedInfo:
        """Output only. Derived details about the job posting."""
        pass
    @property
    def processing_options(self) -> global___Job.ProcessingOptions:
        """Options for job processing."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        company : typing.Text = ...,
        requisition_id : typing.Text = ...,
        title : typing.Text = ...,
        description : typing.Text = ...,
        addresses : typing.Optional[typing.Iterable[typing.Text]] = ...,
        application_info : typing.Optional[global___Job.ApplicationInfo] = ...,
        job_benefits : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.common_pb2.JobBenefit.ValueType]] = ...,
        compensation_info : typing.Optional[google.cloud.talent.v4beta1.common_pb2.CompensationInfo] = ...,
        custom_attributes : typing.Optional[typing.Mapping[typing.Text, google.cloud.talent.v4beta1.common_pb2.CustomAttribute]] = ...,
        degree_types : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.common_pb2.DegreeType.ValueType]] = ...,
        department : typing.Text = ...,
        employment_types : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.common_pb2.EmploymentType.ValueType]] = ...,
        incentives : typing.Text = ...,
        language_code : typing.Text = ...,
        job_level : google.cloud.talent.v4beta1.common_pb2.JobLevel.ValueType = ...,
        promotion_value : builtins.int = ...,
        qualifications : typing.Text = ...,
        responsibilities : typing.Text = ...,
        posting_region : google.cloud.talent.v4beta1.common_pb2.PostingRegion.ValueType = ...,
        visibility : google.cloud.talent.v4beta1.common_pb2.Visibility.ValueType = ...,
        job_start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        job_end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        posting_publish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        posting_expire_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        posting_create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        posting_update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        company_display_name : typing.Text = ...,
        derived_info : typing.Optional[global___Job.DerivedInfo] = ...,
        processing_options : typing.Optional[global___Job.ProcessingOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["application_info",b"application_info","compensation_info",b"compensation_info","derived_info",b"derived_info","job_end_time",b"job_end_time","job_start_time",b"job_start_time","posting_create_time",b"posting_create_time","posting_expire_time",b"posting_expire_time","posting_publish_time",b"posting_publish_time","posting_update_time",b"posting_update_time","processing_options",b"processing_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["addresses",b"addresses","application_info",b"application_info","company",b"company","company_display_name",b"company_display_name","compensation_info",b"compensation_info","custom_attributes",b"custom_attributes","degree_types",b"degree_types","department",b"department","derived_info",b"derived_info","description",b"description","employment_types",b"employment_types","incentives",b"incentives","job_benefits",b"job_benefits","job_end_time",b"job_end_time","job_level",b"job_level","job_start_time",b"job_start_time","language_code",b"language_code","name",b"name","posting_create_time",b"posting_create_time","posting_expire_time",b"posting_expire_time","posting_publish_time",b"posting_publish_time","posting_region",b"posting_region","posting_update_time",b"posting_update_time","processing_options",b"processing_options","promotion_value",b"promotion_value","qualifications",b"qualifications","requisition_id",b"requisition_id","responsibilities",b"responsibilities","title",b"title","visibility",b"visibility"]) -> None: ...
global___Job = Job
