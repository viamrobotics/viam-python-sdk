"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.talent.v4beta1.common_pb2
import google.cloud.talent.v4beta1.filters_pb2
import google.cloud.talent.v4beta1.histogram_pb2
import google.cloud.talent.v4beta1.profile_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ListProfilesRequest(google.protobuf.message.Message):
    """List profiles request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    READ_MASK_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The resource name of the tenant under which the profile is created.

    The format is "projects/{project_id}/tenants/{tenant_id}". For example,
    "projects/foo/tenants/bar".
    """

    filter: typing.Text = ...
    """The filter string specifies the profiles to be enumerated.

    Supported operator: =, AND

    The field(s) eligible for filtering are:

    * `externalId`
    * `groupId`

    externalId and groupId cannot be specified at the same time. If both
    externalId and groupId are provided, the API will return a bad request
    error.

    Sample Query:

    * externalId = "externalId-1"
    * groupId = "groupId-1"
    """

    page_token: typing.Text = ...
    """The token that specifies the current offset (that is, starting result).

    Please set the value to [ListProfilesResponse.next_page_token][google.cloud.talent.v4beta1.ListProfilesResponse.next_page_token] to
    continue the list.
    """

    page_size: builtins.int = ...
    """The maximum number of profiles to be returned, at most 100.

    Default is 100 unless a positive number smaller than 100 is specified.
    """

    @property
    def read_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """A field mask to specify the profile fields to be listed in response.
        All fields are listed if it is unset.

        Valid values are:

        * name
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        read_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["read_mask",b"read_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent","read_mask",b"read_mask"]) -> None: ...
global___ListProfilesRequest = ListProfilesRequest

class ListProfilesResponse(google.protobuf.message.Message):
    """The List profiles response object."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROFILES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def profiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.talent.v4beta1.profile_pb2.Profile]:
        """Profiles for the specific tenant."""
        pass
    next_page_token: typing.Text = ...
    """A token to retrieve the next page of results. This is empty if there are no
    more results.
    """

    def __init__(self,
        *,
        profiles : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.profile_pb2.Profile]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","profiles",b"profiles"]) -> None: ...
global___ListProfilesResponse = ListProfilesResponse

class CreateProfileRequest(google.protobuf.message.Message):
    """Create profile request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PROFILE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the tenant this profile belongs to.

    The format is "projects/{project_id}/tenants/{tenant_id}". For example,
    "projects/foo/tenants/bar".
    """

    @property
    def profile(self) -> google.cloud.talent.v4beta1.profile_pb2.Profile:
        """Required. The profile to be created."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        profile : typing.Optional[google.cloud.talent.v4beta1.profile_pb2.Profile] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["profile",b"profile"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","profile",b"profile"]) -> None: ...
global___CreateProfileRequest = CreateProfileRequest

class GetProfileRequest(google.protobuf.message.Message):
    """Get profile request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Resource name of the profile to get.

    The format is
    "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}". For
    example, "projects/foo/tenants/bar/profiles/baz".
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetProfileRequest = GetProfileRequest

class UpdateProfileRequest(google.protobuf.message.Message):
    """Update profile request"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROFILE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def profile(self) -> google.cloud.talent.v4beta1.profile_pb2.Profile:
        """Required. Profile to be updated."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """A field mask to specify the profile fields to update.

        A full update is performed if it is unset.
        """
        pass
    def __init__(self,
        *,
        profile : typing.Optional[google.cloud.talent.v4beta1.profile_pb2.Profile] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["profile",b"profile","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["profile",b"profile","update_mask",b"update_mask"]) -> None: ...
global___UpdateProfileRequest = UpdateProfileRequest

class DeleteProfileRequest(google.protobuf.message.Message):
    """Delete profile request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Resource name of the profile to be deleted.

    The format is
    "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}". For
    example, "projects/foo/tenants/bar/profiles/baz".
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteProfileRequest = DeleteProfileRequest

class SearchProfilesRequest(google.protobuf.message.Message):
    """The request body of the `SearchProfiles` call."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    REQUEST_METADATA_FIELD_NUMBER: builtins.int
    PROFILE_QUERY_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    DISABLE_SPELL_CHECK_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    CASE_SENSITIVE_SORT_FIELD_NUMBER: builtins.int
    HISTOGRAM_QUERIES_FIELD_NUMBER: builtins.int
    RESULT_SET_ID_FIELD_NUMBER: builtins.int
    STRICT_KEYWORDS_SEARCH_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The resource name of the tenant to search within.

    The format is "projects/{project_id}/tenants/{tenant_id}". For example,
    "projects/foo/tenants/bar".
    """

    @property
    def request_metadata(self) -> google.cloud.talent.v4beta1.common_pb2.RequestMetadata:
        """Required. The meta information collected about the profile search user. This is used
        to improve the search quality of the service. These values are provided by
        users, and must be precise and consistent.
        """
        pass
    @property
    def profile_query(self) -> google.cloud.talent.v4beta1.filters_pb2.ProfileQuery:
        """Search query to execute. See [ProfileQuery][google.cloud.talent.v4beta1.ProfileQuery] for more details."""
        pass
    page_size: builtins.int = ...
    """A limit on the number of profiles returned in the search results.
    A value above the default value 10 can increase search response time.

    The maximum value allowed is 100. Otherwise an error is thrown.
    """

    page_token: typing.Text = ...
    """The pageToken, similar to offset enables users of the API to paginate
    through the search results. To retrieve the first page of results, set the
    pageToken to empty. The search response includes a
    [nextPageToken][google.cloud.talent.v4beta1.SearchProfilesResponse.next_page_token] field that can be
    used to populate the pageToken field for the next page of results. Using
    pageToken instead of offset increases the performance of the API,
    especially compared to larger offset values.
    """

    offset: builtins.int = ...
    """An integer that specifies the current offset (that is, starting result) in
    search results. This field is only considered if [page_token][google.cloud.talent.v4beta1.SearchProfilesRequest.page_token] is unset.

    The maximum allowed value is 5000. Otherwise an error is thrown.

    For example, 0 means to search from the first profile, and 10 means to
    search from the 11th profile. This can be used for pagination, for example
    pageSize = 10 and offset = 10 means to search from the second page.
    """

    disable_spell_check: builtins.bool = ...
    """This flag controls the spell-check feature. If `false`, the
    service attempts to correct a misspelled query.

    For example, "enginee" is corrected to "engineer".
    """

    order_by: typing.Text = ...
    """The criteria that determines how search results are sorted.
    Defaults is "relevance desc" if no value is specified.

    Supported options are:

    * "relevance desc": By descending relevance, as determined by the API
       algorithms.
    * "update_date desc": Sort by [Profile.update_time][google.cloud.talent.v4beta1.Profile.update_time] in descending order
      (recently updated profiles first).
    * "create_date desc": Sort by [Profile.create_time][google.cloud.talent.v4beta1.Profile.create_time] in descending order
      (recently created profiles first).
    * "first_name": Sort by [PersonName.PersonStructuredName.given_name][google.cloud.talent.v4beta1.PersonName.PersonStructuredName.given_name] in
      ascending order.
    * "first_name desc": Sort by [PersonName.PersonStructuredName.given_name][google.cloud.talent.v4beta1.PersonName.PersonStructuredName.given_name]
      in descending order.
    * "last_name": Sort by [PersonName.PersonStructuredName.family_name][google.cloud.talent.v4beta1.PersonName.PersonStructuredName.family_name] in
      ascending order.
    * "last_name desc": Sort by [PersonName.PersonStructuredName.family_name][google.cloud.talent.v4beta1.PersonName.PersonStructuredName.family_name]
      in ascending order.
    """

    case_sensitive_sort: builtins.bool = ...
    """When sort by field is based on alphabetical order, sort values case
    sensitively (based on ASCII) when the value is set to true. Default value
    is case in-sensitive sort (false).
    """

    @property
    def histogram_queries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.talent.v4beta1.histogram_pb2.HistogramQuery]:
        """A list of expressions specifies histogram requests against matching
        profiles for [SearchProfilesRequest][google.cloud.talent.v4beta1.SearchProfilesRequest].

        The expression syntax looks like a function definition with parameters.

        Function syntax: function_name(histogram_facet[, list of buckets])

        Data types:

        * Histogram facet: facet names with format `[a-zA-Z][a-zA-Z0-9_]+`.
        * String: string like "any string with backslash escape for quote(\\")."
        * Number: whole number and floating point number like 10, -1 and -0.01.
        * List: list of elements with comma(,) separator surrounded by square
        brackets. For example, [1, 2, 3] and ["one", "two", "three"].

        Built-in constants:

        * MIN (minimum number similar to java Double.MIN_VALUE)
        * MAX (maximum number similar to java Double.MAX_VALUE)

        Built-in functions:

        * bucket(start, end[, label])
        Bucket build-in function creates a bucket with range of [start, end). Note
        that the end is exclusive.
        For example, bucket(1, MAX, "positive number") or bucket(1, 10).

        Histogram Facets:

        * admin1: Admin1 is a global placeholder for referring to state, province,
        or the particular term a country uses to define the geographic structure
        below the country level. Examples include states codes such as "CA", "IL",
        "NY", and provinces, such as "BC".
        * locality: Locality is a global placeholder for referring to city, town,
        or the particular term a country uses to define the geographic structure
        below the admin1 level. Examples include city names such as
        "Mountain View" and "New York".
        * extended_locality: Extended locality is concatenated version of admin1
        and locality with comma separator. For example, "Mountain View, CA" and
        "New York, NY".
        * postal_code: Postal code of profile which follows locale code.
        * country: Country code (ISO-3166-1 alpha-2 code) of profile, such as US,
         JP, GB.
        * job_title: Normalized job titles specified in EmploymentHistory.
        * company_name: Normalized company name of profiles to match on.
        * institution: The school name. For example, "MIT",
        "University of California, Berkeley"
        * degree: Highest education degree in ISCED code. Each value in degree
        covers a specific level of education, without any expansion to upper nor
        lower levels of education degree.
        * experience_in_months: experience in months. 0 means 0 month to 1 month
        (exclusive).
        * application_date: The application date specifies application start dates.
        See [ApplicationDateFilter][google.cloud.talent.v4beta1.ApplicationDateFilter] for more details.
        * application_outcome_notes: The application outcome reason specifies the
        reasons behind the outcome of the job application.
        See [ApplicationOutcomeNotesFilter][google.cloud.talent.v4beta1.ApplicationOutcomeNotesFilter] for more details.
        * application_job_title: The application job title specifies the job
        applied for in the application.
        See [ApplicationJobFilter][google.cloud.talent.v4beta1.ApplicationJobFilter] for more details.
        * hirable_status: Hirable status specifies the profile's hirable status.
        * string_custom_attribute: String custom attributes. Values can be accessed
        via square bracket notation like string_custom_attribute["key1"].
        * numeric_custom_attribute: Numeric custom attributes. Values can be
        accessed via square bracket notation like numeric_custom_attribute["key1"].

        Example expressions:

        * count(admin1)
        * count(experience_in_months, [bucket(0, 12, "1 year"),
        bucket(12, 36, "1-3 years"), bucket(36, MAX, "3+ years")])
        * count(string_custom_attribute["assigned_recruiter"])
        * count(numeric_custom_attribute["favorite_number"],
        [bucket(MIN, 0, "negative"), bucket(0, MAX, "non-negative")])
        """
        pass
    result_set_id: typing.Text = ...
    """An id that uniquely identifies the result set of a
    [SearchProfiles][google.cloud.talent.v4beta1.ProfileService.SearchProfiles] call. The id should be
    retrieved from the
    [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse] message returned from a previous
    invocation of [SearchProfiles][google.cloud.talent.v4beta1.ProfileService.SearchProfiles].

    A result set is an ordered list of search results.

    If this field is not set, a new result set is computed based on the
    [profile_query][google.cloud.talent.v4beta1.SearchProfilesRequest.profile_query].  A new [result_set_id][google.cloud.talent.v4beta1.SearchProfilesRequest.result_set_id] is returned as a handle to
    access this result set.

    If this field is set, the service will ignore the resource and
    [profile_query][google.cloud.talent.v4beta1.SearchProfilesRequest.profile_query] values, and simply retrieve a page of results from the
    corresponding result set.  In this case, one and only one of [page_token][google.cloud.talent.v4beta1.SearchProfilesRequest.page_token]
    or [offset][google.cloud.talent.v4beta1.SearchProfilesRequest.offset] must be set.

    A typical use case is to invoke [SearchProfilesRequest][google.cloud.talent.v4beta1.SearchProfilesRequest] without this
    field, then use the resulting [result_set_id][google.cloud.talent.v4beta1.SearchProfilesRequest.result_set_id] in
    [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse] to page through the results.
    """

    strict_keywords_search: builtins.bool = ...
    """This flag is used to indicate whether the service will attempt to
    understand synonyms and terms related to the search query or treat the
    query "as is" when it generates a set of results. By default this flag is
    set to false, thus allowing expanded results to also be returned. For
    example a search for "software engineer" might also return candidates who
    have experience in jobs similar to software engineer positions. By setting
    this flag to true, the service will only attempt to deliver candidates has
    software engineer in his/her global fields by treating "software engineer"
    as a keyword.

    It is recommended to provide a feature in the UI (such as a checkbox) to
    allow recruiters to set this flag to true if they intend to search for
    longer boolean strings.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        request_metadata : typing.Optional[google.cloud.talent.v4beta1.common_pb2.RequestMetadata] = ...,
        profile_query : typing.Optional[google.cloud.talent.v4beta1.filters_pb2.ProfileQuery] = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        offset : builtins.int = ...,
        disable_spell_check : builtins.bool = ...,
        order_by : typing.Text = ...,
        case_sensitive_sort : builtins.bool = ...,
        histogram_queries : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.histogram_pb2.HistogramQuery]] = ...,
        result_set_id : typing.Text = ...,
        strict_keywords_search : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["profile_query",b"profile_query","request_metadata",b"request_metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["case_sensitive_sort",b"case_sensitive_sort","disable_spell_check",b"disable_spell_check","histogram_queries",b"histogram_queries","offset",b"offset","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent","profile_query",b"profile_query","request_metadata",b"request_metadata","result_set_id",b"result_set_id","strict_keywords_search",b"strict_keywords_search"]) -> None: ...
global___SearchProfilesRequest = SearchProfilesRequest

class SearchProfilesResponse(google.protobuf.message.Message):
    """Response of SearchProfiles method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ESTIMATED_TOTAL_SIZE_FIELD_NUMBER: builtins.int
    SPELL_CORRECTION_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    HISTOGRAM_QUERY_RESULTS_FIELD_NUMBER: builtins.int
    SUMMARIZED_PROFILES_FIELD_NUMBER: builtins.int
    RESULT_SET_ID_FIELD_NUMBER: builtins.int
    estimated_total_size: builtins.int = ...
    """An estimation of the number of profiles that match the specified query.

    This number isn't guaranteed to be accurate.
    """

    @property
    def spell_correction(self) -> google.cloud.talent.v4beta1.common_pb2.SpellingCorrection:
        """The spell checking result, and correction."""
        pass
    @property
    def metadata(self) -> google.cloud.talent.v4beta1.common_pb2.ResponseMetadata:
        """Additional information for the API invocation, such as the request
        tracking id.
        """
        pass
    next_page_token: typing.Text = ...
    """A token to retrieve the next page of results. This is empty if there are no
    more results.
    """

    @property
    def histogram_query_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.talent.v4beta1.histogram_pb2.HistogramQueryResult]:
        """The histogram results that match with specified
        [SearchProfilesRequest.histogram_queries][google.cloud.talent.v4beta1.SearchProfilesRequest.histogram_queries].
        """
        pass
    @property
    def summarized_profiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SummarizedProfile]:
        """The profile entities that match the specified [SearchProfilesRequest][google.cloud.talent.v4beta1.SearchProfilesRequest]."""
        pass
    result_set_id: typing.Text = ...
    """An id that uniquely identifies the result set of a
    [SearchProfiles][google.cloud.talent.v4beta1.ProfileService.SearchProfiles] call for consistent
    results.
    """

    def __init__(self,
        *,
        estimated_total_size : builtins.int = ...,
        spell_correction : typing.Optional[google.cloud.talent.v4beta1.common_pb2.SpellingCorrection] = ...,
        metadata : typing.Optional[google.cloud.talent.v4beta1.common_pb2.ResponseMetadata] = ...,
        next_page_token : typing.Text = ...,
        histogram_query_results : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.histogram_pb2.HistogramQueryResult]] = ...,
        summarized_profiles : typing.Optional[typing.Iterable[global___SummarizedProfile]] = ...,
        result_set_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata",b"metadata","spell_correction",b"spell_correction"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["estimated_total_size",b"estimated_total_size","histogram_query_results",b"histogram_query_results","metadata",b"metadata","next_page_token",b"next_page_token","result_set_id",b"result_set_id","spell_correction",b"spell_correction","summarized_profiles",b"summarized_profiles"]) -> None: ...
global___SearchProfilesResponse = SearchProfilesResponse

class SummarizedProfile(google.protobuf.message.Message):
    """Profile entry with metadata inside [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROFILES_FIELD_NUMBER: builtins.int
    SUMMARY_FIELD_NUMBER: builtins.int
    @property
    def profiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.talent.v4beta1.profile_pb2.Profile]:
        """A list of profiles that are linked by [Profile.group_id][google.cloud.talent.v4beta1.Profile.group_id]."""
        pass
    @property
    def summary(self) -> google.cloud.talent.v4beta1.profile_pb2.Profile:
        """A profile summary shows the profile summary and how the profile matches the
        search query.

        In profile summary, the profiles with the same [Profile.group_id][google.cloud.talent.v4beta1.Profile.group_id] are
        merged together. Among profiles, same education/employment records may be
        slightly different but they are merged into one with best efforts.

        For example, in one profile the school name is "UC Berkeley" and the field
        study is "Computer Science" and in another one the school name is
        "University of California at Berkeley" and the field study is "CS". The API
        merges these two inputs into one and selects one value for each field. For
        example, the school name in summary is set to "University of California at
        Berkeley" and the field of study is set to "Computer Science".
        """
        pass
    def __init__(self,
        *,
        profiles : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.profile_pb2.Profile]] = ...,
        summary : typing.Optional[google.cloud.talent.v4beta1.profile_pb2.Profile] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["summary",b"summary"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["profiles",b"profiles","summary",b"summary"]) -> None: ...
global___SummarizedProfile = SummarizedProfile
