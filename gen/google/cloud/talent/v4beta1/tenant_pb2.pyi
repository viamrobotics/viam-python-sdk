"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Tenant(google.protobuf.message.Message):
    """A Tenant resource represents a tenant in the service. A tenant is a group or
    entity that shares common access with specific privileges for resources like
    profiles. Customer may create multiple tenants to provide data isolation for
    different groups.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DataUsageType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DataUsageTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DataUsageType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DATA_USAGE_TYPE_UNSPECIFIED: Tenant.DataUsageType.ValueType = ...  # 0
        """Default value."""

        AGGREGATED: Tenant.DataUsageType.ValueType = ...  # 1
        """Data owned by this tenant is used to improve search/recommendation
        quality across tenants.
        """

        ISOLATED: Tenant.DataUsageType.ValueType = ...  # 2
        """Data owned by this tenant is used to improve search/recommendation
        quality for this tenant only.
        """

    class DataUsageType(_DataUsageType, metaclass=_DataUsageTypeEnumTypeWrapper):
        """Enum that represents how user data owned by the tenant is used."""
        pass

    DATA_USAGE_TYPE_UNSPECIFIED: Tenant.DataUsageType.ValueType = ...  # 0
    """Default value."""

    AGGREGATED: Tenant.DataUsageType.ValueType = ...  # 1
    """Data owned by this tenant is used to improve search/recommendation
    quality across tenants.
    """

    ISOLATED: Tenant.DataUsageType.ValueType = ...  # 2
    """Data owned by this tenant is used to improve search/recommendation
    quality for this tenant only.
    """


    NAME_FIELD_NUMBER: builtins.int
    EXTERNAL_ID_FIELD_NUMBER: builtins.int
    USAGE_TYPE_FIELD_NUMBER: builtins.int
    KEYWORD_SEARCHABLE_PROFILE_CUSTOM_ATTRIBUTES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required during tenant update.

    The resource name for a tenant. This is generated by the service when a
    tenant is created.

    The format is "projects/{project_id}/tenants/{tenant_id}", for example,
    "projects/foo/tenants/bar".
    """

    external_id: typing.Text = ...
    """Required. Client side tenant identifier, used to uniquely identify the tenant.

    The maximum number of allowed characters is 255.
    """

    usage_type: global___Tenant.DataUsageType.ValueType = ...
    """Indicates whether data owned by this tenant may be used to provide product
    improvements across other tenants.

    Defaults behavior is [DataUsageType.ISOLATED][google.cloud.talent.v4beta1.Tenant.DataUsageType.ISOLATED] if it's unset.
    """

    @property
    def keyword_searchable_profile_custom_attributes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of keys of filterable [Profile.custom_attributes][google.cloud.talent.v4beta1.Profile.custom_attributes], whose
        corresponding `string_values` are used in keyword searches. Profiles with
        `string_values` under these specified field keys are returned if any
        of the values match the search keyword. Custom field values with
        parenthesis, brackets and special symbols are not searchable as-is,
        and must be surrounded by quotes.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        external_id : typing.Text = ...,
        usage_type : global___Tenant.DataUsageType.ValueType = ...,
        keyword_searchable_profile_custom_attributes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["external_id",b"external_id","keyword_searchable_profile_custom_attributes",b"keyword_searchable_profile_custom_attributes","name",b"name","usage_type",b"usage_type"]) -> None: ...
global___Tenant = Tenant
