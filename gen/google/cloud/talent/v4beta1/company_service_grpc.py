# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/talent/v4beta1/company_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.cloud.talent.v4beta1.common_pb2
import google.cloud.talent.v4beta1.company_pb2
import google.protobuf.empty_pb2
import google.protobuf.field_mask_pb2
import google.cloud.talent.v4beta1.company_service_pb2


class CompanyServiceBase(abc.ABC):

    @abc.abstractmethod
    async def CreateCompany(self, stream: 'grpclib.server.Stream[google.cloud.talent.v4beta1.company_service_pb2.CreateCompanyRequest, google.cloud.talent.v4beta1.company_pb2.Company]') -> None:
        pass

    @abc.abstractmethod
    async def GetCompany(self, stream: 'grpclib.server.Stream[google.cloud.talent.v4beta1.company_service_pb2.GetCompanyRequest, google.cloud.talent.v4beta1.company_pb2.Company]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateCompany(self, stream: 'grpclib.server.Stream[google.cloud.talent.v4beta1.company_service_pb2.UpdateCompanyRequest, google.cloud.talent.v4beta1.company_pb2.Company]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteCompany(self, stream: 'grpclib.server.Stream[google.cloud.talent.v4beta1.company_service_pb2.DeleteCompanyRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def ListCompanies(self, stream: 'grpclib.server.Stream[google.cloud.talent.v4beta1.company_service_pb2.ListCompaniesRequest, google.cloud.talent.v4beta1.company_service_pb2.ListCompaniesResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.talent.v4beta1.CompanyService/CreateCompany': grpclib.const.Handler(
                self.CreateCompany,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.talent.v4beta1.company_service_pb2.CreateCompanyRequest,
                google.cloud.talent.v4beta1.company_pb2.Company,
            ),
            '/google.cloud.talent.v4beta1.CompanyService/GetCompany': grpclib.const.Handler(
                self.GetCompany,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.talent.v4beta1.company_service_pb2.GetCompanyRequest,
                google.cloud.talent.v4beta1.company_pb2.Company,
            ),
            '/google.cloud.talent.v4beta1.CompanyService/UpdateCompany': grpclib.const.Handler(
                self.UpdateCompany,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.talent.v4beta1.company_service_pb2.UpdateCompanyRequest,
                google.cloud.talent.v4beta1.company_pb2.Company,
            ),
            '/google.cloud.talent.v4beta1.CompanyService/DeleteCompany': grpclib.const.Handler(
                self.DeleteCompany,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.talent.v4beta1.company_service_pb2.DeleteCompanyRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.cloud.talent.v4beta1.CompanyService/ListCompanies': grpclib.const.Handler(
                self.ListCompanies,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.talent.v4beta1.company_service_pb2.ListCompaniesRequest,
                google.cloud.talent.v4beta1.company_service_pb2.ListCompaniesResponse,
            ),
        }


class CompanyServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateCompany = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.talent.v4beta1.CompanyService/CreateCompany',
            google.cloud.talent.v4beta1.company_service_pb2.CreateCompanyRequest,
            google.cloud.talent.v4beta1.company_pb2.Company,
        )
        self.GetCompany = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.talent.v4beta1.CompanyService/GetCompany',
            google.cloud.talent.v4beta1.company_service_pb2.GetCompanyRequest,
            google.cloud.talent.v4beta1.company_pb2.Company,
        )
        self.UpdateCompany = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.talent.v4beta1.CompanyService/UpdateCompany',
            google.cloud.talent.v4beta1.company_service_pb2.UpdateCompanyRequest,
            google.cloud.talent.v4beta1.company_pb2.Company,
        )
        self.DeleteCompany = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.talent.v4beta1.CompanyService/DeleteCompany',
            google.cloud.talent.v4beta1.company_service_pb2.DeleteCompanyRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.ListCompanies = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.talent.v4beta1.CompanyService/ListCompanies',
            google.cloud.talent.v4beta1.company_service_pb2.ListCompaniesRequest,
            google.cloud.talent.v4beta1.company_service_pb2.ListCompaniesResponse,
        )
