"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.pubsublite.v1.common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class InitialCommitCursorRequest(google.protobuf.message.Message):
    """The first streaming request that must be sent on a newly-opened stream. The
    client must wait for the response before sending subsequent requests on the
    stream.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUBSCRIPTION_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    subscription: typing.Text = ...
    """The subscription for which to manage committed cursors."""

    partition: builtins.int = ...
    """The partition for which to manage committed cursors. Partitions are zero
    indexed, so `partition` must be in the range [0, topic.num_partitions).
    """

    def __init__(self,
        *,
        subscription : typing.Text = ...,
        partition : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["partition",b"partition","subscription",b"subscription"]) -> None: ...
global___InitialCommitCursorRequest = InitialCommitCursorRequest

class InitialCommitCursorResponse(google.protobuf.message.Message):
    """Response to an InitialCommitCursorRequest."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___InitialCommitCursorResponse = InitialCommitCursorResponse

class SequencedCommitCursorRequest(google.protobuf.message.Message):
    """Streaming request to update the committed cursor. Subsequent
    SequencedCommitCursorRequests override outstanding ones.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CURSOR_FIELD_NUMBER: builtins.int
    @property
    def cursor(self) -> google.cloud.pubsublite.v1.common_pb2.Cursor:
        """The new value for the committed cursor."""
        pass
    def __init__(self,
        *,
        cursor : typing.Optional[google.cloud.pubsublite.v1.common_pb2.Cursor] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cursor",b"cursor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cursor",b"cursor"]) -> None: ...
global___SequencedCommitCursorRequest = SequencedCommitCursorRequest

class SequencedCommitCursorResponse(google.protobuf.message.Message):
    """Response to a SequencedCommitCursorRequest."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACKNOWLEDGED_COMMITS_FIELD_NUMBER: builtins.int
    acknowledged_commits: builtins.int = ...
    """The number of outstanding SequencedCommitCursorRequests acknowledged by
    this response. Note that SequencedCommitCursorRequests are acknowledged in
    the order that they are received.
    """

    def __init__(self,
        *,
        acknowledged_commits : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["acknowledged_commits",b"acknowledged_commits"]) -> None: ...
global___SequencedCommitCursorResponse = SequencedCommitCursorResponse

class StreamingCommitCursorRequest(google.protobuf.message.Message):
    """A request sent from the client to the server on a stream."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INITIAL_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    @property
    def initial(self) -> global___InitialCommitCursorRequest:
        """Initial request on the stream."""
        pass
    @property
    def commit(self) -> global___SequencedCommitCursorRequest:
        """Request to commit a new cursor value."""
        pass
    def __init__(self,
        *,
        initial : typing.Optional[global___InitialCommitCursorRequest] = ...,
        commit : typing.Optional[global___SequencedCommitCursorRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["commit",b"commit","initial",b"initial","request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","initial",b"initial","request",b"request"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["request",b"request"]) -> typing.Optional[typing_extensions.Literal["initial","commit"]]: ...
global___StreamingCommitCursorRequest = StreamingCommitCursorRequest

class StreamingCommitCursorResponse(google.protobuf.message.Message):
    """Response to a StreamingCommitCursorRequest."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INITIAL_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    @property
    def initial(self) -> global___InitialCommitCursorResponse:
        """Initial response on the stream."""
        pass
    @property
    def commit(self) -> global___SequencedCommitCursorResponse:
        """Response to committing a new cursor value."""
        pass
    def __init__(self,
        *,
        initial : typing.Optional[global___InitialCommitCursorResponse] = ...,
        commit : typing.Optional[global___SequencedCommitCursorResponse] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["commit",b"commit","initial",b"initial","request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","initial",b"initial","request",b"request"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["request",b"request"]) -> typing.Optional[typing_extensions.Literal["initial","commit"]]: ...
global___StreamingCommitCursorResponse = StreamingCommitCursorResponse

class CommitCursorRequest(google.protobuf.message.Message):
    """Request for CommitCursor."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUBSCRIPTION_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    CURSOR_FIELD_NUMBER: builtins.int
    subscription: typing.Text = ...
    """The subscription for which to update the cursor."""

    partition: builtins.int = ...
    """The partition for which to update the cursor. Partitions are zero indexed,
    so `partition` must be in the range [0, topic.num_partitions).
    """

    @property
    def cursor(self) -> google.cloud.pubsublite.v1.common_pb2.Cursor:
        """The new value for the committed cursor."""
        pass
    def __init__(self,
        *,
        subscription : typing.Text = ...,
        partition : builtins.int = ...,
        cursor : typing.Optional[google.cloud.pubsublite.v1.common_pb2.Cursor] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cursor",b"cursor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cursor",b"cursor","partition",b"partition","subscription",b"subscription"]) -> None: ...
global___CommitCursorRequest = CommitCursorRequest

class CommitCursorResponse(google.protobuf.message.Message):
    """Response for CommitCursor."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___CommitCursorResponse = CommitCursorResponse

class ListPartitionCursorsRequest(google.protobuf.message.Message):
    """Request for ListPartitionCursors."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The subscription for which to retrieve cursors.
    Structured like
    `projects/{project_number}/locations/{location}/subscriptions/{subscription_id}`.
    """

    page_size: builtins.int = ...
    """The maximum number of cursors to return. The service may return fewer than
    this value.
    If unset or zero, all cursors for the parent will be returned.
    """

    page_token: typing.Text = ...
    """A page token, received from a previous `ListPartitionCursors` call.
    Provide this to retrieve the subsequent page.

    When paginating, all other parameters provided to `ListPartitionCursors`
    must match the call that provided the page token.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListPartitionCursorsRequest = ListPartitionCursorsRequest

class PartitionCursor(google.protobuf.message.Message):
    """A pair of a Cursor and the partition it is for."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARTITION_FIELD_NUMBER: builtins.int
    CURSOR_FIELD_NUMBER: builtins.int
    partition: builtins.int = ...
    """The partition this is for."""

    @property
    def cursor(self) -> google.cloud.pubsublite.v1.common_pb2.Cursor:
        """The value of the cursor."""
        pass
    def __init__(self,
        *,
        partition : builtins.int = ...,
        cursor : typing.Optional[google.cloud.pubsublite.v1.common_pb2.Cursor] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cursor",b"cursor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cursor",b"cursor","partition",b"partition"]) -> None: ...
global___PartitionCursor = PartitionCursor

class ListPartitionCursorsResponse(google.protobuf.message.Message):
    """Response for ListPartitionCursors"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARTITION_CURSORS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def partition_cursors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PartitionCursor]:
        """The partition cursors from this request."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    def __init__(self,
        *,
        partition_cursors : typing.Optional[typing.Iterable[global___PartitionCursor]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","partition_cursors",b"partition_cursors"]) -> None: ...
global___ListPartitionCursorsResponse = ListPartitionCursorsResponse
