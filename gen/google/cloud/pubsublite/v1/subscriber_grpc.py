# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/pubsublite/v1/subscriber.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.field_behavior_pb2
import google.cloud.pubsublite.v1.common_pb2
import google.api.annotations_pb2
import google.api.client_pb2
import google.cloud.pubsublite.v1.subscriber_pb2


class SubscriberServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Subscribe(self, stream: 'grpclib.server.Stream[google.cloud.pubsublite.v1.subscriber_pb2.SubscribeRequest, google.cloud.pubsublite.v1.subscriber_pb2.SubscribeResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.pubsublite.v1.SubscriberService/Subscribe': grpclib.const.Handler(
                self.Subscribe,
                grpclib.const.Cardinality.STREAM_STREAM,
                google.cloud.pubsublite.v1.subscriber_pb2.SubscribeRequest,
                google.cloud.pubsublite.v1.subscriber_pb2.SubscribeResponse,
            ),
        }


class SubscriberServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Subscribe = grpclib.client.StreamStreamMethod(
            channel,
            '/google.cloud.pubsublite.v1.SubscriberService/Subscribe',
            google.cloud.pubsublite.v1.subscriber_pb2.SubscribeRequest,
            google.cloud.pubsublite.v1.subscriber_pb2.SubscribeResponse,
        )


class PartitionAssignmentServiceBase(abc.ABC):

    @abc.abstractmethod
    async def AssignPartitions(self, stream: 'grpclib.server.Stream[google.cloud.pubsublite.v1.subscriber_pb2.PartitionAssignmentRequest, google.cloud.pubsublite.v1.subscriber_pb2.PartitionAssignment]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.pubsublite.v1.PartitionAssignmentService/AssignPartitions': grpclib.const.Handler(
                self.AssignPartitions,
                grpclib.const.Cardinality.STREAM_STREAM,
                google.cloud.pubsublite.v1.subscriber_pb2.PartitionAssignmentRequest,
                google.cloud.pubsublite.v1.subscriber_pb2.PartitionAssignment,
            ),
        }


class PartitionAssignmentServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.AssignPartitions = grpclib.client.StreamStreamMethod(
            channel,
            '/google.cloud.pubsublite.v1.PartitionAssignmentService/AssignPartitions',
            google.cloud.pubsublite.v1.subscriber_pb2.PartitionAssignmentRequest,
            google.cloud.pubsublite.v1.subscriber_pb2.PartitionAssignment,
        )
