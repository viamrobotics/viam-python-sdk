"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Membership(google.protobuf.message.Message):
    """Membership contains information about a member cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _InfrastructureType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InfrastructureTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InfrastructureType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INFRASTRUCTURE_TYPE_UNSPECIFIED: Membership.InfrastructureType.ValueType = ...  # 0
        """No type was specified. Some Hub functionality may require a type be
        specified, and will not support Memberships with this value.
        """

        ON_PREM: Membership.InfrastructureType.ValueType = ...  # 1
        """Private infrastructure that is owned or operated by customer. This
        includes GKE distributions such as GKE-OnPrem and GKE-OnBareMetal.
        """

        MULTI_CLOUD: Membership.InfrastructureType.ValueType = ...  # 2
        """Public cloud infrastructure."""

    class InfrastructureType(_InfrastructureType, metaclass=_InfrastructureTypeEnumTypeWrapper):
        """Specifies the infrastructure type of a Membership. Infrastructure type is
        used by Hub to control infrastructure-specific behavior, including pricing.

        Each GKE distribution (on-GCP, on-Prem, on-X,...) will set this field
        automatically, but Attached Clusters customers should specify a type
        during registration.
        """
        pass

    INFRASTRUCTURE_TYPE_UNSPECIFIED: Membership.InfrastructureType.ValueType = ...  # 0
    """No type was specified. Some Hub functionality may require a type be
    specified, and will not support Memberships with this value.
    """

    ON_PREM: Membership.InfrastructureType.ValueType = ...  # 1
    """Private infrastructure that is owned or operated by customer. This
    includes GKE distributions such as GKE-OnPrem and GKE-OnBareMetal.
    """

    MULTI_CLOUD: Membership.InfrastructureType.ValueType = ...  # 2
    """Public cloud infrastructure."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ENDPOINT_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    AUTHORITY_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    DELETE_TIME_FIELD_NUMBER: builtins.int
    EXTERNAL_ID_FIELD_NUMBER: builtins.int
    LAST_CONNECTION_TIME_FIELD_NUMBER: builtins.int
    UNIQUE_ID_FIELD_NUMBER: builtins.int
    INFRASTRUCTURE_TYPE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The full, unique name of this Membership resource in the format
    `projects/*/locations/*/memberships/{membership_id}`, set during creation.

    `membership_id` must be a valid RFC 1123 compliant DNS label:

      1. At most 63 characters in length
      2. It must consist of lower case alphanumeric characters or `-`
      3. It must start and end with an alphanumeric character

    Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`,
    with a maximum length of 63 characters.
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional. GCP labels for this membership."""
        pass
    description: typing.Text = ...
    """Optional. Description of this membership, limited to 63 characters.
    Must match the regex: `[a-zA-Z0-9][a-zA-Z0-9_\\-\\.\\ ]*`
    """

    @property
    def endpoint(self) -> global___MembershipEndpoint:
        """Optional. Endpoint information to reach this member."""
        pass
    @property
    def state(self) -> global___MembershipState:
        """Output only. State of the Membership resource."""
        pass
    @property
    def authority(self) -> global___Authority:
        """Optional. How to identify workloads from this Membership.
        See the documentation on Workload Identity for more details:
        https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. When the Membership was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. When the Membership was last updated."""
        pass
    @property
    def delete_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. When the Membership was deleted."""
        pass
    external_id: typing.Text = ...
    """Optional. An externally-generated and managed ID for this Membership. This ID may
    be modified after creation, but this is not recommended. For GKE clusters,
    external_id is managed by the Hub API and updates will be ignored.

    The ID must match the regex: `[a-zA-Z0-9][a-zA-Z0-9_\\-\\.]*`

    If this Membership represents a Kubernetes cluster, this value should be
    set to the UID of the `kube-system` namespace object.
    """

    @property
    def last_connection_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. For clusters using Connect, the timestamp of the most recent connection
        established with Google Cloud. This time is updated every several minutes,
        not continuously. For clusters that do not use GKE Connect, or that have
        never connected successfully, this field will be unset.
        """
        pass
    unique_id: typing.Text = ...
    """Output only. Google-generated UUID for this resource. This is unique across all
    Membership resources. If a Membership resource is deleted and another
    resource with the same name is created, it gets a different unique_id.
    """

    infrastructure_type: global___Membership.InfrastructureType.ValueType = ...
    """Optional. The infrastructure type this Membership is running on."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        description : typing.Text = ...,
        endpoint : typing.Optional[global___MembershipEndpoint] = ...,
        state : typing.Optional[global___MembershipState] = ...,
        authority : typing.Optional[global___Authority] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        delete_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        external_id : typing.Text = ...,
        last_connection_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        unique_id : typing.Text = ...,
        infrastructure_type : global___Membership.InfrastructureType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["authority",b"authority","create_time",b"create_time","delete_time",b"delete_time","endpoint",b"endpoint","last_connection_time",b"last_connection_time","state",b"state","type",b"type","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authority",b"authority","create_time",b"create_time","delete_time",b"delete_time","description",b"description","endpoint",b"endpoint","external_id",b"external_id","infrastructure_type",b"infrastructure_type","labels",b"labels","last_connection_time",b"last_connection_time","name",b"name","state",b"state","type",b"type","unique_id",b"unique_id","update_time",b"update_time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type",b"type"]) -> typing.Optional[typing_extensions.Literal["endpoint"]]: ...
global___Membership = Membership

class MembershipEndpoint(google.protobuf.message.Message):
    """MembershipEndpoint contains information needed to contact a Kubernetes API,
    endpoint and any additional Kubernetes metadata.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GKE_CLUSTER_FIELD_NUMBER: builtins.int
    ON_PREM_CLUSTER_FIELD_NUMBER: builtins.int
    MULTI_CLOUD_CLUSTER_FIELD_NUMBER: builtins.int
    KUBERNETES_METADATA_FIELD_NUMBER: builtins.int
    KUBERNETES_RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def gke_cluster(self) -> global___GkeCluster:
        """Optional. Specific information for a GKE-on-GCP cluster."""
        pass
    @property
    def on_prem_cluster(self) -> global___OnPremCluster:
        """Optional. Specific information for a GKE On-Prem cluster."""
        pass
    @property
    def multi_cloud_cluster(self) -> global___MultiCloudCluster:
        """Optional. Specific information for a GKE Multi-Cloud cluster."""
        pass
    @property
    def kubernetes_metadata(self) -> global___KubernetesMetadata:
        """Output only. Useful Kubernetes-specific metadata."""
        pass
    @property
    def kubernetes_resource(self) -> global___KubernetesResource:
        """Optional. The in-cluster Kubernetes Resources that should be applied for a correctly
        registered cluster, in the steady state. These resources:

          * Ensure that the cluster is exclusively registered to one and only one
            Hub Membership.
          * Propagate Workload Pool Information available in the Membership
            Authority field.
          * Ensure proper initial configuration of default Hub Features.
        """
        pass
    def __init__(self,
        *,
        gke_cluster : typing.Optional[global___GkeCluster] = ...,
        on_prem_cluster : typing.Optional[global___OnPremCluster] = ...,
        multi_cloud_cluster : typing.Optional[global___MultiCloudCluster] = ...,
        kubernetes_metadata : typing.Optional[global___KubernetesMetadata] = ...,
        kubernetes_resource : typing.Optional[global___KubernetesResource] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["gke_cluster",b"gke_cluster","kubernetes_metadata",b"kubernetes_metadata","kubernetes_resource",b"kubernetes_resource","multi_cloud_cluster",b"multi_cloud_cluster","on_prem_cluster",b"on_prem_cluster","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["gke_cluster",b"gke_cluster","kubernetes_metadata",b"kubernetes_metadata","kubernetes_resource",b"kubernetes_resource","multi_cloud_cluster",b"multi_cloud_cluster","on_prem_cluster",b"on_prem_cluster","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type",b"type"]) -> typing.Optional[typing_extensions.Literal["gke_cluster","on_prem_cluster","multi_cloud_cluster"]]: ...
global___MembershipEndpoint = MembershipEndpoint

class KubernetesResource(google.protobuf.message.Message):
    """KubernetesResource contains the YAML manifests and configuration for
    Membership Kubernetes resources in the cluster. After CreateMembership or
    UpdateMembership, these resources should be re-applied in the cluster.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MEMBERSHIP_CR_MANIFEST_FIELD_NUMBER: builtins.int
    MEMBERSHIP_RESOURCES_FIELD_NUMBER: builtins.int
    CONNECT_RESOURCES_FIELD_NUMBER: builtins.int
    RESOURCE_OPTIONS_FIELD_NUMBER: builtins.int
    membership_cr_manifest: typing.Text = ...
    """Input only. The YAML representation of the Membership CR. This field is ignored for GKE
    clusters where Hub can read the CR directly.

    Callers should provide the CR that is currently present in the cluster
    during CreateMembership or UpdateMembership, or leave this field empty if
    none exists. The CR manifest is used to validate the cluster has not been
    registered with another Membership.
    """

    @property
    def membership_resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourceManifest]:
        """Output only. Additional Kubernetes resources that need to be applied to the cluster
        after Membership creation, and after every update.

        This field is only populated in the Membership returned from a successful
        long-running operation from CreateMembership or UpdateMembership. It is not
        populated during normal GetMembership or ListMemberships requests. To get
        the resource manifest after the initial registration, the caller should
        make a UpdateMembership call with an empty field mask.
        """
        pass
    @property
    def connect_resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourceManifest]:
        """Output only. The Kubernetes resources for installing the GKE Connect agent

        This field is only populated in the Membership returned from a successful
        long-running operation from CreateMembership or UpdateMembership. It is not
        populated during normal GetMembership or ListMemberships requests. To get
        the resource manifest after the initial registration, the caller should
        make a UpdateMembership call with an empty field mask.
        """
        pass
    @property
    def resource_options(self) -> global___ResourceOptions:
        """Optional. Options for Kubernetes resource generation."""
        pass
    def __init__(self,
        *,
        membership_cr_manifest : typing.Text = ...,
        membership_resources : typing.Optional[typing.Iterable[global___ResourceManifest]] = ...,
        connect_resources : typing.Optional[typing.Iterable[global___ResourceManifest]] = ...,
        resource_options : typing.Optional[global___ResourceOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_options",b"resource_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connect_resources",b"connect_resources","membership_cr_manifest",b"membership_cr_manifest","membership_resources",b"membership_resources","resource_options",b"resource_options"]) -> None: ...
global___KubernetesResource = KubernetesResource

class ResourceOptions(google.protobuf.message.Message):
    """ResourceOptions represent options for Kubernetes resource generation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONNECT_VERSION_FIELD_NUMBER: builtins.int
    V1BETA1_CRD_FIELD_NUMBER: builtins.int
    connect_version: typing.Text = ...
    """Optional. The Connect agent version to use for connect_resources. Defaults to the
    latest GKE Connect version. The version must be a currently supported
    version, obsolete versions will be rejected.
    """

    v1beta1_crd: builtins.bool = ...
    """Optional. Use `apiextensions/v1beta1` instead of `apiextensions/v1` for
    CustomResourceDefinition resources.
    This option should be set for clusters with Kubernetes apiserver versions
    <1.16.
    """

    def __init__(self,
        *,
        connect_version : typing.Text = ...,
        v1beta1_crd : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["connect_version",b"connect_version","v1beta1_crd",b"v1beta1_crd"]) -> None: ...
global___ResourceOptions = ResourceOptions

class ResourceManifest(google.protobuf.message.Message):
    """ResourceManifest represents a single Kubernetes resource to be applied to
    the cluster.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MANIFEST_FIELD_NUMBER: builtins.int
    CLUSTER_SCOPED_FIELD_NUMBER: builtins.int
    manifest: typing.Text = ...
    """YAML manifest of the resource."""

    cluster_scoped: builtins.bool = ...
    """Whether the resource provided in the manifest is `cluster_scoped`.
    If unset, the manifest is assumed to be namespace scoped.

    This field is used for REST mapping when applying the resource in a
    cluster.
    """

    def __init__(self,
        *,
        manifest : typing.Text = ...,
        cluster_scoped : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_scoped",b"cluster_scoped","manifest",b"manifest"]) -> None: ...
global___ResourceManifest = ResourceManifest

class GkeCluster(google.protobuf.message.Message):
    """GkeCluster contains information specific to GKE clusters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_LINK_FIELD_NUMBER: builtins.int
    CLUSTER_MISSING_FIELD_NUMBER: builtins.int
    resource_link: typing.Text = ...
    """Immutable. Self-link of the GCP resource for the GKE cluster. For example:

        //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster

    Zonal clusters are also supported.
    """

    cluster_missing: builtins.bool = ...
    """Output only. If cluster_missing is set then it denotes that the GKE cluster no longer
    exists in the GKE Control Plane.
    """

    def __init__(self,
        *,
        resource_link : typing.Text = ...,
        cluster_missing : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_missing",b"cluster_missing","resource_link",b"resource_link"]) -> None: ...
global___GkeCluster = GkeCluster

class OnPremCluster(google.protobuf.message.Message):
    """OnPremCluster contains information specific to GKE On-Prem clusters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_LINK_FIELD_NUMBER: builtins.int
    CLUSTER_MISSING_FIELD_NUMBER: builtins.int
    ADMIN_CLUSTER_FIELD_NUMBER: builtins.int
    resource_link: typing.Text = ...
    """Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example:

     //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster
     //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster
    """

    cluster_missing: builtins.bool = ...
    """Output only. If cluster_missing is set then it denotes that
    API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no
    longer exists.
    """

    admin_cluster: builtins.bool = ...
    """Immutable. Whether the cluster is an admin cluster."""

    def __init__(self,
        *,
        resource_link : typing.Text = ...,
        cluster_missing : builtins.bool = ...,
        admin_cluster : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["admin_cluster",b"admin_cluster","cluster_missing",b"cluster_missing","resource_link",b"resource_link"]) -> None: ...
global___OnPremCluster = OnPremCluster

class MultiCloudCluster(google.protobuf.message.Message):
    """MultiCloudCluster contains information specific to GKE Multi-Cloud clusters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_LINK_FIELD_NUMBER: builtins.int
    CLUSTER_MISSING_FIELD_NUMBER: builtins.int
    resource_link: typing.Text = ...
    """Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For
    example:

     //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster
     //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster
    """

    cluster_missing: builtins.bool = ...
    """Output only. If cluster_missing is set then it denotes that
    API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster
    no longer exists.
    """

    def __init__(self,
        *,
        resource_link : typing.Text = ...,
        cluster_missing : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_missing",b"cluster_missing","resource_link",b"resource_link"]) -> None: ...
global___MultiCloudCluster = MultiCloudCluster

class KubernetesMetadata(google.protobuf.message.Message):
    """KubernetesMetadata provides informational metadata for Memberships
    representing Kubernetes clusters.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KUBERNETES_API_SERVER_VERSION_FIELD_NUMBER: builtins.int
    NODE_PROVIDER_ID_FIELD_NUMBER: builtins.int
    NODE_COUNT_FIELD_NUMBER: builtins.int
    VCPU_COUNT_FIELD_NUMBER: builtins.int
    MEMORY_MB_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    kubernetes_api_server_version: typing.Text = ...
    """Output only. Kubernetes API server version string as reported by '/version'."""

    node_provider_id: typing.Text = ...
    """Output only. Node providerID as reported by the first node in the list of nodes on
    the Kubernetes endpoint. On Kubernetes platforms that support zero-node
    clusters (like GKE-on-GCP), the node_count will be zero and the
    node_provider_id will be empty.
    """

    node_count: builtins.int = ...
    """Output only. Node count as reported by Kubernetes nodes resources."""

    vcpu_count: builtins.int = ...
    """Output only. vCPU count as reported by Kubernetes nodes resources."""

    memory_mb: builtins.int = ...
    """Output only. The total memory capacity as reported by the sum of all Kubernetes nodes
    resources, defined in MB.
    """

    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time at which these details were last updated. This update_time is
        different from the Membership-level update_time since EndpointDetails are
        updated internally for API consumers.
        """
        pass
    def __init__(self,
        *,
        kubernetes_api_server_version : typing.Text = ...,
        node_provider_id : typing.Text = ...,
        node_count : builtins.int = ...,
        vcpu_count : builtins.int = ...,
        memory_mb : builtins.int = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["kubernetes_api_server_version",b"kubernetes_api_server_version","memory_mb",b"memory_mb","node_count",b"node_count","node_provider_id",b"node_provider_id","update_time",b"update_time","vcpu_count",b"vcpu_count"]) -> None: ...
global___KubernetesMetadata = KubernetesMetadata

class Authority(google.protobuf.message.Message):
    """Authority encodes how Google will recognize identities from this Membership.
    See the workload identity documentation for more details:
    https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ISSUER_FIELD_NUMBER: builtins.int
    WORKLOAD_IDENTITY_POOL_FIELD_NUMBER: builtins.int
    IDENTITY_PROVIDER_FIELD_NUMBER: builtins.int
    OIDC_JWKS_FIELD_NUMBER: builtins.int
    issuer: typing.Text = ...
    """Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and
    be a valid URL with length <2000 characters.

    If set, then Google will allow valid OIDC tokens from this issuer to
    authenticate within the workload_identity_pool. OIDC discovery will be
    performed on this URI to validate tokens from the issuer.

    Clearing `issuer` disables Workload Identity. `issuer` cannot be directly
    modified; it must be cleared (and Workload Identity disabled) before using
    a new issuer (and re-enabling Workload Identity).
    """

    workload_identity_pool: typing.Text = ...
    """Output only. The name of the workload identity pool in which `issuer` will be
    recognized.

    There is a single Workload Identity Pool per Hub that is shared
    between all Memberships that belong to that Hub. For a Hub hosted in
    {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`,
    although this is subject to change in newer versions of this API.
    """

    identity_provider: typing.Text = ...
    """Output only. An identity provider that reflects the `issuer` in the workload identity
    pool.
    """

    oidc_jwks: builtins.bytes = ...
    """Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517).

    When this field is set, OIDC discovery will NOT be performed on `issuer`,
    and instead OIDC tokens will be validated using this field.
    """

    def __init__(self,
        *,
        issuer : typing.Text = ...,
        workload_identity_pool : typing.Text = ...,
        identity_provider : typing.Text = ...,
        oidc_jwks : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["identity_provider",b"identity_provider","issuer",b"issuer","oidc_jwks",b"oidc_jwks","workload_identity_pool",b"workload_identity_pool"]) -> None: ...
global___Authority = Authority

class MembershipState(google.protobuf.message.Message):
    """State of the Membership resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Code:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Code.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CODE_UNSPECIFIED: MembershipState.Code.ValueType = ...  # 0
        """The code is not set."""

        CREATING: MembershipState.Code.ValueType = ...  # 1
        """The cluster is being registered."""

        READY: MembershipState.Code.ValueType = ...  # 2
        """The cluster is registered."""

        DELETING: MembershipState.Code.ValueType = ...  # 3
        """The cluster is being unregistered."""

        UPDATING: MembershipState.Code.ValueType = ...  # 4
        """The Membership is being updated."""

        SERVICE_UPDATING: MembershipState.Code.ValueType = ...  # 5
        """The Membership is being updated by the Hub Service."""

    class Code(_Code, metaclass=_CodeEnumTypeWrapper):
        """Code describes the state of a Membership resource."""
        pass

    CODE_UNSPECIFIED: MembershipState.Code.ValueType = ...  # 0
    """The code is not set."""

    CREATING: MembershipState.Code.ValueType = ...  # 1
    """The cluster is being registered."""

    READY: MembershipState.Code.ValueType = ...  # 2
    """The cluster is registered."""

    DELETING: MembershipState.Code.ValueType = ...  # 3
    """The cluster is being unregistered."""

    UPDATING: MembershipState.Code.ValueType = ...  # 4
    """The Membership is being updated."""

    SERVICE_UPDATING: MembershipState.Code.ValueType = ...  # 5
    """The Membership is being updated by the Hub Service."""


    CODE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    code: global___MembershipState.Code.ValueType = ...
    """Output only. The current state of the Membership resource."""

    description: typing.Text = ...
    """This field is never set by the Hub Service."""

    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """This field is never set by the Hub Service."""
        pass
    def __init__(self,
        *,
        code : global___MembershipState.Code.ValueType = ...,
        description : typing.Text = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","description",b"description","update_time",b"update_time"]) -> None: ...
global___MembershipState = MembershipState

class ListMembershipsRequest(google.protobuf.message.Message):
    """Request message for `GkeHubMembershipService.ListMemberships` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent (project and location) where the Memberships will be listed.
    Specified in the format `projects/*/locations/*`.
    """

    page_size: builtins.int = ...
    """Optional. When requesting a 'page' of resources, `page_size` specifies number of
    resources to return. If unspecified or set to 0, all resources will
    be returned.
    """

    page_token: typing.Text = ...
    """Optional. Token returned by previous call to `ListMemberships` which
    specifies the position in the list from where to continue listing the
    resources.
    """

    filter: typing.Text = ...
    """Optional. Lists Memberships that match the filter expression, following the syntax
    outlined in https://google.aip.dev/160.

    Examples:

      - Name is `bar` in project `foo-proj` and location `global`:

          name = "projects/foo-proj/locations/global/membership/bar"

      - Memberships that have a label called `foo`:

          labels.foo:*

      - Memberships that have a label called `foo` whose value is `bar`:

          labels.foo = bar

      - Memberships in the CREATING state:

          state = CREATING
    """

    order_by: typing.Text = ...
    """Optional. One or more fields to compare and use to sort the output.
    See https://google.aip.dev/132#ordering.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListMembershipsRequest = ListMembershipsRequest

class ListMembershipsResponse(google.protobuf.message.Message):
    """Response message for the `GkeHubMembershipService.ListMemberships` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Membership]:
        """The list of matching Memberships."""
        pass
    next_page_token: typing.Text = ...
    """A token to request the next page of resources from the
    `ListMemberships` method. The value of an empty string means that
    there are no more resources to return.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of locations that could not be reached while fetching this list."""
        pass
    def __init__(self,
        *,
        resources : typing.Optional[typing.Iterable[global___Membership]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","resources",b"resources","unreachable",b"unreachable"]) -> None: ...
global___ListMembershipsResponse = ListMembershipsResponse

class GetMembershipRequest(google.protobuf.message.Message):
    """Request message for `GkeHubMembershipService.GetMembership` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The Membership resource name in the format
    `projects/*/locations/*/memberships/*`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetMembershipRequest = GetMembershipRequest

class CreateMembershipRequest(google.protobuf.message.Message):
    """Request message for the `GkeHubMembershipService.CreateMembership` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    MEMBERSHIP_ID_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent (project and location) where the Memberships will be created.
    Specified in the format `projects/*/locations/*`.
    """

    membership_id: typing.Text = ...
    """Required. Client chosen ID for the membership. `membership_id` must be a valid RFC
    1123 compliant DNS label:

      1. At most 63 characters in length
      2. It must consist of lower case alphanumeric characters or `-`
      3. It must start and end with an alphanumeric character

    Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`,
    with a maximum length of 63 characters.
    """

    @property
    def resource(self) -> global___Membership:
        """Required. The membership to create."""
        pass
    request_id: typing.Text = ...
    """Optional. A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes after the first request.

    For example, consider a situation where you make an initial request and
    the request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        membership_id : typing.Text = ...,
        resource : typing.Optional[global___Membership] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["membership_id",b"membership_id","parent",b"parent","request_id",b"request_id","resource",b"resource"]) -> None: ...
global___CreateMembershipRequest = CreateMembershipRequest

class DeleteMembershipRequest(google.protobuf.message.Message):
    """Request message for `GkeHubMembershipService.DeleteMembership` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The Membership resource name in the format
    `projects/*/locations/*/memberships/*`.
    """

    request_id: typing.Text = ...
    """Optional. A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes after the first request.

    For example, consider a situation where you make an initial request and
    the request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteMembershipRequest = DeleteMembershipRequest

class UpdateMembershipRequest(google.protobuf.message.Message):
    """Request message for `GkeHubMembershipService.UpdateMembership` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The membership resource name in the format:
    `projects/[project_id]/locations/global/memberships/[membership_id]`
    """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. Mask of fields to update. At least one field path must be specified in this
        mask.
        """
        pass
    @property
    def resource(self) -> global___Membership:
        """Required. Only fields specified in update_mask are updated.
        If you specify a field in the update_mask but don't specify its value here
        that field will be deleted.
        If you are updating a map field, set the value of a key to null or empty
        string to delete the key from the map. It's not possible to update a key's
        value to the empty string.
        If you specify the update_mask to be a special path "*", fully replaces all
        user-modifiable fields to match `resource`.
        """
        pass
    request_id: typing.Text = ...
    """Optional. A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes after the first request.

    For example, consider a situation where you make an initial request and
    the request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        resource : typing.Optional[global___Membership] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id","resource",b"resource","update_mask",b"update_mask"]) -> None: ...
global___UpdateMembershipRequest = UpdateMembershipRequest

class GenerateConnectManifestRequest(google.protobuf.message.Message):
    """Request message for `GkeHubMembershipService.GenerateConnectManifest`
    method.
    .
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    CONNECT_AGENT_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    IS_UPGRADE_FIELD_NUMBER: builtins.int
    REGISTRY_FIELD_NUMBER: builtins.int
    IMAGE_PULL_SECRET_CONTENT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The Membership resource name the Agent will associate with, in the format
    `projects/*/locations/*/memberships/*`.
    """

    @property
    def connect_agent(self) -> global___ConnectAgent:
        """Optional. The connect agent to generate manifest for."""
        pass
    version: typing.Text = ...
    """Optional. The Connect agent version to use. Defaults to the most current version."""

    is_upgrade: builtins.bool = ...
    """Optional. If true, generate the resources for upgrade only. Some resources
    generated only for installation (e.g. secrets) will be excluded.
    """

    registry: typing.Text = ...
    """Optional. The registry to fetch the connect agent image from. Defaults to
    gcr.io/gkeconnect.
    """

    image_pull_secret_content: builtins.bytes = ...
    """Optional. The image pull secret content for the registry, if not public."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        connect_agent : typing.Optional[global___ConnectAgent] = ...,
        version : typing.Text = ...,
        is_upgrade : builtins.bool = ...,
        registry : typing.Text = ...,
        image_pull_secret_content : builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["connect_agent",b"connect_agent"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connect_agent",b"connect_agent","image_pull_secret_content",b"image_pull_secret_content","is_upgrade",b"is_upgrade","name",b"name","registry",b"registry","version",b"version"]) -> None: ...
global___GenerateConnectManifestRequest = GenerateConnectManifestRequest

class GenerateConnectManifestResponse(google.protobuf.message.Message):
    """GenerateConnectManifestResponse contains manifest information for
    installing/upgrading a Connect agent.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MANIFEST_FIELD_NUMBER: builtins.int
    @property
    def manifest(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ConnectAgentResource]:
        """The ordered list of Kubernetes resources that need to be applied to the
        cluster for GKE Connect agent installation/upgrade.
        """
        pass
    def __init__(self,
        *,
        manifest : typing.Optional[typing.Iterable[global___ConnectAgentResource]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["manifest",b"manifest"]) -> None: ...
global___GenerateConnectManifestResponse = GenerateConnectManifestResponse

class ConnectAgentResource(google.protobuf.message.Message):
    """ConnectAgentResource represents a Kubernetes resource manifest for Connect
    Agent deployment.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    MANIFEST_FIELD_NUMBER: builtins.int
    @property
    def type(self) -> global___TypeMeta:
        """Kubernetes type of the resource."""
        pass
    manifest: typing.Text = ...
    """YAML manifest of the resource."""

    def __init__(self,
        *,
        type : typing.Optional[global___TypeMeta] = ...,
        manifest : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["manifest",b"manifest","type",b"type"]) -> None: ...
global___ConnectAgentResource = ConnectAgentResource

class TypeMeta(google.protobuf.message.Message):
    """TypeMeta is the type information needed for content unmarshalling of
    Kubernetes resources in the manifest.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    API_VERSION_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """Kind of the resource (e.g. Deployment)."""

    api_version: typing.Text = ...
    """APIVersion of the resource (e.g. v1)."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        api_version : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version",b"api_version","kind",b"kind"]) -> None: ...
global___TypeMeta = TypeMeta

class ConnectAgent(google.protobuf.message.Message):
    """The information required from end users to use GKE Connect."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROXY_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Do not set."""

    proxy: builtins.bytes = ...
    """Optional. URI of a proxy if connectivity from the agent to gkeconnect.googleapis.com
    requires the use of a proxy. Format must be in the form
    `http(s)://{proxy_address}`, depending on the HTTP/HTTPS protocol
    supported by the proxy. This will direct the connect agent's outbound
    traffic through a HTTP(S) proxy.
    """

    namespace: typing.Text = ...
    """Optional. Namespace for GKE Connect agent resources. Defaults to `gke-connect`.

    The Connect Agent is authorized automatically when run in the default
    namespace. Otherwise, explicit authorization must be granted with an
    additional IAM binding.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        proxy : builtins.bytes = ...,
        namespace : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","namespace",b"namespace","proxy",b"proxy"]) -> None: ...
global___ConnectAgent = ConnectAgent

class ValidateExclusivityRequest(google.protobuf.message.Message):
    """The request to validate the existing state of the membership CR in the
    cluster.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    CR_MANIFEST_FIELD_NUMBER: builtins.int
    INTENDED_MEMBERSHIP_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent (project and location) where the Memberships will be created.
    Specified in the format `projects/*/locations/*`.
    """

    cr_manifest: typing.Text = ...
    """Optional. The YAML of the membership CR in the cluster. Empty if the membership
    CR does not exist.
    """

    intended_membership: typing.Text = ...
    """Required. The intended membership name under the `parent`. This method only does
    validation in anticipation of a CreateMembership call with the same name.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        cr_manifest : typing.Text = ...,
        intended_membership : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cr_manifest",b"cr_manifest","intended_membership",b"intended_membership","parent",b"parent"]) -> None: ...
global___ValidateExclusivityRequest = ValidateExclusivityRequest

class ValidateExclusivityResponse(google.protobuf.message.Message):
    """The response of exclusivity artifacts validation result status."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> google.rpc.status_pb2.Status:
        """The validation result.

        * `OK` means that exclusivity is validated, assuming the manifest produced
           by GenerateExclusivityManifest is successfully applied.
        * `ALREADY_EXISTS` means that the Membership CRD is already owned by
           another Hub. See `status.message` for more information.
        """
        pass
    def __init__(self,
        *,
        status : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status",b"status"]) -> None: ...
global___ValidateExclusivityResponse = ValidateExclusivityResponse

class GenerateExclusivityManifestRequest(google.protobuf.message.Message):
    """The request to generate the manifests for exclusivity artifacts."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    CRD_MANIFEST_FIELD_NUMBER: builtins.int
    CR_MANIFEST_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The Membership resource name in the format
    `projects/*/locations/*/memberships/*`.
    """

    crd_manifest: typing.Text = ...
    """Optional. The YAML manifest of the membership CRD retrieved by
    `kubectl get customresourcedefinitions membership`.
    Leave empty if the resource does not exist.
    """

    cr_manifest: typing.Text = ...
    """Optional. The YAML manifest of the membership CR retrieved by
    `kubectl get memberships membership`.
    Leave empty if the resource does not exist.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        crd_manifest : typing.Text = ...,
        cr_manifest : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cr_manifest",b"cr_manifest","crd_manifest",b"crd_manifest","name",b"name"]) -> None: ...
global___GenerateExclusivityManifestRequest = GenerateExclusivityManifestRequest

class GenerateExclusivityManifestResponse(google.protobuf.message.Message):
    """The response of the exclusivity artifacts manifests for the client to apply."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CRD_MANIFEST_FIELD_NUMBER: builtins.int
    CR_MANIFEST_FIELD_NUMBER: builtins.int
    crd_manifest: typing.Text = ...
    """The YAML manifest of the membership CRD to apply if a newer version of the
    CRD is available. Empty if no update needs to be applied.
    """

    cr_manifest: typing.Text = ...
    """The YAML manifest of the membership CR to apply if a new version of the
    CR is available. Empty if no update needs to be applied.
    """

    def __init__(self,
        *,
        crd_manifest : typing.Text = ...,
        cr_manifest : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cr_manifest",b"cr_manifest","crd_manifest",b"crd_manifest"]) -> None: ...
global___GenerateExclusivityManifestResponse = GenerateExclusivityManifestResponse

class OperationMetadata(google.protobuf.message.Message):
    """Represents the metadata of the long-running operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    VERB_FIELD_NUMBER: builtins.int
    STATUS_DETAIL_FIELD_NUMBER: builtins.int
    CANCEL_REQUESTED_FIELD_NUMBER: builtins.int
    API_VERSION_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    target: typing.Text = ...
    """Output only. Server-defined resource path for the target of the operation."""

    verb: typing.Text = ...
    """Output only. Name of the verb executed by the operation."""

    status_detail: typing.Text = ...
    """Output only. Human-readable status of the operation, if any."""

    cancel_requested: builtins.bool = ...
    """Output only. Identifies whether the user has requested cancellation
    of the operation. Operations that have successfully been cancelled
    have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
    corresponding to `Code.CANCELLED`.
    """

    api_version: typing.Text = ...
    """Output only. API version used to start the operation."""

    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        target : typing.Text = ...,
        verb : typing.Text = ...,
        status_detail : typing.Text = ...,
        cancel_requested : builtins.bool = ...,
        api_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version",b"api_version","cancel_requested",b"cancel_requested","create_time",b"create_time","end_time",b"end_time","status_detail",b"status_detail","target",b"target","verb",b"verb"]) -> None: ...
global___OperationMetadata = OperationMetadata
