# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/tpu/v1/cloud_tpu.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.longrunning.operations_pb2
import google.protobuf.timestamp_pb2
import google.cloud.tpu.v1.cloud_tpu_pb2


class TpuBase(abc.ABC):

    @abc.abstractmethod
    async def ListNodes(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.ListNodesRequest, google.cloud.tpu.v1.cloud_tpu_pb2.ListNodesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetNode(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.GetNodeRequest, google.cloud.tpu.v1.cloud_tpu_pb2.Node]') -> None:
        pass

    @abc.abstractmethod
    async def CreateNode(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.CreateNodeRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteNode(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.DeleteNodeRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ReimageNode(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.ReimageNodeRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def StopNode(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.StopNodeRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def StartNode(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.StartNodeRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ListTensorFlowVersions(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.ListTensorFlowVersionsRequest, google.cloud.tpu.v1.cloud_tpu_pb2.ListTensorFlowVersionsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetTensorFlowVersion(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.GetTensorFlowVersionRequest, google.cloud.tpu.v1.cloud_tpu_pb2.TensorFlowVersion]') -> None:
        pass

    @abc.abstractmethod
    async def ListAcceleratorTypes(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.ListAcceleratorTypesRequest, google.cloud.tpu.v1.cloud_tpu_pb2.ListAcceleratorTypesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetAcceleratorType(self, stream: 'grpclib.server.Stream[google.cloud.tpu.v1.cloud_tpu_pb2.GetAcceleratorTypeRequest, google.cloud.tpu.v1.cloud_tpu_pb2.AcceleratorType]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.tpu.v1.Tpu/ListNodes': grpclib.const.Handler(
                self.ListNodes,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.ListNodesRequest,
                google.cloud.tpu.v1.cloud_tpu_pb2.ListNodesResponse,
            ),
            '/google.cloud.tpu.v1.Tpu/GetNode': grpclib.const.Handler(
                self.GetNode,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.GetNodeRequest,
                google.cloud.tpu.v1.cloud_tpu_pb2.Node,
            ),
            '/google.cloud.tpu.v1.Tpu/CreateNode': grpclib.const.Handler(
                self.CreateNode,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.CreateNodeRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.tpu.v1.Tpu/DeleteNode': grpclib.const.Handler(
                self.DeleteNode,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.DeleteNodeRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.tpu.v1.Tpu/ReimageNode': grpclib.const.Handler(
                self.ReimageNode,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.ReimageNodeRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.tpu.v1.Tpu/StopNode': grpclib.const.Handler(
                self.StopNode,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.StopNodeRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.tpu.v1.Tpu/StartNode': grpclib.const.Handler(
                self.StartNode,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.StartNodeRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.tpu.v1.Tpu/ListTensorFlowVersions': grpclib.const.Handler(
                self.ListTensorFlowVersions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.ListTensorFlowVersionsRequest,
                google.cloud.tpu.v1.cloud_tpu_pb2.ListTensorFlowVersionsResponse,
            ),
            '/google.cloud.tpu.v1.Tpu/GetTensorFlowVersion': grpclib.const.Handler(
                self.GetTensorFlowVersion,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.GetTensorFlowVersionRequest,
                google.cloud.tpu.v1.cloud_tpu_pb2.TensorFlowVersion,
            ),
            '/google.cloud.tpu.v1.Tpu/ListAcceleratorTypes': grpclib.const.Handler(
                self.ListAcceleratorTypes,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.ListAcceleratorTypesRequest,
                google.cloud.tpu.v1.cloud_tpu_pb2.ListAcceleratorTypesResponse,
            ),
            '/google.cloud.tpu.v1.Tpu/GetAcceleratorType': grpclib.const.Handler(
                self.GetAcceleratorType,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.tpu.v1.cloud_tpu_pb2.GetAcceleratorTypeRequest,
                google.cloud.tpu.v1.cloud_tpu_pb2.AcceleratorType,
            ),
        }


class TpuStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListNodes = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/ListNodes',
            google.cloud.tpu.v1.cloud_tpu_pb2.ListNodesRequest,
            google.cloud.tpu.v1.cloud_tpu_pb2.ListNodesResponse,
        )
        self.GetNode = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/GetNode',
            google.cloud.tpu.v1.cloud_tpu_pb2.GetNodeRequest,
            google.cloud.tpu.v1.cloud_tpu_pb2.Node,
        )
        self.CreateNode = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/CreateNode',
            google.cloud.tpu.v1.cloud_tpu_pb2.CreateNodeRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.DeleteNode = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/DeleteNode',
            google.cloud.tpu.v1.cloud_tpu_pb2.DeleteNodeRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ReimageNode = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/ReimageNode',
            google.cloud.tpu.v1.cloud_tpu_pb2.ReimageNodeRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.StopNode = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/StopNode',
            google.cloud.tpu.v1.cloud_tpu_pb2.StopNodeRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.StartNode = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/StartNode',
            google.cloud.tpu.v1.cloud_tpu_pb2.StartNodeRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ListTensorFlowVersions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/ListTensorFlowVersions',
            google.cloud.tpu.v1.cloud_tpu_pb2.ListTensorFlowVersionsRequest,
            google.cloud.tpu.v1.cloud_tpu_pb2.ListTensorFlowVersionsResponse,
        )
        self.GetTensorFlowVersion = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/GetTensorFlowVersion',
            google.cloud.tpu.v1.cloud_tpu_pb2.GetTensorFlowVersionRequest,
            google.cloud.tpu.v1.cloud_tpu_pb2.TensorFlowVersion,
        )
        self.ListAcceleratorTypes = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/ListAcceleratorTypes',
            google.cloud.tpu.v1.cloud_tpu_pb2.ListAcceleratorTypesRequest,
            google.cloud.tpu.v1.cloud_tpu_pb2.ListAcceleratorTypesResponse,
        )
        self.GetAcceleratorType = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.tpu.v1.Tpu/GetAcceleratorType',
            google.cloud.tpu.v1.cloud_tpu_pb2.GetAcceleratorTypeRequest,
            google.cloud.tpu.v1.cloud_tpu_pb2.AcceleratorType,
        )
