"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Event(google.protobuf.message.Message):
    """The definition of an Event for a managed / semi-managed notebook instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EventType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EventTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EventType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        EVENT_TYPE_UNSPECIFIED: Event.EventType.ValueType = ...  # 0
        """Event is not specified."""

        IDLE: Event.EventType.ValueType = ...  # 1
        """The instance / runtime is idle"""

    class EventType(_EventType, metaclass=_EventTypeEnumTypeWrapper):
        """The definition of the even types."""
        pass

    EVENT_TYPE_UNSPECIFIED: Event.EventType.ValueType = ...  # 0
    """Event is not specified."""

    IDLE: Event.EventType.ValueType = ...  # 1
    """The instance / runtime is idle"""


    REPORT_TIME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    @property
    def report_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Event report time."""
        pass
    type: global___Event.EventType.ValueType = ...
    """Event type."""

    def __init__(self,
        *,
        report_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        type : global___Event.EventType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["report_time",b"report_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["report_time",b"report_time","type",b"type"]) -> None: ...
global___Event = Event
