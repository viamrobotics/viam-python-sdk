"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Environment(google.protobuf.message.Message):
    """Definition of a software environment that is used to start a notebook
    instance.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    VM_IMAGE_FIELD_NUMBER: builtins.int
    CONTAINER_IMAGE_FIELD_NUMBER: builtins.int
    POST_STARTUP_SCRIPT_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. Name of this environment.
    Format:
    `projects/{project_id}/locations/{location}/environments/{environment_id}`
    """

    display_name: typing.Text = ...
    """Display name of this environment for the UI."""

    description: typing.Text = ...
    """A brief description of this environment."""

    @property
    def vm_image(self) -> global___VmImage:
        """Use a Compute Engine VM image to start the notebook instance."""
        pass
    @property
    def container_image(self) -> global___ContainerImage:
        """Use a container image to start the notebook instance."""
        pass
    post_startup_script: typing.Text = ...
    """Path to a Bash script that automatically runs after a notebook instance
    fully boots up. The path must be a URL or
    Cloud Storage path. Example: `"gs://path-to-file/file-name"`
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time at which this environment was created."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        vm_image : typing.Optional[global___VmImage] = ...,
        container_image : typing.Optional[global___ContainerImage] = ...,
        post_startup_script : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["container_image",b"container_image","create_time",b"create_time","image_type",b"image_type","vm_image",b"vm_image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["container_image",b"container_image","create_time",b"create_time","description",b"description","display_name",b"display_name","image_type",b"image_type","name",b"name","post_startup_script",b"post_startup_script","vm_image",b"vm_image"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["image_type",b"image_type"]) -> typing.Optional[typing_extensions.Literal["vm_image","container_image"]]: ...
global___Environment = Environment

class VmImage(google.protobuf.message.Message):
    """Definition of a custom Compute Engine virtual machine image for starting a
    notebook instance with the environment installed directly on the VM.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    IMAGE_NAME_FIELD_NUMBER: builtins.int
    IMAGE_FAMILY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Required. The name of the Google Cloud project that this VM image belongs to.
    Format: `projects/{project_id}`
    """

    image_name: typing.Text = ...
    """Use VM image name to find the image."""

    image_family: typing.Text = ...
    """Use this VM image family to find the image; the newest image in this
    family will be used.
    """

    def __init__(self,
        *,
        project : typing.Text = ...,
        image_name : typing.Text = ...,
        image_family : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["image",b"image","image_family",b"image_family","image_name",b"image_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["image",b"image","image_family",b"image_family","image_name",b"image_name","project",b"project"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["image",b"image"]) -> typing.Optional[typing_extensions.Literal["image_name","image_family"]]: ...
global___VmImage = VmImage

class ContainerImage(google.protobuf.message.Message):
    """Definition of a container image for starting a notebook instance with the
    environment installed in a container.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REPOSITORY_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    repository: typing.Text = ...
    """Required. The path to the container image repository. For example:
    `gcr.io/{project_id}/{image_name}`
    """

    tag: typing.Text = ...
    """The tag of the container image. If not specified, this defaults
    to the latest tag.
    """

    def __init__(self,
        *,
        repository : typing.Text = ...,
        tag : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["repository",b"repository","tag",b"tag"]) -> None: ...
global___ContainerImage = ContainerImage
