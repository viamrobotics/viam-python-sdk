"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ContinuousValidationEvent(google.protobuf.message.Message):
    """Represents an auditing event from Continuous Validation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ContinuousValidationPodEvent(google.protobuf.message.Message):
        """An auditing event for one Pod."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _PolicyConformanceVerdict:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _PolicyConformanceVerdictEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PolicyConformanceVerdict.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            POLICY_CONFORMANCE_VERDICT_UNSPECIFIED: ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict.ValueType = ...  # 0
            """We should always have a verdict. This is an error."""

            VIOLATES_POLICY: ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict.ValueType = ...  # 1
            """The pod violates the policy."""

        class PolicyConformanceVerdict(_PolicyConformanceVerdict, metaclass=_PolicyConformanceVerdictEnumTypeWrapper):
            """Audit time policy conformance verdict."""
            pass

        POLICY_CONFORMANCE_VERDICT_UNSPECIFIED: ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict.ValueType = ...  # 0
        """We should always have a verdict. This is an error."""

        VIOLATES_POLICY: ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict.ValueType = ...  # 1
        """The pod violates the policy."""


        class ImageDetails(google.protobuf.message.Message):
            """Container image with auditing details."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class _AuditResult:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _AuditResultEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AuditResult.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                AUDIT_RESULT_UNSPECIFIED: ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult.ValueType = ...  # 0
                """Unspecified result. This is an error."""

                ALLOW: ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult.ValueType = ...  # 1
                """Image is allowed."""

                DENY: ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult.ValueType = ...  # 2
                """Image is denied."""

            class AuditResult(_AuditResult, metaclass=_AuditResultEnumTypeWrapper):
                """Result of the audit."""
                pass

            AUDIT_RESULT_UNSPECIFIED: ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult.ValueType = ...  # 0
            """Unspecified result. This is an error."""

            ALLOW: ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult.ValueType = ...  # 1
            """Image is allowed."""

            DENY: ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult.ValueType = ...  # 2
            """Image is denied."""


            IMAGE_FIELD_NUMBER: builtins.int
            RESULT_FIELD_NUMBER: builtins.int
            DESCRIPTION_FIELD_NUMBER: builtins.int
            image: typing.Text = ...
            """The name of the image."""

            result: global___ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult.ValueType = ...
            """The result of the audit for this image."""

            description: typing.Text = ...
            """Description of the above result."""

            def __init__(self,
                *,
                image : typing.Text = ...,
                result : global___ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails.AuditResult.ValueType = ...,
                description : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["description",b"description","image",b"image","result",b"result"]) -> None: ...

        POD_FIELD_NUMBER: builtins.int
        DEPLOY_TIME_FIELD_NUMBER: builtins.int
        END_TIME_FIELD_NUMBER: builtins.int
        VERDICT_FIELD_NUMBER: builtins.int
        IMAGES_FIELD_NUMBER: builtins.int
        pod: typing.Text = ...
        """The name of the Pod."""

        @property
        def deploy_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Deploy time of the Pod from k8s."""
            pass
        @property
        def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Termination time of the Pod from k8s, or nothing if still running."""
            pass
        verdict: global___ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict.ValueType = ...
        """Auditing verdict for this Pod."""

        @property
        def images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails]:
            """List of images with auditing details."""
            pass
        def __init__(self,
            *,
            pod : typing.Text = ...,
            deploy_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            verdict : global___ContinuousValidationEvent.ContinuousValidationPodEvent.PolicyConformanceVerdict.ValueType = ...,
            images : typing.Optional[typing.Iterable[global___ContinuousValidationEvent.ContinuousValidationPodEvent.ImageDetails]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["deploy_time",b"deploy_time","end_time",b"end_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["deploy_time",b"deploy_time","end_time",b"end_time","images",b"images","pod",b"pod","verdict",b"verdict"]) -> None: ...

    class UnsupportedPolicyEvent(google.protobuf.message.Message):
        """An event describing that the project policy is unsupported by CV."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DESCRIPTION_FIELD_NUMBER: builtins.int
        description: typing.Text = ...
        """A description of the unsupported policy."""

        def __init__(self,
            *,
            description : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["description",b"description"]) -> None: ...

    POD_EVENT_FIELD_NUMBER: builtins.int
    UNSUPPORTED_POLICY_EVENT_FIELD_NUMBER: builtins.int
    @property
    def pod_event(self) -> global___ContinuousValidationEvent.ContinuousValidationPodEvent:
        """Pod event."""
        pass
    @property
    def unsupported_policy_event(self) -> global___ContinuousValidationEvent.UnsupportedPolicyEvent:
        """Unsupported policy event."""
        pass
    def __init__(self,
        *,
        pod_event : typing.Optional[global___ContinuousValidationEvent.ContinuousValidationPodEvent] = ...,
        unsupported_policy_event : typing.Optional[global___ContinuousValidationEvent.UnsupportedPolicyEvent] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event_type",b"event_type","pod_event",b"pod_event","unsupported_policy_event",b"unsupported_policy_event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event_type",b"event_type","pod_event",b"pod_event","unsupported_policy_event",b"unsupported_policy_event"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["event_type",b"event_type"]) -> typing.Optional[typing_extensions.Literal["pod_event","unsupported_policy_event"]]: ...
global___ContinuousValidationEvent = ContinuousValidationEvent
