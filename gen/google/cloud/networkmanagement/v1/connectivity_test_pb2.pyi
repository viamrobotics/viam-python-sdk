"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.networkmanagement.v1.trace_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ConnectivityTest(google.protobuf.message.Message):
    """A Connectivity Test for a network reachability analysis."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    DESTINATION_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    RELATED_PROJECTS_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    REACHABILITY_DETAILS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Unique name of the resource using the form:
        `projects/{project_id}/locations/global/connectivityTests/{test_id}`
    """

    description: typing.Text = ...
    """The user-supplied description of the Connectivity Test.
    Maximum of 512 characters.
    """

    @property
    def source(self) -> global___Endpoint:
        """Required. Source specification of the Connectivity Test.

        You can use a combination of source IP address, virtual machine
        (VM) instance, or Compute Engine network to uniquely identify
        the source location.

        Examples:
        If the source IP address is an internal IP address within a Google Cloud
        Virtual Private Cloud (VPC) network, then you must also specify the VPC
        network. Otherwise, specify the VM instance, which already contains its
        internal IP address and VPC network information.

        If the source of the test is within an on-premises network, then you must
        provide the destination VPC network.

        If the source endpoint is a Compute Engine VM instance with multiple
        network interfaces, the instance itself is not sufficient to identify the
        endpoint. So, you must also specify the source IP address or VPC network.

        A reachability analysis proceeds even if the source location is
        ambiguous. However, the test result may include endpoints that you don't
        intend to test.
        """
        pass
    @property
    def destination(self) -> global___Endpoint:
        """Required. Destination specification of the Connectivity Test.

        You can use a combination of destination IP address, Compute Engine
        VM instance, or VPC network to uniquely identify the destination
        location.

        Even if the destination IP address is not unique, the source IP
        location is unique. Usually, the analysis can infer the destination
        endpoint from route information.

        If the destination you specify is a VM instance and the instance has
        multiple network interfaces, then you must also specify either
        a destination IP address  or VPC network to identify the destination
        interface.

        A reachability analysis proceeds even if the destination location is
        ambiguous. However, the result can include endpoints that you don't
        intend to test.
        """
        pass
    protocol: typing.Text = ...
    """IP Protocol of the test. When not provided, "TCP" is assumed."""

    @property
    def related_projects(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Other projects that may be relevant for reachability analysis.
        This is applicable to scenarios where a test can cross project boundaries.
        """
        pass
    display_name: typing.Text = ...
    """Output only. The display name of a Connectivity Test."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Resource labels to represent user-provided metadata."""
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the test was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the test's configuration was updated."""
        pass
    @property
    def reachability_details(self) -> global___ReachabilityDetails:
        """Output only. The reachability details of this test from the latest run.
        The details are updated when creating a new test, updating an
        existing test, or triggering a one-time rerun of an existing test.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        source : typing.Optional[global___Endpoint] = ...,
        destination : typing.Optional[global___Endpoint] = ...,
        protocol : typing.Text = ...,
        related_projects : typing.Optional[typing.Iterable[typing.Text]] = ...,
        display_name : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        reachability_details : typing.Optional[global___ReachabilityDetails] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","destination",b"destination","reachability_details",b"reachability_details","source",b"source","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","destination",b"destination","display_name",b"display_name","labels",b"labels","name",b"name","protocol",b"protocol","reachability_details",b"reachability_details","related_projects",b"related_projects","source",b"source","update_time",b"update_time"]) -> None: ...
global___ConnectivityTest = ConnectivityTest

class Endpoint(google.protobuf.message.Message):
    """Source or destination of the Connectivity Test."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _NetworkType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NetworkTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NetworkType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        NETWORK_TYPE_UNSPECIFIED: Endpoint.NetworkType.ValueType = ...  # 0
        """Default type if unspecified."""

        GCP_NETWORK: Endpoint.NetworkType.ValueType = ...  # 1
        """A network hosted within Google Cloud Platform.
        To receive more detailed output, specify the URI for the source or
        destination network.
        """

        NON_GCP_NETWORK: Endpoint.NetworkType.ValueType = ...  # 2
        """A network hosted outside of Google Cloud Platform.
        This can be an on-premises network, or a network hosted by another cloud
        provider.
        """

    class NetworkType(_NetworkType, metaclass=_NetworkTypeEnumTypeWrapper):
        """The type definition of an endpoint's network. Use one of the
        following choices:
        """
        pass

    NETWORK_TYPE_UNSPECIFIED: Endpoint.NetworkType.ValueType = ...  # 0
    """Default type if unspecified."""

    GCP_NETWORK: Endpoint.NetworkType.ValueType = ...  # 1
    """A network hosted within Google Cloud Platform.
    To receive more detailed output, specify the URI for the source or
    destination network.
    """

    NON_GCP_NETWORK: Endpoint.NetworkType.ValueType = ...  # 2
    """A network hosted outside of Google Cloud Platform.
    This can be an on-premises network, or a network hosted by another cloud
    provider.
    """


    IP_ADDRESS_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    GKE_MASTER_CLUSTER_FIELD_NUMBER: builtins.int
    CLOUD_SQL_INSTANCE_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    NETWORK_TYPE_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ip_address: typing.Text = ...
    """The IP address of the endpoint, which can be an external or internal IP.
    An IPv6 address is only allowed when the test's destination is a
    [global load balancer VIP](/load-balancing/docs/load-balancing-overview).
    """

    port: builtins.int = ...
    """The IP protocol port of the endpoint.
    Only applicable when protocol is TCP or UDP.
    """

    instance: typing.Text = ...
    """A Compute Engine instance URI."""

    gke_master_cluster: typing.Text = ...
    """A cluster URI for [Google Kubernetes Engine
    master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
    """

    cloud_sql_instance: typing.Text = ...
    """A [Cloud SQL](https://cloud.google.com/sql) instance URI."""

    network: typing.Text = ...
    """A Compute Engine network URI."""

    network_type: global___Endpoint.NetworkType.ValueType = ...
    """Type of the network where the endpoint is located.
    Applicable only to source endpoint, as destination network type can be
    inferred from the source.
    """

    project_id: typing.Text = ...
    """Project ID where the endpoint is located.
    The Project ID can be derived from the URI if you provide a VM instance or
    network URI.
    The following are two cases where you must provide the project ID:
    1. Only the IP address is specified, and the IP address is within a GCP
    project.
    2. When you are using Shared VPC and the IP address that you provide is
    from the service project. In this case, the network that the IP address
    resides in is defined in the host project.
    """

    def __init__(self,
        *,
        ip_address : typing.Text = ...,
        port : builtins.int = ...,
        instance : typing.Text = ...,
        gke_master_cluster : typing.Text = ...,
        cloud_sql_instance : typing.Text = ...,
        network : typing.Text = ...,
        network_type : global___Endpoint.NetworkType.ValueType = ...,
        project_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cloud_sql_instance",b"cloud_sql_instance","gke_master_cluster",b"gke_master_cluster","instance",b"instance","ip_address",b"ip_address","network",b"network","network_type",b"network_type","port",b"port","project_id",b"project_id"]) -> None: ...
global___Endpoint = Endpoint

class ReachabilityDetails(google.protobuf.message.Message):
    """Results of the configuration analysis from the last run of the test."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Result:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ResultEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Result.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        RESULT_UNSPECIFIED: ReachabilityDetails.Result.ValueType = ...  # 0
        """No result was specified."""

        REACHABLE: ReachabilityDetails.Result.ValueType = ...  # 1
        """Possible scenarios are:

        * The configuration analysis determined that a packet originating from
          the source is expected to reach the destination.
        * The analysis didn't complete because the user lacks permission for
          some of the resources in the trace. However, at the time the user's
          permission became insufficient, the trace had been successful so far.
        """

        UNREACHABLE: ReachabilityDetails.Result.ValueType = ...  # 2
        """A packet originating from the source is expected to be dropped before
        reaching the destination.
        """

        AMBIGUOUS: ReachabilityDetails.Result.ValueType = ...  # 4
        """The source and destination endpoints do not uniquely identify
        the test location in the network, and the reachability result contains
        multiple traces. For some traces, a packet could be delivered, and for
        others, it would not be.
        """

        UNDETERMINED: ReachabilityDetails.Result.ValueType = ...  # 5
        """The configuration analysis did not complete. Possible reasons are:

        * A permissions error occurred--for example, the user might not have
          read permission for all of the resources named in the test.
        * An internal error occurred.
        * The analyzer received an invalid or unsupported argument or was unable
          to identify a known endpoint.
        """

    class Result(_Result, metaclass=_ResultEnumTypeWrapper):
        """The overall result of the test's configuration analysis."""
        pass

    RESULT_UNSPECIFIED: ReachabilityDetails.Result.ValueType = ...  # 0
    """No result was specified."""

    REACHABLE: ReachabilityDetails.Result.ValueType = ...  # 1
    """Possible scenarios are:

    * The configuration analysis determined that a packet originating from
      the source is expected to reach the destination.
    * The analysis didn't complete because the user lacks permission for
      some of the resources in the trace. However, at the time the user's
      permission became insufficient, the trace had been successful so far.
    """

    UNREACHABLE: ReachabilityDetails.Result.ValueType = ...  # 2
    """A packet originating from the source is expected to be dropped before
    reaching the destination.
    """

    AMBIGUOUS: ReachabilityDetails.Result.ValueType = ...  # 4
    """The source and destination endpoints do not uniquely identify
    the test location in the network, and the reachability result contains
    multiple traces. For some traces, a packet could be delivered, and for
    others, it would not be.
    """

    UNDETERMINED: ReachabilityDetails.Result.ValueType = ...  # 5
    """The configuration analysis did not complete. Possible reasons are:

    * A permissions error occurred--for example, the user might not have
      read permission for all of the resources named in the test.
    * An internal error occurred.
    * The analyzer received an invalid or unsupported argument or was unable
      to identify a known endpoint.
    """


    RESULT_FIELD_NUMBER: builtins.int
    VERIFY_TIME_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TRACES_FIELD_NUMBER: builtins.int
    result: global___ReachabilityDetails.Result.ValueType = ...
    """The overall result of the test's configuration analysis."""

    @property
    def verify_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time of the configuration analysis."""
        pass
    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """The details of a failure or a cancellation of reachability analysis."""
        pass
    @property
    def traces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.networkmanagement.v1.trace_pb2.Trace]:
        """Result may contain a list of traces if a test has multiple possible
        paths in the network, such as when destination endpoint is a load balancer
        with multiple backends.
        """
        pass
    def __init__(self,
        *,
        result : global___ReachabilityDetails.Result.ValueType = ...,
        verify_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        traces : typing.Optional[typing.Iterable[google.cloud.networkmanagement.v1.trace_pb2.Trace]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","verify_time",b"verify_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","result",b"result","traces",b"traces","verify_time",b"verify_time"]) -> None: ...
global___ReachabilityDetails = ReachabilityDetails
