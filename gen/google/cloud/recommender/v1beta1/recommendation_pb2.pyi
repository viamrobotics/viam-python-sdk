"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import google.type.money_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Recommendation(google.protobuf.message.Message):
    """A recommendation along with a suggested action. E.g., a rightsizing
    recommendation for an underutilized VM, IAM role recommendations, etc
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class InsightReference(google.protobuf.message.Message):
        """Reference to an associated insight."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        INSIGHT_FIELD_NUMBER: builtins.int
        insight: typing.Text = ...
        """Insight resource name, e.g.
        projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/insights/[INSIGHT_ID]
        """

        def __init__(self,
            *,
            insight : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["insight",b"insight"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    RECOMMENDER_SUBTYPE_FIELD_NUMBER: builtins.int
    LAST_REFRESH_TIME_FIELD_NUMBER: builtins.int
    PRIMARY_IMPACT_FIELD_NUMBER: builtins.int
    ADDITIONAL_IMPACT_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    STATE_INFO_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ASSOCIATED_INSIGHTS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of recommendation."""

    description: typing.Text = ...
    """Free-form human readable summary in English. The maximum length is 500
    characters.
    """

    recommender_subtype: typing.Text = ...
    """Contains an identifier for a subtype of recommendations produced for the
    same recommender. Subtype is a function of content and impact, meaning a
    new subtype might be added when significant changes to `content` or
    `primary_impact.category` are introduced. See the Recommenders section
    to see a list of subtypes for a given Recommender.

    Examples:
      For recommender = "google.iam.policy.Recommender",
      recommender_subtype can be one of "REMOVE_ROLE"/"REPLACE_ROLE"
    """

    @property
    def last_refresh_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Last time this recommendation was refreshed by the system that created it
        in the first place.
        """
        pass
    @property
    def primary_impact(self) -> global___Impact:
        """The primary impact that this recommendation can have while trying to
        optimize for one category.
        """
        pass
    @property
    def additional_impact(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Impact]:
        """Optional set of additional impact that this recommendation may have when
        trying to optimize for the primary category. These may be positive
        or negative.
        """
        pass
    @property
    def content(self) -> global___RecommendationContent:
        """Content of the recommendation describing recommended changes to resources."""
        pass
    @property
    def state_info(self) -> global___RecommendationStateInfo:
        """Information for state. Contains state and metadata."""
        pass
    etag: typing.Text = ...
    """Fingerprint of the Recommendation. Provides optimistic locking when
    updating states.
    """

    @property
    def associated_insights(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Recommendation.InsightReference]:
        """Insights that led to this recommendation."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        recommender_subtype : typing.Text = ...,
        last_refresh_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        primary_impact : typing.Optional[global___Impact] = ...,
        additional_impact : typing.Optional[typing.Iterable[global___Impact]] = ...,
        content : typing.Optional[global___RecommendationContent] = ...,
        state_info : typing.Optional[global___RecommendationStateInfo] = ...,
        etag : typing.Text = ...,
        associated_insights : typing.Optional[typing.Iterable[global___Recommendation.InsightReference]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["content",b"content","last_refresh_time",b"last_refresh_time","primary_impact",b"primary_impact","state_info",b"state_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_impact",b"additional_impact","associated_insights",b"associated_insights","content",b"content","description",b"description","etag",b"etag","last_refresh_time",b"last_refresh_time","name",b"name","primary_impact",b"primary_impact","recommender_subtype",b"recommender_subtype","state_info",b"state_info"]) -> None: ...
global___Recommendation = Recommendation

class RecommendationContent(google.protobuf.message.Message):
    """Contains what resources are changing and how they are changing."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_GROUPS_FIELD_NUMBER: builtins.int
    @property
    def operation_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OperationGroup]:
        """Operations to one or more Google Cloud resources grouped in such a way
        that, all operations within one group are expected to be performed
        atomically and in an order.
        """
        pass
    def __init__(self,
        *,
        operation_groups : typing.Optional[typing.Iterable[global___OperationGroup]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation_groups",b"operation_groups"]) -> None: ...
global___RecommendationContent = RecommendationContent

class OperationGroup(google.protobuf.message.Message):
    """Group of operations that need to be performed atomically."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATIONS_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operation]:
        """List of operations across one or more resources that belong to this group.
        Loosely based on RFC6902 and should be performed in the order they appear.
        """
        pass
    def __init__(self,
        *,
        operations : typing.Optional[typing.Iterable[global___Operation]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operations",b"operations"]) -> None: ...
global___OperationGroup = OperationGroup

class Operation(google.protobuf.message.Message):
    """Contains an operation for a resource loosely based on the JSON-PATCH format
    with support for:

    * Custom filters for describing partial array patch.
    * Extended path values for describing nested arrays.
    * Custom fields for describing the resource for which the operation is being
      described.
    * Allows extension to custom operations not natively supported by RFC6902.
    See https://tools.ietf.org/html/rfc6902 for details on the original RFC.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PathFiltersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> google.protobuf.struct_pb2.Value: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[google.protobuf.struct_pb2.Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class PathValueMatchersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___ValueMatcher: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___ValueMatcher] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ACTION_FIELD_NUMBER: builtins.int
    RESOURCE_TYPE_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    SOURCE_RESOURCE_FIELD_NUMBER: builtins.int
    SOURCE_PATH_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    VALUE_MATCHER_FIELD_NUMBER: builtins.int
    PATH_FILTERS_FIELD_NUMBER: builtins.int
    PATH_VALUE_MATCHERS_FIELD_NUMBER: builtins.int
    action: typing.Text = ...
    """Type of this operation. Contains one of 'and', 'remove', 'replace', 'move',
    'copy', 'test' and 'custom' operations. This field is case-insensitive and
    always populated.
    """

    resource_type: typing.Text = ...
    """Type of GCP resource being modified/tested. This field is always populated.
    Example: cloudresourcemanager.googleapis.com/Project,
    compute.googleapis.com/Instance
    """

    resource: typing.Text = ...
    """Contains the fully qualified resource name. This field is always populated.
    ex: //cloudresourcemanager.googleapis.com/projects/foo.
    """

    path: typing.Text = ...
    """Path to the target field being operated on. If the operation is at the
    resource level, then path should be "/". This field is always populated.
    """

    source_resource: typing.Text = ...
    """Can be set with action 'copy' to copy resource configuration across
    different resources of the same type. Example: A resource clone can be
    done via action = 'copy', path = "/", from = "/",
    source_resource = <source> and resource_name = <target>.
    This field is empty for all other values of `action`.
    """

    source_path: typing.Text = ...
    """Can be set with action 'copy' or 'move' to indicate the source field within
    resource or source_resource, ignored if provided for other operation types.
    """

    @property
    def value(self) -> google.protobuf.struct_pb2.Value:
        """Value for the `path` field. Will be set for actions:'add'/'replace'.
        Maybe set for action: 'test'. Either this or `value_matcher` will be set
        for 'test' operation. An exact match must be performed.
        """
        pass
    @property
    def value_matcher(self) -> global___ValueMatcher:
        """Can be set for action 'test' for advanced matching for the value of
        'path' field. Either this or `value` will be set for 'test' operation.
        """
        pass
    @property
    def path_filters(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.protobuf.struct_pb2.Value]:
        """Set of filters to apply if `path` refers to array elements or nested array
        elements in order to narrow down to a single unique element that is being
        tested/modified.
        This is intended to be an exact match per filter. To perform advanced
        matching, use path_value_matchers.

        * Example:
        ```
        {
          "/versions/*/name" : "it-123"
          "/versions/*/targetSize/percent": 20
        }
        ```
        * Example:
        ```
        {
          "/bindings/*/role": "roles/owner"
          "/bindings/*/condition" : null
        }
        ```
        * Example:
        ```
        {
          "/bindings/*/role": "roles/owner"
          "/bindings/*/members/*" : ["x@example.com", "y@example.com"]
        }
        ```
        When both path_filters and path_value_matchers are set, an implicit AND
        must be performed.
        """
        pass
    @property
    def path_value_matchers(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ValueMatcher]:
        """Similar to path_filters, this contains set of filters to apply if `path`
        field referes to array elements. This is meant to support value matching
        beyond exact match. To perform exact match, use path_filters.
        When both path_filters and path_value_matchers are set, an implicit AND
        must be performed.
        """
        pass
    def __init__(self,
        *,
        action : typing.Text = ...,
        resource_type : typing.Text = ...,
        resource : typing.Text = ...,
        path : typing.Text = ...,
        source_resource : typing.Text = ...,
        source_path : typing.Text = ...,
        value : typing.Optional[google.protobuf.struct_pb2.Value] = ...,
        value_matcher : typing.Optional[global___ValueMatcher] = ...,
        path_filters : typing.Optional[typing.Mapping[typing.Text, google.protobuf.struct_pb2.Value]] = ...,
        path_value_matchers : typing.Optional[typing.Mapping[typing.Text, global___ValueMatcher]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["path_value",b"path_value","value",b"value","value_matcher",b"value_matcher"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","path",b"path","path_filters",b"path_filters","path_value",b"path_value","path_value_matchers",b"path_value_matchers","resource",b"resource","resource_type",b"resource_type","source_path",b"source_path","source_resource",b"source_resource","value",b"value","value_matcher",b"value_matcher"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["path_value",b"path_value"]) -> typing.Optional[typing_extensions.Literal["value","value_matcher"]]: ...
global___Operation = Operation

class ValueMatcher(google.protobuf.message.Message):
    """Contains various matching options for values for a GCP resource field."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MATCHES_PATTERN_FIELD_NUMBER: builtins.int
    matches_pattern: typing.Text = ...
    """To be used for full regex matching. The regular expression is using the
    Google RE2 syntax (https://github.com/google/re2/wiki/Syntax), so to be
    used with RE2::FullMatch
    """

    def __init__(self,
        *,
        matches_pattern : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["match_variant",b"match_variant","matches_pattern",b"matches_pattern"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["match_variant",b"match_variant","matches_pattern",b"matches_pattern"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["match_variant",b"match_variant"]) -> typing.Optional[typing_extensions.Literal["matches_pattern"]]: ...
global___ValueMatcher = ValueMatcher

class CostProjection(google.protobuf.message.Message):
    """Contains metadata about how much money a recommendation can save or incur."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COST_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    @property
    def cost(self) -> google.type.money_pb2.Money:
        """An approximate projection on amount saved or amount incurred. Negative cost
        units indicate cost savings and positive cost units indicate increase.
        See google.type.Money documentation for positive/negative units.
        """
        pass
    @property
    def duration(self) -> google.protobuf.duration_pb2.Duration:
        """Duration for which this cost applies."""
        pass
    def __init__(self,
        *,
        cost : typing.Optional[google.type.money_pb2.Money] = ...,
        duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cost",b"cost","duration",b"duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cost",b"cost","duration",b"duration"]) -> None: ...
global___CostProjection = CostProjection

class Impact(google.protobuf.message.Message):
    """Contains the impact a recommendation can have for a given category."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Category:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CategoryEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Category.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CATEGORY_UNSPECIFIED: Impact.Category.ValueType = ...  # 0
        """Default unspecified category. Don't use directly."""

        COST: Impact.Category.ValueType = ...  # 1
        """Indicates a potential increase or decrease in cost."""

        SECURITY: Impact.Category.ValueType = ...  # 2
        """Indicates a potential increase or decrease in security."""

        PERFORMANCE: Impact.Category.ValueType = ...  # 3
        """Indicates a potential increase or decrease in performance."""

        MANAGEABILITY: Impact.Category.ValueType = ...  # 4
        """Indicates a potential increase or decrease in manageability."""

    class Category(_Category, metaclass=_CategoryEnumTypeWrapper):
        """The category of the impact."""
        pass

    CATEGORY_UNSPECIFIED: Impact.Category.ValueType = ...  # 0
    """Default unspecified category. Don't use directly."""

    COST: Impact.Category.ValueType = ...  # 1
    """Indicates a potential increase or decrease in cost."""

    SECURITY: Impact.Category.ValueType = ...  # 2
    """Indicates a potential increase or decrease in security."""

    PERFORMANCE: Impact.Category.ValueType = ...  # 3
    """Indicates a potential increase or decrease in performance."""

    MANAGEABILITY: Impact.Category.ValueType = ...  # 4
    """Indicates a potential increase or decrease in manageability."""


    CATEGORY_FIELD_NUMBER: builtins.int
    COST_PROJECTION_FIELD_NUMBER: builtins.int
    category: global___Impact.Category.ValueType = ...
    """Category that is being targeted."""

    @property
    def cost_projection(self) -> global___CostProjection:
        """Use with CategoryType.COST"""
        pass
    def __init__(self,
        *,
        category : global___Impact.Category.ValueType = ...,
        cost_projection : typing.Optional[global___CostProjection] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cost_projection",b"cost_projection","projection",b"projection"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["category",b"category","cost_projection",b"cost_projection","projection",b"projection"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["projection",b"projection"]) -> typing.Optional[typing_extensions.Literal["cost_projection"]]: ...
global___Impact = Impact

class RecommendationStateInfo(google.protobuf.message.Message):
    """Information for state. Contains state and metadata."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: RecommendationStateInfo.State.ValueType = ...  # 0
        """Default state. Don't use directly."""

        ACTIVE: RecommendationStateInfo.State.ValueType = ...  # 1
        """Recommendation is active and can be applied. Recommendations content can
        be updated by Google.

        ACTIVE recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.
        """

        CLAIMED: RecommendationStateInfo.State.ValueType = ...  # 6
        """Recommendation is in claimed state. Recommendations content is
        immutable and cannot be updated by Google.

        CLAIMED recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.
        """

        SUCCEEDED: RecommendationStateInfo.State.ValueType = ...  # 3
        """Recommendation is in succeeded state. Recommendations content is
        immutable and cannot be updated by Google.

        SUCCEEDED recommendations can be marked as SUCCEEDED, or FAILED.
        """

        FAILED: RecommendationStateInfo.State.ValueType = ...  # 4
        """Recommendation is in failed state. Recommendations content is immutable
        and cannot be updated by Google.

        FAILED recommendations can be marked as SUCCEEDED, or FAILED.
        """

        DISMISSED: RecommendationStateInfo.State.ValueType = ...  # 5
        """Recommendation is in dismissed state. Recommendation content can be
        updated by Google.

        DISMISSED recommendations can be marked as ACTIVE.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Represents Recommendation State."""
        pass

    STATE_UNSPECIFIED: RecommendationStateInfo.State.ValueType = ...  # 0
    """Default state. Don't use directly."""

    ACTIVE: RecommendationStateInfo.State.ValueType = ...  # 1
    """Recommendation is active and can be applied. Recommendations content can
    be updated by Google.

    ACTIVE recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.
    """

    CLAIMED: RecommendationStateInfo.State.ValueType = ...  # 6
    """Recommendation is in claimed state. Recommendations content is
    immutable and cannot be updated by Google.

    CLAIMED recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.
    """

    SUCCEEDED: RecommendationStateInfo.State.ValueType = ...  # 3
    """Recommendation is in succeeded state. Recommendations content is
    immutable and cannot be updated by Google.

    SUCCEEDED recommendations can be marked as SUCCEEDED, or FAILED.
    """

    FAILED: RecommendationStateInfo.State.ValueType = ...  # 4
    """Recommendation is in failed state. Recommendations content is immutable
    and cannot be updated by Google.

    FAILED recommendations can be marked as SUCCEEDED, or FAILED.
    """

    DISMISSED: RecommendationStateInfo.State.ValueType = ...  # 5
    """Recommendation is in dismissed state. Recommendation content can be
    updated by Google.

    DISMISSED recommendations can be marked as ACTIVE.
    """


    class StateMetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    STATE_FIELD_NUMBER: builtins.int
    STATE_METADATA_FIELD_NUMBER: builtins.int
    state: global___RecommendationStateInfo.State.ValueType = ...
    """The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED."""

    @property
    def state_metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """A map of metadata for the state, provided by user or automations systems."""
        pass
    def __init__(self,
        *,
        state : global___RecommendationStateInfo.State.ValueType = ...,
        state_metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["state",b"state","state_metadata",b"state_metadata"]) -> None: ...
global___RecommendationStateInfo = RecommendationStateInfo
