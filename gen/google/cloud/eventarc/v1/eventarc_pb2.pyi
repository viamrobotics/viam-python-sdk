"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.eventarc.v1.trigger_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class GetTriggerRequest(google.protobuf.message.Message):
    """The request message for the GetTrigger method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the trigger to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetTriggerRequest = GetTriggerRequest

class ListTriggersRequest(google.protobuf.message.Message):
    """The request message for the ListTriggers method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent collection to list triggers on."""

    page_size: builtins.int = ...
    """The maximum number of triggers to return on each page.
    Note: The service may send fewer.
    """

    page_token: typing.Text = ...
    """The page token; provide the value from the `next_page_token` field in a
    previous `ListTriggers` call to retrieve the subsequent page.

    When paginating, all other parameters provided to `ListTriggers` must match
    the call that provided the page token.
    """

    order_by: typing.Text = ...
    """The sorting order of the resources returned. Value should be a comma
    separated list of fields. The default sorting oder is ascending. To specify
    descending order for a field, append a ` desc` suffix; for example:
    `name desc, trigger_id`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListTriggersRequest = ListTriggersRequest

class ListTriggersResponse(google.protobuf.message.Message):
    """The response message for the ListTriggers method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TRIGGERS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def triggers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.eventarc.v1.trigger_pb2.Trigger]:
        """The requested triggers, up to the number specified in `page_size`."""
        pass
    next_page_token: typing.Text = ...
    """A page token that can be sent to ListTriggers to request the next page.
    If this is empty, then there are no more pages.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Unreachable resources, if any."""
        pass
    def __init__(self,
        *,
        triggers : typing.Optional[typing.Iterable[google.cloud.eventarc.v1.trigger_pb2.Trigger]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","triggers",b"triggers","unreachable",b"unreachable"]) -> None: ...
global___ListTriggersResponse = ListTriggersResponse

class CreateTriggerRequest(google.protobuf.message.Message):
    """The request message for the CreateTrigger method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    TRIGGER_FIELD_NUMBER: builtins.int
    TRIGGER_ID_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent collection in which to add this trigger."""

    @property
    def trigger(self) -> google.cloud.eventarc.v1.trigger_pb2.Trigger:
        """Required. The trigger to create."""
        pass
    trigger_id: typing.Text = ...
    """Required. The user-provided ID to be assigned to the trigger."""

    validate_only: builtins.bool = ...
    """Required. If set, validate the request and preview the review, but do not actually
    post it.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        trigger : typing.Optional[google.cloud.eventarc.v1.trigger_pb2.Trigger] = ...,
        trigger_id : typing.Text = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["trigger",b"trigger"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","trigger",b"trigger","trigger_id",b"trigger_id","validate_only",b"validate_only"]) -> None: ...
global___CreateTriggerRequest = CreateTriggerRequest

class UpdateTriggerRequest(google.protobuf.message.Message):
    """The request message for the UpdateTrigger method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TRIGGER_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    ALLOW_MISSING_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    @property
    def trigger(self) -> google.cloud.eventarc.v1.trigger_pb2.Trigger:
        """The trigger to be updated."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The fields to be updated; only fields explicitly provided will be updated.
        If no field mask is provided, all provided fields in the request will be
        updated. To update all fields, provide a field mask of "*".
        """
        pass
    allow_missing: builtins.bool = ...
    """If set to true, and the trigger is not found, a new trigger will be
    created. In this situation, `update_mask` is ignored.
    """

    validate_only: builtins.bool = ...
    """Required. If set, validate the request and preview the review, but do not actually
    post it.
    """

    def __init__(self,
        *,
        trigger : typing.Optional[google.cloud.eventarc.v1.trigger_pb2.Trigger] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        allow_missing : builtins.bool = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["trigger",b"trigger","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_missing",b"allow_missing","trigger",b"trigger","update_mask",b"update_mask","validate_only",b"validate_only"]) -> None: ...
global___UpdateTriggerRequest = UpdateTriggerRequest

class DeleteTriggerRequest(google.protobuf.message.Message):
    """The request message for the DeleteTrigger method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ALLOW_MISSING_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the trigger to be deleted."""

    etag: typing.Text = ...
    """If provided, the trigger will only be deleted if the etag matches the
    current etag on the resource.
    """

    allow_missing: builtins.bool = ...
    """If set to true, and the trigger is not found, the request will succeed
    but no action will be taken on the server.
    """

    validate_only: builtins.bool = ...
    """Required. If set, validate the request and preview the review, but do not actually
    post it.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        etag : typing.Text = ...,
        allow_missing : builtins.bool = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_missing",b"allow_missing","etag",b"etag","name",b"name","validate_only",b"validate_only"]) -> None: ...
global___DeleteTriggerRequest = DeleteTriggerRequest

class OperationMetadata(google.protobuf.message.Message):
    """Represents the metadata of the long-running operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    VERB_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    REQUESTED_CANCELLATION_FIELD_NUMBER: builtins.int
    API_VERSION_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    target: typing.Text = ...
    """Output only. Server-defined resource path for the target of the operation."""

    verb: typing.Text = ...
    """Output only. Name of the verb executed by the operation."""

    status_message: typing.Text = ...
    """Output only. Human-readable status of the operation, if any."""

    requested_cancellation: builtins.bool = ...
    """Output only. Identifies whether the user has requested cancellation
    of the operation. Operations that have successfully been cancelled
    have [Operation.error][] value with a [google.rpc.Status.code][google.rpc.Status.code] of 1,
    corresponding to `Code.CANCELLED`.
    """

    api_version: typing.Text = ...
    """Output only. API version used to start the operation."""

    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        target : typing.Text = ...,
        verb : typing.Text = ...,
        status_message : typing.Text = ...,
        requested_cancellation : builtins.bool = ...,
        api_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version",b"api_version","create_time",b"create_time","end_time",b"end_time","requested_cancellation",b"requested_cancellation","status_message",b"status_message","target",b"target","verb",b"verb"]) -> None: ...
global___OperationMetadata = OperationMetadata
