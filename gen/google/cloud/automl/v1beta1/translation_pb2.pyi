"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.automl.v1beta1.data_items_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TranslationDatasetMetadata(google.protobuf.message.Message):
    """Dataset metadata that is specific to translation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOURCE_LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    TARGET_LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    source_language_code: typing.Text = ...
    """Required. The BCP-47 language code of the source language."""

    target_language_code: typing.Text = ...
    """Required. The BCP-47 language code of the target language."""

    def __init__(self,
        *,
        source_language_code : typing.Text = ...,
        target_language_code : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["source_language_code",b"source_language_code","target_language_code",b"target_language_code"]) -> None: ...
global___TranslationDatasetMetadata = TranslationDatasetMetadata

class TranslationEvaluationMetrics(google.protobuf.message.Message):
    """Evaluation metrics for the dataset."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BLEU_SCORE_FIELD_NUMBER: builtins.int
    BASE_BLEU_SCORE_FIELD_NUMBER: builtins.int
    bleu_score: builtins.float = ...
    """Output only. BLEU score."""

    base_bleu_score: builtins.float = ...
    """Output only. BLEU score for base model."""

    def __init__(self,
        *,
        bleu_score : builtins.float = ...,
        base_bleu_score : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["base_bleu_score",b"base_bleu_score","bleu_score",b"bleu_score"]) -> None: ...
global___TranslationEvaluationMetrics = TranslationEvaluationMetrics

class TranslationModelMetadata(google.protobuf.message.Message):
    """Model metadata that is specific to translation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BASE_MODEL_FIELD_NUMBER: builtins.int
    SOURCE_LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    TARGET_LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    base_model: typing.Text = ...
    """The resource name of the model to use as a baseline to train the custom
    model. If unset, we use the default base model provided by Google
    Translate. Format:
    `projects/{project_id}/locations/{location_id}/models/{model_id}`
    """

    source_language_code: typing.Text = ...
    """Output only. Inferred from the dataset.
    The source languge (The BCP-47 language code) that is used for training.
    """

    target_language_code: typing.Text = ...
    """Output only. The target languge (The BCP-47 language code) that is used for
    training.
    """

    def __init__(self,
        *,
        base_model : typing.Text = ...,
        source_language_code : typing.Text = ...,
        target_language_code : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["base_model",b"base_model","source_language_code",b"source_language_code","target_language_code",b"target_language_code"]) -> None: ...
global___TranslationModelMetadata = TranslationModelMetadata

class TranslationAnnotation(google.protobuf.message.Message):
    """Annotation details specific to translation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TRANSLATED_CONTENT_FIELD_NUMBER: builtins.int
    @property
    def translated_content(self) -> google.cloud.automl.v1beta1.data_items_pb2.TextSnippet:
        """Output only . The translated content."""
        pass
    def __init__(self,
        *,
        translated_content : typing.Optional[google.cloud.automl.v1beta1.data_items_pb2.TextSnippet] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["translated_content",b"translated_content"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["translated_content",b"translated_content"]) -> None: ...
global___TranslationAnnotation = TranslationAnnotation
