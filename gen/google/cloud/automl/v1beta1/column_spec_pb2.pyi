"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.automl.v1beta1.data_stats_pb2
import google.cloud.automl.v1beta1.data_types_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ColumnSpec(google.protobuf.message.Message):
    """A representation of a column in a relational table. When listing them, column specs are returned in the same order in which they were
    given on import .
    Used by:
      *   Tables
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CorrelatedColumn(google.protobuf.message.Message):
        """Identifies the table's column, and its correlation with the column this
        ColumnSpec describes.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        COLUMN_SPEC_ID_FIELD_NUMBER: builtins.int
        CORRELATION_STATS_FIELD_NUMBER: builtins.int
        column_spec_id: typing.Text = ...
        """The column_spec_id of the correlated column, which belongs to the same
        table as the in-context column.
        """

        @property
        def correlation_stats(self) -> google.cloud.automl.v1beta1.data_stats_pb2.CorrelationStats:
            """Correlation between this and the in-context column."""
            pass
        def __init__(self,
            *,
            column_spec_id : typing.Text = ...,
            correlation_stats : typing.Optional[google.cloud.automl.v1beta1.data_stats_pb2.CorrelationStats] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["correlation_stats",b"correlation_stats"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["column_spec_id",b"column_spec_id","correlation_stats",b"correlation_stats"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DATA_TYPE_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DATA_STATS_FIELD_NUMBER: builtins.int
    TOP_CORRELATED_COLUMNS_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The resource name of the column specs.
    Form:

    `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/tableSpecs/{table_spec_id}/columnSpecs/{column_spec_id}`
    """

    @property
    def data_type(self) -> google.cloud.automl.v1beta1.data_types_pb2.DataType:
        """The data type of elements stored in the column."""
        pass
    display_name: typing.Text = ...
    """Output only. The name of the column to show in the interface. The name can
    be up to 100 characters long and can consist only of ASCII Latin letters
    A-Z and a-z, ASCII digits 0-9, underscores(_), and forward slashes(/), and
    must start with a letter or a digit.
    """

    @property
    def data_stats(self) -> google.cloud.automl.v1beta1.data_stats_pb2.DataStats:
        """Output only. Stats of the series of values in the column.
        This field may be stale, see the ancestor's
        Dataset.tables_dataset_metadata.stats_update_time field
        for the timestamp at which these stats were last updated.
        """
        pass
    @property
    def top_correlated_columns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ColumnSpec.CorrelatedColumn]:
        """Deprecated."""
        pass
    etag: typing.Text = ...
    """Used to perform consistent read-modify-write updates. If not set, a blind
    "overwrite" update happens.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        data_type : typing.Optional[google.cloud.automl.v1beta1.data_types_pb2.DataType] = ...,
        display_name : typing.Text = ...,
        data_stats : typing.Optional[google.cloud.automl.v1beta1.data_stats_pb2.DataStats] = ...,
        top_correlated_columns : typing.Optional[typing.Iterable[global___ColumnSpec.CorrelatedColumn]] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_stats",b"data_stats","data_type",b"data_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_stats",b"data_stats","data_type",b"data_type","display_name",b"display_name","etag",b"etag","name",b"name","top_correlated_columns",b"top_correlated_columns"]) -> None: ...
global___ColumnSpec = ColumnSpec
