"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.automl.v1.classification_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TextClassificationDatasetMetadata(google.protobuf.message.Message):
    """Dataset metadata for classification."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLASSIFICATION_TYPE_FIELD_NUMBER: builtins.int
    classification_type: google.cloud.automl.v1.classification_pb2.ClassificationType.ValueType = ...
    """Required. Type of the classification problem."""

    def __init__(self,
        *,
        classification_type : google.cloud.automl.v1.classification_pb2.ClassificationType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["classification_type",b"classification_type"]) -> None: ...
global___TextClassificationDatasetMetadata = TextClassificationDatasetMetadata

class TextClassificationModelMetadata(google.protobuf.message.Message):
    """Model metadata that is specific to text classification."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLASSIFICATION_TYPE_FIELD_NUMBER: builtins.int
    classification_type: google.cloud.automl.v1.classification_pb2.ClassificationType.ValueType = ...
    """Output only. Classification type of the dataset used to train this model."""

    def __init__(self,
        *,
        classification_type : google.cloud.automl.v1.classification_pb2.ClassificationType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["classification_type",b"classification_type"]) -> None: ...
global___TextClassificationModelMetadata = TextClassificationModelMetadata

class TextExtractionDatasetMetadata(google.protobuf.message.Message):
    """Dataset metadata that is specific to text extraction"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___TextExtractionDatasetMetadata = TextExtractionDatasetMetadata

class TextExtractionModelMetadata(google.protobuf.message.Message):
    """Model metadata that is specific to text extraction."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___TextExtractionModelMetadata = TextExtractionModelMetadata

class TextSentimentDatasetMetadata(google.protobuf.message.Message):
    """Dataset metadata for text sentiment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SENTIMENT_MAX_FIELD_NUMBER: builtins.int
    sentiment_max: builtins.int = ...
    """Required. A sentiment is expressed as an integer ordinal, where higher value
    means a more positive sentiment. The range of sentiments that will be used
    is between 0 and sentiment_max (inclusive on both ends), and all the values
    in the range must be represented in the dataset before a model can be
    created.
    sentiment_max value must be between 1 and 10 (inclusive).
    """

    def __init__(self,
        *,
        sentiment_max : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sentiment_max",b"sentiment_max"]) -> None: ...
global___TextSentimentDatasetMetadata = TextSentimentDatasetMetadata

class TextSentimentModelMetadata(google.protobuf.message.Message):
    """Model metadata that is specific to text sentiment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___TextSentimentModelMetadata = TextSentimentModelMetadata
