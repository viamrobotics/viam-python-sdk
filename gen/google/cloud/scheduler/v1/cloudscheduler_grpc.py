# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/scheduler/v1/cloudscheduler.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.cloud.scheduler.v1.job_pb2
import google.protobuf.empty_pb2
import google.protobuf.field_mask_pb2
import google.cloud.scheduler.v1.cloudscheduler_pb2


class CloudSchedulerBase(abc.ABC):

    @abc.abstractmethod
    async def ListJobs(self, stream: 'grpclib.server.Stream[google.cloud.scheduler.v1.cloudscheduler_pb2.ListJobsRequest, google.cloud.scheduler.v1.cloudscheduler_pb2.ListJobsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetJob(self, stream: 'grpclib.server.Stream[google.cloud.scheduler.v1.cloudscheduler_pb2.GetJobRequest, google.cloud.scheduler.v1.job_pb2.Job]') -> None:
        pass

    @abc.abstractmethod
    async def CreateJob(self, stream: 'grpclib.server.Stream[google.cloud.scheduler.v1.cloudscheduler_pb2.CreateJobRequest, google.cloud.scheduler.v1.job_pb2.Job]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateJob(self, stream: 'grpclib.server.Stream[google.cloud.scheduler.v1.cloudscheduler_pb2.UpdateJobRequest, google.cloud.scheduler.v1.job_pb2.Job]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteJob(self, stream: 'grpclib.server.Stream[google.cloud.scheduler.v1.cloudscheduler_pb2.DeleteJobRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def PauseJob(self, stream: 'grpclib.server.Stream[google.cloud.scheduler.v1.cloudscheduler_pb2.PauseJobRequest, google.cloud.scheduler.v1.job_pb2.Job]') -> None:
        pass

    @abc.abstractmethod
    async def ResumeJob(self, stream: 'grpclib.server.Stream[google.cloud.scheduler.v1.cloudscheduler_pb2.ResumeJobRequest, google.cloud.scheduler.v1.job_pb2.Job]') -> None:
        pass

    @abc.abstractmethod
    async def RunJob(self, stream: 'grpclib.server.Stream[google.cloud.scheduler.v1.cloudscheduler_pb2.RunJobRequest, google.cloud.scheduler.v1.job_pb2.Job]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.scheduler.v1.CloudScheduler/ListJobs': grpclib.const.Handler(
                self.ListJobs,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.scheduler.v1.cloudscheduler_pb2.ListJobsRequest,
                google.cloud.scheduler.v1.cloudscheduler_pb2.ListJobsResponse,
            ),
            '/google.cloud.scheduler.v1.CloudScheduler/GetJob': grpclib.const.Handler(
                self.GetJob,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.scheduler.v1.cloudscheduler_pb2.GetJobRequest,
                google.cloud.scheduler.v1.job_pb2.Job,
            ),
            '/google.cloud.scheduler.v1.CloudScheduler/CreateJob': grpclib.const.Handler(
                self.CreateJob,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.scheduler.v1.cloudscheduler_pb2.CreateJobRequest,
                google.cloud.scheduler.v1.job_pb2.Job,
            ),
            '/google.cloud.scheduler.v1.CloudScheduler/UpdateJob': grpclib.const.Handler(
                self.UpdateJob,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.scheduler.v1.cloudscheduler_pb2.UpdateJobRequest,
                google.cloud.scheduler.v1.job_pb2.Job,
            ),
            '/google.cloud.scheduler.v1.CloudScheduler/DeleteJob': grpclib.const.Handler(
                self.DeleteJob,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.scheduler.v1.cloudscheduler_pb2.DeleteJobRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.cloud.scheduler.v1.CloudScheduler/PauseJob': grpclib.const.Handler(
                self.PauseJob,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.scheduler.v1.cloudscheduler_pb2.PauseJobRequest,
                google.cloud.scheduler.v1.job_pb2.Job,
            ),
            '/google.cloud.scheduler.v1.CloudScheduler/ResumeJob': grpclib.const.Handler(
                self.ResumeJob,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.scheduler.v1.cloudscheduler_pb2.ResumeJobRequest,
                google.cloud.scheduler.v1.job_pb2.Job,
            ),
            '/google.cloud.scheduler.v1.CloudScheduler/RunJob': grpclib.const.Handler(
                self.RunJob,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.scheduler.v1.cloudscheduler_pb2.RunJobRequest,
                google.cloud.scheduler.v1.job_pb2.Job,
            ),
        }


class CloudSchedulerStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListJobs = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.scheduler.v1.CloudScheduler/ListJobs',
            google.cloud.scheduler.v1.cloudscheduler_pb2.ListJobsRequest,
            google.cloud.scheduler.v1.cloudscheduler_pb2.ListJobsResponse,
        )
        self.GetJob = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.scheduler.v1.CloudScheduler/GetJob',
            google.cloud.scheduler.v1.cloudscheduler_pb2.GetJobRequest,
            google.cloud.scheduler.v1.job_pb2.Job,
        )
        self.CreateJob = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.scheduler.v1.CloudScheduler/CreateJob',
            google.cloud.scheduler.v1.cloudscheduler_pb2.CreateJobRequest,
            google.cloud.scheduler.v1.job_pb2.Job,
        )
        self.UpdateJob = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.scheduler.v1.CloudScheduler/UpdateJob',
            google.cloud.scheduler.v1.cloudscheduler_pb2.UpdateJobRequest,
            google.cloud.scheduler.v1.job_pb2.Job,
        )
        self.DeleteJob = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.scheduler.v1.CloudScheduler/DeleteJob',
            google.cloud.scheduler.v1.cloudscheduler_pb2.DeleteJobRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.PauseJob = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.scheduler.v1.CloudScheduler/PauseJob',
            google.cloud.scheduler.v1.cloudscheduler_pb2.PauseJobRequest,
            google.cloud.scheduler.v1.job_pb2.Job,
        )
        self.ResumeJob = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.scheduler.v1.CloudScheduler/ResumeJob',
            google.cloud.scheduler.v1.cloudscheduler_pb2.ResumeJobRequest,
            google.cloud.scheduler.v1.job_pb2.Job,
        )
        self.RunJob = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.scheduler.v1.CloudScheduler/RunJob',
            google.cloud.scheduler.v1.cloudscheduler_pb2.RunJobRequest,
            google.cloud.scheduler.v1.job_pb2.Job,
        )
