"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import google.type.dayofweek_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Service(google.protobuf.message.Message):
    """A managed metastore service that serves metadata queries."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Service.State.ValueType = ...  # 0
        """The state of the metastore service is unknown."""

        CREATING: Service.State.ValueType = ...  # 1
        """The metastore service is in the process of being created."""

        ACTIVE: Service.State.ValueType = ...  # 2
        """The metastore service is running and ready to serve queries."""

        SUSPENDING: Service.State.ValueType = ...  # 3
        """The metastore service is entering suspension. Its query-serving
        availability may cease unexpectedly.
        """

        SUSPENDED: Service.State.ValueType = ...  # 4
        """The metastore service is suspended and unable to serve queries."""

        UPDATING: Service.State.ValueType = ...  # 5
        """The metastore service is being updated. It remains usable but cannot
        accept additional update requests or be deleted at this time.
        """

        DELETING: Service.State.ValueType = ...  # 6
        """The metastore service is undergoing deletion. It cannot be used."""

        ERROR: Service.State.ValueType = ...  # 7
        """The metastore service has encountered an error and cannot be used. The
        metastore service should be deleted.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The current state of the metastore service."""
        pass

    STATE_UNSPECIFIED: Service.State.ValueType = ...  # 0
    """The state of the metastore service is unknown."""

    CREATING: Service.State.ValueType = ...  # 1
    """The metastore service is in the process of being created."""

    ACTIVE: Service.State.ValueType = ...  # 2
    """The metastore service is running and ready to serve queries."""

    SUSPENDING: Service.State.ValueType = ...  # 3
    """The metastore service is entering suspension. Its query-serving
    availability may cease unexpectedly.
    """

    SUSPENDED: Service.State.ValueType = ...  # 4
    """The metastore service is suspended and unable to serve queries."""

    UPDATING: Service.State.ValueType = ...  # 5
    """The metastore service is being updated. It remains usable but cannot
    accept additional update requests or be deleted at this time.
    """

    DELETING: Service.State.ValueType = ...  # 6
    """The metastore service is undergoing deletion. It cannot be used."""

    ERROR: Service.State.ValueType = ...  # 7
    """The metastore service has encountered an error and cannot be used. The
    metastore service should be deleted.
    """


    class _Tier:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TierEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Tier.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TIER_UNSPECIFIED: Service.Tier.ValueType = ...  # 0
        """The tier is not set."""

        DEVELOPER: Service.Tier.ValueType = ...  # 1
        """The developer tier provides limited scalability and no fault tolerance.
        Good for low-cost proof-of-concept.
        """

        ENTERPRISE: Service.Tier.ValueType = ...  # 3
        """The enterprise tier provides multi-zone high availability, and sufficient
        scalability for enterprise-level Dataproc Metastore workloads.
        """

    class Tier(_Tier, metaclass=_TierEnumTypeWrapper):
        """Available service tiers."""
        pass

    TIER_UNSPECIFIED: Service.Tier.ValueType = ...  # 0
    """The tier is not set."""

    DEVELOPER: Service.Tier.ValueType = ...  # 1
    """The developer tier provides limited scalability and no fault tolerance.
    Good for low-cost proof-of-concept.
    """

    ENTERPRISE: Service.Tier.ValueType = ...  # 3
    """The enterprise tier provides multi-zone high availability, and sufficient
    scalability for enterprise-level Dataproc Metastore workloads.
    """


    class _ReleaseChannel:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ReleaseChannelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ReleaseChannel.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        RELEASE_CHANNEL_UNSPECIFIED: Service.ReleaseChannel.ValueType = ...  # 0
        """Release channel is not specified."""

        CANARY: Service.ReleaseChannel.ValueType = ...  # 1
        """The `CANARY` release channel contains the newest features, which may be
        unstable and subject to unresolved issues with no known workarounds.
        Services using the `CANARY` release channel are not subject to any SLAs.
        """

        STABLE: Service.ReleaseChannel.ValueType = ...  # 2
        """The `STABLE` release channel contains features that are considered stable
        and have been validated for production use.
        """

    class ReleaseChannel(_ReleaseChannel, metaclass=_ReleaseChannelEnumTypeWrapper):
        """Release channels bundle features of varying levels of stability. Newer
        features may be introduced initially into less stable release channels and
        can be automatically promoted into more stable release channels.
        """
        pass

    RELEASE_CHANNEL_UNSPECIFIED: Service.ReleaseChannel.ValueType = ...  # 0
    """Release channel is not specified."""

    CANARY: Service.ReleaseChannel.ValueType = ...  # 1
    """The `CANARY` release channel contains the newest features, which may be
    unstable and subject to unresolved issues with no known workarounds.
    Services using the `CANARY` release channel are not subject to any SLAs.
    """

    STABLE: Service.ReleaseChannel.ValueType = ...  # 2
    """The `STABLE` release channel contains features that are considered stable
    and have been validated for production use.
    """


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    HIVE_METASTORE_CONFIG_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    ENDPOINT_URI_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    STATE_MESSAGE_FIELD_NUMBER: builtins.int
    ARTIFACT_GCS_URI_FIELD_NUMBER: builtins.int
    TIER_FIELD_NUMBER: builtins.int
    METADATA_INTEGRATION_FIELD_NUMBER: builtins.int
    MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    METADATA_MANAGEMENT_ACTIVITY_FIELD_NUMBER: builtins.int
    RELEASE_CHANNEL_FIELD_NUMBER: builtins.int
    @property
    def hive_metastore_config(self) -> global___HiveMetastoreConfig:
        """Configuration information specific to running Hive metastore
        software as the metastore service.
        """
        pass
    name: typing.Text = ...
    """Immutable. The relative resource name of the metastore service, of the
    form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}`.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the metastore service was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the metastore service was last updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User-defined labels for the metastore service."""
        pass
    network: typing.Text = ...
    """Immutable. The relative resource name of the VPC network on which the
    instance can be accessed. It is specified in the following form:

    `projects/{project_number}/global/networks/{network_id}`.
    """

    endpoint_uri: typing.Text = ...
    """Output only. The URI of the endpoint used to access the metastore service."""

    port: builtins.int = ...
    """The TCP port at which the metastore service is reached. Default: 9083."""

    state: global___Service.State.ValueType = ...
    """Output only. The current state of the metastore service."""

    state_message: typing.Text = ...
    """Output only. Additional information about the current state of the
    metastore service, if available.
    """

    artifact_gcs_uri: typing.Text = ...
    """Output only. A Cloud Storage URI (starting with `gs://`) that specifies
    where artifacts related to the metastore service are stored.
    """

    tier: global___Service.Tier.ValueType = ...
    """The tier of the service."""

    @property
    def metadata_integration(self) -> global___MetadataIntegration:
        """The setting that defines how metastore metadata should be integrated with
        external services and systems.
        """
        pass
    @property
    def maintenance_window(self) -> global___MaintenanceWindow:
        """The one hour maintenance window of the metastore service. This specifies
        when the service can be restarted for maintenance purposes in UTC time.
        """
        pass
    uid: typing.Text = ...
    """Output only. The globally unique resource identifier of the metastore
    service.
    """

    @property
    def metadata_management_activity(self) -> global___MetadataManagementActivity:
        """Output only. The metadata management activities of the metastore service."""
        pass
    release_channel: global___Service.ReleaseChannel.ValueType = ...
    """Immutable. The release channel of the service.
    If unspecified, defaults to `STABLE`.
    """

    def __init__(self,
        *,
        hive_metastore_config : typing.Optional[global___HiveMetastoreConfig] = ...,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        network : typing.Text = ...,
        endpoint_uri : typing.Text = ...,
        port : builtins.int = ...,
        state : global___Service.State.ValueType = ...,
        state_message : typing.Text = ...,
        artifact_gcs_uri : typing.Text = ...,
        tier : global___Service.Tier.ValueType = ...,
        metadata_integration : typing.Optional[global___MetadataIntegration] = ...,
        maintenance_window : typing.Optional[global___MaintenanceWindow] = ...,
        uid : typing.Text = ...,
        metadata_management_activity : typing.Optional[global___MetadataManagementActivity] = ...,
        release_channel : global___Service.ReleaseChannel.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","hive_metastore_config",b"hive_metastore_config","maintenance_window",b"maintenance_window","metadata_integration",b"metadata_integration","metadata_management_activity",b"metadata_management_activity","metastore_config",b"metastore_config","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["artifact_gcs_uri",b"artifact_gcs_uri","create_time",b"create_time","endpoint_uri",b"endpoint_uri","hive_metastore_config",b"hive_metastore_config","labels",b"labels","maintenance_window",b"maintenance_window","metadata_integration",b"metadata_integration","metadata_management_activity",b"metadata_management_activity","metastore_config",b"metastore_config","name",b"name","network",b"network","port",b"port","release_channel",b"release_channel","state",b"state","state_message",b"state_message","tier",b"tier","uid",b"uid","update_time",b"update_time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["metastore_config",b"metastore_config"]) -> typing.Optional[typing_extensions.Literal["hive_metastore_config"]]: ...
global___Service = Service

class MetadataIntegration(google.protobuf.message.Message):
    """Specifies how metastore metadata should be integrated with external services."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_CATALOG_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def data_catalog_config(self) -> global___DataCatalogConfig:
        """The integration config for the Data Catalog service."""
        pass
    def __init__(self,
        *,
        data_catalog_config : typing.Optional[global___DataCatalogConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_catalog_config",b"data_catalog_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_catalog_config",b"data_catalog_config"]) -> None: ...
global___MetadataIntegration = MetadataIntegration

class DataCatalogConfig(google.protobuf.message.Message):
    """Specifies how metastore metadata should be integrated with the Data Catalog
    service.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Defines whether the metastore metadata should be synced to Data Catalog.
    The default value is to disable syncing metastore metadata to Data Catalog.
    """

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___DataCatalogConfig = DataCatalogConfig

class MaintenanceWindow(google.protobuf.message.Message):
    """Maintenance window. This specifies when Dataproc Metastore
    may perform system maintenance operation to the service.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HOUR_OF_DAY_FIELD_NUMBER: builtins.int
    DAY_OF_WEEK_FIELD_NUMBER: builtins.int
    @property
    def hour_of_day(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """The hour of day (0-23) when the window starts."""
        pass
    day_of_week: google.type.dayofweek_pb2.DayOfWeek.ValueType = ...
    """The day of week, when the window starts."""

    def __init__(self,
        *,
        hour_of_day : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        day_of_week : google.type.dayofweek_pb2.DayOfWeek.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hour_of_day",b"hour_of_day"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["day_of_week",b"day_of_week","hour_of_day",b"hour_of_day"]) -> None: ...
global___MaintenanceWindow = MaintenanceWindow

class HiveMetastoreConfig(google.protobuf.message.Message):
    """Specifies configuration information specific to running Hive metastore
    software as the metastore service.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ConfigOverridesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    VERSION_FIELD_NUMBER: builtins.int
    CONFIG_OVERRIDES_FIELD_NUMBER: builtins.int
    KERBEROS_CONFIG_FIELD_NUMBER: builtins.int
    version: typing.Text = ...
    """Immutable. The Hive metastore schema version."""

    @property
    def config_overrides(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """A mapping of Hive metastore configuration key-value pairs to apply to the
        Hive metastore (configured in `hive-site.xml`). The mappings
        override system defaults (some keys cannot be overridden).
        """
        pass
    @property
    def kerberos_config(self) -> global___KerberosConfig:
        """Information used to configure the Hive metastore service as a service
        principal in a Kerberos realm. To disable Kerberos, use the `UpdateService`
        method and specify this field's path
        (`hive_metastore_config.kerberos_config`) in the request's `update_mask`
        while omitting this field from the request's `service`.
        """
        pass
    def __init__(self,
        *,
        version : typing.Text = ...,
        config_overrides : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        kerberos_config : typing.Optional[global___KerberosConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["kerberos_config",b"kerberos_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_overrides",b"config_overrides","kerberos_config",b"kerberos_config","version",b"version"]) -> None: ...
global___HiveMetastoreConfig = HiveMetastoreConfig

class KerberosConfig(google.protobuf.message.Message):
    """Configuration information for a Kerberos principal."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEYTAB_FIELD_NUMBER: builtins.int
    PRINCIPAL_FIELD_NUMBER: builtins.int
    KRB5_CONFIG_GCS_URI_FIELD_NUMBER: builtins.int
    @property
    def keytab(self) -> global___Secret:
        """A Kerberos keytab file that can be used to authenticate a service principal
        with a Kerberos Key Distribution Center (KDC).
        """
        pass
    principal: typing.Text = ...
    """A Kerberos principal that exists in the both the keytab the KDC
    to authenticate as. A typical principal is of the form
    `primary/instance@REALM`, but there is no exact format.
    """

    krb5_config_gcs_uri: typing.Text = ...
    """A Cloud Storage URI that specifies the path to a
    krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf,
    although the file does not need to be named krb5.conf explicitly.
    """

    def __init__(self,
        *,
        keytab : typing.Optional[global___Secret] = ...,
        principal : typing.Text = ...,
        krb5_config_gcs_uri : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["keytab",b"keytab"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["keytab",b"keytab","krb5_config_gcs_uri",b"krb5_config_gcs_uri","principal",b"principal"]) -> None: ...
global___KerberosConfig = KerberosConfig

class Secret(google.protobuf.message.Message):
    """A securely stored value."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLOUD_SECRET_FIELD_NUMBER: builtins.int
    cloud_secret: typing.Text = ...
    """The relative resource name of a Secret Manager secret version, in the
    following form:

    `projects/{project_number}/secrets/{secret_id}/versions/{version_id}`.
    """

    def __init__(self,
        *,
        cloud_secret : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cloud_secret",b"cloud_secret","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cloud_secret",b"cloud_secret","value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value",b"value"]) -> typing.Optional[typing_extensions.Literal["cloud_secret"]]: ...
global___Secret = Secret

class MetadataManagementActivity(google.protobuf.message.Message):
    """The metadata management activities of the metastore service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    METADATA_EXPORTS_FIELD_NUMBER: builtins.int
    RESTORES_FIELD_NUMBER: builtins.int
    @property
    def metadata_exports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MetadataExport]:
        """Output only. The latest metadata exports of the metastore service."""
        pass
    @property
    def restores(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Restore]:
        """Output only. The latest restores of the metastore service."""
        pass
    def __init__(self,
        *,
        metadata_exports : typing.Optional[typing.Iterable[global___MetadataExport]] = ...,
        restores : typing.Optional[typing.Iterable[global___Restore]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadata_exports",b"metadata_exports","restores",b"restores"]) -> None: ...
global___MetadataManagementActivity = MetadataManagementActivity

class MetadataImport(google.protobuf.message.Message):
    """A metastore resource that imports metadata."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: MetadataImport.State.ValueType = ...  # 0
        """The state of the metadata import is unknown."""

        RUNNING: MetadataImport.State.ValueType = ...  # 1
        """The metadata import is running."""

        SUCCEEDED: MetadataImport.State.ValueType = ...  # 2
        """The metadata import completed successfully."""

        UPDATING: MetadataImport.State.ValueType = ...  # 3
        """The metadata import is being updated."""

        FAILED: MetadataImport.State.ValueType = ...  # 4
        """The metadata import failed, and attempted metadata changes were rolled
        back.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The current state of the metadata import."""
        pass

    STATE_UNSPECIFIED: MetadataImport.State.ValueType = ...  # 0
    """The state of the metadata import is unknown."""

    RUNNING: MetadataImport.State.ValueType = ...  # 1
    """The metadata import is running."""

    SUCCEEDED: MetadataImport.State.ValueType = ...  # 2
    """The metadata import completed successfully."""

    UPDATING: MetadataImport.State.ValueType = ...  # 3
    """The metadata import is being updated."""

    FAILED: MetadataImport.State.ValueType = ...  # 4
    """The metadata import failed, and attempted metadata changes were rolled
    back.
    """


    class DatabaseDump(google.protobuf.message.Message):
        """A specification of the location of and metadata about a database dump from
        a relational database management system.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _DatabaseType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _DatabaseTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DatabaseType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            DATABASE_TYPE_UNSPECIFIED: MetadataImport.DatabaseDump.DatabaseType.ValueType = ...  # 0
            """The type of the source database is unknown."""

            MYSQL: MetadataImport.DatabaseDump.DatabaseType.ValueType = ...  # 1
            """The type of the source database is MySQL."""

        class DatabaseType(_DatabaseType, metaclass=_DatabaseTypeEnumTypeWrapper):
            """The type of the database."""
            pass

        DATABASE_TYPE_UNSPECIFIED: MetadataImport.DatabaseDump.DatabaseType.ValueType = ...  # 0
        """The type of the source database is unknown."""

        MYSQL: MetadataImport.DatabaseDump.DatabaseType.ValueType = ...  # 1
        """The type of the source database is MySQL."""


        DATABASE_TYPE_FIELD_NUMBER: builtins.int
        GCS_URI_FIELD_NUMBER: builtins.int
        SOURCE_DATABASE_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        database_type: global___MetadataImport.DatabaseDump.DatabaseType.ValueType = ...
        """The type of the database."""

        gcs_uri: typing.Text = ...
        """A Cloud Storage object or folder URI that specifies the source from which
        to import metadata. It must begin with `gs://`.
        """

        source_database: typing.Text = ...
        """The name of the source database."""

        type: global___DatabaseDumpSpec.Type.ValueType = ...
        """Optional. The type of the database dump. If unspecified, defaults to
        `MYSQL`.
        """

        def __init__(self,
            *,
            database_type : global___MetadataImport.DatabaseDump.DatabaseType.ValueType = ...,
            gcs_uri : typing.Text = ...,
            source_database : typing.Text = ...,
            type : global___DatabaseDumpSpec.Type.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["database_type",b"database_type","gcs_uri",b"gcs_uri","source_database",b"source_database","type",b"type"]) -> None: ...

    DATABASE_DUMP_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    @property
    def database_dump(self) -> global___MetadataImport.DatabaseDump:
        """Immutable. A database dump from a pre-existing metastore's database."""
        pass
    name: typing.Text = ...
    """Immutable. The relative resource name of the metadata import, of the form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}`.
    """

    description: typing.Text = ...
    """The description of the metadata import."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the metadata import was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the metadata import was last updated."""
        pass
    state: global___MetadataImport.State.ValueType = ...
    """Output only. The current state of the metadata import."""

    def __init__(self,
        *,
        database_dump : typing.Optional[global___MetadataImport.DatabaseDump] = ...,
        name : typing.Text = ...,
        description : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___MetadataImport.State.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","database_dump",b"database_dump","metadata",b"metadata","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","database_dump",b"database_dump","description",b"description","metadata",b"metadata","name",b"name","state",b"state","update_time",b"update_time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["metadata",b"metadata"]) -> typing.Optional[typing_extensions.Literal["database_dump"]]: ...
global___MetadataImport = MetadataImport

class MetadataExport(google.protobuf.message.Message):
    """The details of a metadata export operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: MetadataExport.State.ValueType = ...  # 0
        """The state of the metadata export is unknown."""

        RUNNING: MetadataExport.State.ValueType = ...  # 1
        """The metadata export is running."""

        SUCCEEDED: MetadataExport.State.ValueType = ...  # 2
        """The metadata export completed successfully."""

        FAILED: MetadataExport.State.ValueType = ...  # 3
        """The metadata export failed."""

        CANCELLED: MetadataExport.State.ValueType = ...  # 4
        """The metadata export is cancelled."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The current state of the metadata export."""
        pass

    STATE_UNSPECIFIED: MetadataExport.State.ValueType = ...  # 0
    """The state of the metadata export is unknown."""

    RUNNING: MetadataExport.State.ValueType = ...  # 1
    """The metadata export is running."""

    SUCCEEDED: MetadataExport.State.ValueType = ...  # 2
    """The metadata export completed successfully."""

    FAILED: MetadataExport.State.ValueType = ...  # 3
    """The metadata export failed."""

    CANCELLED: MetadataExport.State.ValueType = ...  # 4
    """The metadata export is cancelled."""


    DESTINATION_GCS_URI_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    DATABASE_DUMP_TYPE_FIELD_NUMBER: builtins.int
    destination_gcs_uri: typing.Text = ...
    """Output only. A Cloud Storage URI of a folder that metadata are exported
    to, in the form of
    `gs://<bucket_name>/<path_inside_bucket>/<export_folder>`, where
    `<export_folder>` is automatically generated.
    """

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the export started."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the export ended."""
        pass
    state: global___MetadataExport.State.ValueType = ...
    """Output only. The current state of the export."""

    database_dump_type: global___DatabaseDumpSpec.Type.ValueType = ...
    """Output only. The type of the database dump."""

    def __init__(self,
        *,
        destination_gcs_uri : typing.Text = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___MetadataExport.State.ValueType = ...,
        database_dump_type : global___DatabaseDumpSpec.Type.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination",b"destination","destination_gcs_uri",b"destination_gcs_uri","end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["database_dump_type",b"database_dump_type","destination",b"destination","destination_gcs_uri",b"destination_gcs_uri","end_time",b"end_time","start_time",b"start_time","state",b"state"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["destination",b"destination"]) -> typing.Optional[typing_extensions.Literal["destination_gcs_uri"]]: ...
global___MetadataExport = MetadataExport

class Backup(google.protobuf.message.Message):
    """The details of a backup resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Backup.State.ValueType = ...  # 0
        """The state of the backup is unknown."""

        CREATING: Backup.State.ValueType = ...  # 1
        """The backup is being created."""

        DELETING: Backup.State.ValueType = ...  # 2
        """The backup is being deleted."""

        ACTIVE: Backup.State.ValueType = ...  # 3
        """The backup is active and ready to use."""

        FAILED: Backup.State.ValueType = ...  # 4
        """The backup failed."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The current state of the backup."""
        pass

    STATE_UNSPECIFIED: Backup.State.ValueType = ...  # 0
    """The state of the backup is unknown."""

    CREATING: Backup.State.ValueType = ...  # 1
    """The backup is being created."""

    DELETING: Backup.State.ValueType = ...  # 2
    """The backup is being deleted."""

    ACTIVE: Backup.State.ValueType = ...  # 3
    """The backup is active and ready to use."""

    FAILED: Backup.State.ValueType = ...  # 4
    """The backup failed."""


    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    SERVICE_REVISION_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Immutable. The relative resource name of the backup, in the following form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}`
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the backup was started."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the backup finished creating."""
        pass
    state: global___Backup.State.ValueType = ...
    """Output only. The current state of the backup."""

    @property
    def service_revision(self) -> global___Service:
        """Output only. The revision of the service at the time of backup."""
        pass
    description: typing.Text = ...
    """The description of the backup."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___Backup.State.ValueType = ...,
        service_revision : typing.Optional[global___Service] = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","service_revision",b"service_revision"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","end_time",b"end_time","name",b"name","service_revision",b"service_revision","state",b"state"]) -> None: ...
global___Backup = Backup

class Restore(google.protobuf.message.Message):
    """The details of a metadata restore operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Restore.State.ValueType = ...  # 0
        """The state of the metadata restore is unknown."""

        RUNNING: Restore.State.ValueType = ...  # 1
        """The metadata restore is running."""

        SUCCEEDED: Restore.State.ValueType = ...  # 2
        """The metadata restore completed successfully."""

        FAILED: Restore.State.ValueType = ...  # 3
        """The metadata restore failed."""

        CANCELLED: Restore.State.ValueType = ...  # 4
        """The metadata restore is cancelled."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The current state of the restore."""
        pass

    STATE_UNSPECIFIED: Restore.State.ValueType = ...  # 0
    """The state of the metadata restore is unknown."""

    RUNNING: Restore.State.ValueType = ...  # 1
    """The metadata restore is running."""

    SUCCEEDED: Restore.State.ValueType = ...  # 2
    """The metadata restore completed successfully."""

    FAILED: Restore.State.ValueType = ...  # 3
    """The metadata restore failed."""

    CANCELLED: Restore.State.ValueType = ...  # 4
    """The metadata restore is cancelled."""


    class _RestoreType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RestoreTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RestoreType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        RESTORE_TYPE_UNSPECIFIED: Restore.RestoreType.ValueType = ...  # 0
        """The restore type is unknown."""

        FULL: Restore.RestoreType.ValueType = ...  # 1
        """The service's metadata and configuration are restored."""

        METADATA_ONLY: Restore.RestoreType.ValueType = ...  # 2
        """Only the service's metadata is restored."""

    class RestoreType(_RestoreType, metaclass=_RestoreTypeEnumTypeWrapper):
        """The type of restore."""
        pass

    RESTORE_TYPE_UNSPECIFIED: Restore.RestoreType.ValueType = ...  # 0
    """The restore type is unknown."""

    FULL: Restore.RestoreType.ValueType = ...  # 1
    """The service's metadata and configuration are restored."""

    METADATA_ONLY: Restore.RestoreType.ValueType = ...  # 2
    """Only the service's metadata is restored."""


    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    BACKUP_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the restore started."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the restore ended."""
        pass
    state: global___Restore.State.ValueType = ...
    """Output only. The current state of the restore."""

    backup: typing.Text = ...
    """Output only. The relative resource name of the metastore service backup to
    restore from, in the following form:

    `projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}`
    """

    type: global___Restore.RestoreType.ValueType = ...
    """Output only. The type of restore."""

    details: typing.Text = ...
    """Output only. The restore details containing the revision of the service to
    be restored to, in format of JSON.
    """

    def __init__(self,
        *,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___Restore.State.ValueType = ...,
        backup : typing.Text = ...,
        type : global___Restore.RestoreType.ValueType = ...,
        details : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup",b"backup","details",b"details","end_time",b"end_time","start_time",b"start_time","state",b"state","type",b"type"]) -> None: ...
global___Restore = Restore

class ListServicesRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.ListServices][google.cloud.metastore.v1beta.DataprocMetastore.ListServices].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The relative resource name of the location of metastore services
    to list, in the following form:

    `projects/{project_number}/locations/{location_id}`.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of services to return. The response may
    contain less than the maximum number. If unspecified, no more than 500
    services are returned. The maximum value is 1000; values above 1000 are
    changed to 1000.
    """

    page_token: typing.Text = ...
    """Optional. A page token, received from a previous
    [DataprocMetastore.ListServices][google.cloud.metastore.v1beta.DataprocMetastore.ListServices]
    call. Provide this token to retrieve the subsequent page.

    To retrieve the first page, supply an empty page token.

    When paginating, other parameters provided to
    [DataprocMetastore.ListServices][google.cloud.metastore.v1beta.DataprocMetastore.ListServices]
    must match the call that provided the page token.
    """

    filter: typing.Text = ...
    """Optional. The filter to apply to list results."""

    order_by: typing.Text = ...
    """Optional. Specify the ordering of results as described in [Sorting
    Order](https://cloud.google.com/apis/design/design_patterns#sorting_order).
    If not specified, the results will be sorted in the default order.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListServicesRequest = ListServicesRequest

class ListServicesResponse(google.protobuf.message.Message):
    """Response message for
    [DataprocMetastore.ListServices][google.cloud.metastore.v1beta.DataprocMetastore.ListServices].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def services(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Service]:
        """The services in the specified location."""
        pass
    next_page_token: typing.Text = ...
    """A token that can be sent as `page_token` to retrieve the next page. If this
    field is omitted, there are no subsequent pages.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        services : typing.Optional[typing.Iterable[global___Service]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","services",b"services","unreachable",b"unreachable"]) -> None: ...
global___ListServicesResponse = ListServicesResponse

class GetServiceRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.GetService][google.cloud.metastore.v1beta.DataprocMetastore.GetService].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The relative resource name of the metastore service to retrieve,
    in the following form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetServiceRequest = GetServiceRequest

class CreateServiceRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.CreateService][google.cloud.metastore.v1beta.DataprocMetastore.CreateService].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    SERVICE_ID_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The relative resource name of the location in which to create a
    metastore service, in the following form:

    `projects/{project_number}/locations/{location_id}`.
    """

    service_id: typing.Text = ...
    """Required. The ID of the metastore service, which is used as the final
    component of the metastore service's name.

    This value must be between 2 and 63 characters long inclusive, begin with a
    letter, end with a letter or number, and consist of alpha-numeric
    ASCII characters or hyphens.
    """

    @property
    def service(self) -> global___Service:
        """Required. The Metastore service to create. The `name` field is
        ignored. The ID of the created metastore service must be provided in
        the request's `service_id` field.
        """
        pass
    request_id: typing.Text = ...
    """Optional. A request ID. Specify a unique request ID to allow the server to
    ignore the request if it has completed. The server will ignore subsequent
    requests that provide a duplicate request ID for at least 60 minutes after
    the first request.

    For example, if an initial request times out, followed by another request
    with the same request ID, the server ignores the second request to prevent
    the creation of duplicate commitments.

    The request ID must be a valid
    [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
    A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        service_id : typing.Text = ...,
        service : typing.Optional[global___Service] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["service",b"service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","request_id",b"request_id","service",b"service","service_id",b"service_id"]) -> None: ...
global___CreateServiceRequest = CreateServiceRequest

class UpdateServiceRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.UpdateService][google.cloud.metastore.v1beta.DataprocMetastore.UpdateService].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. A field mask used to specify the fields to be overwritten in the
        metastore service resource by the update.
        Fields specified in the `update_mask` are relative to the resource (not
        to the full request). A field is overwritten if it is in the mask.
        """
        pass
    @property
    def service(self) -> global___Service:
        """Required. The metastore service to update. The server only merges fields
        in the service if they are specified in `update_mask`.

        The metastore service's `name` field is used to identify the metastore
        service to be updated.
        """
        pass
    request_id: typing.Text = ...
    """Optional. A request ID. Specify a unique request ID to allow the server to
    ignore the request if it has completed. The server will ignore subsequent
    requests that provide a duplicate request ID for at least 60 minutes after
    the first request.

    For example, if an initial request times out, followed by another request
    with the same request ID, the server ignores the second request to prevent
    the creation of duplicate commitments.

    The request ID must be a valid
    [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
    A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
    """

    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        service : typing.Optional[global___Service] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["service",b"service","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_id",b"request_id","service",b"service","update_mask",b"update_mask"]) -> None: ...
global___UpdateServiceRequest = UpdateServiceRequest

class DeleteServiceRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.DeleteService][google.cloud.metastore.v1beta.DataprocMetastore.DeleteService].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The relative resource name of the metastore service to delete, in
    the following form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}`.
    """

    request_id: typing.Text = ...
    """Optional. A request ID. Specify a unique request ID to allow the server to
    ignore the request if it has completed. The server will ignore subsequent
    requests that provide a duplicate request ID for at least 60 minutes after
    the first request.

    For example, if an initial request times out, followed by another request
    with the same request ID, the server ignores the second request to prevent
    the creation of duplicate commitments.

    The request ID must be a valid
    [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
    A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteServiceRequest = DeleteServiceRequest

class ListMetadataImportsRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.ListMetadataImports][google.cloud.metastore.v1beta.DataprocMetastore.ListMetadataImports].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The relative resource name of the service whose metadata imports
    to list, in the following form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports`.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of imports to return. The response may contain
    less than the maximum number. If unspecified, no more than 500 imports are
    returned. The maximum value is 1000; values above 1000 are changed to 1000.
    """

    page_token: typing.Text = ...
    """Optional. A page token, received from a previous
    [DataprocMetastore.ListServices][google.cloud.metastore.v1beta.DataprocMetastore.ListServices]
    call. Provide this token to retrieve the subsequent page.

    To retrieve the first page, supply an empty page token.

    When paginating, other parameters provided to
    [DataprocMetastore.ListServices][google.cloud.metastore.v1beta.DataprocMetastore.ListServices]
    must match the call that provided the page token.
    """

    filter: typing.Text = ...
    """Optional. The filter to apply to list results."""

    order_by: typing.Text = ...
    """Optional. Specify the ordering of results as described in [Sorting
    Order](https://cloud.google.com/apis/design/design_patterns#sorting_order).
    If not specified, the results will be sorted in the default order.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListMetadataImportsRequest = ListMetadataImportsRequest

class ListMetadataImportsResponse(google.protobuf.message.Message):
    """Response message for
    [DataprocMetastore.ListMetadataImports][google.cloud.metastore.v1beta.DataprocMetastore.ListMetadataImports].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    METADATA_IMPORTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def metadata_imports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MetadataImport]:
        """The imports in the specified service."""
        pass
    next_page_token: typing.Text = ...
    """A token that can be sent as `page_token` to retrieve the next page. If this
    field is omitted, there are no subsequent pages.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        metadata_imports : typing.Optional[typing.Iterable[global___MetadataImport]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadata_imports",b"metadata_imports","next_page_token",b"next_page_token","unreachable",b"unreachable"]) -> None: ...
global___ListMetadataImportsResponse = ListMetadataImportsResponse

class GetMetadataImportRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.GetMetadataImport][google.cloud.metastore.v1beta.DataprocMetastore.GetMetadataImport].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The relative resource name of the metadata import to retrieve, in
    the following form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{import_id}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetMetadataImportRequest = GetMetadataImportRequest

class CreateMetadataImportRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.CreateMetadataImport][google.cloud.metastore.v1beta.DataprocMetastore.CreateMetadataImport].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    METADATA_IMPORT_ID_FIELD_NUMBER: builtins.int
    METADATA_IMPORT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The relative resource name of the service in which to create a
    metastore import, in the following form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}`
    """

    metadata_import_id: typing.Text = ...
    """Required. The ID of the metadata import, which is used as the final
    component of the metadata import's name.

    This value must be between 1 and 64 characters long, begin with a letter,
    end with a letter or number, and consist of alpha-numeric ASCII characters
    or hyphens.
    """

    @property
    def metadata_import(self) -> global___MetadataImport:
        """Required. The metadata import to create. The `name` field is ignored. The
        ID of the created metadata import must be provided in the request's
        `metadata_import_id` field.
        """
        pass
    request_id: typing.Text = ...
    """Optional. A request ID. Specify a unique request ID to allow the server to
    ignore the request if it has completed. The server will ignore subsequent
    requests that provide a duplicate request ID for at least 60 minutes after
    the first request.

    For example, if an initial request times out, followed by another request
    with the same request ID, the server ignores the second request to prevent
    the creation of duplicate commitments.

    The request ID must be a valid
    [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
    A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        metadata_import_id : typing.Text = ...,
        metadata_import : typing.Optional[global___MetadataImport] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata_import",b"metadata_import"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadata_import",b"metadata_import","metadata_import_id",b"metadata_import_id","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateMetadataImportRequest = CreateMetadataImportRequest

class UpdateMetadataImportRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.UpdateMetadataImport][google.cloud.metastore.v1beta.DataprocMetastore.UpdateMetadataImport].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    METADATA_IMPORT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. A field mask used to specify the fields to be overwritten in the
        metadata import resource by the update.
        Fields specified in the `update_mask` are relative to the resource (not
        to the full request). A field is overwritten if it is in the mask.
        """
        pass
    @property
    def metadata_import(self) -> global___MetadataImport:
        """Required. The metadata import to update. The server only merges fields
        in the import if they are specified in `update_mask`.

        The metadata import's `name` field is used to identify the metastore
        import to be updated.
        """
        pass
    request_id: typing.Text = ...
    """Optional. A request ID. Specify a unique request ID to allow the server to
    ignore the request if it has completed. The server will ignore subsequent
    requests that provide a duplicate request ID for at least 60 minutes after
    the first request.

    For example, if an initial request times out, followed by another request
    with the same request ID, the server ignores the second request to prevent
    the creation of duplicate commitments.

    The request ID must be a valid
    [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
    A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
    """

    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        metadata_import : typing.Optional[global___MetadataImport] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata_import",b"metadata_import","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadata_import",b"metadata_import","request_id",b"request_id","update_mask",b"update_mask"]) -> None: ...
global___UpdateMetadataImportRequest = UpdateMetadataImportRequest

class ListBackupsRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.ListBackups][google.cloud.metastore.v1beta.DataprocMetastore.ListBackups].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The relative resource name of the service whose backups to
    list, in the following form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}/backups`.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of backups to return. The response may contain
    less than the maximum number. If unspecified, no more than 500 backups are
    returned. The maximum value is 1000; values above 1000 are changed to 1000.
    """

    page_token: typing.Text = ...
    """Optional. A page token, received from a previous
    [DataprocMetastore.ListBackups][google.cloud.metastore.v1beta.DataprocMetastore.ListBackups]
    call. Provide this token to retrieve the subsequent page.

    To retrieve the first page, supply an empty page token.

    When paginating, other parameters provided to
    [DataprocMetastore.ListBackups][google.cloud.metastore.v1beta.DataprocMetastore.ListBackups]
    must match the call that provided the page token.
    """

    filter: typing.Text = ...
    """Optional. The filter to apply to list results."""

    order_by: typing.Text = ...
    """Optional. Specify the ordering of results as described in [Sorting
    Order](https://cloud.google.com/apis/design/design_patterns#sorting_order).
    If not specified, the results will be sorted in the default order.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListBackupsRequest = ListBackupsRequest

class ListBackupsResponse(google.protobuf.message.Message):
    """Response message for
    [DataprocMetastore.ListBackups][google.cloud.metastore.v1beta.DataprocMetastore.ListBackups].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKUPS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def backups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Backup]:
        """The backups of the specified service."""
        pass
    next_page_token: typing.Text = ...
    """A token that can be sent as `page_token` to retrieve the next page. If this
    field is omitted, there are no subsequent pages.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        backups : typing.Optional[typing.Iterable[global___Backup]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backups",b"backups","next_page_token",b"next_page_token","unreachable",b"unreachable"]) -> None: ...
global___ListBackupsResponse = ListBackupsResponse

class GetBackupRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.GetBackup][google.cloud.metastore.v1beta.DataprocMetastore.GetBackup].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The relative resource name of the backup to retrieve, in the
    following form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetBackupRequest = GetBackupRequest

class CreateBackupRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.CreateBackup][google.cloud.metastore.v1beta.DataprocMetastore.CreateBackup].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    BACKUP_ID_FIELD_NUMBER: builtins.int
    BACKUP_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The relative resource name of the service in which to create a
    backup of the following form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}`
    """

    backup_id: typing.Text = ...
    """Required. The ID of the backup, which is used as the final component of the
    backup's name.

    This value must be between 1 and 64 characters long, begin with a letter,
    end with a letter or number, and consist of alpha-numeric ASCII characters
    or hyphens.
    """

    @property
    def backup(self) -> global___Backup:
        """Required. The backup to create. The `name` field is ignored. The ID of the
        created backup must be provided in the request's `backup_id` field.
        """
        pass
    request_id: typing.Text = ...
    """Optional. A request ID. Specify a unique request ID to allow the server to
    ignore the request if it has completed. The server will ignore subsequent
    requests that provide a duplicate request ID for at least 60 minutes after
    the first request.

    For example, if an initial request times out, followed by another request
    with the same request ID, the server ignores the second request to prevent
    the creation of duplicate commitments.

    The request ID must be a valid
    [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
    A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        backup_id : typing.Text = ...,
        backup : typing.Optional[global___Backup] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["backup",b"backup"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup",b"backup","backup_id",b"backup_id","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateBackupRequest = CreateBackupRequest

class DeleteBackupRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.DeleteBackup][google.cloud.metastore.v1beta.DataprocMetastore.DeleteBackup].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The relative resource name of the backup to delete, in the
    following form:

    `projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}`.
    """

    request_id: typing.Text = ...
    """Optional. A request ID. Specify a unique request ID to allow the server to
    ignore the request if it has completed. The server will ignore subsequent
    requests that provide a duplicate request ID for at least 60 minutes after
    the first request.

    For example, if an initial request times out, followed by another request
    with the same request ID, the server ignores the second request to prevent
    the creation of duplicate commitments.

    The request ID must be a valid
    [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format)
    A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteBackupRequest = DeleteBackupRequest

class ExportMetadataRequest(google.protobuf.message.Message):
    """Request message for
    [DataprocMetastore.ExportMetadata][google.cloud.metastore.v1beta.DataprocMetastore.ExportMetadata].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESTINATION_GCS_FOLDER_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    DATABASE_DUMP_TYPE_FIELD_NUMBER: builtins.int
    destination_gcs_folder: typing.Text = ...
    """A Cloud Storage URI of a folder, in the format
    `gs://<bucket_name>/<path_inside_bucket>`. A sub-folder
    `<export_folder>` containing exported files will be created below it.
    """

    service: typing.Text = ...
    """Required. The relative resource name of the metastore service to run
    export, in the following form:

    `projects/{project_id}/locations/{location_id}/services/{service_id}`
    """

    request_id: typing.Text = ...
    """Optional. A request ID. Specify a unique request ID to allow the server to
    ignore the request if it has completed. The server will ignore subsequent
    requests that provide a duplicate request ID for at least 60 minutes after
    the first request.

    For example, if an initial request times out, followed by another request
    with the same request ID, the server ignores the second request to prevent
    the creation of duplicate commitments.

    The request ID must be a valid
    [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format).
    A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
    """

    database_dump_type: global___DatabaseDumpSpec.Type.ValueType = ...
    """Optional. The type of the database dump. If unspecified, defaults to
    `MYSQL`.
    """

    def __init__(self,
        *,
        destination_gcs_folder : typing.Text = ...,
        service : typing.Text = ...,
        request_id : typing.Text = ...,
        database_dump_type : global___DatabaseDumpSpec.Type.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination",b"destination","destination_gcs_folder",b"destination_gcs_folder"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["database_dump_type",b"database_dump_type","destination",b"destination","destination_gcs_folder",b"destination_gcs_folder","request_id",b"request_id","service",b"service"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["destination",b"destination"]) -> typing.Optional[typing_extensions.Literal["destination_gcs_folder"]]: ...
global___ExportMetadataRequest = ExportMetadataRequest

class RestoreServiceRequest(google.protobuf.message.Message):
    """Request message for [DataprocMetastore.Restore][]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_FIELD_NUMBER: builtins.int
    BACKUP_FIELD_NUMBER: builtins.int
    RESTORE_TYPE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    service: typing.Text = ...
    """Required. The relative resource name of the metastore service to run
    restore, in the following form:

    `projects/{project_id}/locations/{location_id}/services/{service_id}`
    """

    backup: typing.Text = ...
    """Required. The relative resource name of the metastore service backup to
    restore from, in the following form:

    `projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}`
    """

    restore_type: global___Restore.RestoreType.ValueType = ...
    """Optional. The type of restore. If unspecified, defaults to `METADATA_ONLY`."""

    request_id: typing.Text = ...
    """Optional. A request ID. Specify a unique request ID to allow the server to
    ignore the request if it has completed. The server will ignore subsequent
    requests that provide a duplicate request ID for at least 60 minutes after
    the first request.

    For example, if an initial request times out, followed by another request
    with the same request ID, the server ignores the second request to prevent
    the creation of duplicate commitments.

    The request ID must be a valid
    [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Format).
    A zero UUID (00000000-0000-0000-0000-000000000000) is not supported.
    """

    def __init__(self,
        *,
        service : typing.Text = ...,
        backup : typing.Text = ...,
        restore_type : global___Restore.RestoreType.ValueType = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup",b"backup","request_id",b"request_id","restore_type",b"restore_type","service",b"service"]) -> None: ...
global___RestoreServiceRequest = RestoreServiceRequest

class OperationMetadata(google.protobuf.message.Message):
    """Represents the metadata of a long-running operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    VERB_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    REQUESTED_CANCELLATION_FIELD_NUMBER: builtins.int
    API_VERSION_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    target: typing.Text = ...
    """Output only. Server-defined resource path for the target of the operation."""

    verb: typing.Text = ...
    """Output only. Name of the verb executed by the operation."""

    status_message: typing.Text = ...
    """Output only. Human-readable status of the operation, if any."""

    requested_cancellation: builtins.bool = ...
    """Output only. Identifies whether the caller has requested cancellation
    of the operation. Operations that have successfully been cancelled
    have [Operation.error][] value with a
    [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    `Code.CANCELLED`.
    """

    api_version: typing.Text = ...
    """Output only. API version used to start the operation."""

    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        target : typing.Text = ...,
        verb : typing.Text = ...,
        status_message : typing.Text = ...,
        requested_cancellation : builtins.bool = ...,
        api_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version",b"api_version","create_time",b"create_time","end_time",b"end_time","requested_cancellation",b"requested_cancellation","status_message",b"status_message","target",b"target","verb",b"verb"]) -> None: ...
global___OperationMetadata = OperationMetadata

class LocationMetadata(google.protobuf.message.Message):
    """Metadata about the service in a location."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class HiveMetastoreVersion(google.protobuf.message.Message):
        """A specification of a supported version of the Hive Metastore software."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VERSION_FIELD_NUMBER: builtins.int
        IS_DEFAULT_FIELD_NUMBER: builtins.int
        version: typing.Text = ...
        """The semantic version of the Hive Metastore software."""

        is_default: builtins.bool = ...
        """Whether `version` will be chosen by the server if a metastore service is
        created with a `HiveMetastoreConfig` that omits the `version`.
        """

        def __init__(self,
            *,
            version : typing.Text = ...,
            is_default : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["is_default",b"is_default","version",b"version"]) -> None: ...

    SUPPORTED_HIVE_METASTORE_VERSIONS_FIELD_NUMBER: builtins.int
    @property
    def supported_hive_metastore_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocationMetadata.HiveMetastoreVersion]:
        """The versions of Hive Metastore that can be used when creating a new
        metastore service in this location. The server guarantees that exactly one
        `HiveMetastoreVersion` in the list will set `is_default`.
        """
        pass
    def __init__(self,
        *,
        supported_hive_metastore_versions : typing.Optional[typing.Iterable[global___LocationMetadata.HiveMetastoreVersion]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["supported_hive_metastore_versions",b"supported_hive_metastore_versions"]) -> None: ...
global___LocationMetadata = LocationMetadata

class DatabaseDumpSpec(google.protobuf.message.Message):
    """The specification of database dump to import from or export to."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TYPE_UNSPECIFIED: DatabaseDumpSpec.Type.ValueType = ...  # 0
        """The type of the database dump is unknown."""

        MYSQL: DatabaseDumpSpec.Type.ValueType = ...  # 1
        """Database dump is a MySQL dump file."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The type of the database dump."""
        pass

    TYPE_UNSPECIFIED: DatabaseDumpSpec.Type.ValueType = ...  # 0
    """The type of the database dump is unknown."""

    MYSQL: DatabaseDumpSpec.Type.ValueType = ...  # 1
    """Database dump is a MySQL dump file."""


    def __init__(self,
        ) -> None: ...
global___DatabaseDumpSpec = DatabaseDumpSpec
