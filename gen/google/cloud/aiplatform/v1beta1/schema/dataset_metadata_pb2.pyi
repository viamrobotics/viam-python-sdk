"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ImageDatasetMetadata(google.protobuf.message.Message):
    """The metadata of Datasets that contain Image DataItems."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_ITEM_SCHEMA_URI_FIELD_NUMBER: builtins.int
    GCS_BUCKET_FIELD_NUMBER: builtins.int
    data_item_schema_uri: typing.Text = ...
    """Points to a YAML file stored on Google Cloud Storage describing payload of
    the Image DataItems that belong to this Dataset.
    """

    gcs_bucket: typing.Text = ...
    """Google Cloud Storage Bucket name that contains the blob data of this
    Dataset.
    """

    def __init__(self,
        *,
        data_item_schema_uri : typing.Text = ...,
        gcs_bucket : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_item_schema_uri",b"data_item_schema_uri","gcs_bucket",b"gcs_bucket"]) -> None: ...
global___ImageDatasetMetadata = ImageDatasetMetadata

class TextDatasetMetadata(google.protobuf.message.Message):
    """The metadata of Datasets that contain Text DataItems."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_ITEM_SCHEMA_URI_FIELD_NUMBER: builtins.int
    GCS_BUCKET_FIELD_NUMBER: builtins.int
    data_item_schema_uri: typing.Text = ...
    """Points to a YAML file stored on Google Cloud Storage describing payload of
    the Text DataItems that belong to this Dataset.
    """

    gcs_bucket: typing.Text = ...
    """Google Cloud Storage Bucket name that contains the blob data of this
    Dataset.
    """

    def __init__(self,
        *,
        data_item_schema_uri : typing.Text = ...,
        gcs_bucket : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_item_schema_uri",b"data_item_schema_uri","gcs_bucket",b"gcs_bucket"]) -> None: ...
global___TextDatasetMetadata = TextDatasetMetadata

class VideoDatasetMetadata(google.protobuf.message.Message):
    """The metadata of Datasets that contain Video DataItems."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_ITEM_SCHEMA_URI_FIELD_NUMBER: builtins.int
    GCS_BUCKET_FIELD_NUMBER: builtins.int
    data_item_schema_uri: typing.Text = ...
    """Points to a YAML file stored on Google Cloud Storage describing payload of
    the Video DataItems that belong to this Dataset.
    """

    gcs_bucket: typing.Text = ...
    """Google Cloud Storage Bucket name that contains the blob data of this
    Dataset.
    """

    def __init__(self,
        *,
        data_item_schema_uri : typing.Text = ...,
        gcs_bucket : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_item_schema_uri",b"data_item_schema_uri","gcs_bucket",b"gcs_bucket"]) -> None: ...
global___VideoDatasetMetadata = VideoDatasetMetadata

class TablesDatasetMetadata(google.protobuf.message.Message):
    """The metadata of Datasets that contain tables data."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class InputConfig(google.protobuf.message.Message):
        """The tables Dataset's data source. The Dataset doesn't store the data
        directly, but only pointer(s) to its data.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        GCS_SOURCE_FIELD_NUMBER: builtins.int
        BIGQUERY_SOURCE_FIELD_NUMBER: builtins.int
        @property
        def gcs_source(self) -> global___TablesDatasetMetadata.GcsSource: ...
        @property
        def bigquery_source(self) -> global___TablesDatasetMetadata.BigQuerySource: ...
        def __init__(self,
            *,
            gcs_source : typing.Optional[global___TablesDatasetMetadata.GcsSource] = ...,
            bigquery_source : typing.Optional[global___TablesDatasetMetadata.BigQuerySource] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["bigquery_source",b"bigquery_source","gcs_source",b"gcs_source","source",b"source"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["bigquery_source",b"bigquery_source","gcs_source",b"gcs_source","source",b"source"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["source",b"source"]) -> typing.Optional[typing_extensions.Literal["gcs_source","bigquery_source"]]: ...

    class GcsSource(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        URI_FIELD_NUMBER: builtins.int
        @property
        def uri(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Cloud Storage URI of one or more files. Only CSV files are supported.
            The first line of the CSV file is used as the header.
            If there are multiple files, the header is the first line of
            the lexicographically first file, the other files must either
            contain the exact same header or omit the header.
            """
            pass
        def __init__(self,
            *,
            uri : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...

    class BigQuerySource(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        URI_FIELD_NUMBER: builtins.int
        uri: typing.Text = ...
        """The URI of a BigQuery table.
        e.g. bq://projectId.bqDatasetId.bqTableId
        """

        def __init__(self,
            *,
            uri : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...

    INPUT_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def input_config(self) -> global___TablesDatasetMetadata.InputConfig: ...
    def __init__(self,
        *,
        input_config : typing.Optional[global___TablesDatasetMetadata.InputConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["input_config",b"input_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_config",b"input_config"]) -> None: ...
global___TablesDatasetMetadata = TablesDatasetMetadata

class TimeSeriesDatasetMetadata(google.protobuf.message.Message):
    """The metadata of Datasets that contain time series data."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class InputConfig(google.protobuf.message.Message):
        """The time series Dataset's data source. The Dataset doesn't store the data
        directly, but only pointer(s) to its data.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        GCS_SOURCE_FIELD_NUMBER: builtins.int
        BIGQUERY_SOURCE_FIELD_NUMBER: builtins.int
        @property
        def gcs_source(self) -> global___TimeSeriesDatasetMetadata.GcsSource: ...
        @property
        def bigquery_source(self) -> global___TimeSeriesDatasetMetadata.BigQuerySource: ...
        def __init__(self,
            *,
            gcs_source : typing.Optional[global___TimeSeriesDatasetMetadata.GcsSource] = ...,
            bigquery_source : typing.Optional[global___TimeSeriesDatasetMetadata.BigQuerySource] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["bigquery_source",b"bigquery_source","gcs_source",b"gcs_source","source",b"source"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["bigquery_source",b"bigquery_source","gcs_source",b"gcs_source","source",b"source"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["source",b"source"]) -> typing.Optional[typing_extensions.Literal["gcs_source","bigquery_source"]]: ...

    class GcsSource(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        URI_FIELD_NUMBER: builtins.int
        @property
        def uri(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Cloud Storage URI of one or more files. Only CSV files are supported.
            The first line of the CSV file is used as the header.
            If there are multiple files, the header is the first line of
            the lexicographically first file, the other files must either
            contain the exact same header or omit the header.
            """
            pass
        def __init__(self,
            *,
            uri : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...

    class BigQuerySource(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        URI_FIELD_NUMBER: builtins.int
        uri: typing.Text = ...
        """The URI of a BigQuery table."""

        def __init__(self,
            *,
            uri : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...

    INPUT_CONFIG_FIELD_NUMBER: builtins.int
    TIME_SERIES_IDENTIFIER_COLUMN_FIELD_NUMBER: builtins.int
    TIME_COLUMN_FIELD_NUMBER: builtins.int
    @property
    def input_config(self) -> global___TimeSeriesDatasetMetadata.InputConfig: ...
    time_series_identifier_column: typing.Text = ...
    """The column name of the time series identifier column that identifies the
    time series.
    """

    time_column: typing.Text = ...
    """The column name of the time column that identifies time order in the time
    series.
    """

    def __init__(self,
        *,
        input_config : typing.Optional[global___TimeSeriesDatasetMetadata.InputConfig] = ...,
        time_series_identifier_column : typing.Text = ...,
        time_column : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["input_config",b"input_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_config",b"input_config","time_column",b"time_column","time_series_identifier_column",b"time_series_identifier_column"]) -> None: ...
global___TimeSeriesDatasetMetadata = TimeSeriesDatasetMetadata
