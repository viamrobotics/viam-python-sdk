"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.aiplatform.v1beta1.schema.annotation_spec_color_pb2
import google.cloud.aiplatform.v1beta1.schema.geometry_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ImageClassificationAnnotation(google.protobuf.message.Message):
    """Annotation details specific to image classification."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANNOTATION_SPEC_ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    annotation_spec_id: typing.Text = ...
    """The resource Id of the AnnotationSpec that this Annotation pertains to."""

    display_name: typing.Text = ...
    """The display name of the AnnotationSpec that this Annotation pertains to."""

    def __init__(self,
        *,
        annotation_spec_id : typing.Text = ...,
        display_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_id",b"annotation_spec_id","display_name",b"display_name"]) -> None: ...
global___ImageClassificationAnnotation = ImageClassificationAnnotation

class ImageBoundingBoxAnnotation(google.protobuf.message.Message):
    """Annotation details specific to image object detection."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANNOTATION_SPEC_ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    X_MIN_FIELD_NUMBER: builtins.int
    X_MAX_FIELD_NUMBER: builtins.int
    Y_MIN_FIELD_NUMBER: builtins.int
    Y_MAX_FIELD_NUMBER: builtins.int
    annotation_spec_id: typing.Text = ...
    """The resource Id of the AnnotationSpec that this Annotation pertains to."""

    display_name: typing.Text = ...
    """The display name of the AnnotationSpec that this Annotation pertains to."""

    x_min: builtins.float = ...
    """The leftmost coordinate of the bounding box."""

    x_max: builtins.float = ...
    """The rightmost coordinate of the bounding box."""

    y_min: builtins.float = ...
    """The topmost coordinate of the bounding box."""

    y_max: builtins.float = ...
    """The bottommost coordinate of the bounding box."""

    def __init__(self,
        *,
        annotation_spec_id : typing.Text = ...,
        display_name : typing.Text = ...,
        x_min : builtins.float = ...,
        x_max : builtins.float = ...,
        y_min : builtins.float = ...,
        y_max : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_id",b"annotation_spec_id","display_name",b"display_name","x_max",b"x_max","x_min",b"x_min","y_max",b"y_max","y_min",b"y_min"]) -> None: ...
global___ImageBoundingBoxAnnotation = ImageBoundingBoxAnnotation

class ImageSegmentationAnnotation(google.protobuf.message.Message):
    """Annotation details specific to image segmentation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MaskAnnotation(google.protobuf.message.Message):
        """The mask based segmentation annotation."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MASK_GCS_URI_FIELD_NUMBER: builtins.int
        ANNOTATION_SPEC_COLORS_FIELD_NUMBER: builtins.int
        mask_gcs_uri: typing.Text = ...
        """Google Cloud Storage URI that points to the mask image. The image must be
        in PNG format. It must have the same size as the DataItem's image. Each
        pixel in the image mask represents the AnnotationSpec which the pixel in
        the image DataItem belong to. Each color is mapped to one AnnotationSpec
        based on annotation_spec_colors.
        """

        @property
        def annotation_spec_colors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.aiplatform.v1beta1.schema.annotation_spec_color_pb2.AnnotationSpecColor]:
            """The mapping between color and AnnotationSpec for this Annotation."""
            pass
        def __init__(self,
            *,
            mask_gcs_uri : typing.Text = ...,
            annotation_spec_colors : typing.Optional[typing.Iterable[google.cloud.aiplatform.v1beta1.schema.annotation_spec_color_pb2.AnnotationSpecColor]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_colors",b"annotation_spec_colors","mask_gcs_uri",b"mask_gcs_uri"]) -> None: ...

    class PolygonAnnotation(google.protobuf.message.Message):
        """Represents a polygon in image."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VERTEXES_FIELD_NUMBER: builtins.int
        ANNOTATION_SPEC_ID_FIELD_NUMBER: builtins.int
        DISPLAY_NAME_FIELD_NUMBER: builtins.int
        @property
        def vertexes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.aiplatform.v1beta1.schema.geometry_pb2.Vertex]:
            """The vertexes are connected one by one and the last vertex is connected to
            the first one to represent a polygon.
            """
            pass
        annotation_spec_id: typing.Text = ...
        """The resource Id of the AnnotationSpec that this Annotation pertains to."""

        display_name: typing.Text = ...
        """The display name of the AnnotationSpec that this Annotation pertains to."""

        def __init__(self,
            *,
            vertexes : typing.Optional[typing.Iterable[google.cloud.aiplatform.v1beta1.schema.geometry_pb2.Vertex]] = ...,
            annotation_spec_id : typing.Text = ...,
            display_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_id",b"annotation_spec_id","display_name",b"display_name","vertexes",b"vertexes"]) -> None: ...

    class PolylineAnnotation(google.protobuf.message.Message):
        """Represents a polyline in image."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VERTEXES_FIELD_NUMBER: builtins.int
        ANNOTATION_SPEC_ID_FIELD_NUMBER: builtins.int
        DISPLAY_NAME_FIELD_NUMBER: builtins.int
        @property
        def vertexes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.aiplatform.v1beta1.schema.geometry_pb2.Vertex]:
            """The vertexes are connected one by one and the last vertex in not
            connected to the first one.
            """
            pass
        annotation_spec_id: typing.Text = ...
        """The resource Id of the AnnotationSpec that this Annotation pertains to."""

        display_name: typing.Text = ...
        """The display name of the AnnotationSpec that this Annotation pertains to."""

        def __init__(self,
            *,
            vertexes : typing.Optional[typing.Iterable[google.cloud.aiplatform.v1beta1.schema.geometry_pb2.Vertex]] = ...,
            annotation_spec_id : typing.Text = ...,
            display_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_id",b"annotation_spec_id","display_name",b"display_name","vertexes",b"vertexes"]) -> None: ...

    MASK_ANNOTATION_FIELD_NUMBER: builtins.int
    POLYGON_ANNOTATION_FIELD_NUMBER: builtins.int
    POLYLINE_ANNOTATION_FIELD_NUMBER: builtins.int
    @property
    def mask_annotation(self) -> global___ImageSegmentationAnnotation.MaskAnnotation:
        """Mask based segmentation annotation. Only one mask annotation can exist
        for one image.
        """
        pass
    @property
    def polygon_annotation(self) -> global___ImageSegmentationAnnotation.PolygonAnnotation:
        """Polygon annotation."""
        pass
    @property
    def polyline_annotation(self) -> global___ImageSegmentationAnnotation.PolylineAnnotation:
        """Polyline annotation."""
        pass
    def __init__(self,
        *,
        mask_annotation : typing.Optional[global___ImageSegmentationAnnotation.MaskAnnotation] = ...,
        polygon_annotation : typing.Optional[global___ImageSegmentationAnnotation.PolygonAnnotation] = ...,
        polyline_annotation : typing.Optional[global___ImageSegmentationAnnotation.PolylineAnnotation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["annotation",b"annotation","mask_annotation",b"mask_annotation","polygon_annotation",b"polygon_annotation","polyline_annotation",b"polyline_annotation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation",b"annotation","mask_annotation",b"mask_annotation","polygon_annotation",b"polygon_annotation","polyline_annotation",b"polyline_annotation"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["annotation",b"annotation"]) -> typing.Optional[typing_extensions.Literal["mask_annotation","polygon_annotation","polyline_annotation"]]: ...
global___ImageSegmentationAnnotation = ImageSegmentationAnnotation

class TextClassificationAnnotation(google.protobuf.message.Message):
    """Annotation details specific to text classification."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANNOTATION_SPEC_ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    annotation_spec_id: typing.Text = ...
    """The resource Id of the AnnotationSpec that this Annotation pertains to."""

    display_name: typing.Text = ...
    """The display name of the AnnotationSpec that this Annotation pertains to."""

    def __init__(self,
        *,
        annotation_spec_id : typing.Text = ...,
        display_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_id",b"annotation_spec_id","display_name",b"display_name"]) -> None: ...
global___TextClassificationAnnotation = TextClassificationAnnotation

class TextExtractionAnnotation(google.protobuf.message.Message):
    """Annotation details specific to text extraction."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_SEGMENT_FIELD_NUMBER: builtins.int
    ANNOTATION_SPEC_ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    @property
    def text_segment(self) -> global___TextSegment:
        """The segment of the text content."""
        pass
    annotation_spec_id: typing.Text = ...
    """The resource Id of the AnnotationSpec that this Annotation pertains to."""

    display_name: typing.Text = ...
    """The display name of the AnnotationSpec that this Annotation pertains to."""

    def __init__(self,
        *,
        text_segment : typing.Optional[global___TextSegment] = ...,
        annotation_spec_id : typing.Text = ...,
        display_name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["text_segment",b"text_segment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_id",b"annotation_spec_id","display_name",b"display_name","text_segment",b"text_segment"]) -> None: ...
global___TextExtractionAnnotation = TextExtractionAnnotation

class TextSegment(google.protobuf.message.Message):
    """The text segment inside of DataItem."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_OFFSET_FIELD_NUMBER: builtins.int
    END_OFFSET_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    start_offset: builtins.int = ...
    """Zero-based character index of the first character of the text
    segment (counting characters from the beginning of the text).
    """

    end_offset: builtins.int = ...
    """Zero-based character index of the first character past the end of
    the text segment (counting character from the beginning of the text).
    The character at the end_offset is NOT included in the text segment.
    """

    content: typing.Text = ...
    """The text content in the segment for output only."""

    def __init__(self,
        *,
        start_offset : builtins.int = ...,
        end_offset : builtins.int = ...,
        content : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["content",b"content","end_offset",b"end_offset","start_offset",b"start_offset"]) -> None: ...
global___TextSegment = TextSegment

class TextSentimentAnnotation(google.protobuf.message.Message):
    """Annotation details specific to text sentiment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SENTIMENT_FIELD_NUMBER: builtins.int
    SENTIMENT_MAX_FIELD_NUMBER: builtins.int
    ANNOTATION_SPEC_ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    sentiment: builtins.int = ...
    """The sentiment score for text."""

    sentiment_max: builtins.int = ...
    """The sentiment max score for text."""

    annotation_spec_id: typing.Text = ...
    """The resource Id of the AnnotationSpec that this Annotation pertains to."""

    display_name: typing.Text = ...
    """The display name of the AnnotationSpec that this Annotation pertains to."""

    def __init__(self,
        *,
        sentiment : builtins.int = ...,
        sentiment_max : builtins.int = ...,
        annotation_spec_id : typing.Text = ...,
        display_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_id",b"annotation_spec_id","display_name",b"display_name","sentiment",b"sentiment","sentiment_max",b"sentiment_max"]) -> None: ...
global___TextSentimentAnnotation = TextSentimentAnnotation

class VideoClassificationAnnotation(google.protobuf.message.Message):
    """Annotation details specific to video classification."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TIME_SEGMENT_FIELD_NUMBER: builtins.int
    ANNOTATION_SPEC_ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    @property
    def time_segment(self) -> global___TimeSegment:
        """This Annotation applies to the time period represented by the TimeSegment.
        If it's not set, the Annotation applies to the whole video.
        """
        pass
    annotation_spec_id: typing.Text = ...
    """The resource Id of the AnnotationSpec that this Annotation pertains to."""

    display_name: typing.Text = ...
    """The display name of the AnnotationSpec that this Annotation pertains to."""

    def __init__(self,
        *,
        time_segment : typing.Optional[global___TimeSegment] = ...,
        annotation_spec_id : typing.Text = ...,
        display_name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time_segment",b"time_segment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_id",b"annotation_spec_id","display_name",b"display_name","time_segment",b"time_segment"]) -> None: ...
global___VideoClassificationAnnotation = VideoClassificationAnnotation

class TimeSegment(google.protobuf.message.Message):
    """A time period inside of a DataItem that has a time dimension (e.g. video)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_TIME_OFFSET_FIELD_NUMBER: builtins.int
    END_TIME_OFFSET_FIELD_NUMBER: builtins.int
    @property
    def start_time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """Start of the time segment (inclusive), represented as the duration since
        the start of the DataItem.
        """
        pass
    @property
    def end_time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """End of the time segment (exclusive), represented as the duration since the
        start of the DataItem.
        """
        pass
    def __init__(self,
        *,
        start_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        end_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time_offset",b"end_time_offset","start_time_offset",b"start_time_offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time_offset",b"end_time_offset","start_time_offset",b"start_time_offset"]) -> None: ...
global___TimeSegment = TimeSegment

class VideoObjectTrackingAnnotation(google.protobuf.message.Message):
    """Annotation details specific to video object tracking."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TIME_OFFSET_FIELD_NUMBER: builtins.int
    X_MIN_FIELD_NUMBER: builtins.int
    X_MAX_FIELD_NUMBER: builtins.int
    Y_MIN_FIELD_NUMBER: builtins.int
    Y_MAX_FIELD_NUMBER: builtins.int
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    ANNOTATION_SPEC_ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    @property
    def time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """A time (frame) of a video to which this annotation pertains.
        Represented as the duration since the video's start.
        """
        pass
    x_min: builtins.float = ...
    """The leftmost coordinate of the bounding box."""

    x_max: builtins.float = ...
    """The rightmost coordinate of the bounding box."""

    y_min: builtins.float = ...
    """The topmost coordinate of the bounding box."""

    y_max: builtins.float = ...
    """The bottommost coordinate of the bounding box."""

    instance_id: builtins.int = ...
    """The instance of the object, expressed as a positive integer. Used to track
    the same object across different frames.
    """

    annotation_spec_id: typing.Text = ...
    """The resource Id of the AnnotationSpec that this Annotation pertains to."""

    display_name: typing.Text = ...
    """The display name of the AnnotationSpec that this Annotation pertains to."""

    def __init__(self,
        *,
        time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        x_min : builtins.float = ...,
        x_max : builtins.float = ...,
        y_min : builtins.float = ...,
        y_max : builtins.float = ...,
        instance_id : builtins.int = ...,
        annotation_spec_id : typing.Text = ...,
        display_name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time_offset",b"time_offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_id",b"annotation_spec_id","display_name",b"display_name","instance_id",b"instance_id","time_offset",b"time_offset","x_max",b"x_max","x_min",b"x_min","y_max",b"y_max","y_min",b"y_min"]) -> None: ...
global___VideoObjectTrackingAnnotation = VideoObjectTrackingAnnotation

class VideoActionRecognitionAnnotation(google.protobuf.message.Message):
    """Annotation details specific to video action recognition."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TIME_SEGMENT_FIELD_NUMBER: builtins.int
    ANNOTATION_SPEC_ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    @property
    def time_segment(self) -> global___TimeSegment:
        """This Annotation applies to the time period represented by the TimeSegment.
        If it's not set, the Annotation applies to the whole video.
        """
        pass
    annotation_spec_id: typing.Text = ...
    """The resource Id of the AnnotationSpec that this Annotation pertains to."""

    display_name: typing.Text = ...
    """The display name of the AnnotationSpec that this Annotation pertains to."""

    def __init__(self,
        *,
        time_segment : typing.Optional[global___TimeSegment] = ...,
        annotation_spec_id : typing.Text = ...,
        display_name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time_segment",b"time_segment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_spec_id",b"annotation_spec_id","display_name",b"display_name","time_segment",b"time_segment"]) -> None: ...
global___VideoActionRecognitionAnnotation = VideoActionRecognitionAnnotation
