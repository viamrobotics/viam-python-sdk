"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Context(google.protobuf.message.Message):
    """Instance of a general context."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    PARENT_CONTEXTS_FIELD_NUMBER: builtins.int
    SCHEMA_TITLE_FIELD_NUMBER: builtins.int
    SCHEMA_VERSION_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The resource name of the Context."""

    display_name: typing.Text = ...
    """User provided display name of the Context.
    May be up to 128 Unicode characters.
    """

    etag: typing.Text = ...
    """An eTag used to perform consistent read-modify-write updates. If not set, a
    blind "overwrite" update happens.
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The labels with user-defined metadata to organize your Contexts.

        Label keys and values can be no longer than 64 characters
        (Unicode codepoints), can only contain lowercase letters, numeric
        characters, underscores and dashes. International characters are allowed.
        No more than 64 user labels can be associated with one Context (System
        labels are excluded).
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this Context was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this Context was last updated."""
        pass
    @property
    def parent_contexts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Output only. A list of resource names of Contexts that are parents of this Context.
        A Context may have at most 10 parent_contexts.
        """
        pass
    schema_title: typing.Text = ...
    """The title of the schema describing the metadata.

    Schema title and version is expected to be registered in earlier Create
    Schema calls. And both are used together as unique identifiers to identify
    schemas within the local metadata store.
    """

    schema_version: typing.Text = ...
    """The version of the schema in schema_name to use.

    Schema title and version is expected to be registered in earlier Create
    Schema calls. And both are used together as unique identifiers to identify
    schemas within the local metadata store.
    """

    @property
    def metadata(self) -> google.protobuf.struct_pb2.Struct:
        """Properties of the Context.
        The size of this field should not exceed 200KB.
        """
        pass
    description: typing.Text = ...
    """Description of the Context"""

    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        etag : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        parent_contexts : typing.Optional[typing.Iterable[typing.Text]] = ...,
        schema_title : typing.Text = ...,
        schema_version : typing.Text = ...,
        metadata : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","metadata",b"metadata","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","display_name",b"display_name","etag",b"etag","labels",b"labels","metadata",b"metadata","name",b"name","parent_contexts",b"parent_contexts","schema_title",b"schema_title","schema_version",b"schema_version","update_time",b"update_time"]) -> None: ...
global___Context = Context
