"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TensorboardTimeSeries(google.protobuf.message.Message):
    """TensorboardTimeSeries maps to times series produced in training runs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ValueType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ValueTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ValueType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        VALUE_TYPE_UNSPECIFIED: TensorboardTimeSeries.ValueType.ValueType = ...  # 0
        """The value type is unspecified."""

        SCALAR: TensorboardTimeSeries.ValueType.ValueType = ...  # 1
        """Used for TensorboardTimeSeries that is a list of scalars.
        E.g. accuracy of a model over epochs/time.
        """

        TENSOR: TensorboardTimeSeries.ValueType.ValueType = ...  # 2
        """Used for TensorboardTimeSeries that is a list of tensors.
        E.g. histograms of weights of layer in a model over epoch/time.
        """

        BLOB_SEQUENCE: TensorboardTimeSeries.ValueType.ValueType = ...  # 3
        """Used for TensorboardTimeSeries that is a list of blob sequences.
        E.g. set of sample images with labels over epochs/time.
        """

    class ValueType(_ValueType, metaclass=_ValueTypeEnumTypeWrapper):
        """An enum representing the value type of a TensorboardTimeSeries."""
        pass

    VALUE_TYPE_UNSPECIFIED: TensorboardTimeSeries.ValueType.ValueType = ...  # 0
    """The value type is unspecified."""

    SCALAR: TensorboardTimeSeries.ValueType.ValueType = ...  # 1
    """Used for TensorboardTimeSeries that is a list of scalars.
    E.g. accuracy of a model over epochs/time.
    """

    TENSOR: TensorboardTimeSeries.ValueType.ValueType = ...  # 2
    """Used for TensorboardTimeSeries that is a list of tensors.
    E.g. histograms of weights of layer in a model over epoch/time.
    """

    BLOB_SEQUENCE: TensorboardTimeSeries.ValueType.ValueType = ...  # 3
    """Used for TensorboardTimeSeries that is a list of blob sequences.
    E.g. set of sample images with labels over epochs/time.
    """


    class Metadata(google.protobuf.message.Message):
        """Describes metadata for a TensorboardTimeSeries."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MAX_STEP_FIELD_NUMBER: builtins.int
        MAX_WALL_TIME_FIELD_NUMBER: builtins.int
        MAX_BLOB_SEQUENCE_LENGTH_FIELD_NUMBER: builtins.int
        max_step: builtins.int = ...
        """Output only. Max step index of all data points within a TensorboardTimeSeries."""

        @property
        def max_wall_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Output only. Max wall clock timestamp of all data points within a
            TensorboardTimeSeries.
            """
            pass
        max_blob_sequence_length: builtins.int = ...
        """Output only. The largest blob sequence length (number of blobs) of all data points in
        this time series, if its ValueType is BLOB_SEQUENCE.
        """

        def __init__(self,
            *,
            max_step : builtins.int = ...,
            max_wall_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            max_blob_sequence_length : builtins.int = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["max_wall_time",b"max_wall_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["max_blob_sequence_length",b"max_blob_sequence_length","max_step",b"max_step","max_wall_time",b"max_wall_time"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    VALUE_TYPE_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    PLUGIN_NAME_FIELD_NUMBER: builtins.int
    PLUGIN_DATA_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. Name of the TensorboardTimeSeries."""

    display_name: typing.Text = ...
    """Required. User provided name of this TensorboardTimeSeries.
    This value should be unique among all TensorboardTimeSeries resources
    belonging to the same TensorboardRun resource (parent resource).
    """

    description: typing.Text = ...
    """Description of this TensorboardTimeSeries."""

    value_type: global___TensorboardTimeSeries.ValueType.ValueType = ...
    """Required. Immutable. Type of TensorboardTimeSeries value."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this TensorboardTimeSeries was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this TensorboardTimeSeries was last updated."""
        pass
    etag: typing.Text = ...
    """Used to perform a consistent read-modify-write updates. If not set, a blind
    "overwrite" update happens.
    """

    plugin_name: typing.Text = ...
    """Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor,
    Blob
    """

    plugin_data: builtins.bytes = ...
    """Data of the current plugin, with the size limited to 65KB."""

    @property
    def metadata(self) -> global___TensorboardTimeSeries.Metadata:
        """Output only. Scalar, Tensor, or Blob metadata for this TensorboardTimeSeries."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        value_type : global___TensorboardTimeSeries.ValueType.ValueType = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        etag : typing.Text = ...,
        plugin_name : typing.Text = ...,
        plugin_data : builtins.bytes = ...,
        metadata : typing.Optional[global___TensorboardTimeSeries.Metadata] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","metadata",b"metadata","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","display_name",b"display_name","etag",b"etag","metadata",b"metadata","name",b"name","plugin_data",b"plugin_data","plugin_name",b"plugin_name","update_time",b"update_time","value_type",b"value_type"]) -> None: ...
global___TensorboardTimeSeries = TensorboardTimeSeries
