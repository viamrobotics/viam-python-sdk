"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.aiplatform.v1beta1.deployed_model_ref_pb2
import google.cloud.aiplatform.v1beta1.encryption_spec_pb2
import google.cloud.aiplatform.v1beta1.env_var_pb2
import google.cloud.aiplatform.v1beta1.explanation_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Model(google.protobuf.message.Message):
    """A trained machine learning Model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DeploymentResourcesType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DeploymentResourcesTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DeploymentResourcesType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED: Model.DeploymentResourcesType.ValueType = ...  # 0
        """Should not be used."""

        DEDICATED_RESOURCES: Model.DeploymentResourcesType.ValueType = ...  # 1
        """Resources that are dedicated to the [DeployedModel][google.cloud.aiplatform.v1beta1.DeployedModel], and that need a
        higher degree of manual configuration.
        """

        AUTOMATIC_RESOURCES: Model.DeploymentResourcesType.ValueType = ...  # 2
        """Resources that to large degree are decided by Vertex AI, and require
        only a modest additional configuration.
        """

    class DeploymentResourcesType(_DeploymentResourcesType, metaclass=_DeploymentResourcesTypeEnumTypeWrapper):
        """Identifies a type of Model's prediction resources."""
        pass

    DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED: Model.DeploymentResourcesType.ValueType = ...  # 0
    """Should not be used."""

    DEDICATED_RESOURCES: Model.DeploymentResourcesType.ValueType = ...  # 1
    """Resources that are dedicated to the [DeployedModel][google.cloud.aiplatform.v1beta1.DeployedModel], and that need a
    higher degree of manual configuration.
    """

    AUTOMATIC_RESOURCES: Model.DeploymentResourcesType.ValueType = ...  # 2
    """Resources that to large degree are decided by Vertex AI, and require
    only a modest additional configuration.
    """


    class ExportFormat(google.protobuf.message.Message):
        """Represents export format supported by the Model.
        All formats export to Google Cloud Storage.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _ExportableContent:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ExportableContentEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ExportableContent.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            EXPORTABLE_CONTENT_UNSPECIFIED: Model.ExportFormat.ExportableContent.ValueType = ...  # 0
            """Should not be used."""

            ARTIFACT: Model.ExportFormat.ExportableContent.ValueType = ...  # 1
            """Model artifact and any of its supported files. Will be exported to the
            location specified by the `artifactDestination` field of the
            [ExportModelRequest.output_config][google.cloud.aiplatform.v1beta1.ExportModelRequest.output_config] object.
            """

            IMAGE: Model.ExportFormat.ExportableContent.ValueType = ...  # 2
            """The container image that is to be used when deploying this Model. Will
            be exported to the location specified by the `imageDestination` field
            of the [ExportModelRequest.output_config][google.cloud.aiplatform.v1beta1.ExportModelRequest.output_config] object.
            """

        class ExportableContent(_ExportableContent, metaclass=_ExportableContentEnumTypeWrapper):
            """The Model content that can be exported."""
            pass

        EXPORTABLE_CONTENT_UNSPECIFIED: Model.ExportFormat.ExportableContent.ValueType = ...  # 0
        """Should not be used."""

        ARTIFACT: Model.ExportFormat.ExportableContent.ValueType = ...  # 1
        """Model artifact and any of its supported files. Will be exported to the
        location specified by the `artifactDestination` field of the
        [ExportModelRequest.output_config][google.cloud.aiplatform.v1beta1.ExportModelRequest.output_config] object.
        """

        IMAGE: Model.ExportFormat.ExportableContent.ValueType = ...  # 2
        """The container image that is to be used when deploying this Model. Will
        be exported to the location specified by the `imageDestination` field
        of the [ExportModelRequest.output_config][google.cloud.aiplatform.v1beta1.ExportModelRequest.output_config] object.
        """


        ID_FIELD_NUMBER: builtins.int
        EXPORTABLE_CONTENTS_FIELD_NUMBER: builtins.int
        id: typing.Text = ...
        """Output only. The ID of the export format.
        The possible format IDs are:

        * `tflite`
        Used for Android mobile devices.

        * `edgetpu-tflite`
        Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices.

        * `tf-saved-model`
        A tensorflow model in SavedModel format.

        * `tf-js`
        A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used
        in the browser and in Node.js using JavaScript.

        * `core-ml`
        Used for iOS mobile devices.

        * `custom-trained`
        A Model that was uploaded or trained by custom code.
        """

        @property
        def exportable_contents(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Model.ExportFormat.ExportableContent.ValueType]:
            """Output only. The content of this Model that may be exported."""
            pass
        def __init__(self,
            *,
            id : typing.Text = ...,
            exportable_contents : typing.Optional[typing.Iterable[global___Model.ExportFormat.ExportableContent.ValueType]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["exportable_contents",b"exportable_contents","id",b"id"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    PREDICT_SCHEMATA_FIELD_NUMBER: builtins.int
    METADATA_SCHEMA_URI_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    SUPPORTED_EXPORT_FORMATS_FIELD_NUMBER: builtins.int
    TRAINING_PIPELINE_FIELD_NUMBER: builtins.int
    CONTAINER_SPEC_FIELD_NUMBER: builtins.int
    ARTIFACT_URI_FIELD_NUMBER: builtins.int
    SUPPORTED_DEPLOYMENT_RESOURCES_TYPES_FIELD_NUMBER: builtins.int
    SUPPORTED_INPUT_STORAGE_FORMATS_FIELD_NUMBER: builtins.int
    SUPPORTED_OUTPUT_STORAGE_FORMATS_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    DEPLOYED_MODELS_FIELD_NUMBER: builtins.int
    EXPLANATION_SPEC_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ENCRYPTION_SPEC_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the Model."""

    display_name: typing.Text = ...
    """Required. The display name of the Model.
    The name can be up to 128 characters long and can be consist of any UTF-8
    characters.
    """

    description: typing.Text = ...
    """The description of the Model."""

    @property
    def predict_schemata(self) -> global___PredictSchemata:
        """The schemata that describe formats of the Model's predictions and
        explanations as given and returned via
        [PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict] and [PredictionService.Explain][google.cloud.aiplatform.v1beta1.PredictionService.Explain].
        """
        pass
    metadata_schema_uri: typing.Text = ...
    """Immutable. Points to a YAML file stored on Google Cloud Storage describing additional
    information about the Model, that is specific to it. Unset if the Model
    does not have any additional information.
    The schema is defined as an OpenAPI 3.0.2 [Schema
    Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
    AutoML Models always have this field populated by Vertex AI, if no
    additional metadata is needed, this field is set to an empty string.
    Note: The URI given on output will be immutable and probably different,
    including the URI scheme, than the one given on input. The output URI will
    point to a location where the user only has a read access.
    """

    @property
    def metadata(self) -> google.protobuf.struct_pb2.Value:
        """Immutable. An additional information about the Model; the schema of the metadata can
        be found in [metadata_schema][google.cloud.aiplatform.v1beta1.Model.metadata_schema_uri].
        Unset if the Model does not have any additional information.
        """
        pass
    @property
    def supported_export_formats(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model.ExportFormat]:
        """Output only. The formats in which this Model may be exported. If empty, this Model is
        not available for export.
        """
        pass
    training_pipeline: typing.Text = ...
    """Output only. The resource name of the TrainingPipeline that uploaded this Model, if
    any.
    """

    @property
    def container_spec(self) -> global___ModelContainerSpec:
        """Input only. The specification of the container that is to be used when deploying
        this Model. The specification is ingested upon
        [ModelService.UploadModel][google.cloud.aiplatform.v1beta1.ModelService.UploadModel], and all binaries it contains are copied
        and stored internally by Vertex AI.
        Not present for AutoML Models.
        """
        pass
    artifact_uri: typing.Text = ...
    """Immutable. The path to the directory containing the Model artifact and any of its
    supporting files.
    Not present for AutoML Models.
    """

    @property
    def supported_deployment_resources_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Model.DeploymentResourcesType.ValueType]:
        """Output only. When this Model is deployed, its prediction resources are described by the
        `prediction_resources` field of the [Endpoint.deployed_models][google.cloud.aiplatform.v1beta1.Endpoint.deployed_models] object.
        Because not all Models support all resource configuration types, the
        configuration types this Model supports are listed here. If no
        configuration types are listed, the Model cannot be deployed to an
        [Endpoint][google.cloud.aiplatform.v1beta1.Endpoint] and does not support
        online predictions ([PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict] or
        [PredictionService.Explain][google.cloud.aiplatform.v1beta1.PredictionService.Explain]). Such a Model can serve predictions by
        using a [BatchPredictionJob][google.cloud.aiplatform.v1beta1.BatchPredictionJob], if it has at least one entry each in
        [supported_input_storage_formats][google.cloud.aiplatform.v1beta1.Model.supported_input_storage_formats] and
        [supported_output_storage_formats][google.cloud.aiplatform.v1beta1.Model.supported_output_storage_formats].
        """
        pass
    @property
    def supported_input_storage_formats(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Output only. The formats this Model supports in
        [BatchPredictionJob.input_config][google.cloud.aiplatform.v1beta1.BatchPredictionJob.input_config]. If
        [PredictSchemata.instance_schema_uri][google.cloud.aiplatform.v1beta1.PredictSchemata.instance_schema_uri] exists, the instances
        should be given as per that schema.

        The possible formats are:

        * `jsonl`
        The JSON Lines format, where each instance is a single line. Uses
        [GcsSource][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig.gcs_source].

        * `csv`
        The CSV format, where each instance is a single comma-separated line.
        The first line in the file is the header, containing comma-separated field
        names. Uses [GcsSource][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig.gcs_source].

        * `tf-record`
        The TFRecord format, where each instance is a single record in tfrecord
        syntax. Uses [GcsSource][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig.gcs_source].

        * `tf-record-gzip`
        Similar to `tf-record`, but the file is gzipped. Uses
        [GcsSource][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig.gcs_source].

        * `bigquery`
        Each instance is a single row in BigQuery. Uses
        [BigQuerySource][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig.bigquery_source].

        * `file-list`
        Each line of the file is the location of an instance to process, uses
        `gcs_source` field of the
        [InputConfig][google.cloud.aiplatform.v1beta1.BatchPredictionJob.InputConfig] object.


        If this Model doesn't support any of these formats it means it cannot be
        used with a [BatchPredictionJob][google.cloud.aiplatform.v1beta1.BatchPredictionJob]. However, if it has
        [supported_deployment_resources_types][google.cloud.aiplatform.v1beta1.Model.supported_deployment_resources_types], it could serve online
        predictions by using [PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict] or
        [PredictionService.Explain][google.cloud.aiplatform.v1beta1.PredictionService.Explain].
        """
        pass
    @property
    def supported_output_storage_formats(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Output only. The formats this Model supports in
        [BatchPredictionJob.output_config][google.cloud.aiplatform.v1beta1.BatchPredictionJob.output_config]. If both
        [PredictSchemata.instance_schema_uri][google.cloud.aiplatform.v1beta1.PredictSchemata.instance_schema_uri] and
        [PredictSchemata.prediction_schema_uri][google.cloud.aiplatform.v1beta1.PredictSchemata.prediction_schema_uri] exist, the predictions
        are returned together with their instances. In other words, the
        prediction has the original instance data first, followed
        by the actual prediction content (as per the schema).

        The possible formats are:

        * `jsonl`
        The JSON Lines format, where each prediction is a single line. Uses
        [GcsDestination][google.cloud.aiplatform.v1beta1.BatchPredictionJob.OutputConfig.gcs_destination].

        * `csv`
        The CSV format, where each prediction is a single comma-separated line.
        The first line in the file is the header, containing comma-separated field
        names. Uses
        [GcsDestination][google.cloud.aiplatform.v1beta1.BatchPredictionJob.OutputConfig.gcs_destination].

        * `bigquery`
        Each prediction is a single row in a BigQuery table, uses
        [BigQueryDestination][google.cloud.aiplatform.v1beta1.BatchPredictionJob.OutputConfig.bigquery_destination]
        .


        If this Model doesn't support any of these formats it means it cannot be
        used with a [BatchPredictionJob][google.cloud.aiplatform.v1beta1.BatchPredictionJob]. However, if it has
        [supported_deployment_resources_types][google.cloud.aiplatform.v1beta1.Model.supported_deployment_resources_types], it could serve online
        predictions by using [PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict] or
        [PredictionService.Explain][google.cloud.aiplatform.v1beta1.PredictionService.Explain].
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this Model was uploaded into Vertex AI."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this Model was most recently updated."""
        pass
    @property
    def deployed_models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.aiplatform.v1beta1.deployed_model_ref_pb2.DeployedModelRef]:
        """Output only. The pointers to DeployedModels created from this Model. Note that
        Model could have been deployed to Endpoints in different Locations.
        """
        pass
    @property
    def explanation_spec(self) -> google.cloud.aiplatform.v1beta1.explanation_pb2.ExplanationSpec:
        """The default explanation specification for this Model.

        The Model can be used for [requesting
        explanation][PredictionService.Explain] after being
        [deployed][google.cloud.aiplatform.v1beta1.EndpointService.DeployModel] if it is populated.
        The Model can be used for [batch
        explanation][BatchPredictionJob.generate_explanation] if it is populated.

        All fields of the explanation_spec can be overridden by
        [explanation_spec][google.cloud.aiplatform.v1beta1.DeployedModel.explanation_spec] of
        [DeployModelRequest.deployed_model][google.cloud.aiplatform.v1beta1.DeployModelRequest.deployed_model], or
        [explanation_spec][google.cloud.aiplatform.v1beta1.BatchPredictionJob.explanation_spec] of
        [BatchPredictionJob][google.cloud.aiplatform.v1beta1.BatchPredictionJob].

        If the default explanation specification is not set for this Model, this
        Model can still be used for [requesting
        explanation][PredictionService.Explain] by setting
        [explanation_spec][google.cloud.aiplatform.v1beta1.DeployedModel.explanation_spec] of
        [DeployModelRequest.deployed_model][google.cloud.aiplatform.v1beta1.DeployModelRequest.deployed_model] and for [batch
        explanation][BatchPredictionJob.generate_explanation] by setting
        [explanation_spec][google.cloud.aiplatform.v1beta1.BatchPredictionJob.explanation_spec] of
        [BatchPredictionJob][google.cloud.aiplatform.v1beta1.BatchPredictionJob].
        """
        pass
    etag: typing.Text = ...
    """Used to perform consistent read-modify-write updates. If not set, a blind
    "overwrite" update happens.
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The labels with user-defined metadata to organize your Models.

        Label keys and values can be no longer than 64 characters
        (Unicode codepoints), can only contain lowercase letters, numeric
        characters, underscores and dashes. International characters are allowed.

        See https://goo.gl/xmQnxf for more information and examples of labels.
        """
        pass
    @property
    def encryption_spec(self) -> google.cloud.aiplatform.v1beta1.encryption_spec_pb2.EncryptionSpec:
        """Customer-managed encryption key spec for a Model. If set, this
        Model and all sub-resources of this Model will be secured by this key.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        predict_schemata : typing.Optional[global___PredictSchemata] = ...,
        metadata_schema_uri : typing.Text = ...,
        metadata : typing.Optional[google.protobuf.struct_pb2.Value] = ...,
        supported_export_formats : typing.Optional[typing.Iterable[global___Model.ExportFormat]] = ...,
        training_pipeline : typing.Text = ...,
        container_spec : typing.Optional[global___ModelContainerSpec] = ...,
        artifact_uri : typing.Text = ...,
        supported_deployment_resources_types : typing.Optional[typing.Iterable[global___Model.DeploymentResourcesType.ValueType]] = ...,
        supported_input_storage_formats : typing.Optional[typing.Iterable[typing.Text]] = ...,
        supported_output_storage_formats : typing.Optional[typing.Iterable[typing.Text]] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        deployed_models : typing.Optional[typing.Iterable[google.cloud.aiplatform.v1beta1.deployed_model_ref_pb2.DeployedModelRef]] = ...,
        explanation_spec : typing.Optional[google.cloud.aiplatform.v1beta1.explanation_pb2.ExplanationSpec] = ...,
        etag : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        encryption_spec : typing.Optional[google.cloud.aiplatform.v1beta1.encryption_spec_pb2.EncryptionSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["container_spec",b"container_spec","create_time",b"create_time","encryption_spec",b"encryption_spec","explanation_spec",b"explanation_spec","metadata",b"metadata","predict_schemata",b"predict_schemata","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["artifact_uri",b"artifact_uri","container_spec",b"container_spec","create_time",b"create_time","deployed_models",b"deployed_models","description",b"description","display_name",b"display_name","encryption_spec",b"encryption_spec","etag",b"etag","explanation_spec",b"explanation_spec","labels",b"labels","metadata",b"metadata","metadata_schema_uri",b"metadata_schema_uri","name",b"name","predict_schemata",b"predict_schemata","supported_deployment_resources_types",b"supported_deployment_resources_types","supported_export_formats",b"supported_export_formats","supported_input_storage_formats",b"supported_input_storage_formats","supported_output_storage_formats",b"supported_output_storage_formats","training_pipeline",b"training_pipeline","update_time",b"update_time"]) -> None: ...
global___Model = Model

class PredictSchemata(google.protobuf.message.Message):
    """Contains the schemata used in Model's predictions and explanations via
    [PredictionService.Predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict], [PredictionService.Explain][google.cloud.aiplatform.v1beta1.PredictionService.Explain] and
    [BatchPredictionJob][google.cloud.aiplatform.v1beta1.BatchPredictionJob].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_SCHEMA_URI_FIELD_NUMBER: builtins.int
    PARAMETERS_SCHEMA_URI_FIELD_NUMBER: builtins.int
    PREDICTION_SCHEMA_URI_FIELD_NUMBER: builtins.int
    instance_schema_uri: typing.Text = ...
    """Immutable. Points to a YAML file stored on Google Cloud Storage describing the format
    of a single instance, which are used in [PredictRequest.instances][google.cloud.aiplatform.v1beta1.PredictRequest.instances],
    [ExplainRequest.instances][google.cloud.aiplatform.v1beta1.ExplainRequest.instances] and
    [BatchPredictionJob.input_config][google.cloud.aiplatform.v1beta1.BatchPredictionJob.input_config].
    The schema is defined as an OpenAPI 3.0.2 [Schema
    Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
    AutoML Models always have this field populated by Vertex AI.
    Note: The URI given on output will be immutable and probably different,
    including the URI scheme, than the one given on input. The output URI will
    point to a location where the user only has a read access.
    """

    parameters_schema_uri: typing.Text = ...
    """Immutable. Points to a YAML file stored on Google Cloud Storage describing the
    parameters of prediction and explanation via
    [PredictRequest.parameters][google.cloud.aiplatform.v1beta1.PredictRequest.parameters], [ExplainRequest.parameters][google.cloud.aiplatform.v1beta1.ExplainRequest.parameters] and
    [BatchPredictionJob.model_parameters][google.cloud.aiplatform.v1beta1.BatchPredictionJob.model_parameters].
    The schema is defined as an OpenAPI 3.0.2 [Schema
    Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
    AutoML Models always have this field populated by Vertex AI, if no
    parameters are supported, then it is set to an empty string.
    Note: The URI given on output will be immutable and probably different,
    including the URI scheme, than the one given on input. The output URI will
    point to a location where the user only has a read access.
    """

    prediction_schema_uri: typing.Text = ...
    """Immutable. Points to a YAML file stored on Google Cloud Storage describing the format
    of a single prediction produced by this Model, which are returned via
    [PredictResponse.predictions][google.cloud.aiplatform.v1beta1.PredictResponse.predictions], [ExplainResponse.explanations][google.cloud.aiplatform.v1beta1.ExplainResponse.explanations], and
    [BatchPredictionJob.output_config][google.cloud.aiplatform.v1beta1.BatchPredictionJob.output_config].
    The schema is defined as an OpenAPI 3.0.2 [Schema
    Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
    AutoML Models always have this field populated by Vertex AI.
    Note: The URI given on output will be immutable and probably different,
    including the URI scheme, than the one given on input. The output URI will
    point to a location where the user only has a read access.
    """

    def __init__(self,
        *,
        instance_schema_uri : typing.Text = ...,
        parameters_schema_uri : typing.Text = ...,
        prediction_schema_uri : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_schema_uri",b"instance_schema_uri","parameters_schema_uri",b"parameters_schema_uri","prediction_schema_uri",b"prediction_schema_uri"]) -> None: ...
global___PredictSchemata = PredictSchemata

class ModelContainerSpec(google.protobuf.message.Message):
    """Specification of a container for serving predictions. Some fields in this
    message correspond to fields in the [Kubernetes Container v1 core
    specification](https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IMAGE_URI_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    ENV_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    PREDICT_ROUTE_FIELD_NUMBER: builtins.int
    HEALTH_ROUTE_FIELD_NUMBER: builtins.int
    image_uri: typing.Text = ...
    """Required. Immutable. URI of the Docker image to be used as the custom container for serving
    predictions. This URI must identify an image in Artifact Registry or
    Container Registry. Learn more about the [container publishing
    requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#publishing),
    including permissions requirements for the Vertex AI Service Agent.

    The container image is ingested upon [ModelService.UploadModel][google.cloud.aiplatform.v1beta1.ModelService.UploadModel], stored
    internally, and this original path is afterwards not used.

    To learn about the requirements for the Docker image itself, see
    [Custom container
    requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#).

    You can use the URI to one of Vertex AI's [pre-built container images for
    prediction](https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers)
    in this field.
    """

    @property
    def command(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Immutable. Specifies the command that runs when the container starts. This overrides
        the container's
        [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint).
        Specify this field as an array of executable and arguments, similar to a
        Docker `ENTRYPOINT`'s "exec" form, not its "shell" form.

        If you do not specify this field, then the container's `ENTRYPOINT` runs,
        in conjunction with the [args][google.cloud.aiplatform.v1beta1.ModelContainerSpec.args] field or the
        container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd),
        if either exists. If this field is not specified and the container does not
        have an `ENTRYPOINT`, then refer to the Docker documentation about [how
        `CMD` and `ENTRYPOINT`
        interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).

        If you specify this field, then you can also specify the `args` field to
        provide additional arguments for this command. However, if you specify this
        field, then the container's `CMD` is ignored. See the
        [Kubernetes documentation about how the
        `command` and `args` fields interact with a container's `ENTRYPOINT` and
        `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes).

        In this field, you can reference [environment variables set by Vertex
        AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables)
        and environment variables set in the [env][google.cloud.aiplatform.v1beta1.ModelContainerSpec.env] field.
        You cannot reference environment variables set in the Docker image. In
        order for environment variables to be expanded, reference them by using the
        following syntax:
        <code>$(<var>VARIABLE_NAME</var>)</code>
        Note that this differs from Bash variable expansion, which does not use
        parentheses. If a variable cannot be resolved, the reference in the input
        string is used unchanged. To avoid variable expansion, you can escape this
        syntax with `$$`; for example:
        <code>$$(<var>VARIABLE_NAME</var>)</code>
        This field corresponds to the `command` field of the Kubernetes Containers
        [v1 core
        API](https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
        """
        pass
    @property
    def args(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Immutable. Specifies arguments for the command that runs when the container starts.
        This overrides the container's
        [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd). Specify
        this field as an array of executable and arguments, similar to a Docker
        `CMD`'s "default parameters" form.

        If you don't specify this field but do specify the
        [command][google.cloud.aiplatform.v1beta1.ModelContainerSpec.command] field, then the command from the
        `command` field runs without any additional arguments. See the
        [Kubernetes documentation about how the
        `command` and `args` fields interact with a container's `ENTRYPOINT` and
        `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes).

        If you don't specify this field and don't specify the `command` field,
        then the container's
        [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and
        `CMD` determine what runs based on their default behavior. See the Docker
        documentation about [how `CMD` and `ENTRYPOINT`
        interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact).

        In this field, you can reference [environment variables
        set by Vertex
        AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables)
        and environment variables set in the [env][google.cloud.aiplatform.v1beta1.ModelContainerSpec.env] field.
        You cannot reference environment variables set in the Docker image. In
        order for environment variables to be expanded, reference them by using the
        following syntax:
        <code>$(<var>VARIABLE_NAME</var>)</code>
        Note that this differs from Bash variable expansion, which does not use
        parentheses. If a variable cannot be resolved, the reference in the input
        string is used unchanged. To avoid variable expansion, you can escape this
        syntax with `$$`; for example:
        <code>$$(<var>VARIABLE_NAME</var>)</code>
        This field corresponds to the `args` field of the Kubernetes Containers
        [v1 core
        API](https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
        """
        pass
    @property
    def env(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.aiplatform.v1beta1.env_var_pb2.EnvVar]:
        """Immutable. List of environment variables to set in the container. After the container
        starts running, code running in the container can read these environment
        variables.

        Additionally, the [command][google.cloud.aiplatform.v1beta1.ModelContainerSpec.command] and
        [args][google.cloud.aiplatform.v1beta1.ModelContainerSpec.args] fields can reference these variables. Later
        entries in this list can also reference earlier entries. For example, the
        following example sets the variable `VAR_2` to have the value `foo bar`:

        ```json
        [
          {
            "name": "VAR_1",
            "value": "foo"
          },
          {
            "name": "VAR_2",
            "value": "$(VAR_1) bar"
          }
        ]
        ```

        If you switch the order of the variables in the example, then the expansion
        does not occur.

        This field corresponds to the `env` field of the Kubernetes Containers
        [v1 core
        API](https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
        """
        pass
    @property
    def ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Port]:
        """Immutable. List of ports to expose from the container. Vertex AI sends any
        prediction requests that it receives to the first port on this list. Vertex
        AI also sends
        [liveness and health
        checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#liveness)
        to this port.

        If you do not specify this field, it defaults to following value:

        ```json
        [
          {
            "containerPort": 8080
          }
        ]
        ```

        Vertex AI does not use ports other than the first one listed. This field
        corresponds to the `ports` field of the Kubernetes Containers
        [v1 core
        API](https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#container-v1-core).
        """
        pass
    predict_route: typing.Text = ...
    """Immutable. HTTP path on the container to send prediction requests to. Vertex AI
    forwards requests sent using
    [projects.locations.endpoints.predict][google.cloud.aiplatform.v1beta1.PredictionService.Predict] to this
    path on the container's IP address and port. Vertex AI then returns the
    container's response in the API response.

    For example, if you set this field to `/foo`, then when Vertex AI
    receives a prediction request, it forwards the request body in a POST
    request to the `/foo` path on the port of your container specified by the
    first value of this `ModelContainerSpec`'s
    [ports][google.cloud.aiplatform.v1beta1.ModelContainerSpec.ports] field.

    If you don't specify this field, it defaults to the following value when
    you [deploy this Model to an Endpoint][google.cloud.aiplatform.v1beta1.EndpointService.DeployModel]:
    <code>/v1/endpoints/<var>ENDPOINT</var>/deployedModels/<var>DEPLOYED_MODEL</var>:predict</code>
    The placeholders in this value are replaced as follows:

    * <var>ENDPOINT</var>: The last segment (following `endpoints/`)of the
      Endpoint.name][] field of the Endpoint where this Model has been
      deployed. (Vertex AI makes this value available to your container code
      as the [`AIP_ENDPOINT_ID` environment
     variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)

    * <var>DEPLOYED_MODEL</var>: [DeployedModel.id][google.cloud.aiplatform.v1beta1.DeployedModel.id] of the `DeployedModel`.
      (Vertex AI makes this value available to your container code
      as the [`AIP_DEPLOYED_MODEL_ID` environment
      variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
    """

    health_route: typing.Text = ...
    """Immutable. HTTP path on the container to send health checks to. Vertex AI
    intermittently sends GET requests to this path on the container's IP
    address and port to check that the container is healthy. Read more about
    [health
    checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#health).

    For example, if you set this field to `/bar`, then Vertex AI
    intermittently sends a GET request to the `/bar` path on the port of your
    container specified by the first value of this `ModelContainerSpec`'s
    [ports][google.cloud.aiplatform.v1beta1.ModelContainerSpec.ports] field.

    If you don't specify this field, it defaults to the following value when
    you [deploy this Model to an Endpoint][google.cloud.aiplatform.v1beta1.EndpointService.DeployModel]:
    <code>/v1/endpoints/<var>ENDPOINT</var>/deployedModels/<var>DEPLOYED_MODEL</var>:predict</code>
    The placeholders in this value are replaced as follows:

    * <var>ENDPOINT</var>: The last segment (following `endpoints/`)of the
      Endpoint.name][] field of the Endpoint where this Model has been
      deployed. (Vertex AI makes this value available to your container code
      as the [`AIP_ENDPOINT_ID` environment
      variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)

    * <var>DEPLOYED_MODEL</var>: [DeployedModel.id][google.cloud.aiplatform.v1beta1.DeployedModel.id] of the `DeployedModel`.
      (Vertex AI makes this value available to your container code as the
      [`AIP_DEPLOYED_MODEL_ID` environment
      variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
    """

    def __init__(self,
        *,
        image_uri : typing.Text = ...,
        command : typing.Optional[typing.Iterable[typing.Text]] = ...,
        args : typing.Optional[typing.Iterable[typing.Text]] = ...,
        env : typing.Optional[typing.Iterable[google.cloud.aiplatform.v1beta1.env_var_pb2.EnvVar]] = ...,
        ports : typing.Optional[typing.Iterable[global___Port]] = ...,
        predict_route : typing.Text = ...,
        health_route : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["args",b"args","command",b"command","env",b"env","health_route",b"health_route","image_uri",b"image_uri","ports",b"ports","predict_route",b"predict_route"]) -> None: ...
global___ModelContainerSpec = ModelContainerSpec

class Port(google.protobuf.message.Message):
    """Represents a network port in a container."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTAINER_PORT_FIELD_NUMBER: builtins.int
    container_port: builtins.int = ...
    """The number of the port to expose on the pod's IP address.
    Must be a valid port number, between 1 and 65535 inclusive.
    """

    def __init__(self,
        *,
        container_port : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["container_port",b"container_port"]) -> None: ...
global___Port = Port
