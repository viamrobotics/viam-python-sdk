"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.aiplatform.v1.accelerator_type_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class MachineSpec(google.protobuf.message.Message):
    """Specification of a single machine."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    ACCELERATOR_TYPE_FIELD_NUMBER: builtins.int
    ACCELERATOR_COUNT_FIELD_NUMBER: builtins.int
    machine_type: typing.Text = ...
    """Immutable. The type of the machine.

    See the [list of machine types supported for
    prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types)

    See the [list of machine types supported for custom
    training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types).

    For [DeployedModel][google.cloud.aiplatform.v1.DeployedModel] this field is optional, and the default
    value is `n1-standard-2`. For [BatchPredictionJob][google.cloud.aiplatform.v1.BatchPredictionJob] or as part of
    [WorkerPoolSpec][google.cloud.aiplatform.v1.WorkerPoolSpec] this field is required.
    """

    accelerator_type: google.cloud.aiplatform.v1.accelerator_type_pb2.AcceleratorType.ValueType = ...
    """Immutable. The type of accelerator(s) that may be attached to the machine as per
    [accelerator_count][google.cloud.aiplatform.v1.MachineSpec.accelerator_count].
    """

    accelerator_count: builtins.int = ...
    """The number of accelerators to attach to the machine."""

    def __init__(self,
        *,
        machine_type : typing.Text = ...,
        accelerator_type : google.cloud.aiplatform.v1.accelerator_type_pb2.AcceleratorType.ValueType = ...,
        accelerator_count : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accelerator_count",b"accelerator_count","accelerator_type",b"accelerator_type","machine_type",b"machine_type"]) -> None: ...
global___MachineSpec = MachineSpec

class DedicatedResources(google.protobuf.message.Message):
    """A description of resources that are dedicated to a DeployedModel, and
    that need a higher degree of manual configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MACHINE_SPEC_FIELD_NUMBER: builtins.int
    MIN_REPLICA_COUNT_FIELD_NUMBER: builtins.int
    MAX_REPLICA_COUNT_FIELD_NUMBER: builtins.int
    AUTOSCALING_METRIC_SPECS_FIELD_NUMBER: builtins.int
    @property
    def machine_spec(self) -> global___MachineSpec:
        """Required. Immutable. The specification of a single machine used by the prediction."""
        pass
    min_replica_count: builtins.int = ...
    """Required. Immutable. The minimum number of machine replicas this DeployedModel will be always
    deployed on. This value must be greater than or equal to 1.

    If traffic against the DeployedModel increases, it may dynamically be
    deployed onto more replicas, and as traffic decreases, some of these extra
    replicas may be freed.
    """

    max_replica_count: builtins.int = ...
    """Immutable. The maximum number of replicas this DeployedModel may be deployed on when
    the traffic against it increases. If the requested value is too large,
    the deployment will error, but if deployment succeeds then the ability
    to scale the model to that many replicas is guaranteed (barring service
    outages). If traffic against the DeployedModel increases beyond what its
    replicas at maximum may handle, a portion of the traffic will be dropped.
    If this value is not provided, will use [min_replica_count][google.cloud.aiplatform.v1.DedicatedResources.min_replica_count] as the
    default value.
    """

    @property
    def autoscaling_metric_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AutoscalingMetricSpec]:
        """Immutable. The metric specifications that overrides a resource
        utilization metric (CPU utilization, accelerator's duty cycle, and so on)
        target value (default to 60 if not set). At most one entry is allowed per
        metric.

        If [machine_spec.accelerator_count][google.cloud.aiplatform.v1.MachineSpec.accelerator_count] is
        above 0, the autoscaling will be based on both CPU utilization and
        accelerator's duty cycle metrics and scale up when either metrics exceeds
        its target value while scale down if both metrics are under their target
        value. The default target value is 60 for both metrics.

        If [machine_spec.accelerator_count][google.cloud.aiplatform.v1.MachineSpec.accelerator_count] is
        0, the autoscaling will be based on CPU utilization metric only with
        default target value 60 if not explicitly set.

        For example, in the case of Online Prediction, if you want to override
        target CPU utilization to 80, you should set
        [autoscaling_metric_specs.metric_name][google.cloud.aiplatform.v1.AutoscalingMetricSpec.metric_name]
        to `aiplatform.googleapis.com/prediction/online/cpu/utilization` and
        [autoscaling_metric_specs.target][google.cloud.aiplatform.v1.AutoscalingMetricSpec.target] to `80`.
        """
        pass
    def __init__(self,
        *,
        machine_spec : typing.Optional[global___MachineSpec] = ...,
        min_replica_count : builtins.int = ...,
        max_replica_count : builtins.int = ...,
        autoscaling_metric_specs : typing.Optional[typing.Iterable[global___AutoscalingMetricSpec]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["machine_spec",b"machine_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["autoscaling_metric_specs",b"autoscaling_metric_specs","machine_spec",b"machine_spec","max_replica_count",b"max_replica_count","min_replica_count",b"min_replica_count"]) -> None: ...
global___DedicatedResources = DedicatedResources

class AutomaticResources(google.protobuf.message.Message):
    """A description of resources that to large degree are decided by Vertex AI,
    and require only a modest additional configuration.
    Each Model supporting these resources documents its specific guidelines.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MIN_REPLICA_COUNT_FIELD_NUMBER: builtins.int
    MAX_REPLICA_COUNT_FIELD_NUMBER: builtins.int
    min_replica_count: builtins.int = ...
    """Immutable. The minimum number of replicas this DeployedModel will be always deployed
    on. If traffic against it increases, it may dynamically be deployed onto
    more replicas up to [max_replica_count][google.cloud.aiplatform.v1.AutomaticResources.max_replica_count], and as traffic decreases, some
    of these extra replicas may be freed.
    If the requested value is too large, the deployment will error.
    """

    max_replica_count: builtins.int = ...
    """Immutable. The maximum number of replicas this DeployedModel may be deployed on when
    the traffic against it increases. If the requested value is too large,
    the deployment will error, but if deployment succeeds then the ability
    to scale the model to that many replicas is guaranteed (barring service
    outages). If traffic against the DeployedModel increases beyond what its
    replicas at maximum may handle, a portion of the traffic will be dropped.
    If this value is not provided, a no upper bound for scaling under heavy
    traffic will be assume, though Vertex AI may be unable to scale beyond
    certain replica number.
    """

    def __init__(self,
        *,
        min_replica_count : builtins.int = ...,
        max_replica_count : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_replica_count",b"max_replica_count","min_replica_count",b"min_replica_count"]) -> None: ...
global___AutomaticResources = AutomaticResources

class BatchDedicatedResources(google.protobuf.message.Message):
    """A description of resources that are used for performing batch operations, are
    dedicated to a Model, and need manual configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MACHINE_SPEC_FIELD_NUMBER: builtins.int
    STARTING_REPLICA_COUNT_FIELD_NUMBER: builtins.int
    MAX_REPLICA_COUNT_FIELD_NUMBER: builtins.int
    @property
    def machine_spec(self) -> global___MachineSpec:
        """Required. Immutable. The specification of a single machine."""
        pass
    starting_replica_count: builtins.int = ...
    """Immutable. The number of machine replicas used at the start of the batch operation.
    If not set, Vertex AI decides starting number, not greater than
    [max_replica_count][google.cloud.aiplatform.v1.BatchDedicatedResources.max_replica_count]
    """

    max_replica_count: builtins.int = ...
    """Immutable. The maximum number of machine replicas the batch operation may be scaled
    to. The default value is 10.
    """

    def __init__(self,
        *,
        machine_spec : typing.Optional[global___MachineSpec] = ...,
        starting_replica_count : builtins.int = ...,
        max_replica_count : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["machine_spec",b"machine_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["machine_spec",b"machine_spec","max_replica_count",b"max_replica_count","starting_replica_count",b"starting_replica_count"]) -> None: ...
global___BatchDedicatedResources = BatchDedicatedResources

class ResourcesConsumed(google.protobuf.message.Message):
    """Statistics information about resource consumption."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REPLICA_HOURS_FIELD_NUMBER: builtins.int
    replica_hours: builtins.float = ...
    """Output only. The number of replica hours used. Note that many replicas may run in
    parallel, and additionally any given work may be queued for some time.
    Therefore this value is not strictly related to wall time.
    """

    def __init__(self,
        *,
        replica_hours : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["replica_hours",b"replica_hours"]) -> None: ...
global___ResourcesConsumed = ResourcesConsumed

class DiskSpec(google.protobuf.message.Message):
    """Represents the spec of disk options."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BOOT_DISK_TYPE_FIELD_NUMBER: builtins.int
    BOOT_DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    boot_disk_type: typing.Text = ...
    """Type of the boot disk (default is "pd-ssd").
    Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or
    "pd-standard" (Persistent Disk Hard Disk Drive).
    """

    boot_disk_size_gb: builtins.int = ...
    """Size in GB of the boot disk (default is 100GB)."""

    def __init__(self,
        *,
        boot_disk_type : typing.Text = ...,
        boot_disk_size_gb : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["boot_disk_size_gb",b"boot_disk_size_gb","boot_disk_type",b"boot_disk_type"]) -> None: ...
global___DiskSpec = DiskSpec

class AutoscalingMetricSpec(google.protobuf.message.Message):
    """The metric specification that defines the target resource utilization
    (CPU utilization, accelerator's duty cycle, and so on) for calculating the
    desired replica count.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    METRIC_NAME_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    metric_name: typing.Text = ...
    """Required. The resource metric name.
    Supported metrics:

    * For Online Prediction:
    * `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle`
    * `aiplatform.googleapis.com/prediction/online/cpu/utilization`
    """

    target: builtins.int = ...
    """The target resource utilization in percentage (1% - 100%) for the given
    metric; once the real usage deviates from the target by a certain
    percentage, the machine replicas change. The default value is 60
    (representing 60%) if not provided.
    """

    def __init__(self,
        *,
        metric_name : typing.Text = ...,
        target : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metric_name",b"metric_name","target",b"target"]) -> None: ...
global___AutoscalingMetricSpec = AutoscalingMetricSpec
