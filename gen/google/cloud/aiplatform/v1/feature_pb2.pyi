"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Feature(google.protobuf.message.Message):
    """Feature Metadata information that describes an attribute of an entity type.
    For example, apple is an entity type, and color is a feature that describes
    apple.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ValueType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ValueTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ValueType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        VALUE_TYPE_UNSPECIFIED: Feature.ValueType.ValueType = ...  # 0
        """The value type is unspecified."""

        BOOL: Feature.ValueType.ValueType = ...  # 1
        """Used for Feature that is a boolean."""

        BOOL_ARRAY: Feature.ValueType.ValueType = ...  # 2
        """Used for Feature that is a list of boolean."""

        DOUBLE: Feature.ValueType.ValueType = ...  # 3
        """Used for Feature that is double."""

        DOUBLE_ARRAY: Feature.ValueType.ValueType = ...  # 4
        """Used for Feature that is a list of double."""

        INT64: Feature.ValueType.ValueType = ...  # 9
        """Used for Feature that is INT64."""

        INT64_ARRAY: Feature.ValueType.ValueType = ...  # 10
        """Used for Feature that is a list of INT64."""

        STRING: Feature.ValueType.ValueType = ...  # 11
        """Used for Feature that is string."""

        STRING_ARRAY: Feature.ValueType.ValueType = ...  # 12
        """Used for Feature that is a list of String."""

        BYTES: Feature.ValueType.ValueType = ...  # 13
        """Used for Feature that is bytes."""

    class ValueType(_ValueType, metaclass=_ValueTypeEnumTypeWrapper):
        """An enum representing the value type of a feature."""
        pass

    VALUE_TYPE_UNSPECIFIED: Feature.ValueType.ValueType = ...  # 0
    """The value type is unspecified."""

    BOOL: Feature.ValueType.ValueType = ...  # 1
    """Used for Feature that is a boolean."""

    BOOL_ARRAY: Feature.ValueType.ValueType = ...  # 2
    """Used for Feature that is a list of boolean."""

    DOUBLE: Feature.ValueType.ValueType = ...  # 3
    """Used for Feature that is double."""

    DOUBLE_ARRAY: Feature.ValueType.ValueType = ...  # 4
    """Used for Feature that is a list of double."""

    INT64: Feature.ValueType.ValueType = ...  # 9
    """Used for Feature that is INT64."""

    INT64_ARRAY: Feature.ValueType.ValueType = ...  # 10
    """Used for Feature that is a list of INT64."""

    STRING: Feature.ValueType.ValueType = ...  # 11
    """Used for Feature that is string."""

    STRING_ARRAY: Feature.ValueType.ValueType = ...  # 12
    """Used for Feature that is a list of String."""

    BYTES: Feature.ValueType.ValueType = ...  # 13
    """Used for Feature that is bytes."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    VALUE_TYPE_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Immutable. Name of the Feature.
    Format:
    `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}`

    The last part feature is assigned by the client. The feature can be up to
    64 characters long and can consist only of ASCII Latin letters A-Z and a-z,
    underscore(_), and ASCII digits 0-9 starting with a letter. The value will
    be unique given an entity type.
    """

    description: typing.Text = ...
    """Description of the Feature."""

    value_type: global___Feature.ValueType.ValueType = ...
    """Required. Immutable. Type of Feature value."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this EntityType was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this EntityType was most recently updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional. The labels with user-defined metadata to organize your Features.

        Label keys and values can be no longer than 64 characters
        (Unicode codepoints), can only contain lowercase letters, numeric
        characters, underscores and dashes. International characters are allowed.

        See https://goo.gl/xmQnxf for more information on and examples of labels.
        No more than 64 user labels can be associated with one Feature (System
        labels are excluded)."
        System reserved label keys are prefixed with "aiplatform.googleapis.com/"
        and are immutable.
        """
        pass
    etag: typing.Text = ...
    """Used to perform a consistent read-modify-write updates. If not set, a blind
    "overwrite" update happens.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        value_type : global___Feature.ValueType.ValueType = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","etag",b"etag","labels",b"labels","name",b"name","update_time",b"update_time","value_type",b"value_type"]) -> None: ...
global___Feature = Feature
