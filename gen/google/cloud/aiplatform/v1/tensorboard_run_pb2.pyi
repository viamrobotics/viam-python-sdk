"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TensorboardRun(google.protobuf.message.Message):
    """TensorboardRun maps to a specific execution of a training job with a given
    set of hyperparameter values, model definition, dataset, etc
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. Name of the TensorboardRun.
    Format:
    `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
    """

    display_name: typing.Text = ...
    """Required. User provided name of this TensorboardRun.
    This value must be unique among all TensorboardRuns
    belonging to the same parent TensorboardExperiment.
    """

    description: typing.Text = ...
    """Description of this TensorboardRun."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this TensorboardRun was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this TensorboardRun was last updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The labels with user-defined metadata to organize your TensorboardRuns.

        This field will be used to filter and visualize Runs in the Tensorboard UI.
        For example, a Vertex AI training job can set a label
        aiplatform.googleapis.com/training_job_id=xxxxx to all the runs created
        within that job. An end user can set a label experiment_id=xxxxx for all
        the runs produced in a Jupyter notebook. These runs can be grouped by a
        label value and visualized together in the Tensorboard UI.

        Label keys and values can be no longer than 64 characters
        (Unicode codepoints), can only contain lowercase letters, numeric
        characters, underscores and dashes. International characters are allowed.
        No more than 64 user labels can be associated with one TensorboardRun
        (System labels are excluded).

        See https://goo.gl/xmQnxf for more information and examples of labels.
        System reserved label keys are prefixed with "aiplatform.googleapis.com/"
        and are immutable.
        """
        pass
    etag: typing.Text = ...
    """Used to perform a consistent read-modify-write updates. If not set, a blind
    "overwrite" update happens.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","display_name",b"display_name","etag",b"etag","labels",b"labels","name",b"name","update_time",b"update_time"]) -> None: ...
global___TensorboardRun = TensorboardRun
