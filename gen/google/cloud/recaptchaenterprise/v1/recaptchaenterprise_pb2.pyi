"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CreateAssessmentRequest(google.protobuf.message.Message):
    """The create assessment request message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    ASSESSMENT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the project in which the assessment will be created,
    in the format "projects/{project}".
    """

    @property
    def assessment(self) -> global___Assessment:
        """Required. The assessment details."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        assessment : typing.Optional[global___Assessment] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["assessment",b"assessment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assessment",b"assessment","parent",b"parent"]) -> None: ...
global___CreateAssessmentRequest = CreateAssessmentRequest

class AnnotateAssessmentRequest(google.protobuf.message.Message):
    """The request message to annotate an Assessment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Annotation:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AnnotationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Annotation.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ANNOTATION_UNSPECIFIED: AnnotateAssessmentRequest.Annotation.ValueType = ...  # 0
        """Default unspecified type."""

        LEGITIMATE: AnnotateAssessmentRequest.Annotation.ValueType = ...  # 1
        """Provides information that the event turned out to be legitimate."""

        FRAUDULENT: AnnotateAssessmentRequest.Annotation.ValueType = ...  # 2
        """Provides information that the event turned out to be fraudulent."""

        PASSWORD_CORRECT: AnnotateAssessmentRequest.Annotation.ValueType = ...  # 3
        """Provides information that the event was related to a login event in which
        the user typed the correct password. Deprecated, prefer indicating
        CORRECT_PASSWORD through the reasons field instead.
        """

        PASSWORD_INCORRECT: AnnotateAssessmentRequest.Annotation.ValueType = ...  # 4
        """Provides information that the event was related to a login event in which
        the user typed the incorrect password. Deprecated, prefer indicating
        INCORRECT_PASSWORD through the reasons field instead.
        """

    class Annotation(_Annotation, metaclass=_AnnotationEnumTypeWrapper):
        """Enum that represents the types of annotations."""
        pass

    ANNOTATION_UNSPECIFIED: AnnotateAssessmentRequest.Annotation.ValueType = ...  # 0
    """Default unspecified type."""

    LEGITIMATE: AnnotateAssessmentRequest.Annotation.ValueType = ...  # 1
    """Provides information that the event turned out to be legitimate."""

    FRAUDULENT: AnnotateAssessmentRequest.Annotation.ValueType = ...  # 2
    """Provides information that the event turned out to be fraudulent."""

    PASSWORD_CORRECT: AnnotateAssessmentRequest.Annotation.ValueType = ...  # 3
    """Provides information that the event was related to a login event in which
    the user typed the correct password. Deprecated, prefer indicating
    CORRECT_PASSWORD through the reasons field instead.
    """

    PASSWORD_INCORRECT: AnnotateAssessmentRequest.Annotation.ValueType = ...  # 4
    """Provides information that the event was related to a login event in which
    the user typed the incorrect password. Deprecated, prefer indicating
    INCORRECT_PASSWORD through the reasons field instead.
    """


    class _Reason:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        REASON_UNSPECIFIED: AnnotateAssessmentRequest.Reason.ValueType = ...  # 0
        """Default unspecified reason."""

        CHARGEBACK: AnnotateAssessmentRequest.Reason.ValueType = ...  # 1
        """Indicates a chargeback was issued for the transaction associated with the
        assessment, with no other details. When possible, specify the type by
        using CHARGEBACK_FRAUD or CHARGEBACK_DISPUTE instead.
        """

        CHARGEBACK_FRAUD: AnnotateAssessmentRequest.Reason.ValueType = ...  # 8
        """Indicates a chargeback related to an alleged unauthorized transaction
        from the perspective of the cardholder (for example, the card number was
        stolen).
        """

        CHARGEBACK_DISPUTE: AnnotateAssessmentRequest.Reason.ValueType = ...  # 9
        """Indicates a chargeback related to the cardholder having provided their
        card but allegedly not being satisfied with the purchase
        (for example, misrepresentation, attempted cancellation).
        """

        PAYMENT_HEURISTICS: AnnotateAssessmentRequest.Reason.ValueType = ...  # 2
        """Indicates the transaction associated with the assessment is suspected of
        being fraudulent based on the payment method, billing details, shipping
        address or other transaction information.
        """

        INITIATED_TWO_FACTOR: AnnotateAssessmentRequest.Reason.ValueType = ...  # 7
        """Indicates that the user was served a 2FA challenge. An old assessment
        with `ENUM_VALUES.INITIATED_TWO_FACTOR` reason that has not been
        overwritten with `PASSED_TWO_FACTOR` is treated as an abandoned 2FA flow.
        This is equivalent to `FAILED_TWO_FACTOR`.
        """

        PASSED_TWO_FACTOR: AnnotateAssessmentRequest.Reason.ValueType = ...  # 3
        """Indicates that the user passed a 2FA challenge."""

        FAILED_TWO_FACTOR: AnnotateAssessmentRequest.Reason.ValueType = ...  # 4
        """Indicates that the user failed a 2FA challenge."""

        CORRECT_PASSWORD: AnnotateAssessmentRequest.Reason.ValueType = ...  # 5
        """Indicates the user provided the correct password."""

        INCORRECT_PASSWORD: AnnotateAssessmentRequest.Reason.ValueType = ...  # 6
        """Indicates the user provided an incorrect password."""

    class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
        """Enum that represents potential reasons for annotating an assessment."""
        pass

    REASON_UNSPECIFIED: AnnotateAssessmentRequest.Reason.ValueType = ...  # 0
    """Default unspecified reason."""

    CHARGEBACK: AnnotateAssessmentRequest.Reason.ValueType = ...  # 1
    """Indicates a chargeback was issued for the transaction associated with the
    assessment, with no other details. When possible, specify the type by
    using CHARGEBACK_FRAUD or CHARGEBACK_DISPUTE instead.
    """

    CHARGEBACK_FRAUD: AnnotateAssessmentRequest.Reason.ValueType = ...  # 8
    """Indicates a chargeback related to an alleged unauthorized transaction
    from the perspective of the cardholder (for example, the card number was
    stolen).
    """

    CHARGEBACK_DISPUTE: AnnotateAssessmentRequest.Reason.ValueType = ...  # 9
    """Indicates a chargeback related to the cardholder having provided their
    card but allegedly not being satisfied with the purchase
    (for example, misrepresentation, attempted cancellation).
    """

    PAYMENT_HEURISTICS: AnnotateAssessmentRequest.Reason.ValueType = ...  # 2
    """Indicates the transaction associated with the assessment is suspected of
    being fraudulent based on the payment method, billing details, shipping
    address or other transaction information.
    """

    INITIATED_TWO_FACTOR: AnnotateAssessmentRequest.Reason.ValueType = ...  # 7
    """Indicates that the user was served a 2FA challenge. An old assessment
    with `ENUM_VALUES.INITIATED_TWO_FACTOR` reason that has not been
    overwritten with `PASSED_TWO_FACTOR` is treated as an abandoned 2FA flow.
    This is equivalent to `FAILED_TWO_FACTOR`.
    """

    PASSED_TWO_FACTOR: AnnotateAssessmentRequest.Reason.ValueType = ...  # 3
    """Indicates that the user passed a 2FA challenge."""

    FAILED_TWO_FACTOR: AnnotateAssessmentRequest.Reason.ValueType = ...  # 4
    """Indicates that the user failed a 2FA challenge."""

    CORRECT_PASSWORD: AnnotateAssessmentRequest.Reason.ValueType = ...  # 5
    """Indicates the user provided the correct password."""

    INCORRECT_PASSWORD: AnnotateAssessmentRequest.Reason.ValueType = ...  # 6
    """Indicates the user provided an incorrect password."""


    NAME_FIELD_NUMBER: builtins.int
    ANNOTATION_FIELD_NUMBER: builtins.int
    REASONS_FIELD_NUMBER: builtins.int
    HASHED_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of the Assessment, in the format
    "projects/{project}/assessments/{assessment}".
    """

    annotation: global___AnnotateAssessmentRequest.Annotation.ValueType = ...
    """Optional. The annotation that will be assigned to the Event. This field can be left
    empty to provide reasons that apply to an event without concluding whether
    the event is legitimate or fraudulent.
    """

    @property
    def reasons(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___AnnotateAssessmentRequest.Reason.ValueType]:
        """Optional. Optional reasons for the annotation that will be assigned to the Event."""
        pass
    hashed_account_id: builtins.bytes = ...
    """Optional. Optional unique stable hashed user identifier to apply to the assessment.
    This is an alternative to setting the hashed_account_id in
    CreateAssessment, for example when the account identifier is not yet known
    in the initial request. It is recommended that the identifier is hashed
    using hmac-sha256 with stable secret.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        annotation : global___AnnotateAssessmentRequest.Annotation.ValueType = ...,
        reasons : typing.Optional[typing.Iterable[global___AnnotateAssessmentRequest.Reason.ValueType]] = ...,
        hashed_account_id : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation",b"annotation","hashed_account_id",b"hashed_account_id","name",b"name","reasons",b"reasons"]) -> None: ...
global___AnnotateAssessmentRequest = AnnotateAssessmentRequest

class AnnotateAssessmentResponse(google.protobuf.message.Message):
    """Empty response for AnnotateAssessment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___AnnotateAssessmentResponse = AnnotateAssessmentResponse

class Assessment(google.protobuf.message.Message):
    """A recaptcha assessment resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    RISK_ANALYSIS_FIELD_NUMBER: builtins.int
    TOKEN_PROPERTIES_FIELD_NUMBER: builtins.int
    ACCOUNT_DEFENDER_ASSESSMENT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The resource name for the Assessment in the format
    "projects/{project}/assessments/{assessment}".
    """

    @property
    def event(self) -> global___Event:
        """The event being assessed."""
        pass
    @property
    def risk_analysis(self) -> global___RiskAnalysis:
        """Output only. The risk analysis result for the event being assessed."""
        pass
    @property
    def token_properties(self) -> global___TokenProperties:
        """Output only. Properties of the provided event token."""
        pass
    @property
    def account_defender_assessment(self) -> global___AccountDefenderAssessment:
        """Assessment returned by Account Defender when a hashed_account_id is
        provided.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        event : typing.Optional[global___Event] = ...,
        risk_analysis : typing.Optional[global___RiskAnalysis] = ...,
        token_properties : typing.Optional[global___TokenProperties] = ...,
        account_defender_assessment : typing.Optional[global___AccountDefenderAssessment] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["account_defender_assessment",b"account_defender_assessment","event",b"event","risk_analysis",b"risk_analysis","token_properties",b"token_properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_defender_assessment",b"account_defender_assessment","event",b"event","name",b"name","risk_analysis",b"risk_analysis","token_properties",b"token_properties"]) -> None: ...
global___Assessment = Assessment

class Event(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOKEN_FIELD_NUMBER: builtins.int
    SITE_KEY_FIELD_NUMBER: builtins.int
    USER_AGENT_FIELD_NUMBER: builtins.int
    USER_IP_ADDRESS_FIELD_NUMBER: builtins.int
    EXPECTED_ACTION_FIELD_NUMBER: builtins.int
    HASHED_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    token: typing.Text = ...
    """Optional. The user response token provided by the reCAPTCHA client-side integration
    on your site.
    """

    site_key: typing.Text = ...
    """Optional. The site key that was used to invoke reCAPTCHA on your site and generate
    the token.
    """

    user_agent: typing.Text = ...
    """Optional. The user agent present in the request from the user's device related to
    this event.
    """

    user_ip_address: typing.Text = ...
    """Optional. The IP address in the request from the user's device related to this event."""

    expected_action: typing.Text = ...
    """Optional. The expected action for this type of event. This should be the same action
    provided at token generation time on client-side platforms already
    integrated with recaptcha enterprise.
    """

    hashed_account_id: builtins.bytes = ...
    """Optional. Optional unique stable hashed user identifier for the request. The
    identifier should ideally be hashed using sha256 with stable secret.
    """

    def __init__(self,
        *,
        token : typing.Text = ...,
        site_key : typing.Text = ...,
        user_agent : typing.Text = ...,
        user_ip_address : typing.Text = ...,
        expected_action : typing.Text = ...,
        hashed_account_id : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["expected_action",b"expected_action","hashed_account_id",b"hashed_account_id","site_key",b"site_key","token",b"token","user_agent",b"user_agent","user_ip_address",b"user_ip_address"]) -> None: ...
global___Event = Event

class RiskAnalysis(google.protobuf.message.Message):
    """Risk analysis result for an event."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ClassificationReason:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ClassificationReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ClassificationReason.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CLASSIFICATION_REASON_UNSPECIFIED: RiskAnalysis.ClassificationReason.ValueType = ...  # 0
        """Default unspecified type."""

        AUTOMATION: RiskAnalysis.ClassificationReason.ValueType = ...  # 1
        """Interactions matched the behavior of an automated agent."""

        UNEXPECTED_ENVIRONMENT: RiskAnalysis.ClassificationReason.ValueType = ...  # 2
        """The event originated from an illegitimate environment."""

        TOO_MUCH_TRAFFIC: RiskAnalysis.ClassificationReason.ValueType = ...  # 3
        """Traffic volume from the event source is higher than normal."""

        UNEXPECTED_USAGE_PATTERNS: RiskAnalysis.ClassificationReason.ValueType = ...  # 4
        """Interactions with the site were significantly different than expected
        patterns.
        """

        LOW_CONFIDENCE_SCORE: RiskAnalysis.ClassificationReason.ValueType = ...  # 5
        """Too little traffic has been received from this site thus far to generate
        quality risk analysis.
        """

    class ClassificationReason(_ClassificationReason, metaclass=_ClassificationReasonEnumTypeWrapper):
        """Reasons contributing to the risk analysis verdict."""
        pass

    CLASSIFICATION_REASON_UNSPECIFIED: RiskAnalysis.ClassificationReason.ValueType = ...  # 0
    """Default unspecified type."""

    AUTOMATION: RiskAnalysis.ClassificationReason.ValueType = ...  # 1
    """Interactions matched the behavior of an automated agent."""

    UNEXPECTED_ENVIRONMENT: RiskAnalysis.ClassificationReason.ValueType = ...  # 2
    """The event originated from an illegitimate environment."""

    TOO_MUCH_TRAFFIC: RiskAnalysis.ClassificationReason.ValueType = ...  # 3
    """Traffic volume from the event source is higher than normal."""

    UNEXPECTED_USAGE_PATTERNS: RiskAnalysis.ClassificationReason.ValueType = ...  # 4
    """Interactions with the site were significantly different than expected
    patterns.
    """

    LOW_CONFIDENCE_SCORE: RiskAnalysis.ClassificationReason.ValueType = ...  # 5
    """Too little traffic has been received from this site thus far to generate
    quality risk analysis.
    """


    SCORE_FIELD_NUMBER: builtins.int
    REASONS_FIELD_NUMBER: builtins.int
    score: builtins.float = ...
    """Legitimate event score from 0.0 to 1.0.
    (1.0 means very likely legitimate traffic while 0.0 means very likely
    non-legitimate traffic).
    """

    @property
    def reasons(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___RiskAnalysis.ClassificationReason.ValueType]:
        """Reasons contributing to the risk analysis verdict."""
        pass
    def __init__(self,
        *,
        score : builtins.float = ...,
        reasons : typing.Optional[typing.Iterable[global___RiskAnalysis.ClassificationReason.ValueType]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["reasons",b"reasons","score",b"score"]) -> None: ...
global___RiskAnalysis = RiskAnalysis

class TokenProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _InvalidReason:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InvalidReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InvalidReason.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INVALID_REASON_UNSPECIFIED: TokenProperties.InvalidReason.ValueType = ...  # 0
        """Default unspecified type."""

        UNKNOWN_INVALID_REASON: TokenProperties.InvalidReason.ValueType = ...  # 1
        """If the failure reason was not accounted for."""

        MALFORMED: TokenProperties.InvalidReason.ValueType = ...  # 2
        """The provided user verification token was malformed."""

        EXPIRED: TokenProperties.InvalidReason.ValueType = ...  # 3
        """The user verification token had expired."""

        DUPE: TokenProperties.InvalidReason.ValueType = ...  # 4
        """The user verification had already been seen."""

        MISSING: TokenProperties.InvalidReason.ValueType = ...  # 5
        """The user verification token was not present."""

        BROWSER_ERROR: TokenProperties.InvalidReason.ValueType = ...  # 6
        """A retriable error (such as network failure) occurred on the browser.
        Could easily be simulated by an attacker.
        """

    class InvalidReason(_InvalidReason, metaclass=_InvalidReasonEnumTypeWrapper):
        """Enum that represents the types of invalid token reasons."""
        pass

    INVALID_REASON_UNSPECIFIED: TokenProperties.InvalidReason.ValueType = ...  # 0
    """Default unspecified type."""

    UNKNOWN_INVALID_REASON: TokenProperties.InvalidReason.ValueType = ...  # 1
    """If the failure reason was not accounted for."""

    MALFORMED: TokenProperties.InvalidReason.ValueType = ...  # 2
    """The provided user verification token was malformed."""

    EXPIRED: TokenProperties.InvalidReason.ValueType = ...  # 3
    """The user verification token had expired."""

    DUPE: TokenProperties.InvalidReason.ValueType = ...  # 4
    """The user verification had already been seen."""

    MISSING: TokenProperties.InvalidReason.ValueType = ...  # 5
    """The user verification token was not present."""

    BROWSER_ERROR: TokenProperties.InvalidReason.ValueType = ...  # 6
    """A retriable error (such as network failure) occurred on the browser.
    Could easily be simulated by an attacker.
    """


    VALID_FIELD_NUMBER: builtins.int
    INVALID_REASON_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    HOSTNAME_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    valid: builtins.bool = ...
    """Whether the provided user response token is valid. When valid = false, the
    reason could be specified in invalid_reason or it could also be due to
    a user failing to solve a challenge or a sitekey mismatch (i.e the sitekey
    used to generate the token was different than the one specified in the
    assessment).
    """

    invalid_reason: global___TokenProperties.InvalidReason.ValueType = ...
    """Reason associated with the response when valid = false."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp corresponding to the generation of the token."""
        pass
    hostname: typing.Text = ...
    """The hostname of the page on which the token was generated."""

    action: typing.Text = ...
    """Action name provided at token generation."""

    def __init__(self,
        *,
        valid : builtins.bool = ...,
        invalid_reason : global___TokenProperties.InvalidReason.ValueType = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        hostname : typing.Text = ...,
        action : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","create_time",b"create_time","hostname",b"hostname","invalid_reason",b"invalid_reason","valid",b"valid"]) -> None: ...
global___TokenProperties = TokenProperties

class AccountDefenderAssessment(google.protobuf.message.Message):
    """Account Defender risk assessment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AccountDefenderLabel:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AccountDefenderLabelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AccountDefenderLabel.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ACCOUNT_DEFENDER_LABEL_UNSPECIFIED: AccountDefenderAssessment.AccountDefenderLabel.ValueType = ...  # 0
        """Default unspecified type."""

        PROFILE_MATCH: AccountDefenderAssessment.AccountDefenderLabel.ValueType = ...  # 1
        """The request matches a known good profile for the user."""

        SUSPICIOUS_LOGIN_ACTIVITY: AccountDefenderAssessment.AccountDefenderLabel.ValueType = ...  # 2
        """The request is potentially a suspicious login event and should be further
        verified either via multi-factor authentication or another system.
        """

        SUSPICIOUS_ACCOUNT_CREATION: AccountDefenderAssessment.AccountDefenderLabel.ValueType = ...  # 3
        """The request matched a profile that previously had suspicious account
        creation behavior. This could mean this is a fake account.
        """

        RELATED_ACCOUNTS_NUMBER_HIGH: AccountDefenderAssessment.AccountDefenderLabel.ValueType = ...  # 4
        """The account in the request has a high number of related accounts. It does
        not necessarily imply that the account is bad but could require
        investigating.
        """

    class AccountDefenderLabel(_AccountDefenderLabel, metaclass=_AccountDefenderLabelEnumTypeWrapper):
        """Labels returned by Account Defender for this request."""
        pass

    ACCOUNT_DEFENDER_LABEL_UNSPECIFIED: AccountDefenderAssessment.AccountDefenderLabel.ValueType = ...  # 0
    """Default unspecified type."""

    PROFILE_MATCH: AccountDefenderAssessment.AccountDefenderLabel.ValueType = ...  # 1
    """The request matches a known good profile for the user."""

    SUSPICIOUS_LOGIN_ACTIVITY: AccountDefenderAssessment.AccountDefenderLabel.ValueType = ...  # 2
    """The request is potentially a suspicious login event and should be further
    verified either via multi-factor authentication or another system.
    """

    SUSPICIOUS_ACCOUNT_CREATION: AccountDefenderAssessment.AccountDefenderLabel.ValueType = ...  # 3
    """The request matched a profile that previously had suspicious account
    creation behavior. This could mean this is a fake account.
    """

    RELATED_ACCOUNTS_NUMBER_HIGH: AccountDefenderAssessment.AccountDefenderLabel.ValueType = ...  # 4
    """The account in the request has a high number of related accounts. It does
    not necessarily imply that the account is bad but could require
    investigating.
    """


    LABELS_FIELD_NUMBER: builtins.int
    @property
    def labels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___AccountDefenderAssessment.AccountDefenderLabel.ValueType]:
        """Labels for this request."""
        pass
    def __init__(self,
        *,
        labels : typing.Optional[typing.Iterable[global___AccountDefenderAssessment.AccountDefenderLabel.ValueType]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["labels",b"labels"]) -> None: ...
global___AccountDefenderAssessment = AccountDefenderAssessment

class CreateKeyRequest(google.protobuf.message.Message):
    """The create key request message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the project in which the key will be created, in the
    format "projects/{project}".
    """

    @property
    def key(self) -> global___Key:
        """Required. Information to create a reCAPTCHA Enterprise key."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        key : typing.Optional[global___Key] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","parent",b"parent"]) -> None: ...
global___CreateKeyRequest = CreateKeyRequest

class ListKeysRequest(google.protobuf.message.Message):
    """The list keys request message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the project that contains the keys that will be
    listed, in the format "projects/{project}".
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of keys to return. Default is 10. Max limit is
    1000.
    """

    page_token: typing.Text = ...
    """Optional. The next_page_token value returned from a previous.
    ListKeysRequest, if any.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListKeysRequest = ListKeysRequest

class ListKeysResponse(google.protobuf.message.Message):
    """Response to request to list keys in a project."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEYS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Key]:
        """Key details."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results. It is set to empty if no keys
    remain in results.
    """

    def __init__(self,
        *,
        keys : typing.Optional[typing.Iterable[global___Key]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys","next_page_token",b"next_page_token"]) -> None: ...
global___ListKeysResponse = ListKeysResponse

class GetKeyRequest(google.protobuf.message.Message):
    """The get key request message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the requested key, in the format
    "projects/{project}/keys/{key}".
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetKeyRequest = GetKeyRequest

class UpdateKeyRequest(google.protobuf.message.Message):
    """The update key request message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___Key:
        """Required. The key to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. The mask to control which fields of the key get updated. If the mask is not
        present, all fields will be updated.
        """
        pass
    def __init__(self,
        *,
        key : typing.Optional[global___Key] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","update_mask",b"update_mask"]) -> None: ...
global___UpdateKeyRequest = UpdateKeyRequest

class DeleteKeyRequest(google.protobuf.message.Message):
    """The delete key request message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the key to be deleted, in the format
    "projects/{project}/keys/{key}".
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteKeyRequest = DeleteKeyRequest

class MigrateKeyRequest(google.protobuf.message.Message):
    """The migrate key request message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the key to be migrated, in the format
    "projects/{project}/keys/{key}".
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___MigrateKeyRequest = MigrateKeyRequest

class GetMetricsRequest(google.protobuf.message.Message):
    """The get metrics request message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the requested metrics, in the format
    "projects/{project}/keys/{key}/metrics".
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetMetricsRequest = GetMetricsRequest

class Metrics(google.protobuf.message.Message):
    """Metrics for a single Key."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    SCORE_METRICS_FIELD_NUMBER: builtins.int
    CHALLENGE_METRICS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The name of the metrics, in the format
    "projects/{project}/keys/{key}/metrics".
    """

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Inclusive start time aligned to a day (UTC)."""
        pass
    @property
    def score_metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ScoreMetrics]:
        """Metrics will be continuous and in order by dates, and in the granularity
        of day. All Key types should have score-based data.
        """
        pass
    @property
    def challenge_metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ChallengeMetrics]:
        """Metrics will be continuous and in order by dates, and in the granularity
        of day. Only challenge-based keys (CHECKBOX, INVISIBLE), will have
        challenge-based data.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        score_metrics : typing.Optional[typing.Iterable[global___ScoreMetrics]] = ...,
        challenge_metrics : typing.Optional[typing.Iterable[global___ChallengeMetrics]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["challenge_metrics",b"challenge_metrics","name",b"name","score_metrics",b"score_metrics","start_time",b"start_time"]) -> None: ...
global___Metrics = Metrics

class Key(google.protobuf.message.Message):
    """A key used to identify and configure applications (web and/or mobile) that
    use reCAPTCHA Enterprise.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    WEB_SETTINGS_FIELD_NUMBER: builtins.int
    ANDROID_SETTINGS_FIELD_NUMBER: builtins.int
    IOS_SETTINGS_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    TESTING_OPTIONS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name for the Key in the format
    "projects/{project}/keys/{key}".
    """

    display_name: typing.Text = ...
    """Human-readable display name of this key. Modifiable by user."""

    @property
    def web_settings(self) -> global___WebKeySettings:
        """Settings for keys that can be used by websites."""
        pass
    @property
    def android_settings(self) -> global___AndroidKeySettings:
        """Settings for keys that can be used by Android apps."""
        pass
    @property
    def ios_settings(self) -> global___IOSKeySettings:
        """Settings for keys that can be used by iOS apps."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """See <a href="https://cloud.google.com/recaptcha-enterprise/docs/labels">
        Creating and managing labels</a>.
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp corresponding to the creation of this Key."""
        pass
    @property
    def testing_options(self) -> global___TestingOptions:
        """Options for user acceptance testing."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        web_settings : typing.Optional[global___WebKeySettings] = ...,
        android_settings : typing.Optional[global___AndroidKeySettings] = ...,
        ios_settings : typing.Optional[global___IOSKeySettings] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        testing_options : typing.Optional[global___TestingOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["android_settings",b"android_settings","create_time",b"create_time","ios_settings",b"ios_settings","platform_settings",b"platform_settings","testing_options",b"testing_options","web_settings",b"web_settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["android_settings",b"android_settings","create_time",b"create_time","display_name",b"display_name","ios_settings",b"ios_settings","labels",b"labels","name",b"name","platform_settings",b"platform_settings","testing_options",b"testing_options","web_settings",b"web_settings"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["platform_settings",b"platform_settings"]) -> typing.Optional[typing_extensions.Literal["web_settings","android_settings","ios_settings"]]: ...
global___Key = Key

class TestingOptions(google.protobuf.message.Message):
    """Options for user acceptance testing."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _TestingChallenge:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TestingChallengeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TestingChallenge.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TESTING_CHALLENGE_UNSPECIFIED: TestingOptions.TestingChallenge.ValueType = ...  # 0
        """Perform the normal risk analysis and return either nocaptcha or a
        challenge depending on risk and trust factors.
        """

        NOCAPTCHA: TestingOptions.TestingChallenge.ValueType = ...  # 1
        """Challenge requests for this key always return a nocaptcha, which
        does not require a solution.
        """

        UNSOLVABLE_CHALLENGE: TestingOptions.TestingChallenge.ValueType = ...  # 2
        """Challenge requests for this key always return an unsolvable
        challenge.
        """

    class TestingChallenge(_TestingChallenge, metaclass=_TestingChallengeEnumTypeWrapper):
        """Enum that represents the challenge option for challenge-based (CHECKBOX,
        INVISIBLE) testing keys.
        """
        pass

    TESTING_CHALLENGE_UNSPECIFIED: TestingOptions.TestingChallenge.ValueType = ...  # 0
    """Perform the normal risk analysis and return either nocaptcha or a
    challenge depending on risk and trust factors.
    """

    NOCAPTCHA: TestingOptions.TestingChallenge.ValueType = ...  # 1
    """Challenge requests for this key always return a nocaptcha, which
    does not require a solution.
    """

    UNSOLVABLE_CHALLENGE: TestingOptions.TestingChallenge.ValueType = ...  # 2
    """Challenge requests for this key always return an unsolvable
    challenge.
    """


    TESTING_SCORE_FIELD_NUMBER: builtins.int
    TESTING_CHALLENGE_FIELD_NUMBER: builtins.int
    testing_score: builtins.float = ...
    """All assessments for this Key will return this score. Must be between 0
    (likely not legitimate) and 1 (likely legitimate) inclusive.
    """

    testing_challenge: global___TestingOptions.TestingChallenge.ValueType = ...
    """For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests
    for this site will return nocaptcha if NOCAPTCHA, or an unsolvable
    challenge if CHALLENGE.
    """

    def __init__(self,
        *,
        testing_score : builtins.float = ...,
        testing_challenge : global___TestingOptions.TestingChallenge.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["testing_challenge",b"testing_challenge","testing_score",b"testing_score"]) -> None: ...
global___TestingOptions = TestingOptions

class WebKeySettings(google.protobuf.message.Message):
    """Settings specific to keys that can be used by websites."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _IntegrationType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _IntegrationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IntegrationType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INTEGRATION_TYPE_UNSPECIFIED: WebKeySettings.IntegrationType.ValueType = ...  # 0
        """Default type that indicates this enum hasn't been specified. This is not
        a valid IntegrationType, one of the other types must be specified
        instead.
        """

        SCORE: WebKeySettings.IntegrationType.ValueType = ...  # 1
        """Only used to produce scores. It doesn't display the "I'm not a robot"
        checkbox and never shows captcha challenges.
        """

        CHECKBOX: WebKeySettings.IntegrationType.ValueType = ...  # 2
        """Displays the "I'm not a robot" checkbox and may show captcha challenges
        after it is checked.
        """

        INVISIBLE: WebKeySettings.IntegrationType.ValueType = ...  # 3
        """Doesn't display the "I'm not a robot" checkbox, but may show captcha
        challenges after risk analysis.
        """

    class IntegrationType(_IntegrationType, metaclass=_IntegrationTypeEnumTypeWrapper):
        """Enum that represents the integration types for web keys."""
        pass

    INTEGRATION_TYPE_UNSPECIFIED: WebKeySettings.IntegrationType.ValueType = ...  # 0
    """Default type that indicates this enum hasn't been specified. This is not
    a valid IntegrationType, one of the other types must be specified
    instead.
    """

    SCORE: WebKeySettings.IntegrationType.ValueType = ...  # 1
    """Only used to produce scores. It doesn't display the "I'm not a robot"
    checkbox and never shows captcha challenges.
    """

    CHECKBOX: WebKeySettings.IntegrationType.ValueType = ...  # 2
    """Displays the "I'm not a robot" checkbox and may show captcha challenges
    after it is checked.
    """

    INVISIBLE: WebKeySettings.IntegrationType.ValueType = ...  # 3
    """Doesn't display the "I'm not a robot" checkbox, but may show captcha
    challenges after risk analysis.
    """


    class _ChallengeSecurityPreference:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ChallengeSecurityPreferenceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ChallengeSecurityPreference.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED: WebKeySettings.ChallengeSecurityPreference.ValueType = ...  # 0
        """Default type that indicates this enum hasn't been specified."""

        USABILITY: WebKeySettings.ChallengeSecurityPreference.ValueType = ...  # 1
        """Key tends to show fewer and easier challenges."""

        BALANCE: WebKeySettings.ChallengeSecurityPreference.ValueType = ...  # 2
        """Key tends to show balanced (in amount and difficulty) challenges."""

        SECURITY: WebKeySettings.ChallengeSecurityPreference.ValueType = ...  # 3
        """Key tends to show more and harder challenges."""

    class ChallengeSecurityPreference(_ChallengeSecurityPreference, metaclass=_ChallengeSecurityPreferenceEnumTypeWrapper):
        """Enum that represents the possible challenge frequency and difficulty
        configurations for a web key.
        """
        pass

    CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED: WebKeySettings.ChallengeSecurityPreference.ValueType = ...  # 0
    """Default type that indicates this enum hasn't been specified."""

    USABILITY: WebKeySettings.ChallengeSecurityPreference.ValueType = ...  # 1
    """Key tends to show fewer and easier challenges."""

    BALANCE: WebKeySettings.ChallengeSecurityPreference.ValueType = ...  # 2
    """Key tends to show balanced (in amount and difficulty) challenges."""

    SECURITY: WebKeySettings.ChallengeSecurityPreference.ValueType = ...  # 3
    """Key tends to show more and harder challenges."""


    ALLOW_ALL_DOMAINS_FIELD_NUMBER: builtins.int
    ALLOWED_DOMAINS_FIELD_NUMBER: builtins.int
    ALLOW_AMP_TRAFFIC_FIELD_NUMBER: builtins.int
    INTEGRATION_TYPE_FIELD_NUMBER: builtins.int
    CHALLENGE_SECURITY_PREFERENCE_FIELD_NUMBER: builtins.int
    allow_all_domains: builtins.bool = ...
    """If set to true, it means allowed_domains will not be enforced."""

    @property
    def allowed_domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Domains or subdomains of websites allowed to use the key. All subdomains
        of an allowed domain are automatically allowed. A valid domain requires a
        host and must not include any path, port, query or fragment.
        Examples: 'example.com' or 'subdomain.example.com'
        """
        pass
    allow_amp_traffic: builtins.bool = ...
    """If set to true, the key can be used on AMP (Accelerated Mobile Pages)
    websites. This is supported only for the SCORE integration type.
    """

    integration_type: global___WebKeySettings.IntegrationType.ValueType = ...
    """Required. Describes how this key is integrated with the website."""

    challenge_security_preference: global___WebKeySettings.ChallengeSecurityPreference.ValueType = ...
    """Settings for the frequency and difficulty at which this key triggers
    captcha challenges. This should only be specified for IntegrationTypes
    CHECKBOX and INVISIBLE.
    """

    def __init__(self,
        *,
        allow_all_domains : builtins.bool = ...,
        allowed_domains : typing.Optional[typing.Iterable[typing.Text]] = ...,
        allow_amp_traffic : builtins.bool = ...,
        integration_type : global___WebKeySettings.IntegrationType.ValueType = ...,
        challenge_security_preference : global___WebKeySettings.ChallengeSecurityPreference.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_all_domains",b"allow_all_domains","allow_amp_traffic",b"allow_amp_traffic","allowed_domains",b"allowed_domains","challenge_security_preference",b"challenge_security_preference","integration_type",b"integration_type"]) -> None: ...
global___WebKeySettings = WebKeySettings

class AndroidKeySettings(google.protobuf.message.Message):
    """Settings specific to keys that can be used by Android apps."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ALLOW_ALL_PACKAGE_NAMES_FIELD_NUMBER: builtins.int
    ALLOWED_PACKAGE_NAMES_FIELD_NUMBER: builtins.int
    allow_all_package_names: builtins.bool = ...
    """If set to true, allowed_package_names are not enforced."""

    @property
    def allowed_package_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Android package names of apps allowed to use the key.
        Example: 'com.companyname.appname'
        """
        pass
    def __init__(self,
        *,
        allow_all_package_names : builtins.bool = ...,
        allowed_package_names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_all_package_names",b"allow_all_package_names","allowed_package_names",b"allowed_package_names"]) -> None: ...
global___AndroidKeySettings = AndroidKeySettings

class IOSKeySettings(google.protobuf.message.Message):
    """Settings specific to keys that can be used by iOS apps."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ALLOW_ALL_BUNDLE_IDS_FIELD_NUMBER: builtins.int
    ALLOWED_BUNDLE_IDS_FIELD_NUMBER: builtins.int
    allow_all_bundle_ids: builtins.bool = ...
    """If set to true, allowed_bundle_ids are not enforced."""

    @property
    def allowed_bundle_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """iOS bundle ids of apps allowed to use the key.
        Example: 'com.companyname.productname.appname'
        """
        pass
    def __init__(self,
        *,
        allow_all_bundle_ids : builtins.bool = ...,
        allowed_bundle_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_all_bundle_ids",b"allow_all_bundle_ids","allowed_bundle_ids",b"allowed_bundle_ids"]) -> None: ...
global___IOSKeySettings = IOSKeySettings

class ScoreDistribution(google.protobuf.message.Message):
    """Score distribution."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ScoreBucketsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : builtins.int = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    SCORE_BUCKETS_FIELD_NUMBER: builtins.int
    @property
    def score_buckets(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]:
        """Map key is score value multiplied by 100. The scores are discrete values
        between [0, 1]. The maximum number of buckets is on order of a few dozen,
        but typically much lower (ie. 10).
        """
        pass
    def __init__(self,
        *,
        score_buckets : typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["score_buckets",b"score_buckets"]) -> None: ...
global___ScoreDistribution = ScoreDistribution

class ScoreMetrics(google.protobuf.message.Message):
    """Metrics related to scoring."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ActionMetricsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___ScoreDistribution: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___ScoreDistribution] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    OVERALL_METRICS_FIELD_NUMBER: builtins.int
    ACTION_METRICS_FIELD_NUMBER: builtins.int
    @property
    def overall_metrics(self) -> global___ScoreDistribution:
        """Aggregated score metrics for all traffic."""
        pass
    @property
    def action_metrics(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ScoreDistribution]:
        """Action-based metrics. The map key is the action name which specified by the
        site owners at time of the "execute" client-side call.
        Populated only for SCORE keys.
        """
        pass
    def __init__(self,
        *,
        overall_metrics : typing.Optional[global___ScoreDistribution] = ...,
        action_metrics : typing.Optional[typing.Mapping[typing.Text, global___ScoreDistribution]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["overall_metrics",b"overall_metrics"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action_metrics",b"action_metrics","overall_metrics",b"overall_metrics"]) -> None: ...
global___ScoreMetrics = ScoreMetrics

class ChallengeMetrics(google.protobuf.message.Message):
    """Metrics related to challenges."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PAGELOAD_COUNT_FIELD_NUMBER: builtins.int
    NOCAPTCHA_COUNT_FIELD_NUMBER: builtins.int
    FAILED_COUNT_FIELD_NUMBER: builtins.int
    PASSED_COUNT_FIELD_NUMBER: builtins.int
    pageload_count: builtins.int = ...
    """Count of reCAPTCHA checkboxes or badges rendered. This is mostly equivalent
    to a count of pageloads for pages that include reCAPTCHA.
    """

    nocaptcha_count: builtins.int = ...
    """Count of nocaptchas (successful verification without a challenge) issued."""

    failed_count: builtins.int = ...
    """Count of submitted challenge solutions that were incorrect or otherwise
    deemed suspicious such that a subsequent challenge was triggered.
    """

    passed_count: builtins.int = ...
    """Count of nocaptchas (successful verification without a challenge) plus
    submitted challenge solutions that were correct and resulted in
    verification.
    """

    def __init__(self,
        *,
        pageload_count : builtins.int = ...,
        nocaptcha_count : builtins.int = ...,
        failed_count : builtins.int = ...,
        passed_count : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["failed_count",b"failed_count","nocaptcha_count",b"nocaptcha_count","pageload_count",b"pageload_count","passed_count",b"passed_count"]) -> None: ...
global___ChallengeMetrics = ChallengeMetrics

class ListRelatedAccountGroupMembershipsRequest(google.protobuf.message.Message):
    """The request message to list memberships in a related account group."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The resource name for the related account group in the format
    `projects/{project}/relatedaccountgroups/{relatedaccountgroup}`.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of accounts to return. The service may return fewer than
    this value.
    If unspecified, at most 50 accounts will be returned.
    The maximum value is 1000; values above 1000 will be coerced to 1000.
    """

    page_token: typing.Text = ...
    """Optional. A page token, received from a previous `ListRelatedAccountGroupMemberships`
    call.

    When paginating, all other parameters provided to
    `ListRelatedAccountGroupMemberships` must match the call that provided the
    page token.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListRelatedAccountGroupMembershipsRequest = ListRelatedAccountGroupMembershipsRequest

class ListRelatedAccountGroupMembershipsResponse(google.protobuf.message.Message):
    """The response to a `ListRelatedAccountGroupMemberships` call."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RELATED_ACCOUNT_GROUP_MEMBERSHIPS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def related_account_group_memberships(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RelatedAccountGroupMembership]:
        """The memberships listed by the query."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    def __init__(self,
        *,
        related_account_group_memberships : typing.Optional[typing.Iterable[global___RelatedAccountGroupMembership]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","related_account_group_memberships",b"related_account_group_memberships"]) -> None: ...
global___ListRelatedAccountGroupMembershipsResponse = ListRelatedAccountGroupMembershipsResponse

class ListRelatedAccountGroupsRequest(google.protobuf.message.Message):
    """The request message to list related account groups."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the project to list related account groups from, in the format
    "projects/{project}".
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of groups to return. The service may return fewer than
    this value.
    If unspecified, at most 50 groups will be returned.
    The maximum value is 1000; values above 1000 will be coerced to 1000.
    """

    page_token: typing.Text = ...
    """Optional. A page token, received from a previous `ListRelatedAccountGroups` call.
    Provide this to retrieve the subsequent page.

    When paginating, all other parameters provided to
    `ListRelatedAccountGroups` must match the call that provided the page
    token.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListRelatedAccountGroupsRequest = ListRelatedAccountGroupsRequest

class ListRelatedAccountGroupsResponse(google.protobuf.message.Message):
    """The response to a `ListRelatedAccountGroups` call."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RELATED_ACCOUNT_GROUPS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def related_account_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RelatedAccountGroup]:
        """The groups of related accounts listed by the query."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    def __init__(self,
        *,
        related_account_groups : typing.Optional[typing.Iterable[global___RelatedAccountGroup]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","related_account_groups",b"related_account_groups"]) -> None: ...
global___ListRelatedAccountGroupsResponse = ListRelatedAccountGroupsResponse

class SearchRelatedAccountGroupMembershipsRequest(google.protobuf.message.Message):
    """The request message to search related account group memberships."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    HASHED_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the project to search related account group memberships from,
    in the format "projects/{project}".
    """

    hashed_account_id: builtins.bytes = ...
    """Optional. The unique stable hashed user identifier we should search connections to.
    The identifier should correspond to a `hashed_account_id` provided in a
    previous CreateAssessment or AnnotateAssessment call.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of groups to return. The service may return fewer than
    this value.
    If unspecified, at most 50 groups will be returned.
    The maximum value is 1000; values above 1000 will be coerced to 1000.
    """

    page_token: typing.Text = ...
    """Optional. A page token, received from a previous
    `SearchRelatedAccountGroupMemberships` call. Provide this to retrieve the
    subsequent page.

    When paginating, all other parameters provided to
    `SearchRelatedAccountGroupMemberships` must match the call that provided
    the page token.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        hashed_account_id : builtins.bytes = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hashed_account_id",b"hashed_account_id","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___SearchRelatedAccountGroupMembershipsRequest = SearchRelatedAccountGroupMembershipsRequest

class SearchRelatedAccountGroupMembershipsResponse(google.protobuf.message.Message):
    """The response to a `SearchRelatedAccountGroupMemberships` call."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RELATED_ACCOUNT_GROUP_MEMBERSHIPS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def related_account_group_memberships(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RelatedAccountGroupMembership]:
        """The queried memberships."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    def __init__(self,
        *,
        related_account_group_memberships : typing.Optional[typing.Iterable[global___RelatedAccountGroupMembership]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","related_account_group_memberships",b"related_account_group_memberships"]) -> None: ...
global___SearchRelatedAccountGroupMembershipsResponse = SearchRelatedAccountGroupMembershipsResponse

class RelatedAccountGroupMembership(google.protobuf.message.Message):
    """A membership in a group of related accounts."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    HASHED_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name for this membership in the format
    `projects/{project}/relatedaccountgroups/{relatedaccountgroup}/memberships/{membership}`.
    """

    hashed_account_id: builtins.bytes = ...
    """The unique stable hashed user identifier of the member. The identifier
    corresponds to a `hashed_account_id` provided in a previous
    CreateAssessment or AnnotateAssessment call.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        hashed_account_id : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hashed_account_id",b"hashed_account_id","name",b"name"]) -> None: ...
global___RelatedAccountGroupMembership = RelatedAccountGroupMembership

class RelatedAccountGroup(google.protobuf.message.Message):
    """A group of related accounts."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name for the related account group in the format
    `projects/{project}/relatedaccountgroups/{related_account_group}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___RelatedAccountGroup = RelatedAccountGroup
