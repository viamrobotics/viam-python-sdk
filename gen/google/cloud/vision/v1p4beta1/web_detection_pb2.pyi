"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class WebDetection(google.protobuf.message.Message):
    """Relevant information for the image from the Internet."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class WebEntity(google.protobuf.message.Message):
        """Entity deduced from similar images on the Internet."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ENTITY_ID_FIELD_NUMBER: builtins.int
        SCORE_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        entity_id: typing.Text = ...
        """Opaque entity ID."""

        score: builtins.float = ...
        """Overall relevancy score for the entity.
        Not normalized and not comparable across different image queries.
        """

        description: typing.Text = ...
        """Canonical description of the entity, in English."""

        def __init__(self,
            *,
            entity_id : typing.Text = ...,
            score : builtins.float = ...,
            description : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["description",b"description","entity_id",b"entity_id","score",b"score"]) -> None: ...

    class WebImage(google.protobuf.message.Message):
        """Metadata for online images."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        URL_FIELD_NUMBER: builtins.int
        SCORE_FIELD_NUMBER: builtins.int
        url: typing.Text = ...
        """The result image URL."""

        score: builtins.float = ...
        """(Deprecated) Overall relevancy score for the image."""

        def __init__(self,
            *,
            url : typing.Text = ...,
            score : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["score",b"score","url",b"url"]) -> None: ...

    class WebPage(google.protobuf.message.Message):
        """Metadata for web pages."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        URL_FIELD_NUMBER: builtins.int
        SCORE_FIELD_NUMBER: builtins.int
        PAGE_TITLE_FIELD_NUMBER: builtins.int
        FULL_MATCHING_IMAGES_FIELD_NUMBER: builtins.int
        PARTIAL_MATCHING_IMAGES_FIELD_NUMBER: builtins.int
        url: typing.Text = ...
        """The result web page URL."""

        score: builtins.float = ...
        """(Deprecated) Overall relevancy score for the web page."""

        page_title: typing.Text = ...
        """Title for the web page, may contain HTML markups."""

        @property
        def full_matching_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebDetection.WebImage]:
            """Fully matching images on the page.
            Can include resized copies of the query image.
            """
            pass
        @property
        def partial_matching_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebDetection.WebImage]:
            """Partial matching images on the page.
            Those images are similar enough to share some key-point features. For
            example an original image will likely have partial matching for its
            crops.
            """
            pass
        def __init__(self,
            *,
            url : typing.Text = ...,
            score : builtins.float = ...,
            page_title : typing.Text = ...,
            full_matching_images : typing.Optional[typing.Iterable[global___WebDetection.WebImage]] = ...,
            partial_matching_images : typing.Optional[typing.Iterable[global___WebDetection.WebImage]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["full_matching_images",b"full_matching_images","page_title",b"page_title","partial_matching_images",b"partial_matching_images","score",b"score","url",b"url"]) -> None: ...

    class WebLabel(google.protobuf.message.Message):
        """Label to provide extra metadata for the web detection."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        LABEL_FIELD_NUMBER: builtins.int
        LANGUAGE_CODE_FIELD_NUMBER: builtins.int
        label: typing.Text = ...
        """Label for extra metadata."""

        language_code: typing.Text = ...
        """The BCP-47 language code for `label`, such as "en-US" or "sr-Latn".
        For more information, see
        http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        """

        def __init__(self,
            *,
            label : typing.Text = ...,
            language_code : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["label",b"label","language_code",b"language_code"]) -> None: ...

    WEB_ENTITIES_FIELD_NUMBER: builtins.int
    FULL_MATCHING_IMAGES_FIELD_NUMBER: builtins.int
    PARTIAL_MATCHING_IMAGES_FIELD_NUMBER: builtins.int
    PAGES_WITH_MATCHING_IMAGES_FIELD_NUMBER: builtins.int
    VISUALLY_SIMILAR_IMAGES_FIELD_NUMBER: builtins.int
    BEST_GUESS_LABELS_FIELD_NUMBER: builtins.int
    @property
    def web_entities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebDetection.WebEntity]:
        """Deduced entities from similar images on the Internet."""
        pass
    @property
    def full_matching_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebDetection.WebImage]:
        """Fully matching images from the Internet.
        Can include resized copies of the query image.
        """
        pass
    @property
    def partial_matching_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebDetection.WebImage]:
        """Partial matching images from the Internet.
        Those images are similar enough to share some key-point features. For
        example an original image will likely have partial matching for its crops.
        """
        pass
    @property
    def pages_with_matching_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebDetection.WebPage]:
        """Web pages containing the matching images from the Internet."""
        pass
    @property
    def visually_similar_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebDetection.WebImage]:
        """The visually similar image results."""
        pass
    @property
    def best_guess_labels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WebDetection.WebLabel]:
        """The service's best guess as to the topic of the request image.
        Inferred from similar images on the open web.
        """
        pass
    def __init__(self,
        *,
        web_entities : typing.Optional[typing.Iterable[global___WebDetection.WebEntity]] = ...,
        full_matching_images : typing.Optional[typing.Iterable[global___WebDetection.WebImage]] = ...,
        partial_matching_images : typing.Optional[typing.Iterable[global___WebDetection.WebImage]] = ...,
        pages_with_matching_images : typing.Optional[typing.Iterable[global___WebDetection.WebPage]] = ...,
        visually_similar_images : typing.Optional[typing.Iterable[global___WebDetection.WebImage]] = ...,
        best_guess_labels : typing.Optional[typing.Iterable[global___WebDetection.WebLabel]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["best_guess_labels",b"best_guess_labels","full_matching_images",b"full_matching_images","pages_with_matching_images",b"pages_with_matching_images","partial_matching_images",b"partial_matching_images","visually_similar_images",b"visually_similar_images","web_entities",b"web_entities"]) -> None: ...
global___WebDetection = WebDetection
