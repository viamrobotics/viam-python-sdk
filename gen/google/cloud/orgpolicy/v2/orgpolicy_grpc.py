# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/orgpolicy/v2/orgpolicy.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.cloud.orgpolicy.v2.constraint_pb2
import google.protobuf.empty_pb2
import google.protobuf.timestamp_pb2
import google.type.expr_pb2
import google.cloud.orgpolicy.v2.orgpolicy_pb2


class OrgPolicyBase(abc.ABC):

    @abc.abstractmethod
    async def ListConstraints(self, stream: 'grpclib.server.Stream[google.cloud.orgpolicy.v2.orgpolicy_pb2.ListConstraintsRequest, google.cloud.orgpolicy.v2.orgpolicy_pb2.ListConstraintsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListPolicies(self, stream: 'grpclib.server.Stream[google.cloud.orgpolicy.v2.orgpolicy_pb2.ListPoliciesRequest, google.cloud.orgpolicy.v2.orgpolicy_pb2.ListPoliciesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetPolicy(self, stream: 'grpclib.server.Stream[google.cloud.orgpolicy.v2.orgpolicy_pb2.GetPolicyRequest, google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def GetEffectivePolicy(self, stream: 'grpclib.server.Stream[google.cloud.orgpolicy.v2.orgpolicy_pb2.GetEffectivePolicyRequest, google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def CreatePolicy(self, stream: 'grpclib.server.Stream[google.cloud.orgpolicy.v2.orgpolicy_pb2.CreatePolicyRequest, google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def UpdatePolicy(self, stream: 'grpclib.server.Stream[google.cloud.orgpolicy.v2.orgpolicy_pb2.UpdatePolicyRequest, google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def DeletePolicy(self, stream: 'grpclib.server.Stream[google.cloud.orgpolicy.v2.orgpolicy_pb2.DeletePolicyRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.orgpolicy.v2.OrgPolicy/ListConstraints': grpclib.const.Handler(
                self.ListConstraints,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.ListConstraintsRequest,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.ListConstraintsResponse,
            ),
            '/google.cloud.orgpolicy.v2.OrgPolicy/ListPolicies': grpclib.const.Handler(
                self.ListPolicies,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.ListPoliciesRequest,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.ListPoliciesResponse,
            ),
            '/google.cloud.orgpolicy.v2.OrgPolicy/GetPolicy': grpclib.const.Handler(
                self.GetPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.GetPolicyRequest,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy,
            ),
            '/google.cloud.orgpolicy.v2.OrgPolicy/GetEffectivePolicy': grpclib.const.Handler(
                self.GetEffectivePolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.GetEffectivePolicyRequest,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy,
            ),
            '/google.cloud.orgpolicy.v2.OrgPolicy/CreatePolicy': grpclib.const.Handler(
                self.CreatePolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.CreatePolicyRequest,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy,
            ),
            '/google.cloud.orgpolicy.v2.OrgPolicy/UpdatePolicy': grpclib.const.Handler(
                self.UpdatePolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.UpdatePolicyRequest,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy,
            ),
            '/google.cloud.orgpolicy.v2.OrgPolicy/DeletePolicy': grpclib.const.Handler(
                self.DeletePolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.orgpolicy.v2.orgpolicy_pb2.DeletePolicyRequest,
                google.protobuf.empty_pb2.Empty,
            ),
        }


class OrgPolicyStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListConstraints = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.orgpolicy.v2.OrgPolicy/ListConstraints',
            google.cloud.orgpolicy.v2.orgpolicy_pb2.ListConstraintsRequest,
            google.cloud.orgpolicy.v2.orgpolicy_pb2.ListConstraintsResponse,
        )
        self.ListPolicies = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.orgpolicy.v2.OrgPolicy/ListPolicies',
            google.cloud.orgpolicy.v2.orgpolicy_pb2.ListPoliciesRequest,
            google.cloud.orgpolicy.v2.orgpolicy_pb2.ListPoliciesResponse,
        )
        self.GetPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.orgpolicy.v2.OrgPolicy/GetPolicy',
            google.cloud.orgpolicy.v2.orgpolicy_pb2.GetPolicyRequest,
            google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy,
        )
        self.GetEffectivePolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.orgpolicy.v2.OrgPolicy/GetEffectivePolicy',
            google.cloud.orgpolicy.v2.orgpolicy_pb2.GetEffectivePolicyRequest,
            google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy,
        )
        self.CreatePolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.orgpolicy.v2.OrgPolicy/CreatePolicy',
            google.cloud.orgpolicy.v2.orgpolicy_pb2.CreatePolicyRequest,
            google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy,
        )
        self.UpdatePolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.orgpolicy.v2.OrgPolicy/UpdatePolicy',
            google.cloud.orgpolicy.v2.orgpolicy_pb2.UpdatePolicyRequest,
            google.cloud.orgpolicy.v2.orgpolicy_pb2.Policy,
        )
        self.DeletePolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.orgpolicy.v2.OrgPolicy/DeletePolicy',
            google.cloud.orgpolicy.v2.orgpolicy_pb2.DeletePolicyRequest,
            google.protobuf.empty_pb2.Empty,
        )
