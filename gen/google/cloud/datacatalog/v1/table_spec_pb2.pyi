"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _TableSourceType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TableSourceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TableSourceType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TABLE_SOURCE_TYPE_UNSPECIFIED: TableSourceType.ValueType = ...  # 0
    """Default unknown type."""

    BIGQUERY_VIEW: TableSourceType.ValueType = ...  # 2
    """Table view."""

    BIGQUERY_TABLE: TableSourceType.ValueType = ...  # 5
    """BigQuery native table."""

    BIGQUERY_MATERIALIZED_VIEW: TableSourceType.ValueType = ...  # 7
    """BigQuery materialized view."""

class TableSourceType(_TableSourceType, metaclass=_TableSourceTypeEnumTypeWrapper):
    """Table source type."""
    pass

TABLE_SOURCE_TYPE_UNSPECIFIED: TableSourceType.ValueType = ...  # 0
"""Default unknown type."""

BIGQUERY_VIEW: TableSourceType.ValueType = ...  # 2
"""Table view."""

BIGQUERY_TABLE: TableSourceType.ValueType = ...  # 5
"""BigQuery native table."""

BIGQUERY_MATERIALIZED_VIEW: TableSourceType.ValueType = ...  # 7
"""BigQuery materialized view."""

global___TableSourceType = TableSourceType


class BigQueryTableSpec(google.protobuf.message.Message):
    """Describes a BigQuery table."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TABLE_SOURCE_TYPE_FIELD_NUMBER: builtins.int
    VIEW_SPEC_FIELD_NUMBER: builtins.int
    TABLE_SPEC_FIELD_NUMBER: builtins.int
    table_source_type: global___TableSourceType.ValueType = ...
    """Output only. The table source type."""

    @property
    def view_spec(self) -> global___ViewSpec:
        """Table view specification. Populated only if
        the `table_source_type` is `BIGQUERY_VIEW`.
        """
        pass
    @property
    def table_spec(self) -> global___TableSpec:
        """Specification of a BigQuery table. Populated only if
        the `table_source_type` is `BIGQUERY_TABLE`.
        """
        pass
    def __init__(self,
        *,
        table_source_type : global___TableSourceType.ValueType = ...,
        view_spec : typing.Optional[global___ViewSpec] = ...,
        table_spec : typing.Optional[global___TableSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["table_spec",b"table_spec","type_spec",b"type_spec","view_spec",b"view_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["table_source_type",b"table_source_type","table_spec",b"table_spec","type_spec",b"type_spec","view_spec",b"view_spec"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type_spec",b"type_spec"]) -> typing.Optional[typing_extensions.Literal["view_spec","table_spec"]]: ...
global___BigQueryTableSpec = BigQueryTableSpec

class ViewSpec(google.protobuf.message.Message):
    """Table view specification."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VIEW_QUERY_FIELD_NUMBER: builtins.int
    view_query: typing.Text = ...
    """Output only. The query that defines the table view."""

    def __init__(self,
        *,
        view_query : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["view_query",b"view_query"]) -> None: ...
global___ViewSpec = ViewSpec

class TableSpec(google.protobuf.message.Message):
    """Normal BigQuery table specification."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GROUPED_ENTRY_FIELD_NUMBER: builtins.int
    grouped_entry: typing.Text = ...
    """Output only. If the table is date-sharded, that is, it matches the `[prefix]YYYYMMDD`
    name pattern, this field is the Data Catalog resource name of the
    date-sharded grouped entry. For example:

    `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.

    Otherwise, `grouped_entry` is empty.
    """

    def __init__(self,
        *,
        grouped_entry : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["grouped_entry",b"grouped_entry"]) -> None: ...
global___TableSpec = TableSpec

class BigQueryDateShardedSpec(google.protobuf.message.Message):
    """Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name
    pattern.

    For more information, see [Introduction to partitioned tables]
    (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATASET_FIELD_NUMBER: builtins.int
    TABLE_PREFIX_FIELD_NUMBER: builtins.int
    SHARD_COUNT_FIELD_NUMBER: builtins.int
    LATEST_SHARD_RESOURCE_FIELD_NUMBER: builtins.int
    dataset: typing.Text = ...
    """Output only. The Data Catalog resource name of the dataset entry the current table
    belongs to. For example:

    `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
    """

    table_prefix: typing.Text = ...
    """Output only. The table name prefix of the shards.

    The name of any given shard is `[table_prefix]YYYYMMDD`.
    For example, for the `MyTable20180101` shard, the
    `table_prefix` is `MyTable`.
    """

    shard_count: builtins.int = ...
    """Output only. Total number of shards."""

    latest_shard_resource: typing.Text = ...
    """Output only. BigQuery resource name of the latest shard."""

    def __init__(self,
        *,
        dataset : typing.Text = ...,
        table_prefix : typing.Text = ...,
        shard_count : builtins.int = ...,
        latest_shard_resource : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset",b"dataset","latest_shard_resource",b"latest_shard_resource","shard_count",b"shard_count","table_prefix",b"table_prefix"]) -> None: ...
global___BigQueryDateShardedSpec = BigQueryDateShardedSpec
