"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.datacatalog.v1beta1.common_pb2
import google.cloud.datacatalog.v1beta1.gcs_fileset_spec_pb2
import google.cloud.datacatalog.v1beta1.schema_pb2
import google.cloud.datacatalog.v1beta1.search_pb2
import google.cloud.datacatalog.v1beta1.table_spec_pb2
import google.cloud.datacatalog.v1beta1.tags_pb2
import google.cloud.datacatalog.v1beta1.timestamps_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _EntryType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _EntryTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EntryType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    ENTRY_TYPE_UNSPECIFIED: EntryType.ValueType = ...  # 0
    """Default unknown type."""

    TABLE: EntryType.ValueType = ...  # 2
    """Output only. The type of entry that has a GoogleSQL schema, including
    logical views.
    """

    MODEL: EntryType.ValueType = ...  # 5
    """Output only. The type of models.
    https://cloud.google.com/bigquery-ml/docs/bigqueryml-intro
    """

    DATA_STREAM: EntryType.ValueType = ...  # 3
    """Output only. An entry type which is used for streaming entries. Example:
    Pub/Sub topic.
    """

    FILESET: EntryType.ValueType = ...  # 4
    """An entry type which is a set of files or objects. Example:
    Cloud Storage fileset.
    """

class EntryType(_EntryType, metaclass=_EntryTypeEnumTypeWrapper):
    """Entry resources in Data Catalog can be of different types e.g. a BigQuery
    Table entry is of type `TABLE`. This enum describes all the possible types
    Data Catalog contains.
    """
    pass

ENTRY_TYPE_UNSPECIFIED: EntryType.ValueType = ...  # 0
"""Default unknown type."""

TABLE: EntryType.ValueType = ...  # 2
"""Output only. The type of entry that has a GoogleSQL schema, including
logical views.
"""

MODEL: EntryType.ValueType = ...  # 5
"""Output only. The type of models.
https://cloud.google.com/bigquery-ml/docs/bigqueryml-intro
"""

DATA_STREAM: EntryType.ValueType = ...  # 3
"""Output only. An entry type which is used for streaming entries. Example:
Pub/Sub topic.
"""

FILESET: EntryType.ValueType = ...  # 4
"""An entry type which is a set of files or objects. Example:
Cloud Storage fileset.
"""

global___EntryType = EntryType


class SearchCatalogRequest(google.protobuf.message.Message):
    """Request message for
    [SearchCatalog][google.cloud.datacatalog.v1beta1.DataCatalog.SearchCatalog].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Scope(google.protobuf.message.Message):
        """The criteria that select the subspace used for query matching."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        INCLUDE_ORG_IDS_FIELD_NUMBER: builtins.int
        INCLUDE_PROJECT_IDS_FIELD_NUMBER: builtins.int
        INCLUDE_GCP_PUBLIC_DATASETS_FIELD_NUMBER: builtins.int
        @property
        def include_org_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """The list of organization IDs to search within. To find your organization
            ID, follow instructions in
            https://cloud.google.com/resource-manager/docs/creating-managing-organization.
            """
            pass
        @property
        def include_project_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """The list of project IDs to search within. To learn more about the
            distinction between project names/IDs/numbers, go to
            https://cloud.google.com/docs/overview/#projects.
            """
            pass
        include_gcp_public_datasets: builtins.bool = ...
        """If `true`, include Google Cloud Platform (GCP) public datasets in the
        search results. Info on GCP public datasets is available at
        https://cloud.google.com/public-datasets/. By default, GCP public
        datasets are excluded.
        """

        def __init__(self,
            *,
            include_org_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
            include_project_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
            include_gcp_public_datasets : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["include_gcp_public_datasets",b"include_gcp_public_datasets","include_org_ids",b"include_org_ids","include_project_ids",b"include_project_ids"]) -> None: ...

    SCOPE_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    @property
    def scope(self) -> global___SearchCatalogRequest.Scope:
        """Required. The scope of this search request. A `scope` that has empty
        `include_org_ids`, `include_project_ids` AND false
        `include_gcp_public_datasets` is considered invalid. Data Catalog will
        return an error in such a case.
        """
        pass
    query: typing.Text = ...
    """Required. The query string in search query syntax. The query must be non-empty.

    Query strings can be simple as "x" or more qualified as:

    * name:x
    * column:x
    * description:y

    Note: Query tokens need to have a minimum of 3 characters for substring
    matching to work correctly. See [Data Catalog Search
    Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
    for more information.
    """

    page_size: builtins.int = ...
    """Number of results in the search page. If <=0 then defaults to 10. Max limit
    for page_size is 1000. Throws an invalid argument for page_size > 1000.
    """

    page_token: typing.Text = ...
    """Optional. Pagination token returned in an earlier
    [SearchCatalogResponse.next_page_token][google.cloud.datacatalog.v1beta1.SearchCatalogResponse.next_page_token], which
    indicates that this is a continuation of a prior
    [SearchCatalogRequest][google.cloud.datacatalog.v1beta1.DataCatalog.SearchCatalog]
    call, and that the system should return the next page of data. If empty,
    the first page is returned.
    """

    order_by: typing.Text = ...
    """Specifies the ordering of results, currently supported case-sensitive
    choices are:

      * `relevance`, only supports descending
      * `last_modified_timestamp [asc|desc]`, defaults to descending if not
        specified

    If not specified, defaults to `relevance` descending.
    """

    def __init__(self,
        *,
        scope : typing.Optional[global___SearchCatalogRequest.Scope] = ...,
        query : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["scope",b"scope"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","query",b"query","scope",b"scope"]) -> None: ...
global___SearchCatalogRequest = SearchCatalogRequest

class SearchCatalogResponse(google.protobuf.message.Message):
    """Response message for
    [SearchCatalog][google.cloud.datacatalog.v1beta1.DataCatalog.SearchCatalog].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.datacatalog.v1beta1.search_pb2.SearchCatalogResult]:
        """Search results."""
        pass
    next_page_token: typing.Text = ...
    """The token that can be used to retrieve the next page of results."""

    def __init__(self,
        *,
        results : typing.Optional[typing.Iterable[google.cloud.datacatalog.v1beta1.search_pb2.SearchCatalogResult]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","results",b"results"]) -> None: ...
global___SearchCatalogResponse = SearchCatalogResponse

class CreateEntryGroupRequest(google.protobuf.message.Message):
    """Request message for
    [CreateEntryGroup][google.cloud.datacatalog.v1beta1.DataCatalog.CreateEntryGroup].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    ENTRY_GROUP_ID_FIELD_NUMBER: builtins.int
    ENTRY_GROUP_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the project this entry group is in. Example:

    * projects/{project_id}/locations/{location}

    Note that this EntryGroup and its child resources may not actually be
    stored in the location in this name.
    """

    entry_group_id: typing.Text = ...
    """Required. The id of the entry group to create.
    The id must begin with a letter or underscore, contain only English
    letters, numbers and underscores, and be at most 64 characters.
    """

    @property
    def entry_group(self) -> global___EntryGroup:
        """The entry group to create. Defaults to an empty entry group."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        entry_group_id : typing.Text = ...,
        entry_group : typing.Optional[global___EntryGroup] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entry_group",b"entry_group"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entry_group",b"entry_group","entry_group_id",b"entry_group_id","parent",b"parent"]) -> None: ...
global___CreateEntryGroupRequest = CreateEntryGroupRequest

class UpdateEntryGroupRequest(google.protobuf.message.Message):
    """Request message for
    [UpdateEntryGroup][google.cloud.datacatalog.v1beta1.DataCatalog.UpdateEntryGroup].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTRY_GROUP_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def entry_group(self) -> global___EntryGroup:
        """Required. The updated entry group. "name" field must be set."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The fields to update on the entry group. If absent or empty, all modifiable
        fields are updated.
        """
        pass
    def __init__(self,
        *,
        entry_group : typing.Optional[global___EntryGroup] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entry_group",b"entry_group","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entry_group",b"entry_group","update_mask",b"update_mask"]) -> None: ...
global___UpdateEntryGroupRequest = UpdateEntryGroupRequest

class GetEntryGroupRequest(google.protobuf.message.Message):
    """Request message for
    [GetEntryGroup][google.cloud.datacatalog.v1beta1.DataCatalog.GetEntryGroup].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    READ_MASK_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the entry group. For example,
    `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
    """

    @property
    def read_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The fields to return. If not set or empty, all fields are returned."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        read_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["read_mask",b"read_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","read_mask",b"read_mask"]) -> None: ...
global___GetEntryGroupRequest = GetEntryGroupRequest

class DeleteEntryGroupRequest(google.protobuf.message.Message):
    """Request message for
    [DeleteEntryGroup][google.cloud.datacatalog.v1beta1.DataCatalog.DeleteEntryGroup].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the entry group. For example,
    `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
    """

    force: builtins.bool = ...
    """Optional. If true, deletes all entries in the entry group."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        force : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["force",b"force","name",b"name"]) -> None: ...
global___DeleteEntryGroupRequest = DeleteEntryGroupRequest

class ListEntryGroupsRequest(google.protobuf.message.Message):
    """Request message for
    [ListEntryGroups][google.cloud.datacatalog.v1beta1.DataCatalog.ListEntryGroups].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the location that contains the entry groups, which can be
    provided in URL format. Example:

    * projects/{project_id}/locations/{location}
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of items to return. Default is 10. Max limit is 1000.
    Throws an invalid argument for `page_size > 1000`.
    """

    page_token: typing.Text = ...
    """Optional. Token that specifies which page is requested. If empty, the first page is
    returned.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListEntryGroupsRequest = ListEntryGroupsRequest

class ListEntryGroupsResponse(google.protobuf.message.Message):
    """Response message for
    [ListEntryGroups][google.cloud.datacatalog.v1beta1.DataCatalog.ListEntryGroups].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTRY_GROUPS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def entry_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EntryGroup]:
        """EntryGroup details."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results. It is set to empty if no items
    remain in results.
    """

    def __init__(self,
        *,
        entry_groups : typing.Optional[typing.Iterable[global___EntryGroup]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entry_groups",b"entry_groups","next_page_token",b"next_page_token"]) -> None: ...
global___ListEntryGroupsResponse = ListEntryGroupsResponse

class CreateEntryRequest(google.protobuf.message.Message):
    """Request message for
    [CreateEntry][google.cloud.datacatalog.v1beta1.DataCatalog.CreateEntry].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    ENTRY_ID_FIELD_NUMBER: builtins.int
    ENTRY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the entry group this entry is in. Example:

    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}

    Note that this Entry and its child resources may not actually be stored in
    the location in this name.
    """

    entry_id: typing.Text = ...
    """Required. The id of the entry to create."""

    @property
    def entry(self) -> global___Entry:
        """Required. The entry to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        entry_id : typing.Text = ...,
        entry : typing.Optional[global___Entry] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entry",b"entry"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entry",b"entry","entry_id",b"entry_id","parent",b"parent"]) -> None: ...
global___CreateEntryRequest = CreateEntryRequest

class UpdateEntryRequest(google.protobuf.message.Message):
    """Request message for
    [UpdateEntry][google.cloud.datacatalog.v1beta1.DataCatalog.UpdateEntry].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTRY_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def entry(self) -> global___Entry:
        """Required. The updated entry. The "name" field must be set."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The fields to update on the entry. If absent or empty, all modifiable
        fields are updated.

        The following fields are modifiable:
        * For entries with type `DATA_STREAM`:
           * `schema`
        * For entries with type `FILESET`
           * `schema`
           * `display_name`
           * `description`
           * `gcs_fileset_spec`
           * `gcs_fileset_spec.file_patterns`
        * For entries with `user_specified_type`
           * `schema`
           * `display_name`
           * `description`
           * user_specified_type
           * user_specified_system
           * linked_resource
           * source_system_timestamps
        """
        pass
    def __init__(self,
        *,
        entry : typing.Optional[global___Entry] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entry",b"entry","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entry",b"entry","update_mask",b"update_mask"]) -> None: ...
global___UpdateEntryRequest = UpdateEntryRequest

class DeleteEntryRequest(google.protobuf.message.Message):
    """Request message for
    [DeleteEntry][google.cloud.datacatalog.v1beta1.DataCatalog.DeleteEntry].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the entry. Example:

    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteEntryRequest = DeleteEntryRequest

class GetEntryRequest(google.protobuf.message.Message):
    """Request message for
    [GetEntry][google.cloud.datacatalog.v1beta1.DataCatalog.GetEntry].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the entry. Example:

    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetEntryRequest = GetEntryRequest

class LookupEntryRequest(google.protobuf.message.Message):
    """Request message for
    [LookupEntry][google.cloud.datacatalog.v1beta1.DataCatalog.LookupEntry].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LINKED_RESOURCE_FIELD_NUMBER: builtins.int
    SQL_RESOURCE_FIELD_NUMBER: builtins.int
    linked_resource: typing.Text = ...
    """The full name of the Google Cloud Platform resource the Data Catalog
    entry represents. See:
    https://cloud.google.com/apis/design/resource_names#full_resource_name.
    Full names are case-sensitive.

    Examples:

     * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
     * //pubsub.googleapis.com/projects/projectId/topics/topicId
    """

    sql_resource: typing.Text = ...
    """The SQL name of the entry. SQL names are case-sensitive.

    Examples:

      * `pubsub.project_id.topic_id`
      * ``pubsub.project_id.`topic.id.with.dots` ``
      * `bigquery.table.project_id.dataset_id.table_id`
      * `bigquery.dataset.project_id.dataset_id`
      * `datacatalog.entry.project_id.location_id.entry_group_id.entry_id`

    `*_id`s shoud satisfy the standard SQL rules for identifiers.
    https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical.
    """

    def __init__(self,
        *,
        linked_resource : typing.Text = ...,
        sql_resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["linked_resource",b"linked_resource","sql_resource",b"sql_resource","target_name",b"target_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["linked_resource",b"linked_resource","sql_resource",b"sql_resource","target_name",b"target_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["target_name",b"target_name"]) -> typing.Optional[typing_extensions.Literal["linked_resource","sql_resource"]]: ...
global___LookupEntryRequest = LookupEntryRequest

class Entry(google.protobuf.message.Message):
    """Entry Metadata.
    A Data Catalog Entry resource represents another resource in Google
    Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or
    outside of Google Cloud Platform. Clients can use the `linked_resource` field
    in the Entry resource to refer to the original resource ID of the source
    system.

    An Entry resource contains resource details, such as its schema. An Entry can
    also be used to attach flexible metadata, such as a
    [Tag][google.cloud.datacatalog.v1beta1.Tag].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    LINKED_RESOURCE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    USER_SPECIFIED_TYPE_FIELD_NUMBER: builtins.int
    INTEGRATED_SYSTEM_FIELD_NUMBER: builtins.int
    USER_SPECIFIED_SYSTEM_FIELD_NUMBER: builtins.int
    GCS_FILESET_SPEC_FIELD_NUMBER: builtins.int
    BIGQUERY_TABLE_SPEC_FIELD_NUMBER: builtins.int
    BIGQUERY_DATE_SHARDED_SPEC_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    SCHEMA_FIELD_NUMBER: builtins.int
    SOURCE_SYSTEM_TIMESTAMPS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The Data Catalog resource name of the entry in URL format. Example:

    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}

    Note that this Entry and its child resources may not actually be stored in
    the location in this name.
    """

    linked_resource: typing.Text = ...
    """The resource this metadata entry refers to.

    For Google Cloud Platform resources, `linked_resource` is the [full name of
    the
    resource](https://cloud.google.com/apis/design/resource_names#full_resource_name).
    For example, the `linked_resource` for a table resource from BigQuery is:

    * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId

    Output only when Entry is of type in the EntryType enum. For entries with
    user_specified_type, this field is optional and defaults to an empty
    string.
    """

    type: global___EntryType.ValueType = ...
    """The type of the entry.
    Only used for Entries with types in the EntryType enum.
    """

    user_specified_type: typing.Text = ...
    """Entry type if it does not fit any of the input-allowed values listed in
    `EntryType` enum above. When creating an entry, users should check the
    enum values first, if nothing matches the entry to be created, then
    provide a custom value, for example "my_special_type".
    `user_specified_type` strings must begin with a letter or underscore and
    can only contain letters, numbers, and underscores; are case insensitive;
    must be at least 1 character and at most 64 characters long.

    Currently, only FILESET enum value is allowed. All other entries created
    through Data Catalog must use `user_specified_type`.
    """

    integrated_system: google.cloud.datacatalog.v1beta1.common_pb2.IntegratedSystem.ValueType = ...
    """Output only. This field indicates the entry's source system that Data Catalog
    integrates with, such as BigQuery or Pub/Sub.
    """

    user_specified_system: typing.Text = ...
    """This field indicates the entry's source system that Data Catalog does not
    integrate with. `user_specified_system` strings must begin with a letter
    or underscore and can only contain letters, numbers, and underscores; are
    case insensitive; must be at least 1 character and at most 64 characters
    long.
    """

    @property
    def gcs_fileset_spec(self) -> google.cloud.datacatalog.v1beta1.gcs_fileset_spec_pb2.GcsFilesetSpec:
        """Specification that applies to a Cloud Storage fileset. This is only valid
        on entries of type FILESET.
        """
        pass
    @property
    def bigquery_table_spec(self) -> google.cloud.datacatalog.v1beta1.table_spec_pb2.BigQueryTableSpec:
        """Specification that applies to a BigQuery table. This is only valid on
        entries of type `TABLE`.
        """
        pass
    @property
    def bigquery_date_sharded_spec(self) -> google.cloud.datacatalog.v1beta1.table_spec_pb2.BigQueryDateShardedSpec:
        """Specification for a group of BigQuery tables with name pattern
        `[prefix]YYYYMMDD`. Context:
        https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.
        """
        pass
    display_name: typing.Text = ...
    """Display information such as title and description. A short name to identify
    the entry, for example, "Analytics Data - Jan 2011". Default value is an
    empty string.
    """

    description: typing.Text = ...
    """Entry description, which can consist of several sentences or paragraphs
    that describe entry contents. Default value is an empty string.
    """

    @property
    def schema(self) -> google.cloud.datacatalog.v1beta1.schema_pb2.Schema:
        """Schema of the entry. An entry might not have any schema attached to it."""
        pass
    @property
    def source_system_timestamps(self) -> google.cloud.datacatalog.v1beta1.timestamps_pb2.SystemTimestamps:
        """Output only. Timestamps about the underlying resource, not about this Data Catalog
        entry. Output only when Entry is of type in the EntryType enum. For entries
        with user_specified_type, this field is optional and defaults to an empty
        timestamp.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        linked_resource : typing.Text = ...,
        type : global___EntryType.ValueType = ...,
        user_specified_type : typing.Text = ...,
        integrated_system : google.cloud.datacatalog.v1beta1.common_pb2.IntegratedSystem.ValueType = ...,
        user_specified_system : typing.Text = ...,
        gcs_fileset_spec : typing.Optional[google.cloud.datacatalog.v1beta1.gcs_fileset_spec_pb2.GcsFilesetSpec] = ...,
        bigquery_table_spec : typing.Optional[google.cloud.datacatalog.v1beta1.table_spec_pb2.BigQueryTableSpec] = ...,
        bigquery_date_sharded_spec : typing.Optional[google.cloud.datacatalog.v1beta1.table_spec_pb2.BigQueryDateShardedSpec] = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        schema : typing.Optional[google.cloud.datacatalog.v1beta1.schema_pb2.Schema] = ...,
        source_system_timestamps : typing.Optional[google.cloud.datacatalog.v1beta1.timestamps_pb2.SystemTimestamps] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bigquery_date_sharded_spec",b"bigquery_date_sharded_spec","bigquery_table_spec",b"bigquery_table_spec","entry_type",b"entry_type","gcs_fileset_spec",b"gcs_fileset_spec","integrated_system",b"integrated_system","schema",b"schema","source_system_timestamps",b"source_system_timestamps","system",b"system","type",b"type","type_spec",b"type_spec","user_specified_system",b"user_specified_system","user_specified_type",b"user_specified_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bigquery_date_sharded_spec",b"bigquery_date_sharded_spec","bigquery_table_spec",b"bigquery_table_spec","description",b"description","display_name",b"display_name","entry_type",b"entry_type","gcs_fileset_spec",b"gcs_fileset_spec","integrated_system",b"integrated_system","linked_resource",b"linked_resource","name",b"name","schema",b"schema","source_system_timestamps",b"source_system_timestamps","system",b"system","type",b"type","type_spec",b"type_spec","user_specified_system",b"user_specified_system","user_specified_type",b"user_specified_type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["entry_type",b"entry_type"]) -> typing.Optional[typing_extensions.Literal["type","user_specified_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["system",b"system"]) -> typing.Optional[typing_extensions.Literal["integrated_system","user_specified_system"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type_spec",b"type_spec"]) -> typing.Optional[typing_extensions.Literal["gcs_fileset_spec","bigquery_table_spec","bigquery_date_sharded_spec"]]: ...
global___Entry = Entry

class EntryGroup(google.protobuf.message.Message):
    """EntryGroup Metadata.
    An EntryGroup resource represents a logical grouping of zero or more
    Data Catalog [Entry][google.cloud.datacatalog.v1beta1.Entry] resources.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DATA_CATALOG_TIMESTAMPS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the entry group in URL format. Example:

    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}

    Note that this EntryGroup and its child resources may not actually be
    stored in the location in this name.
    """

    display_name: typing.Text = ...
    """A short name to identify the entry group, for example,
    "analytics data - jan 2011". Default value is an empty string.
    """

    description: typing.Text = ...
    """Entry group description, which can consist of several sentences or
    paragraphs that describe entry group contents. Default value is an empty
    string.
    """

    @property
    def data_catalog_timestamps(self) -> google.cloud.datacatalog.v1beta1.timestamps_pb2.SystemTimestamps:
        """Output only. Timestamps about this EntryGroup. Default value is empty timestamps."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        data_catalog_timestamps : typing.Optional[google.cloud.datacatalog.v1beta1.timestamps_pb2.SystemTimestamps] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_catalog_timestamps",b"data_catalog_timestamps"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_catalog_timestamps",b"data_catalog_timestamps","description",b"description","display_name",b"display_name","name",b"name"]) -> None: ...
global___EntryGroup = EntryGroup

class CreateTagTemplateRequest(google.protobuf.message.Message):
    """Request message for
    [CreateTagTemplate][google.cloud.datacatalog.v1beta1.DataCatalog.CreateTagTemplate].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    TAG_TEMPLATE_ID_FIELD_NUMBER: builtins.int
    TAG_TEMPLATE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the project and the template location
    [region](https://cloud.google.com/data-catalog/docs/concepts/regions.

    Example:

    * projects/{project_id}/locations/us-central1
    """

    tag_template_id: typing.Text = ...
    """Required. The id of the tag template to create."""

    @property
    def tag_template(self) -> google.cloud.datacatalog.v1beta1.tags_pb2.TagTemplate:
        """Required. The tag template to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        tag_template_id : typing.Text = ...,
        tag_template : typing.Optional[google.cloud.datacatalog.v1beta1.tags_pb2.TagTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tag_template",b"tag_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","tag_template",b"tag_template","tag_template_id",b"tag_template_id"]) -> None: ...
global___CreateTagTemplateRequest = CreateTagTemplateRequest

class GetTagTemplateRequest(google.protobuf.message.Message):
    """Request message for
    [GetTagTemplate][google.cloud.datacatalog.v1beta1.DataCatalog.GetTagTemplate].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the tag template. Example:

    * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetTagTemplateRequest = GetTagTemplateRequest

class UpdateTagTemplateRequest(google.protobuf.message.Message):
    """Request message for
    [UpdateTagTemplate][google.cloud.datacatalog.v1beta1.DataCatalog.UpdateTagTemplate].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAG_TEMPLATE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def tag_template(self) -> google.cloud.datacatalog.v1beta1.tags_pb2.TagTemplate:
        """Required. The template to update. The "name" field must be set."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The field mask specifies the parts of the template to overwrite.

        Allowed fields:

          * `display_name`

        If absent or empty, all of the allowed fields above will be updated.
        """
        pass
    def __init__(self,
        *,
        tag_template : typing.Optional[google.cloud.datacatalog.v1beta1.tags_pb2.TagTemplate] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tag_template",b"tag_template","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["tag_template",b"tag_template","update_mask",b"update_mask"]) -> None: ...
global___UpdateTagTemplateRequest = UpdateTagTemplateRequest

class DeleteTagTemplateRequest(google.protobuf.message.Message):
    """Request message for
    [DeleteTagTemplate][google.cloud.datacatalog.v1beta1.DataCatalog.DeleteTagTemplate].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the tag template to delete. Example:

    * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
    """

    force: builtins.bool = ...
    """Required. Currently, this field must always be set to `true`.
    This confirms the deletion of any possible tags using this template.
    `force = false` will be supported in the future.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        force : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["force",b"force","name",b"name"]) -> None: ...
global___DeleteTagTemplateRequest = DeleteTagTemplateRequest

class CreateTagRequest(google.protobuf.message.Message):
    """Request message for
    [CreateTag][google.cloud.datacatalog.v1beta1.DataCatalog.CreateTag].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the resource to attach this tag to. Tags can be attached to
    Entries. Example:

    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}

    Note that this Tag and its child resources may not actually be stored in
    the location in this name.
    """

    @property
    def tag(self) -> google.cloud.datacatalog.v1beta1.tags_pb2.Tag:
        """Required. The tag to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        tag : typing.Optional[google.cloud.datacatalog.v1beta1.tags_pb2.Tag] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tag",b"tag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","tag",b"tag"]) -> None: ...
global___CreateTagRequest = CreateTagRequest

class UpdateTagRequest(google.protobuf.message.Message):
    """Request message for
    [UpdateTag][google.cloud.datacatalog.v1beta1.DataCatalog.UpdateTag].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAG_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def tag(self) -> google.cloud.datacatalog.v1beta1.tags_pb2.Tag:
        """Required. The updated tag. The "name" field must be set."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The fields to update on the Tag. If absent or empty, all modifiable fields
        are updated. Currently the only modifiable field is the field `fields`.
        """
        pass
    def __init__(self,
        *,
        tag : typing.Optional[google.cloud.datacatalog.v1beta1.tags_pb2.Tag] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tag",b"tag","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["tag",b"tag","update_mask",b"update_mask"]) -> None: ...
global___UpdateTagRequest = UpdateTagRequest

class DeleteTagRequest(google.protobuf.message.Message):
    """Request message for
    [DeleteTag][google.cloud.datacatalog.v1beta1.DataCatalog.DeleteTag].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the tag to delete. Example:

    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteTagRequest = DeleteTagRequest

class CreateTagTemplateFieldRequest(google.protobuf.message.Message):
    """Request message for
    [CreateTagTemplateField][google.cloud.datacatalog.v1beta1.DataCatalog.CreateTagTemplateField].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    TAG_TEMPLATE_FIELD_ID_FIELD_NUMBER: builtins.int
    TAG_TEMPLATE_FIELD_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the project and the template location
    [region](https://cloud.google.com/data-catalog/docs/concepts/regions).

    Example:

    * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}
    """

    tag_template_field_id: typing.Text = ...
    """Required. The ID of the tag template field to create.
    Field ids can contain letters (both uppercase and lowercase), numbers
    (0-9), underscores (_) and dashes (-). Field IDs must be at least 1
    character long and at most 128 characters long. Field IDs must also be
    unique within their template.
    """

    @property
    def tag_template_field(self) -> google.cloud.datacatalog.v1beta1.tags_pb2.TagTemplateField:
        """Required. The tag template field to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        tag_template_field_id : typing.Text = ...,
        tag_template_field : typing.Optional[google.cloud.datacatalog.v1beta1.tags_pb2.TagTemplateField] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tag_template_field",b"tag_template_field"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","tag_template_field",b"tag_template_field","tag_template_field_id",b"tag_template_field_id"]) -> None: ...
global___CreateTagTemplateFieldRequest = CreateTagTemplateFieldRequest

class UpdateTagTemplateFieldRequest(google.protobuf.message.Message):
    """Request message for
    [UpdateTagTemplateField][google.cloud.datacatalog.v1beta1.DataCatalog.UpdateTagTemplateField].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    TAG_TEMPLATE_FIELD_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the tag template field. Example:

    * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
    """

    @property
    def tag_template_field(self) -> google.cloud.datacatalog.v1beta1.tags_pb2.TagTemplateField:
        """Required. The template to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. The field mask specifies the parts of the template to be updated.
        Allowed fields:

          * `display_name`
          * `type.enum_type`
          * `is_required`

        If `update_mask` is not set or empty, all of the allowed fields above will
        be updated.

        When updating an enum type, the provided values will be merged with the
        existing values. Therefore, enum values can only be added, existing enum
        values cannot be deleted nor renamed. Updating a template field from
        optional to required is NOT allowed.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        tag_template_field : typing.Optional[google.cloud.datacatalog.v1beta1.tags_pb2.TagTemplateField] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["tag_template_field",b"tag_template_field","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","tag_template_field",b"tag_template_field","update_mask",b"update_mask"]) -> None: ...
global___UpdateTagTemplateFieldRequest = UpdateTagTemplateFieldRequest

class RenameTagTemplateFieldRequest(google.protobuf.message.Message):
    """Request message for
    [RenameTagTemplateField][google.cloud.datacatalog.v1beta1.DataCatalog.RenameTagTemplateField].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    NEW_TAG_TEMPLATE_FIELD_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the tag template. Example:

    * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
    """

    new_tag_template_field_id: typing.Text = ...
    """Required. The new ID of this tag template field. For example, `my_new_field`."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        new_tag_template_field_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","new_tag_template_field_id",b"new_tag_template_field_id"]) -> None: ...
global___RenameTagTemplateFieldRequest = RenameTagTemplateFieldRequest

class DeleteTagTemplateFieldRequest(google.protobuf.message.Message):
    """Request message for
    [DeleteTagTemplateField][google.cloud.datacatalog.v1beta1.DataCatalog.DeleteTagTemplateField].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the tag template field to delete. Example:

    * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
    """

    force: builtins.bool = ...
    """Required. Currently, this field must always be set to `true`.
    This confirms the deletion of this field from any tags using this field.
    `force = false` will be supported in the future.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        force : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["force",b"force","name",b"name"]) -> None: ...
global___DeleteTagTemplateFieldRequest = DeleteTagTemplateFieldRequest

class ListTagsRequest(google.protobuf.message.Message):
    """Request message for
    [ListTags][google.cloud.datacatalog.v1beta1.DataCatalog.ListTags].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the Data Catalog resource to list the tags of. The resource
    could be an [Entry][google.cloud.datacatalog.v1beta1.Entry] or an
    [EntryGroup][google.cloud.datacatalog.v1beta1.EntryGroup].

    Examples:

    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
    """

    page_size: builtins.int = ...
    """The maximum number of tags to return. Default is 10. Max limit is 1000."""

    page_token: typing.Text = ...
    """Token that specifies which page is requested. If empty, the first page is
    returned.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListTagsRequest = ListTagsRequest

class ListTagsResponse(google.protobuf.message.Message):
    """Response message for
    [ListTags][google.cloud.datacatalog.v1beta1.DataCatalog.ListTags].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAGS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.datacatalog.v1beta1.tags_pb2.Tag]:
        """[Tag][google.cloud.datacatalog.v1beta1.Tag] details."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results. It is set to empty if no items
    remain in results.
    """

    def __init__(self,
        *,
        tags : typing.Optional[typing.Iterable[google.cloud.datacatalog.v1beta1.tags_pb2.Tag]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","tags",b"tags"]) -> None: ...
global___ListTagsResponse = ListTagsResponse

class ListEntriesRequest(google.protobuf.message.Message):
    """Request message for
    [ListEntries][google.cloud.datacatalog.v1beta1.DataCatalog.ListEntries].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    READ_MASK_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the entry group that contains the entries, which can
    be provided in URL format. Example:

    * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
    """

    page_size: builtins.int = ...
    """The maximum number of items to return. Default is 10. Max limit is 1000.
    Throws an invalid argument for `page_size > 1000`.
    """

    page_token: typing.Text = ...
    """Token that specifies which page is requested. If empty, the first page is
    returned.
    """

    @property
    def read_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The fields to return for each Entry. If not set or empty, all
        fields are returned.
        For example, setting read_mask to contain only one path "name" will cause
        ListEntries to return a list of Entries with only "name" field.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        read_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["read_mask",b"read_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent","read_mask",b"read_mask"]) -> None: ...
global___ListEntriesRequest = ListEntriesRequest

class ListEntriesResponse(google.protobuf.message.Message):
    """Response message for
    [ListEntries][google.cloud.datacatalog.v1beta1.DataCatalog.ListEntries].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTRIES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Entry]:
        """Entry details."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results. It is set to empty if no items
    remain in results.
    """

    def __init__(self,
        *,
        entries : typing.Optional[typing.Iterable[global___Entry]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries",b"entries","next_page_token",b"next_page_token"]) -> None: ...
global___ListEntriesResponse = ListEntriesResponse
