"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.contactcenterinsights.v1.resources_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _ConversationView:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ConversationViewEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ConversationView.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    CONVERSATION_VIEW_UNSPECIFIED: ConversationView.ValueType = ...  # 0
    """The conversation view is not specified.

    * Defaults to `FULL` in `GetConversationRequest`.
    * Defaults to `BASIC` in `ListConversationsRequest`.
    """

    FULL: ConversationView.ValueType = ...  # 2
    """Populates all fields in the conversation."""

    BASIC: ConversationView.ValueType = ...  # 1
    """Populates all fields in the conversation except the transcript."""

class ConversationView(_ConversationView, metaclass=_ConversationViewEnumTypeWrapper):
    """Represents the options for viewing a conversation."""
    pass

CONVERSATION_VIEW_UNSPECIFIED: ConversationView.ValueType = ...  # 0
"""The conversation view is not specified.

* Defaults to `FULL` in `GetConversationRequest`.
* Defaults to `BASIC` in `ListConversationsRequest`.
"""

FULL: ConversationView.ValueType = ...  # 2
"""Populates all fields in the conversation."""

BASIC: ConversationView.ValueType = ...  # 1
"""Populates all fields in the conversation except the transcript."""

global___ConversationView = ConversationView


class CalculateStatsRequest(google.protobuf.message.Message):
    """The request for calculating conversation statistics."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCATION_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    location: typing.Text = ...
    """Required. The location of the conversations."""

    filter: typing.Text = ...
    """A filter to reduce results to a specific subset. This field is useful for
    getting statistics about conversations with specific properties.
    """

    def __init__(self,
        *,
        location : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","location",b"location"]) -> None: ...
global___CalculateStatsRequest = CalculateStatsRequest

class CalculateStatsResponse(google.protobuf.message.Message):
    """The response for calculating conversation statistics."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TimeSeries(google.protobuf.message.Message):
        """A time series representing conversations over time."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Interval(google.protobuf.message.Message):
            """A single interval in a time series."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            START_TIME_FIELD_NUMBER: builtins.int
            CONVERSATION_COUNT_FIELD_NUMBER: builtins.int
            @property
            def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
                """The start time of this interval."""
                pass
            conversation_count: builtins.int = ...
            """The number of conversations created in this interval."""

            def __init__(self,
                *,
                start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
                conversation_count : builtins.int = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["start_time",b"start_time"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["conversation_count",b"conversation_count","start_time",b"start_time"]) -> None: ...

        INTERVAL_DURATION_FIELD_NUMBER: builtins.int
        POINTS_FIELD_NUMBER: builtins.int
        @property
        def interval_duration(self) -> google.protobuf.duration_pb2.Duration:
            """The duration of each interval."""
            pass
        @property
        def points(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CalculateStatsResponse.TimeSeries.Interval]:
            """An ordered list of intervals from earliest to latest, where each interval
            represents the number of conversations that transpired during the time
            window.
            """
            pass
        def __init__(self,
            *,
            interval_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            points : typing.Optional[typing.Iterable[global___CalculateStatsResponse.TimeSeries.Interval]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["interval_duration",b"interval_duration"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["interval_duration",b"interval_duration","points",b"points"]) -> None: ...

    class SmartHighlighterMatchesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class CustomHighlighterMatchesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class IssueMatchesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class IssueMatchesStatsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.IssueModelLabelStats.IssueStats: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.IssueModelLabelStats.IssueStats] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    AVERAGE_DURATION_FIELD_NUMBER: builtins.int
    AVERAGE_TURN_COUNT_FIELD_NUMBER: builtins.int
    CONVERSATION_COUNT_FIELD_NUMBER: builtins.int
    SMART_HIGHLIGHTER_MATCHES_FIELD_NUMBER: builtins.int
    CUSTOM_HIGHLIGHTER_MATCHES_FIELD_NUMBER: builtins.int
    ISSUE_MATCHES_FIELD_NUMBER: builtins.int
    ISSUE_MATCHES_STATS_FIELD_NUMBER: builtins.int
    CONVERSATION_COUNT_TIME_SERIES_FIELD_NUMBER: builtins.int
    @property
    def average_duration(self) -> google.protobuf.duration_pb2.Duration:
        """The average duration of all conversations. The average is calculated using
        only conversations that have a time duration.
        """
        pass
    average_turn_count: builtins.int = ...
    """The average number of turns per conversation."""

    conversation_count: builtins.int = ...
    """The total number of conversations."""

    @property
    def smart_highlighter_matches(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]:
        """A map associating each smart highlighter display name with its respective
        number of matches in the set of conversations.
        """
        pass
    @property
    def custom_highlighter_matches(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]:
        """A map associating each custom highlighter resource name with its respective
        number of matches in the set of conversations.
        """
        pass
    @property
    def issue_matches(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]:
        """A map associating each issue resource name with its respective number of
        matches in the set of conversations. Key has the format:
        `projects/<Project-ID>/locations/<Location-ID>/issueModels/<Issue-Model-ID>/issues/<Issue-ID>`
        Deprecated, use `issue_matches_stats` field instead.
        """
        pass
    @property
    def issue_matches_stats(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.cloud.contactcenterinsights.v1.resources_pb2.IssueModelLabelStats.IssueStats]:
        """A map associating each issue resource name with its respective number of
        matches in the set of conversations. Key has the format:
        `projects/<Project-ID>/locations/<Location-ID>/issueModels/<Issue-Model-ID>/issues/<Issue-ID>`
        """
        pass
    @property
    def conversation_count_time_series(self) -> global___CalculateStatsResponse.TimeSeries:
        """A time series representing the count of conversations created over time
        that match that requested filter criteria.
        """
        pass
    def __init__(self,
        *,
        average_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        average_turn_count : builtins.int = ...,
        conversation_count : builtins.int = ...,
        smart_highlighter_matches : typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        custom_highlighter_matches : typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        issue_matches : typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        issue_matches_stats : typing.Optional[typing.Mapping[typing.Text, google.cloud.contactcenterinsights.v1.resources_pb2.IssueModelLabelStats.IssueStats]] = ...,
        conversation_count_time_series : typing.Optional[global___CalculateStatsResponse.TimeSeries] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["average_duration",b"average_duration","conversation_count_time_series",b"conversation_count_time_series"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["average_duration",b"average_duration","average_turn_count",b"average_turn_count","conversation_count",b"conversation_count","conversation_count_time_series",b"conversation_count_time_series","custom_highlighter_matches",b"custom_highlighter_matches","issue_matches",b"issue_matches","issue_matches_stats",b"issue_matches_stats","smart_highlighter_matches",b"smart_highlighter_matches"]) -> None: ...
global___CalculateStatsResponse = CalculateStatsResponse

class CreateAnalysisOperationMetadata(google.protobuf.message.Message):
    """Metadata for a create analysis operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    CONVERSATION_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    conversation: typing.Text = ...
    """Output only. The Conversation that this Analysis Operation belongs to."""

    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        conversation : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["conversation",b"conversation","create_time",b"create_time","end_time",b"end_time"]) -> None: ...
global___CreateAnalysisOperationMetadata = CreateAnalysisOperationMetadata

class CreateConversationRequest(google.protobuf.message.Message):
    """Request to create a conversation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    CONVERSATION_FIELD_NUMBER: builtins.int
    CONVERSATION_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the conversation."""

    @property
    def conversation(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.Conversation:
        """Required. The conversation resource to create."""
        pass
    conversation_id: typing.Text = ...
    """A unique ID for the new conversation. This ID will become the final
    component of the conversation's resource name. If no ID is specified, a
    server-generated ID will be used.

    This value should be 4-64 characters and must match the regular
    expression `^[a-z0-9-]{4,64}$`. Valid characters are `[a-z][0-9]-`
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        conversation : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.Conversation] = ...,
        conversation_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["conversation",b"conversation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["conversation",b"conversation","conversation_id",b"conversation_id","parent",b"parent"]) -> None: ...
global___CreateConversationRequest = CreateConversationRequest

class ListConversationsRequest(google.protobuf.message.Message):
    """Request to list conversations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the conversation."""

    page_size: builtins.int = ...
    """The maximum number of conversations to return in the response. A valid page
    size ranges from 0 to 1,000 inclusive. If the page size is zero or
    unspecified, a default page size of 100 will be chosen. Note that a call
    might return fewer results than the requested page size.
    """

    page_token: typing.Text = ...
    """The value returned by the last `ListConversationsResponse`. This value
    indicates that this is a continuation of a prior `ListConversations` call
    and that the system should return the next page of data.
    """

    filter: typing.Text = ...
    """A filter to reduce results to a specific subset. Useful for querying
    conversations with specific properties.
    """

    view: global___ConversationView.ValueType = ...
    """The level of details of the conversation. Default is `BASIC`."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        view : global___ConversationView.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent","view",b"view"]) -> None: ...
global___ListConversationsRequest = ListConversationsRequest

class ListConversationsResponse(google.protobuf.message.Message):
    """The response of listing conversations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONVERSATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def conversations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.contactcenterinsights.v1.resources_pb2.Conversation]:
        """The conversations that match the request."""
        pass
    next_page_token: typing.Text = ...
    """A token which can be sent as `page_token` to retrieve the next page. If
    this field is set, it means there is another page available. If it is not
    set, it means no other pages are available.
    """

    def __init__(self,
        *,
        conversations : typing.Optional[typing.Iterable[google.cloud.contactcenterinsights.v1.resources_pb2.Conversation]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["conversations",b"conversations","next_page_token",b"next_page_token"]) -> None: ...
global___ListConversationsResponse = ListConversationsResponse

class GetConversationRequest(google.protobuf.message.Message):
    """The request to get a conversation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the conversation to get."""

    view: global___ConversationView.ValueType = ...
    """The level of details of the conversation. Default is `FULL`."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        view : global___ConversationView.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","view",b"view"]) -> None: ...
global___GetConversationRequest = GetConversationRequest

class UpdateConversationRequest(google.protobuf.message.Message):
    """The request to update a conversation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONVERSATION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def conversation(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.Conversation:
        """Required. The new values for the conversation."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated."""
        pass
    def __init__(self,
        *,
        conversation : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.Conversation] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["conversation",b"conversation","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["conversation",b"conversation","update_mask",b"update_mask"]) -> None: ...
global___UpdateConversationRequest = UpdateConversationRequest

class DeleteConversationRequest(google.protobuf.message.Message):
    """The request to delete a conversation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the conversation to delete."""

    force: builtins.bool = ...
    """If set to true, all of this conversation's analyses will also be deleted.
    Otherwise, the request will only succeed if the conversation has no
    analyses.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        force : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["force",b"force","name",b"name"]) -> None: ...
global___DeleteConversationRequest = DeleteConversationRequest

class CreateAnalysisRequest(google.protobuf.message.Message):
    """The request to create an analysis."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    ANALYSIS_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the analysis."""

    @property
    def analysis(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.Analysis:
        """Required. The analysis to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        analysis : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.Analysis] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["analysis",b"analysis"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["analysis",b"analysis","parent",b"parent"]) -> None: ...
global___CreateAnalysisRequest = CreateAnalysisRequest

class ListAnalysesRequest(google.protobuf.message.Message):
    """The request to list analyses."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the analyses."""

    page_size: builtins.int = ...
    """The maximum number of analyses to return in the response. If this
    value is zero, the service will select a default size. A call might return
    fewer objects than requested. A non-empty `next_page_token` in the response
    indicates that more data is available.
    """

    page_token: typing.Text = ...
    """The value returned by the last `ListAnalysesResponse`; indicates
    that this is a continuation of a prior `ListAnalyses` call and
    the system should return the next page of data.
    """

    filter: typing.Text = ...
    """A filter to reduce results to a specific subset. Useful for querying
    conversations with specific properties.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListAnalysesRequest = ListAnalysesRequest

class ListAnalysesResponse(google.protobuf.message.Message):
    """The response to list analyses."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANALYSES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def analyses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.contactcenterinsights.v1.resources_pb2.Analysis]:
        """The analyses that match the request."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    def __init__(self,
        *,
        analyses : typing.Optional[typing.Iterable[google.cloud.contactcenterinsights.v1.resources_pb2.Analysis]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["analyses",b"analyses","next_page_token",b"next_page_token"]) -> None: ...
global___ListAnalysesResponse = ListAnalysesResponse

class GetAnalysisRequest(google.protobuf.message.Message):
    """The request to get an analysis."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the analysis to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetAnalysisRequest = GetAnalysisRequest

class DeleteAnalysisRequest(google.protobuf.message.Message):
    """The request to delete an analysis."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the analysis to delete."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteAnalysisRequest = DeleteAnalysisRequest

class ExportInsightsDataRequest(google.protobuf.message.Message):
    """The request to export insights."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _WriteDisposition:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _WriteDispositionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WriteDisposition.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        WRITE_DISPOSITION_UNSPECIFIED: ExportInsightsDataRequest.WriteDisposition.ValueType = ...  # 0
        """Write disposition is not specified. Defaults to WRITE_TRUNCATE."""

        WRITE_TRUNCATE: ExportInsightsDataRequest.WriteDisposition.ValueType = ...  # 1
        """If the table already exists, BigQuery will overwrite the table data and
        use the schema from the load.
        """

        WRITE_APPEND: ExportInsightsDataRequest.WriteDisposition.ValueType = ...  # 2
        """If the table already exists, BigQuery will append data to the table."""

    class WriteDisposition(_WriteDisposition, metaclass=_WriteDispositionEnumTypeWrapper):
        """Specifies the action that occurs if the destination table already exists."""
        pass

    WRITE_DISPOSITION_UNSPECIFIED: ExportInsightsDataRequest.WriteDisposition.ValueType = ...  # 0
    """Write disposition is not specified. Defaults to WRITE_TRUNCATE."""

    WRITE_TRUNCATE: ExportInsightsDataRequest.WriteDisposition.ValueType = ...  # 1
    """If the table already exists, BigQuery will overwrite the table data and
    use the schema from the load.
    """

    WRITE_APPEND: ExportInsightsDataRequest.WriteDisposition.ValueType = ...  # 2
    """If the table already exists, BigQuery will append data to the table."""


    class BigQueryDestination(google.protobuf.message.Message):
        """A BigQuery Table Reference."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PROJECT_ID_FIELD_NUMBER: builtins.int
        DATASET_FIELD_NUMBER: builtins.int
        TABLE_FIELD_NUMBER: builtins.int
        project_id: typing.Text = ...
        """A project ID or number. If specified, then export will attempt to
        write data to this project instead of the resource project. Otherwise,
        the resource project will be used.
        """

        dataset: typing.Text = ...
        """Required. The name of the BigQuery dataset that the snapshot result should be
        exported to. If this dataset does not exist, the export call returns an
        INVALID_ARGUMENT error.
        """

        table: typing.Text = ...
        """The BigQuery table name to which the insights data should be written.
        If this table does not exist, the export call returns an INVALID_ARGUMENT
        error.
        """

        def __init__(self,
            *,
            project_id : typing.Text = ...,
            dataset : typing.Text = ...,
            table : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["dataset",b"dataset","project_id",b"project_id","table",b"table"]) -> None: ...

    BIG_QUERY_DESTINATION_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    KMS_KEY_FIELD_NUMBER: builtins.int
    WRITE_DISPOSITION_FIELD_NUMBER: builtins.int
    @property
    def big_query_destination(self) -> global___ExportInsightsDataRequest.BigQueryDestination:
        """Specified if sink is a BigQuery table."""
        pass
    parent: typing.Text = ...
    """Required. The parent resource to export data from."""

    filter: typing.Text = ...
    """A filter to reduce results to a specific subset. Useful for exporting
    conversations with specific properties.
    """

    kms_key: typing.Text = ...
    """A fully qualified KMS key name for BigQuery tables protected by CMEK.
    Format:
    projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
    """

    write_disposition: global___ExportInsightsDataRequest.WriteDisposition.ValueType = ...
    """Options for what to do if the destination table already exists."""

    def __init__(self,
        *,
        big_query_destination : typing.Optional[global___ExportInsightsDataRequest.BigQueryDestination] = ...,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        kms_key : typing.Text = ...,
        write_disposition : global___ExportInsightsDataRequest.WriteDisposition.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["big_query_destination",b"big_query_destination","destination",b"destination"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["big_query_destination",b"big_query_destination","destination",b"destination","filter",b"filter","kms_key",b"kms_key","parent",b"parent","write_disposition",b"write_disposition"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["destination",b"destination"]) -> typing.Optional[typing_extensions.Literal["big_query_destination"]]: ...
global___ExportInsightsDataRequest = ExportInsightsDataRequest

class ExportInsightsDataMetadata(google.protobuf.message.Message):
    """Metadata for an export insights operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    PARTIAL_ERRORS_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    @property
    def request(self) -> global___ExportInsightsDataRequest:
        """The original request for export."""
        pass
    @property
    def partial_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.rpc.status_pb2.Status]:
        """Partial errors during export operation that might cause the operation
        output to be incomplete.
        """
        pass
    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        request : typing.Optional[global___ExportInsightsDataRequest] = ...,
        partial_errors : typing.Optional[typing.Iterable[google.rpc.status_pb2.Status]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","partial_errors",b"partial_errors","request",b"request"]) -> None: ...
global___ExportInsightsDataMetadata = ExportInsightsDataMetadata

class ExportInsightsDataResponse(google.protobuf.message.Message):
    """Response for an export insights operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ExportInsightsDataResponse = ExportInsightsDataResponse

class CreateIssueModelRequest(google.protobuf.message.Message):
    """The request to create an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    ISSUE_MODEL_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the issue model."""

    @property
    def issue_model(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.IssueModel:
        """Required. The issue model to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        issue_model : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.IssueModel] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["issue_model",b"issue_model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["issue_model",b"issue_model","parent",b"parent"]) -> None: ...
global___CreateIssueModelRequest = CreateIssueModelRequest

class CreateIssueModelMetadata(google.protobuf.message.Message):
    """Metadata for creating an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    @property
    def request(self) -> global___CreateIssueModelRequest:
        """The original request for creation."""
        pass
    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        request : typing.Optional[global___CreateIssueModelRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","request",b"request"]) -> None: ...
global___CreateIssueModelMetadata = CreateIssueModelMetadata

class UpdateIssueModelRequest(google.protobuf.message.Message):
    """The request to update an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ISSUE_MODEL_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def issue_model(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.IssueModel:
        """Required. The new values for the issue model."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated."""
        pass
    def __init__(self,
        *,
        issue_model : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.IssueModel] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["issue_model",b"issue_model","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["issue_model",b"issue_model","update_mask",b"update_mask"]) -> None: ...
global___UpdateIssueModelRequest = UpdateIssueModelRequest

class ListIssueModelsRequest(google.protobuf.message.Message):
    """Request to list issue models."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the issue model."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent"]) -> None: ...
global___ListIssueModelsRequest = ListIssueModelsRequest

class ListIssueModelsResponse(google.protobuf.message.Message):
    """The response of listing issue models."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ISSUE_MODELS_FIELD_NUMBER: builtins.int
    @property
    def issue_models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.contactcenterinsights.v1.resources_pb2.IssueModel]:
        """The issue models that match the request."""
        pass
    def __init__(self,
        *,
        issue_models : typing.Optional[typing.Iterable[google.cloud.contactcenterinsights.v1.resources_pb2.IssueModel]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["issue_models",b"issue_models"]) -> None: ...
global___ListIssueModelsResponse = ListIssueModelsResponse

class GetIssueModelRequest(google.protobuf.message.Message):
    """The request to get an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the issue model to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetIssueModelRequest = GetIssueModelRequest

class DeleteIssueModelRequest(google.protobuf.message.Message):
    """The request to delete an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the issue model to delete."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteIssueModelRequest = DeleteIssueModelRequest

class DeleteIssueModelMetadata(google.protobuf.message.Message):
    """Metadata for deleting an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    @property
    def request(self) -> global___DeleteIssueModelRequest:
        """The original request for deletion."""
        pass
    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        request : typing.Optional[global___DeleteIssueModelRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","request",b"request"]) -> None: ...
global___DeleteIssueModelMetadata = DeleteIssueModelMetadata

class DeployIssueModelRequest(google.protobuf.message.Message):
    """The request to deploy an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The issue model to deploy."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeployIssueModelRequest = DeployIssueModelRequest

class DeployIssueModelResponse(google.protobuf.message.Message):
    """The response to deploy an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___DeployIssueModelResponse = DeployIssueModelResponse

class DeployIssueModelMetadata(google.protobuf.message.Message):
    """Metadata for deploying an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    @property
    def request(self) -> global___DeployIssueModelRequest:
        """The original request for deployment."""
        pass
    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        request : typing.Optional[global___DeployIssueModelRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","request",b"request"]) -> None: ...
global___DeployIssueModelMetadata = DeployIssueModelMetadata

class UndeployIssueModelRequest(google.protobuf.message.Message):
    """The request to undeploy an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The issue model to undeploy."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___UndeployIssueModelRequest = UndeployIssueModelRequest

class UndeployIssueModelResponse(google.protobuf.message.Message):
    """The response to undeploy an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___UndeployIssueModelResponse = UndeployIssueModelResponse

class UndeployIssueModelMetadata(google.protobuf.message.Message):
    """Metadata for undeploying an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    @property
    def request(self) -> global___UndeployIssueModelRequest:
        """The original request for undeployment."""
        pass
    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        request : typing.Optional[global___UndeployIssueModelRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","request",b"request"]) -> None: ...
global___UndeployIssueModelMetadata = UndeployIssueModelMetadata

class GetIssueRequest(google.protobuf.message.Message):
    """The request to get an issue."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the issue to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetIssueRequest = GetIssueRequest

class ListIssuesRequest(google.protobuf.message.Message):
    """Request to list issues."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the issue."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent"]) -> None: ...
global___ListIssuesRequest = ListIssuesRequest

class ListIssuesResponse(google.protobuf.message.Message):
    """The response of listing issues."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ISSUES_FIELD_NUMBER: builtins.int
    @property
    def issues(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.contactcenterinsights.v1.resources_pb2.Issue]:
        """The issues that match the request."""
        pass
    def __init__(self,
        *,
        issues : typing.Optional[typing.Iterable[google.cloud.contactcenterinsights.v1.resources_pb2.Issue]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["issues",b"issues"]) -> None: ...
global___ListIssuesResponse = ListIssuesResponse

class UpdateIssueRequest(google.protobuf.message.Message):
    """The request to update an issue."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ISSUE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def issue(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.Issue:
        """Required. The new values for the issue."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated."""
        pass
    def __init__(self,
        *,
        issue : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.Issue] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["issue",b"issue","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["issue",b"issue","update_mask",b"update_mask"]) -> None: ...
global___UpdateIssueRequest = UpdateIssueRequest

class CalculateIssueModelStatsRequest(google.protobuf.message.Message):
    """Request to get statistics of an issue model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ISSUE_MODEL_FIELD_NUMBER: builtins.int
    issue_model: typing.Text = ...
    """Required. The resource name of the issue model to query against."""

    def __init__(self,
        *,
        issue_model : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["issue_model",b"issue_model"]) -> None: ...
global___CalculateIssueModelStatsRequest = CalculateIssueModelStatsRequest

class CalculateIssueModelStatsResponse(google.protobuf.message.Message):
    """Response of querying an issue model's statistics."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CURRENT_STATS_FIELD_NUMBER: builtins.int
    @property
    def current_stats(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.IssueModelLabelStats:
        """The latest label statistics for the queried issue model. Includes results
        on both training data and data labeled after deployment.
        """
        pass
    def __init__(self,
        *,
        current_stats : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.IssueModelLabelStats] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["current_stats",b"current_stats"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_stats",b"current_stats"]) -> None: ...
global___CalculateIssueModelStatsResponse = CalculateIssueModelStatsResponse

class CreatePhraseMatcherRequest(google.protobuf.message.Message):
    """Request to create a phrase matcher."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PHRASE_MATCHER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the phrase matcher. Required. The location to create
    a phrase matcher for.
    Format: `projects/<Project ID>/locations/<Location ID>` or
    `projects/<Project Number>/locations/<Location ID>`
    """

    @property
    def phrase_matcher(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.PhraseMatcher:
        """Required. The phrase matcher resource to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        phrase_matcher : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.PhraseMatcher] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["phrase_matcher",b"phrase_matcher"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","phrase_matcher",b"phrase_matcher"]) -> None: ...
global___CreatePhraseMatcherRequest = CreatePhraseMatcherRequest

class ListPhraseMatchersRequest(google.protobuf.message.Message):
    """Request to list phrase matchers."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the phrase matcher."""

    page_size: builtins.int = ...
    """The maximum number of phrase matchers to return in the response. If this
    value is zero, the service will select a default size. A call might return
    fewer objects than requested. A non-empty `next_page_token` in the response
    indicates that more data is available.
    """

    page_token: typing.Text = ...
    """The value returned by the last `ListPhraseMatchersResponse`. This value
    indicates that this is a continuation of a prior `ListPhraseMatchers` call
    and that the system should return the next page of data.
    """

    filter: typing.Text = ...
    """A filter to reduce results to a specific subset. Useful for querying
    phrase matchers with specific properties.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListPhraseMatchersRequest = ListPhraseMatchersRequest

class ListPhraseMatchersResponse(google.protobuf.message.Message):
    """The response of listing phrase matchers."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PHRASE_MATCHERS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def phrase_matchers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.contactcenterinsights.v1.resources_pb2.PhraseMatcher]:
        """The phrase matchers that match the request."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    def __init__(self,
        *,
        phrase_matchers : typing.Optional[typing.Iterable[google.cloud.contactcenterinsights.v1.resources_pb2.PhraseMatcher]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","phrase_matchers",b"phrase_matchers"]) -> None: ...
global___ListPhraseMatchersResponse = ListPhraseMatchersResponse

class GetPhraseMatcherRequest(google.protobuf.message.Message):
    """The request to get a a phrase matcher."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the phrase matcher to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetPhraseMatcherRequest = GetPhraseMatcherRequest

class DeletePhraseMatcherRequest(google.protobuf.message.Message):
    """The request to delete a phrase matcher."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the phrase matcher to delete."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeletePhraseMatcherRequest = DeletePhraseMatcherRequest

class UpdatePhraseMatcherRequest(google.protobuf.message.Message):
    """The request to update a phrase matcher."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PHRASE_MATCHER_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def phrase_matcher(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.PhraseMatcher:
        """Required. The new values for the phrase matcher."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated."""
        pass
    def __init__(self,
        *,
        phrase_matcher : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.PhraseMatcher] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["phrase_matcher",b"phrase_matcher","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["phrase_matcher",b"phrase_matcher","update_mask",b"update_mask"]) -> None: ...
global___UpdatePhraseMatcherRequest = UpdatePhraseMatcherRequest

class GetSettingsRequest(google.protobuf.message.Message):
    """The request to get project-level settings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the settings resource to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetSettingsRequest = GetSettingsRequest

class UpdateSettingsRequest(google.protobuf.message.Message):
    """The request to update project-level settings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SETTINGS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def settings(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.Settings:
        """Required. The new settings values."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The list of fields to be updated."""
        pass
    def __init__(self,
        *,
        settings : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.Settings] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["settings",b"settings","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["settings",b"settings","update_mask",b"update_mask"]) -> None: ...
global___UpdateSettingsRequest = UpdateSettingsRequest

class CreateViewRequest(google.protobuf.message.Message):
    """The request to create a view."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the view. Required. The location to create
    a view for.
    Format: `projects/<Project ID>/locations/<Location ID>` or
    `projects/<Project Number>/locations/<Location ID>`
    """

    @property
    def view(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.View:
        """Required. The view resource to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        view : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.View] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["view",b"view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","view",b"view"]) -> None: ...
global___CreateViewRequest = CreateViewRequest

class GetViewRequest(google.protobuf.message.Message):
    """The request to get a view."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the view to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetViewRequest = GetViewRequest

class ListViewsRequest(google.protobuf.message.Message):
    """The request to list views."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the views."""

    page_size: builtins.int = ...
    """The maximum number of views to return in the response. If this
    value is zero, the service will select a default size. A call may return
    fewer objects than requested. A non-empty `next_page_token` in the response
    indicates that more data is available.
    """

    page_token: typing.Text = ...
    """The value returned by the last `ListViewsResponse`; indicates
    that this is a continuation of a prior `ListViews` call and
    the system should return the next page of data.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListViewsRequest = ListViewsRequest

class ListViewsResponse(google.protobuf.message.Message):
    """The response of listing views."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VIEWS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def views(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.contactcenterinsights.v1.resources_pb2.View]:
        """The views that match the request."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    def __init__(self,
        *,
        views : typing.Optional[typing.Iterable[google.cloud.contactcenterinsights.v1.resources_pb2.View]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","views",b"views"]) -> None: ...
global___ListViewsResponse = ListViewsResponse

class UpdateViewRequest(google.protobuf.message.Message):
    """The request to update a view."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VIEW_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def view(self) -> google.cloud.contactcenterinsights.v1.resources_pb2.View:
        """Required. The new view."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated."""
        pass
    def __init__(self,
        *,
        view : typing.Optional[google.cloud.contactcenterinsights.v1.resources_pb2.View] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update_mask",b"update_mask","view",b"view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["update_mask",b"update_mask","view",b"view"]) -> None: ...
global___UpdateViewRequest = UpdateViewRequest

class DeleteViewRequest(google.protobuf.message.Message):
    """The request to delete a view."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the view to delete."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteViewRequest = DeleteViewRequest
