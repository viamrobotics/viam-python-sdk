"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class EduData(google.protobuf.message.Message):
    """Required Edu Attributes"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _InstituteType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InstituteTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InstituteType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INSTITUTE_TYPE_UNSPECIFIED: EduData.InstituteType.ValueType = ...  # 0
        """Not used."""

        K12: EduData.InstituteType.ValueType = ...  # 1
        """Elementary/Secondary Schools & Districts"""

        UNIVERSITY: EduData.InstituteType.ValueType = ...  # 2
        """Higher Education Universities & Colleges"""

    class InstituteType(_InstituteType, metaclass=_InstituteTypeEnumTypeWrapper):
        """Enum to specify the institute type."""
        pass

    INSTITUTE_TYPE_UNSPECIFIED: EduData.InstituteType.ValueType = ...  # 0
    """Not used."""

    K12: EduData.InstituteType.ValueType = ...  # 1
    """Elementary/Secondary Schools & Districts"""

    UNIVERSITY: EduData.InstituteType.ValueType = ...  # 2
    """Higher Education Universities & Colleges"""


    class _InstituteSize:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InstituteSizeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InstituteSize.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INSTITUTE_SIZE_UNSPECIFIED: EduData.InstituteSize.ValueType = ...  # 0
        """Not used."""

        SIZE_1_100: EduData.InstituteSize.ValueType = ...  # 1
        """1 - 100"""

        SIZE_101_500: EduData.InstituteSize.ValueType = ...  # 2
        """101 - 500"""

        SIZE_501_1000: EduData.InstituteSize.ValueType = ...  # 3
        """501 - 1,000"""

        SIZE_1001_2000: EduData.InstituteSize.ValueType = ...  # 4
        """1,001 - 2,000"""

        SIZE_2001_5000: EduData.InstituteSize.ValueType = ...  # 5
        """2,001 - 5,000"""

        SIZE_5001_10000: EduData.InstituteSize.ValueType = ...  # 6
        """5,001 - 10,000"""

        SIZE_10001_OR_MORE: EduData.InstituteSize.ValueType = ...  # 7
        """10,001 +"""

    class InstituteSize(_InstituteSize, metaclass=_InstituteSizeEnumTypeWrapper):
        """Number of students and staff the institute has."""
        pass

    INSTITUTE_SIZE_UNSPECIFIED: EduData.InstituteSize.ValueType = ...  # 0
    """Not used."""

    SIZE_1_100: EduData.InstituteSize.ValueType = ...  # 1
    """1 - 100"""

    SIZE_101_500: EduData.InstituteSize.ValueType = ...  # 2
    """101 - 500"""

    SIZE_501_1000: EduData.InstituteSize.ValueType = ...  # 3
    """501 - 1,000"""

    SIZE_1001_2000: EduData.InstituteSize.ValueType = ...  # 4
    """1,001 - 2,000"""

    SIZE_2001_5000: EduData.InstituteSize.ValueType = ...  # 5
    """2,001 - 5,000"""

    SIZE_5001_10000: EduData.InstituteSize.ValueType = ...  # 6
    """5,001 - 10,000"""

    SIZE_10001_OR_MORE: EduData.InstituteSize.ValueType = ...  # 7
    """10,001 +"""


    INSTITUTE_TYPE_FIELD_NUMBER: builtins.int
    INSTITUTE_SIZE_FIELD_NUMBER: builtins.int
    WEBSITE_FIELD_NUMBER: builtins.int
    institute_type: global___EduData.InstituteType.ValueType = ...
    """Designated institute type of customer."""

    institute_size: global___EduData.InstituteSize.ValueType = ...
    """Size of the institute."""

    website: typing.Text = ...
    """Web address for the edu customer's institution."""

    def __init__(self,
        *,
        institute_type : global___EduData.InstituteType.ValueType = ...,
        institute_size : global___EduData.InstituteSize.ValueType = ...,
        website : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["institute_size",b"institute_size","institute_type",b"institute_type","website",b"website"]) -> None: ...
global___EduData = EduData

class CloudIdentityInfo(google.protobuf.message.Message):
    """Cloud Identity information for the Cloud Channel Customer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CustomerType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CustomerTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CustomerType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CUSTOMER_TYPE_UNSPECIFIED: CloudIdentityInfo.CustomerType.ValueType = ...  # 0
        """Not used."""

        DOMAIN: CloudIdentityInfo.CustomerType.ValueType = ...  # 1
        """Domain-owning customer which needs domain verification to use services."""

        TEAM: CloudIdentityInfo.CustomerType.ValueType = ...  # 2
        """Team customer which needs email verification to use services."""

    class CustomerType(_CustomerType, metaclass=_CustomerTypeEnumTypeWrapper):
        """CustomerType of the customer"""
        pass

    CUSTOMER_TYPE_UNSPECIFIED: CloudIdentityInfo.CustomerType.ValueType = ...  # 0
    """Not used."""

    DOMAIN: CloudIdentityInfo.CustomerType.ValueType = ...  # 1
    """Domain-owning customer which needs domain verification to use services."""

    TEAM: CloudIdentityInfo.CustomerType.ValueType = ...  # 2
    """Team customer which needs email verification to use services."""


    CUSTOMER_TYPE_FIELD_NUMBER: builtins.int
    PRIMARY_DOMAIN_FIELD_NUMBER: builtins.int
    IS_DOMAIN_VERIFIED_FIELD_NUMBER: builtins.int
    ALTERNATE_EMAIL_FIELD_NUMBER: builtins.int
    PHONE_NUMBER_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    ADMIN_CONSOLE_URI_FIELD_NUMBER: builtins.int
    EDU_DATA_FIELD_NUMBER: builtins.int
    customer_type: global___CloudIdentityInfo.CustomerType.ValueType = ...
    """CustomerType indicates verification type needed for using services."""

    primary_domain: typing.Text = ...
    """Output only. The primary domain name."""

    is_domain_verified: builtins.bool = ...
    """Output only. Whether the domain is verified.
    This field is not returned for a Customer's cloud_identity_info resource.
    Partners can use the domains.get() method of the Workspace SDK's
    Directory API, or listen to the PRIMARY_DOMAIN_VERIFIED Pub/Sub event in
    to track domain verification of their resolve Workspace customers.
    """

    alternate_email: typing.Text = ...
    """The alternate email."""

    phone_number: typing.Text = ...
    """Phone number associated with the Cloud Identity."""

    language_code: typing.Text = ...
    """Language code."""

    admin_console_uri: typing.Text = ...
    """Output only. URI of Customer's Admin console dashboard."""

    @property
    def edu_data(self) -> global___EduData:
        """Edu information about the customer."""
        pass
    def __init__(self,
        *,
        customer_type : global___CloudIdentityInfo.CustomerType.ValueType = ...,
        primary_domain : typing.Text = ...,
        is_domain_verified : builtins.bool = ...,
        alternate_email : typing.Text = ...,
        phone_number : typing.Text = ...,
        language_code : typing.Text = ...,
        admin_console_uri : typing.Text = ...,
        edu_data : typing.Optional[global___EduData] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["edu_data",b"edu_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["admin_console_uri",b"admin_console_uri","alternate_email",b"alternate_email","customer_type",b"customer_type","edu_data",b"edu_data","is_domain_verified",b"is_domain_verified","language_code",b"language_code","phone_number",b"phone_number","primary_domain",b"primary_domain"]) -> None: ...
global___CloudIdentityInfo = CloudIdentityInfo

class Value(google.protobuf.message.Message):
    """Data type and value of a parameter."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INT64_VALUE_FIELD_NUMBER: builtins.int
    STRING_VALUE_FIELD_NUMBER: builtins.int
    DOUBLE_VALUE_FIELD_NUMBER: builtins.int
    PROTO_VALUE_FIELD_NUMBER: builtins.int
    BOOL_VALUE_FIELD_NUMBER: builtins.int
    int64_value: builtins.int = ...
    """Represents an int64 value."""

    string_value: typing.Text = ...
    """Represents a string value."""

    double_value: builtins.float = ...
    """Represents a double value."""

    @property
    def proto_value(self) -> google.protobuf.any_pb2.Any:
        """Represents an 'Any' proto value."""
        pass
    bool_value: builtins.bool = ...
    """Represents a boolean value."""

    def __init__(self,
        *,
        int64_value : builtins.int = ...,
        string_value : typing.Text = ...,
        double_value : builtins.float = ...,
        proto_value : typing.Optional[google.protobuf.any_pb2.Any] = ...,
        bool_value : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bool_value",b"bool_value","double_value",b"double_value","int64_value",b"int64_value","kind",b"kind","proto_value",b"proto_value","string_value",b"string_value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bool_value",b"bool_value","double_value",b"double_value","int64_value",b"int64_value","kind",b"kind","proto_value",b"proto_value","string_value",b"string_value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["kind",b"kind"]) -> typing.Optional[typing_extensions.Literal["int64_value","string_value","double_value","proto_value","bool_value"]]: ...
global___Value = Value

class AdminUser(google.protobuf.message.Message):
    """Information needed to create an Admin User for Google Workspace."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EMAIL_FIELD_NUMBER: builtins.int
    GIVEN_NAME_FIELD_NUMBER: builtins.int
    FAMILY_NAME_FIELD_NUMBER: builtins.int
    email: typing.Text = ...
    """Primary email of the admin user."""

    given_name: typing.Text = ...
    """Given name of the admin user."""

    family_name: typing.Text = ...
    """Family name of the admin user."""

    def __init__(self,
        *,
        email : typing.Text = ...,
        given_name : typing.Text = ...,
        family_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["email",b"email","family_name",b"family_name","given_name",b"given_name"]) -> None: ...
global___AdminUser = AdminUser
