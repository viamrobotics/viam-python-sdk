"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.channel.v1.common_pb2
import google.cloud.channel.v1.products_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.type.money_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _PromotionalOrderType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PromotionalOrderTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PromotionalOrderType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    PROMOTIONAL_TYPE_UNSPECIFIED: PromotionalOrderType.ValueType = ...  # 0
    """Not used."""

    NEW_UPGRADE: PromotionalOrderType.ValueType = ...  # 1
    """Order used for new customers, trial conversions and upgrades."""

    TRANSFER: PromotionalOrderType.ValueType = ...  # 2
    """All orders for transferring an existing customer."""

    PROMOTION_SWITCH: PromotionalOrderType.ValueType = ...  # 3
    """Orders for modifying an existing customer's promotion on the same SKU."""

class PromotionalOrderType(_PromotionalOrderType, metaclass=_PromotionalOrderTypeEnumTypeWrapper):
    """Constraints type for Promotional offers."""
    pass

PROMOTIONAL_TYPE_UNSPECIFIED: PromotionalOrderType.ValueType = ...  # 0
"""Not used."""

NEW_UPGRADE: PromotionalOrderType.ValueType = ...  # 1
"""Order used for new customers, trial conversions and upgrades."""

TRANSFER: PromotionalOrderType.ValueType = ...  # 2
"""All orders for transferring an existing customer."""

PROMOTION_SWITCH: PromotionalOrderType.ValueType = ...  # 3
"""Orders for modifying an existing customer's promotion on the same SKU."""

global___PromotionalOrderType = PromotionalOrderType


class _PaymentPlan:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PaymentPlanEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PaymentPlan.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    PAYMENT_PLAN_UNSPECIFIED: PaymentPlan.ValueType = ...  # 0
    """Not used."""

    COMMITMENT: PaymentPlan.ValueType = ...  # 1
    """Commitment."""

    FLEXIBLE: PaymentPlan.ValueType = ...  # 2
    """No commitment."""

    FREE: PaymentPlan.ValueType = ...  # 3
    """Free."""

    TRIAL: PaymentPlan.ValueType = ...  # 4
    """Trial."""

    OFFLINE: PaymentPlan.ValueType = ...  # 5
    """Price and ordering not available through API."""

class PaymentPlan(_PaymentPlan, metaclass=_PaymentPlanEnumTypeWrapper):
    """Describes how the reseller will be billed."""
    pass

PAYMENT_PLAN_UNSPECIFIED: PaymentPlan.ValueType = ...  # 0
"""Not used."""

COMMITMENT: PaymentPlan.ValueType = ...  # 1
"""Commitment."""

FLEXIBLE: PaymentPlan.ValueType = ...  # 2
"""No commitment."""

FREE: PaymentPlan.ValueType = ...  # 3
"""Free."""

TRIAL: PaymentPlan.ValueType = ...  # 4
"""Trial."""

OFFLINE: PaymentPlan.ValueType = ...  # 5
"""Price and ordering not available through API."""

global___PaymentPlan = PaymentPlan


class _PaymentType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PaymentTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PaymentType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    PAYMENT_TYPE_UNSPECIFIED: PaymentType.ValueType = ...  # 0
    """Not used."""

    PREPAY: PaymentType.ValueType = ...  # 1
    """Prepay. Amount has to be paid before service is rendered."""

    POSTPAY: PaymentType.ValueType = ...  # 2
    """Postpay. Reseller is charged at the end of the Payment cycle."""

class PaymentType(_PaymentType, metaclass=_PaymentTypeEnumTypeWrapper):
    """Specifies when the payment needs to happen."""
    pass

PAYMENT_TYPE_UNSPECIFIED: PaymentType.ValueType = ...  # 0
"""Not used."""

PREPAY: PaymentType.ValueType = ...  # 1
"""Prepay. Amount has to be paid before service is rendered."""

POSTPAY: PaymentType.ValueType = ...  # 2
"""Postpay. Reseller is charged at the end of the Payment cycle."""

global___PaymentType = PaymentType


class _ResourceType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ResourceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ResourceType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    RESOURCE_TYPE_UNSPECIFIED: ResourceType.ValueType = ...  # 0
    """Not used."""

    SEAT: ResourceType.ValueType = ...  # 1
    """Seat."""

    MAU: ResourceType.ValueType = ...  # 2
    """Monthly active user."""

    GB: ResourceType.ValueType = ...  # 3
    """GB (used for storage SKUs)."""

    LICENSED_USER: ResourceType.ValueType = ...  # 4
    """Active licensed users(for Voice SKUs)."""

    MINUTES: ResourceType.ValueType = ...  # 5
    """Voice usage."""

    IAAS_USAGE: ResourceType.ValueType = ...  # 6
    """For IaaS SKUs like Google Cloud Platform, monetization is based on usage
    accrued on your billing account irrespective of the type of monetizable
    resource. This enum represents an aggregated resource/container for all
    usage SKUs on a billing account. Currently, only applicable to Google Cloud
    Platform.
    """

    SUBSCRIPTION: ResourceType.ValueType = ...  # 7
    """For Google Cloud Platform subscriptions like Anthos or SAP."""

class ResourceType(_ResourceType, metaclass=_ResourceTypeEnumTypeWrapper):
    """Represents the type for a monetizable resource(any entity on which billing
    happens). For example, this could be MINUTES for Google Voice and GB for
    Google Drive. One SKU can map to multiple monetizable resources.
    """
    pass

RESOURCE_TYPE_UNSPECIFIED: ResourceType.ValueType = ...  # 0
"""Not used."""

SEAT: ResourceType.ValueType = ...  # 1
"""Seat."""

MAU: ResourceType.ValueType = ...  # 2
"""Monthly active user."""

GB: ResourceType.ValueType = ...  # 3
"""GB (used for storage SKUs)."""

LICENSED_USER: ResourceType.ValueType = ...  # 4
"""Active licensed users(for Voice SKUs)."""

MINUTES: ResourceType.ValueType = ...  # 5
"""Voice usage."""

IAAS_USAGE: ResourceType.ValueType = ...  # 6
"""For IaaS SKUs like Google Cloud Platform, monetization is based on usage
accrued on your billing account irrespective of the type of monetizable
resource. This enum represents an aggregated resource/container for all
usage SKUs on a billing account. Currently, only applicable to Google Cloud
Platform.
"""

SUBSCRIPTION: ResourceType.ValueType = ...  # 7
"""For Google Cloud Platform subscriptions like Anthos or SAP."""

global___ResourceType = ResourceType


class _PeriodType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PeriodTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PeriodType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    PERIOD_TYPE_UNSPECIFIED: PeriodType.ValueType = ...  # 0
    """Not used."""

    DAY: PeriodType.ValueType = ...  # 1
    """Day."""

    MONTH: PeriodType.ValueType = ...  # 2
    """Month."""

    YEAR: PeriodType.ValueType = ...  # 3
    """Year."""

class PeriodType(_PeriodType, metaclass=_PeriodTypeEnumTypeWrapper):
    """Period Type."""
    pass

PERIOD_TYPE_UNSPECIFIED: PeriodType.ValueType = ...  # 0
"""Not used."""

DAY: PeriodType.ValueType = ...  # 1
"""Day."""

MONTH: PeriodType.ValueType = ...  # 2
"""Month."""

YEAR: PeriodType.ValueType = ...  # 3
"""Year."""

global___PeriodType = PeriodType


class Offer(google.protobuf.message.Message):
    """Represents an offer made to resellers for purchase.
    An offer is associated with a [Sku][google.cloud.channel.v1.Sku], has a plan for payment, a price, and
    defines the constraints for buying.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    MARKETING_INFO_FIELD_NUMBER: builtins.int
    SKU_FIELD_NUMBER: builtins.int
    PLAN_FIELD_NUMBER: builtins.int
    CONSTRAINTS_FIELD_NUMBER: builtins.int
    PRICE_BY_RESOURCES_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    PARAMETER_DEFINITIONS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Resource Name of the Offer.
    Format: accounts/{account_id}/offers/{offer_id}
    """

    @property
    def marketing_info(self) -> google.cloud.channel.v1.products_pb2.MarketingInfo:
        """Marketing information for the Offer."""
        pass
    @property
    def sku(self) -> google.cloud.channel.v1.products_pb2.Sku:
        """SKU the offer is associated with."""
        pass
    @property
    def plan(self) -> global___Plan:
        """Describes the payment plan for the Offer."""
        pass
    @property
    def constraints(self) -> global___Constraints:
        """Constraints on transacting the Offer."""
        pass
    @property
    def price_by_resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PriceByResource]:
        """Price for each monetizable resource type."""
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Start of the Offer validity time."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. End of the Offer validity time."""
        pass
    @property
    def parameter_definitions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ParameterDefinition]:
        """Parameters required to use current Offer to purchase."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        marketing_info : typing.Optional[google.cloud.channel.v1.products_pb2.MarketingInfo] = ...,
        sku : typing.Optional[google.cloud.channel.v1.products_pb2.Sku] = ...,
        plan : typing.Optional[global___Plan] = ...,
        constraints : typing.Optional[global___Constraints] = ...,
        price_by_resources : typing.Optional[typing.Iterable[global___PriceByResource]] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        parameter_definitions : typing.Optional[typing.Iterable[global___ParameterDefinition]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["constraints",b"constraints","end_time",b"end_time","marketing_info",b"marketing_info","plan",b"plan","sku",b"sku","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["constraints",b"constraints","end_time",b"end_time","marketing_info",b"marketing_info","name",b"name","parameter_definitions",b"parameter_definitions","plan",b"plan","price_by_resources",b"price_by_resources","sku",b"sku","start_time",b"start_time"]) -> None: ...
global___Offer = Offer

class ParameterDefinition(google.protobuf.message.Message):
    """Parameter's definition. Specifies what parameter is required to use the
    current Offer to purchase.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ParameterType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ParameterTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ParameterType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PARAMETER_TYPE_UNSPECIFIED: ParameterDefinition.ParameterType.ValueType = ...  # 0
        """Not used."""

        INT64: ParameterDefinition.ParameterType.ValueType = ...  # 1
        """Int64 type."""

        STRING: ParameterDefinition.ParameterType.ValueType = ...  # 2
        """String type."""

        DOUBLE: ParameterDefinition.ParameterType.ValueType = ...  # 3
        """Double type."""

    class ParameterType(_ParameterType, metaclass=_ParameterTypeEnumTypeWrapper):
        """Data type of the parameter."""
        pass

    PARAMETER_TYPE_UNSPECIFIED: ParameterDefinition.ParameterType.ValueType = ...  # 0
    """Not used."""

    INT64: ParameterDefinition.ParameterType.ValueType = ...  # 1
    """Int64 type."""

    STRING: ParameterDefinition.ParameterType.ValueType = ...  # 2
    """String type."""

    DOUBLE: ParameterDefinition.ParameterType.ValueType = ...  # 3
    """Double type."""


    NAME_FIELD_NUMBER: builtins.int
    PARAMETER_TYPE_FIELD_NUMBER: builtins.int
    MIN_VALUE_FIELD_NUMBER: builtins.int
    MAX_VALUE_FIELD_NUMBER: builtins.int
    ALLOWED_VALUES_FIELD_NUMBER: builtins.int
    OPTIONAL_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of the parameter."""

    parameter_type: global___ParameterDefinition.ParameterType.ValueType = ...
    """Data type of the parameter. Minimal value, Maximum value and allowed values
    will use specified data type here.
    """

    @property
    def min_value(self) -> google.cloud.channel.v1.common_pb2.Value:
        """Minimal value of the parameter, if applicable. Inclusive. For example,
        minimal commitment when purchasing Anthos is 0.01.
        Applicable to INT64 and DOUBLE parameter types.
        """
        pass
    @property
    def max_value(self) -> google.cloud.channel.v1.common_pb2.Value:
        """Maximum value of the parameter, if applicable. Inclusive. For example,
        maximum seats when purchasing Google Workspace Business Standard.
        Applicable to INT64 and DOUBLE parameter types.
        """
        pass
    @property
    def allowed_values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.channel.v1.common_pb2.Value]:
        """If not empty, parameter values must be drawn from this list.
        For example, [us-west1, us-west2, ...]
        Applicable to STRING parameter type.
        """
        pass
    optional: builtins.bool = ...
    """If set to true, parameter is optional to purchase this Offer."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        parameter_type : global___ParameterDefinition.ParameterType.ValueType = ...,
        min_value : typing.Optional[google.cloud.channel.v1.common_pb2.Value] = ...,
        max_value : typing.Optional[google.cloud.channel.v1.common_pb2.Value] = ...,
        allowed_values : typing.Optional[typing.Iterable[google.cloud.channel.v1.common_pb2.Value]] = ...,
        optional : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["max_value",b"max_value","min_value",b"min_value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allowed_values",b"allowed_values","max_value",b"max_value","min_value",b"min_value","name",b"name","optional",b"optional","parameter_type",b"parameter_type"]) -> None: ...
global___ParameterDefinition = ParameterDefinition

class Constraints(google.protobuf.message.Message):
    """Represents the constraints for buying the Offer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CUSTOMER_CONSTRAINTS_FIELD_NUMBER: builtins.int
    @property
    def customer_constraints(self) -> global___CustomerConstraints:
        """Represents constraints required to purchase the Offer for a customer."""
        pass
    def __init__(self,
        *,
        customer_constraints : typing.Optional[global___CustomerConstraints] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["customer_constraints",b"customer_constraints"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["customer_constraints",b"customer_constraints"]) -> None: ...
global___Constraints = Constraints

class CustomerConstraints(google.protobuf.message.Message):
    """Represents constraints required to purchase the Offer for a customer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ALLOWED_REGIONS_FIELD_NUMBER: builtins.int
    ALLOWED_CUSTOMER_TYPES_FIELD_NUMBER: builtins.int
    PROMOTIONAL_ORDER_TYPES_FIELD_NUMBER: builtins.int
    @property
    def allowed_regions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Allowed geographical regions of the customer."""
        pass
    @property
    def allowed_customer_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[google.cloud.channel.v1.common_pb2.CloudIdentityInfo.CustomerType.ValueType]:
        """Allowed Customer Type."""
        pass
    @property
    def promotional_order_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___PromotionalOrderType.ValueType]:
        """Allowed Promotional Order Type. Present for Promotional offers."""
        pass
    def __init__(self,
        *,
        allowed_regions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        allowed_customer_types : typing.Optional[typing.Iterable[google.cloud.channel.v1.common_pb2.CloudIdentityInfo.CustomerType.ValueType]] = ...,
        promotional_order_types : typing.Optional[typing.Iterable[global___PromotionalOrderType.ValueType]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allowed_customer_types",b"allowed_customer_types","allowed_regions",b"allowed_regions","promotional_order_types",b"promotional_order_types"]) -> None: ...
global___CustomerConstraints = CustomerConstraints

class Plan(google.protobuf.message.Message):
    """The payment plan for the Offer. Describes how to make a payment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PAYMENT_PLAN_FIELD_NUMBER: builtins.int
    PAYMENT_TYPE_FIELD_NUMBER: builtins.int
    PAYMENT_CYCLE_FIELD_NUMBER: builtins.int
    TRIAL_PERIOD_FIELD_NUMBER: builtins.int
    BILLING_ACCOUNT_FIELD_NUMBER: builtins.int
    payment_plan: global___PaymentPlan.ValueType = ...
    """Describes how a reseller will be billed."""

    payment_type: global___PaymentType.ValueType = ...
    """Specifies when the payment needs to happen."""

    @property
    def payment_cycle(self) -> global___Period:
        """Describes how frequently the reseller will be billed, such as
        once per month.
        """
        pass
    @property
    def trial_period(self) -> global___Period:
        """Present for Offers with a trial period.
        For trial-only Offers, a paid service needs to start before the trial
        period ends for continued service.
        For Regular Offers with a trial period, the regular pricing goes into
        effect when trial period ends, or if paid service is started before the end
        of the trial period.
        """
        pass
    billing_account: typing.Text = ...
    """Reseller Billing account to charge after an offer transaction.
    Only present for Google Cloud Platform offers.
    """

    def __init__(self,
        *,
        payment_plan : global___PaymentPlan.ValueType = ...,
        payment_type : global___PaymentType.ValueType = ...,
        payment_cycle : typing.Optional[global___Period] = ...,
        trial_period : typing.Optional[global___Period] = ...,
        billing_account : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["payment_cycle",b"payment_cycle","trial_period",b"trial_period"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["billing_account",b"billing_account","payment_cycle",b"payment_cycle","payment_plan",b"payment_plan","payment_type",b"payment_type","trial_period",b"trial_period"]) -> None: ...
global___Plan = Plan

class PriceByResource(google.protobuf.message.Message):
    """Represents price by resource type."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_TYPE_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    PRICE_PHASES_FIELD_NUMBER: builtins.int
    resource_type: global___ResourceType.ValueType = ...
    """Resource Type. Example: SEAT"""

    @property
    def price(self) -> global___Price:
        """Price of the Offer. Present if there are no price phases."""
        pass
    @property
    def price_phases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PricePhase]:
        """Specifies the price by time range."""
        pass
    def __init__(self,
        *,
        resource_type : global___ResourceType.ValueType = ...,
        price : typing.Optional[global___Price] = ...,
        price_phases : typing.Optional[typing.Iterable[global___PricePhase]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["price",b"price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["price",b"price","price_phases",b"price_phases","resource_type",b"resource_type"]) -> None: ...
global___PriceByResource = PriceByResource

class Price(google.protobuf.message.Message):
    """Represents the price of the Offer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BASE_PRICE_FIELD_NUMBER: builtins.int
    DISCOUNT_FIELD_NUMBER: builtins.int
    EFFECTIVE_PRICE_FIELD_NUMBER: builtins.int
    EXTERNAL_PRICE_URI_FIELD_NUMBER: builtins.int
    @property
    def base_price(self) -> google.type.money_pb2.Money:
        """Base price."""
        pass
    discount: builtins.float = ...
    """Discount percentage, represented as decimal.
    For example, a 20% discount will be represent as 0.2.
    """

    @property
    def effective_price(self) -> google.type.money_pb2.Money:
        """Effective Price after applying the discounts."""
        pass
    external_price_uri: typing.Text = ...
    """Link to external price list, such as link to Google Voice rate card."""

    def __init__(self,
        *,
        base_price : typing.Optional[google.type.money_pb2.Money] = ...,
        discount : builtins.float = ...,
        effective_price : typing.Optional[google.type.money_pb2.Money] = ...,
        external_price_uri : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["base_price",b"base_price","effective_price",b"effective_price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["base_price",b"base_price","discount",b"discount","effective_price",b"effective_price","external_price_uri",b"external_price_uri"]) -> None: ...
global___Price = Price

class PricePhase(google.protobuf.message.Message):
    """Specifies the price by the duration of months.
    For example, a 20% discount for the first six months, then a 10% discount
    starting on the seventh month.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PERIOD_TYPE_FIELD_NUMBER: builtins.int
    FIRST_PERIOD_FIELD_NUMBER: builtins.int
    LAST_PERIOD_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    PRICE_TIERS_FIELD_NUMBER: builtins.int
    period_type: global___PeriodType.ValueType = ...
    """Defines the phase period type."""

    first_period: builtins.int = ...
    """Defines first period for the phase."""

    last_period: builtins.int = ...
    """Defines first period for the phase."""

    @property
    def price(self) -> global___Price:
        """Price of the phase. Present if there are no price tiers."""
        pass
    @property
    def price_tiers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PriceTier]:
        """Price by the resource tiers."""
        pass
    def __init__(self,
        *,
        period_type : global___PeriodType.ValueType = ...,
        first_period : builtins.int = ...,
        last_period : builtins.int = ...,
        price : typing.Optional[global___Price] = ...,
        price_tiers : typing.Optional[typing.Iterable[global___PriceTier]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["price",b"price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["first_period",b"first_period","last_period",b"last_period","period_type",b"period_type","price",b"price","price_tiers",b"price_tiers"]) -> None: ...
global___PricePhase = PricePhase

class PriceTier(google.protobuf.message.Message):
    """Defines price at resource tier level.
    For example, an offer with following definition :

    * Tier 1: Provide 25% discount for all seats between 1 and 25.
    * Tier 2: Provide 10% discount for all seats between 26 and 100.
    * Tier 3: Provide flat 15% discount for all seats above 100.

    Each of these tiers is represented as a PriceTier.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIRST_RESOURCE_FIELD_NUMBER: builtins.int
    LAST_RESOURCE_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    first_resource: builtins.int = ...
    """First resource for which the tier price applies."""

    last_resource: builtins.int = ...
    """Last resource for which the tier price applies."""

    @property
    def price(self) -> global___Price:
        """Price of the tier."""
        pass
    def __init__(self,
        *,
        first_resource : builtins.int = ...,
        last_resource : builtins.int = ...,
        price : typing.Optional[global___Price] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["price",b"price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["first_resource",b"first_resource","last_resource",b"last_resource","price",b"price"]) -> None: ...
global___PriceTier = PriceTier

class Period(google.protobuf.message.Message):
    """Represents period in days/months/years."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DURATION_FIELD_NUMBER: builtins.int
    PERIOD_TYPE_FIELD_NUMBER: builtins.int
    duration: builtins.int = ...
    """Total duration of Period Type defined."""

    period_type: global___PeriodType.ValueType = ...
    """Period Type."""

    def __init__(self,
        *,
        duration : builtins.int = ...,
        period_type : global___PeriodType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["duration",b"duration","period_type",b"period_type"]) -> None: ...
global___Period = Period
