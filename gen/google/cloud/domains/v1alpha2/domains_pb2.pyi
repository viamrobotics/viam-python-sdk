"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.type.money_pb2
import google.type.postal_address_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _ContactPrivacy:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ContactPrivacyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ContactPrivacy.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    CONTACT_PRIVACY_UNSPECIFIED: ContactPrivacy.ValueType = ...  # 0
    """The contact privacy settings are undefined."""

    PUBLIC_CONTACT_DATA: ContactPrivacy.ValueType = ...  # 1
    """All the data from `ContactSettings` is publicly available. When setting
    this option, you must also provide a
    `PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the
    request.
    """

    PRIVATE_CONTACT_DATA: ContactPrivacy.ValueType = ...  # 2
    """None of the data from `ContactSettings` is publicly available. Instead,
    proxy contact data is published for your domain. Email sent to the proxy
    email address is forwarded to the registrant's email address. Cloud Domains
    provides this privacy proxy service at no additional cost.
    """

    REDACTED_CONTACT_DATA: ContactPrivacy.ValueType = ...  # 3
    """Some data from `ContactSettings` is publicly available. The actual
    information redacted depends on the domain. For details, see [the
    registration privacy
    article](https://support.google.com/domains/answer/3251242).
    """

class ContactPrivacy(_ContactPrivacy, metaclass=_ContactPrivacyEnumTypeWrapper):
    """Defines a set of possible contact privacy settings for a `Registration`.

    [ICANN](https://icann.org/) maintains the WHOIS database, a publicly
    accessible mapping from domain name to contact information, and requires that
    each domain name have an entry. Choose from these options to control how much
    information in your `ContactSettings` is published.
    """
    pass

CONTACT_PRIVACY_UNSPECIFIED: ContactPrivacy.ValueType = ...  # 0
"""The contact privacy settings are undefined."""

PUBLIC_CONTACT_DATA: ContactPrivacy.ValueType = ...  # 1
"""All the data from `ContactSettings` is publicly available. When setting
this option, you must also provide a
`PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT` in the `contact_notices` field of the
request.
"""

PRIVATE_CONTACT_DATA: ContactPrivacy.ValueType = ...  # 2
"""None of the data from `ContactSettings` is publicly available. Instead,
proxy contact data is published for your domain. Email sent to the proxy
email address is forwarded to the registrant's email address. Cloud Domains
provides this privacy proxy service at no additional cost.
"""

REDACTED_CONTACT_DATA: ContactPrivacy.ValueType = ...  # 3
"""Some data from `ContactSettings` is publicly available. The actual
information redacted depends on the domain. For details, see [the
registration privacy
article](https://support.google.com/domains/answer/3251242).
"""

global___ContactPrivacy = ContactPrivacy


class _DomainNotice:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DomainNoticeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DomainNotice.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    DOMAIN_NOTICE_UNSPECIFIED: DomainNotice.ValueType = ...  # 0
    """The notice is undefined."""

    HSTS_PRELOADED: DomainNotice.ValueType = ...  # 1
    """Indicates that the domain is preloaded on the HTTP Strict Transport
    Security list in browsers. Serving a website on such domain requires
    an SSL certificate. For details, see
    [how to get an SSL
    certificate](https://support.google.com/domains/answer/7638036).
    """

class DomainNotice(_DomainNotice, metaclass=_DomainNoticeEnumTypeWrapper):
    """Notices about special properties of certain domains."""
    pass

DOMAIN_NOTICE_UNSPECIFIED: DomainNotice.ValueType = ...  # 0
"""The notice is undefined."""

HSTS_PRELOADED: DomainNotice.ValueType = ...  # 1
"""Indicates that the domain is preloaded on the HTTP Strict Transport
Security list in browsers. Serving a website on such domain requires
an SSL certificate. For details, see
[how to get an SSL
certificate](https://support.google.com/domains/answer/7638036).
"""

global___DomainNotice = DomainNotice


class _ContactNotice:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ContactNoticeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ContactNotice.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    CONTACT_NOTICE_UNSPECIFIED: ContactNotice.ValueType = ...  # 0
    """The notice is undefined."""

    PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT: ContactNotice.ValueType = ...  # 1
    """Required when setting the `privacy` field of `ContactSettings` to
    `PUBLIC_CONTACT_DATA`, which exposes contact data publicly.
    """

class ContactNotice(_ContactNotice, metaclass=_ContactNoticeEnumTypeWrapper):
    """Notices related to contact information."""
    pass

CONTACT_NOTICE_UNSPECIFIED: ContactNotice.ValueType = ...  # 0
"""The notice is undefined."""

PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT: ContactNotice.ValueType = ...  # 1
"""Required when setting the `privacy` field of `ContactSettings` to
`PUBLIC_CONTACT_DATA`, which exposes contact data publicly.
"""

global___ContactNotice = ContactNotice


class _TransferLockState:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TransferLockStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TransferLockState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TRANSFER_LOCK_STATE_UNSPECIFIED: TransferLockState.ValueType = ...  # 0
    """The state is unspecified."""

    UNLOCKED: TransferLockState.ValueType = ...  # 1
    """The domain is unlocked and can be transferred to another registrar."""

    LOCKED: TransferLockState.ValueType = ...  # 2
    """The domain is locked and cannot be transferred to another registrar."""

class TransferLockState(_TransferLockState, metaclass=_TransferLockStateEnumTypeWrapper):
    """Possible states of a `Registration`'s transfer lock."""
    pass

TRANSFER_LOCK_STATE_UNSPECIFIED: TransferLockState.ValueType = ...  # 0
"""The state is unspecified."""

UNLOCKED: TransferLockState.ValueType = ...  # 1
"""The domain is unlocked and can be transferred to another registrar."""

LOCKED: TransferLockState.ValueType = ...  # 2
"""The domain is locked and cannot be transferred to another registrar."""

global___TransferLockState = TransferLockState


class Registration(google.protobuf.message.Message):
    """The `Registration` resource facilitates managing and configuring domain name
    registrations.

    There are several ways to create a new `Registration` resource:

    To create a new `Registration` resource, find a suitable domain name by
    calling the `SearchDomains` method with a query to see available domain name
    options. After choosing a name, call `RetrieveRegisterParameters` to
    ensure availability and obtain information like pricing, which is needed to
    build a call to `RegisterDomain`.

    Another way to create a new `Registration` is to transfer an existing
    domain from another registrar. First, go to the current registrar to unlock
    the domain for transfer and retrieve the domain's transfer authorization
    code. Then call `RetrieveTransferParameters` to confirm that the domain is
    unlocked and to get values needed to build a call to `TransferDomain`.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Registration.State.ValueType = ...  # 0
        """The state is undefined."""

        REGISTRATION_PENDING: Registration.State.ValueType = ...  # 1
        """The domain is being registered."""

        REGISTRATION_FAILED: Registration.State.ValueType = ...  # 2
        """The domain registration failed. You can delete resources in this state
        to allow registration to be retried.
        """

        TRANSFER_PENDING: Registration.State.ValueType = ...  # 3
        """The domain is being transferred from another registrar to Cloud Domains."""

        TRANSFER_FAILED: Registration.State.ValueType = ...  # 4
        """The attempt to transfer the domain from another registrar to
        Cloud Domains failed. You can delete resources in this state and retry
        the transfer.
        """

        ACTIVE: Registration.State.ValueType = ...  # 6
        """The domain is registered and operational. The domain renews automatically
        as long as it remains in this state.
        """

        SUSPENDED: Registration.State.ValueType = ...  # 7
        """The domain is suspended and inoperative. For more details, see the
        `issues` field.
        """

        EXPORTED: Registration.State.ValueType = ...  # 8
        """The domain is no longer managed with Cloud Domains. It may have been
        transferred to another registrar or exported for management in
        [Google Domains](https://domains.google/). You can no longer update it
        with this API, and information shown about it may be stale. Domains in
        this state are not automatically renewed by Cloud Domains.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Possible states of a `Registration`."""
        pass

    STATE_UNSPECIFIED: Registration.State.ValueType = ...  # 0
    """The state is undefined."""

    REGISTRATION_PENDING: Registration.State.ValueType = ...  # 1
    """The domain is being registered."""

    REGISTRATION_FAILED: Registration.State.ValueType = ...  # 2
    """The domain registration failed. You can delete resources in this state
    to allow registration to be retried.
    """

    TRANSFER_PENDING: Registration.State.ValueType = ...  # 3
    """The domain is being transferred from another registrar to Cloud Domains."""

    TRANSFER_FAILED: Registration.State.ValueType = ...  # 4
    """The attempt to transfer the domain from another registrar to
    Cloud Domains failed. You can delete resources in this state and retry
    the transfer.
    """

    ACTIVE: Registration.State.ValueType = ...  # 6
    """The domain is registered and operational. The domain renews automatically
    as long as it remains in this state.
    """

    SUSPENDED: Registration.State.ValueType = ...  # 7
    """The domain is suspended and inoperative. For more details, see the
    `issues` field.
    """

    EXPORTED: Registration.State.ValueType = ...  # 8
    """The domain is no longer managed with Cloud Domains. It may have been
    transferred to another registrar or exported for management in
    [Google Domains](https://domains.google/). You can no longer update it
    with this API, and information shown about it may be stale. Domains in
    this state are not automatically renewed by Cloud Domains.
    """


    class _Issue:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _IssueEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Issue.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ISSUE_UNSPECIFIED: Registration.Issue.ValueType = ...  # 0
        """The issue is undefined."""

        CONTACT_SUPPORT: Registration.Issue.ValueType = ...  # 1
        """Contact the Cloud Support team to resolve a problem with this domain."""

        UNVERIFIED_EMAIL: Registration.Issue.ValueType = ...  # 2
        """[ICANN](https://icann.org/) requires verification of the email address
        in the `Registration`'s `contact_settings.registrant_contact` field. To
        verify the email address, follow the
        instructions in the email the `registrant_contact` receives following
        registration. If you do not complete email verification within
        15 days of registration, the domain is suspended. To resend the
        verification email, call ConfigureContactSettings and provide the current
        `registrant_contact.email`.
        """

    class Issue(_Issue, metaclass=_IssueEnumTypeWrapper):
        """Possible issues with a `Registration` that require attention."""
        pass

    ISSUE_UNSPECIFIED: Registration.Issue.ValueType = ...  # 0
    """The issue is undefined."""

    CONTACT_SUPPORT: Registration.Issue.ValueType = ...  # 1
    """Contact the Cloud Support team to resolve a problem with this domain."""

    UNVERIFIED_EMAIL: Registration.Issue.ValueType = ...  # 2
    """[ICANN](https://icann.org/) requires verification of the email address
    in the `Registration`'s `contact_settings.registrant_contact` field. To
    verify the email address, follow the
    instructions in the email the `registrant_contact` receives following
    registration. If you do not complete email verification within
    15 days of registration, the domain is suspended. To resend the
    verification email, call ConfigureContactSettings and provide the current
    `registrant_contact.email`.
    """


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DOMAIN_NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    EXPIRE_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    ISSUES_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    MANAGEMENT_SETTINGS_FIELD_NUMBER: builtins.int
    DNS_SETTINGS_FIELD_NUMBER: builtins.int
    CONTACT_SETTINGS_FIELD_NUMBER: builtins.int
    PENDING_CONTACT_SETTINGS_FIELD_NUMBER: builtins.int
    SUPPORTED_PRIVACY_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. Name of the `Registration` resource, in the format
    `projects/*/locations/*/registrations/<domain_name>`.
    """

    domain_name: typing.Text = ...
    """Required. Immutable. The domain name. Unicode domain names must be expressed in Punycode format."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The creation timestamp of the `Registration` resource."""
        pass
    @property
    def expire_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The expiration timestamp of the `Registration`."""
        pass
    state: global___Registration.State.ValueType = ...
    """Output only. The state of the `Registration`"""

    @property
    def issues(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Registration.Issue.ValueType]:
        """Output only. The set of issues with the `Registration` that require attention."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Set of labels associated with the `Registration`."""
        pass
    @property
    def management_settings(self) -> global___ManagementSettings:
        """Settings for management of the `Registration`, including renewal, billing,
        and transfer. You cannot update these with the `UpdateRegistration`
        method. To update these settings, use the `ConfigureManagementSettings`
        method.
        """
        pass
    @property
    def dns_settings(self) -> global___DnsSettings:
        """Settings controlling the DNS configuration of the `Registration`. You
        cannot update these with the `UpdateRegistration` method. To update these
        settings, use the `ConfigureDnsSettings` method.
        """
        pass
    @property
    def contact_settings(self) -> global___ContactSettings:
        """Required. Settings for contact information linked to the `Registration`. You cannot
        update these with the `UpdateRegistration` method. To update these
        settings, use the `ConfigureContactSettings` method.
        """
        pass
    @property
    def pending_contact_settings(self) -> global___ContactSettings:
        """Output only. Pending contact settings for the `Registration`. Updates to the
        `contact_settings` field that change its `registrant_contact` or `privacy`
        fields require email confirmation by the `registrant_contact`
        before taking effect. This field is set only if there are pending updates
        to the `contact_settings` that have not been confirmed. To confirm the
        changes, the `registrant_contact` must follow the instructions in the
        email they receive.
        """
        pass
    @property
    def supported_privacy(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ContactPrivacy.ValueType]:
        """Output only. Set of options for the `contact_settings.privacy` field that this
        `Registration` supports.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        domain_name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        expire_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___Registration.State.ValueType = ...,
        issues : typing.Optional[typing.Iterable[global___Registration.Issue.ValueType]] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        management_settings : typing.Optional[global___ManagementSettings] = ...,
        dns_settings : typing.Optional[global___DnsSettings] = ...,
        contact_settings : typing.Optional[global___ContactSettings] = ...,
        pending_contact_settings : typing.Optional[global___ContactSettings] = ...,
        supported_privacy : typing.Optional[typing.Iterable[global___ContactPrivacy.ValueType]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["contact_settings",b"contact_settings","create_time",b"create_time","dns_settings",b"dns_settings","expire_time",b"expire_time","management_settings",b"management_settings","pending_contact_settings",b"pending_contact_settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["contact_settings",b"contact_settings","create_time",b"create_time","dns_settings",b"dns_settings","domain_name",b"domain_name","expire_time",b"expire_time","issues",b"issues","labels",b"labels","management_settings",b"management_settings","name",b"name","pending_contact_settings",b"pending_contact_settings","state",b"state","supported_privacy",b"supported_privacy"]) -> None: ...
global___Registration = Registration

class ManagementSettings(google.protobuf.message.Message):
    """Defines renewal, billing, and transfer settings for a `Registration`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RenewalMethod:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RenewalMethodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RenewalMethod.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        RENEWAL_METHOD_UNSPECIFIED: ManagementSettings.RenewalMethod.ValueType = ...  # 0
        """The renewal method is undefined."""

        AUTOMATIC_RENEWAL: ManagementSettings.RenewalMethod.ValueType = ...  # 1
        """The domain is automatically renewed each year .

        To disable automatic renewals, delete the resource by calling
        `DeleteRegistration` or export it by calling `ExportRegistration`.
        """

        MANUAL_RENEWAL: ManagementSettings.RenewalMethod.ValueType = ...  # 2
        """The domain must be explicitly renewed each year before its
        `expire_time`. This option is only available when the `Registration`
        is in state `EXPORTED`.

        To manage the domain's current billing and
        renewal settings, go to [Google Domains](https://domains.google/).
        """

    class RenewalMethod(_RenewalMethod, metaclass=_RenewalMethodEnumTypeWrapper):
        """Defines how the `Registration` is renewed."""
        pass

    RENEWAL_METHOD_UNSPECIFIED: ManagementSettings.RenewalMethod.ValueType = ...  # 0
    """The renewal method is undefined."""

    AUTOMATIC_RENEWAL: ManagementSettings.RenewalMethod.ValueType = ...  # 1
    """The domain is automatically renewed each year .

    To disable automatic renewals, delete the resource by calling
    `DeleteRegistration` or export it by calling `ExportRegistration`.
    """

    MANUAL_RENEWAL: ManagementSettings.RenewalMethod.ValueType = ...  # 2
    """The domain must be explicitly renewed each year before its
    `expire_time`. This option is only available when the `Registration`
    is in state `EXPORTED`.

    To manage the domain's current billing and
    renewal settings, go to [Google Domains](https://domains.google/).
    """


    RENEWAL_METHOD_FIELD_NUMBER: builtins.int
    TRANSFER_LOCK_STATE_FIELD_NUMBER: builtins.int
    renewal_method: global___ManagementSettings.RenewalMethod.ValueType = ...
    """Output only. The renewal method for this `Registration`."""

    transfer_lock_state: global___TransferLockState.ValueType = ...
    """Controls whether the domain can be transferred to another registrar."""

    def __init__(self,
        *,
        renewal_method : global___ManagementSettings.RenewalMethod.ValueType = ...,
        transfer_lock_state : global___TransferLockState.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["renewal_method",b"renewal_method","transfer_lock_state",b"transfer_lock_state"]) -> None: ...
global___ManagementSettings = ManagementSettings

class DnsSettings(google.protobuf.message.Message):
    """Defines the DNS configuration of a `Registration`, including name servers,
    DNSSEC, and glue records.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DsState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DsStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DsState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DS_STATE_UNSPECIFIED: DnsSettings.DsState.ValueType = ...  # 0
        """DS state is unspecified."""

        DS_RECORDS_UNPUBLISHED: DnsSettings.DsState.ValueType = ...  # 1
        """DNSSEC is disabled for this domain. No DS records for this domain are
        published in the parent DNS zone.
        """

        DS_RECORDS_PUBLISHED: DnsSettings.DsState.ValueType = ...  # 2
        """DNSSEC is enabled for this domain. Appropriate DS records for this domain
        are published in the parent DNS zone. This option is valid only if the
        DNS zone referenced in the `Registration`'s `dns_provider` field is
        already DNSSEC-signed.
        """

    class DsState(_DsState, metaclass=_DsStateEnumTypeWrapper):
        """The publication state of DS records for a `Registration`."""
        pass

    DS_STATE_UNSPECIFIED: DnsSettings.DsState.ValueType = ...  # 0
    """DS state is unspecified."""

    DS_RECORDS_UNPUBLISHED: DnsSettings.DsState.ValueType = ...  # 1
    """DNSSEC is disabled for this domain. No DS records for this domain are
    published in the parent DNS zone.
    """

    DS_RECORDS_PUBLISHED: DnsSettings.DsState.ValueType = ...  # 2
    """DNSSEC is enabled for this domain. Appropriate DS records for this domain
    are published in the parent DNS zone. This option is valid only if the
    DNS zone referenced in the `Registration`'s `dns_provider` field is
    already DNSSEC-signed.
    """


    class CustomDns(google.protobuf.message.Message):
        """Configuration for an arbitrary DNS provider."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_SERVERS_FIELD_NUMBER: builtins.int
        DS_RECORDS_FIELD_NUMBER: builtins.int
        @property
        def name_servers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Required. A list of name servers that store the DNS zone for this domain. Each name
            server is a domain name, with Unicode domain names expressed in
            Punycode format.
            """
            pass
        @property
        def ds_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsSettings.DsRecord]:
            """The list of DS records for this domain, which are used to enable DNSSEC.
            The domain's DNS provider can provide the values to set here. If this
            field is empty, DNSSEC is disabled.
            """
            pass
        def __init__(self,
            *,
            name_servers : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ds_records : typing.Optional[typing.Iterable[global___DnsSettings.DsRecord]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ds_records",b"ds_records","name_servers",b"name_servers"]) -> None: ...

    class GoogleDomainsDns(google.protobuf.message.Message):
        """Configuration for using the free DNS zone provided by Google Domains as a
        `Registration`'s `dns_provider`. You cannot configure the DNS zone itself
        using the API. To configure the DNS zone, go to
        [Google Domains](https://domains.google/).
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_SERVERS_FIELD_NUMBER: builtins.int
        DS_STATE_FIELD_NUMBER: builtins.int
        DS_RECORDS_FIELD_NUMBER: builtins.int
        @property
        def name_servers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Output only. A list of name servers that store the DNS zone for this domain. Each name
            server is a domain name, with Unicode domain names expressed in
            Punycode format. This field is automatically populated with the name
            servers assigned to the Google Domains DNS zone.
            """
            pass
        ds_state: global___DnsSettings.DsState.ValueType = ...
        """Required. The state of DS records for this domain. Used to enable or disable
        automatic DNSSEC.
        """

        @property
        def ds_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsSettings.DsRecord]:
            """Output only. The list of DS records published for this domain. The list is
            automatically populated when `ds_state` is `DS_RECORDS_PUBLISHED`,
            otherwise it remains empty.
            """
            pass
        def __init__(self,
            *,
            name_servers : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ds_state : global___DnsSettings.DsState.ValueType = ...,
            ds_records : typing.Optional[typing.Iterable[global___DnsSettings.DsRecord]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ds_records",b"ds_records","ds_state",b"ds_state","name_servers",b"name_servers"]) -> None: ...

    class DsRecord(google.protobuf.message.Message):
        """Defines a Delegation Signer (DS) record, which is needed to enable DNSSEC
        for a domain. It contains a digest (hash) of a DNSKEY record that must be
        present in the domain's DNS zone.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Algorithm:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _AlgorithmEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Algorithm.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            ALGORITHM_UNSPECIFIED: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 0
            """The algorithm is unspecified."""

            RSAMD5: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 1
            """RSA/MD5. Cannot be used for new deployments."""

            DH: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 2
            """Diffie-Hellman. Cannot be used for new deployments."""

            DSA: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 3
            """DSA/SHA1. Not recommended for new deployments."""

            ECC: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 4
            """ECC. Not recommended for new deployments."""

            RSASHA1: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 5
            """RSA/SHA-1. Not recommended for new deployments."""

            DSANSEC3SHA1: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 6
            """DSA-NSEC3-SHA1. Not recommended for new deployments."""

            RSASHA1NSEC3SHA1: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 7
            """RSA/SHA1-NSEC3-SHA1. Not recommended for new deployments."""

            RSASHA256: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 8
            """RSA/SHA-256."""

            RSASHA512: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 10
            """RSA/SHA-512."""

            ECCGOST: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 12
            """GOST R 34.10-2001."""

            ECDSAP256SHA256: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 13
            """ECDSA Curve P-256 with SHA-256."""

            ECDSAP384SHA384: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 14
            """ECDSA Curve P-384 with SHA-384."""

            ED25519: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 15
            """Ed25519."""

            ED448: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 16
            """Ed448."""

            INDIRECT: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 252
            """Reserved for Indirect Keys. Cannot be used for new deployments."""

            PRIVATEDNS: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 253
            """Private algorithm. Cannot be used for new deployments."""

            PRIVATEOID: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 254
            """Private algorithm OID. Cannot be used for new deployments."""

        class Algorithm(_Algorithm, metaclass=_AlgorithmEnumTypeWrapper):
            """List of algorithms used to create a DNSKEY. Certain
            algorithms are not supported for particular domains.
            """
            pass

        ALGORITHM_UNSPECIFIED: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 0
        """The algorithm is unspecified."""

        RSAMD5: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 1
        """RSA/MD5. Cannot be used for new deployments."""

        DH: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 2
        """Diffie-Hellman. Cannot be used for new deployments."""

        DSA: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 3
        """DSA/SHA1. Not recommended for new deployments."""

        ECC: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 4
        """ECC. Not recommended for new deployments."""

        RSASHA1: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 5
        """RSA/SHA-1. Not recommended for new deployments."""

        DSANSEC3SHA1: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 6
        """DSA-NSEC3-SHA1. Not recommended for new deployments."""

        RSASHA1NSEC3SHA1: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 7
        """RSA/SHA1-NSEC3-SHA1. Not recommended for new deployments."""

        RSASHA256: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 8
        """RSA/SHA-256."""

        RSASHA512: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 10
        """RSA/SHA-512."""

        ECCGOST: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 12
        """GOST R 34.10-2001."""

        ECDSAP256SHA256: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 13
        """ECDSA Curve P-256 with SHA-256."""

        ECDSAP384SHA384: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 14
        """ECDSA Curve P-384 with SHA-384."""

        ED25519: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 15
        """Ed25519."""

        ED448: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 16
        """Ed448."""

        INDIRECT: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 252
        """Reserved for Indirect Keys. Cannot be used for new deployments."""

        PRIVATEDNS: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 253
        """Private algorithm. Cannot be used for new deployments."""

        PRIVATEOID: DnsSettings.DsRecord.Algorithm.ValueType = ...  # 254
        """Private algorithm OID. Cannot be used for new deployments."""


        class _DigestType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _DigestTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DigestType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            DIGEST_TYPE_UNSPECIFIED: DnsSettings.DsRecord.DigestType.ValueType = ...  # 0
            """The DigestType is unspecified."""

            SHA1: DnsSettings.DsRecord.DigestType.ValueType = ...  # 1
            """SHA-1. Not recommended for new deployments."""

            SHA256: DnsSettings.DsRecord.DigestType.ValueType = ...  # 2
            """SHA-256."""

            GOST3411: DnsSettings.DsRecord.DigestType.ValueType = ...  # 3
            """GOST R 34.11-94."""

            SHA384: DnsSettings.DsRecord.DigestType.ValueType = ...  # 4
            """SHA-384."""

        class DigestType(_DigestType, metaclass=_DigestTypeEnumTypeWrapper):
            """List of hash functions that may have been used to generate a digest of a
            DNSKEY.
            """
            pass

        DIGEST_TYPE_UNSPECIFIED: DnsSettings.DsRecord.DigestType.ValueType = ...  # 0
        """The DigestType is unspecified."""

        SHA1: DnsSettings.DsRecord.DigestType.ValueType = ...  # 1
        """SHA-1. Not recommended for new deployments."""

        SHA256: DnsSettings.DsRecord.DigestType.ValueType = ...  # 2
        """SHA-256."""

        GOST3411: DnsSettings.DsRecord.DigestType.ValueType = ...  # 3
        """GOST R 34.11-94."""

        SHA384: DnsSettings.DsRecord.DigestType.ValueType = ...  # 4
        """SHA-384."""


        KEY_TAG_FIELD_NUMBER: builtins.int
        ALGORITHM_FIELD_NUMBER: builtins.int
        DIGEST_TYPE_FIELD_NUMBER: builtins.int
        DIGEST_FIELD_NUMBER: builtins.int
        key_tag: builtins.int = ...
        """The key tag of the record. Must be set in range 0 -- 65535."""

        algorithm: global___DnsSettings.DsRecord.Algorithm.ValueType = ...
        """The algorithm used to generate the referenced DNSKEY."""

        digest_type: global___DnsSettings.DsRecord.DigestType.ValueType = ...
        """The hash function used to generate the digest of the referenced DNSKEY."""

        digest: typing.Text = ...
        """The digest generated from the referenced DNSKEY."""

        def __init__(self,
            *,
            key_tag : builtins.int = ...,
            algorithm : global___DnsSettings.DsRecord.Algorithm.ValueType = ...,
            digest_type : global___DnsSettings.DsRecord.DigestType.ValueType = ...,
            digest : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["algorithm",b"algorithm","digest",b"digest","digest_type",b"digest_type","key_tag",b"key_tag"]) -> None: ...

    class GlueRecord(google.protobuf.message.Message):
        """Defines a host on your domain that is a DNS name server for your domain
        and/or other domains. Glue records are a way of making the IP address of a
        name server known, even when it serves DNS queries for its parent domain.
        For example, when `ns.example.com` is a name server for `example.com`, the
        host `ns.example.com` must have a glue record to break the circular DNS
        reference.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        HOST_NAME_FIELD_NUMBER: builtins.int
        IPV4_ADDRESSES_FIELD_NUMBER: builtins.int
        IPV6_ADDRESSES_FIELD_NUMBER: builtins.int
        host_name: typing.Text = ...
        """Required. Domain name of the host in Punycode format."""

        @property
        def ipv4_addresses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """List of IPv4 addresses corresponding to this host in the standard decimal
            format (e.g. `198.51.100.1`). At least one of `ipv4_address` and
            `ipv6_address` must be set.
            """
            pass
        @property
        def ipv6_addresses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """List of IPv6 addresses corresponding to this host in the standard
            hexadecimal format (e.g. `2001:db8::`). At least one of
            `ipv4_address` and `ipv6_address` must be set.
            """
            pass
        def __init__(self,
            *,
            host_name : typing.Text = ...,
            ipv4_addresses : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ipv6_addresses : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["host_name",b"host_name","ipv4_addresses",b"ipv4_addresses","ipv6_addresses",b"ipv6_addresses"]) -> None: ...

    CUSTOM_DNS_FIELD_NUMBER: builtins.int
    GOOGLE_DOMAINS_DNS_FIELD_NUMBER: builtins.int
    GLUE_RECORDS_FIELD_NUMBER: builtins.int
    @property
    def custom_dns(self) -> global___DnsSettings.CustomDns:
        """An arbitrary DNS provider identified by its name servers."""
        pass
    @property
    def google_domains_dns(self) -> global___DnsSettings.GoogleDomainsDns:
        """The free DNS zone provided by
        [Google Domains](https://domains.google/).
        """
        pass
    @property
    def glue_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DnsSettings.GlueRecord]:
        """The list of glue records for this `Registration`. Commonly empty."""
        pass
    def __init__(self,
        *,
        custom_dns : typing.Optional[global___DnsSettings.CustomDns] = ...,
        google_domains_dns : typing.Optional[global___DnsSettings.GoogleDomainsDns] = ...,
        glue_records : typing.Optional[typing.Iterable[global___DnsSettings.GlueRecord]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["custom_dns",b"custom_dns","dns_provider",b"dns_provider","google_domains_dns",b"google_domains_dns"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["custom_dns",b"custom_dns","dns_provider",b"dns_provider","glue_records",b"glue_records","google_domains_dns",b"google_domains_dns"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["dns_provider",b"dns_provider"]) -> typing.Optional[typing_extensions.Literal["custom_dns","google_domains_dns"]]: ...
global___DnsSettings = DnsSettings

class ContactSettings(google.protobuf.message.Message):
    """Defines the contact information associated with a `Registration`.

    [ICANN](https://icann.org/) requires all domain names to have associated
    contact information. The `registrant_contact` is considered the
    domain's legal owner, and often the other contacts are identical.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Contact(google.protobuf.message.Message):
        """Details required for a contact associated with a `Registration`."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        POSTAL_ADDRESS_FIELD_NUMBER: builtins.int
        EMAIL_FIELD_NUMBER: builtins.int
        PHONE_NUMBER_FIELD_NUMBER: builtins.int
        FAX_NUMBER_FIELD_NUMBER: builtins.int
        @property
        def postal_address(self) -> google.type.postal_address_pb2.PostalAddress:
            """Required. Postal address of the contact."""
            pass
        email: typing.Text = ...
        """Required. Email address of the contact."""

        phone_number: typing.Text = ...
        """Required. Phone number of the contact in international format. For example,
        `"+1-800-555-0123"`.
        """

        fax_number: typing.Text = ...
        """Fax number of the contact in international format. For example,
        `"+1-800-555-0123"`.
        """

        def __init__(self,
            *,
            postal_address : typing.Optional[google.type.postal_address_pb2.PostalAddress] = ...,
            email : typing.Text = ...,
            phone_number : typing.Text = ...,
            fax_number : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["postal_address",b"postal_address"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["email",b"email","fax_number",b"fax_number","phone_number",b"phone_number","postal_address",b"postal_address"]) -> None: ...

    PRIVACY_FIELD_NUMBER: builtins.int
    REGISTRANT_CONTACT_FIELD_NUMBER: builtins.int
    ADMIN_CONTACT_FIELD_NUMBER: builtins.int
    TECHNICAL_CONTACT_FIELD_NUMBER: builtins.int
    privacy: global___ContactPrivacy.ValueType = ...
    """Required. Privacy setting for the contacts associated with the `Registration`."""

    @property
    def registrant_contact(self) -> global___ContactSettings.Contact:
        """Required. The registrant contact for the `Registration`.

        *Caution: Anyone with access to this email address, phone number,
        and/or postal address can take control of the domain.*

        *Warning: For new `Registration`s, the registrant receives an email
        confirmation that they must complete within 15 days to avoid domain
        suspension.*
        """
        pass
    @property
    def admin_contact(self) -> global___ContactSettings.Contact:
        """Required. The administrative contact for the `Registration`."""
        pass
    @property
    def technical_contact(self) -> global___ContactSettings.Contact:
        """Required. The technical contact for the `Registration`."""
        pass
    def __init__(self,
        *,
        privacy : global___ContactPrivacy.ValueType = ...,
        registrant_contact : typing.Optional[global___ContactSettings.Contact] = ...,
        admin_contact : typing.Optional[global___ContactSettings.Contact] = ...,
        technical_contact : typing.Optional[global___ContactSettings.Contact] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["admin_contact",b"admin_contact","registrant_contact",b"registrant_contact","technical_contact",b"technical_contact"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["admin_contact",b"admin_contact","privacy",b"privacy","registrant_contact",b"registrant_contact","technical_contact",b"technical_contact"]) -> None: ...
global___ContactSettings = ContactSettings

class SearchDomainsRequest(google.protobuf.message.Message):
    """Request for the `SearchDomains` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    QUERY_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    query: typing.Text = ...
    """Required. String used to search for available domain names."""

    location: typing.Text = ...
    """Required. The location. Must be in the format `projects/*/locations/*`."""

    def __init__(self,
        *,
        query : typing.Text = ...,
        location : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["location",b"location","query",b"query"]) -> None: ...
global___SearchDomainsRequest = SearchDomainsRequest

class SearchDomainsResponse(google.protobuf.message.Message):
    """Response for the `SearchDomains` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REGISTER_PARAMETERS_FIELD_NUMBER: builtins.int
    @property
    def register_parameters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RegisterParameters]:
        """Results of the domain name search."""
        pass
    def __init__(self,
        *,
        register_parameters : typing.Optional[typing.Iterable[global___RegisterParameters]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["register_parameters",b"register_parameters"]) -> None: ...
global___SearchDomainsResponse = SearchDomainsResponse

class RetrieveRegisterParametersRequest(google.protobuf.message.Message):
    """Request for the `RetrieveRegisterParameters` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DOMAIN_NAME_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    domain_name: typing.Text = ...
    """Required. The domain name. Unicode domain names must be expressed in Punycode format."""

    location: typing.Text = ...
    """Required. The location. Must be in the format `projects/*/locations/*`."""

    def __init__(self,
        *,
        domain_name : typing.Text = ...,
        location : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["domain_name",b"domain_name","location",b"location"]) -> None: ...
global___RetrieveRegisterParametersRequest = RetrieveRegisterParametersRequest

class RetrieveRegisterParametersResponse(google.protobuf.message.Message):
    """Response for the `RetrieveRegisterParameters` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REGISTER_PARAMETERS_FIELD_NUMBER: builtins.int
    @property
    def register_parameters(self) -> global___RegisterParameters:
        """Parameters to use when calling the `RegisterDomain` method."""
        pass
    def __init__(self,
        *,
        register_parameters : typing.Optional[global___RegisterParameters] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["register_parameters",b"register_parameters"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["register_parameters",b"register_parameters"]) -> None: ...
global___RetrieveRegisterParametersResponse = RetrieveRegisterParametersResponse

class RegisterDomainRequest(google.protobuf.message.Message):
    """Request for the `RegisterDomain` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    REGISTRATION_FIELD_NUMBER: builtins.int
    DOMAIN_NOTICES_FIELD_NUMBER: builtins.int
    CONTACT_NOTICES_FIELD_NUMBER: builtins.int
    YEARLY_PRICE_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the `Registration`. Must be in the
    format `projects/*/locations/*`.
    """

    @property
    def registration(self) -> global___Registration:
        """Required. The complete `Registration` resource to be created."""
        pass
    @property
    def domain_notices(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___DomainNotice.ValueType]:
        """The list of domain notices that you acknowledge. Call
        `RetrieveRegisterParameters` to see the notices that need acknowledgement.
        """
        pass
    @property
    def contact_notices(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ContactNotice.ValueType]:
        """The list of contact notices that the caller acknowledges. The notices
        needed here depend on the values specified in
        `registration.contact_settings`.
        """
        pass
    @property
    def yearly_price(self) -> google.type.money_pb2.Money:
        """Required. Yearly price to register or renew the domain.
        The value that should be put here can be obtained from
        RetrieveRegisterParameters or SearchDomains calls.
        """
        pass
    validate_only: builtins.bool = ...
    """When true, only validation is performed, without actually registering
    the domain. Follows:
    https://cloud.google.com/apis/design/design_patterns#request_validation
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        registration : typing.Optional[global___Registration] = ...,
        domain_notices : typing.Optional[typing.Iterable[global___DomainNotice.ValueType]] = ...,
        contact_notices : typing.Optional[typing.Iterable[global___ContactNotice.ValueType]] = ...,
        yearly_price : typing.Optional[google.type.money_pb2.Money] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["registration",b"registration","yearly_price",b"yearly_price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["contact_notices",b"contact_notices","domain_notices",b"domain_notices","parent",b"parent","registration",b"registration","validate_only",b"validate_only","yearly_price",b"yearly_price"]) -> None: ...
global___RegisterDomainRequest = RegisterDomainRequest

class RetrieveTransferParametersRequest(google.protobuf.message.Message):
    """Request for the `RetrieveTransferParameters` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DOMAIN_NAME_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    domain_name: typing.Text = ...
    """Required. The domain name. Unicode domain names must be expressed in Punycode format."""

    location: typing.Text = ...
    """Required. The location. Must be in the format `projects/*/locations/*`."""

    def __init__(self,
        *,
        domain_name : typing.Text = ...,
        location : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["domain_name",b"domain_name","location",b"location"]) -> None: ...
global___RetrieveTransferParametersRequest = RetrieveTransferParametersRequest

class RetrieveTransferParametersResponse(google.protobuf.message.Message):
    """Response for the `RetrieveTransferParameters` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TRANSFER_PARAMETERS_FIELD_NUMBER: builtins.int
    @property
    def transfer_parameters(self) -> global___TransferParameters:
        """Parameters to use when calling the `TransferDomain` method."""
        pass
    def __init__(self,
        *,
        transfer_parameters : typing.Optional[global___TransferParameters] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["transfer_parameters",b"transfer_parameters"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["transfer_parameters",b"transfer_parameters"]) -> None: ...
global___RetrieveTransferParametersResponse = RetrieveTransferParametersResponse

class TransferDomainRequest(google.protobuf.message.Message):
    """Request for the `TransferDomain` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    REGISTRATION_FIELD_NUMBER: builtins.int
    CONTACT_NOTICES_FIELD_NUMBER: builtins.int
    YEARLY_PRICE_FIELD_NUMBER: builtins.int
    AUTHORIZATION_CODE_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the `Registration`. Must be in the
    format `projects/*/locations/*`.
    """

    @property
    def registration(self) -> global___Registration:
        """Required. The complete `Registration` resource to be created.

        You can leave `registration.dns_settings` unset to import the
        domain's current DNS configuration from its current registrar. Use this
        option only if you are sure that the domain's current DNS service
        does not cease upon transfer, as is often the case for DNS services
        provided for free by the registrar.
        """
        pass
    @property
    def contact_notices(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ContactNotice.ValueType]:
        """The list of contact notices that you acknowledge. The notices
        needed here depend on the values specified in
        `registration.contact_settings`.
        """
        pass
    @property
    def yearly_price(self) -> google.type.money_pb2.Money:
        """Required. Acknowledgement of the price to transfer or renew the domain for one year.
        Call `RetrieveTransferParameters` to obtain the price, which you must
        acknowledge.
        """
        pass
    @property
    def authorization_code(self) -> global___AuthorizationCode:
        """The domain's transfer authorization code. You can obtain this from the
        domain's current registrar.
        """
        pass
    validate_only: builtins.bool = ...
    """Validate the request without actually transferring the domain."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        registration : typing.Optional[global___Registration] = ...,
        contact_notices : typing.Optional[typing.Iterable[global___ContactNotice.ValueType]] = ...,
        yearly_price : typing.Optional[google.type.money_pb2.Money] = ...,
        authorization_code : typing.Optional[global___AuthorizationCode] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["authorization_code",b"authorization_code","registration",b"registration","yearly_price",b"yearly_price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_code",b"authorization_code","contact_notices",b"contact_notices","parent",b"parent","registration",b"registration","validate_only",b"validate_only","yearly_price",b"yearly_price"]) -> None: ...
global___TransferDomainRequest = TransferDomainRequest

class ListRegistrationsRequest(google.protobuf.message.Message):
    """Request for the `ListRegistrations` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The project and location from which to list `Registration`s, specified in
    the format `projects/*/locations/*`.
    """

    page_size: builtins.int = ...
    """Maximum number of results to return."""

    page_token: typing.Text = ...
    """When set to the `next_page_token` from a prior response, provides the next
    page of results.
    """

    filter: typing.Text = ...
    """Filter expression to restrict the `Registration`s returned.

    The expression must specify the field name, a comparison operator, and the
    value that you want to use for filtering. The value must be a string, a
    number, a boolean, or an enum value. The comparison operator should be one
    of =, !=, >, <, >=, <=, or : for prefix or wildcard matches.

    For example, to filter to a specific domain name, use an expression like
    `domainName="example.com"`. You can also check for the existence of a
    field; for example, to find domains using custom DNS settings, use an
    expression like `dnsSettings.customDns:*`.

    You can also create compound filters by combining expressions with the
    `AND` and `OR` operators. For example, to find domains that are suspended
    or have specific issues flagged, use an expression like
    `(state=SUSPENDED) OR (issue:*)`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListRegistrationsRequest = ListRegistrationsRequest

class ListRegistrationsResponse(google.protobuf.message.Message):
    """Response for the `ListRegistrations` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REGISTRATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def registrations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Registration]:
        """A list of `Registration`s."""
        pass
    next_page_token: typing.Text = ...
    """When present, there are more results to retrieve. Set `page_token` to this
    value on a subsequent call to get the next page of results.
    """

    def __init__(self,
        *,
        registrations : typing.Optional[typing.Iterable[global___Registration]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","registrations",b"registrations"]) -> None: ...
global___ListRegistrationsResponse = ListRegistrationsResponse

class GetRegistrationRequest(google.protobuf.message.Message):
    """Request for the `GetRegistration` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the `Registration` to get, in the format
    `projects/*/locations/*/registrations/*`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetRegistrationRequest = GetRegistrationRequest

class UpdateRegistrationRequest(google.protobuf.message.Message):
    """Request for the `UpdateRegistration` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REGISTRATION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def registration(self) -> global___Registration:
        """Fields of the `Registration` to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The field mask describing which fields to update as a comma-separated list.
        For example, if only the labels are being updated, the `update_mask` is
        `"labels"`.
        """
        pass
    def __init__(self,
        *,
        registration : typing.Optional[global___Registration] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["registration",b"registration","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["registration",b"registration","update_mask",b"update_mask"]) -> None: ...
global___UpdateRegistrationRequest = UpdateRegistrationRequest

class ConfigureManagementSettingsRequest(google.protobuf.message.Message):
    """Request for the `ConfigureManagementSettings` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REGISTRATION_FIELD_NUMBER: builtins.int
    MANAGEMENT_SETTINGS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    registration: typing.Text = ...
    """Required. The name of the `Registration` whose management settings are being updated,
    in the format `projects/*/locations/*/registrations/*`.
    """

    @property
    def management_settings(self) -> global___ManagementSettings:
        """Fields of the `ManagementSettings` to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The field mask describing which fields to update as a comma-separated list.
        For example, if only the transfer lock is being updated, the `update_mask`
        is `"transfer_lock_state"`.
        """
        pass
    def __init__(self,
        *,
        registration : typing.Text = ...,
        management_settings : typing.Optional[global___ManagementSettings] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["management_settings",b"management_settings","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["management_settings",b"management_settings","registration",b"registration","update_mask",b"update_mask"]) -> None: ...
global___ConfigureManagementSettingsRequest = ConfigureManagementSettingsRequest

class ConfigureDnsSettingsRequest(google.protobuf.message.Message):
    """Request for the `ConfigureDnsSettings` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REGISTRATION_FIELD_NUMBER: builtins.int
    DNS_SETTINGS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    registration: typing.Text = ...
    """Required. The name of the `Registration` whose DNS settings are being updated,
    in the format `projects/*/locations/*/registrations/*`.
    """

    @property
    def dns_settings(self) -> global___DnsSettings:
        """Fields of the `DnsSettings` to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The field mask describing which fields to update as a comma-separated list.
        For example, if only the name servers are being updated for an existing
        Custom DNS configuration, the `update_mask` is
        `"custom_dns.name_servers"`.

        When changing the DNS provider from one type to another, pass the new
        provider's field name as part of the field mask. For example, when changing
        from a Google Domains DNS configuration to a Custom DNS configuration, the
        `update_mask` is `"custom_dns"`. //
        """
        pass
    validate_only: builtins.bool = ...
    """Validate the request without actually updating the DNS settings."""

    def __init__(self,
        *,
        registration : typing.Text = ...,
        dns_settings : typing.Optional[global___DnsSettings] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dns_settings",b"dns_settings","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dns_settings",b"dns_settings","registration",b"registration","update_mask",b"update_mask","validate_only",b"validate_only"]) -> None: ...
global___ConfigureDnsSettingsRequest = ConfigureDnsSettingsRequest

class ConfigureContactSettingsRequest(google.protobuf.message.Message):
    """Request for the `ConfigureContactSettings` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REGISTRATION_FIELD_NUMBER: builtins.int
    CONTACT_SETTINGS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    CONTACT_NOTICES_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    registration: typing.Text = ...
    """Required. The name of the `Registration` whose contact settings are being updated,
    in the format `projects/*/locations/*/registrations/*`.
    """

    @property
    def contact_settings(self) -> global___ContactSettings:
        """Fields of the `ContactSettings` to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The field mask describing which fields to update as a comma-separated list.
        For example, if only the registrant contact is being updated, the
        `update_mask` is `"registrant_contact"`.
        """
        pass
    @property
    def contact_notices(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ContactNotice.ValueType]:
        """The list of contact notices that the caller acknowledges. The notices
        needed here depend on the values specified in `contact_settings`.
        """
        pass
    validate_only: builtins.bool = ...
    """Validate the request without actually updating the contact settings."""

    def __init__(self,
        *,
        registration : typing.Text = ...,
        contact_settings : typing.Optional[global___ContactSettings] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        contact_notices : typing.Optional[typing.Iterable[global___ContactNotice.ValueType]] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["contact_settings",b"contact_settings","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["contact_notices",b"contact_notices","contact_settings",b"contact_settings","registration",b"registration","update_mask",b"update_mask","validate_only",b"validate_only"]) -> None: ...
global___ConfigureContactSettingsRequest = ConfigureContactSettingsRequest

class ExportRegistrationRequest(google.protobuf.message.Message):
    """Request for the `ExportRegistration` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the `Registration` to export,
    in the format `projects/*/locations/*/registrations/*`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___ExportRegistrationRequest = ExportRegistrationRequest

class DeleteRegistrationRequest(google.protobuf.message.Message):
    """Request for the `DeleteRegistration` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the `Registration` to delete,
    in the format `projects/*/locations/*/registrations/*`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteRegistrationRequest = DeleteRegistrationRequest

class RetrieveAuthorizationCodeRequest(google.protobuf.message.Message):
    """Request for the `RetrieveAuthorizationCode` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REGISTRATION_FIELD_NUMBER: builtins.int
    registration: typing.Text = ...
    """Required. The name of the `Registration` whose authorization code is being retrieved,
    in the format `projects/*/locations/*/registrations/*`.
    """

    def __init__(self,
        *,
        registration : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["registration",b"registration"]) -> None: ...
global___RetrieveAuthorizationCodeRequest = RetrieveAuthorizationCodeRequest

class ResetAuthorizationCodeRequest(google.protobuf.message.Message):
    """Request for the `ResetAuthorizationCode` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REGISTRATION_FIELD_NUMBER: builtins.int
    registration: typing.Text = ...
    """Required. The name of the `Registration` whose authorization code is being reset,
    in the format `projects/*/locations/*/registrations/*`.
    """

    def __init__(self,
        *,
        registration : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["registration",b"registration"]) -> None: ...
global___ResetAuthorizationCodeRequest = ResetAuthorizationCodeRequest

class RegisterParameters(google.protobuf.message.Message):
    """Parameters required to register a new domain."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Availability:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AvailabilityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Availability.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        AVAILABILITY_UNSPECIFIED: RegisterParameters.Availability.ValueType = ...  # 0
        """The availability is unspecified."""

        AVAILABLE: RegisterParameters.Availability.ValueType = ...  # 1
        """The domain is available for registration."""

        UNAVAILABLE: RegisterParameters.Availability.ValueType = ...  # 2
        """The domain is not available for registration. Generally this means it is
        already registered to another party.
        """

        UNSUPPORTED: RegisterParameters.Availability.ValueType = ...  # 3
        """The domain is not currently supported by Cloud Domains, but may
        be available elsewhere.
        """

        UNKNOWN: RegisterParameters.Availability.ValueType = ...  # 4
        """Cloud Domains is unable to determine domain availability, generally
        due to system maintenance at the domain name registry.
        """

    class Availability(_Availability, metaclass=_AvailabilityEnumTypeWrapper):
        """Possible availability states of a domain name."""
        pass

    AVAILABILITY_UNSPECIFIED: RegisterParameters.Availability.ValueType = ...  # 0
    """The availability is unspecified."""

    AVAILABLE: RegisterParameters.Availability.ValueType = ...  # 1
    """The domain is available for registration."""

    UNAVAILABLE: RegisterParameters.Availability.ValueType = ...  # 2
    """The domain is not available for registration. Generally this means it is
    already registered to another party.
    """

    UNSUPPORTED: RegisterParameters.Availability.ValueType = ...  # 3
    """The domain is not currently supported by Cloud Domains, but may
    be available elsewhere.
    """

    UNKNOWN: RegisterParameters.Availability.ValueType = ...  # 4
    """Cloud Domains is unable to determine domain availability, generally
    due to system maintenance at the domain name registry.
    """


    DOMAIN_NAME_FIELD_NUMBER: builtins.int
    AVAILABILITY_FIELD_NUMBER: builtins.int
    SUPPORTED_PRIVACY_FIELD_NUMBER: builtins.int
    DOMAIN_NOTICES_FIELD_NUMBER: builtins.int
    YEARLY_PRICE_FIELD_NUMBER: builtins.int
    domain_name: typing.Text = ...
    """The domain name. Unicode domain names are expressed in Punycode format."""

    availability: global___RegisterParameters.Availability.ValueType = ...
    """Indicates whether the domain is available for registration. This value is
    accurate when obtained by calling `RetrieveRegisterParameters`, but is
    approximate when obtained by calling `SearchDomains`.
    """

    @property
    def supported_privacy(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ContactPrivacy.ValueType]:
        """Contact privacy options that the domain supports."""
        pass
    @property
    def domain_notices(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___DomainNotice.ValueType]:
        """Notices about special properties of the domain."""
        pass
    @property
    def yearly_price(self) -> google.type.money_pb2.Money:
        """Price to register or renew the domain for one year."""
        pass
    def __init__(self,
        *,
        domain_name : typing.Text = ...,
        availability : global___RegisterParameters.Availability.ValueType = ...,
        supported_privacy : typing.Optional[typing.Iterable[global___ContactPrivacy.ValueType]] = ...,
        domain_notices : typing.Optional[typing.Iterable[global___DomainNotice.ValueType]] = ...,
        yearly_price : typing.Optional[google.type.money_pb2.Money] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["yearly_price",b"yearly_price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["availability",b"availability","domain_name",b"domain_name","domain_notices",b"domain_notices","supported_privacy",b"supported_privacy","yearly_price",b"yearly_price"]) -> None: ...
global___RegisterParameters = RegisterParameters

class TransferParameters(google.protobuf.message.Message):
    """Parameters required to transfer a domain from another registrar."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DOMAIN_NAME_FIELD_NUMBER: builtins.int
    CURRENT_REGISTRAR_FIELD_NUMBER: builtins.int
    NAME_SERVERS_FIELD_NUMBER: builtins.int
    TRANSFER_LOCK_STATE_FIELD_NUMBER: builtins.int
    SUPPORTED_PRIVACY_FIELD_NUMBER: builtins.int
    YEARLY_PRICE_FIELD_NUMBER: builtins.int
    domain_name: typing.Text = ...
    """The domain name. Unicode domain names are expressed in Punycode format."""

    current_registrar: typing.Text = ...
    """The registrar that currently manages the domain."""

    @property
    def name_servers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The name servers that currently store the configuration of the domain."""
        pass
    transfer_lock_state: global___TransferLockState.ValueType = ...
    """Indicates whether the domain is protected by a transfer lock. For a
    transfer to succeed, this must show `UNLOCKED`. To unlock a domain,
    go to its current registrar.
    """

    @property
    def supported_privacy(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ContactPrivacy.ValueType]:
        """Contact privacy options that the domain supports."""
        pass
    @property
    def yearly_price(self) -> google.type.money_pb2.Money:
        """Price to transfer or renew the domain for one year."""
        pass
    def __init__(self,
        *,
        domain_name : typing.Text = ...,
        current_registrar : typing.Text = ...,
        name_servers : typing.Optional[typing.Iterable[typing.Text]] = ...,
        transfer_lock_state : global___TransferLockState.ValueType = ...,
        supported_privacy : typing.Optional[typing.Iterable[global___ContactPrivacy.ValueType]] = ...,
        yearly_price : typing.Optional[google.type.money_pb2.Money] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["yearly_price",b"yearly_price"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_registrar",b"current_registrar","domain_name",b"domain_name","name_servers",b"name_servers","supported_privacy",b"supported_privacy","transfer_lock_state",b"transfer_lock_state","yearly_price",b"yearly_price"]) -> None: ...
global___TransferParameters = TransferParameters

class AuthorizationCode(google.protobuf.message.Message):
    """Defines an authorization code."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODE_FIELD_NUMBER: builtins.int
    code: typing.Text = ...
    """The Authorization Code in ASCII. It can be used to transfer the domain
    to or from another registrar.
    """

    def __init__(self,
        *,
        code : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code"]) -> None: ...
global___AuthorizationCode = AuthorizationCode

class OperationMetadata(google.protobuf.message.Message):
    """Represents the metadata of the long-running operation. Output only."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    VERB_FIELD_NUMBER: builtins.int
    STATUS_DETAIL_FIELD_NUMBER: builtins.int
    API_VERSION_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the operation finished running."""
        pass
    target: typing.Text = ...
    """Server-defined resource path for the target of the operation."""

    verb: typing.Text = ...
    """Name of the verb executed by the operation."""

    status_detail: typing.Text = ...
    """Human-readable status of the operation, if any."""

    api_version: typing.Text = ...
    """API version used to start the operation."""

    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        target : typing.Text = ...,
        verb : typing.Text = ...,
        status_detail : typing.Text = ...,
        api_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version",b"api_version","create_time",b"create_time","end_time",b"end_time","status_detail",b"status_detail","target",b"target","verb",b"verb"]) -> None: ...
global___OperationMetadata = OperationMetadata
