"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.type.money_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Service(google.protobuf.message.Message):
    """Encapsulates a single service in Google Cloud Platform."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    SERVICE_ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    BUSINESS_ENTITY_NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name for the service.
    Example: "services/DA34-426B-A397"
    """

    service_id: typing.Text = ...
    """The identifier for the service.
    Example: "DA34-426B-A397"
    """

    display_name: typing.Text = ...
    """A human readable display name for this service."""

    business_entity_name: typing.Text = ...
    """The business under which the service is offered.
    Ex. "businessEntities/GCP", "businessEntities/Maps"
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        service_id : typing.Text = ...,
        display_name : typing.Text = ...,
        business_entity_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["business_entity_name",b"business_entity_name","display_name",b"display_name","name",b"name","service_id",b"service_id"]) -> None: ...
global___Service = Service

class Sku(google.protobuf.message.Message):
    """Encapsulates a single SKU in Google Cloud Platform"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    SKU_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    SERVICE_REGIONS_FIELD_NUMBER: builtins.int
    PRICING_INFO_FIELD_NUMBER: builtins.int
    SERVICE_PROVIDER_NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name for the SKU.
    Example: "services/DA34-426B-A397/skus/AA95-CD31-42FE"
    """

    sku_id: typing.Text = ...
    """The identifier for the SKU.
    Example: "AA95-CD31-42FE"
    """

    description: typing.Text = ...
    """A human readable description of the SKU, has a maximum length of 256
    characters.
    """

    @property
    def category(self) -> global___Category:
        """The category hierarchy of this SKU, purely for organizational purpose."""
        pass
    @property
    def service_regions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of service regions this SKU is offered at.
        Example: "asia-east1"
        Service regions can be found at https://cloud.google.com/about/locations/
        """
        pass
    @property
    def pricing_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PricingInfo]:
        """A timeline of pricing info for this SKU in chronological order."""
        pass
    service_provider_name: typing.Text = ...
    """Identifies the service provider.
    This is 'Google' for first party services in Google Cloud Platform.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        sku_id : typing.Text = ...,
        description : typing.Text = ...,
        category : typing.Optional[global___Category] = ...,
        service_regions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        pricing_info : typing.Optional[typing.Iterable[global___PricingInfo]] = ...,
        service_provider_name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["category",b"category"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["category",b"category","description",b"description","name",b"name","pricing_info",b"pricing_info","service_provider_name",b"service_provider_name","service_regions",b"service_regions","sku_id",b"sku_id"]) -> None: ...
global___Sku = Sku

class Category(google.protobuf.message.Message):
    """Represents the category hierarchy of a SKU."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_DISPLAY_NAME_FIELD_NUMBER: builtins.int
    RESOURCE_FAMILY_FIELD_NUMBER: builtins.int
    RESOURCE_GROUP_FIELD_NUMBER: builtins.int
    USAGE_TYPE_FIELD_NUMBER: builtins.int
    service_display_name: typing.Text = ...
    """The display name of the service this SKU belongs to."""

    resource_family: typing.Text = ...
    """The type of product the SKU refers to.
    Example: "Compute", "Storage", "Network", "ApplicationServices" etc.
    """

    resource_group: typing.Text = ...
    """A group classification for related SKUs.
    Example: "RAM", "GPU", "Prediction", "Ops", "GoogleEgress" etc.
    """

    usage_type: typing.Text = ...
    """Represents how the SKU is consumed.
    Example: "OnDemand", "Preemptible", "Commit1Mo", "Commit1Yr" etc.
    """

    def __init__(self,
        *,
        service_display_name : typing.Text = ...,
        resource_family : typing.Text = ...,
        resource_group : typing.Text = ...,
        usage_type : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_family",b"resource_family","resource_group",b"resource_group","service_display_name",b"service_display_name","usage_type",b"usage_type"]) -> None: ...
global___Category = Category

class PricingInfo(google.protobuf.message.Message):
    """Represents the pricing information for a SKU at a single point of time."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EFFECTIVE_TIME_FIELD_NUMBER: builtins.int
    SUMMARY_FIELD_NUMBER: builtins.int
    PRICING_EXPRESSION_FIELD_NUMBER: builtins.int
    AGGREGATION_INFO_FIELD_NUMBER: builtins.int
    CURRENCY_CONVERSION_RATE_FIELD_NUMBER: builtins.int
    @property
    def effective_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp from which this pricing was effective within the requested
        time range. This is guaranteed to be greater than or equal to the
        start_time field in the request and less than the end_time field in the
        request. If a time range was not specified in the request this field will
        be equivalent to a time within the last 12 hours, indicating the latest
        pricing info.
        """
        pass
    summary: typing.Text = ...
    """An optional human readable summary of the pricing information, has a
    maximum length of 256 characters.
    """

    @property
    def pricing_expression(self) -> global___PricingExpression:
        """Expresses the pricing formula. See `PricingExpression` for an example."""
        pass
    @property
    def aggregation_info(self) -> global___AggregationInfo:
        """Aggregation Info. This can be left unspecified if the pricing expression
        doesn't require aggregation.
        """
        pass
    currency_conversion_rate: builtins.float = ...
    """Conversion rate used for currency conversion, from USD to the currency
    specified in the request. This includes any surcharge collected for billing
    in non USD currency. If a currency is not specified in the request this
    defaults to 1.0.
    Example: USD * currency_conversion_rate = JPY
    """

    def __init__(self,
        *,
        effective_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        summary : typing.Text = ...,
        pricing_expression : typing.Optional[global___PricingExpression] = ...,
        aggregation_info : typing.Optional[global___AggregationInfo] = ...,
        currency_conversion_rate : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["aggregation_info",b"aggregation_info","effective_time",b"effective_time","pricing_expression",b"pricing_expression"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aggregation_info",b"aggregation_info","currency_conversion_rate",b"currency_conversion_rate","effective_time",b"effective_time","pricing_expression",b"pricing_expression","summary",b"summary"]) -> None: ...
global___PricingInfo = PricingInfo

class PricingExpression(google.protobuf.message.Message):
    """Expresses a mathematical pricing formula. For Example:-

    `usage_unit: GBy`
    `tiered_rates:`
       `[start_usage_amount: 20, unit_price: $10]`
       `[start_usage_amount: 100, unit_price: $5]`

    The above expresses a pricing formula where the first 20GB is free, the
    next 80GB is priced at $10 per GB followed by $5 per GB for additional
    usage.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TierRate(google.protobuf.message.Message):
        """The price rate indicating starting usage and its corresponding price."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        START_USAGE_AMOUNT_FIELD_NUMBER: builtins.int
        UNIT_PRICE_FIELD_NUMBER: builtins.int
        start_usage_amount: builtins.float = ...
        """Usage is priced at this rate only after this amount.
        Example: start_usage_amount of 10 indicates that the usage will be priced
        at the unit_price after the first 10 usage_units.
        """

        @property
        def unit_price(self) -> google.type.money_pb2.Money:
            """The price per unit of usage.
            Example: unit_price of amount $10 indicates that each unit will cost $10.
            """
            pass
        def __init__(self,
            *,
            start_usage_amount : builtins.float = ...,
            unit_price : typing.Optional[google.type.money_pb2.Money] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["unit_price",b"unit_price"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["start_usage_amount",b"start_usage_amount","unit_price",b"unit_price"]) -> None: ...

    USAGE_UNIT_FIELD_NUMBER: builtins.int
    USAGE_UNIT_DESCRIPTION_FIELD_NUMBER: builtins.int
    BASE_UNIT_FIELD_NUMBER: builtins.int
    BASE_UNIT_DESCRIPTION_FIELD_NUMBER: builtins.int
    BASE_UNIT_CONVERSION_FACTOR_FIELD_NUMBER: builtins.int
    DISPLAY_QUANTITY_FIELD_NUMBER: builtins.int
    TIERED_RATES_FIELD_NUMBER: builtins.int
    usage_unit: typing.Text = ...
    """The short hand for unit of usage this pricing is specified in.
    Example: usage_unit of "GiBy" means that usage is specified in "Gibi Byte".
    """

    usage_unit_description: typing.Text = ...
    """The unit of usage in human readable form.
    Example: "gibi byte".
    """

    base_unit: typing.Text = ...
    """The base unit for the SKU which is the unit used in usage exports.
    Example: "By"
    """

    base_unit_description: typing.Text = ...
    """The base unit in human readable form.
    Example: "byte".
    """

    base_unit_conversion_factor: builtins.float = ...
    """Conversion factor for converting from price per usage_unit to price per
    base_unit, and start_usage_amount to start_usage_amount in base_unit.
    unit_price / base_unit_conversion_factor = price per base_unit.
    start_usage_amount * base_unit_conversion_factor = start_usage_amount in
    base_unit.
    """

    display_quantity: builtins.float = ...
    """The recommended quantity of units for displaying pricing info. When
    displaying pricing info it is recommended to display:
    (unit_price * display_quantity) per display_quantity usage_unit.
    This field does not affect the pricing formula and is for display purposes
    only.
    Example: If the unit_price is "0.0001 USD", the usage_unit is "GB" and
    the display_quantity is "1000" then the recommended way of displaying the
    pricing info is "0.10 USD per 1000 GB"
    """

    @property
    def tiered_rates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PricingExpression.TierRate]:
        """The list of tiered rates for this pricing. The total cost is computed by
        applying each of the tiered rates on usage. This repeated list is sorted
        by ascending order of start_usage_amount.
        """
        pass
    def __init__(self,
        *,
        usage_unit : typing.Text = ...,
        usage_unit_description : typing.Text = ...,
        base_unit : typing.Text = ...,
        base_unit_description : typing.Text = ...,
        base_unit_conversion_factor : builtins.float = ...,
        display_quantity : builtins.float = ...,
        tiered_rates : typing.Optional[typing.Iterable[global___PricingExpression.TierRate]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["base_unit",b"base_unit","base_unit_conversion_factor",b"base_unit_conversion_factor","base_unit_description",b"base_unit_description","display_quantity",b"display_quantity","tiered_rates",b"tiered_rates","usage_unit",b"usage_unit","usage_unit_description",b"usage_unit_description"]) -> None: ...
global___PricingExpression = PricingExpression

class AggregationInfo(google.protobuf.message.Message):
    """Represents the aggregation level and interval for pricing of a single SKU."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AggregationLevel:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AggregationLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AggregationLevel.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        AGGREGATION_LEVEL_UNSPECIFIED: AggregationInfo.AggregationLevel.ValueType = ...  # 0
        ACCOUNT: AggregationInfo.AggregationLevel.ValueType = ...  # 1
        PROJECT: AggregationInfo.AggregationLevel.ValueType = ...  # 2
    class AggregationLevel(_AggregationLevel, metaclass=_AggregationLevelEnumTypeWrapper):
        """The level at which usage is aggregated to compute cost.
        Example: "ACCOUNT" aggregation level indicates that usage for tiered
        pricing is aggregated across all projects in a single account.
        """
        pass

    AGGREGATION_LEVEL_UNSPECIFIED: AggregationInfo.AggregationLevel.ValueType = ...  # 0
    ACCOUNT: AggregationInfo.AggregationLevel.ValueType = ...  # 1
    PROJECT: AggregationInfo.AggregationLevel.ValueType = ...  # 2

    class _AggregationInterval:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AggregationIntervalEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AggregationInterval.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        AGGREGATION_INTERVAL_UNSPECIFIED: AggregationInfo.AggregationInterval.ValueType = ...  # 0
        DAILY: AggregationInfo.AggregationInterval.ValueType = ...  # 1
        MONTHLY: AggregationInfo.AggregationInterval.ValueType = ...  # 2
    class AggregationInterval(_AggregationInterval, metaclass=_AggregationIntervalEnumTypeWrapper):
        """The interval at which usage is aggregated to compute cost.
        Example: "MONTHLY" aggregation interval indicates that usage for tiered
        pricing is aggregated every month.
        """
        pass

    AGGREGATION_INTERVAL_UNSPECIFIED: AggregationInfo.AggregationInterval.ValueType = ...  # 0
    DAILY: AggregationInfo.AggregationInterval.ValueType = ...  # 1
    MONTHLY: AggregationInfo.AggregationInterval.ValueType = ...  # 2

    AGGREGATION_LEVEL_FIELD_NUMBER: builtins.int
    AGGREGATION_INTERVAL_FIELD_NUMBER: builtins.int
    AGGREGATION_COUNT_FIELD_NUMBER: builtins.int
    aggregation_level: global___AggregationInfo.AggregationLevel.ValueType = ...
    aggregation_interval: global___AggregationInfo.AggregationInterval.ValueType = ...
    aggregation_count: builtins.int = ...
    """The number of intervals to aggregate over.
    Example: If aggregation_level is "DAILY" and aggregation_count is 14,
    aggregation will be over 14 days.
    """

    def __init__(self,
        *,
        aggregation_level : global___AggregationInfo.AggregationLevel.ValueType = ...,
        aggregation_interval : global___AggregationInfo.AggregationInterval.ValueType = ...,
        aggregation_count : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["aggregation_count",b"aggregation_count","aggregation_interval",b"aggregation_interval","aggregation_level",b"aggregation_level"]) -> None: ...
global___AggregationInfo = AggregationInfo

class ListServicesRequest(google.protobuf.message.Message):
    """Request message for `ListServices`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    page_size: builtins.int = ...
    """Requested page size. Defaults to 5000."""

    page_token: typing.Text = ...
    """A token identifying a page of results to return. This should be a
    `next_page_token` value returned from a previous `ListServices`
    call. If unspecified, the first page of results is returned.
    """

    def __init__(self,
        *,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListServicesRequest = ListServicesRequest

class ListServicesResponse(google.protobuf.message.Message):
    """Response message for `ListServices`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def services(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Service]:
        """A list of services."""
        pass
    next_page_token: typing.Text = ...
    """A token to retrieve the next page of results. To retrieve the next page,
    call `ListServices` again with the `page_token` field set to this
    value. This field is empty if there are no more results to retrieve.
    """

    def __init__(self,
        *,
        services : typing.Optional[typing.Iterable[global___Service]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","services",b"services"]) -> None: ...
global___ListServicesResponse = ListServicesResponse

class ListSkusRequest(google.protobuf.message.Message):
    """Request message for `ListSkus`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    CURRENCY_CODE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the service.
    Example: "services/DA34-426B-A397"
    """

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Optional inclusive start time of the time range for which the pricing
        versions will be returned. Timestamps in the future are not allowed.
        The time range has to be within a single calendar month in
        America/Los_Angeles timezone. Time range as a whole is optional. If not
        specified, the latest pricing will be returned (up to 12 hours old at
        most).
        """
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Optional exclusive end time of the time range for which the pricing
        versions will be returned. Timestamps in the future are not allowed.
        The time range has to be within a single calendar month in
        America/Los_Angeles timezone. Time range as a whole is optional. If not
        specified, the latest pricing will be returned (up to 12 hours old at
        most).
        """
        pass
    currency_code: typing.Text = ...
    """The ISO 4217 currency code for the pricing info in the response proto.
    Will use the conversion rate as of start_time.
    Optional. If not specified USD will be used.
    """

    page_size: builtins.int = ...
    """Requested page size. Defaults to 5000."""

    page_token: typing.Text = ...
    """A token identifying a page of results to return. This should be a
    `next_page_token` value returned from a previous `ListSkus`
    call. If unspecified, the first page of results is returned.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        currency_code : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["currency_code",b"currency_code","end_time",b"end_time","page_size",b"page_size","page_token",b"page_token","parent",b"parent","start_time",b"start_time"]) -> None: ...
global___ListSkusRequest = ListSkusRequest

class ListSkusResponse(google.protobuf.message.Message):
    """Response message for `ListSkus`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SKUS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def skus(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Sku]:
        """The list of public SKUs of the given service."""
        pass
    next_page_token: typing.Text = ...
    """A token to retrieve the next page of results. To retrieve the next page,
    call `ListSkus` again with the `page_token` field set to this
    value. This field is empty if there are no more results to retrieve.
    """

    def __init__(self,
        *,
        skus : typing.Optional[typing.Iterable[global___Sku]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","skus",b"skus"]) -> None: ...
global___ListSkusResponse = ListSkusResponse
