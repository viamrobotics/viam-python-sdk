# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/gaming/allocationendpoint/v1alpha/allocation_endpoint.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.cloud.gaming.allocationendpoint.v1alpha.allocation_endpoint_pb2


class AllocationEndpointServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Allocate(self, stream: 'grpclib.server.Stream[google.cloud.gaming.allocationendpoint.v1alpha.allocation_endpoint_pb2.AllocationRequest, google.cloud.gaming.allocationendpoint.v1alpha.allocation_endpoint_pb2.AllocationResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.gaming.allocationendpoint.v1alpha.AllocationEndpointService/Allocate': grpclib.const.Handler(
                self.Allocate,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.gaming.allocationendpoint.v1alpha.allocation_endpoint_pb2.AllocationRequest,
                google.cloud.gaming.allocationendpoint.v1alpha.allocation_endpoint_pb2.AllocationResponse,
            ),
        }


class AllocationEndpointServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Allocate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.gaming.allocationendpoint.v1alpha.AllocationEndpointService/Allocate',
            google.cloud.gaming.allocationendpoint.v1alpha.allocation_endpoint_pb2.AllocationRequest,
            google.cloud.gaming.allocationendpoint.v1alpha.allocation_endpoint_pb2.AllocationResponse,
        )
