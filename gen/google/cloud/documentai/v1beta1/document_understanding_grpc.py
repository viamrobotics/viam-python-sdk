# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/documentai/v1beta1/document_understanding.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.cloud.documentai.v1beta1.geometry_pb2
import google.longrunning.operations_pb2
import google.protobuf.timestamp_pb2
import google.cloud.documentai.v1beta1.document_understanding_pb2


class DocumentUnderstandingServiceBase(abc.ABC):

    @abc.abstractmethod
    async def BatchProcessDocuments(self, stream: 'grpclib.server.Stream[google.cloud.documentai.v1beta1.document_understanding_pb2.BatchProcessDocumentsRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.documentai.v1beta1.DocumentUnderstandingService/BatchProcessDocuments': grpclib.const.Handler(
                self.BatchProcessDocuments,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.documentai.v1beta1.document_understanding_pb2.BatchProcessDocumentsRequest,
                google.longrunning.operations_pb2.Operation,
            ),
        }


class DocumentUnderstandingServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.BatchProcessDocuments = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.documentai.v1beta1.DocumentUnderstandingService/BatchProcessDocuments',
            google.cloud.documentai.v1beta1.document_understanding_pb2.BatchProcessDocumentsRequest,
            google.longrunning.operations_pb2.Operation,
        )
