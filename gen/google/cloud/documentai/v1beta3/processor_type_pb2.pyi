"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ProcessorType(google.protobuf.message.Message):
    """A processor type is responsible for performing a certain document
    understanding task on a certain type of document.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LocationInfo(google.protobuf.message.Message):
        """The location information about where the processor is available."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        LOCATION_ID_FIELD_NUMBER: builtins.int
        location_id: typing.Text = ...
        """The location id."""

        def __init__(self,
            *,
            location_id : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["location_id",b"location_id"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    AVAILABLE_LOCATIONS_FIELD_NUMBER: builtins.int
    ALLOW_CREATION_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the processor type."""

    type: typing.Text = ...
    """The type of the processor."""

    category: typing.Text = ...
    """The processor category."""

    @property
    def available_locations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProcessorType.LocationInfo]:
        """The locations in which this processor is available."""
        pass
    allow_creation: builtins.bool = ...
    """Whether the processor type allows creation. If yes, user can create a
    processor of this processor type. Otherwise, user needs to require for
    whitelisting.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        type : typing.Text = ...,
        category : typing.Text = ...,
        available_locations : typing.Optional[typing.Iterable[global___ProcessorType.LocationInfo]] = ...,
        allow_creation : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_creation",b"allow_creation","available_locations",b"available_locations","category",b"category","name",b"name","type",b"type"]) -> None: ...
global___ProcessorType = ProcessorType
