"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Workflow(google.protobuf.message.Message):
    """Workflow program to be executed by Workflows."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Workflow.State.ValueType = ...  # 0
        """Invalid state."""

        ACTIVE: Workflow.State.ValueType = ...  # 1
        """The workflow has been deployed successfully and is serving."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Describes the current state of workflow deployment. More states may be
        added in the future.
        """
        pass

    STATE_UNSPECIFIED: Workflow.State.ValueType = ...  # 0
    """Invalid state."""

    ACTIVE: Workflow.State.ValueType = ...  # 1
    """The workflow has been deployed successfully and is serving."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    REVISION_ID_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    REVISION_CREATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    SOURCE_CONTENTS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the workflow.
    Format: projects/{project}/locations/{location}/workflows/{workflow}
    """

    description: typing.Text = ...
    """Description of the workflow provided by the user.
    Must be at most 1000 unicode characters long.
    """

    state: global___Workflow.State.ValueType = ...
    """Output only. State of the workflow deployment."""

    revision_id: typing.Text = ...
    """Output only. The revision of the workflow.
    A new revision of a workflow is created as a result of updating the
    following fields of a workflow:
    - `source_code`
    - `service_account`
    The format is "000001-a4d", where the first 6 characters define
    the zero-padded revision ordinal number. They are followed by a hyphen and
    3 hexadecimal random characters.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The timestamp of when the workflow was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The last update timestamp of the workflow."""
        pass
    @property
    def revision_create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The timestamp that the latest revision of the workflow
        was created.
        """
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels associated with this workflow.
        Labels can contain at most 64 entries. Keys and values can be no longer
        than 63 characters and can only contain lowercase letters, numeric
        characters, underscores and dashes. Label keys must start with a letter.
        International characters are allowed.
        """
        pass
    service_account: typing.Text = ...
    """Name of the service account associated with the latest workflow version.
    This service account represents the identity of the workflow and determines
    what permissions the workflow has.
    Format: projects/{project}/serviceAccounts/{account}

    Using `-` as a wildcard for the `{project}` will infer the project from
    the account. The `{account}` value can be the `email` address or the
    `unique_id` of the service account.

    If not provided, workflow will use the project's default service account.
    Modifying this field for an existing workflow results in a new workflow
    revision.
    """

    source_contents: typing.Text = ...
    """Workflow code to be executed. The size limit is 32KB."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        state : global___Workflow.State.ValueType = ...,
        revision_id : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        revision_create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        service_account : typing.Text = ...,
        source_contents : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","revision_create_time",b"revision_create_time","source_code",b"source_code","source_contents",b"source_contents","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","labels",b"labels","name",b"name","revision_create_time",b"revision_create_time","revision_id",b"revision_id","service_account",b"service_account","source_code",b"source_code","source_contents",b"source_contents","state",b"state","update_time",b"update_time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["source_code",b"source_code"]) -> typing.Optional[typing_extensions.Literal["source_contents"]]: ...
global___Workflow = Workflow

class ListWorkflowsRequest(google.protobuf.message.Message):
    """Request for the
    [ListWorkflows][google.cloud.workflows.v1beta.Workflows.ListWorkflows]
    method.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Project and location from which the workflows should be listed.
    Format: projects/{project}/locations/{location}
    """

    page_size: builtins.int = ...
    """Maximum number of workflows to return per call. The service may return
    fewer than this value. If the value is not specified, a default value of
    500 will be used. The maximum permitted value is 1000 and values greater
    than 1000 will be coerced down to 1000.
    """

    page_token: typing.Text = ...
    """A page token, received from a previous `ListWorkflows` call.
    Provide this to retrieve the subsequent page.

    When paginating, all other parameters provided to `ListWorkflows` must
    match the call that provided the page token.
    """

    filter: typing.Text = ...
    """Filter to restrict results to specific workflows."""

    order_by: typing.Text = ...
    """Comma-separated list of fields that that specify the order of the results.
    Default sorting order for a field is ascending. To specify descending order
    for a field, append a " desc" suffix.
    If not specified, the results will be returned in an unspecified order.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListWorkflowsRequest = ListWorkflowsRequest

class ListWorkflowsResponse(google.protobuf.message.Message):
    """Response for the
    [ListWorkflows][google.cloud.workflows.v1beta.Workflows.ListWorkflows]
    method.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WORKFLOWS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def workflows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Workflow]:
        """The workflows which match the request."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Unreachable resources."""
        pass
    def __init__(self,
        *,
        workflows : typing.Optional[typing.Iterable[global___Workflow]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","unreachable",b"unreachable","workflows",b"workflows"]) -> None: ...
global___ListWorkflowsResponse = ListWorkflowsResponse

class GetWorkflowRequest(google.protobuf.message.Message):
    """Request for the
    [GetWorkflow][google.cloud.workflows.v1beta.Workflows.GetWorkflow] method.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the workflow which information should be retrieved.
    Format: projects/{project}/locations/{location}/workflows/{workflow}
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetWorkflowRequest = GetWorkflowRequest

class CreateWorkflowRequest(google.protobuf.message.Message):
    """Request for the
    [CreateWorkflow][google.cloud.workflows.v1beta.Workflows.CreateWorkflow]
    method.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    WORKFLOW_FIELD_NUMBER: builtins.int
    WORKFLOW_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Project and location in which the workflow should be created.
    Format:  projects/{project}/locations/{location}
    """

    @property
    def workflow(self) -> global___Workflow:
        """Required. Workflow to be created."""
        pass
    workflow_id: typing.Text = ...
    """Required. The ID of the workflow to be created. It has to fulfill the
    following requirements:

    * Must contain only letters, numbers, underscores and hyphens.
    * Must start with a letter.
    * Must be between 1-64 characters.
    * Must end with a number or a letter.
    * Must be unique within the customer project and location.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        workflow : typing.Optional[global___Workflow] = ...,
        workflow_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["workflow",b"workflow"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","workflow",b"workflow","workflow_id",b"workflow_id"]) -> None: ...
global___CreateWorkflowRequest = CreateWorkflowRequest

class DeleteWorkflowRequest(google.protobuf.message.Message):
    """Request for the
    [DeleteWorkflow][google.cloud.workflows.v1beta.Workflows.DeleteWorkflow]
    method.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the workflow to be deleted.
    Format: projects/{project}/locations/{location}/workflows/{workflow}
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteWorkflowRequest = DeleteWorkflowRequest

class UpdateWorkflowRequest(google.protobuf.message.Message):
    """Request for the
    [UpdateWorkflow][google.cloud.workflows.v1beta.Workflows.UpdateWorkflow]
    method.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WORKFLOW_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def workflow(self) -> global___Workflow:
        """Required. Workflow to be updated."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """List of fields to be updated. If not present, the entire workflow
        will be updated.
        """
        pass
    def __init__(self,
        *,
        workflow : typing.Optional[global___Workflow] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update_mask",b"update_mask","workflow",b"workflow"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["update_mask",b"update_mask","workflow",b"workflow"]) -> None: ...
global___UpdateWorkflowRequest = UpdateWorkflowRequest

class OperationMetadata(google.protobuf.message.Message):
    """Represents the metadata of the long-running operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    VERB_FIELD_NUMBER: builtins.int
    API_VERSION_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the operation finished running."""
        pass
    target: typing.Text = ...
    """Server-defined resource path for the target of the operation."""

    verb: typing.Text = ...
    """Name of the verb executed by the operation."""

    api_version: typing.Text = ...
    """API version used to start the operation."""

    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        target : typing.Text = ...,
        verb : typing.Text = ...,
        api_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version",b"api_version","create_time",b"create_time","end_time",b"end_time","target",b"target","verb",b"verb"]) -> None: ...
global___OperationMetadata = OperationMetadata
