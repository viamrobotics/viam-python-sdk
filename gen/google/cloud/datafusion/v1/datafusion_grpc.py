# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/datafusion/v1/datafusion.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.longrunning.operations_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.timestamp_pb2
import google.cloud.datafusion.v1.datafusion_pb2


class DataFusionBase(abc.ABC):

    @abc.abstractmethod
    async def ListAvailableVersions(self, stream: 'grpclib.server.Stream[google.cloud.datafusion.v1.datafusion_pb2.ListAvailableVersionsRequest, google.cloud.datafusion.v1.datafusion_pb2.ListAvailableVersionsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListInstances(self, stream: 'grpclib.server.Stream[google.cloud.datafusion.v1.datafusion_pb2.ListInstancesRequest, google.cloud.datafusion.v1.datafusion_pb2.ListInstancesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetInstance(self, stream: 'grpclib.server.Stream[google.cloud.datafusion.v1.datafusion_pb2.GetInstanceRequest, google.cloud.datafusion.v1.datafusion_pb2.Instance]') -> None:
        pass

    @abc.abstractmethod
    async def CreateInstance(self, stream: 'grpclib.server.Stream[google.cloud.datafusion.v1.datafusion_pb2.CreateInstanceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteInstance(self, stream: 'grpclib.server.Stream[google.cloud.datafusion.v1.datafusion_pb2.DeleteInstanceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateInstance(self, stream: 'grpclib.server.Stream[google.cloud.datafusion.v1.datafusion_pb2.UpdateInstanceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def RestartInstance(self, stream: 'grpclib.server.Stream[google.cloud.datafusion.v1.datafusion_pb2.RestartInstanceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.datafusion.v1.DataFusion/ListAvailableVersions': grpclib.const.Handler(
                self.ListAvailableVersions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datafusion.v1.datafusion_pb2.ListAvailableVersionsRequest,
                google.cloud.datafusion.v1.datafusion_pb2.ListAvailableVersionsResponse,
            ),
            '/google.cloud.datafusion.v1.DataFusion/ListInstances': grpclib.const.Handler(
                self.ListInstances,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datafusion.v1.datafusion_pb2.ListInstancesRequest,
                google.cloud.datafusion.v1.datafusion_pb2.ListInstancesResponse,
            ),
            '/google.cloud.datafusion.v1.DataFusion/GetInstance': grpclib.const.Handler(
                self.GetInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datafusion.v1.datafusion_pb2.GetInstanceRequest,
                google.cloud.datafusion.v1.datafusion_pb2.Instance,
            ),
            '/google.cloud.datafusion.v1.DataFusion/CreateInstance': grpclib.const.Handler(
                self.CreateInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datafusion.v1.datafusion_pb2.CreateInstanceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.datafusion.v1.DataFusion/DeleteInstance': grpclib.const.Handler(
                self.DeleteInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datafusion.v1.datafusion_pb2.DeleteInstanceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.datafusion.v1.DataFusion/UpdateInstance': grpclib.const.Handler(
                self.UpdateInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datafusion.v1.datafusion_pb2.UpdateInstanceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.datafusion.v1.DataFusion/RestartInstance': grpclib.const.Handler(
                self.RestartInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datafusion.v1.datafusion_pb2.RestartInstanceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
        }


class DataFusionStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListAvailableVersions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datafusion.v1.DataFusion/ListAvailableVersions',
            google.cloud.datafusion.v1.datafusion_pb2.ListAvailableVersionsRequest,
            google.cloud.datafusion.v1.datafusion_pb2.ListAvailableVersionsResponse,
        )
        self.ListInstances = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datafusion.v1.DataFusion/ListInstances',
            google.cloud.datafusion.v1.datafusion_pb2.ListInstancesRequest,
            google.cloud.datafusion.v1.datafusion_pb2.ListInstancesResponse,
        )
        self.GetInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datafusion.v1.DataFusion/GetInstance',
            google.cloud.datafusion.v1.datafusion_pb2.GetInstanceRequest,
            google.cloud.datafusion.v1.datafusion_pb2.Instance,
        )
        self.CreateInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datafusion.v1.DataFusion/CreateInstance',
            google.cloud.datafusion.v1.datafusion_pb2.CreateInstanceRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.DeleteInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datafusion.v1.DataFusion/DeleteInstance',
            google.cloud.datafusion.v1.datafusion_pb2.DeleteInstanceRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.UpdateInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datafusion.v1.DataFusion/UpdateInstance',
            google.cloud.datafusion.v1.datafusion_pb2.UpdateInstanceRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.RestartInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datafusion.v1.DataFusion/RestartInstance',
            google.cloud.datafusion.v1.datafusion_pb2.RestartInstanceRequest,
            google.longrunning.operations_pb2.Operation,
        )
