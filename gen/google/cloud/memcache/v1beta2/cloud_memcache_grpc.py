# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/memcache/v1beta2/cloud_memcache.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.longrunning.operations_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.timestamp_pb2
import google.cloud.memcache.v1beta2.cloud_memcache_pb2


class CloudMemcacheBase(abc.ABC):

    @abc.abstractmethod
    async def ListInstances(self, stream: 'grpclib.server.Stream[google.cloud.memcache.v1beta2.cloud_memcache_pb2.ListInstancesRequest, google.cloud.memcache.v1beta2.cloud_memcache_pb2.ListInstancesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetInstance(self, stream: 'grpclib.server.Stream[google.cloud.memcache.v1beta2.cloud_memcache_pb2.GetInstanceRequest, google.cloud.memcache.v1beta2.cloud_memcache_pb2.Instance]') -> None:
        pass

    @abc.abstractmethod
    async def CreateInstance(self, stream: 'grpclib.server.Stream[google.cloud.memcache.v1beta2.cloud_memcache_pb2.CreateInstanceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateInstance(self, stream: 'grpclib.server.Stream[google.cloud.memcache.v1beta2.cloud_memcache_pb2.UpdateInstanceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateParameters(self, stream: 'grpclib.server.Stream[google.cloud.memcache.v1beta2.cloud_memcache_pb2.UpdateParametersRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteInstance(self, stream: 'grpclib.server.Stream[google.cloud.memcache.v1beta2.cloud_memcache_pb2.DeleteInstanceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ApplyParameters(self, stream: 'grpclib.server.Stream[google.cloud.memcache.v1beta2.cloud_memcache_pb2.ApplyParametersRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ApplySoftwareUpdate(self, stream: 'grpclib.server.Stream[google.cloud.memcache.v1beta2.cloud_memcache_pb2.ApplySoftwareUpdateRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.memcache.v1beta2.CloudMemcache/ListInstances': grpclib.const.Handler(
                self.ListInstances,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.memcache.v1beta2.cloud_memcache_pb2.ListInstancesRequest,
                google.cloud.memcache.v1beta2.cloud_memcache_pb2.ListInstancesResponse,
            ),
            '/google.cloud.memcache.v1beta2.CloudMemcache/GetInstance': grpclib.const.Handler(
                self.GetInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.memcache.v1beta2.cloud_memcache_pb2.GetInstanceRequest,
                google.cloud.memcache.v1beta2.cloud_memcache_pb2.Instance,
            ),
            '/google.cloud.memcache.v1beta2.CloudMemcache/CreateInstance': grpclib.const.Handler(
                self.CreateInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.memcache.v1beta2.cloud_memcache_pb2.CreateInstanceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.memcache.v1beta2.CloudMemcache/UpdateInstance': grpclib.const.Handler(
                self.UpdateInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.memcache.v1beta2.cloud_memcache_pb2.UpdateInstanceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.memcache.v1beta2.CloudMemcache/UpdateParameters': grpclib.const.Handler(
                self.UpdateParameters,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.memcache.v1beta2.cloud_memcache_pb2.UpdateParametersRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.memcache.v1beta2.CloudMemcache/DeleteInstance': grpclib.const.Handler(
                self.DeleteInstance,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.memcache.v1beta2.cloud_memcache_pb2.DeleteInstanceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.memcache.v1beta2.CloudMemcache/ApplyParameters': grpclib.const.Handler(
                self.ApplyParameters,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.memcache.v1beta2.cloud_memcache_pb2.ApplyParametersRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.memcache.v1beta2.CloudMemcache/ApplySoftwareUpdate': grpclib.const.Handler(
                self.ApplySoftwareUpdate,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.memcache.v1beta2.cloud_memcache_pb2.ApplySoftwareUpdateRequest,
                google.longrunning.operations_pb2.Operation,
            ),
        }


class CloudMemcacheStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListInstances = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.memcache.v1beta2.CloudMemcache/ListInstances',
            google.cloud.memcache.v1beta2.cloud_memcache_pb2.ListInstancesRequest,
            google.cloud.memcache.v1beta2.cloud_memcache_pb2.ListInstancesResponse,
        )
        self.GetInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.memcache.v1beta2.CloudMemcache/GetInstance',
            google.cloud.memcache.v1beta2.cloud_memcache_pb2.GetInstanceRequest,
            google.cloud.memcache.v1beta2.cloud_memcache_pb2.Instance,
        )
        self.CreateInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.memcache.v1beta2.CloudMemcache/CreateInstance',
            google.cloud.memcache.v1beta2.cloud_memcache_pb2.CreateInstanceRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.UpdateInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.memcache.v1beta2.CloudMemcache/UpdateInstance',
            google.cloud.memcache.v1beta2.cloud_memcache_pb2.UpdateInstanceRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.UpdateParameters = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.memcache.v1beta2.CloudMemcache/UpdateParameters',
            google.cloud.memcache.v1beta2.cloud_memcache_pb2.UpdateParametersRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.DeleteInstance = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.memcache.v1beta2.CloudMemcache/DeleteInstance',
            google.cloud.memcache.v1beta2.cloud_memcache_pb2.DeleteInstanceRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ApplyParameters = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.memcache.v1beta2.CloudMemcache/ApplyParameters',
            google.cloud.memcache.v1beta2.cloud_memcache_pb2.ApplyParametersRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ApplySoftwareUpdate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.memcache.v1beta2.CloudMemcache/ApplySoftwareUpdate',
            google.cloud.memcache.v1beta2.cloud_memcache_pb2.ApplySoftwareUpdateRequest,
            google.longrunning.operations_pb2.Operation,
        )
