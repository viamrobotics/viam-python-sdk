"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SecretEvent(google.protobuf.message.Message):
    """Logged event relating to a specific secret"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EventType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EventTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EventType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        EVENT_TYPE_UNSPECIFIED: SecretEvent.EventType.ValueType = ...  # 0
        """An unrecognized event type. Should never be used."""

        EXPIRES_IN_30_DAYS: SecretEvent.EventType.ValueType = ...  # 1
        """The secret is scheduled to expire in 30 days."""

        EXPIRES_IN_7_DAYS: SecretEvent.EventType.ValueType = ...  # 2
        """The secret is scheduled to expire in 7 days."""

        EXPIRES_IN_1_DAY: SecretEvent.EventType.ValueType = ...  # 3
        """The secret is scheduled to expire in 1 day."""

        EXPIRES_IN_6_HOURS: SecretEvent.EventType.ValueType = ...  # 4
        """The secret is scheduled to expire in 6 hours."""

        EXPIRES_IN_1_HOUR: SecretEvent.EventType.ValueType = ...  # 5
        """The secret is scheduled to expire in 1 hour."""

        EXPIRED: SecretEvent.EventType.ValueType = ...  # 6
        """The secret's expire-time has passed and it has expired."""

        TOPIC_NOT_FOUND: SecretEvent.EventType.ValueType = ...  # 7
        """A Pub/Sub topic configured on the secret could not be found."""

        TOPIC_PERMISSION_DENIED: SecretEvent.EventType.ValueType = ...  # 8
        """A Pub/Sub topic configured on the secret does not have the needed
        permissions. The Secret Manager P4SA must be granted
        'pubsub.topic.publish' permission (or 'roles/pubsub.publisher') on the
        topic.
        """

    class EventType(_EventType, metaclass=_EventTypeEnumTypeWrapper):
        """Describes the type of event that is being logged. All logs have exactly one
        EventType.
        """
        pass

    EVENT_TYPE_UNSPECIFIED: SecretEvent.EventType.ValueType = ...  # 0
    """An unrecognized event type. Should never be used."""

    EXPIRES_IN_30_DAYS: SecretEvent.EventType.ValueType = ...  # 1
    """The secret is scheduled to expire in 30 days."""

    EXPIRES_IN_7_DAYS: SecretEvent.EventType.ValueType = ...  # 2
    """The secret is scheduled to expire in 7 days."""

    EXPIRES_IN_1_DAY: SecretEvent.EventType.ValueType = ...  # 3
    """The secret is scheduled to expire in 1 day."""

    EXPIRES_IN_6_HOURS: SecretEvent.EventType.ValueType = ...  # 4
    """The secret is scheduled to expire in 6 hours."""

    EXPIRES_IN_1_HOUR: SecretEvent.EventType.ValueType = ...  # 5
    """The secret is scheduled to expire in 1 hour."""

    EXPIRED: SecretEvent.EventType.ValueType = ...  # 6
    """The secret's expire-time has passed and it has expired."""

    TOPIC_NOT_FOUND: SecretEvent.EventType.ValueType = ...  # 7
    """A Pub/Sub topic configured on the secret could not be found."""

    TOPIC_PERMISSION_DENIED: SecretEvent.EventType.ValueType = ...  # 8
    """A Pub/Sub topic configured on the secret does not have the needed
    permissions. The Secret Manager P4SA must be granted
    'pubsub.topic.publish' permission (or 'roles/pubsub.publisher') on the
    topic.
    """


    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    LOG_MESSAGE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Resource name of the secret in the format `projects/*/secrets/*`"""

    type: global___SecretEvent.EventType.ValueType = ...
    """Type of event that is being logged for the secret"""

    log_message: typing.Text = ...
    """Human readable message describing the event"""

    def __init__(self,
        *,
        name : typing.Text = ...,
        type : global___SecretEvent.EventType.ValueType = ...,
        log_message : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["log_message",b"log_message","name",b"name","type",b"type"]) -> None: ...
global___SecretEvent = SecretEvent
