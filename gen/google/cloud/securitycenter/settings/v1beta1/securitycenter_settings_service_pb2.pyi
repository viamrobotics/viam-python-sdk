"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.securitycenter.settings.v1beta1.component_settings_pb2
import google.cloud.securitycenter.settings.v1beta1.detector_pb2
import google.cloud.securitycenter.settings.v1beta1.settings_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class GetServiceAccountRequest(google.protobuf.message.Message):
    """Request message for GetServiceAccount."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The relative resource name of the service account resource.
    Format:
     * `organizations/{organization}/serviceAccount`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetServiceAccountRequest = GetServiceAccountRequest

class ServiceAccount(google.protobuf.message.Message):
    """An organization-level service account to be used by threat detection
    components.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The relative resource name of the service account resource.
    Format:
     * `organizations/{organization}/serviceAccount`
    """

    service_account: typing.Text = ...
    """Security Center managed service account for the organization
    example service-org-1234@scc.iam.gserviceaccount.com
    This service_account will be stored in the ComponentSettings field for the
    SCC, SHA, and Infra Automation components.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        service_account : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","service_account",b"service_account"]) -> None: ...
global___ServiceAccount = ServiceAccount

class GetSettingsRequest(google.protobuf.message.Message):
    """Request message for GetSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the settings to retrieve.
    Formats:
     * `organizations/{organization}/settings`
     * `folders/{folder}/settings`
     * `projects/{project}/settings`
     * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
     * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
     * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetSettingsRequest = GetSettingsRequest

class UpdateSettingsRequest(google.protobuf.message.Message):
    """Request message for UpdateSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SETTINGS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def settings(self) -> google.cloud.securitycenter.settings.v1beta1.settings_pb2.Settings:
        """Required. The settings to update.

        The settings' `name` field is used to identify the settings to be updated.
        Formats:
         * `organizations/{organization}/settings`
         * `folders/{folder}/settings`
         * `projects/{project}/settings`
         * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
         * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
         * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated on the settings."""
        pass
    def __init__(self,
        *,
        settings : typing.Optional[google.cloud.securitycenter.settings.v1beta1.settings_pb2.Settings] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["settings",b"settings","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["settings",b"settings","update_mask",b"update_mask"]) -> None: ...
global___UpdateSettingsRequest = UpdateSettingsRequest

class ResetSettingsRequest(google.protobuf.message.Message):
    """Request message for ResetSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the settings to reset.
    Formats:
     * `organizations/{organization}/settings`
     * `folders/{folder}/settings`
     * `projects/{project}/settings`
     * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
     * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
     * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
    """

    etag: typing.Text = ...
    """A fingerprint used for optimistic concurrency. If none is provided,
    then the existing settings will be blindly overwritten.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["etag",b"etag","name",b"name"]) -> None: ...
global___ResetSettingsRequest = ResetSettingsRequest

class BatchGetSettingsRequest(google.protobuf.message.Message):
    """Request message for BatchGetSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    NAMES_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The relative resource name of the organization shared by all of the
    settings being retrieved.
    Format:
     * `organizations/{organization}`
    """

    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The names of the settings to retrieve.
        A maximum of 1000 settings can be retrieved in a batch.
        Formats:
         * `organizations/{organization}/settings`
         * `folders/{folder}/settings`
         * `projects/{project}/settings`
         * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
         * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
         * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["names",b"names","parent",b"parent"]) -> None: ...
global___BatchGetSettingsRequest = BatchGetSettingsRequest

class BatchGetSettingsResponse(google.protobuf.message.Message):
    """Response message for BatchGetSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SETTINGS_FIELD_NUMBER: builtins.int
    @property
    def settings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.securitycenter.settings.v1beta1.settings_pb2.Settings]:
        """Settings requested."""
        pass
    def __init__(self,
        *,
        settings : typing.Optional[typing.Iterable[google.cloud.securitycenter.settings.v1beta1.settings_pb2.Settings]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["settings",b"settings"]) -> None: ...
global___BatchGetSettingsResponse = BatchGetSettingsResponse

class CalculateEffectiveSettingsRequest(google.protobuf.message.Message):
    """Request message for CalculateEffectiveSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the effective settings to retrieve.
    Formats:
     * `organizations/{organization}/effectiveSettings`
     * `folders/{folder}/effectiveSettings`
     * `projects/{project}/effectiveSettings`
     * `projects/{project}/locations/{location}/clusters/{cluster}/effectiveSettings`
     * `projects/{project}/regions/{region}/clusters/{cluster}/effectiveSettings`
     * `projects/{project}/zones/{zone}/clusters/{cluster}/effectiveSettings`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___CalculateEffectiveSettingsRequest = CalculateEffectiveSettingsRequest

class BatchCalculateEffectiveSettingsRequest(google.protobuf.message.Message):
    """Request message for BatchGetEffectiveSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    REQUESTS_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The relative resource name of the organization shared by all of the
    settings being retrieved.
    Format:
     * `organizations/{organization}`
    """

    @property
    def requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CalculateEffectiveSettingsRequest]:
        """The requests specifying the effective settings to retrieve.
        A maximum of 1000 effective settings can be retrieved in a batch.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        requests : typing.Optional[typing.Iterable[global___CalculateEffectiveSettingsRequest]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","requests",b"requests"]) -> None: ...
global___BatchCalculateEffectiveSettingsRequest = BatchCalculateEffectiveSettingsRequest

class BatchCalculateEffectiveSettingsResponse(google.protobuf.message.Message):
    """Response message for BatchGetEffectiveSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SETTINGS_FIELD_NUMBER: builtins.int
    @property
    def settings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.securitycenter.settings.v1beta1.settings_pb2.Settings]:
        """Settings requested."""
        pass
    def __init__(self,
        *,
        settings : typing.Optional[typing.Iterable[google.cloud.securitycenter.settings.v1beta1.settings_pb2.Settings]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["settings",b"settings"]) -> None: ...
global___BatchCalculateEffectiveSettingsResponse = BatchCalculateEffectiveSettingsResponse

class GetComponentSettingsRequest(google.protobuf.message.Message):
    """Request message for GetComponentSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The component settings to retrieve.

    Formats:
     * `organizations/{organization}/components/{component}/settings`
     * `folders/{folder}/components/{component}/settings`
     * `projects/{project}/components/{component}/settings`
     * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
     * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
     * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetComponentSettingsRequest = GetComponentSettingsRequest

class UpdateComponentSettingsRequest(google.protobuf.message.Message):
    """Request message for UpdateComponentSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMPONENT_SETTINGS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def component_settings(self) -> google.cloud.securitycenter.settings.v1beta1.component_settings_pb2.ComponentSettings:
        """Required. The component settings to update.

        The component settings' `name` field is used to identify the component
        settings to be updated. Formats:
         * `organizations/{organization}/components/{component}/settings`
         * `folders/{folder}/components/{component}/settings`
         * `projects/{project}/components/{component}/settings`
         * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
         * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
         * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated on the component settings resource."""
        pass
    def __init__(self,
        *,
        component_settings : typing.Optional[google.cloud.securitycenter.settings.v1beta1.component_settings_pb2.ComponentSettings] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["component_settings",b"component_settings","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["component_settings",b"component_settings","update_mask",b"update_mask"]) -> None: ...
global___UpdateComponentSettingsRequest = UpdateComponentSettingsRequest

class ResetComponentSettingsRequest(google.protobuf.message.Message):
    """Request message for ResetComponentSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The component settings to reset.

    Formats:
     * `organizations/{organization}/components/{component}/settings`
     * `folders/{folder}/components/{component}/settings`
     * `projects/{project}/components/{component}/settings`
     * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
     * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
     * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
    """

    etag: typing.Text = ...
    """An fingerprint used for optimistic concurrency. If none is provided,
    then the existing settings will be blindly overwritten.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["etag",b"etag","name",b"name"]) -> None: ...
global___ResetComponentSettingsRequest = ResetComponentSettingsRequest

class CalculateEffectiveComponentSettingsRequest(google.protobuf.message.Message):
    """Request message for CalculateEffectiveComponentSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The effective component settings to retrieve.

    Formats:
     * `organizations/{organization}/components/{component}/settings`
     * `folders/{folder}/components/{component}/settings`
     * `projects/{project}/components/{component}/settings`
     * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
     * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
     * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___CalculateEffectiveComponentSettingsRequest = CalculateEffectiveComponentSettingsRequest

class ListDetectorsRequest(google.protobuf.message.Message):
    """Request message for ListDetectors."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent, which owns this collection of detectors.
    Format:
     * `organizations/{organization}`
    """

    filter: typing.Text = ...
    """Filters to apply on the response. Filters can be applied on:
     * components
     * labels
     * billing tiers

    Component filters will retrieve only detectors for the components
    specified. Label filters will retrieve only detectors that match one of the
    labels specified. Billing tier filters will retrieve only detectors for
    that billing tier.

    The filters
    """

    page_size: builtins.int = ...
    """The maximum number of detectors to return. The service may return fewer
    than this value. If unspecified, at most 100 detectors will be returned.
    The maximum value is 1000; values above 1000 will be coerced to 1000.
    """

    page_token: typing.Text = ...
    """A page token, received from a previous `ListDetectors` call.
    Provide this to retrieve the subsequent page.

    When paginating, all other parameters provided to `ListDetectors` must
    match the call that provided the page token.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListDetectorsRequest = ListDetectorsRequest

class ListDetectorsResponse(google.protobuf.message.Message):
    """Response message for ListDetectors."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DETECTORS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def detectors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.securitycenter.settings.v1beta1.detector_pb2.Detector]:
        """The detectors from the specified organization."""
        pass
    next_page_token: typing.Text = ...
    """A token that can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    def __init__(self,
        *,
        detectors : typing.Optional[typing.Iterable[google.cloud.securitycenter.settings.v1beta1.detector_pb2.Detector]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["detectors",b"detectors","next_page_token",b"next_page_token"]) -> None: ...
global___ListDetectorsResponse = ListDetectorsResponse

class ListComponentsRequest(google.protobuf.message.Message):
    """Request message for ListComponents."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent, which owns this collection of components.
    Format:
     * `organizations/{organization}`
    """

    page_size: builtins.int = ...
    """The maximum number of components to return. The service may return fewer
    than this value. If unspecified, at most 100 components will be returned.
    The maximum value is 1000; values above 1000 will be coerced to 1000.
    """

    page_token: typing.Text = ...
    """A page token, received from a previous `ListComponents` call.
    Provide this to retrieve the subsequent page.

    When paginating, all other parameters provided to `ListComponents` must
    match the call that provided the page token.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListComponentsRequest = ListComponentsRequest

class ListComponentsResponse(google.protobuf.message.Message):
    """Response message for ListComponents."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMPONENTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def components(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The components from the specified organization."""
        pass
    next_page_token: typing.Text = ...
    """A token that can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    def __init__(self,
        *,
        components : typing.Optional[typing.Iterable[typing.Text]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["components",b"components","next_page_token",b"next_page_token"]) -> None: ...
global___ListComponentsResponse = ListComponentsResponse
