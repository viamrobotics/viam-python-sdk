"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class NotificationConfig(google.protobuf.message.Message):
    """Cloud Security Command Center (Cloud SCC) notification configs.

    A notification config is a Cloud SCC resource that contains the configuration
    to send notifications for create/update events of findings, assets and etc.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class StreamingConfig(google.protobuf.message.Message):
        """The config for streaming-based notifications, which send each event as soon
        as it is detected.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FILTER_FIELD_NUMBER: builtins.int
        filter: typing.Text = ...
        """Expression that defines the filter to apply across create/update events
        of assets or findings as specified by the event type. The expression is a
        list of zero or more restrictions combined via logical operators `AND`
        and `OR`. Parentheses are supported, and `OR` has higher precedence than
        `AND`.

        Restrictions have the form `<field> <operator> <value>` and may have a
        `-` character in front of them to indicate negation. The fields map to
        those defined in the corresponding resource.

        The supported operators are:

        * `=` for all value types.
        * `>`, `<`, `>=`, `<=` for integer values.
        * `:`, meaning substring matching, for strings.

        The supported value types are:

        * string literals in quotes.
        * integer literals without quotes.
        * boolean literals `true` and `false` without quotes.
        """

        def __init__(self,
            *,
            filter : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    PUBSUB_TOPIC_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    STREAMING_CONFIG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The relative resource name of this notification config. See:
    https://cloud.google.com/apis/design/resource_names#relative_resource_name
    Example:
    "organizations/{organization_id}/notificationConfigs/notify_public_bucket".
    """

    description: typing.Text = ...
    """The description of the notification config (max of 1024 characters)."""

    pubsub_topic: typing.Text = ...
    """The Pub/Sub topic to send notifications to. Its format is
    "projects/[project_id]/topics/[topic]".
    """

    service_account: typing.Text = ...
    """Output only. The service account that needs "pubsub.topics.publish"
    permission to publish to the Pub/Sub topic.
    """

    @property
    def streaming_config(self) -> global___NotificationConfig.StreamingConfig:
        """The config for triggering streaming-based notifications."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        pubsub_topic : typing.Text = ...,
        service_account : typing.Text = ...,
        streaming_config : typing.Optional[global___NotificationConfig.StreamingConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["notify_config",b"notify_config","streaming_config",b"streaming_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","name",b"name","notify_config",b"notify_config","pubsub_topic",b"pubsub_topic","service_account",b"service_account","streaming_config",b"streaming_config"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["notify_config",b"notify_config"]) -> typing.Optional[typing_extensions.Literal["streaming_config"]]: ...
global___NotificationConfig = NotificationConfig
