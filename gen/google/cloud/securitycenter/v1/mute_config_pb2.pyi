"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class MuteConfig(google.protobuf.message.Message):
    """A mute config is a Cloud SCC resource that contains the configuration
    to mute create/update events of findings.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    MOST_RECENT_EDITOR_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """This field will be ignored if provided on config creation. Format
    "organizations/{organization}/muteConfigs/{mute_config}"
    "folders/{folder}/muteConfigs/{mute_config}"
    "projects/{project}/muteConfigs/{mute_config}"
    """

    display_name: typing.Text = ...
    """The human readable name to be displayed for the mute config."""

    description: typing.Text = ...
    """A description of the mute config."""

    filter: typing.Text = ...
    """Required. An expression that defines the filter to apply across create/update events
    of findings. While creating a filter string, be mindful of the
    scope in which the mute configuration is being created. E.g., If a filter
    contains project = X but is created under the project = Y scope, it might
    not match any findings.

    The following field and operator combinations are supported:

    * severity: `=`, `:`
    * category: `=`, `:`
    * resource.name: `=`, `:`
    * resource.project_name: `=`, `:`
    * resource.project_display_name: `=`, `:`
    * resource.folders.resource_folder: `=`, `:`
    * resource.parent_name: `=`, `:`
    * resource.parent_display_name: `=`, `:`
    * resource.type: `=`, `:`
    * finding_class: `=`, `:`
    * indicator.ip_addresses: `=`, `:`
    * indicator.domains: `=`, `:`
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time at which the mute config was created.
        This field is set by the server and will be ignored if provided on config
        creation.
        """
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The most recent time at which the mute config was updated.
        This field is set by the server and will be ignored if provided on config
        creation or update.
        """
        pass
    most_recent_editor: typing.Text = ...
    """Output only. Email address of the user who last edited the mute config.
    This field is set by the server and will be ignored if provided on config
    creation or update.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        filter : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        most_recent_editor : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","display_name",b"display_name","filter",b"filter","most_recent_editor",b"most_recent_editor","name",b"name","update_time",b"update_time"]) -> None: ...
global___MuteConfig = MuteConfig
