"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.osconfig.v1.osconfig_common_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ExecutePatchJobRequest(google.protobuf.message.Message):
    """A request message to initiate patching across Compute Engine
    instances.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    INSTANCE_FILTER_FIELD_NUMBER: builtins.int
    PATCH_CONFIG_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    DRY_RUN_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    ROLLOUT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The project in which to run this patch in the form `projects/*`"""

    description: typing.Text = ...
    """Description of the patch job. Length of the description is limited
    to 1024 characters.
    """

    @property
    def instance_filter(self) -> global___PatchInstanceFilter:
        """Required. Instances to patch, either explicitly or filtered by some
        criteria such as zone or labels.
        """
        pass
    @property
    def patch_config(self) -> global___PatchConfig:
        """Patch configuration being applied. If omitted, instances are
        patched using the default configurations.
        """
        pass
    @property
    def duration(self) -> google.protobuf.duration_pb2.Duration:
        """Duration of the patch job. After the duration ends, the patch job
        times out.
        """
        pass
    dry_run: builtins.bool = ...
    """If this patch is a dry-run only, instances are contacted but
    will do nothing.
    """

    display_name: typing.Text = ...
    """Display name for this patch job. This does not have to be unique."""

    @property
    def rollout(self) -> global___PatchRollout:
        """Rollout strategy of the patch job."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        description : typing.Text = ...,
        instance_filter : typing.Optional[global___PatchInstanceFilter] = ...,
        patch_config : typing.Optional[global___PatchConfig] = ...,
        duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        dry_run : builtins.bool = ...,
        display_name : typing.Text = ...,
        rollout : typing.Optional[global___PatchRollout] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["duration",b"duration","instance_filter",b"instance_filter","patch_config",b"patch_config","rollout",b"rollout"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","display_name",b"display_name","dry_run",b"dry_run","duration",b"duration","instance_filter",b"instance_filter","parent",b"parent","patch_config",b"patch_config","rollout",b"rollout"]) -> None: ...
global___ExecutePatchJobRequest = ExecutePatchJobRequest

class GetPatchJobRequest(google.protobuf.message.Message):
    """Request to get an active or completed patch job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the patch in the form `projects/*/patchJobs/*`"""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetPatchJobRequest = GetPatchJobRequest

class ListPatchJobInstanceDetailsRequest(google.protobuf.message.Message):
    """Request to list details for all instances that are part of a patch job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent for the instances are in the form of
    `projects/*/patchJobs/*`.
    """

    page_size: builtins.int = ...
    """The maximum number of instance details records to return.  Default is 100."""

    page_token: typing.Text = ...
    """A pagination token returned from a previous call
    that indicates where this listing should continue from.
    """

    filter: typing.Text = ...
    """A filter expression that filters results listed in the response. This
    field supports filtering results by instance zone, name, state, or
    `failure_reason`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListPatchJobInstanceDetailsRequest = ListPatchJobInstanceDetailsRequest

class ListPatchJobInstanceDetailsResponse(google.protobuf.message.Message):
    """A response message for listing the instances details for a patch job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PATCH_JOB_INSTANCE_DETAILS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def patch_job_instance_details(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PatchJobInstanceDetails]:
        """A list of instance status."""
        pass
    next_page_token: typing.Text = ...
    """A pagination token that can be used to get the next page of results."""

    def __init__(self,
        *,
        patch_job_instance_details : typing.Optional[typing.Iterable[global___PatchJobInstanceDetails]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","patch_job_instance_details",b"patch_job_instance_details"]) -> None: ...
global___ListPatchJobInstanceDetailsResponse = ListPatchJobInstanceDetailsResponse

class PatchJobInstanceDetails(google.protobuf.message.Message):
    """Patch details for a VM instance. For more information about reviewing VM
    instance details, see
    [Listing all VM instance details for a specific patch
    job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    INSTANCE_SYSTEM_ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    FAILURE_REASON_FIELD_NUMBER: builtins.int
    ATTEMPT_COUNT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The instance name in the form `projects/*/zones/*/instances/*`"""

    instance_system_id: typing.Text = ...
    """The unique identifier for the instance. This identifier is
    defined by the server.
    """

    state: global___Instance.PatchState.ValueType = ...
    """Current state of instance patch."""

    failure_reason: typing.Text = ...
    """If the patch fails, this field provides the reason."""

    attempt_count: builtins.int = ...
    """The number of times the agent that the agent attempts to apply the patch."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        instance_system_id : typing.Text = ...,
        state : global___Instance.PatchState.ValueType = ...,
        failure_reason : typing.Text = ...,
        attempt_count : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["attempt_count",b"attempt_count","failure_reason",b"failure_reason","instance_system_id",b"instance_system_id","name",b"name","state",b"state"]) -> None: ...
global___PatchJobInstanceDetails = PatchJobInstanceDetails

class ListPatchJobsRequest(google.protobuf.message.Message):
    """A request message for listing patch jobs."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. In the form of `projects/*`"""

    page_size: builtins.int = ...
    """The maximum number of instance status to return."""

    page_token: typing.Text = ...
    """A pagination token returned from a previous call
    that indicates where this listing should continue from.
    """

    filter: typing.Text = ...
    """If provided, this field specifies the criteria that must be met by patch
    jobs to be included in the response.
    Currently, filtering is only available on the patch_deployment field.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListPatchJobsRequest = ListPatchJobsRequest

class ListPatchJobsResponse(google.protobuf.message.Message):
    """A response message for listing patch jobs."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PATCH_JOBS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def patch_jobs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PatchJob]:
        """The list of patch jobs."""
        pass
    next_page_token: typing.Text = ...
    """A pagination token that can be used to get the next page of results."""

    def __init__(self,
        *,
        patch_jobs : typing.Optional[typing.Iterable[global___PatchJob]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","patch_jobs",b"patch_jobs"]) -> None: ...
global___ListPatchJobsResponse = ListPatchJobsResponse

class PatchJob(google.protobuf.message.Message):
    """A high level representation of a patch job that is either in progress
    or has completed.

    Instance details are not included in the job. To paginate through instance
    details, use ListPatchJobInstanceDetails.

    For more information about patch jobs, see
    [Creating patch
    jobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: PatchJob.State.ValueType = ...  # 0
        """State must be specified."""

        STARTED: PatchJob.State.ValueType = ...  # 1
        """The patch job was successfully initiated."""

        INSTANCE_LOOKUP: PatchJob.State.ValueType = ...  # 2
        """The patch job is looking up instances to run the patch on."""

        PATCHING: PatchJob.State.ValueType = ...  # 3
        """Instances are being patched."""

        SUCCEEDED: PatchJob.State.ValueType = ...  # 4
        """Patch job completed successfully."""

        COMPLETED_WITH_ERRORS: PatchJob.State.ValueType = ...  # 5
        """Patch job completed but there were errors."""

        CANCELED: PatchJob.State.ValueType = ...  # 6
        """The patch job was canceled."""

        TIMED_OUT: PatchJob.State.ValueType = ...  # 7
        """The patch job timed out."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Enumeration of the various states a patch job passes through as it
        executes.
        """
        pass

    STATE_UNSPECIFIED: PatchJob.State.ValueType = ...  # 0
    """State must be specified."""

    STARTED: PatchJob.State.ValueType = ...  # 1
    """The patch job was successfully initiated."""

    INSTANCE_LOOKUP: PatchJob.State.ValueType = ...  # 2
    """The patch job is looking up instances to run the patch on."""

    PATCHING: PatchJob.State.ValueType = ...  # 3
    """Instances are being patched."""

    SUCCEEDED: PatchJob.State.ValueType = ...  # 4
    """Patch job completed successfully."""

    COMPLETED_WITH_ERRORS: PatchJob.State.ValueType = ...  # 5
    """Patch job completed but there were errors."""

    CANCELED: PatchJob.State.ValueType = ...  # 6
    """The patch job was canceled."""

    TIMED_OUT: PatchJob.State.ValueType = ...  # 7
    """The patch job timed out."""


    class InstanceDetailsSummary(google.protobuf.message.Message):
        """A summary of the current patch state across all instances that this patch
        job affects. Contains counts of instances in different states. These states
        map to `InstancePatchState`. List patch job instance details to see the
        specific states of each instance.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PENDING_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        INACTIVE_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        NOTIFIED_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        STARTED_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        DOWNLOADING_PATCHES_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        APPLYING_PATCHES_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        REBOOTING_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        SUCCEEDED_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        SUCCEEDED_REBOOT_REQUIRED_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        FAILED_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        ACKED_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        TIMED_OUT_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        PRE_PATCH_STEP_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        POST_PATCH_STEP_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        NO_AGENT_DETECTED_INSTANCE_COUNT_FIELD_NUMBER: builtins.int
        pending_instance_count: builtins.int = ...
        """Number of instances pending patch job."""

        inactive_instance_count: builtins.int = ...
        """Number of instances that are inactive."""

        notified_instance_count: builtins.int = ...
        """Number of instances notified about patch job."""

        started_instance_count: builtins.int = ...
        """Number of instances that have started."""

        downloading_patches_instance_count: builtins.int = ...
        """Number of instances that are downloading patches."""

        applying_patches_instance_count: builtins.int = ...
        """Number of instances that are applying patches."""

        rebooting_instance_count: builtins.int = ...
        """Number of instances rebooting."""

        succeeded_instance_count: builtins.int = ...
        """Number of instances that have completed successfully."""

        succeeded_reboot_required_instance_count: builtins.int = ...
        """Number of instances that require reboot."""

        failed_instance_count: builtins.int = ...
        """Number of instances that failed."""

        acked_instance_count: builtins.int = ...
        """Number of instances that have acked and will start shortly."""

        timed_out_instance_count: builtins.int = ...
        """Number of instances that exceeded the time out while applying the patch."""

        pre_patch_step_instance_count: builtins.int = ...
        """Number of instances that are running the pre-patch step."""

        post_patch_step_instance_count: builtins.int = ...
        """Number of instances that are running the post-patch step."""

        no_agent_detected_instance_count: builtins.int = ...
        """Number of instances that do not appear to be running the agent. Check to
        ensure that the agent is installed, running, and able to communicate with
        the service.
        """

        def __init__(self,
            *,
            pending_instance_count : builtins.int = ...,
            inactive_instance_count : builtins.int = ...,
            notified_instance_count : builtins.int = ...,
            started_instance_count : builtins.int = ...,
            downloading_patches_instance_count : builtins.int = ...,
            applying_patches_instance_count : builtins.int = ...,
            rebooting_instance_count : builtins.int = ...,
            succeeded_instance_count : builtins.int = ...,
            succeeded_reboot_required_instance_count : builtins.int = ...,
            failed_instance_count : builtins.int = ...,
            acked_instance_count : builtins.int = ...,
            timed_out_instance_count : builtins.int = ...,
            pre_patch_step_instance_count : builtins.int = ...,
            post_patch_step_instance_count : builtins.int = ...,
            no_agent_detected_instance_count : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["acked_instance_count",b"acked_instance_count","applying_patches_instance_count",b"applying_patches_instance_count","downloading_patches_instance_count",b"downloading_patches_instance_count","failed_instance_count",b"failed_instance_count","inactive_instance_count",b"inactive_instance_count","no_agent_detected_instance_count",b"no_agent_detected_instance_count","notified_instance_count",b"notified_instance_count","pending_instance_count",b"pending_instance_count","post_patch_step_instance_count",b"post_patch_step_instance_count","pre_patch_step_instance_count",b"pre_patch_step_instance_count","rebooting_instance_count",b"rebooting_instance_count","started_instance_count",b"started_instance_count","succeeded_instance_count",b"succeeded_instance_count","succeeded_reboot_required_instance_count",b"succeeded_reboot_required_instance_count","timed_out_instance_count",b"timed_out_instance_count"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    INSTANCE_FILTER_FIELD_NUMBER: builtins.int
    PATCH_CONFIG_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    INSTANCE_DETAILS_SUMMARY_FIELD_NUMBER: builtins.int
    DRY_RUN_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    PERCENT_COMPLETE_FIELD_NUMBER: builtins.int
    PATCH_DEPLOYMENT_FIELD_NUMBER: builtins.int
    ROLLOUT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Unique identifier for this patch job in the form
    `projects/*/patchJobs/*`
    """

    display_name: typing.Text = ...
    """Display name for this patch job. This is not a unique identifier."""

    description: typing.Text = ...
    """Description of the patch job. Length of the description is limited
    to 1024 characters.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time this patch job was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Last time this patch job was updated."""
        pass
    state: global___PatchJob.State.ValueType = ...
    """The current state of the PatchJob."""

    @property
    def instance_filter(self) -> global___PatchInstanceFilter:
        """Instances to patch."""
        pass
    @property
    def patch_config(self) -> global___PatchConfig:
        """Patch configuration being applied."""
        pass
    @property
    def duration(self) -> google.protobuf.duration_pb2.Duration:
        """Duration of the patch job. After the duration ends, the
        patch job times out.
        """
        pass
    @property
    def instance_details_summary(self) -> global___PatchJob.InstanceDetailsSummary:
        """Summary of instance details."""
        pass
    dry_run: builtins.bool = ...
    """If this patch job is a dry run, the agent reports that it has
    finished without running any updates on the VM instance.
    """

    error_message: typing.Text = ...
    """If this patch job failed, this message provides information about the
    failure.
    """

    percent_complete: builtins.float = ...
    """Reflects the overall progress of the patch job in the range of
    0.0 being no progress to 100.0 being complete.
    """

    patch_deployment: typing.Text = ...
    """Output only. Name of the patch deployment that created this patch job."""

    @property
    def rollout(self) -> global___PatchRollout:
        """Rollout strategy being applied."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___PatchJob.State.ValueType = ...,
        instance_filter : typing.Optional[global___PatchInstanceFilter] = ...,
        patch_config : typing.Optional[global___PatchConfig] = ...,
        duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        instance_details_summary : typing.Optional[global___PatchJob.InstanceDetailsSummary] = ...,
        dry_run : builtins.bool = ...,
        error_message : typing.Text = ...,
        percent_complete : builtins.float = ...,
        patch_deployment : typing.Text = ...,
        rollout : typing.Optional[global___PatchRollout] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","duration",b"duration","instance_details_summary",b"instance_details_summary","instance_filter",b"instance_filter","patch_config",b"patch_config","rollout",b"rollout","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","display_name",b"display_name","dry_run",b"dry_run","duration",b"duration","error_message",b"error_message","instance_details_summary",b"instance_details_summary","instance_filter",b"instance_filter","name",b"name","patch_config",b"patch_config","patch_deployment",b"patch_deployment","percent_complete",b"percent_complete","rollout",b"rollout","state",b"state","update_time",b"update_time"]) -> None: ...
global___PatchJob = PatchJob

class PatchConfig(google.protobuf.message.Message):
    """Patch configuration specifications. Contains details on how to apply the
    patch(es) to a VM instance.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RebootConfig:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RebootConfigEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RebootConfig.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        REBOOT_CONFIG_UNSPECIFIED: PatchConfig.RebootConfig.ValueType = ...  # 0
        """The default behavior is DEFAULT."""

        DEFAULT: PatchConfig.RebootConfig.ValueType = ...  # 1
        """The agent decides if a reboot is necessary by checking signals such as
        registry keys on Windows or `/var/run/reboot-required` on APT based
        systems. On RPM based systems, a set of core system package install times
        are compared with system boot time.
        """

        ALWAYS: PatchConfig.RebootConfig.ValueType = ...  # 2
        """Always reboot the machine after the update completes."""

        NEVER: PatchConfig.RebootConfig.ValueType = ...  # 3
        """Never reboot the machine after the update completes."""

    class RebootConfig(_RebootConfig, metaclass=_RebootConfigEnumTypeWrapper):
        """Post-patch reboot settings."""
        pass

    REBOOT_CONFIG_UNSPECIFIED: PatchConfig.RebootConfig.ValueType = ...  # 0
    """The default behavior is DEFAULT."""

    DEFAULT: PatchConfig.RebootConfig.ValueType = ...  # 1
    """The agent decides if a reboot is necessary by checking signals such as
    registry keys on Windows or `/var/run/reboot-required` on APT based
    systems. On RPM based systems, a set of core system package install times
    are compared with system boot time.
    """

    ALWAYS: PatchConfig.RebootConfig.ValueType = ...  # 2
    """Always reboot the machine after the update completes."""

    NEVER: PatchConfig.RebootConfig.ValueType = ...  # 3
    """Never reboot the machine after the update completes."""


    REBOOT_CONFIG_FIELD_NUMBER: builtins.int
    APT_FIELD_NUMBER: builtins.int
    YUM_FIELD_NUMBER: builtins.int
    GOO_FIELD_NUMBER: builtins.int
    ZYPPER_FIELD_NUMBER: builtins.int
    WINDOWS_UPDATE_FIELD_NUMBER: builtins.int
    PRE_STEP_FIELD_NUMBER: builtins.int
    POST_STEP_FIELD_NUMBER: builtins.int
    reboot_config: global___PatchConfig.RebootConfig.ValueType = ...
    """Post-patch reboot settings."""

    @property
    def apt(self) -> global___AptSettings:
        """Apt update settings. Use this setting to override the default `apt` patch
        rules.
        """
        pass
    @property
    def yum(self) -> global___YumSettings:
        """Yum update settings. Use this setting to override the default `yum` patch
        rules.
        """
        pass
    @property
    def goo(self) -> global___GooSettings:
        """Goo update settings. Use this setting to override the default `goo` patch
        rules.
        """
        pass
    @property
    def zypper(self) -> global___ZypperSettings:
        """Zypper update settings. Use this setting to override the default `zypper`
        patch rules.
        """
        pass
    @property
    def windows_update(self) -> global___WindowsUpdateSettings:
        """Windows update settings. Use this override the default windows patch rules."""
        pass
    @property
    def pre_step(self) -> global___ExecStep:
        """The `ExecStep` to run before the patch update."""
        pass
    @property
    def post_step(self) -> global___ExecStep:
        """The `ExecStep` to run after the patch update."""
        pass
    def __init__(self,
        *,
        reboot_config : global___PatchConfig.RebootConfig.ValueType = ...,
        apt : typing.Optional[global___AptSettings] = ...,
        yum : typing.Optional[global___YumSettings] = ...,
        goo : typing.Optional[global___GooSettings] = ...,
        zypper : typing.Optional[global___ZypperSettings] = ...,
        windows_update : typing.Optional[global___WindowsUpdateSettings] = ...,
        pre_step : typing.Optional[global___ExecStep] = ...,
        post_step : typing.Optional[global___ExecStep] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["apt",b"apt","goo",b"goo","post_step",b"post_step","pre_step",b"pre_step","windows_update",b"windows_update","yum",b"yum","zypper",b"zypper"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["apt",b"apt","goo",b"goo","post_step",b"post_step","pre_step",b"pre_step","reboot_config",b"reboot_config","windows_update",b"windows_update","yum",b"yum","zypper",b"zypper"]) -> None: ...
global___PatchConfig = PatchConfig

class Instance(google.protobuf.message.Message):
    """Namespace for instance state enums."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PatchState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PatchStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PatchState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PATCH_STATE_UNSPECIFIED: Instance.PatchState.ValueType = ...  # 0
        """Unspecified."""

        PENDING: Instance.PatchState.ValueType = ...  # 1
        """The instance is not yet notified."""

        INACTIVE: Instance.PatchState.ValueType = ...  # 2
        """Instance is inactive and cannot be patched."""

        NOTIFIED: Instance.PatchState.ValueType = ...  # 3
        """The instance is notified that it should be patched."""

        STARTED: Instance.PatchState.ValueType = ...  # 4
        """The instance has started the patching process."""

        DOWNLOADING_PATCHES: Instance.PatchState.ValueType = ...  # 5
        """The instance is downloading patches."""

        APPLYING_PATCHES: Instance.PatchState.ValueType = ...  # 6
        """The instance is applying patches."""

        REBOOTING: Instance.PatchState.ValueType = ...  # 7
        """The instance is rebooting."""

        SUCCEEDED: Instance.PatchState.ValueType = ...  # 8
        """The instance has completed applying patches."""

        SUCCEEDED_REBOOT_REQUIRED: Instance.PatchState.ValueType = ...  # 9
        """The instance has completed applying patches but a reboot is required."""

        FAILED: Instance.PatchState.ValueType = ...  # 10
        """The instance has failed to apply the patch."""

        ACKED: Instance.PatchState.ValueType = ...  # 11
        """The instance acked the notification and will start shortly."""

        TIMED_OUT: Instance.PatchState.ValueType = ...  # 12
        """The instance exceeded the time out while applying the patch."""

        RUNNING_PRE_PATCH_STEP: Instance.PatchState.ValueType = ...  # 13
        """The instance is running the pre-patch step."""

        RUNNING_POST_PATCH_STEP: Instance.PatchState.ValueType = ...  # 14
        """The instance is running the post-patch step."""

        NO_AGENT_DETECTED: Instance.PatchState.ValueType = ...  # 15
        """The service could not detect the presence of the agent. Check to ensure
        that the agent is installed, running, and able to communicate with the
        service.
        """

    class PatchState(_PatchState, metaclass=_PatchStateEnumTypeWrapper):
        """Patch state of an instance."""
        pass

    PATCH_STATE_UNSPECIFIED: Instance.PatchState.ValueType = ...  # 0
    """Unspecified."""

    PENDING: Instance.PatchState.ValueType = ...  # 1
    """The instance is not yet notified."""

    INACTIVE: Instance.PatchState.ValueType = ...  # 2
    """Instance is inactive and cannot be patched."""

    NOTIFIED: Instance.PatchState.ValueType = ...  # 3
    """The instance is notified that it should be patched."""

    STARTED: Instance.PatchState.ValueType = ...  # 4
    """The instance has started the patching process."""

    DOWNLOADING_PATCHES: Instance.PatchState.ValueType = ...  # 5
    """The instance is downloading patches."""

    APPLYING_PATCHES: Instance.PatchState.ValueType = ...  # 6
    """The instance is applying patches."""

    REBOOTING: Instance.PatchState.ValueType = ...  # 7
    """The instance is rebooting."""

    SUCCEEDED: Instance.PatchState.ValueType = ...  # 8
    """The instance has completed applying patches."""

    SUCCEEDED_REBOOT_REQUIRED: Instance.PatchState.ValueType = ...  # 9
    """The instance has completed applying patches but a reboot is required."""

    FAILED: Instance.PatchState.ValueType = ...  # 10
    """The instance has failed to apply the patch."""

    ACKED: Instance.PatchState.ValueType = ...  # 11
    """The instance acked the notification and will start shortly."""

    TIMED_OUT: Instance.PatchState.ValueType = ...  # 12
    """The instance exceeded the time out while applying the patch."""

    RUNNING_PRE_PATCH_STEP: Instance.PatchState.ValueType = ...  # 13
    """The instance is running the pre-patch step."""

    RUNNING_POST_PATCH_STEP: Instance.PatchState.ValueType = ...  # 14
    """The instance is running the post-patch step."""

    NO_AGENT_DETECTED: Instance.PatchState.ValueType = ...  # 15
    """The service could not detect the presence of the agent. Check to ensure
    that the agent is installed, running, and able to communicate with the
    service.
    """


    def __init__(self,
        ) -> None: ...
global___Instance = Instance

class CancelPatchJobRequest(google.protobuf.message.Message):
    """Message for canceling a patch job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the patch in the form `projects/*/patchJobs/*`"""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___CancelPatchJobRequest = CancelPatchJobRequest

class AptSettings(google.protobuf.message.Message):
    """Apt patching is completed by executing `apt-get update && apt-get
    upgrade`. Additional options can be set to control how this is executed.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TYPE_UNSPECIFIED: AptSettings.Type.ValueType = ...  # 0
        """By default, upgrade will be performed."""

        DIST: AptSettings.Type.ValueType = ...  # 1
        """Runs `apt-get dist-upgrade`."""

        UPGRADE: AptSettings.Type.ValueType = ...  # 2
        """Runs `apt-get upgrade`."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Apt patch type."""
        pass

    TYPE_UNSPECIFIED: AptSettings.Type.ValueType = ...  # 0
    """By default, upgrade will be performed."""

    DIST: AptSettings.Type.ValueType = ...  # 1
    """Runs `apt-get dist-upgrade`."""

    UPGRADE: AptSettings.Type.ValueType = ...  # 2
    """Runs `apt-get upgrade`."""


    TYPE_FIELD_NUMBER: builtins.int
    EXCLUDES_FIELD_NUMBER: builtins.int
    EXCLUSIVE_PACKAGES_FIELD_NUMBER: builtins.int
    type: global___AptSettings.Type.ValueType = ...
    """By changing the type to DIST, the patching is performed
    using `apt-get dist-upgrade` instead.
    """

    @property
    def excludes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of packages to exclude from update. These packages will be excluded"""
        pass
    @property
    def exclusive_packages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An exclusive list of packages to be updated. These are the only packages
        that will be updated. If these packages are not installed, they will be
        ignored. This field cannot be specified with any other patch configuration
        fields.
        """
        pass
    def __init__(self,
        *,
        type : global___AptSettings.Type.ValueType = ...,
        excludes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        exclusive_packages : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["excludes",b"excludes","exclusive_packages",b"exclusive_packages","type",b"type"]) -> None: ...
global___AptSettings = AptSettings

class YumSettings(google.protobuf.message.Message):
    """Yum patching is performed by executing `yum update`. Additional options
    can be set to control how this is executed.

    Note that not all settings are supported on all platforms.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SECURITY_FIELD_NUMBER: builtins.int
    MINIMAL_FIELD_NUMBER: builtins.int
    EXCLUDES_FIELD_NUMBER: builtins.int
    EXCLUSIVE_PACKAGES_FIELD_NUMBER: builtins.int
    security: builtins.bool = ...
    """Adds the `--security` flag to `yum update`. Not supported on
    all platforms.
    """

    minimal: builtins.bool = ...
    """Will cause patch to run `yum update-minimal` instead."""

    @property
    def excludes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of packages to exclude from update. These packages are excluded by
        using the yum `--exclude` flag.
        """
        pass
    @property
    def exclusive_packages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An exclusive list of packages to be updated. These are the only packages
        that will be updated. If these packages are not installed, they will be
        ignored. This field must not be specified with any other patch
        configuration fields.
        """
        pass
    def __init__(self,
        *,
        security : builtins.bool = ...,
        minimal : builtins.bool = ...,
        excludes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        exclusive_packages : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["excludes",b"excludes","exclusive_packages",b"exclusive_packages","minimal",b"minimal","security",b"security"]) -> None: ...
global___YumSettings = YumSettings

class GooSettings(google.protobuf.message.Message):
    """Googet patching is performed by running `googet update`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GooSettings = GooSettings

class ZypperSettings(google.protobuf.message.Message):
    """Zypper patching is performed by running `zypper patch`.
    See also https://en.opensuse.org/SDB:Zypper_manual.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WITH_OPTIONAL_FIELD_NUMBER: builtins.int
    WITH_UPDATE_FIELD_NUMBER: builtins.int
    CATEGORIES_FIELD_NUMBER: builtins.int
    SEVERITIES_FIELD_NUMBER: builtins.int
    EXCLUDES_FIELD_NUMBER: builtins.int
    EXCLUSIVE_PATCHES_FIELD_NUMBER: builtins.int
    with_optional: builtins.bool = ...
    """Adds the `--with-optional` flag to `zypper patch`."""

    with_update: builtins.bool = ...
    """Adds the `--with-update` flag, to `zypper patch`."""

    @property
    def categories(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Install only patches with these categories.
        Common categories include security, recommended, and feature.
        """
        pass
    @property
    def severities(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Install only patches with these severities.
        Common severities include critical, important, moderate, and low.
        """
        pass
    @property
    def excludes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of patches to exclude from update."""
        pass
    @property
    def exclusive_patches(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An exclusive list of patches to be updated. These are the only patches
        that will be installed using 'zypper patch patch:<patch_name>' command.
        This field must not be used with any other patch configuration fields.
        """
        pass
    def __init__(self,
        *,
        with_optional : builtins.bool = ...,
        with_update : builtins.bool = ...,
        categories : typing.Optional[typing.Iterable[typing.Text]] = ...,
        severities : typing.Optional[typing.Iterable[typing.Text]] = ...,
        excludes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        exclusive_patches : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["categories",b"categories","excludes",b"excludes","exclusive_patches",b"exclusive_patches","severities",b"severities","with_optional",b"with_optional","with_update",b"with_update"]) -> None: ...
global___ZypperSettings = ZypperSettings

class WindowsUpdateSettings(google.protobuf.message.Message):
    """Windows patching is performed using the Windows Update Agent."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Classification:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ClassificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Classification.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CLASSIFICATION_UNSPECIFIED: WindowsUpdateSettings.Classification.ValueType = ...  # 0
        """Invalid. If classifications are included, they must be specified."""

        CRITICAL: WindowsUpdateSettings.Classification.ValueType = ...  # 1
        """"A widely released fix for a specific problem that addresses a critical,
        non-security-related bug." [1]
        """

        SECURITY: WindowsUpdateSettings.Classification.ValueType = ...  # 2
        """"A widely released fix for a product-specific, security-related
        vulnerability. Security vulnerabilities are rated by their severity. The
        severity rating is indicated in the Microsoft security bulletin as
        critical, important, moderate, or low." [1]
        """

        DEFINITION: WindowsUpdateSettings.Classification.ValueType = ...  # 3
        """"A widely released and frequent software update that contains additions
        to a product's definition database. Definition databases are often used
        to detect objects that have specific attributes, such as malicious code,
        phishing websites, or junk mail." [1]
        """

        DRIVER: WindowsUpdateSettings.Classification.ValueType = ...  # 4
        """"Software that controls the input and output of a device." [1]"""

        FEATURE_PACK: WindowsUpdateSettings.Classification.ValueType = ...  # 5
        """"New product functionality that is first distributed outside the context
        of a product release and that is typically included in the next full
        product release." [1]
        """

        SERVICE_PACK: WindowsUpdateSettings.Classification.ValueType = ...  # 6
        """"A tested, cumulative set of all hotfixes, security updates, critical
        updates, and updates. Additionally, service packs may contain additional
        fixes for problems that are found internally since the release of the
        product. Service packs my also contain a limited number of
        customer-requested design changes or features." [1]
        """

        TOOL: WindowsUpdateSettings.Classification.ValueType = ...  # 7
        """"A utility or feature that helps complete a task or set of tasks." [1]"""

        UPDATE_ROLLUP: WindowsUpdateSettings.Classification.ValueType = ...  # 8
        """"A tested, cumulative set of hotfixes, security updates, critical
        updates, and updates that are packaged together for easy deployment. A
        rollup generally targets a specific area, such as security, or a
        component of a product, such as Internet Information Services (IIS)." [1]
        """

        UPDATE: WindowsUpdateSettings.Classification.ValueType = ...  # 9
        """"A widely released fix for a specific problem. An update addresses a
        noncritical, non-security-related bug." [1]
        """

    class Classification(_Classification, metaclass=_ClassificationEnumTypeWrapper):
        """Microsoft Windows update classifications as defined in
        [1]
        https://support.microsoft.com/en-us/help/824684/description-of-the-standard-terminology-that-is-used-to-describe-micro
        """
        pass

    CLASSIFICATION_UNSPECIFIED: WindowsUpdateSettings.Classification.ValueType = ...  # 0
    """Invalid. If classifications are included, they must be specified."""

    CRITICAL: WindowsUpdateSettings.Classification.ValueType = ...  # 1
    """"A widely released fix for a specific problem that addresses a critical,
    non-security-related bug." [1]
    """

    SECURITY: WindowsUpdateSettings.Classification.ValueType = ...  # 2
    """"A widely released fix for a product-specific, security-related
    vulnerability. Security vulnerabilities are rated by their severity. The
    severity rating is indicated in the Microsoft security bulletin as
    critical, important, moderate, or low." [1]
    """

    DEFINITION: WindowsUpdateSettings.Classification.ValueType = ...  # 3
    """"A widely released and frequent software update that contains additions
    to a product's definition database. Definition databases are often used
    to detect objects that have specific attributes, such as malicious code,
    phishing websites, or junk mail." [1]
    """

    DRIVER: WindowsUpdateSettings.Classification.ValueType = ...  # 4
    """"Software that controls the input and output of a device." [1]"""

    FEATURE_PACK: WindowsUpdateSettings.Classification.ValueType = ...  # 5
    """"New product functionality that is first distributed outside the context
    of a product release and that is typically included in the next full
    product release." [1]
    """

    SERVICE_PACK: WindowsUpdateSettings.Classification.ValueType = ...  # 6
    """"A tested, cumulative set of all hotfixes, security updates, critical
    updates, and updates. Additionally, service packs may contain additional
    fixes for problems that are found internally since the release of the
    product. Service packs my also contain a limited number of
    customer-requested design changes or features." [1]
    """

    TOOL: WindowsUpdateSettings.Classification.ValueType = ...  # 7
    """"A utility or feature that helps complete a task or set of tasks." [1]"""

    UPDATE_ROLLUP: WindowsUpdateSettings.Classification.ValueType = ...  # 8
    """"A tested, cumulative set of hotfixes, security updates, critical
    updates, and updates that are packaged together for easy deployment. A
    rollup generally targets a specific area, such as security, or a
    component of a product, such as Internet Information Services (IIS)." [1]
    """

    UPDATE: WindowsUpdateSettings.Classification.ValueType = ...  # 9
    """"A widely released fix for a specific problem. An update addresses a
    noncritical, non-security-related bug." [1]
    """


    CLASSIFICATIONS_FIELD_NUMBER: builtins.int
    EXCLUDES_FIELD_NUMBER: builtins.int
    EXCLUSIVE_PATCHES_FIELD_NUMBER: builtins.int
    @property
    def classifications(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___WindowsUpdateSettings.Classification.ValueType]:
        """Only apply updates of these windows update classifications. If empty, all
        updates are applied.
        """
        pass
    @property
    def excludes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of KBs to exclude from update."""
        pass
    @property
    def exclusive_patches(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An exclusive list of kbs to be updated. These are the only patches
        that will be updated. This field must not be used with other
        patch configurations.
        """
        pass
    def __init__(self,
        *,
        classifications : typing.Optional[typing.Iterable[global___WindowsUpdateSettings.Classification.ValueType]] = ...,
        excludes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        exclusive_patches : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["classifications",b"classifications","excludes",b"excludes","exclusive_patches",b"exclusive_patches"]) -> None: ...
global___WindowsUpdateSettings = WindowsUpdateSettings

class ExecStep(google.protobuf.message.Message):
    """A step that runs an executable for a PatchJob."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LINUX_EXEC_STEP_CONFIG_FIELD_NUMBER: builtins.int
    WINDOWS_EXEC_STEP_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def linux_exec_step_config(self) -> global___ExecStepConfig:
        """The ExecStepConfig for all Linux VMs targeted by the PatchJob."""
        pass
    @property
    def windows_exec_step_config(self) -> global___ExecStepConfig:
        """The ExecStepConfig for all Windows VMs targeted by the PatchJob."""
        pass
    def __init__(self,
        *,
        linux_exec_step_config : typing.Optional[global___ExecStepConfig] = ...,
        windows_exec_step_config : typing.Optional[global___ExecStepConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["linux_exec_step_config",b"linux_exec_step_config","windows_exec_step_config",b"windows_exec_step_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["linux_exec_step_config",b"linux_exec_step_config","windows_exec_step_config",b"windows_exec_step_config"]) -> None: ...
global___ExecStep = ExecStep

class ExecStepConfig(google.protobuf.message.Message):
    """Common configurations for an ExecStep."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Interpreter:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InterpreterEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Interpreter.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INTERPRETER_UNSPECIFIED: ExecStepConfig.Interpreter.ValueType = ...  # 0
        """Invalid for a Windows ExecStepConfig. For a Linux ExecStepConfig, the
        interpreter will be parsed from the shebang line of the script if
        unspecified.
        """

        SHELL: ExecStepConfig.Interpreter.ValueType = ...  # 1
        """Indicates that the script is run with `/bin/sh` on Linux and `cmd`
        on Windows.
        """

        POWERSHELL: ExecStepConfig.Interpreter.ValueType = ...  # 2
        """Indicates that the file is run with PowerShell flags
        `-NonInteractive`, `-NoProfile`, and `-ExecutionPolicy Bypass`.
        """

    class Interpreter(_Interpreter, metaclass=_InterpreterEnumTypeWrapper):
        """The interpreter used to execute the a file."""
        pass

    INTERPRETER_UNSPECIFIED: ExecStepConfig.Interpreter.ValueType = ...  # 0
    """Invalid for a Windows ExecStepConfig. For a Linux ExecStepConfig, the
    interpreter will be parsed from the shebang line of the script if
    unspecified.
    """

    SHELL: ExecStepConfig.Interpreter.ValueType = ...  # 1
    """Indicates that the script is run with `/bin/sh` on Linux and `cmd`
    on Windows.
    """

    POWERSHELL: ExecStepConfig.Interpreter.ValueType = ...  # 2
    """Indicates that the file is run with PowerShell flags
    `-NonInteractive`, `-NoProfile`, and `-ExecutionPolicy Bypass`.
    """


    LOCAL_PATH_FIELD_NUMBER: builtins.int
    GCS_OBJECT_FIELD_NUMBER: builtins.int
    ALLOWED_SUCCESS_CODES_FIELD_NUMBER: builtins.int
    INTERPRETER_FIELD_NUMBER: builtins.int
    local_path: typing.Text = ...
    """An absolute path to the executable on the VM."""

    @property
    def gcs_object(self) -> global___GcsObject:
        """A Cloud Storage object containing the executable."""
        pass
    @property
    def allowed_success_codes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Defaults to [0]. A list of possible return values that the
        execution can return to indicate a success.
        """
        pass
    interpreter: global___ExecStepConfig.Interpreter.ValueType = ...
    """The script interpreter to use to run the script. If no interpreter is
    specified the script will be executed directly, which will likely
    only succeed for scripts with [shebang lines]
    (https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).
    """

    def __init__(self,
        *,
        local_path : typing.Text = ...,
        gcs_object : typing.Optional[global___GcsObject] = ...,
        allowed_success_codes : typing.Optional[typing.Iterable[builtins.int]] = ...,
        interpreter : global___ExecStepConfig.Interpreter.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["executable",b"executable","gcs_object",b"gcs_object","local_path",b"local_path"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allowed_success_codes",b"allowed_success_codes","executable",b"executable","gcs_object",b"gcs_object","interpreter",b"interpreter","local_path",b"local_path"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["executable",b"executable"]) -> typing.Optional[typing_extensions.Literal["local_path","gcs_object"]]: ...
global___ExecStepConfig = ExecStepConfig

class GcsObject(google.protobuf.message.Message):
    """Cloud Storage object representation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUCKET_FIELD_NUMBER: builtins.int
    OBJECT_FIELD_NUMBER: builtins.int
    GENERATION_NUMBER_FIELD_NUMBER: builtins.int
    bucket: typing.Text = ...
    """Required. Bucket of the Cloud Storage object."""

    object: typing.Text = ...
    """Required. Name of the Cloud Storage object."""

    generation_number: builtins.int = ...
    """Required. Generation number of the Cloud Storage object. This is used to
    ensure that the ExecStep specified by this PatchJob does not change.
    """

    def __init__(self,
        *,
        bucket : typing.Text = ...,
        object : typing.Text = ...,
        generation_number : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket",b"bucket","generation_number",b"generation_number","object",b"object"]) -> None: ...
global___GcsObject = GcsObject

class PatchInstanceFilter(google.protobuf.message.Message):
    """A filter to target VM instances for patching. The targeted
    VMs must meet all criteria specified. So if both labels and zones are
    specified, the patch job targets only VMs with those labels and in those
    zones.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class GroupLabel(google.protobuf.message.Message):
        """Targets a group of VM instances by using their [assigned
        labels](https://cloud.google.com/compute/docs/labeling-resources). Labels
        are key-value pairs. A `GroupLabel` is a combination of labels
        that is used to target VMs for a patch job.

        For example, a patch job can target VMs that have the following
        `GroupLabel`: `{"env":"test", "app":"web"}`. This means that the patch job
        is applied to VMs that have both the labels `env=test` and `app=web`.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class LabelsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text = ...
            value: typing.Text = ...
            def __init__(self,
                *,
                key : typing.Text = ...,
                value : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        LABELS_FIELD_NUMBER: builtins.int
        @property
        def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
            """Compute Engine instance labels that must be present for a VM
            instance to be targeted by this filter.
            """
            pass
        def __init__(self,
            *,
            labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["labels",b"labels"]) -> None: ...

    ALL_FIELD_NUMBER: builtins.int
    GROUP_LABELS_FIELD_NUMBER: builtins.int
    ZONES_FIELD_NUMBER: builtins.int
    INSTANCES_FIELD_NUMBER: builtins.int
    INSTANCE_NAME_PREFIXES_FIELD_NUMBER: builtins.int
    all: builtins.bool = ...
    """Target all VM instances in the project. If true, no other criteria is
    permitted.
    """

    @property
    def group_labels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PatchInstanceFilter.GroupLabel]:
        """Targets VM instances matching ANY of these GroupLabels. This allows
        targeting of disparate groups of VM instances.
        """
        pass
    @property
    def zones(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Targets VM instances in ANY of these zones. Leave empty to target VM
        instances in any zone.
        """
        pass
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Targets any of the VM instances specified. Instances are specified by their
        URI in the form `zones/[ZONE]/instances/[INSTANCE_NAME]`,
        `projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`, or
        `https://www.googleapis.com/compute/v1/projects/[PROJECT_ID]/zones/[ZONE]/instances/[INSTANCE_NAME]`
        """
        pass
    @property
    def instance_name_prefixes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Targets VMs whose name starts with one of these prefixes. Similar to
        labels, this is another way to group VMs when targeting configs, for
        example prefix="prod-".
        """
        pass
    def __init__(self,
        *,
        all : builtins.bool = ...,
        group_labels : typing.Optional[typing.Iterable[global___PatchInstanceFilter.GroupLabel]] = ...,
        zones : typing.Optional[typing.Iterable[typing.Text]] = ...,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        instance_name_prefixes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["all",b"all","group_labels",b"group_labels","instance_name_prefixes",b"instance_name_prefixes","instances",b"instances","zones",b"zones"]) -> None: ...
global___PatchInstanceFilter = PatchInstanceFilter

class PatchRollout(google.protobuf.message.Message):
    """Patch rollout configuration specifications. Contains details on the
    concurrency control when applying patch(es) to all targeted VMs.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Mode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        MODE_UNSPECIFIED: PatchRollout.Mode.ValueType = ...  # 0
        """Mode must be specified."""

        ZONE_BY_ZONE: PatchRollout.Mode.ValueType = ...  # 1
        """Patches are applied one zone at a time. The patch job begins in the
        region with the lowest number of targeted VMs. Within the region,
        patching begins in the zone with the lowest number of targeted VMs. If
        multiple regions (or zones within a region) have the same number of
        targeted VMs, a tie-breaker is achieved by sorting the regions or zones
        in alphabetical order.
        """

        CONCURRENT_ZONES: PatchRollout.Mode.ValueType = ...  # 2
        """Patches are applied to VMs in all zones at the same time."""

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper):
        """Type of the rollout."""
        pass

    MODE_UNSPECIFIED: PatchRollout.Mode.ValueType = ...  # 0
    """Mode must be specified."""

    ZONE_BY_ZONE: PatchRollout.Mode.ValueType = ...  # 1
    """Patches are applied one zone at a time. The patch job begins in the
    region with the lowest number of targeted VMs. Within the region,
    patching begins in the zone with the lowest number of targeted VMs. If
    multiple regions (or zones within a region) have the same number of
    targeted VMs, a tie-breaker is achieved by sorting the regions or zones
    in alphabetical order.
    """

    CONCURRENT_ZONES: PatchRollout.Mode.ValueType = ...  # 2
    """Patches are applied to VMs in all zones at the same time."""


    MODE_FIELD_NUMBER: builtins.int
    DISRUPTION_BUDGET_FIELD_NUMBER: builtins.int
    mode: global___PatchRollout.Mode.ValueType = ...
    """Mode of the patch rollout."""

    @property
    def disruption_budget(self) -> google.cloud.osconfig.v1.osconfig_common_pb2.FixedOrPercent:
        """The maximum number (or percentage) of VMs per zone to disrupt at any given
        moment. The number of VMs calculated from multiplying the percentage by the
        total number of VMs in a zone is rounded up.

        During patching, a VM is considered disrupted from the time the agent is
        notified to begin until patching has completed. This disruption time
        includes the time to complete reboot and any post-patch steps.

        A VM contributes to the disruption budget if its patching operation fails
        either when applying the patches, running pre or post patch steps, or if it
        fails to respond with a success notification before timing out. VMs that
        are not running or do not have an active agent do not count toward this
        disruption budget.

        For zone-by-zone rollouts, if the disruption budget in a zone is exceeded,
        the patch job stops, because continuing to the next zone requires
        completion of the patch process in the previous zone.

        For example, if the disruption budget has a fixed value of `10`, and 8 VMs
        fail to patch in the current zone, the patch job continues to patch 2 VMs
        at a time until the zone is completed. When that zone is completed
        successfully, patching begins with 10 VMs at a time in the next zone. If 10
        VMs in the next zone fail to patch, the patch job stops.
        """
        pass
    def __init__(self,
        *,
        mode : global___PatchRollout.Mode.ValueType = ...,
        disruption_budget : typing.Optional[google.cloud.osconfig.v1.osconfig_common_pb2.FixedOrPercent] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["disruption_budget",b"disruption_budget"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["disruption_budget",b"disruption_budget","mode",b"mode"]) -> None: ...
global___PatchRollout = PatchRollout
