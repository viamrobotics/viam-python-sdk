"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class PatchConfig(google.protobuf.message.Message):
    """Patch configuration specifications. Contains details on how to
    apply patches to a VM instance.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RebootConfig:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RebootConfigEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RebootConfig.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        REBOOT_CONFIG_UNSPECIFIED: PatchConfig.RebootConfig.ValueType = ...  # 0
        """The default behavior is DEFAULT."""

        DEFAULT: PatchConfig.RebootConfig.ValueType = ...  # 1
        """The agent decides if a reboot is necessary by checking
        signals such as registry keys on Windows or `/var/run/reboot-required` on
        APT based systems. On RPM based systems, a set of core system package
        install times are compared with system boot time.
        """

        ALWAYS: PatchConfig.RebootConfig.ValueType = ...  # 2
        """Always reboot the machine after the update completes."""

        NEVER: PatchConfig.RebootConfig.ValueType = ...  # 3
        """Never reboot the machine after the update completes."""

    class RebootConfig(_RebootConfig, metaclass=_RebootConfigEnumTypeWrapper):
        """Post-patch reboot settings."""
        pass

    REBOOT_CONFIG_UNSPECIFIED: PatchConfig.RebootConfig.ValueType = ...  # 0
    """The default behavior is DEFAULT."""

    DEFAULT: PatchConfig.RebootConfig.ValueType = ...  # 1
    """The agent decides if a reboot is necessary by checking
    signals such as registry keys on Windows or `/var/run/reboot-required` on
    APT based systems. On RPM based systems, a set of core system package
    install times are compared with system boot time.
    """

    ALWAYS: PatchConfig.RebootConfig.ValueType = ...  # 2
    """Always reboot the machine after the update completes."""

    NEVER: PatchConfig.RebootConfig.ValueType = ...  # 3
    """Never reboot the machine after the update completes."""


    REBOOT_CONFIG_FIELD_NUMBER: builtins.int
    RETRY_STRATEGY_FIELD_NUMBER: builtins.int
    APT_FIELD_NUMBER: builtins.int
    YUM_FIELD_NUMBER: builtins.int
    GOO_FIELD_NUMBER: builtins.int
    ZYPPER_FIELD_NUMBER: builtins.int
    WINDOWS_UPDATE_FIELD_NUMBER: builtins.int
    PRE_STEP_FIELD_NUMBER: builtins.int
    POST_STEP_FIELD_NUMBER: builtins.int
    reboot_config: global___PatchConfig.RebootConfig.ValueType = ...
    """Post-patch reboot settings."""

    @property
    def retry_strategy(self) -> global___RetryStrategy:
        """Retry strategy can be defined to have the agent retry patching
        during the window if patching fails. If omitted, the agent will use its
        default retry strategy.
        """
        pass
    @property
    def apt(self) -> global___AptSettings:
        """Apt update settings. Use this override the default apt patch rules."""
        pass
    @property
    def yum(self) -> global___YumSettings:
        """Yum update settings. Use this override the default yum patch rules."""
        pass
    @property
    def goo(self) -> global___GooSettings:
        """Goo update settings. Use this override the default goo patch rules."""
        pass
    @property
    def zypper(self) -> global___ZypperSettings:
        """Zypper update settings. Use this override the default zypper patch rules."""
        pass
    @property
    def windows_update(self) -> global___WindowsUpdateSettings:
        """Windows update settings. Use this override the default windows patch rules."""
        pass
    @property
    def pre_step(self) -> global___ExecStep:
        """The ExecStep to run before the patch update."""
        pass
    @property
    def post_step(self) -> global___ExecStep:
        """The ExecStep to run after the patch update."""
        pass
    def __init__(self,
        *,
        reboot_config : global___PatchConfig.RebootConfig.ValueType = ...,
        retry_strategy : typing.Optional[global___RetryStrategy] = ...,
        apt : typing.Optional[global___AptSettings] = ...,
        yum : typing.Optional[global___YumSettings] = ...,
        goo : typing.Optional[global___GooSettings] = ...,
        zypper : typing.Optional[global___ZypperSettings] = ...,
        windows_update : typing.Optional[global___WindowsUpdateSettings] = ...,
        pre_step : typing.Optional[global___ExecStep] = ...,
        post_step : typing.Optional[global___ExecStep] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["apt",b"apt","goo",b"goo","post_step",b"post_step","pre_step",b"pre_step","retry_strategy",b"retry_strategy","windows_update",b"windows_update","yum",b"yum","zypper",b"zypper"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["apt",b"apt","goo",b"goo","post_step",b"post_step","pre_step",b"pre_step","reboot_config",b"reboot_config","retry_strategy",b"retry_strategy","windows_update",b"windows_update","yum",b"yum","zypper",b"zypper"]) -> None: ...
global___PatchConfig = PatchConfig

class AptSettings(google.protobuf.message.Message):
    """Apt patching will be performed by executing `apt-get update && apt-get
    upgrade`. Additional options can be set to control how this is executed.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TYPE_UNSPECIFIED: AptSettings.Type.ValueType = ...  # 0
        """By default, upgrade will be performed."""

        DIST: AptSettings.Type.ValueType = ...  # 1
        """Runs `apt-get dist-upgrade`."""

        UPGRADE: AptSettings.Type.ValueType = ...  # 2
        """Runs `apt-get upgrade`."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Apt patch type."""
        pass

    TYPE_UNSPECIFIED: AptSettings.Type.ValueType = ...  # 0
    """By default, upgrade will be performed."""

    DIST: AptSettings.Type.ValueType = ...  # 1
    """Runs `apt-get dist-upgrade`."""

    UPGRADE: AptSettings.Type.ValueType = ...  # 2
    """Runs `apt-get upgrade`."""


    TYPE_FIELD_NUMBER: builtins.int
    EXCLUDES_FIELD_NUMBER: builtins.int
    EXCLUSIVE_PACKAGES_FIELD_NUMBER: builtins.int
    type: global___AptSettings.Type.ValueType = ...
    """By changing the type to DIST, the patching will be performed
    using `apt-get dist-upgrade` instead.
    """

    @property
    def excludes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of packages to exclude from update."""
        pass
    @property
    def exclusive_packages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An exclusive list of packages to be updated. These are the only packages
        that will be updated. If these packages are not installed, they will be
        ignored. This field cannot be specified with any other patch configuration
        fields.
        """
        pass
    def __init__(self,
        *,
        type : global___AptSettings.Type.ValueType = ...,
        excludes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        exclusive_packages : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["excludes",b"excludes","exclusive_packages",b"exclusive_packages","type",b"type"]) -> None: ...
global___AptSettings = AptSettings

class YumSettings(google.protobuf.message.Message):
    """Yum patching will be performed by executing `yum update`. Additional options
    can be set to control how this is executed.

    Note that not all settings are supported on all platforms.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SECURITY_FIELD_NUMBER: builtins.int
    MINIMAL_FIELD_NUMBER: builtins.int
    EXCLUDES_FIELD_NUMBER: builtins.int
    EXCLUSIVE_PACKAGES_FIELD_NUMBER: builtins.int
    security: builtins.bool = ...
    """Adds the `--security` flag to `yum update`. Not supported on
    all platforms.
    """

    minimal: builtins.bool = ...
    """Will cause patch to run `yum update-minimal` instead."""

    @property
    def excludes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of packages to exclude from update. These packages will be excluded by
        using the yum `--exclude` flag.
        """
        pass
    @property
    def exclusive_packages(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An exclusive list of packages to be updated. These are the only packages
        that will be updated. If these packages are not installed, they will be
        ignored. This field must not be specified with any other patch
        configuration fields.
        """
        pass
    def __init__(self,
        *,
        security : builtins.bool = ...,
        minimal : builtins.bool = ...,
        excludes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        exclusive_packages : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["excludes",b"excludes","exclusive_packages",b"exclusive_packages","minimal",b"minimal","security",b"security"]) -> None: ...
global___YumSettings = YumSettings

class GooSettings(google.protobuf.message.Message):
    """Googet patching is performed by running `googet update`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___GooSettings = GooSettings

class ZypperSettings(google.protobuf.message.Message):
    """Zypper patching is performed by running `zypper patch`.
    See also https://en.opensuse.org/SDB:Zypper_manual.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WITH_OPTIONAL_FIELD_NUMBER: builtins.int
    WITH_UPDATE_FIELD_NUMBER: builtins.int
    CATEGORIES_FIELD_NUMBER: builtins.int
    SEVERITIES_FIELD_NUMBER: builtins.int
    EXCLUDES_FIELD_NUMBER: builtins.int
    EXCLUSIVE_PATCHES_FIELD_NUMBER: builtins.int
    with_optional: builtins.bool = ...
    """Adds the `--with-optional` flag to `zypper patch`."""

    with_update: builtins.bool = ...
    """Adds the `--with-update` flag, to `zypper patch`."""

    @property
    def categories(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Install only patches with these categories.
        Common categories include security, recommended, and feature.
        """
        pass
    @property
    def severities(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Install only patches with these severities.
        Common severities include critical, important, moderate, and low.
        """
        pass
    @property
    def excludes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of patches to exclude from update."""
        pass
    @property
    def exclusive_patches(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An exclusive list of patches to be updated. These are the only patches
        that will be installed using 'zypper patch patch:<patch_name>' command.
        This field must not be used with any other patch configuration fields.
        """
        pass
    def __init__(self,
        *,
        with_optional : builtins.bool = ...,
        with_update : builtins.bool = ...,
        categories : typing.Optional[typing.Iterable[typing.Text]] = ...,
        severities : typing.Optional[typing.Iterable[typing.Text]] = ...,
        excludes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        exclusive_patches : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["categories",b"categories","excludes",b"excludes","exclusive_patches",b"exclusive_patches","severities",b"severities","with_optional",b"with_optional","with_update",b"with_update"]) -> None: ...
global___ZypperSettings = ZypperSettings

class WindowsUpdateSettings(google.protobuf.message.Message):
    """Windows patching is performed using the Windows Update Agent."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Classification:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ClassificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Classification.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CLASSIFICATION_UNSPECIFIED: WindowsUpdateSettings.Classification.ValueType = ...  # 0
        """Invalid. If classifications are included, they must be specified."""

        CRITICAL: WindowsUpdateSettings.Classification.ValueType = ...  # 1
        """"A widely released fix for a specific problem that addresses a critical,
        non-security-related bug." [1]
        """

        SECURITY: WindowsUpdateSettings.Classification.ValueType = ...  # 2
        """"A widely released fix for a product-specific, security-related
        vulnerability. Security vulnerabilities are rated by their severity. The
        severity rating is indicated in the Microsoft security bulletin as
        critical, important, moderate, or low." [1]
        """

        DEFINITION: WindowsUpdateSettings.Classification.ValueType = ...  # 3
        """"A widely released and frequent software update that contains additions
        to a product’s definition database. Definition databases are often used
        to detect objects that have specific attributes, such as malicious code,
        phishing websites, or junk mail." [1]
        """

        DRIVER: WindowsUpdateSettings.Classification.ValueType = ...  # 4
        """"Software that controls the input and output of a device." [1]"""

        FEATURE_PACK: WindowsUpdateSettings.Classification.ValueType = ...  # 5
        """"New product functionality that is first distributed outside the context
        of a product release and that is typically included in the next full
        product release." [1]
        """

        SERVICE_PACK: WindowsUpdateSettings.Classification.ValueType = ...  # 6
        """"A tested, cumulative set of all hotfixes, security updates, critical
        updates, and updates. Additionally, service packs may contain additional
        fixes for problems that are found internally since the release of the
        product. Service packs my also contain a limited number of
        customer-requested design changes or features." [1]
        """

        TOOL: WindowsUpdateSettings.Classification.ValueType = ...  # 7
        """"A utility or feature that helps complete a task or set of tasks." [1]"""

        UPDATE_ROLLUP: WindowsUpdateSettings.Classification.ValueType = ...  # 8
        """"A tested, cumulative set of hotfixes, security updates, critical
        updates, and updates that are packaged together for easy deployment. A
        rollup generally targets a specific area, such as security, or a
        component of a product, such as Internet Information Services (IIS)." [1]
        """

        UPDATE: WindowsUpdateSettings.Classification.ValueType = ...  # 9
        """"A widely released fix for a specific problem. An update addresses a
        noncritical, non-security-related bug." [1]
        """

    class Classification(_Classification, metaclass=_ClassificationEnumTypeWrapper):
        """Microsoft Windows update classifications as defined in
        [1]
        https://support.microsoft.com/en-us/help/824684/description-of-the-standard-terminology-that-is-used-to-describe-micro
        """
        pass

    CLASSIFICATION_UNSPECIFIED: WindowsUpdateSettings.Classification.ValueType = ...  # 0
    """Invalid. If classifications are included, they must be specified."""

    CRITICAL: WindowsUpdateSettings.Classification.ValueType = ...  # 1
    """"A widely released fix for a specific problem that addresses a critical,
    non-security-related bug." [1]
    """

    SECURITY: WindowsUpdateSettings.Classification.ValueType = ...  # 2
    """"A widely released fix for a product-specific, security-related
    vulnerability. Security vulnerabilities are rated by their severity. The
    severity rating is indicated in the Microsoft security bulletin as
    critical, important, moderate, or low." [1]
    """

    DEFINITION: WindowsUpdateSettings.Classification.ValueType = ...  # 3
    """"A widely released and frequent software update that contains additions
    to a product’s definition database. Definition databases are often used
    to detect objects that have specific attributes, such as malicious code,
    phishing websites, or junk mail." [1]
    """

    DRIVER: WindowsUpdateSettings.Classification.ValueType = ...  # 4
    """"Software that controls the input and output of a device." [1]"""

    FEATURE_PACK: WindowsUpdateSettings.Classification.ValueType = ...  # 5
    """"New product functionality that is first distributed outside the context
    of a product release and that is typically included in the next full
    product release." [1]
    """

    SERVICE_PACK: WindowsUpdateSettings.Classification.ValueType = ...  # 6
    """"A tested, cumulative set of all hotfixes, security updates, critical
    updates, and updates. Additionally, service packs may contain additional
    fixes for problems that are found internally since the release of the
    product. Service packs my also contain a limited number of
    customer-requested design changes or features." [1]
    """

    TOOL: WindowsUpdateSettings.Classification.ValueType = ...  # 7
    """"A utility or feature that helps complete a task or set of tasks." [1]"""

    UPDATE_ROLLUP: WindowsUpdateSettings.Classification.ValueType = ...  # 8
    """"A tested, cumulative set of hotfixes, security updates, critical
    updates, and updates that are packaged together for easy deployment. A
    rollup generally targets a specific area, such as security, or a
    component of a product, such as Internet Information Services (IIS)." [1]
    """

    UPDATE: WindowsUpdateSettings.Classification.ValueType = ...  # 9
    """"A widely released fix for a specific problem. An update addresses a
    noncritical, non-security-related bug." [1]
    """


    CLASSIFICATIONS_FIELD_NUMBER: builtins.int
    EXCLUDES_FIELD_NUMBER: builtins.int
    EXCLUSIVE_PATCHES_FIELD_NUMBER: builtins.int
    @property
    def classifications(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___WindowsUpdateSettings.Classification.ValueType]:
        """Only apply updates of these windows update classifications. If empty, all
        updates will be applied.
        """
        pass
    @property
    def excludes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of KBs to exclude from update."""
        pass
    @property
    def exclusive_patches(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An exclusive list of kbs to be updated. These are the only patches
        that will be updated. This field must not be used with other
        patch configurations.
        """
        pass
    def __init__(self,
        *,
        classifications : typing.Optional[typing.Iterable[global___WindowsUpdateSettings.Classification.ValueType]] = ...,
        excludes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        exclusive_patches : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["classifications",b"classifications","excludes",b"excludes","exclusive_patches",b"exclusive_patches"]) -> None: ...
global___WindowsUpdateSettings = WindowsUpdateSettings

class RetryStrategy(google.protobuf.message.Message):
    """The strategy for retrying failed patches during the patch window."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """If true, the agent will continue to try and patch until the window has
    ended.
    """

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___RetryStrategy = RetryStrategy

class ExecStep(google.protobuf.message.Message):
    """A step that runs an executable for a PatchJob."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LINUX_EXEC_STEP_CONFIG_FIELD_NUMBER: builtins.int
    WINDOWS_EXEC_STEP_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def linux_exec_step_config(self) -> global___ExecStepConfig:
        """The ExecStepConfig for all Linux VMs targeted by the PatchJob."""
        pass
    @property
    def windows_exec_step_config(self) -> global___ExecStepConfig:
        """The ExecStepConfig for all Windows VMs targeted by the PatchJob."""
        pass
    def __init__(self,
        *,
        linux_exec_step_config : typing.Optional[global___ExecStepConfig] = ...,
        windows_exec_step_config : typing.Optional[global___ExecStepConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["linux_exec_step_config",b"linux_exec_step_config","windows_exec_step_config",b"windows_exec_step_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["linux_exec_step_config",b"linux_exec_step_config","windows_exec_step_config",b"windows_exec_step_config"]) -> None: ...
global___ExecStep = ExecStep

class ExecStepConfig(google.protobuf.message.Message):
    """Common configurations for an ExecStep."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Interpreter:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InterpreterEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Interpreter.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INTERPRETER_UNSPECIFIED: ExecStepConfig.Interpreter.ValueType = ...  # 0
        """Invalid for a Windows ExecStepConfig. For a Linux ExecStepConfig, the
        interpreter will be parsed from the shebang line of the script if
        unspecified.
        """

        SHELL: ExecStepConfig.Interpreter.ValueType = ...  # 1
        """Indicates that the script will be run with /bin/sh on Linux and cmd
        on windows.
        """

        POWERSHELL: ExecStepConfig.Interpreter.ValueType = ...  # 2
        """Indicates that the file will be run with PowerShell."""

    class Interpreter(_Interpreter, metaclass=_InterpreterEnumTypeWrapper):
        """The interpreter used to execute the a file."""
        pass

    INTERPRETER_UNSPECIFIED: ExecStepConfig.Interpreter.ValueType = ...  # 0
    """Invalid for a Windows ExecStepConfig. For a Linux ExecStepConfig, the
    interpreter will be parsed from the shebang line of the script if
    unspecified.
    """

    SHELL: ExecStepConfig.Interpreter.ValueType = ...  # 1
    """Indicates that the script will be run with /bin/sh on Linux and cmd
    on windows.
    """

    POWERSHELL: ExecStepConfig.Interpreter.ValueType = ...  # 2
    """Indicates that the file will be run with PowerShell."""


    LOCAL_PATH_FIELD_NUMBER: builtins.int
    GCS_OBJECT_FIELD_NUMBER: builtins.int
    ALLOWED_SUCCESS_CODES_FIELD_NUMBER: builtins.int
    INTERPRETER_FIELD_NUMBER: builtins.int
    local_path: typing.Text = ...
    """An absolute path to the executable on the VM."""

    @property
    def gcs_object(self) -> global___GcsObject:
        """A GCS object containing the executable."""
        pass
    @property
    def allowed_success_codes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Defaults to [0]. A list of possible return values that the
        execution can return to indicate a success.
        """
        pass
    interpreter: global___ExecStepConfig.Interpreter.ValueType = ...
    """The script interpreter to use to run the script. If no interpreter is
    specified the script will be executed directly, which will likely
    only succeed for scripts with shebang lines.
    [Wikipedia shebang](https://en.wikipedia.org/wiki/Shebang_(Unix)).
    """

    def __init__(self,
        *,
        local_path : typing.Text = ...,
        gcs_object : typing.Optional[global___GcsObject] = ...,
        allowed_success_codes : typing.Optional[typing.Iterable[builtins.int]] = ...,
        interpreter : global___ExecStepConfig.Interpreter.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["executable",b"executable","gcs_object",b"gcs_object","local_path",b"local_path"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allowed_success_codes",b"allowed_success_codes","executable",b"executable","gcs_object",b"gcs_object","interpreter",b"interpreter","local_path",b"local_path"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["executable",b"executable"]) -> typing.Optional[typing_extensions.Literal["local_path","gcs_object"]]: ...
global___ExecStepConfig = ExecStepConfig

class GcsObject(google.protobuf.message.Message):
    """GCS object representation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUCKET_FIELD_NUMBER: builtins.int
    OBJECT_FIELD_NUMBER: builtins.int
    GENERATION_NUMBER_FIELD_NUMBER: builtins.int
    bucket: typing.Text = ...
    """Bucket of the GCS object."""

    object: typing.Text = ...
    """Name of the GCS object."""

    generation_number: builtins.int = ...
    """Generation number of the GCS object. This is used to ensure that the
    ExecStep specified by this PatchJob does not change.
    """

    def __init__(self,
        *,
        bucket : typing.Text = ...,
        object : typing.Text = ...,
        generation_number : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket",b"bucket","generation_number",b"generation_number","object",b"object"]) -> None: ...
global___GcsObject = GcsObject
