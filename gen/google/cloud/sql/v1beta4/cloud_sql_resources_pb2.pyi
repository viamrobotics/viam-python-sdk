"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _SqlFileType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlFileTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlFileType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_FILE_TYPE_UNSPECIFIED: SqlFileType.ValueType = ...  # 0
    """Unknown file type."""

    SQL: SqlFileType.ValueType = ...  # 1
    """File containing SQL statements."""

    CSV: SqlFileType.ValueType = ...  # 2
    """File in CSV format."""

    BAK: SqlFileType.ValueType = ...  # 4
class SqlFileType(_SqlFileType, metaclass=_SqlFileTypeEnumTypeWrapper):
    pass

SQL_FILE_TYPE_UNSPECIFIED: SqlFileType.ValueType = ...  # 0
"""Unknown file type."""

SQL: SqlFileType.ValueType = ...  # 1
"""File containing SQL statements."""

CSV: SqlFileType.ValueType = ...  # 2
"""File in CSV format."""

BAK: SqlFileType.ValueType = ...  # 4
global___SqlFileType = SqlFileType


class _SqlBackupRunStatus:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlBackupRunStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlBackupRunStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_BACKUP_RUN_STATUS_UNSPECIFIED: SqlBackupRunStatus.ValueType = ...  # 0
    """The status of the run is unknown."""

    ENQUEUED: SqlBackupRunStatus.ValueType = ...  # 1
    """The backup operation was enqueued."""

    OVERDUE: SqlBackupRunStatus.ValueType = ...  # 2
    """The backup is overdue across a given backup window. Indicates a
    problem. Example: Long-running operation in progress during
    the whole window.
    """

    RUNNING: SqlBackupRunStatus.ValueType = ...  # 3
    """The backup is in progress."""

    FAILED: SqlBackupRunStatus.ValueType = ...  # 4
    """The backup failed."""

    SUCCESSFUL: SqlBackupRunStatus.ValueType = ...  # 5
    """The backup was successful."""

    SKIPPED: SqlBackupRunStatus.ValueType = ...  # 6
    """The backup was skipped (without problems) for a given backup
    window. Example: Instance was idle.
    """

    DELETION_PENDING: SqlBackupRunStatus.ValueType = ...  # 7
    """The backup is about to be deleted."""

    DELETION_FAILED: SqlBackupRunStatus.ValueType = ...  # 8
    """The backup deletion failed."""

    DELETED: SqlBackupRunStatus.ValueType = ...  # 9
    """The backup has been deleted."""

class SqlBackupRunStatus(_SqlBackupRunStatus, metaclass=_SqlBackupRunStatusEnumTypeWrapper):
    """The status of a backup run."""
    pass

SQL_BACKUP_RUN_STATUS_UNSPECIFIED: SqlBackupRunStatus.ValueType = ...  # 0
"""The status of the run is unknown."""

ENQUEUED: SqlBackupRunStatus.ValueType = ...  # 1
"""The backup operation was enqueued."""

OVERDUE: SqlBackupRunStatus.ValueType = ...  # 2
"""The backup is overdue across a given backup window. Indicates a
problem. Example: Long-running operation in progress during
the whole window.
"""

RUNNING: SqlBackupRunStatus.ValueType = ...  # 3
"""The backup is in progress."""

FAILED: SqlBackupRunStatus.ValueType = ...  # 4
"""The backup failed."""

SUCCESSFUL: SqlBackupRunStatus.ValueType = ...  # 5
"""The backup was successful."""

SKIPPED: SqlBackupRunStatus.ValueType = ...  # 6
"""The backup was skipped (without problems) for a given backup
window. Example: Instance was idle.
"""

DELETION_PENDING: SqlBackupRunStatus.ValueType = ...  # 7
"""The backup is about to be deleted."""

DELETION_FAILED: SqlBackupRunStatus.ValueType = ...  # 8
"""The backup deletion failed."""

DELETED: SqlBackupRunStatus.ValueType = ...  # 9
"""The backup has been deleted."""

global___SqlBackupRunStatus = SqlBackupRunStatus


class _SqlBackupRunType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlBackupRunTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlBackupRunType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_BACKUP_RUN_TYPE_UNSPECIFIED: SqlBackupRunType.ValueType = ...  # 0
    """This is an unknown BackupRun type."""

    AUTOMATED: SqlBackupRunType.ValueType = ...  # 1
    """The backup schedule automatically triggers a backup."""

    ON_DEMAND: SqlBackupRunType.ValueType = ...  # 2
    """The user manually triggers a backup."""

class SqlBackupRunType(_SqlBackupRunType, metaclass=_SqlBackupRunTypeEnumTypeWrapper):
    pass

SQL_BACKUP_RUN_TYPE_UNSPECIFIED: SqlBackupRunType.ValueType = ...  # 0
"""This is an unknown BackupRun type."""

AUTOMATED: SqlBackupRunType.ValueType = ...  # 1
"""The backup schedule automatically triggers a backup."""

ON_DEMAND: SqlBackupRunType.ValueType = ...  # 2
"""The user manually triggers a backup."""

global___SqlBackupRunType = SqlBackupRunType


class _SqlBackupKind:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlBackupKindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlBackupKind.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_BACKUP_KIND_UNSPECIFIED: SqlBackupKind.ValueType = ...  # 0
    """This is an unknown BackupKind."""

    SNAPSHOT: SqlBackupKind.ValueType = ...  # 1
    """The snapshot based backups"""

    PHYSICAL: SqlBackupKind.ValueType = ...  # 2
    """Physical backups"""

class SqlBackupKind(_SqlBackupKind, metaclass=_SqlBackupKindEnumTypeWrapper):
    """Defines the supported backup kinds"""
    pass

SQL_BACKUP_KIND_UNSPECIFIED: SqlBackupKind.ValueType = ...  # 0
"""This is an unknown BackupKind."""

SNAPSHOT: SqlBackupKind.ValueType = ...  # 1
"""The snapshot based backups"""

PHYSICAL: SqlBackupKind.ValueType = ...  # 2
"""Physical backups"""

global___SqlBackupKind = SqlBackupKind


class _SqlBackendType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlBackendTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlBackendType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_BACKEND_TYPE_UNSPECIFIED: SqlBackendType.ValueType = ...  # 0
    """This is an unknown backend type for instance."""

    FIRST_GEN: SqlBackendType.ValueType = ...  # 1
    """V1 speckle instance."""

    SECOND_GEN: SqlBackendType.ValueType = ...  # 2
    """V2 speckle instance."""

    EXTERNAL: SqlBackendType.ValueType = ...  # 3
    """On premises instance."""

class SqlBackendType(_SqlBackendType, metaclass=_SqlBackendTypeEnumTypeWrapper):
    pass

SQL_BACKEND_TYPE_UNSPECIFIED: SqlBackendType.ValueType = ...  # 0
"""This is an unknown backend type for instance."""

FIRST_GEN: SqlBackendType.ValueType = ...  # 1
"""V1 speckle instance."""

SECOND_GEN: SqlBackendType.ValueType = ...  # 2
"""V2 speckle instance."""

EXTERNAL: SqlBackendType.ValueType = ...  # 3
"""On premises instance."""

global___SqlBackendType = SqlBackendType


class _SqlIpAddressType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlIpAddressTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlIpAddressType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_IP_ADDRESS_TYPE_UNSPECIFIED: SqlIpAddressType.ValueType = ...  # 0
    """This is an unknown IP address type."""

    PRIMARY: SqlIpAddressType.ValueType = ...  # 1
    """IP address the customer is supposed to connect to. Usually this is the
    load balancer's IP address
    """

    OUTGOING: SqlIpAddressType.ValueType = ...  # 2
    """Source IP address of the connection a read replica establishes to its
    external primary instance. This IP address can be allowlisted by the
    customer in case it has a firewall that filters incoming connection to its
    on premises primary instance.
    """

    PRIVATE: SqlIpAddressType.ValueType = ...  # 3
    """Private IP used when using private IPs and network peering."""

    MIGRATED_1ST_GEN: SqlIpAddressType.ValueType = ...  # 4
    """V1 IP of a migrated instance. We want the user to
    decommission this IP as soon as the migration is complete.
    Note: V1 instances with V1 ip addresses will be counted as PRIMARY.
    """

class SqlIpAddressType(_SqlIpAddressType, metaclass=_SqlIpAddressTypeEnumTypeWrapper):
    pass

SQL_IP_ADDRESS_TYPE_UNSPECIFIED: SqlIpAddressType.ValueType = ...  # 0
"""This is an unknown IP address type."""

PRIMARY: SqlIpAddressType.ValueType = ...  # 1
"""IP address the customer is supposed to connect to. Usually this is the
load balancer's IP address
"""

OUTGOING: SqlIpAddressType.ValueType = ...  # 2
"""Source IP address of the connection a read replica establishes to its
external primary instance. This IP address can be allowlisted by the
customer in case it has a firewall that filters incoming connection to its
on premises primary instance.
"""

PRIVATE: SqlIpAddressType.ValueType = ...  # 3
"""Private IP used when using private IPs and network peering."""

MIGRATED_1ST_GEN: SqlIpAddressType.ValueType = ...  # 4
"""V1 IP of a migrated instance. We want the user to
decommission this IP as soon as the migration is complete.
Note: V1 instances with V1 ip addresses will be counted as PRIMARY.
"""

global___SqlIpAddressType = SqlIpAddressType


class _SqlInstanceType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlInstanceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlInstanceType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_INSTANCE_TYPE_UNSPECIFIED: SqlInstanceType.ValueType = ...  # 0
    """This is an unknown Cloud SQL instance type."""

    CLOUD_SQL_INSTANCE: SqlInstanceType.ValueType = ...  # 1
    """A regular Cloud SQL instance that is not replicating from a primary
    instance.
    """

    ON_PREMISES_INSTANCE: SqlInstanceType.ValueType = ...  # 2
    """An instance running on the customer's premises that is not managed by
    Cloud SQL.
    """

    READ_REPLICA_INSTANCE: SqlInstanceType.ValueType = ...  # 3
    """A Cloud SQL instance acting as a read-replica."""

class SqlInstanceType(_SqlInstanceType, metaclass=_SqlInstanceTypeEnumTypeWrapper):
    pass

SQL_INSTANCE_TYPE_UNSPECIFIED: SqlInstanceType.ValueType = ...  # 0
"""This is an unknown Cloud SQL instance type."""

CLOUD_SQL_INSTANCE: SqlInstanceType.ValueType = ...  # 1
"""A regular Cloud SQL instance that is not replicating from a primary
instance.
"""

ON_PREMISES_INSTANCE: SqlInstanceType.ValueType = ...  # 2
"""An instance running on the customer's premises that is not managed by
Cloud SQL.
"""

READ_REPLICA_INSTANCE: SqlInstanceType.ValueType = ...  # 3
"""A Cloud SQL instance acting as a read-replica."""

global___SqlInstanceType = SqlInstanceType


class _SqlDatabaseVersion:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlDatabaseVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlDatabaseVersion.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_DATABASE_VERSION_UNSPECIFIED: SqlDatabaseVersion.ValueType = ...  # 0
    """This is an unknown database version."""

    MYSQL_5_1: SqlDatabaseVersion.ValueType = ...  # 2
    """The database version is MySQL 5.1."""

    MYSQL_5_5: SqlDatabaseVersion.ValueType = ...  # 3
    """The database version is MySQL 5.5."""

    MYSQL_5_6: SqlDatabaseVersion.ValueType = ...  # 5
    """The database version is MySQL 5.6."""

    MYSQL_5_7: SqlDatabaseVersion.ValueType = ...  # 6
    """The database version is MySQL 5.7."""

    POSTGRES_9_6: SqlDatabaseVersion.ValueType = ...  # 9
    """The database version is PostgreSQL 9.6."""

    POSTGRES_11: SqlDatabaseVersion.ValueType = ...  # 10
    """The database version is PostgreSQL 11."""

    SQLSERVER_2017_STANDARD: SqlDatabaseVersion.ValueType = ...  # 11
    """The database version is SQL Server 2017 Standard."""

    SQLSERVER_2017_ENTERPRISE: SqlDatabaseVersion.ValueType = ...  # 14
    """The database version is SQL Server 2017 Enterprise."""

    SQLSERVER_2017_EXPRESS: SqlDatabaseVersion.ValueType = ...  # 15
    """The database version is SQL Server 2017 Express."""

    SQLSERVER_2017_WEB: SqlDatabaseVersion.ValueType = ...  # 16
    """The database version is SQL Server 2017 Web."""

    POSTGRES_10: SqlDatabaseVersion.ValueType = ...  # 18
    """The database version is PostgreSQL 10."""

    POSTGRES_12: SqlDatabaseVersion.ValueType = ...  # 19
    """The database version is PostgreSQL 12."""

    MYSQL_8_0: SqlDatabaseVersion.ValueType = ...  # 20
    """The database version is MySQL 8."""

    MYSQL_8_0_18: SqlDatabaseVersion.ValueType = ...  # 41
    """The database major version is MySQL 8.0 and the minor version is 18."""

    MYSQL_8_0_26: SqlDatabaseVersion.ValueType = ...  # 85
    """The database major version is MySQL 8.0 and the minor version is 26."""

    POSTGRES_13: SqlDatabaseVersion.ValueType = ...  # 23
    """The database version is PostgreSQL 13."""

    POSTGRES_14: SqlDatabaseVersion.ValueType = ...  # 110
    """The database version is PostgreSQL 14."""

    SQLSERVER_2019_STANDARD: SqlDatabaseVersion.ValueType = ...  # 26
    """The database version is SQL Server 2019 Standard."""

    SQLSERVER_2019_ENTERPRISE: SqlDatabaseVersion.ValueType = ...  # 27
    """The database version is SQL Server 2019 Enterprise."""

    SQLSERVER_2019_EXPRESS: SqlDatabaseVersion.ValueType = ...  # 28
    """The database version is SQL Server 2019 Express."""

    SQLSERVER_2019_WEB: SqlDatabaseVersion.ValueType = ...  # 29
    """The database version is SQL Server 2019 Web."""

class SqlDatabaseVersion(_SqlDatabaseVersion, metaclass=_SqlDatabaseVersionEnumTypeWrapper):
    """The database engine type and version."""
    pass

SQL_DATABASE_VERSION_UNSPECIFIED: SqlDatabaseVersion.ValueType = ...  # 0
"""This is an unknown database version."""

MYSQL_5_1: SqlDatabaseVersion.ValueType = ...  # 2
"""The database version is MySQL 5.1."""

MYSQL_5_5: SqlDatabaseVersion.ValueType = ...  # 3
"""The database version is MySQL 5.5."""

MYSQL_5_6: SqlDatabaseVersion.ValueType = ...  # 5
"""The database version is MySQL 5.6."""

MYSQL_5_7: SqlDatabaseVersion.ValueType = ...  # 6
"""The database version is MySQL 5.7."""

POSTGRES_9_6: SqlDatabaseVersion.ValueType = ...  # 9
"""The database version is PostgreSQL 9.6."""

POSTGRES_11: SqlDatabaseVersion.ValueType = ...  # 10
"""The database version is PostgreSQL 11."""

SQLSERVER_2017_STANDARD: SqlDatabaseVersion.ValueType = ...  # 11
"""The database version is SQL Server 2017 Standard."""

SQLSERVER_2017_ENTERPRISE: SqlDatabaseVersion.ValueType = ...  # 14
"""The database version is SQL Server 2017 Enterprise."""

SQLSERVER_2017_EXPRESS: SqlDatabaseVersion.ValueType = ...  # 15
"""The database version is SQL Server 2017 Express."""

SQLSERVER_2017_WEB: SqlDatabaseVersion.ValueType = ...  # 16
"""The database version is SQL Server 2017 Web."""

POSTGRES_10: SqlDatabaseVersion.ValueType = ...  # 18
"""The database version is PostgreSQL 10."""

POSTGRES_12: SqlDatabaseVersion.ValueType = ...  # 19
"""The database version is PostgreSQL 12."""

MYSQL_8_0: SqlDatabaseVersion.ValueType = ...  # 20
"""The database version is MySQL 8."""

MYSQL_8_0_18: SqlDatabaseVersion.ValueType = ...  # 41
"""The database major version is MySQL 8.0 and the minor version is 18."""

MYSQL_8_0_26: SqlDatabaseVersion.ValueType = ...  # 85
"""The database major version is MySQL 8.0 and the minor version is 26."""

POSTGRES_13: SqlDatabaseVersion.ValueType = ...  # 23
"""The database version is PostgreSQL 13."""

POSTGRES_14: SqlDatabaseVersion.ValueType = ...  # 110
"""The database version is PostgreSQL 14."""

SQLSERVER_2019_STANDARD: SqlDatabaseVersion.ValueType = ...  # 26
"""The database version is SQL Server 2019 Standard."""

SQLSERVER_2019_ENTERPRISE: SqlDatabaseVersion.ValueType = ...  # 27
"""The database version is SQL Server 2019 Enterprise."""

SQLSERVER_2019_EXPRESS: SqlDatabaseVersion.ValueType = ...  # 28
"""The database version is SQL Server 2019 Express."""

SQLSERVER_2019_WEB: SqlDatabaseVersion.ValueType = ...  # 29
"""The database version is SQL Server 2019 Web."""

global___SqlDatabaseVersion = SqlDatabaseVersion


class _SqlSuspensionReason:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlSuspensionReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlSuspensionReason.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_SUSPENSION_REASON_UNSPECIFIED: SqlSuspensionReason.ValueType = ...  # 0
    """This is an unknown suspension reason."""

    BILLING_ISSUE: SqlSuspensionReason.ValueType = ...  # 2
    """The instance is suspended due to billing issues (for example:, GCP account
    issue)
    """

    LEGAL_ISSUE: SqlSuspensionReason.ValueType = ...  # 3
    """The instance is suspended due to illegal content (for example:, child
    pornography, copyrighted material, etc.).
    """

    OPERATIONAL_ISSUE: SqlSuspensionReason.ValueType = ...  # 4
    """The instance is causing operational issues (for example:, causing the
    database to crash).
    """

    KMS_KEY_ISSUE: SqlSuspensionReason.ValueType = ...  # 5
    """The KMS key used by the instance is either revoked or denied access to"""

class SqlSuspensionReason(_SqlSuspensionReason, metaclass=_SqlSuspensionReasonEnumTypeWrapper):
    """The suspension reason of the database instance if the state is SUSPENDED."""
    pass

SQL_SUSPENSION_REASON_UNSPECIFIED: SqlSuspensionReason.ValueType = ...  # 0
"""This is an unknown suspension reason."""

BILLING_ISSUE: SqlSuspensionReason.ValueType = ...  # 2
"""The instance is suspended due to billing issues (for example:, GCP account
issue)
"""

LEGAL_ISSUE: SqlSuspensionReason.ValueType = ...  # 3
"""The instance is suspended due to illegal content (for example:, child
pornography, copyrighted material, etc.).
"""

OPERATIONAL_ISSUE: SqlSuspensionReason.ValueType = ...  # 4
"""The instance is causing operational issues (for example:, causing the
database to crash).
"""

KMS_KEY_ISSUE: SqlSuspensionReason.ValueType = ...  # 5
"""The KMS key used by the instance is either revoked or denied access to"""

global___SqlSuspensionReason = SqlSuspensionReason


class _SqlPricingPlan:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlPricingPlanEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlPricingPlan.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_PRICING_PLAN_UNSPECIFIED: SqlPricingPlan.ValueType = ...  # 0
    """This is an unknown pricing plan for this instance."""

    PACKAGE: SqlPricingPlan.ValueType = ...  # 1
    """The instance is billed at a monthly flat rate."""

    PER_USE: SqlPricingPlan.ValueType = ...  # 2
    """The instance is billed per usage."""

class SqlPricingPlan(_SqlPricingPlan, metaclass=_SqlPricingPlanEnumTypeWrapper):
    """The pricing plan for this instance."""
    pass

SQL_PRICING_PLAN_UNSPECIFIED: SqlPricingPlan.ValueType = ...  # 0
"""This is an unknown pricing plan for this instance."""

PACKAGE: SqlPricingPlan.ValueType = ...  # 1
"""The instance is billed at a monthly flat rate."""

PER_USE: SqlPricingPlan.ValueType = ...  # 2
"""The instance is billed per usage."""

global___SqlPricingPlan = SqlPricingPlan


class _SqlReplicationType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlReplicationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlReplicationType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_REPLICATION_TYPE_UNSPECIFIED: SqlReplicationType.ValueType = ...  # 0
    """This is an unknown replication type for a Cloud SQL instance."""

    SYNCHRONOUS: SqlReplicationType.ValueType = ...  # 1
    """The synchronous replication mode for First Generation instances. It is the
    default value.
    """

    ASYNCHRONOUS: SqlReplicationType.ValueType = ...  # 2
    """The asynchronous replication mode for First Generation instances. It
    provides a slight performance gain, but if an outage occurs while this
    option is set to asynchronous, you can lose up to a few seconds of updates
    to your data.
    """

class SqlReplicationType(_SqlReplicationType, metaclass=_SqlReplicationTypeEnumTypeWrapper):
    pass

SQL_REPLICATION_TYPE_UNSPECIFIED: SqlReplicationType.ValueType = ...  # 0
"""This is an unknown replication type for a Cloud SQL instance."""

SYNCHRONOUS: SqlReplicationType.ValueType = ...  # 1
"""The synchronous replication mode for First Generation instances. It is the
default value.
"""

ASYNCHRONOUS: SqlReplicationType.ValueType = ...  # 2
"""The asynchronous replication mode for First Generation instances. It
provides a slight performance gain, but if an outage occurs while this
option is set to asynchronous, you can lose up to a few seconds of updates
to your data.
"""

global___SqlReplicationType = SqlReplicationType


class _SqlDataDiskType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlDataDiskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlDataDiskType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_DATA_DISK_TYPE_UNSPECIFIED: SqlDataDiskType.ValueType = ...  # 0
    """This is an unknown data disk type."""

    PD_SSD: SqlDataDiskType.ValueType = ...  # 1
    """An SSD data disk."""

    PD_HDD: SqlDataDiskType.ValueType = ...  # 2
    """An HDD data disk."""

    OBSOLETE_LOCAL_SSD: SqlDataDiskType.ValueType = ...  # 3
    """This field is deprecated and will be removed from a future version of the
    API.
    """

class SqlDataDiskType(_SqlDataDiskType, metaclass=_SqlDataDiskTypeEnumTypeWrapper):
    """The type of disk that is used for a v2 instance to use."""
    pass

SQL_DATA_DISK_TYPE_UNSPECIFIED: SqlDataDiskType.ValueType = ...  # 0
"""This is an unknown data disk type."""

PD_SSD: SqlDataDiskType.ValueType = ...  # 1
"""An SSD data disk."""

PD_HDD: SqlDataDiskType.ValueType = ...  # 2
"""An HDD data disk."""

OBSOLETE_LOCAL_SSD: SqlDataDiskType.ValueType = ...  # 3
"""This field is deprecated and will be removed from a future version of the
API.
"""

global___SqlDataDiskType = SqlDataDiskType


class _SqlAvailabilityType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlAvailabilityTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlAvailabilityType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_AVAILABILITY_TYPE_UNSPECIFIED: SqlAvailabilityType.ValueType = ...  # 0
    """This is an unknown Availability type."""

    ZONAL: SqlAvailabilityType.ValueType = ...  # 1
    """Zonal available instance."""

    REGIONAL: SqlAvailabilityType.ValueType = ...  # 2
    """Regional available instance."""

class SqlAvailabilityType(_SqlAvailabilityType, metaclass=_SqlAvailabilityTypeEnumTypeWrapper):
    """The availability type of the given Cloud SQL instance."""
    pass

SQL_AVAILABILITY_TYPE_UNSPECIFIED: SqlAvailabilityType.ValueType = ...  # 0
"""This is an unknown Availability type."""

ZONAL: SqlAvailabilityType.ValueType = ...  # 1
"""Zonal available instance."""

REGIONAL: SqlAvailabilityType.ValueType = ...  # 2
"""Regional available instance."""

global___SqlAvailabilityType = SqlAvailabilityType


class _SqlUpdateTrack:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlUpdateTrackEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlUpdateTrack.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_UPDATE_TRACK_UNSPECIFIED: SqlUpdateTrack.ValueType = ...  # 0
    """This is an unknown maintenance timing preference."""

    canary: SqlUpdateTrack.ValueType = ...  # 1
    """For instance update that requires a restart, this update track indicates
    your instance prefer to restart for new version early in maintenance
    window.
    """

    stable: SqlUpdateTrack.ValueType = ...  # 2
    """For instance update that requires a restart, this update track indicates
    your instance prefer to let Cloud SQL choose the timing of restart (within
    its Maintenance window, if applicable).
    """

class SqlUpdateTrack(_SqlUpdateTrack, metaclass=_SqlUpdateTrackEnumTypeWrapper):
    pass

SQL_UPDATE_TRACK_UNSPECIFIED: SqlUpdateTrack.ValueType = ...  # 0
"""This is an unknown maintenance timing preference."""

canary: SqlUpdateTrack.ValueType = ...  # 1
"""For instance update that requires a restart, this update track indicates
your instance prefer to restart for new version early in maintenance
window.
"""

stable: SqlUpdateTrack.ValueType = ...  # 2
"""For instance update that requires a restart, this update track indicates
your instance prefer to let Cloud SQL choose the timing of restart (within
its Maintenance window, if applicable).
"""

global___SqlUpdateTrack = SqlUpdateTrack


class _SqlFlagType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SqlFlagTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlFlagType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SQL_FLAG_TYPE_UNSPECIFIED: SqlFlagType.ValueType = ...  # 0
    """This is an unknown flag type."""

    BOOLEAN: SqlFlagType.ValueType = ...  # 1
    """Boolean type flag."""

    STRING: SqlFlagType.ValueType = ...  # 2
    """String type flag."""

    INTEGER: SqlFlagType.ValueType = ...  # 3
    """Integer type flag."""

    NONE: SqlFlagType.ValueType = ...  # 4
    """Flag type used for a server startup option."""

    MYSQL_TIMEZONE_OFFSET: SqlFlagType.ValueType = ...  # 5
    """Type introduced specially for MySQL TimeZone offset. Accept a string value
    with the format [-12:59, 13:00].
    """

    FLOAT: SqlFlagType.ValueType = ...  # 6
    """Float type flag."""

    REPEATED_STRING: SqlFlagType.ValueType = ...  # 7
    """Comma-separated list of the strings in a SqlFlagType enum."""

class SqlFlagType(_SqlFlagType, metaclass=_SqlFlagTypeEnumTypeWrapper):
    pass

SQL_FLAG_TYPE_UNSPECIFIED: SqlFlagType.ValueType = ...  # 0
"""This is an unknown flag type."""

BOOLEAN: SqlFlagType.ValueType = ...  # 1
"""Boolean type flag."""

STRING: SqlFlagType.ValueType = ...  # 2
"""String type flag."""

INTEGER: SqlFlagType.ValueType = ...  # 3
"""Integer type flag."""

NONE: SqlFlagType.ValueType = ...  # 4
"""Flag type used for a server startup option."""

MYSQL_TIMEZONE_OFFSET: SqlFlagType.ValueType = ...  # 5
"""Type introduced specially for MySQL TimeZone offset. Accept a string value
with the format [-12:59, 13:00].
"""

FLOAT: SqlFlagType.ValueType = ...  # 6
"""Float type flag."""

REPEATED_STRING: SqlFlagType.ValueType = ...  # 7
"""Comma-separated list of the strings in a SqlFlagType enum."""

global___SqlFlagType = SqlFlagType


class AclEntry(google.protobuf.message.Message):
    """An entry for an Access Control list."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUE_FIELD_NUMBER: builtins.int
    EXPIRATION_TIME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    value: typing.Text = ...
    """The allowlisted value for the access control list."""

    @property
    def expiration_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when this access control entry expires in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**.
        """
        pass
    name: typing.Text = ...
    """Optional. A label to identify this entry."""

    kind: typing.Text = ...
    """This is always **sql#aclEntry**."""

    def __init__(self,
        *,
        value : typing.Text = ...,
        expiration_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        name : typing.Text = ...,
        kind : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expiration_time",b"expiration_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expiration_time",b"expiration_time","kind",b"kind","name",b"name","value",b"value"]) -> None: ...
global___AclEntry = AclEntry

class ApiWarning(google.protobuf.message.Message):
    """An Admin API warning message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SqlApiWarningCode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SqlApiWarningCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlApiWarningCode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SQL_API_WARNING_CODE_UNSPECIFIED: ApiWarning.SqlApiWarningCode.ValueType = ...  # 0
        """An unknown or unset warning type from Cloud SQL API."""

        REGION_UNREACHABLE: ApiWarning.SqlApiWarningCode.ValueType = ...  # 1
        """Warning when one or more regions are not reachable.  The returned result
        set may be incomplete.
        """

    class SqlApiWarningCode(_SqlApiWarningCode, metaclass=_SqlApiWarningCodeEnumTypeWrapper):
        pass

    SQL_API_WARNING_CODE_UNSPECIFIED: ApiWarning.SqlApiWarningCode.ValueType = ...  # 0
    """An unknown or unset warning type from Cloud SQL API."""

    REGION_UNREACHABLE: ApiWarning.SqlApiWarningCode.ValueType = ...  # 1
    """Warning when one or more regions are not reachable.  The returned result
    set may be incomplete.
    """


    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    code: global___ApiWarning.SqlApiWarningCode.ValueType = ...
    """Code to uniquely identify the warning type."""

    message: typing.Text = ...
    """The warning message."""

    region: typing.Text = ...
    """The region name for REGION_UNREACHABLE warning."""

    def __init__(self,
        *,
        code : global___ApiWarning.SqlApiWarningCode.ValueType = ...,
        message : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","message",b"message","region",b"region"]) -> None: ...
global___ApiWarning = ApiWarning

class BackupRetentionSettings(google.protobuf.message.Message):
    """We currently only support backup retention by specifying the number
    of backups we will retain.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RetentionUnit:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RetentionUnitEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RetentionUnit.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        RETENTION_UNIT_UNSPECIFIED: BackupRetentionSettings.RetentionUnit.ValueType = ...  # 0
        """Backup retention unit is unspecified, will be treated as COUNT."""

        COUNT: BackupRetentionSettings.RetentionUnit.ValueType = ...  # 1
        """Retention will be by count, eg. "retain the most recent 7 backups"."""

    class RetentionUnit(_RetentionUnit, metaclass=_RetentionUnitEnumTypeWrapper):
        """The units that retained_backups specifies, we only support COUNT."""
        pass

    RETENTION_UNIT_UNSPECIFIED: BackupRetentionSettings.RetentionUnit.ValueType = ...  # 0
    """Backup retention unit is unspecified, will be treated as COUNT."""

    COUNT: BackupRetentionSettings.RetentionUnit.ValueType = ...  # 1
    """Retention will be by count, eg. "retain the most recent 7 backups"."""


    RETENTION_UNIT_FIELD_NUMBER: builtins.int
    RETAINED_BACKUPS_FIELD_NUMBER: builtins.int
    retention_unit: global___BackupRetentionSettings.RetentionUnit.ValueType = ...
    """The unit that 'retained_backups' represents."""

    @property
    def retained_backups(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """Depending on the value of retention_unit, this is used to determine
        if a backup needs to be deleted.  If retention_unit is 'COUNT', we will
        retain this many backups.
        """
        pass
    def __init__(self,
        *,
        retention_unit : global___BackupRetentionSettings.RetentionUnit.ValueType = ...,
        retained_backups : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["retained_backups",b"retained_backups"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["retained_backups",b"retained_backups","retention_unit",b"retention_unit"]) -> None: ...
global___BackupRetentionSettings = BackupRetentionSettings

class BackupConfiguration(google.protobuf.message.Message):
    """Database instance backup configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_TIME_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    BINARY_LOG_ENABLED_FIELD_NUMBER: builtins.int
    REPLICATION_LOG_ARCHIVING_ENABLED_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    POINT_IN_TIME_RECOVERY_ENABLED_FIELD_NUMBER: builtins.int
    TRANSACTION_LOG_RETENTION_DAYS_FIELD_NUMBER: builtins.int
    BACKUP_RETENTION_SETTINGS_FIELD_NUMBER: builtins.int
    start_time: typing.Text = ...
    """Start time for the daily backup configuration in UTC timezone in the 24
    hour format - **HH:MM**.
    """

    @property
    def enabled(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Whether this configuration is enabled."""
        pass
    kind: typing.Text = ...
    """This is always **sql#backupConfiguration**."""

    @property
    def binary_log_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """(MySQL only) Whether binary log is enabled. If backup configuration is
        disabled, binarylog must be disabled as well.
        """
        pass
    @property
    def replication_log_archiving_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Reserved for future use."""
        pass
    location: typing.Text = ...
    """Location of the backup"""

    @property
    def point_in_time_recovery_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """(Postgres only) Whether point in time recovery is enabled."""
        pass
    @property
    def transaction_log_retention_days(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """The number of days of transaction logs we retain for point in time
        restore, from 1-7.
        """
        pass
    @property
    def backup_retention_settings(self) -> global___BackupRetentionSettings:
        """Backup retention settings."""
        pass
    def __init__(self,
        *,
        start_time : typing.Text = ...,
        enabled : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        kind : typing.Text = ...,
        binary_log_enabled : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        replication_log_archiving_enabled : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        location : typing.Text = ...,
        point_in_time_recovery_enabled : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        transaction_log_retention_days : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        backup_retention_settings : typing.Optional[global___BackupRetentionSettings] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["backup_retention_settings",b"backup_retention_settings","binary_log_enabled",b"binary_log_enabled","enabled",b"enabled","point_in_time_recovery_enabled",b"point_in_time_recovery_enabled","replication_log_archiving_enabled",b"replication_log_archiving_enabled","transaction_log_retention_days",b"transaction_log_retention_days"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_retention_settings",b"backup_retention_settings","binary_log_enabled",b"binary_log_enabled","enabled",b"enabled","kind",b"kind","location",b"location","point_in_time_recovery_enabled",b"point_in_time_recovery_enabled","replication_log_archiving_enabled",b"replication_log_archiving_enabled","start_time",b"start_time","transaction_log_retention_days",b"transaction_log_retention_days"]) -> None: ...
global___BackupConfiguration = BackupConfiguration

class BackupRun(google.protobuf.message.Message):
    """A BackupRun resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    ENQUEUED_TIME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    WINDOW_START_TIME_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    DISK_ENCRYPTION_CONFIGURATION_FIELD_NUMBER: builtins.int
    DISK_ENCRYPTION_STATUS_FIELD_NUMBER: builtins.int
    BACKUP_KIND_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#backupRun**."""

    status: global___SqlBackupRunStatus.ValueType = ...
    """The status of this run."""

    @property
    def enqueued_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the run was enqueued in UTC timezone in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**.
        """
        pass
    id: builtins.int = ...
    """The identifier for this backup run. Unique only for a specific Cloud SQL
    instance.
    """

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the backup operation actually started in UTC timezone in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**.
        """
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the backup operation completed in UTC timezone in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**.
        """
        pass
    @property
    def error(self) -> global___OperationError:
        """Information about why the backup operation failed. This is only present if
        the run has the FAILED status.
        """
        pass
    type: global___SqlBackupRunType.ValueType = ...
    """The type of this run; can be either "AUTOMATED" or "ON_DEMAND". This field
    defaults to "ON_DEMAND" and is ignored, when specified for insert requests.
    """

    description: typing.Text = ...
    """The description of this run, only applicable to on-demand backups."""

    @property
    def window_start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The start time of the backup window during which this the backup was
        attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for
        example **2012-11-15T16:19:00.094Z**.
        """
        pass
    instance: typing.Text = ...
    """Name of the database instance."""

    self_link: typing.Text = ...
    """The URI of this resource."""

    location: typing.Text = ...
    """Location of the backups."""

    @property
    def disk_encryption_configuration(self) -> global___DiskEncryptionConfiguration:
        """Encryption configuration specific to a backup."""
        pass
    @property
    def disk_encryption_status(self) -> global___DiskEncryptionStatus:
        """Encryption status specific to a backup."""
        pass
    backup_kind: global___SqlBackupKind.ValueType = ...
    """Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        status : global___SqlBackupRunStatus.ValueType = ...,
        enqueued_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        id : builtins.int = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        error : typing.Optional[global___OperationError] = ...,
        type : global___SqlBackupRunType.ValueType = ...,
        description : typing.Text = ...,
        window_start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        instance : typing.Text = ...,
        self_link : typing.Text = ...,
        location : typing.Text = ...,
        disk_encryption_configuration : typing.Optional[global___DiskEncryptionConfiguration] = ...,
        disk_encryption_status : typing.Optional[global___DiskEncryptionStatus] = ...,
        backup_kind : global___SqlBackupKind.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["disk_encryption_configuration",b"disk_encryption_configuration","disk_encryption_status",b"disk_encryption_status","end_time",b"end_time","enqueued_time",b"enqueued_time","error",b"error","start_time",b"start_time","window_start_time",b"window_start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_kind",b"backup_kind","description",b"description","disk_encryption_configuration",b"disk_encryption_configuration","disk_encryption_status",b"disk_encryption_status","end_time",b"end_time","enqueued_time",b"enqueued_time","error",b"error","id",b"id","instance",b"instance","kind",b"kind","location",b"location","self_link",b"self_link","start_time",b"start_time","status",b"status","type",b"type","window_start_time",b"window_start_time"]) -> None: ...
global___BackupRun = BackupRun

class BackupRunsListResponse(google.protobuf.message.Message):
    """Backup run list results."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#backupRunsList**."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BackupRun]:
        """A list of backup runs in reverse chronological order of the enqueued time."""
        pass
    next_page_token: typing.Text = ...
    """The continuation token, used to page through large result sets. Provide
    this value in a subsequent request to return the next page of results.
    """

    def __init__(self,
        *,
        kind : typing.Text = ...,
        items : typing.Optional[typing.Iterable[global___BackupRun]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items",b"items","kind",b"kind","next_page_token",b"next_page_token"]) -> None: ...
global___BackupRunsListResponse = BackupRunsListResponse

class BinLogCoordinates(google.protobuf.message.Message):
    """Binary log coordinates."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BIN_LOG_FILE_NAME_FIELD_NUMBER: builtins.int
    BIN_LOG_POSITION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    bin_log_file_name: typing.Text = ...
    """Name of the binary log file for a Cloud SQL instance."""

    bin_log_position: builtins.int = ...
    """Position (offset) within the binary log file."""

    kind: typing.Text = ...
    """This is always **sql#binLogCoordinates**."""

    def __init__(self,
        *,
        bin_log_file_name : typing.Text = ...,
        bin_log_position : builtins.int = ...,
        kind : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bin_log_file_name",b"bin_log_file_name","bin_log_position",b"bin_log_position","kind",b"kind"]) -> None: ...
global___BinLogCoordinates = BinLogCoordinates

class BackupContext(google.protobuf.message.Message):
    """Backup context."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKUP_ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    backup_id: builtins.int = ...
    """The identifier of the backup."""

    kind: typing.Text = ...
    """This is always **sql#backupContext**."""

    def __init__(self,
        *,
        backup_id : builtins.int = ...,
        kind : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_id",b"backup_id","kind",b"kind"]) -> None: ...
global___BackupContext = BackupContext

class CloneContext(google.protobuf.message.Message):
    """Database instance clone context."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    PITR_TIMESTAMP_MS_FIELD_NUMBER: builtins.int
    DESTINATION_INSTANCE_NAME_FIELD_NUMBER: builtins.int
    BIN_LOG_COORDINATES_FIELD_NUMBER: builtins.int
    POINT_IN_TIME_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#cloneContext**."""

    pitr_timestamp_ms: builtins.int = ...
    """Reserved for future use."""

    destination_instance_name: typing.Text = ...
    """Name of the Cloud SQL instance to be created as a clone."""

    @property
    def bin_log_coordinates(self) -> global___BinLogCoordinates:
        """Binary log coordinates, if specified, identify the position up to which the
        source instance is cloned. If not specified, the source instance is
        cloned up to the most recent binary log coordinates.
        """
        pass
    @property
    def point_in_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp, if specified, identifies the time to which the source instance
        is cloned.
        """
        pass
    def __init__(self,
        *,
        kind : typing.Text = ...,
        pitr_timestamp_ms : builtins.int = ...,
        destination_instance_name : typing.Text = ...,
        bin_log_coordinates : typing.Optional[global___BinLogCoordinates] = ...,
        point_in_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bin_log_coordinates",b"bin_log_coordinates","point_in_time",b"point_in_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bin_log_coordinates",b"bin_log_coordinates","destination_instance_name",b"destination_instance_name","kind",b"kind","pitr_timestamp_ms",b"pitr_timestamp_ms","point_in_time",b"point_in_time"]) -> None: ...
global___CloneContext = CloneContext

class Database(google.protobuf.message.Message):
    """Represents a SQL database on the Cloud SQL instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    CHARSET_FIELD_NUMBER: builtins.int
    COLLATION_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    SQLSERVER_DATABASE_DETAILS_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#database**."""

    charset: typing.Text = ...
    """The Cloud SQL charset value."""

    collation: typing.Text = ...
    """The Cloud SQL collation value."""

    etag: typing.Text = ...
    """This field is deprecated and will be removed from a future version of the
    API.
    """

    name: typing.Text = ...
    """The name of the database in the Cloud SQL instance. This does not include
    the project ID or instance name.
    """

    instance: typing.Text = ...
    """The name of the Cloud SQL instance. This does not include the project ID."""

    self_link: typing.Text = ...
    """The URI of this resource."""

    project: typing.Text = ...
    """The project ID of the project containing the Cloud SQL database. The Google
    apps domain is prefixed if applicable.
    """

    @property
    def sqlserver_database_details(self) -> global___SqlServerDatabaseDetails: ...
    def __init__(self,
        *,
        kind : typing.Text = ...,
        charset : typing.Text = ...,
        collation : typing.Text = ...,
        etag : typing.Text = ...,
        name : typing.Text = ...,
        instance : typing.Text = ...,
        self_link : typing.Text = ...,
        project : typing.Text = ...,
        sqlserver_database_details : typing.Optional[global___SqlServerDatabaseDetails] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["database_details",b"database_details","sqlserver_database_details",b"sqlserver_database_details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["charset",b"charset","collation",b"collation","database_details",b"database_details","etag",b"etag","instance",b"instance","kind",b"kind","name",b"name","project",b"project","self_link",b"self_link","sqlserver_database_details",b"sqlserver_database_details"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["database_details",b"database_details"]) -> typing.Optional[typing_extensions.Literal["sqlserver_database_details"]]: ...
global___Database = Database

class SqlServerDatabaseDetails(google.protobuf.message.Message):
    """Represents a Sql Server database on the Cloud SQL instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMPATIBILITY_LEVEL_FIELD_NUMBER: builtins.int
    RECOVERY_MODEL_FIELD_NUMBER: builtins.int
    compatibility_level: builtins.int = ...
    """The version of SQL Server with which the database is to be made compatible"""

    recovery_model: typing.Text = ...
    """The recovery model of a SQL Server database"""

    def __init__(self,
        *,
        compatibility_level : builtins.int = ...,
        recovery_model : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["compatibility_level",b"compatibility_level","recovery_model",b"recovery_model"]) -> None: ...
global___SqlServerDatabaseDetails = SqlServerDatabaseDetails

class DatabaseFlags(google.protobuf.message.Message):
    """Database flags for Cloud SQL instances."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the flag. These flags are passed at instance startup, so
    include both server options and system variables. Flags are
    specified with underscores, not hyphens. For more information, see
    [Configuring Database Flags](https://cloud.google.com/sql/docs/mysql/flags)
    in the Cloud SQL documentation.
    """

    value: typing.Text = ...
    """The value of the flag. Booleans are set to **on** for true
    and **off** for false. This field must be omitted if the flag
    doesn't take a value.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        value : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","value",b"value"]) -> None: ...
global___DatabaseFlags = DatabaseFlags

class SyncFlags(google.protobuf.message.Message):
    """Initial sync flags for certain Cloud SQL APIs.
    Currently used for the MySQL external server initial dump.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the flag."""

    value: typing.Text = ...
    """The value of the flag. This field must be omitted if the flag
    doesn't take a value.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        value : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","value",b"value"]) -> None: ...
global___SyncFlags = SyncFlags

class InstanceReference(google.protobuf.message.Message):
    """Reference to another Cloud SQL instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the Cloud SQL instance being referenced.
    This does not include the project ID.
    """

    region: typing.Text = ...
    """The region of the Cloud SQL instance being referenced."""

    project: typing.Text = ...
    """The project ID of the Cloud SQL instance being referenced.
    The default is the same project ID as the instance references it.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        region : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","project",b"project","region",b"region"]) -> None: ...
global___InstanceReference = InstanceReference

class DatabaseInstance(google.protobuf.message.Message):
    """A Cloud SQL instance resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SqlInstanceState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SqlInstanceStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlInstanceState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SQL_INSTANCE_STATE_UNSPECIFIED: DatabaseInstance.SqlInstanceState.ValueType = ...  # 0
        """The state of the instance is unknown."""

        RUNNABLE: DatabaseInstance.SqlInstanceState.ValueType = ...  # 1
        """The instance is running, or has been stopped by owner."""

        SUSPENDED: DatabaseInstance.SqlInstanceState.ValueType = ...  # 2
        """The instance is not available, for example due to problems with billing."""

        PENDING_DELETE: DatabaseInstance.SqlInstanceState.ValueType = ...  # 3
        """The instance is being deleted."""

        PENDING_CREATE: DatabaseInstance.SqlInstanceState.ValueType = ...  # 4
        """The instance is being created."""

        MAINTENANCE: DatabaseInstance.SqlInstanceState.ValueType = ...  # 5
        """The instance is down for maintenance."""

        FAILED: DatabaseInstance.SqlInstanceState.ValueType = ...  # 6
        """The creation of the instance failed or a fatal error occurred during
        maintenance.
        """

        ONLINE_MAINTENANCE: DatabaseInstance.SqlInstanceState.ValueType = ...  # 7
        """Deprecated"""

    class SqlInstanceState(_SqlInstanceState, metaclass=_SqlInstanceStateEnumTypeWrapper):
        """The current serving state of the database instance."""
        pass

    SQL_INSTANCE_STATE_UNSPECIFIED: DatabaseInstance.SqlInstanceState.ValueType = ...  # 0
    """The state of the instance is unknown."""

    RUNNABLE: DatabaseInstance.SqlInstanceState.ValueType = ...  # 1
    """The instance is running, or has been stopped by owner."""

    SUSPENDED: DatabaseInstance.SqlInstanceState.ValueType = ...  # 2
    """The instance is not available, for example due to problems with billing."""

    PENDING_DELETE: DatabaseInstance.SqlInstanceState.ValueType = ...  # 3
    """The instance is being deleted."""

    PENDING_CREATE: DatabaseInstance.SqlInstanceState.ValueType = ...  # 4
    """The instance is being created."""

    MAINTENANCE: DatabaseInstance.SqlInstanceState.ValueType = ...  # 5
    """The instance is down for maintenance."""

    FAILED: DatabaseInstance.SqlInstanceState.ValueType = ...  # 6
    """The creation of the instance failed or a fatal error occurred during
    maintenance.
    """

    ONLINE_MAINTENANCE: DatabaseInstance.SqlInstanceState.ValueType = ...  # 7
    """Deprecated"""


    class SqlFailoverReplica(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_FIELD_NUMBER: builtins.int
        AVAILABLE_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """The name of the failover replica. If specified at instance creation, a
        failover replica is created for the instance. The name
        doesn't include the project ID.
        """

        @property
        def available(self) -> google.protobuf.wrappers_pb2.BoolValue:
            """The availability status of the failover replica. A false status indicates
            that the failover replica is out of sync. The primary instance can only
            failover to the failover replica when the status is true.
            """
            pass
        def __init__(self,
            *,
            name : typing.Text = ...,
            available : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["available",b"available"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["available",b"available","name",b"name"]) -> None: ...

    class SqlScheduledMaintenance(google.protobuf.message.Message):
        """Any scheduled maintenancce for this instance."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        START_TIME_FIELD_NUMBER: builtins.int
        CAN_DEFER_FIELD_NUMBER: builtins.int
        CAN_RESCHEDULE_FIELD_NUMBER: builtins.int
        SCHEDULE_DEADLINE_TIME_FIELD_NUMBER: builtins.int
        @property
        def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """The start time of any upcoming scheduled maintenance for this instance."""
            pass
        can_defer: builtins.bool = ...
        can_reschedule: builtins.bool = ...
        """If the scheduled maintenance can be rescheduled."""

        @property
        def schedule_deadline_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Maintenance cannot be rescheduled to start beyond this deadline."""
            pass
        def __init__(self,
            *,
            start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            can_defer : builtins.bool = ...,
            can_reschedule : builtins.bool = ...,
            schedule_deadline_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_schedule_deadline_time",b"_schedule_deadline_time","schedule_deadline_time",b"schedule_deadline_time","start_time",b"start_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_schedule_deadline_time",b"_schedule_deadline_time","can_defer",b"can_defer","can_reschedule",b"can_reschedule","schedule_deadline_time",b"schedule_deadline_time","start_time",b"start_time"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_schedule_deadline_time",b"_schedule_deadline_time"]) -> typing.Optional[typing_extensions.Literal["schedule_deadline_time"]]: ...

    class SqlOutOfDiskReport(google.protobuf.message.Message):
        """This message wraps up the information written by out-of-disk detection job."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _SqlOutOfDiskState:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _SqlOutOfDiskStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlOutOfDiskState.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            SQL_OUT_OF_DISK_STATE_UNSPECIFIED: DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState.ValueType = ...  # 0
            """Unspecified state"""

            NORMAL: DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState.ValueType = ...  # 1
            """The instance has plenty space on data disk"""

            SOFT_SHUTDOWN: DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState.ValueType = ...  # 2
            """Data disk is almost used up. It is shutdown to prevent data
            corruption.
            """

        class SqlOutOfDiskState(_SqlOutOfDiskState, metaclass=_SqlOutOfDiskStateEnumTypeWrapper):
            """This enum lists all possible states regarding out-of-disk issues."""
            pass

        SQL_OUT_OF_DISK_STATE_UNSPECIFIED: DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState.ValueType = ...  # 0
        """Unspecified state"""

        NORMAL: DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState.ValueType = ...  # 1
        """The instance has plenty space on data disk"""

        SOFT_SHUTDOWN: DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState.ValueType = ...  # 2
        """Data disk is almost used up. It is shutdown to prevent data
        corruption.
        """


        SQL_OUT_OF_DISK_STATE_FIELD_NUMBER: builtins.int
        SQL_MIN_RECOMMENDED_INCREASE_SIZE_GB_FIELD_NUMBER: builtins.int
        sql_out_of_disk_state: global___DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState.ValueType = ...
        """This field represents the state generated by the proactive database
        wellness job for OutOfDisk issues.
        *  Writers:
          *  the proactive database wellness job for OOD.
        *  Readers:
          *  the proactive database wellness job
        """

        sql_min_recommended_increase_size_gb: builtins.int = ...
        """The minimum recommended increase size in GigaBytes
        This field is consumed by the frontend
        *  Writers:
          *  the proactive database wellness job for OOD.
        *  Readers:
        """

        def __init__(self,
            *,
            sql_out_of_disk_state : typing.Optional[global___DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState.ValueType] = ...,
            sql_min_recommended_increase_size_gb : typing.Optional[builtins.int] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_sql_min_recommended_increase_size_gb",b"_sql_min_recommended_increase_size_gb","_sql_out_of_disk_state",b"_sql_out_of_disk_state","sql_min_recommended_increase_size_gb",b"sql_min_recommended_increase_size_gb","sql_out_of_disk_state",b"sql_out_of_disk_state"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_sql_min_recommended_increase_size_gb",b"_sql_min_recommended_increase_size_gb","_sql_out_of_disk_state",b"_sql_out_of_disk_state","sql_min_recommended_increase_size_gb",b"sql_min_recommended_increase_size_gb","sql_out_of_disk_state",b"sql_out_of_disk_state"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_sql_min_recommended_increase_size_gb",b"_sql_min_recommended_increase_size_gb"]) -> typing.Optional[typing_extensions.Literal["sql_min_recommended_increase_size_gb"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_sql_out_of_disk_state",b"_sql_out_of_disk_state"]) -> typing.Optional[typing_extensions.Literal["sql_out_of_disk_state"]]: ...

    KIND_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    DATABASE_VERSION_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    FAILOVER_REPLICA_FIELD_NUMBER: builtins.int
    MASTER_INSTANCE_NAME_FIELD_NUMBER: builtins.int
    REPLICA_NAMES_FIELD_NUMBER: builtins.int
    MAX_DISK_SIZE_FIELD_NUMBER: builtins.int
    CURRENT_DISK_SIZE_FIELD_NUMBER: builtins.int
    IP_ADDRESSES_FIELD_NUMBER: builtins.int
    SERVER_CA_CERT_FIELD_NUMBER: builtins.int
    INSTANCE_TYPE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    IPV6_ADDRESS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_EMAIL_ADDRESS_FIELD_NUMBER: builtins.int
    ON_PREMISES_CONFIGURATION_FIELD_NUMBER: builtins.int
    REPLICA_CONFIGURATION_FIELD_NUMBER: builtins.int
    BACKEND_TYPE_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SUSPENSION_REASON_FIELD_NUMBER: builtins.int
    CONNECTION_NAME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    GCE_ZONE_FIELD_NUMBER: builtins.int
    SECONDARY_GCE_ZONE_FIELD_NUMBER: builtins.int
    DISK_ENCRYPTION_CONFIGURATION_FIELD_NUMBER: builtins.int
    DISK_ENCRYPTION_STATUS_FIELD_NUMBER: builtins.int
    ROOT_PASSWORD_FIELD_NUMBER: builtins.int
    SCHEDULED_MAINTENANCE_FIELD_NUMBER: builtins.int
    SATISFIES_PZS_FIELD_NUMBER: builtins.int
    DATABASE_INSTALLED_VERSION_FIELD_NUMBER: builtins.int
    OUT_OF_DISK_REPORT_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#instance**."""

    state: global___DatabaseInstance.SqlInstanceState.ValueType = ...
    """The current serving state of the Cloud SQL instance."""

    database_version: global___SqlDatabaseVersion.ValueType = ...
    """The database engine type and version. The **databaseVersion** field cannot
    be changed after instance creation.
    """

    @property
    def settings(self) -> global___Settings:
        """The user settings."""
        pass
    etag: typing.Text = ...
    """This field is deprecated and will be removed from a future version of the
    API. Use the **settings.settingsVersion** field instead.
    """

    @property
    def failover_replica(self) -> global___DatabaseInstance.SqlFailoverReplica:
        """The name and status of the failover replica."""
        pass
    master_instance_name: typing.Text = ...
    """The name of the instance which will act as primary in the replication
    setup.
    """

    @property
    def replica_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The replicas of the instance."""
        pass
    @property
    def max_disk_size(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """The maximum disk size of the instance in bytes."""
        pass
    @property
    def current_disk_size(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """The current disk usage of the instance in bytes. This property has been
        deprecated. Use the
        "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud
        Monitoring API instead. Please see [this
        announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ)
        for details.
        """
        pass
    @property
    def ip_addresses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IpMapping]:
        """The assigned IP addresses for the instance."""
        pass
    @property
    def server_ca_cert(self) -> global___SslCert:
        """SSL configuration."""
        pass
    instance_type: global___SqlInstanceType.ValueType = ...
    """The instance type."""

    project: typing.Text = ...
    """The project ID of the project containing the Cloud SQL instance. The Google
    apps domain is prefixed if applicable.
    """

    ipv6_address: typing.Text = ...
    """The IPv6 address assigned to the instance.
    (Deprecated) This property was applicable only
    to First Generation instances.
    """

    service_account_email_address: typing.Text = ...
    """The service account email address assigned to the instance. <br>This
    property is read-only.
    """

    @property
    def on_premises_configuration(self) -> global___OnPremisesConfiguration:
        """Configuration specific to on-premises instances."""
        pass
    @property
    def replica_configuration(self) -> global___ReplicaConfiguration:
        """Configuration specific to failover replicas and read replicas."""
        pass
    backend_type: global___SqlBackendType.ValueType = ...
    """The backend type.
    **SECOND_GEN**: Cloud SQL database instance.
    **EXTERNAL**: A database server that is not managed by Google.

    This property is read-only; use the **tier** property in the **settings**
    object to determine the database type.
    """

    self_link: typing.Text = ...
    """The URI of this resource."""

    @property
    def suspension_reason(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___SqlSuspensionReason.ValueType]:
        """If the instance state is SUSPENDED, the reason for the suspension."""
        pass
    connection_name: typing.Text = ...
    """Connection name of the Cloud SQL instance used in connection strings."""

    name: typing.Text = ...
    """Name of the Cloud SQL instance. This does not include the project ID."""

    region: typing.Text = ...
    """The geographical region. Can be:
    *  **us-central** (**FIRST_GEN** instances only)
    *  **us-central1** (**SECOND_GEN** instances only)
    *  **asia-east1** or **europe-west1**.

    Defaults to **us-central** or **us-central1** depending on the instance
    type. The region cannot be changed after instance creation.
    """

    gce_zone: typing.Text = ...
    """The Compute Engine zone that the instance is currently serving from. This
    value could be different from the zone that was specified when the instance
    was created if the instance has failed over to its secondary zone. WARNING:
    Changing this might restart the instance.
    """

    secondary_gce_zone: typing.Text = ...
    """The Compute Engine zone that the failover instance is currently serving
    from for a regional instance. This value could be different
    from the zone that was specified when the instance
    was created if the instance has failed over to its secondary/failover zone.
    Reserved for future use.
    """

    @property
    def disk_encryption_configuration(self) -> global___DiskEncryptionConfiguration:
        """Disk encryption configuration specific to an instance."""
        pass
    @property
    def disk_encryption_status(self) -> global___DiskEncryptionStatus:
        """Disk encryption status specific to an instance."""
        pass
    root_password: typing.Text = ...
    """Initial root password. Use only on creation."""

    @property
    def scheduled_maintenance(self) -> global___DatabaseInstance.SqlScheduledMaintenance:
        """The start time of any upcoming scheduled maintenance for this instance."""
        pass
    @property
    def satisfies_pzs(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """The status indicating if instance satisfiesPzs.
        Reserved for future use.
        """
        pass
    database_installed_version: typing.Text = ...
    """Output only. Stores the current database version running on the instance including
    minor version such as **MYSQL_8_0_18**.
    """

    @property
    def out_of_disk_report(self) -> global___DatabaseInstance.SqlOutOfDiskReport:
        """This field represents the report generated by the proactive database
        wellness job for OutOfDisk issues.
        *  Writers:
          *  the proactive database wellness job for OOD.
        *  Readers:
          *  the proactive database wellness job
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the instance was created in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**.
        """
        pass
    def __init__(self,
        *,
        kind : typing.Text = ...,
        state : global___DatabaseInstance.SqlInstanceState.ValueType = ...,
        database_version : global___SqlDatabaseVersion.ValueType = ...,
        settings : typing.Optional[global___Settings] = ...,
        etag : typing.Text = ...,
        failover_replica : typing.Optional[global___DatabaseInstance.SqlFailoverReplica] = ...,
        master_instance_name : typing.Text = ...,
        replica_names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        max_disk_size : typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        current_disk_size : typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        ip_addresses : typing.Optional[typing.Iterable[global___IpMapping]] = ...,
        server_ca_cert : typing.Optional[global___SslCert] = ...,
        instance_type : global___SqlInstanceType.ValueType = ...,
        project : typing.Text = ...,
        ipv6_address : typing.Text = ...,
        service_account_email_address : typing.Text = ...,
        on_premises_configuration : typing.Optional[global___OnPremisesConfiguration] = ...,
        replica_configuration : typing.Optional[global___ReplicaConfiguration] = ...,
        backend_type : global___SqlBackendType.ValueType = ...,
        self_link : typing.Text = ...,
        suspension_reason : typing.Optional[typing.Iterable[global___SqlSuspensionReason.ValueType]] = ...,
        connection_name : typing.Text = ...,
        name : typing.Text = ...,
        region : typing.Text = ...,
        gce_zone : typing.Text = ...,
        secondary_gce_zone : typing.Text = ...,
        disk_encryption_configuration : typing.Optional[global___DiskEncryptionConfiguration] = ...,
        disk_encryption_status : typing.Optional[global___DiskEncryptionStatus] = ...,
        root_password : typing.Text = ...,
        scheduled_maintenance : typing.Optional[global___DatabaseInstance.SqlScheduledMaintenance] = ...,
        satisfies_pzs : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        database_installed_version : typing.Text = ...,
        out_of_disk_report : typing.Optional[global___DatabaseInstance.SqlOutOfDiskReport] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_out_of_disk_report",b"_out_of_disk_report","create_time",b"create_time","current_disk_size",b"current_disk_size","disk_encryption_configuration",b"disk_encryption_configuration","disk_encryption_status",b"disk_encryption_status","failover_replica",b"failover_replica","max_disk_size",b"max_disk_size","on_premises_configuration",b"on_premises_configuration","out_of_disk_report",b"out_of_disk_report","replica_configuration",b"replica_configuration","satisfies_pzs",b"satisfies_pzs","scheduled_maintenance",b"scheduled_maintenance","server_ca_cert",b"server_ca_cert","settings",b"settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_out_of_disk_report",b"_out_of_disk_report","backend_type",b"backend_type","connection_name",b"connection_name","create_time",b"create_time","current_disk_size",b"current_disk_size","database_installed_version",b"database_installed_version","database_version",b"database_version","disk_encryption_configuration",b"disk_encryption_configuration","disk_encryption_status",b"disk_encryption_status","etag",b"etag","failover_replica",b"failover_replica","gce_zone",b"gce_zone","instance_type",b"instance_type","ip_addresses",b"ip_addresses","ipv6_address",b"ipv6_address","kind",b"kind","master_instance_name",b"master_instance_name","max_disk_size",b"max_disk_size","name",b"name","on_premises_configuration",b"on_premises_configuration","out_of_disk_report",b"out_of_disk_report","project",b"project","region",b"region","replica_configuration",b"replica_configuration","replica_names",b"replica_names","root_password",b"root_password","satisfies_pzs",b"satisfies_pzs","scheduled_maintenance",b"scheduled_maintenance","secondary_gce_zone",b"secondary_gce_zone","self_link",b"self_link","server_ca_cert",b"server_ca_cert","service_account_email_address",b"service_account_email_address","settings",b"settings","state",b"state","suspension_reason",b"suspension_reason"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_out_of_disk_report",b"_out_of_disk_report"]) -> typing.Optional[typing_extensions.Literal["out_of_disk_report"]]: ...
global___DatabaseInstance = DatabaseInstance

class DatabasesListResponse(google.protobuf.message.Message):
    """Database list response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#databasesList**."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Database]:
        """List of database resources in the instance."""
        pass
    def __init__(self,
        *,
        kind : typing.Text = ...,
        items : typing.Optional[typing.Iterable[global___Database]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items",b"items","kind",b"kind"]) -> None: ...
global___DatabasesListResponse = DatabasesListResponse

class DemoteMasterConfiguration(google.protobuf.message.Message):
    """Read-replica configuration for connecting to the on-premises primary
    instance.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    MYSQL_REPLICA_CONFIGURATION_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#demoteMasterConfiguration**."""

    @property
    def mysql_replica_configuration(self) -> global___DemoteMasterMySqlReplicaConfiguration:
        """MySQL specific configuration when replicating from a MySQL on-premises
        primary instance. Replication configuration information such as the
        username, password, certificates, and keys are not stored in the instance
        metadata. The configuration information is used only to set up the
        replication connection and is stored by MySQL in a file named
        **master.info** in the data directory.
        """
        pass
    def __init__(self,
        *,
        kind : typing.Text = ...,
        mysql_replica_configuration : typing.Optional[global___DemoteMasterMySqlReplicaConfiguration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["mysql_replica_configuration",b"mysql_replica_configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind",b"kind","mysql_replica_configuration",b"mysql_replica_configuration"]) -> None: ...
global___DemoteMasterConfiguration = DemoteMasterConfiguration

class DemoteMasterContext(google.protobuf.message.Message):
    """Database instance demote primary instance context."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    VERIFY_GTID_CONSISTENCY_FIELD_NUMBER: builtins.int
    MASTER_INSTANCE_NAME_FIELD_NUMBER: builtins.int
    REPLICA_CONFIGURATION_FIELD_NUMBER: builtins.int
    SKIP_REPLICATION_SETUP_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#demoteMasterContext**."""

    @property
    def verify_gtid_consistency(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Verify GTID consistency for demote operation. Default value:
        **True**. Setting this flag to false enables you to bypass GTID consistency
        check between on-premises primary instance and Cloud SQL instance during
        the demotion operation but also exposes you to the risk of future
        replication failures. Change the value only if you know the reason for the
        GTID divergence and are confident that doing so will not cause any
        replication issues.
        """
        pass
    master_instance_name: typing.Text = ...
    """The name of the instance which will act as on-premises primary instance
    in the replication setup.
    """

    @property
    def replica_configuration(self) -> global___DemoteMasterConfiguration:
        """Configuration specific to read-replicas replicating from the on-premises
        primary instance.
        """
        pass
    skip_replication_setup: builtins.bool = ...
    """Flag to skip replication setup on the instance."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        verify_gtid_consistency : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        master_instance_name : typing.Text = ...,
        replica_configuration : typing.Optional[global___DemoteMasterConfiguration] = ...,
        skip_replication_setup : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["replica_configuration",b"replica_configuration","verify_gtid_consistency",b"verify_gtid_consistency"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind",b"kind","master_instance_name",b"master_instance_name","replica_configuration",b"replica_configuration","skip_replication_setup",b"skip_replication_setup","verify_gtid_consistency",b"verify_gtid_consistency"]) -> None: ...
global___DemoteMasterContext = DemoteMasterContext

class DemoteMasterMySqlReplicaConfiguration(google.protobuf.message.Message):
    """Read-replica configuration specific to MySQL databases."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    CLIENT_KEY_FIELD_NUMBER: builtins.int
    CLIENT_CERTIFICATE_FIELD_NUMBER: builtins.int
    CA_CERTIFICATE_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#demoteMasterMysqlReplicaConfiguration**."""

    username: typing.Text = ...
    """The username for the replication connection."""

    password: typing.Text = ...
    """The password for the replication connection."""

    client_key: typing.Text = ...
    """PEM representation of the replica's private key. The corresponsing public
    key is encoded in the client's certificate. The format of the replica's
    private key can be either PKCS #1 or PKCS #8.
    """

    client_certificate: typing.Text = ...
    """PEM representation of the replica's x509 certificate."""

    ca_certificate: typing.Text = ...
    """PEM representation of the trusted CA's x509 certificate."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        username : typing.Text = ...,
        password : typing.Text = ...,
        client_key : typing.Text = ...,
        client_certificate : typing.Text = ...,
        ca_certificate : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ca_certificate",b"ca_certificate","client_certificate",b"client_certificate","client_key",b"client_key","kind",b"kind","password",b"password","username",b"username"]) -> None: ...
global___DemoteMasterMySqlReplicaConfiguration = DemoteMasterMySqlReplicaConfiguration

class ExportContext(google.protobuf.message.Message):
    """Database instance export context."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SqlCsvExportOptions(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SELECT_QUERY_FIELD_NUMBER: builtins.int
        ESCAPE_CHARACTER_FIELD_NUMBER: builtins.int
        QUOTE_CHARACTER_FIELD_NUMBER: builtins.int
        FIELDS_TERMINATED_BY_FIELD_NUMBER: builtins.int
        LINES_TERMINATED_BY_FIELD_NUMBER: builtins.int
        select_query: typing.Text = ...
        """The select query used to extract the data."""

        escape_character: typing.Text = ...
        """Specifies the character that should appear before a data character that
        needs to be escaped.
        """

        quote_character: typing.Text = ...
        """Specifies the quoting character to be used when a data value is quoted."""

        fields_terminated_by: typing.Text = ...
        """Specifies the character that separates columns within each row (line) of
        the file.
        """

        lines_terminated_by: typing.Text = ...
        """This is used to separate lines. If a line does not contain all fields,
        the rest of the columns are set to their default values.
        """

        def __init__(self,
            *,
            select_query : typing.Text = ...,
            escape_character : typing.Text = ...,
            quote_character : typing.Text = ...,
            fields_terminated_by : typing.Text = ...,
            lines_terminated_by : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["escape_character",b"escape_character","fields_terminated_by",b"fields_terminated_by","lines_terminated_by",b"lines_terminated_by","quote_character",b"quote_character","select_query",b"select_query"]) -> None: ...

    class SqlExportOptions(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class MysqlExportOptions(google.protobuf.message.Message):
            """Options for exporting from MySQL."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            MASTER_DATA_FIELD_NUMBER: builtins.int
            @property
            def master_data(self) -> google.protobuf.wrappers_pb2.Int32Value:
                """Option to include SQL statement required to set up replication. If set
                to **1**, the dump file includes a CHANGE MASTER TO statement with the
                binary log coordinates, and --set-gtid-purged is set to ON. If set to
                **2**, the CHANGE MASTER TO statement is written as a SQL comment and
                has no effect. If set to any value other than **1**, --set-gtid-purged
                is set to OFF.
                """
                pass
            def __init__(self,
                *,
                master_data : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["master_data",b"master_data"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["master_data",b"master_data"]) -> None: ...

        TABLES_FIELD_NUMBER: builtins.int
        SCHEMA_ONLY_FIELD_NUMBER: builtins.int
        MYSQL_EXPORT_OPTIONS_FIELD_NUMBER: builtins.int
        @property
        def tables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Tables to export, or that were exported, from the specified database. If
            you specify tables, specify one and only one database. For PostgreSQL
            instances, you can specify only one table.
            """
            pass
        @property
        def schema_only(self) -> google.protobuf.wrappers_pb2.BoolValue:
            """Export only schemas."""
            pass
        @property
        def mysql_export_options(self) -> global___ExportContext.SqlExportOptions.MysqlExportOptions: ...
        def __init__(self,
            *,
            tables : typing.Optional[typing.Iterable[typing.Text]] = ...,
            schema_only : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
            mysql_export_options : typing.Optional[global___ExportContext.SqlExportOptions.MysqlExportOptions] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["mysql_export_options",b"mysql_export_options","schema_only",b"schema_only"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["mysql_export_options",b"mysql_export_options","schema_only",b"schema_only","tables",b"tables"]) -> None: ...

    URI_FIELD_NUMBER: builtins.int
    DATABASES_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    SQL_EXPORT_OPTIONS_FIELD_NUMBER: builtins.int
    CSV_EXPORT_OPTIONS_FIELD_NUMBER: builtins.int
    FILE_TYPE_FIELD_NUMBER: builtins.int
    OFFLOAD_FIELD_NUMBER: builtins.int
    uri: typing.Text = ...
    """The path to the file in Google Cloud Storage where the export will be
    stored. The URI is in the form **gs://bucketName/fileName**. If the file
    already exists, the request succeeds, but the operation fails. If
    **fileType** is **SQL** and the filename ends with .gz,
    the contents are compressed.
    """

    @property
    def databases(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Databases to be exported. <br /> **MySQL instances:** If
        **fileType** is **SQL** and no database is specified, all
        databases are exported, except for the **mysql** system database.
        If **fileType** is **CSV**, you can specify one database,
        either by using this property or by using the
        **csvExportOptions.selectQuery** property, which takes precedence
        over this property. <br /> **PostgreSQL instances:** You must specify
        one database to be exported. If **fileType** is **CSV**,
        this database must match the one specified in the
        **csvExportOptions.selectQuery** property. <br /> **SQL Server
        instances:** You must specify one database to be exported, and the
        **fileType** must be **BAK**.
        """
        pass
    kind: typing.Text = ...
    """This is always **sql#exportContext**."""

    @property
    def sql_export_options(self) -> global___ExportContext.SqlExportOptions:
        """Options for exporting data as SQL statements."""
        pass
    @property
    def csv_export_options(self) -> global___ExportContext.SqlCsvExportOptions:
        """Options for exporting data as CSV. **MySQL** and **PostgreSQL**
        instances only.
        """
        pass
    file_type: global___SqlFileType.ValueType = ...
    """The file type for the specified uri."""

    @property
    def offload(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Option for export offload."""
        pass
    def __init__(self,
        *,
        uri : typing.Text = ...,
        databases : typing.Optional[typing.Iterable[typing.Text]] = ...,
        kind : typing.Text = ...,
        sql_export_options : typing.Optional[global___ExportContext.SqlExportOptions] = ...,
        csv_export_options : typing.Optional[global___ExportContext.SqlCsvExportOptions] = ...,
        file_type : global___SqlFileType.ValueType = ...,
        offload : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["csv_export_options",b"csv_export_options","offload",b"offload","sql_export_options",b"sql_export_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["csv_export_options",b"csv_export_options","databases",b"databases","file_type",b"file_type","kind",b"kind","offload",b"offload","sql_export_options",b"sql_export_options","uri",b"uri"]) -> None: ...
global___ExportContext = ExportContext

class FailoverContext(google.protobuf.message.Message):
    """Database instance failover context."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SETTINGS_VERSION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    settings_version: builtins.int = ...
    """The current settings version of this instance. Request will be rejected if
    this version doesn't match the current settings version.
    """

    kind: typing.Text = ...
    """This is always **sql#failoverContext**."""

    def __init__(self,
        *,
        settings_version : builtins.int = ...,
        kind : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind",b"kind","settings_version",b"settings_version"]) -> None: ...
global___FailoverContext = FailoverContext

class Flag(google.protobuf.message.Message):
    """A flag resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    APPLIES_TO_FIELD_NUMBER: builtins.int
    ALLOWED_STRING_VALUES_FIELD_NUMBER: builtins.int
    MIN_VALUE_FIELD_NUMBER: builtins.int
    MAX_VALUE_FIELD_NUMBER: builtins.int
    REQUIRES_RESTART_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    IN_BETA_FIELD_NUMBER: builtins.int
    ALLOWED_INT_VALUES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """This is the name of the flag. Flag names always use underscores, not
    hyphens, for example: **max_allowed_packet**
    """

    type: global___SqlFlagType.ValueType = ...
    """The type of the flag. Flags are typed to being **BOOLEAN**, **STRING**,
    **INTEGER** or **NONE**. **NONE** is used for flags which do not take a
    value, such as **skip_grant_tables**.
    """

    @property
    def applies_to(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___SqlDatabaseVersion.ValueType]:
        """The database version this flag applies to. Can be **MYSQL_8_0**,
        **MYSQL_5_6**, or **MYSQL_5_7**.
        """
        pass
    @property
    def allowed_string_values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """For **STRING** flags, a list of strings that the value can be set to."""
        pass
    @property
    def min_value(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """For **INTEGER** flags, the minimum allowed value."""
        pass
    @property
    def max_value(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """For **INTEGER** flags, the maximum allowed value."""
        pass
    @property
    def requires_restart(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Indicates whether changing this flag will trigger a database restart. Only
        applicable to Second Generation instances.
        """
        pass
    kind: typing.Text = ...
    """This is always **sql#flag**."""

    @property
    def in_beta(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Whether or not the flag is considered in beta."""
        pass
    @property
    def allowed_int_values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Use this field if only certain integers are accepted. Can be combined
        with min_value and max_value to add additional values.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        type : global___SqlFlagType.ValueType = ...,
        applies_to : typing.Optional[typing.Iterable[global___SqlDatabaseVersion.ValueType]] = ...,
        allowed_string_values : typing.Optional[typing.Iterable[typing.Text]] = ...,
        min_value : typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        max_value : typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        requires_restart : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        kind : typing.Text = ...,
        in_beta : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        allowed_int_values : typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["in_beta",b"in_beta","max_value",b"max_value","min_value",b"min_value","requires_restart",b"requires_restart"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allowed_int_values",b"allowed_int_values","allowed_string_values",b"allowed_string_values","applies_to",b"applies_to","in_beta",b"in_beta","kind",b"kind","max_value",b"max_value","min_value",b"min_value","name",b"name","requires_restart",b"requires_restart","type",b"type"]) -> None: ...
global___Flag = Flag

class FlagsListResponse(google.protobuf.message.Message):
    """Flags list response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#flagsList**."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Flag]:
        """List of flags."""
        pass
    def __init__(self,
        *,
        kind : typing.Text = ...,
        items : typing.Optional[typing.Iterable[global___Flag]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items",b"items","kind",b"kind"]) -> None: ...
global___FlagsListResponse = FlagsListResponse

class ImportContext(google.protobuf.message.Message):
    """Database instance import context."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SqlCsvImportOptions(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TABLE_FIELD_NUMBER: builtins.int
        COLUMNS_FIELD_NUMBER: builtins.int
        ESCAPE_CHARACTER_FIELD_NUMBER: builtins.int
        QUOTE_CHARACTER_FIELD_NUMBER: builtins.int
        FIELDS_TERMINATED_BY_FIELD_NUMBER: builtins.int
        LINES_TERMINATED_BY_FIELD_NUMBER: builtins.int
        table: typing.Text = ...
        """The table to which CSV data is imported."""

        @property
        def columns(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """The columns to which CSV data is imported. If not specified, all columns
            of the database table are loaded with CSV data.
            """
            pass
        escape_character: typing.Text = ...
        """Specifies the character that should appear before a data character that
        needs to be escaped.
        """

        quote_character: typing.Text = ...
        """Specifies the quoting character to be used when a data value is quoted."""

        fields_terminated_by: typing.Text = ...
        """Specifies the character that separates columns within each row (line) of
        the file.
        """

        lines_terminated_by: typing.Text = ...
        """This is used to separate lines. If a line does not contain all fields,
        the rest of the columns are set to their default values.
        """

        def __init__(self,
            *,
            table : typing.Text = ...,
            columns : typing.Optional[typing.Iterable[typing.Text]] = ...,
            escape_character : typing.Text = ...,
            quote_character : typing.Text = ...,
            fields_terminated_by : typing.Text = ...,
            lines_terminated_by : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["columns",b"columns","escape_character",b"escape_character","fields_terminated_by",b"fields_terminated_by","lines_terminated_by",b"lines_terminated_by","quote_character",b"quote_character","table",b"table"]) -> None: ...

    class SqlBakImportOptions(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class EncryptionOptions(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            CERT_PATH_FIELD_NUMBER: builtins.int
            PVK_PATH_FIELD_NUMBER: builtins.int
            PVK_PASSWORD_FIELD_NUMBER: builtins.int
            cert_path: typing.Text = ...
            """Path to the Certificate (.cer) in Cloud Storage, in the form
            **gs://bucketName/fileName**. The instance must have write permissions
            to the bucket and read access to the file.
            """

            pvk_path: typing.Text = ...
            """Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the
            form **gs://bucketName/fileName**. The instance must have write
            permissions to the bucket and read access to the file.
            """

            pvk_password: typing.Text = ...
            """Password that encrypts the private key"""

            def __init__(self,
                *,
                cert_path : typing.Text = ...,
                pvk_path : typing.Text = ...,
                pvk_password : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["cert_path",b"cert_path","pvk_password",b"pvk_password","pvk_path",b"pvk_path"]) -> None: ...

        ENCRYPTION_OPTIONS_FIELD_NUMBER: builtins.int
        @property
        def encryption_options(self) -> global___ImportContext.SqlBakImportOptions.EncryptionOptions: ...
        def __init__(self,
            *,
            encryption_options : typing.Optional[global___ImportContext.SqlBakImportOptions.EncryptionOptions] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["encryption_options",b"encryption_options"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["encryption_options",b"encryption_options"]) -> None: ...

    URI_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    FILE_TYPE_FIELD_NUMBER: builtins.int
    CSV_IMPORT_OPTIONS_FIELD_NUMBER: builtins.int
    IMPORT_USER_FIELD_NUMBER: builtins.int
    BAK_IMPORT_OPTIONS_FIELD_NUMBER: builtins.int
    uri: typing.Text = ...
    """Path to the import file in Cloud Storage, in the form
    **gs://bucketName/fileName**. Compressed gzip files (.gz) are supported
    when **fileType** is **SQL**. The instance must have
    write permissions to the bucket and read access to the file.
    """

    database: typing.Text = ...
    """The target database for the import. If **fileType** is **SQL**, this field
    is required only if the import file does not specify a database, and is
    overridden by any database specification in the import file. If
    **fileType** is **CSV**, one database must be specified.
    """

    kind: typing.Text = ...
    """This is always **sql#importContext**."""

    file_type: global___SqlFileType.ValueType = ...
    """The file type for the specified uri.
    *  **SQL**: The file contains SQL statements.
    *  **CSV**: The file contains CSV data.
    *  **BAK**: The file contains backup data for a SQL Server instance.
    """

    @property
    def csv_import_options(self) -> global___ImportContext.SqlCsvImportOptions:
        """Options for importing data as CSV."""
        pass
    import_user: typing.Text = ...
    """The PostgreSQL user for this import operation. PostgreSQL instances only."""

    @property
    def bak_import_options(self) -> global___ImportContext.SqlBakImportOptions:
        """Import parameters specific to SQL Server .BAK files"""
        pass
    def __init__(self,
        *,
        uri : typing.Text = ...,
        database : typing.Text = ...,
        kind : typing.Text = ...,
        file_type : global___SqlFileType.ValueType = ...,
        csv_import_options : typing.Optional[global___ImportContext.SqlCsvImportOptions] = ...,
        import_user : typing.Text = ...,
        bak_import_options : typing.Optional[global___ImportContext.SqlBakImportOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bak_import_options",b"bak_import_options","csv_import_options",b"csv_import_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bak_import_options",b"bak_import_options","csv_import_options",b"csv_import_options","database",b"database","file_type",b"file_type","import_user",b"import_user","kind",b"kind","uri",b"uri"]) -> None: ...
global___ImportContext = ImportContext

class InstancesCloneRequest(google.protobuf.message.Message):
    """Database instance clone request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLONE_CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def clone_context(self) -> global___CloneContext:
        """Contains details about the clone operation."""
        pass
    def __init__(self,
        *,
        clone_context : typing.Optional[global___CloneContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["clone_context",b"clone_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["clone_context",b"clone_context"]) -> None: ...
global___InstancesCloneRequest = InstancesCloneRequest

class InstancesDemoteMasterRequest(google.protobuf.message.Message):
    """Database demote primary instance request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEMOTE_MASTER_CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def demote_master_context(self) -> global___DemoteMasterContext:
        """Contains details about the demoteMaster operation."""
        pass
    def __init__(self,
        *,
        demote_master_context : typing.Optional[global___DemoteMasterContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["demote_master_context",b"demote_master_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["demote_master_context",b"demote_master_context"]) -> None: ...
global___InstancesDemoteMasterRequest = InstancesDemoteMasterRequest

class InstancesExportRequest(google.protobuf.message.Message):
    """Database instance export request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXPORT_CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def export_context(self) -> global___ExportContext:
        """Contains details about the export operation."""
        pass
    def __init__(self,
        *,
        export_context : typing.Optional[global___ExportContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["export_context",b"export_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["export_context",b"export_context"]) -> None: ...
global___InstancesExportRequest = InstancesExportRequest

class InstancesFailoverRequest(google.protobuf.message.Message):
    """Instance failover request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FAILOVER_CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def failover_context(self) -> global___FailoverContext:
        """Failover Context."""
        pass
    def __init__(self,
        *,
        failover_context : typing.Optional[global___FailoverContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["failover_context",b"failover_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["failover_context",b"failover_context"]) -> None: ...
global___InstancesFailoverRequest = InstancesFailoverRequest

class InstancesImportRequest(google.protobuf.message.Message):
    """Database instance import request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IMPORT_CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def import_context(self) -> global___ImportContext:
        """Contains details about the import operation."""
        pass
    def __init__(self,
        *,
        import_context : typing.Optional[global___ImportContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["import_context",b"import_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["import_context",b"import_context"]) -> None: ...
global___InstancesImportRequest = InstancesImportRequest

class MySqlSyncConfig(google.protobuf.message.Message):
    """MySQL-specific external server sync settings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INITIAL_SYNC_FLAGS_FIELD_NUMBER: builtins.int
    @property
    def initial_sync_flags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SyncFlags]:
        """Flags to use for the initial dump."""
        pass
    def __init__(self,
        *,
        initial_sync_flags : typing.Optional[typing.Iterable[global___SyncFlags]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["initial_sync_flags",b"initial_sync_flags"]) -> None: ...
global___MySqlSyncConfig = MySqlSyncConfig

class InstancesListResponse(google.protobuf.message.Message):
    """Database instances list response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    WARNINGS_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#instancesList**."""

    @property
    def warnings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ApiWarning]:
        """List of warnings that occurred while handling the request."""
        pass
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DatabaseInstance]:
        """List of database instance resources."""
        pass
    next_page_token: typing.Text = ...
    """The continuation token, used to page through large result sets. Provide
    this value in a subsequent request to return the next page of results.
    """

    def __init__(self,
        *,
        kind : typing.Text = ...,
        warnings : typing.Optional[typing.Iterable[global___ApiWarning]] = ...,
        items : typing.Optional[typing.Iterable[global___DatabaseInstance]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items",b"items","kind",b"kind","next_page_token",b"next_page_token","warnings",b"warnings"]) -> None: ...
global___InstancesListResponse = InstancesListResponse

class InstancesListServerCasResponse(google.protobuf.message.Message):
    """Instances ListServerCas response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CERTS_FIELD_NUMBER: builtins.int
    ACTIVE_VERSION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    @property
    def certs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SslCert]:
        """List of server CA certificates for the instance."""
        pass
    active_version: typing.Text = ...
    kind: typing.Text = ...
    """This is always **sql#instancesListServerCas**."""

    def __init__(self,
        *,
        certs : typing.Optional[typing.Iterable[global___SslCert]] = ...,
        active_version : typing.Text = ...,
        kind : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["active_version",b"active_version","certs",b"certs","kind",b"kind"]) -> None: ...
global___InstancesListServerCasResponse = InstancesListServerCasResponse

class InstancesRestoreBackupRequest(google.protobuf.message.Message):
    """Database instance restore backup request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESTORE_BACKUP_CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def restore_backup_context(self) -> global___RestoreBackupContext:
        """Parameters required to perform the restore backup operation."""
        pass
    def __init__(self,
        *,
        restore_backup_context : typing.Optional[global___RestoreBackupContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["restore_backup_context",b"restore_backup_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["restore_backup_context",b"restore_backup_context"]) -> None: ...
global___InstancesRestoreBackupRequest = InstancesRestoreBackupRequest

class InstancesRotateServerCaRequest(google.protobuf.message.Message):
    """Rotate Server CA request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROTATE_SERVER_CA_CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def rotate_server_ca_context(self) -> global___RotateServerCaContext:
        """Contains details about the rotate server CA operation."""
        pass
    def __init__(self,
        *,
        rotate_server_ca_context : typing.Optional[global___RotateServerCaContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["rotate_server_ca_context",b"rotate_server_ca_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["rotate_server_ca_context",b"rotate_server_ca_context"]) -> None: ...
global___InstancesRotateServerCaRequest = InstancesRotateServerCaRequest

class InstancesTruncateLogRequest(google.protobuf.message.Message):
    """Instance truncate log request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TRUNCATE_LOG_CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def truncate_log_context(self) -> global___TruncateLogContext:
        """Contains details about the truncate log operation."""
        pass
    def __init__(self,
        *,
        truncate_log_context : typing.Optional[global___TruncateLogContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["truncate_log_context",b"truncate_log_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["truncate_log_context",b"truncate_log_context"]) -> None: ...
global___InstancesTruncateLogRequest = InstancesTruncateLogRequest

class SqlInstancesVerifyExternalSyncSettingsResponse(google.protobuf.message.Message):
    """Instance verify external sync settings response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    WARNINGS_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#migrationSettingErrorList**."""

    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SqlExternalSyncSettingError]:
        """List of migration violations."""
        pass
    @property
    def warnings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SqlExternalSyncSettingError]:
        """List of migration warnings."""
        pass
    def __init__(self,
        *,
        kind : typing.Text = ...,
        errors : typing.Optional[typing.Iterable[global___SqlExternalSyncSettingError]] = ...,
        warnings : typing.Optional[typing.Iterable[global___SqlExternalSyncSettingError]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","kind",b"kind","warnings",b"warnings"]) -> None: ...
global___SqlInstancesVerifyExternalSyncSettingsResponse = SqlInstancesVerifyExternalSyncSettingsResponse

class SqlExternalSyncSettingError(google.protobuf.message.Message):
    """External primary instance migration setting error/warning."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SqlExternalSyncSettingErrorType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SqlExternalSyncSettingErrorTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlExternalSyncSettingErrorType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 0
        CONNECTION_FAILURE: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 1
        BINLOG_NOT_ENABLED: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 2
        INCOMPATIBLE_DATABASE_VERSION: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 3
        REPLICA_ALREADY_SETUP: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 4
        INSUFFICIENT_PRIVILEGE: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 5
        UNSUPPORTED_MIGRATION_TYPE: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 6
        """Unsupported migration type."""

        NO_PGLOGICAL_INSTALLED: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 7
        """No pglogical extension installed on databases, applicable for postgres."""

        PGLOGICAL_NODE_ALREADY_EXISTS: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 8
        """pglogical node already exists on databases, applicable for postgres."""

        INVALID_WAL_LEVEL: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 9
        """The value of parameter wal_level is not set to logical."""

        INVALID_SHARED_PRELOAD_LIBRARY: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 10
        """The value of parameter shared_preload_libraries does not include
        pglogical.
        """

        INSUFFICIENT_MAX_REPLICATION_SLOTS: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 11
        """The value of parameter max_replication_slots is not sufficient."""

        INSUFFICIENT_MAX_WAL_SENDERS: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 12
        """The value of parameter max_wal_senders is not sufficient."""

        INSUFFICIENT_MAX_WORKER_PROCESSES: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 13
        """The value of parameter max_worker_processes is not sufficient."""

        UNSUPPORTED_EXTENSIONS: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 14
        """Extensions installed are either not supported or having unsupported
        versions
        """

        INVALID_RDS_LOGICAL_REPLICATION: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 15
        """The value of parameter rds.logical_replication is not set to 1."""

        INVALID_LOGGING_SETUP: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 16
        """The primary instance logging setup doesn't allow EM sync."""

        INVALID_DB_PARAM: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 17
        """The primary instance database parameter setup doesn't allow EM sync."""

        UNSUPPORTED_GTID_MODE: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 18
        """The gtid_mode is not supported, applicable for MySQL."""

        SQLSERVER_AGENT_NOT_RUNNING: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 19
        """SQL Server Agent is not running."""

        UNSUPPORTED_TABLE_DEFINITION: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 20
        """The table definition is not support due to missing primary key or replica
        identity, applicable for postgres.
        """

        UNSUPPORTED_DEFINER: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 21
        """The customer has a definer that will break EM setup."""

        SQLSERVER_SERVERNAME_MISMATCH: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 22
        """SQL Server @@SERVERNAME does not match actual host name"""

        PRIMARY_ALREADY_SETUP: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 23
        """The primary instance has been setup and will fail the setup."""

        UNSUPPORTED_BINLOG_FORMAT: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 24
        """The primary instance has unsupported binary log format."""

        BINLOG_RETENTION_SETTING: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 25
        """The primary instance's binary log retention setting."""

    class SqlExternalSyncSettingErrorType(_SqlExternalSyncSettingErrorType, metaclass=_SqlExternalSyncSettingErrorTypeEnumTypeWrapper):
        pass

    SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 0
    CONNECTION_FAILURE: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 1
    BINLOG_NOT_ENABLED: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 2
    INCOMPATIBLE_DATABASE_VERSION: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 3
    REPLICA_ALREADY_SETUP: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 4
    INSUFFICIENT_PRIVILEGE: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 5
    UNSUPPORTED_MIGRATION_TYPE: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 6
    """Unsupported migration type."""

    NO_PGLOGICAL_INSTALLED: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 7
    """No pglogical extension installed on databases, applicable for postgres."""

    PGLOGICAL_NODE_ALREADY_EXISTS: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 8
    """pglogical node already exists on databases, applicable for postgres."""

    INVALID_WAL_LEVEL: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 9
    """The value of parameter wal_level is not set to logical."""

    INVALID_SHARED_PRELOAD_LIBRARY: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 10
    """The value of parameter shared_preload_libraries does not include
    pglogical.
    """

    INSUFFICIENT_MAX_REPLICATION_SLOTS: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 11
    """The value of parameter max_replication_slots is not sufficient."""

    INSUFFICIENT_MAX_WAL_SENDERS: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 12
    """The value of parameter max_wal_senders is not sufficient."""

    INSUFFICIENT_MAX_WORKER_PROCESSES: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 13
    """The value of parameter max_worker_processes is not sufficient."""

    UNSUPPORTED_EXTENSIONS: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 14
    """Extensions installed are either not supported or having unsupported
    versions
    """

    INVALID_RDS_LOGICAL_REPLICATION: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 15
    """The value of parameter rds.logical_replication is not set to 1."""

    INVALID_LOGGING_SETUP: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 16
    """The primary instance logging setup doesn't allow EM sync."""

    INVALID_DB_PARAM: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 17
    """The primary instance database parameter setup doesn't allow EM sync."""

    UNSUPPORTED_GTID_MODE: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 18
    """The gtid_mode is not supported, applicable for MySQL."""

    SQLSERVER_AGENT_NOT_RUNNING: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 19
    """SQL Server Agent is not running."""

    UNSUPPORTED_TABLE_DEFINITION: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 20
    """The table definition is not support due to missing primary key or replica
    identity, applicable for postgres.
    """

    UNSUPPORTED_DEFINER: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 21
    """The customer has a definer that will break EM setup."""

    SQLSERVER_SERVERNAME_MISMATCH: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 22
    """SQL Server @@SERVERNAME does not match actual host name"""

    PRIMARY_ALREADY_SETUP: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 23
    """The primary instance has been setup and will fail the setup."""

    UNSUPPORTED_BINLOG_FORMAT: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 24
    """The primary instance has unsupported binary log format."""

    BINLOG_RETENTION_SETTING: SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...  # 25
    """The primary instance's binary log retention setting."""


    KIND_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DETAIL_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """Can be **sql#externalSyncSettingError** or
    **sql#externalSyncSettingWarning**.
    """

    type: global___SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...
    """Identifies the specific error that occurred."""

    detail: typing.Text = ...
    """Additional information about the error encountered."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        type : global___SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType.ValueType = ...,
        detail : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["detail",b"detail","kind",b"kind","type",b"type"]) -> None: ...
global___SqlExternalSyncSettingError = SqlExternalSyncSettingError

class IpConfiguration(google.protobuf.message.Message):
    """IP Management configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IPV4_ENABLED_FIELD_NUMBER: builtins.int
    PRIVATE_NETWORK_FIELD_NUMBER: builtins.int
    REQUIRE_SSL_FIELD_NUMBER: builtins.int
    AUTHORIZED_NETWORKS_FIELD_NUMBER: builtins.int
    ALLOCATED_IP_RANGE_FIELD_NUMBER: builtins.int
    @property
    def ipv4_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Whether the instance is assigned a public IP address or not."""
        pass
    private_network: typing.Text = ...
    """The resource link for the VPC network from which the Cloud SQL instance is
    accessible for private IP. For example,
    **/projects/myProject/global/networks/default**. This setting can
    be updated, but it cannot be removed after it is set.
    """

    @property
    def require_ssl(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Whether SSL connections over IP are enforced or not."""
        pass
    @property
    def authorized_networks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AclEntry]:
        """The list of external networks that are allowed to connect to the instance
        using the IP. In 'CIDR' notation, also known as 'slash' notation (for
        example: **157.197.200.0/24**).
        """
        pass
    allocated_ip_range: typing.Text = ...
    """The name of the allocated ip range for the private ip CloudSQL instance.
    For example: "google-managed-services-default". If set, the instance ip
    will be created in the allocated range. The range name must comply with
    [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name
    must be 1-63 characters long and match the regular expression
    `[a-z]([-a-z0-9]*[a-z0-9])?.`
    """

    def __init__(self,
        *,
        ipv4_enabled : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        private_network : typing.Text = ...,
        require_ssl : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        authorized_networks : typing.Optional[typing.Iterable[global___AclEntry]] = ...,
        allocated_ip_range : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ipv4_enabled",b"ipv4_enabled","require_ssl",b"require_ssl"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allocated_ip_range",b"allocated_ip_range","authorized_networks",b"authorized_networks","ipv4_enabled",b"ipv4_enabled","private_network",b"private_network","require_ssl",b"require_ssl"]) -> None: ...
global___IpConfiguration = IpConfiguration

class IpMapping(google.protobuf.message.Message):
    """Database instance IP Mapping."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    TIME_TO_RETIRE_FIELD_NUMBER: builtins.int
    type: global___SqlIpAddressType.ValueType = ...
    """The type of this IP address. A **PRIMARY** address is a public address that
    can accept incoming connections. A **PRIVATE** address is a private address
    that can accept incoming connections. An **OUTGOING** address is the source
    address of connections originating from the instance, if supported.
    """

    ip_address: typing.Text = ...
    """The IP address assigned."""

    @property
    def time_to_retire(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The due time for this IP to be retired in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**. This field is only available when
        the IP is scheduled to be retired.
        """
        pass
    def __init__(self,
        *,
        type : global___SqlIpAddressType.ValueType = ...,
        ip_address : typing.Text = ...,
        time_to_retire : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time_to_retire",b"time_to_retire"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ip_address",b"ip_address","time_to_retire",b"time_to_retire","type",b"type"]) -> None: ...
global___IpMapping = IpMapping

class LocationPreference(google.protobuf.message.Message):
    """Preferred location. This specifies where a Cloud SQL instance is located.
    Note that if the preferred location is not available, the instance will be
    located as close as possible within the region. Only one location may be
    specified.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FOLLOW_GAE_APPLICATION_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    SECONDARY_ZONE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    follow_gae_application: typing.Text = ...
    """The App Engine application to follow, it must be in the same region as the
    Cloud SQL instance. WARNING: Changing this might restart the instance.
    """

    zone: typing.Text = ...
    """The preferred Compute Engine zone (for example: us-central1-a,
    us-central1-b, etc.). WARNING: Changing this might restart the instance.
    """

    secondary_zone: typing.Text = ...
    """The preferred Compute Engine zone for the secondary/failover
    (for example: us-central1-a, us-central1-b, etc.).
    Reserved for future use.
    """

    kind: typing.Text = ...
    """This is always **sql#locationPreference**."""

    def __init__(self,
        *,
        follow_gae_application : typing.Text = ...,
        zone : typing.Text = ...,
        secondary_zone : typing.Text = ...,
        kind : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["follow_gae_application",b"follow_gae_application","kind",b"kind","secondary_zone",b"secondary_zone","zone",b"zone"]) -> None: ...
global___LocationPreference = LocationPreference

class MaintenanceWindow(google.protobuf.message.Message):
    """Maintenance window. This specifies when a Cloud SQL instance
    is restarted for system maintenance purposes.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HOUR_FIELD_NUMBER: builtins.int
    DAY_FIELD_NUMBER: builtins.int
    UPDATE_TRACK_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    @property
    def hour(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """hour of day - 0 to 23."""
        pass
    @property
    def day(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """day of week (1-7), starting on Monday."""
        pass
    update_track: global___SqlUpdateTrack.ValueType = ...
    """Maintenance timing setting: **canary** (Earlier) or **stable** (Later).
    [Learn
    more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).
    """

    kind: typing.Text = ...
    """This is always **sql#maintenanceWindow**."""

    def __init__(self,
        *,
        hour : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        day : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        update_track : global___SqlUpdateTrack.ValueType = ...,
        kind : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["day",b"day","hour",b"hour"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["day",b"day","hour",b"hour","kind",b"kind","update_track",b"update_track"]) -> None: ...
global___MaintenanceWindow = MaintenanceWindow

class DenyMaintenancePeriod(google.protobuf.message.Message):
    """Deny Maintenance Periods. This specifies a date range during when all CSA
    rollout will be denied.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_DATE_FIELD_NUMBER: builtins.int
    END_DATE_FIELD_NUMBER: builtins.int
    TIME_FIELD_NUMBER: builtins.int
    start_date: typing.Text = ...
    """"deny maintenance period" start date. If the year of the start date is
    empty, the year of the end date also must be empty. In this case, it means
    the deny maintenance period recurs every year. The date is in format
    yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
    """

    end_date: typing.Text = ...
    """"deny maintenance period" end date. If the year of the end date is empty,
    the year of the start date also must be empty. In this case, it means the
    deny maintenance period recurs every year. The date is in format yyyy-mm-dd
    i.e., 2020-11-01, or mm-dd, i.e., 11-01
    """

    time: typing.Text = ...
    """Time in UTC when the "deny maintenance period" starts on start_date and
    ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00
    """

    def __init__(self,
        *,
        start_date : typing.Text = ...,
        end_date : typing.Text = ...,
        time : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_date",b"end_date","start_date",b"start_date","time",b"time"]) -> None: ...
global___DenyMaintenancePeriod = DenyMaintenancePeriod

class InsightsConfig(google.protobuf.message.Message):
    """Insights configuration. This specifies when Cloud SQL Insights feature is
    enabled and optional configuration.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    QUERY_INSIGHTS_ENABLED_FIELD_NUMBER: builtins.int
    RECORD_CLIENT_ADDRESS_FIELD_NUMBER: builtins.int
    RECORD_APPLICATION_TAGS_FIELD_NUMBER: builtins.int
    QUERY_STRING_LENGTH_FIELD_NUMBER: builtins.int
    QUERY_PLANS_PER_MINUTE_FIELD_NUMBER: builtins.int
    query_insights_enabled: builtins.bool = ...
    """Whether Query Insights feature is enabled."""

    record_client_address: builtins.bool = ...
    """Whether Query Insights will record client address when enabled."""

    record_application_tags: builtins.bool = ...
    """Whether Query Insights will record application tags from query when
    enabled.
    """

    @property
    def query_string_length(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """Maximum query length stored in bytes. Default value: 1024 bytes.
        Range: 256-4500 bytes. Query length more than this field value will be
        truncated to this value. When unset, query length will be the default
        value. Changing query length will restart the database.
        """
        pass
    @property
    def query_plans_per_minute(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """Number of query execution plans captured by Insights per minute
        for all queries combined. Default is 5.
        """
        pass
    def __init__(self,
        *,
        query_insights_enabled : builtins.bool = ...,
        record_client_address : builtins.bool = ...,
        record_application_tags : builtins.bool = ...,
        query_string_length : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        query_plans_per_minute : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["query_plans_per_minute",b"query_plans_per_minute","query_string_length",b"query_string_length"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["query_insights_enabled",b"query_insights_enabled","query_plans_per_minute",b"query_plans_per_minute","query_string_length",b"query_string_length","record_application_tags",b"record_application_tags","record_client_address",b"record_client_address"]) -> None: ...
global___InsightsConfig = InsightsConfig

class MySqlReplicaConfiguration(google.protobuf.message.Message):
    """Read-replica configuration specific to MySQL databases."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DUMP_FILE_PATH_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    CONNECT_RETRY_INTERVAL_FIELD_NUMBER: builtins.int
    MASTER_HEARTBEAT_PERIOD_FIELD_NUMBER: builtins.int
    CA_CERTIFICATE_FIELD_NUMBER: builtins.int
    CLIENT_CERTIFICATE_FIELD_NUMBER: builtins.int
    CLIENT_KEY_FIELD_NUMBER: builtins.int
    SSL_CIPHER_FIELD_NUMBER: builtins.int
    VERIFY_SERVER_CERTIFICATE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    dump_file_path: typing.Text = ...
    """Path to a SQL dump file in Google Cloud Storage from which the replica
    instance is to be created. The URI is in the form gs://bucketName/fileName.
    Compressed gzip files (.gz) are also supported.
    Dumps have the binlog co-ordinates from which replication
    begins. This can be accomplished by setting --master-data to 1 when using
    mysqldump.
    """

    username: typing.Text = ...
    """The username for the replication connection."""

    password: typing.Text = ...
    """The password for the replication connection."""

    @property
    def connect_retry_interval(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """Seconds to wait between connect retries. MySQL's default is 60 seconds."""
        pass
    @property
    def master_heartbeat_period(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """Interval in milliseconds between replication heartbeats."""
        pass
    ca_certificate: typing.Text = ...
    """PEM representation of the trusted CA's x509 certificate."""

    client_certificate: typing.Text = ...
    """PEM representation of the replica's x509 certificate."""

    client_key: typing.Text = ...
    """PEM representation of the replica's private key. The corresponsing public
    key is encoded in the client's certificate.
    """

    ssl_cipher: typing.Text = ...
    """A list of permissible ciphers to use for SSL encryption."""

    @property
    def verify_server_certificate(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Whether or not to check the primary instance's Common Name value in the
        certificate that it sends during the SSL handshake.
        """
        pass
    kind: typing.Text = ...
    """This is always **sql#mysqlReplicaConfiguration**."""

    def __init__(self,
        *,
        dump_file_path : typing.Text = ...,
        username : typing.Text = ...,
        password : typing.Text = ...,
        connect_retry_interval : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        master_heartbeat_period : typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        ca_certificate : typing.Text = ...,
        client_certificate : typing.Text = ...,
        client_key : typing.Text = ...,
        ssl_cipher : typing.Text = ...,
        verify_server_certificate : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        kind : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["connect_retry_interval",b"connect_retry_interval","master_heartbeat_period",b"master_heartbeat_period","verify_server_certificate",b"verify_server_certificate"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ca_certificate",b"ca_certificate","client_certificate",b"client_certificate","client_key",b"client_key","connect_retry_interval",b"connect_retry_interval","dump_file_path",b"dump_file_path","kind",b"kind","master_heartbeat_period",b"master_heartbeat_period","password",b"password","ssl_cipher",b"ssl_cipher","username",b"username","verify_server_certificate",b"verify_server_certificate"]) -> None: ...
global___MySqlReplicaConfiguration = MySqlReplicaConfiguration

class OnPremisesConfiguration(google.protobuf.message.Message):
    """On-premises instance configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HOST_PORT_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    CA_CERTIFICATE_FIELD_NUMBER: builtins.int
    CLIENT_CERTIFICATE_FIELD_NUMBER: builtins.int
    CLIENT_KEY_FIELD_NUMBER: builtins.int
    DUMP_FILE_PATH_FIELD_NUMBER: builtins.int
    SOURCE_INSTANCE_FIELD_NUMBER: builtins.int
    host_port: typing.Text = ...
    """The host and port of the on-premises instance in host:port format"""

    kind: typing.Text = ...
    """This is always **sql#onPremisesConfiguration**."""

    username: typing.Text = ...
    """The username for connecting to on-premises instance."""

    password: typing.Text = ...
    """The password for connecting to on-premises instance."""

    ca_certificate: typing.Text = ...
    """PEM representation of the trusted CA's x509 certificate."""

    client_certificate: typing.Text = ...
    """PEM representation of the replica's x509 certificate."""

    client_key: typing.Text = ...
    """PEM representation of the replica's private key. The corresponsing public
    key is encoded in the client's certificate.
    """

    dump_file_path: typing.Text = ...
    """The dump file to create the Cloud SQL replica."""

    @property
    def source_instance(self) -> global___InstanceReference:
        """The reference to Cloud SQL instance if the source is Cloud SQL."""
        pass
    def __init__(self,
        *,
        host_port : typing.Text = ...,
        kind : typing.Text = ...,
        username : typing.Text = ...,
        password : typing.Text = ...,
        ca_certificate : typing.Text = ...,
        client_certificate : typing.Text = ...,
        client_key : typing.Text = ...,
        dump_file_path : typing.Text = ...,
        source_instance : typing.Optional[global___InstanceReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["source_instance",b"source_instance"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ca_certificate",b"ca_certificate","client_certificate",b"client_certificate","client_key",b"client_key","dump_file_path",b"dump_file_path","host_port",b"host_port","kind",b"kind","password",b"password","source_instance",b"source_instance","username",b"username"]) -> None: ...
global___OnPremisesConfiguration = OnPremisesConfiguration

class DiskEncryptionConfiguration(google.protobuf.message.Message):
    """Disk encryption configuration for an instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    kms_key_name: typing.Text = ...
    """Resource name of KMS key for disk encryption"""

    kind: typing.Text = ...
    """This is always **sql#diskEncryptionConfiguration**."""

    def __init__(self,
        *,
        kms_key_name : typing.Text = ...,
        kind : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind",b"kind","kms_key_name",b"kms_key_name"]) -> None: ...
global___DiskEncryptionConfiguration = DiskEncryptionConfiguration

class DiskEncryptionStatus(google.protobuf.message.Message):
    """Disk encryption status for an instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KMS_KEY_VERSION_NAME_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    kms_key_version_name: typing.Text = ...
    """KMS key version used to encrypt the Cloud SQL instance resource"""

    kind: typing.Text = ...
    """This is always **sql#diskEncryptionStatus**."""

    def __init__(self,
        *,
        kms_key_version_name : typing.Text = ...,
        kind : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind",b"kind","kms_key_version_name",b"kms_key_version_name"]) -> None: ...
global___DiskEncryptionStatus = DiskEncryptionStatus

class Operation(google.protobuf.message.Message):
    """An Operation resource.&nbsp;For successful operations that return an
    Operation resource, only the fields relevant to the operation are populated
    in the resource.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SqlOperationType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SqlOperationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlOperationType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SQL_OPERATION_TYPE_UNSPECIFIED: Operation.SqlOperationType.ValueType = ...  # 0
        """Unknown operation type."""

        IMPORT: Operation.SqlOperationType.ValueType = ...  # 1
        """Imports data into a Cloud SQL instance."""

        EXPORT: Operation.SqlOperationType.ValueType = ...  # 2
        """Exports data from a Cloud SQL instance to a Cloud Storage
        bucket.
        """

        CREATE: Operation.SqlOperationType.ValueType = ...  # 3
        """Creates a new Cloud SQL instance."""

        UPDATE: Operation.SqlOperationType.ValueType = ...  # 4
        """Updates the settings of a Cloud SQL instance."""

        DELETE: Operation.SqlOperationType.ValueType = ...  # 5
        """Deletes a Cloud SQL instance."""

        RESTART: Operation.SqlOperationType.ValueType = ...  # 6
        """Restarts the Cloud SQL instance."""

        BACKUP: Operation.SqlOperationType.ValueType = ...  # 7
        SNAPSHOT: Operation.SqlOperationType.ValueType = ...  # 8
        BACKUP_VOLUME: Operation.SqlOperationType.ValueType = ...  # 9
        """Performs instance backup."""

        DELETE_VOLUME: Operation.SqlOperationType.ValueType = ...  # 10
        """Deletes an instance backup."""

        RESTORE_VOLUME: Operation.SqlOperationType.ValueType = ...  # 11
        """Restores an instance backup."""

        INJECT_USER: Operation.SqlOperationType.ValueType = ...  # 12
        """Injects a privileged user in mysql for MOB instances."""

        CLONE: Operation.SqlOperationType.ValueType = ...  # 14
        """Clones a Cloud SQL instance."""

        STOP_REPLICA: Operation.SqlOperationType.ValueType = ...  # 15
        """Stops replication on a Cloud SQL read replica instance."""

        START_REPLICA: Operation.SqlOperationType.ValueType = ...  # 16
        """Starts replication on a Cloud SQL read replica instance."""

        PROMOTE_REPLICA: Operation.SqlOperationType.ValueType = ...  # 17
        """Promotes a Cloud SQL replica instance."""

        CREATE_REPLICA: Operation.SqlOperationType.ValueType = ...  # 18
        """Creates a Cloud SQL replica instance."""

        CREATE_USER: Operation.SqlOperationType.ValueType = ...  # 19
        """Creates a new user in a Cloud SQL instance."""

        DELETE_USER: Operation.SqlOperationType.ValueType = ...  # 20
        """Deletes a user from a Cloud SQL instance."""

        UPDATE_USER: Operation.SqlOperationType.ValueType = ...  # 21
        """Updates an existing user in a Cloud SQL instance."""

        CREATE_DATABASE: Operation.SqlOperationType.ValueType = ...  # 22
        """Creates a database in the Cloud SQL instance."""

        DELETE_DATABASE: Operation.SqlOperationType.ValueType = ...  # 23
        """Deletes a database in the Cloud SQL instance."""

        UPDATE_DATABASE: Operation.SqlOperationType.ValueType = ...  # 24
        """Updates a database in the Cloud SQL instance."""

        FAILOVER: Operation.SqlOperationType.ValueType = ...  # 25
        """Performs failover of an HA-enabled Cloud SQL
        failover replica.
        """

        DELETE_BACKUP: Operation.SqlOperationType.ValueType = ...  # 26
        """Deletes the backup taken by a backup run."""

        RECREATE_REPLICA: Operation.SqlOperationType.ValueType = ...  # 27
        TRUNCATE_LOG: Operation.SqlOperationType.ValueType = ...  # 28
        """Truncates a general or slow log table in MySQL."""

        DEMOTE_MASTER: Operation.SqlOperationType.ValueType = ...  # 29
        """Demotes the stand-alone instance to be a Cloud SQL
        read replica for an external database server.
        """

        MAINTENANCE: Operation.SqlOperationType.ValueType = ...  # 30
        """Indicates that the instance is currently in maintenance. Maintenance
        typically causes the instance to be unavailable for 1-3 minutes.
        """

        ENABLE_PRIVATE_IP: Operation.SqlOperationType.ValueType = ...  # 31
        """This field is deprecated, and will be removed in future version of API."""

        DEFER_MAINTENANCE: Operation.SqlOperationType.ValueType = ...  # 32
        CREATE_CLONE: Operation.SqlOperationType.ValueType = ...  # 33
        """Creates clone instance."""

        RESCHEDULE_MAINTENANCE: Operation.SqlOperationType.ValueType = ...  # 34
        """Reschedule maintenance to another time."""

        START_EXTERNAL_SYNC: Operation.SqlOperationType.ValueType = ...  # 35
        """Starts external sync of a Cloud SQL EM replica to an external primary
        instance.
        """

    class SqlOperationType(_SqlOperationType, metaclass=_SqlOperationTypeEnumTypeWrapper):
        """The type of Cloud SQL operation."""
        pass

    SQL_OPERATION_TYPE_UNSPECIFIED: Operation.SqlOperationType.ValueType = ...  # 0
    """Unknown operation type."""

    IMPORT: Operation.SqlOperationType.ValueType = ...  # 1
    """Imports data into a Cloud SQL instance."""

    EXPORT: Operation.SqlOperationType.ValueType = ...  # 2
    """Exports data from a Cloud SQL instance to a Cloud Storage
    bucket.
    """

    CREATE: Operation.SqlOperationType.ValueType = ...  # 3
    """Creates a new Cloud SQL instance."""

    UPDATE: Operation.SqlOperationType.ValueType = ...  # 4
    """Updates the settings of a Cloud SQL instance."""

    DELETE: Operation.SqlOperationType.ValueType = ...  # 5
    """Deletes a Cloud SQL instance."""

    RESTART: Operation.SqlOperationType.ValueType = ...  # 6
    """Restarts the Cloud SQL instance."""

    BACKUP: Operation.SqlOperationType.ValueType = ...  # 7
    SNAPSHOT: Operation.SqlOperationType.ValueType = ...  # 8
    BACKUP_VOLUME: Operation.SqlOperationType.ValueType = ...  # 9
    """Performs instance backup."""

    DELETE_VOLUME: Operation.SqlOperationType.ValueType = ...  # 10
    """Deletes an instance backup."""

    RESTORE_VOLUME: Operation.SqlOperationType.ValueType = ...  # 11
    """Restores an instance backup."""

    INJECT_USER: Operation.SqlOperationType.ValueType = ...  # 12
    """Injects a privileged user in mysql for MOB instances."""

    CLONE: Operation.SqlOperationType.ValueType = ...  # 14
    """Clones a Cloud SQL instance."""

    STOP_REPLICA: Operation.SqlOperationType.ValueType = ...  # 15
    """Stops replication on a Cloud SQL read replica instance."""

    START_REPLICA: Operation.SqlOperationType.ValueType = ...  # 16
    """Starts replication on a Cloud SQL read replica instance."""

    PROMOTE_REPLICA: Operation.SqlOperationType.ValueType = ...  # 17
    """Promotes a Cloud SQL replica instance."""

    CREATE_REPLICA: Operation.SqlOperationType.ValueType = ...  # 18
    """Creates a Cloud SQL replica instance."""

    CREATE_USER: Operation.SqlOperationType.ValueType = ...  # 19
    """Creates a new user in a Cloud SQL instance."""

    DELETE_USER: Operation.SqlOperationType.ValueType = ...  # 20
    """Deletes a user from a Cloud SQL instance."""

    UPDATE_USER: Operation.SqlOperationType.ValueType = ...  # 21
    """Updates an existing user in a Cloud SQL instance."""

    CREATE_DATABASE: Operation.SqlOperationType.ValueType = ...  # 22
    """Creates a database in the Cloud SQL instance."""

    DELETE_DATABASE: Operation.SqlOperationType.ValueType = ...  # 23
    """Deletes a database in the Cloud SQL instance."""

    UPDATE_DATABASE: Operation.SqlOperationType.ValueType = ...  # 24
    """Updates a database in the Cloud SQL instance."""

    FAILOVER: Operation.SqlOperationType.ValueType = ...  # 25
    """Performs failover of an HA-enabled Cloud SQL
    failover replica.
    """

    DELETE_BACKUP: Operation.SqlOperationType.ValueType = ...  # 26
    """Deletes the backup taken by a backup run."""

    RECREATE_REPLICA: Operation.SqlOperationType.ValueType = ...  # 27
    TRUNCATE_LOG: Operation.SqlOperationType.ValueType = ...  # 28
    """Truncates a general or slow log table in MySQL."""

    DEMOTE_MASTER: Operation.SqlOperationType.ValueType = ...  # 29
    """Demotes the stand-alone instance to be a Cloud SQL
    read replica for an external database server.
    """

    MAINTENANCE: Operation.SqlOperationType.ValueType = ...  # 30
    """Indicates that the instance is currently in maintenance. Maintenance
    typically causes the instance to be unavailable for 1-3 minutes.
    """

    ENABLE_PRIVATE_IP: Operation.SqlOperationType.ValueType = ...  # 31
    """This field is deprecated, and will be removed in future version of API."""

    DEFER_MAINTENANCE: Operation.SqlOperationType.ValueType = ...  # 32
    CREATE_CLONE: Operation.SqlOperationType.ValueType = ...  # 33
    """Creates clone instance."""

    RESCHEDULE_MAINTENANCE: Operation.SqlOperationType.ValueType = ...  # 34
    """Reschedule maintenance to another time."""

    START_EXTERNAL_SYNC: Operation.SqlOperationType.ValueType = ...  # 35
    """Starts external sync of a Cloud SQL EM replica to an external primary
    instance.
    """


    class _SqlOperationStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SqlOperationStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlOperationStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SQL_OPERATION_STATUS_UNSPECIFIED: Operation.SqlOperationStatus.ValueType = ...  # 0
        """The state of the operation is unknown."""

        PENDING: Operation.SqlOperationStatus.ValueType = ...  # 1
        """The operation has been queued, but has not started yet."""

        RUNNING: Operation.SqlOperationStatus.ValueType = ...  # 2
        """The operation is running."""

        DONE: Operation.SqlOperationStatus.ValueType = ...  # 3
        """The operation completed."""

    class SqlOperationStatus(_SqlOperationStatus, metaclass=_SqlOperationStatusEnumTypeWrapper):
        """The status of an operation."""
        pass

    SQL_OPERATION_STATUS_UNSPECIFIED: Operation.SqlOperationStatus.ValueType = ...  # 0
    """The state of the operation is unknown."""

    PENDING: Operation.SqlOperationStatus.ValueType = ...  # 1
    """The operation has been queued, but has not started yet."""

    RUNNING: Operation.SqlOperationStatus.ValueType = ...  # 2
    """The operation is running."""

    DONE: Operation.SqlOperationStatus.ValueType = ...  # 3
    """The operation completed."""


    KIND_FIELD_NUMBER: builtins.int
    TARGET_LINK_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    INSERT_TIME_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    OPERATION_TYPE_FIELD_NUMBER: builtins.int
    IMPORT_CONTEXT_FIELD_NUMBER: builtins.int
    EXPORT_CONTEXT_FIELD_NUMBER: builtins.int
    BACKUP_CONTEXT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TARGET_ID_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    TARGET_PROJECT_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#operation**."""

    target_link: typing.Text = ...
    status: global___Operation.SqlOperationStatus.ValueType = ...
    """The status of an operation."""

    user: typing.Text = ...
    """The email address of the user who initiated this operation."""

    @property
    def insert_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time this operation was enqueued in UTC timezone in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**.
        """
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time this operation actually started in UTC timezone in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**.
        """
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time this operation finished in UTC timezone in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**.
        """
        pass
    @property
    def error(self) -> global___OperationErrors:
        """If errors occurred during processing of this operation, this field will be
        populated.
        """
        pass
    operation_type: global___Operation.SqlOperationType.ValueType = ...
    """The type of the operation. Valid values are:
    *  **CREATE**
    *  **DELETE**
    *  **UPDATE**
    *  **RESTART**
    *  **IMPORT**
    *  **EXPORT**
    *  **BACKUP_VOLUME**
    *  **RESTORE_VOLUME**
    *  **CREATE_USER**
    *  **DELETE_USER**
    *  **CREATE_DATABASE**
    *  **DELETE_DATABASE**
    """

    @property
    def import_context(self) -> global___ImportContext:
        """The context for import operation, if applicable."""
        pass
    @property
    def export_context(self) -> global___ExportContext:
        """The context for export operation, if applicable."""
        pass
    @property
    def backup_context(self) -> global___BackupContext:
        """The context for backup operation, if applicable."""
        pass
    name: typing.Text = ...
    """An identifier that uniquely identifies the operation. You can use this
    identifier to retrieve the Operations resource that has information about
    the operation.
    """

    target_id: typing.Text = ...
    """Name of the database instance related to this operation."""

    self_link: typing.Text = ...
    """The URI of this resource."""

    target_project: typing.Text = ...
    """The project ID of the target instance related to this operation."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        target_link : typing.Text = ...,
        status : global___Operation.SqlOperationStatus.ValueType = ...,
        user : typing.Text = ...,
        insert_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        error : typing.Optional[global___OperationErrors] = ...,
        operation_type : global___Operation.SqlOperationType.ValueType = ...,
        import_context : typing.Optional[global___ImportContext] = ...,
        export_context : typing.Optional[global___ExportContext] = ...,
        backup_context : typing.Optional[global___BackupContext] = ...,
        name : typing.Text = ...,
        target_id : typing.Text = ...,
        self_link : typing.Text = ...,
        target_project : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["backup_context",b"backup_context","end_time",b"end_time","error",b"error","export_context",b"export_context","import_context",b"import_context","insert_time",b"insert_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_context",b"backup_context","end_time",b"end_time","error",b"error","export_context",b"export_context","import_context",b"import_context","insert_time",b"insert_time","kind",b"kind","name",b"name","operation_type",b"operation_type","self_link",b"self_link","start_time",b"start_time","status",b"status","target_id",b"target_id","target_link",b"target_link","target_project",b"target_project","user",b"user"]) -> None: ...
global___Operation = Operation

class OperationError(google.protobuf.message.Message):
    """Database instance operation error."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#operationError**."""

    code: typing.Text = ...
    """Identifies the specific error that occurred."""

    message: typing.Text = ...
    """Additional information about the error encountered."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        code : typing.Text = ...,
        message : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","kind",b"kind","message",b"message"]) -> None: ...
global___OperationError = OperationError

class OperationErrors(google.protobuf.message.Message):
    """Database instance operation errors list wrapper."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#operationErrors**."""

    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OperationError]:
        """The list of errors encountered while processing this operation."""
        pass
    def __init__(self,
        *,
        kind : typing.Text = ...,
        errors : typing.Optional[typing.Iterable[global___OperationError]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors","kind",b"kind"]) -> None: ...
global___OperationErrors = OperationErrors

class PasswordValidationPolicy(google.protobuf.message.Message):
    """Database instance local user password validation policy"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Complexity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ComplexityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Complexity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        COMPLEXITY_UNSPECIFIED: PasswordValidationPolicy.Complexity.ValueType = ...  # 0
        """Complexity check is not specified."""

        COMPLEXITY_DEFAULT: PasswordValidationPolicy.Complexity.ValueType = ...  # 1
        """A combination of lowercase, uppercase, numeric, and non-alphanumeric
        characters.
        """

    class Complexity(_Complexity, metaclass=_ComplexityEnumTypeWrapper):
        """The complexity choices of the password."""
        pass

    COMPLEXITY_UNSPECIFIED: PasswordValidationPolicy.Complexity.ValueType = ...  # 0
    """Complexity check is not specified."""

    COMPLEXITY_DEFAULT: PasswordValidationPolicy.Complexity.ValueType = ...  # 1
    """A combination of lowercase, uppercase, numeric, and non-alphanumeric
    characters.
    """


    MIN_LENGTH_FIELD_NUMBER: builtins.int
    COMPLEXITY_FIELD_NUMBER: builtins.int
    REUSE_INTERVAL_FIELD_NUMBER: builtins.int
    DISALLOW_USERNAME_SUBSTRING_FIELD_NUMBER: builtins.int
    PASSWORD_CHANGE_INTERVAL_FIELD_NUMBER: builtins.int
    @property
    def min_length(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """Minimum number of characters allowed."""
        pass
    complexity: global___PasswordValidationPolicy.Complexity.ValueType = ...
    """The complexity of the password."""

    @property
    def reuse_interval(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """Number of previous passwords that cannot be reused."""
        pass
    @property
    def disallow_username_substring(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Disallow username as a part of the password."""
        pass
    @property
    def password_change_interval(self) -> google.protobuf.duration_pb2.Duration:
        """Minimum interval after which the password can be changed. This flag is only
        supported for PostgresSQL.
        """
        pass
    def __init__(self,
        *,
        min_length : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        complexity : global___PasswordValidationPolicy.Complexity.ValueType = ...,
        reuse_interval : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        disallow_username_substring : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        password_change_interval : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["disallow_username_substring",b"disallow_username_substring","min_length",b"min_length","password_change_interval",b"password_change_interval","reuse_interval",b"reuse_interval"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["complexity",b"complexity","disallow_username_substring",b"disallow_username_substring","min_length",b"min_length","password_change_interval",b"password_change_interval","reuse_interval",b"reuse_interval"]) -> None: ...
global___PasswordValidationPolicy = PasswordValidationPolicy

class OperationsListResponse(google.protobuf.message.Message):
    """Operations list response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#operationsList**."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operation]:
        """List of operation resources."""
        pass
    next_page_token: typing.Text = ...
    """The continuation token, used to page through large result sets. Provide
    this value in a subsequent request to return the next page of results.
    """

    def __init__(self,
        *,
        kind : typing.Text = ...,
        items : typing.Optional[typing.Iterable[global___Operation]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items",b"items","kind",b"kind","next_page_token",b"next_page_token"]) -> None: ...
global___OperationsListResponse = OperationsListResponse

class ReplicaConfiguration(google.protobuf.message.Message):
    """Read-replica configuration for connecting to the primary instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    MYSQL_REPLICA_CONFIGURATION_FIELD_NUMBER: builtins.int
    FAILOVER_TARGET_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#replicaConfiguration**."""

    @property
    def mysql_replica_configuration(self) -> global___MySqlReplicaConfiguration:
        """MySQL specific configuration when replicating from a MySQL on-premises
        primary instance. Replication configuration information such as the
        username, password, certificates, and keys are not stored in the instance
        metadata. The configuration information is used only to set up the
        replication connection and is stored by MySQL in a file named
        **master.info** in the data directory.
        """
        pass
    @property
    def failover_target(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Specifies if the replica is the failover target. If the field is set to
        **true** the replica will be designated as a failover replica. In case the
        primary instance fails, the replica instance will be promoted as the new
        primary instance. Only one replica can be specified as failover target, and
        the replica has to be in different zone with the primary instance.
        """
        pass
    def __init__(self,
        *,
        kind : typing.Text = ...,
        mysql_replica_configuration : typing.Optional[global___MySqlReplicaConfiguration] = ...,
        failover_target : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["failover_target",b"failover_target","mysql_replica_configuration",b"mysql_replica_configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["failover_target",b"failover_target","kind",b"kind","mysql_replica_configuration",b"mysql_replica_configuration"]) -> None: ...
global___ReplicaConfiguration = ReplicaConfiguration

class RestoreBackupContext(google.protobuf.message.Message):
    """Database instance restore from backup context.
    Backup context contains source instance id and project id.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    BACKUP_RUN_ID_FIELD_NUMBER: builtins.int
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#restoreBackupContext**."""

    backup_run_id: builtins.int = ...
    """The ID of the backup run to restore from."""

    instance_id: typing.Text = ...
    """The ID of the instance that the backup was taken from."""

    project: typing.Text = ...
    """The full project ID of the source instance."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        backup_run_id : builtins.int = ...,
        instance_id : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_run_id",b"backup_run_id","instance_id",b"instance_id","kind",b"kind","project",b"project"]) -> None: ...
global___RestoreBackupContext = RestoreBackupContext

class RotateServerCaContext(google.protobuf.message.Message):
    """Instance rotate server CA context."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    NEXT_VERSION_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#rotateServerCaContext**."""

    next_version: typing.Text = ...
    """The fingerprint of the next version to be rotated to. If left unspecified,
    will be rotated to the most recently added server CA version.
    """

    def __init__(self,
        *,
        kind : typing.Text = ...,
        next_version : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind",b"kind","next_version",b"next_version"]) -> None: ...
global___RotateServerCaContext = RotateServerCaContext

class Settings(google.protobuf.message.Message):
    """Database instance settings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SqlActivationPolicy:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SqlActivationPolicyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SqlActivationPolicy.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SQL_ACTIVATION_POLICY_UNSPECIFIED: Settings.SqlActivationPolicy.ValueType = ...  # 0
        """Unknown activation plan."""

        ALWAYS: Settings.SqlActivationPolicy.ValueType = ...  # 1
        """The instance is always up and running."""

        NEVER: Settings.SqlActivationPolicy.ValueType = ...  # 2
        """The instance never starts."""

        ON_DEMAND: Settings.SqlActivationPolicy.ValueType = ...  # 3
        """The instance starts upon receiving requests."""

    class SqlActivationPolicy(_SqlActivationPolicy, metaclass=_SqlActivationPolicyEnumTypeWrapper):
        """Specifies when the instance is activated."""
        pass

    SQL_ACTIVATION_POLICY_UNSPECIFIED: Settings.SqlActivationPolicy.ValueType = ...  # 0
    """Unknown activation plan."""

    ALWAYS: Settings.SqlActivationPolicy.ValueType = ...  # 1
    """The instance is always up and running."""

    NEVER: Settings.SqlActivationPolicy.ValueType = ...  # 2
    """The instance never starts."""

    ON_DEMAND: Settings.SqlActivationPolicy.ValueType = ...  # 3
    """The instance starts upon receiving requests."""


    class UserLabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    SETTINGS_VERSION_FIELD_NUMBER: builtins.int
    AUTHORIZED_GAE_APPLICATIONS_FIELD_NUMBER: builtins.int
    TIER_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    USER_LABELS_FIELD_NUMBER: builtins.int
    AVAILABILITY_TYPE_FIELD_NUMBER: builtins.int
    PRICING_PLAN_FIELD_NUMBER: builtins.int
    REPLICATION_TYPE_FIELD_NUMBER: builtins.int
    STORAGE_AUTO_RESIZE_LIMIT_FIELD_NUMBER: builtins.int
    ACTIVATION_POLICY_FIELD_NUMBER: builtins.int
    IP_CONFIGURATION_FIELD_NUMBER: builtins.int
    STORAGE_AUTO_RESIZE_FIELD_NUMBER: builtins.int
    LOCATION_PREFERENCE_FIELD_NUMBER: builtins.int
    DATABASE_FLAGS_FIELD_NUMBER: builtins.int
    DATA_DISK_TYPE_FIELD_NUMBER: builtins.int
    MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    BACKUP_CONFIGURATION_FIELD_NUMBER: builtins.int
    DATABASE_REPLICATION_ENABLED_FIELD_NUMBER: builtins.int
    CRASH_SAFE_REPLICATION_ENABLED_FIELD_NUMBER: builtins.int
    DATA_DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    ACTIVE_DIRECTORY_CONFIG_FIELD_NUMBER: builtins.int
    COLLATION_FIELD_NUMBER: builtins.int
    DENY_MAINTENANCE_PERIODS_FIELD_NUMBER: builtins.int
    INSIGHTS_CONFIG_FIELD_NUMBER: builtins.int
    PASSWORD_VALIDATION_POLICY_FIELD_NUMBER: builtins.int
    SQL_SERVER_AUDIT_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def settings_version(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """The version of instance settings. This is a required field for update
        method to make sure concurrent updates are handled properly. During update,
        use the most recent settingsVersion value for this instance and do not try
        to update this value.
        """
        pass
    @property
    def authorized_gae_applications(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The App Engine app IDs that can access this instance.
        (Deprecated) Applied to First Generation instances only.
        """
        pass
    tier: typing.Text = ...
    """The tier (or machine type) for this instance, for example
    **db-custom-1-3840**. WARNING: Changing this restarts the instance.
    """

    kind: typing.Text = ...
    """This is always **sql#settings**."""

    @property
    def user_labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User-provided labels, represented as a dictionary where each label is a
        single key value pair.
        """
        pass
    availability_type: global___SqlAvailabilityType.ValueType = ...
    """Availability type. Potential values:
    *  **ZONAL**: The instance serves data from only one zone. Outages in that
    zone affect data accessibility.
    *  **REGIONAL**: The instance can serve data from more than one zone in a
    region (it is highly available)./

    For more information, see [Overview of the High Availability
    Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).
    """

    pricing_plan: global___SqlPricingPlan.ValueType = ...
    """The pricing plan for this instance. This can be either **PER_USE** or
    **PACKAGE**. Only **PER_USE** is supported for Second Generation instances.
    """

    replication_type: global___SqlReplicationType.ValueType = ...
    """The type of replication this instance uses. This can be either
    **ASYNCHRONOUS** or **SYNCHRONOUS**. (Deprecated) This property was only
    applicable to First Generation instances.
    """

    @property
    def storage_auto_resize_limit(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """The maximum size to which storage capacity can be automatically increased.
        The default value is 0, which specifies that there is no limit.
        """
        pass
    activation_policy: global___Settings.SqlActivationPolicy.ValueType = ...
    """The activation policy specifies when the instance is activated; it is
    applicable only when the instance state is RUNNABLE. Valid values:
    *  **ALWAYS**: The instance is on, and remains so even in the absence of
    connection requests.
    *  **NEVER**: The instance is off; it is not activated, even if a
    connection request arrives.
    """

    @property
    def ip_configuration(self) -> global___IpConfiguration:
        """The settings for IP Management. This allows to enable or disable the
        instance IP and manage which external networks can connect to the instance.
        The IPv4 address cannot be disabled for Second Generation instances.
        """
        pass
    @property
    def storage_auto_resize(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Configuration to increase storage size automatically. The default value is
        true.
        """
        pass
    @property
    def location_preference(self) -> global___LocationPreference:
        """The location preference settings. This allows the instance to be located as
        near as possible to either an App Engine app or Compute Engine zone for
        better performance. App Engine co-location was only applicable to First
        Generation instances.
        """
        pass
    @property
    def database_flags(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DatabaseFlags]:
        """The database flags passed to the instance at startup."""
        pass
    data_disk_type: global___SqlDataDiskType.ValueType = ...
    """The type of data disk: **PD_SSD** (default) or **PD_HDD**. Not used for
    First Generation instances.
    """

    @property
    def maintenance_window(self) -> global___MaintenanceWindow:
        """The maintenance window for this instance. This specifies when the instance
        can be restarted for maintenance purposes.
        """
        pass
    @property
    def backup_configuration(self) -> global___BackupConfiguration:
        """The daily backup configuration for the instance."""
        pass
    @property
    def database_replication_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Configuration specific to read replica instances. Indicates whether
        replication is enabled or not. WARNING: Changing this restarts the
        instance.
        """
        pass
    @property
    def crash_safe_replication_enabled(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Configuration specific to read replica instances. Indicates whether
        database flags for crash-safe replication are enabled. This property was
        only applicable to First Generation instances.
        """
        pass
    @property
    def data_disk_size_gb(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """The size of data disk, in GB. The data disk size minimum is 10GB."""
        pass
    @property
    def active_directory_config(self) -> global___SqlActiveDirectoryConfig:
        """Active Directory configuration, relevant only for Cloud SQL for SQL Server."""
        pass
    collation: typing.Text = ...
    """The name of server Instance collation."""

    @property
    def deny_maintenance_periods(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DenyMaintenancePeriod]:
        """Deny maintenance periods"""
        pass
    @property
    def insights_config(self) -> global___InsightsConfig:
        """Insights configuration, for now relevant only for Postgres."""
        pass
    @property
    def password_validation_policy(self) -> global___PasswordValidationPolicy:
        """The local user password validation policy of the instance."""
        pass
    @property
    def sql_server_audit_config(self) -> global___SqlServerAuditConfig:
        """SQL Server specific audit configuration."""
        pass
    def __init__(self,
        *,
        settings_version : typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        authorized_gae_applications : typing.Optional[typing.Iterable[typing.Text]] = ...,
        tier : typing.Text = ...,
        kind : typing.Text = ...,
        user_labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        availability_type : global___SqlAvailabilityType.ValueType = ...,
        pricing_plan : global___SqlPricingPlan.ValueType = ...,
        replication_type : global___SqlReplicationType.ValueType = ...,
        storage_auto_resize_limit : typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        activation_policy : global___Settings.SqlActivationPolicy.ValueType = ...,
        ip_configuration : typing.Optional[global___IpConfiguration] = ...,
        storage_auto_resize : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        location_preference : typing.Optional[global___LocationPreference] = ...,
        database_flags : typing.Optional[typing.Iterable[global___DatabaseFlags]] = ...,
        data_disk_type : global___SqlDataDiskType.ValueType = ...,
        maintenance_window : typing.Optional[global___MaintenanceWindow] = ...,
        backup_configuration : typing.Optional[global___BackupConfiguration] = ...,
        database_replication_enabled : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        crash_safe_replication_enabled : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        data_disk_size_gb : typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        active_directory_config : typing.Optional[global___SqlActiveDirectoryConfig] = ...,
        collation : typing.Text = ...,
        deny_maintenance_periods : typing.Optional[typing.Iterable[global___DenyMaintenancePeriod]] = ...,
        insights_config : typing.Optional[global___InsightsConfig] = ...,
        password_validation_policy : typing.Optional[global___PasswordValidationPolicy] = ...,
        sql_server_audit_config : typing.Optional[global___SqlServerAuditConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["active_directory_config",b"active_directory_config","backup_configuration",b"backup_configuration","crash_safe_replication_enabled",b"crash_safe_replication_enabled","data_disk_size_gb",b"data_disk_size_gb","database_replication_enabled",b"database_replication_enabled","insights_config",b"insights_config","ip_configuration",b"ip_configuration","location_preference",b"location_preference","maintenance_window",b"maintenance_window","password_validation_policy",b"password_validation_policy","settings_version",b"settings_version","sql_server_audit_config",b"sql_server_audit_config","storage_auto_resize",b"storage_auto_resize","storage_auto_resize_limit",b"storage_auto_resize_limit"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["activation_policy",b"activation_policy","active_directory_config",b"active_directory_config","authorized_gae_applications",b"authorized_gae_applications","availability_type",b"availability_type","backup_configuration",b"backup_configuration","collation",b"collation","crash_safe_replication_enabled",b"crash_safe_replication_enabled","data_disk_size_gb",b"data_disk_size_gb","data_disk_type",b"data_disk_type","database_flags",b"database_flags","database_replication_enabled",b"database_replication_enabled","deny_maintenance_periods",b"deny_maintenance_periods","insights_config",b"insights_config","ip_configuration",b"ip_configuration","kind",b"kind","location_preference",b"location_preference","maintenance_window",b"maintenance_window","password_validation_policy",b"password_validation_policy","pricing_plan",b"pricing_plan","replication_type",b"replication_type","settings_version",b"settings_version","sql_server_audit_config",b"sql_server_audit_config","storage_auto_resize",b"storage_auto_resize","storage_auto_resize_limit",b"storage_auto_resize_limit","tier",b"tier","user_labels",b"user_labels"]) -> None: ...
global___Settings = Settings

class SslCert(google.protobuf.message.Message):
    """SslCerts Resource"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    CERT_SERIAL_NUMBER_FIELD_NUMBER: builtins.int
    CERT_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    COMMON_NAME_FIELD_NUMBER: builtins.int
    EXPIRATION_TIME_FIELD_NUMBER: builtins.int
    SHA1_FINGERPRINT_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#sslCert**."""

    cert_serial_number: typing.Text = ...
    """Serial number, as extracted from the certificate."""

    cert: typing.Text = ...
    """PEM representation."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the certificate was created in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**.
        """
        pass
    common_name: typing.Text = ...
    """User supplied name.  Constrained to [a-zA-Z.-_ ]+."""

    @property
    def expiration_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the certificate expires in
        [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
        **2012-11-15T16:19:00.094Z**.
        """
        pass
    sha1_fingerprint: typing.Text = ...
    """Sha1 Fingerprint."""

    instance: typing.Text = ...
    """Name of the database instance."""

    self_link: typing.Text = ...
    """The URI of this resource."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        cert_serial_number : typing.Text = ...,
        cert : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        common_name : typing.Text = ...,
        expiration_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        sha1_fingerprint : typing.Text = ...,
        instance : typing.Text = ...,
        self_link : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","expiration_time",b"expiration_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cert",b"cert","cert_serial_number",b"cert_serial_number","common_name",b"common_name","create_time",b"create_time","expiration_time",b"expiration_time","instance",b"instance","kind",b"kind","self_link",b"self_link","sha1_fingerprint",b"sha1_fingerprint"]) -> None: ...
global___SslCert = SslCert

class SslCertDetail(google.protobuf.message.Message):
    """SslCertDetail."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CERT_INFO_FIELD_NUMBER: builtins.int
    CERT_PRIVATE_KEY_FIELD_NUMBER: builtins.int
    @property
    def cert_info(self) -> global___SslCert:
        """The public information about the cert."""
        pass
    cert_private_key: typing.Text = ...
    """The private key for the client cert, in pem format.  Keep private in order
    to protect your security.
    """

    def __init__(self,
        *,
        cert_info : typing.Optional[global___SslCert] = ...,
        cert_private_key : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cert_info",b"cert_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cert_info",b"cert_info","cert_private_key",b"cert_private_key"]) -> None: ...
global___SslCertDetail = SslCertDetail

class SslCertsCreateEphemeralRequest(google.protobuf.message.Message):
    """SslCerts create ephemeral certificate request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PUBLIC_KEY_FIELD_NUMBER: builtins.int
    ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    public_key: typing.Text = ...
    """PEM encoded public key to include in the signed certificate."""

    access_token: typing.Text = ...
    """Access token to include in the signed certificate."""

    def __init__(self,
        *,
        public_key : typing.Text = ...,
        access_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_token",b"access_token","public_key",b"public_key"]) -> None: ...
global___SslCertsCreateEphemeralRequest = SslCertsCreateEphemeralRequest

class SslCertsInsertRequest(google.protobuf.message.Message):
    """SslCerts insert request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMMON_NAME_FIELD_NUMBER: builtins.int
    common_name: typing.Text = ...
    """User supplied name.  Must be a distinct name from the other certificates
    for this instance.
    """

    def __init__(self,
        *,
        common_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["common_name",b"common_name"]) -> None: ...
global___SslCertsInsertRequest = SslCertsInsertRequest

class SqlInstancesRescheduleMaintenanceRequestBody(google.protobuf.message.Message):
    """Reschedule options for maintenance windows."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RescheduleType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RescheduleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RescheduleType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        RESCHEDULE_TYPE_UNSPECIFIED: SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.ValueType = ...  # 0
        IMMEDIATE: SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.ValueType = ...  # 1
        """Reschedules maintenance to happen now (within 5 minutes)."""

        NEXT_AVAILABLE_WINDOW: SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.ValueType = ...  # 2
        """Reschedules maintenance to occur within one week from the originally
        scheduled day and time.
        """

        SPECIFIC_TIME: SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.ValueType = ...  # 3
        """Reschedules maintenance to a specific time and day."""

    class RescheduleType(_RescheduleType, metaclass=_RescheduleTypeEnumTypeWrapper):
        pass

    RESCHEDULE_TYPE_UNSPECIFIED: SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.ValueType = ...  # 0
    IMMEDIATE: SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.ValueType = ...  # 1
    """Reschedules maintenance to happen now (within 5 minutes)."""

    NEXT_AVAILABLE_WINDOW: SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.ValueType = ...  # 2
    """Reschedules maintenance to occur within one week from the originally
    scheduled day and time.
    """

    SPECIFIC_TIME: SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.ValueType = ...  # 3
    """Reschedules maintenance to a specific time and day."""


    class Reschedule(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        RESCHEDULE_TYPE_FIELD_NUMBER: builtins.int
        SCHEDULE_TIME_FIELD_NUMBER: builtins.int
        reschedule_type: global___SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.ValueType = ...
        """Required. The type of the reschedule."""

        @property
        def schedule_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Optional. Timestamp when the maintenance shall be rescheduled to if
            reschedule_type=SPECIFIC_TIME, in
            [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example
            **2012-11-15T16:19:00.094Z**.
            """
            pass
        def __init__(self,
            *,
            reschedule_type : global___SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType.ValueType = ...,
            schedule_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["schedule_time",b"schedule_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["reschedule_type",b"reschedule_type","schedule_time",b"schedule_time"]) -> None: ...

    RESCHEDULE_FIELD_NUMBER: builtins.int
    @property
    def reschedule(self) -> global___SqlInstancesRescheduleMaintenanceRequestBody.Reschedule:
        """Required. The type of the reschedule the user wants."""
        pass
    def __init__(self,
        *,
        reschedule : typing.Optional[global___SqlInstancesRescheduleMaintenanceRequestBody.Reschedule] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["reschedule",b"reschedule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["reschedule",b"reschedule"]) -> None: ...
global___SqlInstancesRescheduleMaintenanceRequestBody = SqlInstancesRescheduleMaintenanceRequestBody

class SslCertsInsertResponse(google.protobuf.message.Message):
    """SslCert insert response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    OPERATION_FIELD_NUMBER: builtins.int
    SERVER_CA_CERT_FIELD_NUMBER: builtins.int
    CLIENT_CERT_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#sslCertsInsert**."""

    @property
    def operation(self) -> global___Operation:
        """The operation to track the ssl certs insert request."""
        pass
    @property
    def server_ca_cert(self) -> global___SslCert:
        """The server Certificate Authority's certificate.  If this is missing you can
        force a new one to be generated by calling resetSslConfig method on
        instances resource.
        """
        pass
    @property
    def client_cert(self) -> global___SslCertDetail:
        """The new client certificate and private key."""
        pass
    def __init__(self,
        *,
        kind : typing.Text = ...,
        operation : typing.Optional[global___Operation] = ...,
        server_ca_cert : typing.Optional[global___SslCert] = ...,
        client_cert : typing.Optional[global___SslCertDetail] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client_cert",b"client_cert","operation",b"operation","server_ca_cert",b"server_ca_cert"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["client_cert",b"client_cert","kind",b"kind","operation",b"operation","server_ca_cert",b"server_ca_cert"]) -> None: ...
global___SslCertsInsertResponse = SslCertsInsertResponse

class SslCertsListResponse(google.protobuf.message.Message):
    """SslCerts list response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#sslCertsList**."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SslCert]:
        """List of client certificates for the instance."""
        pass
    def __init__(self,
        *,
        kind : typing.Text = ...,
        items : typing.Optional[typing.Iterable[global___SslCert]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items",b"items","kind",b"kind"]) -> None: ...
global___SslCertsListResponse = SslCertsListResponse

class TruncateLogContext(google.protobuf.message.Message):
    """Database Instance truncate log context."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    LOG_TYPE_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always **sql#truncateLogContext**."""

    log_type: typing.Text = ...
    """The type of log to truncate. Valid values are **MYSQL_GENERAL_TABLE** and
    **MYSQL_SLOW_TABLE**.
    """

    def __init__(self,
        *,
        kind : typing.Text = ...,
        log_type : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kind",b"kind","log_type",b"log_type"]) -> None: ...
global___TruncateLogContext = TruncateLogContext

class SqlActiveDirectoryConfig(google.protobuf.message.Message):
    """Active Directory configuration, relevant only for Cloud SQL for SQL Server."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    DOMAIN_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always sql#activeDirectoryConfig."""

    domain: typing.Text = ...
    """The name of the domain (e.g., mydomain.com)."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        domain : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["domain",b"domain","kind",b"kind"]) -> None: ...
global___SqlActiveDirectoryConfig = SqlActiveDirectoryConfig

class SqlServerAuditConfig(google.protobuf.message.Message):
    """SQL Server specific audit configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    BUCKET_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """This is always sql#sqlServerAuditConfig"""

    bucket: typing.Text = ...
    """The name of the destination bucket (e.g., gs://mybucket)."""

    def __init__(self,
        *,
        kind : typing.Text = ...,
        bucket : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket",b"bucket","kind",b"kind"]) -> None: ...
global___SqlServerAuditConfig = SqlServerAuditConfig
