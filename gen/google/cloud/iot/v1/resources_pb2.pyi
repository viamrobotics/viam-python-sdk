"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _MqttState:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _MqttStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MqttState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    MQTT_STATE_UNSPECIFIED: MqttState.ValueType = ...  # 0
    """No MQTT state specified. If not specified, MQTT will be enabled by default."""

    MQTT_ENABLED: MqttState.ValueType = ...  # 1
    """Enables a MQTT connection."""

    MQTT_DISABLED: MqttState.ValueType = ...  # 2
    """Disables a MQTT connection."""

class MqttState(_MqttState, metaclass=_MqttStateEnumTypeWrapper):
    """Indicates whether an MQTT connection is enabled or disabled. See the field
    description for details.
    """
    pass

MQTT_STATE_UNSPECIFIED: MqttState.ValueType = ...  # 0
"""No MQTT state specified. If not specified, MQTT will be enabled by default."""

MQTT_ENABLED: MqttState.ValueType = ...  # 1
"""Enables a MQTT connection."""

MQTT_DISABLED: MqttState.ValueType = ...  # 2
"""Disables a MQTT connection."""

global___MqttState = MqttState


class _HttpState:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _HttpStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HttpState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    HTTP_STATE_UNSPECIFIED: HttpState.ValueType = ...  # 0
    """No HTTP state specified. If not specified, DeviceService will be
    enabled by default.
    """

    HTTP_ENABLED: HttpState.ValueType = ...  # 1
    """Enables DeviceService (HTTP) service for the registry."""

    HTTP_DISABLED: HttpState.ValueType = ...  # 2
    """Disables DeviceService (HTTP) service for the registry."""

class HttpState(_HttpState, metaclass=_HttpStateEnumTypeWrapper):
    """Indicates whether DeviceService (HTTP) is enabled or disabled for the
    registry. See the field description for details.
    """
    pass

HTTP_STATE_UNSPECIFIED: HttpState.ValueType = ...  # 0
"""No HTTP state specified. If not specified, DeviceService will be
enabled by default.
"""

HTTP_ENABLED: HttpState.ValueType = ...  # 1
"""Enables DeviceService (HTTP) service for the registry."""

HTTP_DISABLED: HttpState.ValueType = ...  # 2
"""Disables DeviceService (HTTP) service for the registry."""

global___HttpState = HttpState


class _LogLevel:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _LogLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LogLevel.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    LOG_LEVEL_UNSPECIFIED: LogLevel.ValueType = ...  # 0
    """No logging specified. If not specified, logging will be disabled."""

    NONE: LogLevel.ValueType = ...  # 10
    """Disables logging."""

    ERROR: LogLevel.ValueType = ...  # 20
    """Error events will be logged."""

    INFO: LogLevel.ValueType = ...  # 30
    """Informational events will be logged, such as connections and
    disconnections.
    """

    DEBUG: LogLevel.ValueType = ...  # 40
    """All events will be logged."""

class LogLevel(_LogLevel, metaclass=_LogLevelEnumTypeWrapper):
    """**Beta Feature**

    The logging verbosity for device activity. Specifies which events should be
    written to logs. For example, if the LogLevel is ERROR, only events that
    terminate in errors will be logged. LogLevel is inclusive; enabling INFO
    logging will also enable ERROR logging.
    """
    pass

LOG_LEVEL_UNSPECIFIED: LogLevel.ValueType = ...  # 0
"""No logging specified. If not specified, logging will be disabled."""

NONE: LogLevel.ValueType = ...  # 10
"""Disables logging."""

ERROR: LogLevel.ValueType = ...  # 20
"""Error events will be logged."""

INFO: LogLevel.ValueType = ...  # 30
"""Informational events will be logged, such as connections and
disconnections.
"""

DEBUG: LogLevel.ValueType = ...  # 40
"""All events will be logged."""

global___LogLevel = LogLevel


class _GatewayType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _GatewayTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_GatewayType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    GATEWAY_TYPE_UNSPECIFIED: GatewayType.ValueType = ...  # 0
    """If unspecified, the device is considered a non-gateway device."""

    GATEWAY: GatewayType.ValueType = ...  # 1
    """The device is a gateway."""

    NON_GATEWAY: GatewayType.ValueType = ...  # 2
    """The device is not a gateway."""

class GatewayType(_GatewayType, metaclass=_GatewayTypeEnumTypeWrapper):
    """Gateway type."""
    pass

GATEWAY_TYPE_UNSPECIFIED: GatewayType.ValueType = ...  # 0
"""If unspecified, the device is considered a non-gateway device."""

GATEWAY: GatewayType.ValueType = ...  # 1
"""The device is a gateway."""

NON_GATEWAY: GatewayType.ValueType = ...  # 2
"""The device is not a gateway."""

global___GatewayType = GatewayType


class _GatewayAuthMethod:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _GatewayAuthMethodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_GatewayAuthMethod.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    GATEWAY_AUTH_METHOD_UNSPECIFIED: GatewayAuthMethod.ValueType = ...  # 0
    """No authentication/authorization method specified. No devices are allowed to
    access the gateway.
    """

    ASSOCIATION_ONLY: GatewayAuthMethod.ValueType = ...  # 1
    """The device is authenticated through the gateway association only. Device
    credentials are ignored even if provided.
    """

    DEVICE_AUTH_TOKEN_ONLY: GatewayAuthMethod.ValueType = ...  # 2
    """The device is authenticated through its own credentials. Gateway
    association is not checked.
    """

    ASSOCIATION_AND_DEVICE_AUTH_TOKEN: GatewayAuthMethod.ValueType = ...  # 3
    """The device is authenticated through both device credentials and gateway
    association. The device must be bound to the gateway and must provide its
    own credentials.
    """

class GatewayAuthMethod(_GatewayAuthMethod, metaclass=_GatewayAuthMethodEnumTypeWrapper):
    """The gateway authorization/authentication method. This setting determines how
    Cloud IoT Core authorizes/authenticate devices to access the gateway.
    """
    pass

GATEWAY_AUTH_METHOD_UNSPECIFIED: GatewayAuthMethod.ValueType = ...  # 0
"""No authentication/authorization method specified. No devices are allowed to
access the gateway.
"""

ASSOCIATION_ONLY: GatewayAuthMethod.ValueType = ...  # 1
"""The device is authenticated through the gateway association only. Device
credentials are ignored even if provided.
"""

DEVICE_AUTH_TOKEN_ONLY: GatewayAuthMethod.ValueType = ...  # 2
"""The device is authenticated through its own credentials. Gateway
association is not checked.
"""

ASSOCIATION_AND_DEVICE_AUTH_TOKEN: GatewayAuthMethod.ValueType = ...  # 3
"""The device is authenticated through both device credentials and gateway
association. The device must be bound to the gateway and must provide its
own credentials.
"""

global___GatewayAuthMethod = GatewayAuthMethod


class _PublicKeyCertificateFormat:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PublicKeyCertificateFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PublicKeyCertificateFormat.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT: PublicKeyCertificateFormat.ValueType = ...  # 0
    """The format has not been specified. This is an invalid default value and
    must not be used.
    """

    X509_CERTIFICATE_PEM: PublicKeyCertificateFormat.ValueType = ...  # 1
    """An X.509v3 certificate ([RFC5280](https://www.ietf.org/rfc/rfc5280.txt)),
    encoded in base64, and wrapped by `-----BEGIN CERTIFICATE-----` and
    `-----END CERTIFICATE-----`.
    """

class PublicKeyCertificateFormat(_PublicKeyCertificateFormat, metaclass=_PublicKeyCertificateFormatEnumTypeWrapper):
    """The supported formats for the public key."""
    pass

UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT: PublicKeyCertificateFormat.ValueType = ...  # 0
"""The format has not been specified. This is an invalid default value and
must not be used.
"""

X509_CERTIFICATE_PEM: PublicKeyCertificateFormat.ValueType = ...  # 1
"""An X.509v3 certificate ([RFC5280](https://www.ietf.org/rfc/rfc5280.txt)),
encoded in base64, and wrapped by `-----BEGIN CERTIFICATE-----` and
`-----END CERTIFICATE-----`.
"""

global___PublicKeyCertificateFormat = PublicKeyCertificateFormat


class _PublicKeyFormat:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PublicKeyFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PublicKeyFormat.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNSPECIFIED_PUBLIC_KEY_FORMAT: PublicKeyFormat.ValueType = ...  # 0
    """The format has not been specified. This is an invalid default value and
    must not be used.
    """

    RSA_PEM: PublicKeyFormat.ValueType = ...  # 3
    """An RSA public key encoded in base64, and wrapped by
    `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----`. This can be
    used to verify `RS256` signatures in JWT tokens ([RFC7518](
    https://www.ietf.org/rfc/rfc7518.txt)).
    """

    RSA_X509_PEM: PublicKeyFormat.ValueType = ...  # 1
    """As RSA_PEM, but wrapped in an X.509v3 certificate ([RFC5280](
    https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by
    `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
    """

    ES256_PEM: PublicKeyFormat.ValueType = ...  # 2
    """Public key for the ECDSA algorithm using P-256 and SHA-256, encoded in
    base64, and wrapped by `-----BEGIN PUBLIC KEY-----` and `-----END
    PUBLIC KEY-----`. This can be used to verify JWT tokens with the `ES256`
    algorithm ([RFC7518](https://www.ietf.org/rfc/rfc7518.txt)). This curve is
    defined in [OpenSSL](https://www.openssl.org/) as the `prime256v1` curve.
    """

    ES256_X509_PEM: PublicKeyFormat.ValueType = ...  # 4
    """As ES256_PEM, but wrapped in an X.509v3 certificate ([RFC5280](
    https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by
    `-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
    """

class PublicKeyFormat(_PublicKeyFormat, metaclass=_PublicKeyFormatEnumTypeWrapper):
    """The supported formats for the public key."""
    pass

UNSPECIFIED_PUBLIC_KEY_FORMAT: PublicKeyFormat.ValueType = ...  # 0
"""The format has not been specified. This is an invalid default value and
must not be used.
"""

RSA_PEM: PublicKeyFormat.ValueType = ...  # 3
"""An RSA public key encoded in base64, and wrapped by
`-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----`. This can be
used to verify `RS256` signatures in JWT tokens ([RFC7518](
https://www.ietf.org/rfc/rfc7518.txt)).
"""

RSA_X509_PEM: PublicKeyFormat.ValueType = ...  # 1
"""As RSA_PEM, but wrapped in an X.509v3 certificate ([RFC5280](
https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by
`-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
"""

ES256_PEM: PublicKeyFormat.ValueType = ...  # 2
"""Public key for the ECDSA algorithm using P-256 and SHA-256, encoded in
base64, and wrapped by `-----BEGIN PUBLIC KEY-----` and `-----END
PUBLIC KEY-----`. This can be used to verify JWT tokens with the `ES256`
algorithm ([RFC7518](https://www.ietf.org/rfc/rfc7518.txt)). This curve is
defined in [OpenSSL](https://www.openssl.org/) as the `prime256v1` curve.
"""

ES256_X509_PEM: PublicKeyFormat.ValueType = ...  # 4
"""As ES256_PEM, but wrapped in an X.509v3 certificate ([RFC5280](
https://www.ietf.org/rfc/rfc5280.txt)), encoded in base64, and wrapped by
`-----BEGIN CERTIFICATE-----` and `-----END CERTIFICATE-----`.
"""

global___PublicKeyFormat = PublicKeyFormat


class Device(google.protobuf.message.Message):
    """The device resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NUM_ID_FIELD_NUMBER: builtins.int
    CREDENTIALS_FIELD_NUMBER: builtins.int
    LAST_HEARTBEAT_TIME_FIELD_NUMBER: builtins.int
    LAST_EVENT_TIME_FIELD_NUMBER: builtins.int
    LAST_STATE_TIME_FIELD_NUMBER: builtins.int
    LAST_CONFIG_ACK_TIME_FIELD_NUMBER: builtins.int
    LAST_CONFIG_SEND_TIME_FIELD_NUMBER: builtins.int
    BLOCKED_FIELD_NUMBER: builtins.int
    LAST_ERROR_TIME_FIELD_NUMBER: builtins.int
    LAST_ERROR_STATUS_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    LOG_LEVEL_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    GATEWAY_CONFIG_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """The user-defined device identifier. The device ID must be unique
    within a device registry.
    """

    name: typing.Text = ...
    """The resource path name. For example,
    `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
    `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
    When `name` is populated as a response from the service, it always ends
    in the device numeric ID.
    """

    num_id: builtins.int = ...
    """[Output only] A server-defined unique numeric ID for the device. This is a
    more compact way to identify devices, and it is globally unique.
    """

    @property
    def credentials(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeviceCredential]:
        """The credentials used to authenticate this device. To allow credential
        rotation without interruption, multiple device credentials can be bound to
        this device. No more than 3 credentials can be bound to a single device at
        a time. When new credentials are added to a device, they are verified
        against the registry credentials. For details, see the description of the
        `DeviceRegistry.credentials` field.
        """
        pass
    @property
    def last_heartbeat_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Output only] The last time an MQTT `PINGREQ` was received. This field
        applies only to devices connecting through MQTT. MQTT clients usually only
        send `PINGREQ` messages if the connection is idle, and no other messages
        have been sent. Timestamps are periodically collected and written to
        storage; they may be stale by a few minutes.
        """
        pass
    @property
    def last_event_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Output only] The last time a telemetry event was received. Timestamps are
        periodically collected and written to storage; they may be stale by a few
        minutes.
        """
        pass
    @property
    def last_state_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Output only] The last time a state event was received. Timestamps are
        periodically collected and written to storage; they may be stale by a few
        minutes.
        """
        pass
    @property
    def last_config_ack_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Output only] The last time a cloud-to-device config version acknowledgment
        was received from the device. This field is only for configurations
        sent through MQTT.
        """
        pass
    @property
    def last_config_send_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Output only] The last time a cloud-to-device config version was sent to
        the device.
        """
        pass
    blocked: builtins.bool = ...
    """If a device is blocked, connections or requests from this device will fail.
    Can be used to temporarily prevent the device from connecting if, for
    example, the sensor is generating bad data and needs maintenance.
    """

    @property
    def last_error_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Output only] The time the most recent error occurred, such as a failure to
        publish to Cloud Pub/Sub. This field is the timestamp of
        'last_error_status'.
        """
        pass
    @property
    def last_error_status(self) -> google.rpc.status_pb2.Status:
        """[Output only] The error message of the most recent error, such as a failure
        to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
        field. If no errors have occurred, this field has an empty message
        and the status code 0 == OK. Otherwise, this field is expected to have a
        status code other than OK.
        """
        pass
    @property
    def config(self) -> global___DeviceConfig:
        """The most recent device configuration, which is eventually sent from
        Cloud IoT Core to the device. If not present on creation, the
        configuration will be initialized with an empty payload and version value
        of `1`. To update this field after creation, use the
        `DeviceManager.ModifyCloudToDeviceConfig` method.
        """
        pass
    @property
    def state(self) -> global___DeviceState:
        """[Output only] The state most recently received from the device. If no state
        has been reported, this field is not present.
        """
        pass
    log_level: global___LogLevel.ValueType = ...
    """**Beta Feature**

    The logging verbosity for device activity. If unspecified,
    DeviceRegistry.log_level will be used.
    """

    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The metadata key-value pairs assigned to the device. This metadata is not
        interpreted or indexed by Cloud IoT Core. It can be used to add contextual
        information for the device.

        Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
        be less than 128 bytes in length.

        Values are free-form strings. Each value must be less than or equal to 32
        KB in size.

        The total size of all keys and values must be less than 256 KB, and the
        maximum number of key-value pairs is 500.
        """
        pass
    @property
    def gateway_config(self) -> global___GatewayConfig:
        """Gateway-related configuration and state."""
        pass
    def __init__(self,
        *,
        id : typing.Text = ...,
        name : typing.Text = ...,
        num_id : builtins.int = ...,
        credentials : typing.Optional[typing.Iterable[global___DeviceCredential]] = ...,
        last_heartbeat_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        last_event_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        last_state_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        last_config_ack_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        last_config_send_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        blocked : builtins.bool = ...,
        last_error_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        last_error_status : typing.Optional[google.rpc.status_pb2.Status] = ...,
        config : typing.Optional[global___DeviceConfig] = ...,
        state : typing.Optional[global___DeviceState] = ...,
        log_level : global___LogLevel.ValueType = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        gateway_config : typing.Optional[global___GatewayConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config","gateway_config",b"gateway_config","last_config_ack_time",b"last_config_ack_time","last_config_send_time",b"last_config_send_time","last_error_status",b"last_error_status","last_error_time",b"last_error_time","last_event_time",b"last_event_time","last_heartbeat_time",b"last_heartbeat_time","last_state_time",b"last_state_time","state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["blocked",b"blocked","config",b"config","credentials",b"credentials","gateway_config",b"gateway_config","id",b"id","last_config_ack_time",b"last_config_ack_time","last_config_send_time",b"last_config_send_time","last_error_status",b"last_error_status","last_error_time",b"last_error_time","last_event_time",b"last_event_time","last_heartbeat_time",b"last_heartbeat_time","last_state_time",b"last_state_time","log_level",b"log_level","metadata",b"metadata","name",b"name","num_id",b"num_id","state",b"state"]) -> None: ...
global___Device = Device

class GatewayConfig(google.protobuf.message.Message):
    """Gateway-related configuration and state."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GATEWAY_TYPE_FIELD_NUMBER: builtins.int
    GATEWAY_AUTH_METHOD_FIELD_NUMBER: builtins.int
    LAST_ACCESSED_GATEWAY_ID_FIELD_NUMBER: builtins.int
    LAST_ACCESSED_GATEWAY_TIME_FIELD_NUMBER: builtins.int
    gateway_type: global___GatewayType.ValueType = ...
    """Indicates whether the device is a gateway."""

    gateway_auth_method: global___GatewayAuthMethod.ValueType = ...
    """Indicates how to authorize and/or authenticate devices to access the
    gateway.
    """

    last_accessed_gateway_id: typing.Text = ...
    """[Output only] The ID of the gateway the device accessed most recently."""

    @property
    def last_accessed_gateway_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Output only] The most recent time at which the device accessed the gateway
        specified in `last_accessed_gateway`.
        """
        pass
    def __init__(self,
        *,
        gateway_type : global___GatewayType.ValueType = ...,
        gateway_auth_method : global___GatewayAuthMethod.ValueType = ...,
        last_accessed_gateway_id : typing.Text = ...,
        last_accessed_gateway_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["last_accessed_gateway_time",b"last_accessed_gateway_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["gateway_auth_method",b"gateway_auth_method","gateway_type",b"gateway_type","last_accessed_gateway_id",b"last_accessed_gateway_id","last_accessed_gateway_time",b"last_accessed_gateway_time"]) -> None: ...
global___GatewayConfig = GatewayConfig

class DeviceRegistry(google.protobuf.message.Message):
    """A container for a group of devices."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    EVENT_NOTIFICATION_CONFIGS_FIELD_NUMBER: builtins.int
    STATE_NOTIFICATION_CONFIG_FIELD_NUMBER: builtins.int
    MQTT_CONFIG_FIELD_NUMBER: builtins.int
    HTTP_CONFIG_FIELD_NUMBER: builtins.int
    LOG_LEVEL_FIELD_NUMBER: builtins.int
    CREDENTIALS_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """The identifier of this device registry. For example, `myRegistry`."""

    name: typing.Text = ...
    """The resource path name. For example,
    `projects/example-project/locations/us-central1/registries/my-registry`.
    """

    @property
    def event_notification_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EventNotificationConfig]:
        """The configuration for notification of telemetry events received from the
        device. All telemetry events that were successfully published by the
        device and acknowledged by Cloud IoT Core are guaranteed to be
        delivered to Cloud Pub/Sub. If multiple configurations match a message,
        only the first matching configuration is used. If you try to publish a
        device telemetry event using MQTT without specifying a Cloud Pub/Sub topic
        for the device's registry, the connection closes automatically. If you try
        to do so using an HTTP connection, an error is returned. Up to 10
        configurations may be provided.
        """
        pass
    @property
    def state_notification_config(self) -> global___StateNotificationConfig:
        """The configuration for notification of new states received from the device.
        State updates are guaranteed to be stored in the state history, but
        notifications to Cloud Pub/Sub are not guaranteed. For example, if
        permissions are misconfigured or the specified topic doesn't exist, no
        notification will be published but the state will still be stored in Cloud
        IoT Core.
        """
        pass
    @property
    def mqtt_config(self) -> global___MqttConfig:
        """The MQTT configuration for this device registry."""
        pass
    @property
    def http_config(self) -> global___HttpConfig:
        """The DeviceService (HTTP) configuration for this device registry."""
        pass
    log_level: global___LogLevel.ValueType = ...
    """**Beta Feature**

    The default logging verbosity for activity from devices in this registry.
    The verbosity level can be overridden by Device.log_level.
    """

    @property
    def credentials(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RegistryCredential]:
        """The credentials used to verify the device credentials. No more than 10
        credentials can be bound to a single registry at a time. The verification
        process occurs at the time of device creation or update. If this field is
        empty, no verification is performed. Otherwise, the credentials of a newly
        created device or added credentials of an updated device should be signed
        with one of these registry credentials.

        Note, however, that existing devices will never be affected by
        modifications to this list of credentials: after a device has been
        successfully created in a registry, it should be able to connect even if
        its registry credentials are revoked, deleted, or modified.
        """
        pass
    def __init__(self,
        *,
        id : typing.Text = ...,
        name : typing.Text = ...,
        event_notification_configs : typing.Optional[typing.Iterable[global___EventNotificationConfig]] = ...,
        state_notification_config : typing.Optional[global___StateNotificationConfig] = ...,
        mqtt_config : typing.Optional[global___MqttConfig] = ...,
        http_config : typing.Optional[global___HttpConfig] = ...,
        log_level : global___LogLevel.ValueType = ...,
        credentials : typing.Optional[typing.Iterable[global___RegistryCredential]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["http_config",b"http_config","mqtt_config",b"mqtt_config","state_notification_config",b"state_notification_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["credentials",b"credentials","event_notification_configs",b"event_notification_configs","http_config",b"http_config","id",b"id","log_level",b"log_level","mqtt_config",b"mqtt_config","name",b"name","state_notification_config",b"state_notification_config"]) -> None: ...
global___DeviceRegistry = DeviceRegistry

class MqttConfig(google.protobuf.message.Message):
    """The configuration of MQTT for a device registry."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MQTT_ENABLED_STATE_FIELD_NUMBER: builtins.int
    mqtt_enabled_state: global___MqttState.ValueType = ...
    """If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
    connections to this registry will fail.
    """

    def __init__(self,
        *,
        mqtt_enabled_state : global___MqttState.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["mqtt_enabled_state",b"mqtt_enabled_state"]) -> None: ...
global___MqttConfig = MqttConfig

class HttpConfig(google.protobuf.message.Message):
    """The configuration of the HTTP bridge for a device registry."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HTTP_ENABLED_STATE_FIELD_NUMBER: builtins.int
    http_enabled_state: global___HttpState.ValueType = ...
    """If enabled, allows devices to use DeviceService via the HTTP protocol.
    Otherwise, any requests to DeviceService will fail for this registry.
    """

    def __init__(self,
        *,
        http_enabled_state : global___HttpState.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["http_enabled_state",b"http_enabled_state"]) -> None: ...
global___HttpConfig = HttpConfig

class EventNotificationConfig(google.protobuf.message.Message):
    """The configuration for forwarding telemetry events."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUBFOLDER_MATCHES_FIELD_NUMBER: builtins.int
    PUBSUB_TOPIC_NAME_FIELD_NUMBER: builtins.int
    subfolder_matches: typing.Text = ...
    """If the subfolder name matches this string exactly, this configuration will
    be used. The string must not include the leading '/' character. If empty,
    all strings are matched. This field is used only for telemetry events;
    subfolders are not supported for state changes.
    """

    pubsub_topic_name: typing.Text = ...
    """A Cloud Pub/Sub topic name. For example,
    `projects/myProject/topics/deviceEvents`.
    """

    def __init__(self,
        *,
        subfolder_matches : typing.Text = ...,
        pubsub_topic_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pubsub_topic_name",b"pubsub_topic_name","subfolder_matches",b"subfolder_matches"]) -> None: ...
global___EventNotificationConfig = EventNotificationConfig

class StateNotificationConfig(google.protobuf.message.Message):
    """The configuration for notification of new states received from the device."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PUBSUB_TOPIC_NAME_FIELD_NUMBER: builtins.int
    pubsub_topic_name: typing.Text = ...
    """A Cloud Pub/Sub topic name. For example,
    `projects/myProject/topics/deviceEvents`.
    """

    def __init__(self,
        *,
        pubsub_topic_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pubsub_topic_name",b"pubsub_topic_name"]) -> None: ...
global___StateNotificationConfig = StateNotificationConfig

class RegistryCredential(google.protobuf.message.Message):
    """A server-stored registry credential used to validate device credentials."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PUBLIC_KEY_CERTIFICATE_FIELD_NUMBER: builtins.int
    @property
    def public_key_certificate(self) -> global___PublicKeyCertificate:
        """A public key certificate used to verify the device credentials."""
        pass
    def __init__(self,
        *,
        public_key_certificate : typing.Optional[global___PublicKeyCertificate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["credential",b"credential","public_key_certificate",b"public_key_certificate"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["credential",b"credential","public_key_certificate",b"public_key_certificate"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["credential",b"credential"]) -> typing.Optional[typing_extensions.Literal["public_key_certificate"]]: ...
global___RegistryCredential = RegistryCredential

class X509CertificateDetails(google.protobuf.message.Message):
    """Details of an X.509 certificate. For informational purposes only."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ISSUER_FIELD_NUMBER: builtins.int
    SUBJECT_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    EXPIRY_TIME_FIELD_NUMBER: builtins.int
    SIGNATURE_ALGORITHM_FIELD_NUMBER: builtins.int
    PUBLIC_KEY_TYPE_FIELD_NUMBER: builtins.int
    issuer: typing.Text = ...
    """The entity that signed the certificate."""

    subject: typing.Text = ...
    """The entity the certificate and public key belong to."""

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the certificate becomes valid."""
        pass
    @property
    def expiry_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the certificate becomes invalid."""
        pass
    signature_algorithm: typing.Text = ...
    """The algorithm used to sign the certificate."""

    public_key_type: typing.Text = ...
    """The type of public key in the certificate."""

    def __init__(self,
        *,
        issuer : typing.Text = ...,
        subject : typing.Text = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        expiry_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        signature_algorithm : typing.Text = ...,
        public_key_type : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expiry_time",b"expiry_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["expiry_time",b"expiry_time","issuer",b"issuer","public_key_type",b"public_key_type","signature_algorithm",b"signature_algorithm","start_time",b"start_time","subject",b"subject"]) -> None: ...
global___X509CertificateDetails = X509CertificateDetails

class PublicKeyCertificate(google.protobuf.message.Message):
    """A public key certificate format and data."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORMAT_FIELD_NUMBER: builtins.int
    CERTIFICATE_FIELD_NUMBER: builtins.int
    X509_DETAILS_FIELD_NUMBER: builtins.int
    format: global___PublicKeyCertificateFormat.ValueType = ...
    """The certificate format."""

    certificate: typing.Text = ...
    """The certificate data."""

    @property
    def x509_details(self) -> global___X509CertificateDetails:
        """[Output only] The certificate details. Used only for X.509 certificates."""
        pass
    def __init__(self,
        *,
        format : global___PublicKeyCertificateFormat.ValueType = ...,
        certificate : typing.Text = ...,
        x509_details : typing.Optional[global___X509CertificateDetails] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["x509_details",b"x509_details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["certificate",b"certificate","format",b"format","x509_details",b"x509_details"]) -> None: ...
global___PublicKeyCertificate = PublicKeyCertificate

class DeviceCredential(google.protobuf.message.Message):
    """A server-stored device credential used for authentication."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PUBLIC_KEY_FIELD_NUMBER: builtins.int
    EXPIRATION_TIME_FIELD_NUMBER: builtins.int
    @property
    def public_key(self) -> global___PublicKeyCredential:
        """A public key used to verify the signature of JSON Web Tokens (JWTs).
        When adding a new device credential, either via device creation or via
        modifications, this public key credential may be required to be signed by
        one of the registry level certificates. More specifically, if the
        registry contains at least one certificate, any new device credential
        must be signed by one of the registry certificates. As a result,
        when the registry contains certificates, only X.509 certificates are
        accepted as device credentials. However, if the registry does
        not contain a certificate, self-signed certificates and public keys will
        be accepted. New device credentials must be different from every
        registry-level certificate.
        """
        pass
    @property
    def expiration_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Optional] The time at which this credential becomes invalid. This
        credential will be ignored for new client authentication requests after
        this timestamp; however, it will not be automatically deleted.
        """
        pass
    def __init__(self,
        *,
        public_key : typing.Optional[global___PublicKeyCredential] = ...,
        expiration_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["credential",b"credential","expiration_time",b"expiration_time","public_key",b"public_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["credential",b"credential","expiration_time",b"expiration_time","public_key",b"public_key"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["credential",b"credential"]) -> typing.Optional[typing_extensions.Literal["public_key"]]: ...
global___DeviceCredential = DeviceCredential

class PublicKeyCredential(google.protobuf.message.Message):
    """A public key format and data."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORMAT_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    format: global___PublicKeyFormat.ValueType = ...
    """The format of the key."""

    key: typing.Text = ...
    """The key data."""

    def __init__(self,
        *,
        format : global___PublicKeyFormat.ValueType = ...,
        key : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["format",b"format","key",b"key"]) -> None: ...
global___PublicKeyCredential = PublicKeyCredential

class DeviceConfig(google.protobuf.message.Message):
    """The device configuration. Eventually delivered to devices."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VERSION_FIELD_NUMBER: builtins.int
    CLOUD_UPDATE_TIME_FIELD_NUMBER: builtins.int
    DEVICE_ACK_TIME_FIELD_NUMBER: builtins.int
    BINARY_DATA_FIELD_NUMBER: builtins.int
    version: builtins.int = ...
    """[Output only] The version of this update. The version number is assigned by
    the server, and is always greater than 0 after device creation. The
    version must be 0 on the `CreateDevice` request if a `config` is
    specified; the response of `CreateDevice` will always have a value of 1.
    """

    @property
    def cloud_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Output only] The time at which this configuration version was updated in
        Cloud IoT Core. This timestamp is set by the server.
        """
        pass
    @property
    def device_ack_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Output only] The time at which Cloud IoT Core received the
        acknowledgment from the device, indicating that the device has received
        this configuration version. If this field is not present, the device has
        not yet acknowledged that it received this version. Note that when
        the config was sent to the device, many config versions may have been
        available in Cloud IoT Core while the device was disconnected, and on
        connection, only the latest version is sent to the device. Some
        versions may never be sent to the device, and therefore are never
        acknowledged. This timestamp is set by Cloud IoT Core.
        """
        pass
    binary_data: builtins.bytes = ...
    """The device configuration data."""

    def __init__(self,
        *,
        version : builtins.int = ...,
        cloud_update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        device_ack_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        binary_data : builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cloud_update_time",b"cloud_update_time","device_ack_time",b"device_ack_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["binary_data",b"binary_data","cloud_update_time",b"cloud_update_time","device_ack_time",b"device_ack_time","version",b"version"]) -> None: ...
global___DeviceConfig = DeviceConfig

class DeviceState(google.protobuf.message.Message):
    """The device state, as reported by the device."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    BINARY_DATA_FIELD_NUMBER: builtins.int
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """[Output only] The time at which this state version was updated in Cloud
        IoT Core.
        """
        pass
    binary_data: builtins.bytes = ...
    """The device state data."""

    def __init__(self,
        *,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        binary_data : builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["binary_data",b"binary_data","update_time",b"update_time"]) -> None: ...
global___DeviceState = DeviceState
