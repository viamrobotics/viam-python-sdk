# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/recommendationengine/v1beta1/user_event_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.field_behavior_pb2
import google.api.httpbody_pb2
import google.api.resource_pb2
import google.cloud.recommendationengine.v1beta1.import_pb2
import google.cloud.recommendationengine.v1beta1.user_event_pb2
import google.longrunning.operations_pb2
import google.protobuf.timestamp_pb2
import google.type.date_pb2
import google.api.client_pb2
import google.cloud.recommendationengine.v1beta1.user_event_service_pb2


class UserEventServiceBase(abc.ABC):

    @abc.abstractmethod
    async def WriteUserEvent(self, stream: 'grpclib.server.Stream[google.cloud.recommendationengine.v1beta1.user_event_service_pb2.WriteUserEventRequest, google.cloud.recommendationengine.v1beta1.user_event_pb2.UserEvent]') -> None:
        pass

    @abc.abstractmethod
    async def CollectUserEvent(self, stream: 'grpclib.server.Stream[google.cloud.recommendationengine.v1beta1.user_event_service_pb2.CollectUserEventRequest, google.api.httpbody_pb2.HttpBody]') -> None:
        pass

    @abc.abstractmethod
    async def ListUserEvents(self, stream: 'grpclib.server.Stream[google.cloud.recommendationengine.v1beta1.user_event_service_pb2.ListUserEventsRequest, google.cloud.recommendationengine.v1beta1.user_event_service_pb2.ListUserEventsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def PurgeUserEvents(self, stream: 'grpclib.server.Stream[google.cloud.recommendationengine.v1beta1.user_event_service_pb2.PurgeUserEventsRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ImportUserEvents(self, stream: 'grpclib.server.Stream[google.cloud.recommendationengine.v1beta1.import_pb2.ImportUserEventsRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.recommendationengine.v1beta1.UserEventService/WriteUserEvent': grpclib.const.Handler(
                self.WriteUserEvent,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.recommendationengine.v1beta1.user_event_service_pb2.WriteUserEventRequest,
                google.cloud.recommendationengine.v1beta1.user_event_pb2.UserEvent,
            ),
            '/google.cloud.recommendationengine.v1beta1.UserEventService/CollectUserEvent': grpclib.const.Handler(
                self.CollectUserEvent,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.recommendationengine.v1beta1.user_event_service_pb2.CollectUserEventRequest,
                google.api.httpbody_pb2.HttpBody,
            ),
            '/google.cloud.recommendationengine.v1beta1.UserEventService/ListUserEvents': grpclib.const.Handler(
                self.ListUserEvents,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.recommendationengine.v1beta1.user_event_service_pb2.ListUserEventsRequest,
                google.cloud.recommendationengine.v1beta1.user_event_service_pb2.ListUserEventsResponse,
            ),
            '/google.cloud.recommendationengine.v1beta1.UserEventService/PurgeUserEvents': grpclib.const.Handler(
                self.PurgeUserEvents,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.recommendationengine.v1beta1.user_event_service_pb2.PurgeUserEventsRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.recommendationengine.v1beta1.UserEventService/ImportUserEvents': grpclib.const.Handler(
                self.ImportUserEvents,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.recommendationengine.v1beta1.import_pb2.ImportUserEventsRequest,
                google.longrunning.operations_pb2.Operation,
            ),
        }


class UserEventServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.WriteUserEvent = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.recommendationengine.v1beta1.UserEventService/WriteUserEvent',
            google.cloud.recommendationengine.v1beta1.user_event_service_pb2.WriteUserEventRequest,
            google.cloud.recommendationengine.v1beta1.user_event_pb2.UserEvent,
        )
        self.CollectUserEvent = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.recommendationengine.v1beta1.UserEventService/CollectUserEvent',
            google.cloud.recommendationengine.v1beta1.user_event_service_pb2.CollectUserEventRequest,
            google.api.httpbody_pb2.HttpBody,
        )
        self.ListUserEvents = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.recommendationengine.v1beta1.UserEventService/ListUserEvents',
            google.cloud.recommendationengine.v1beta1.user_event_service_pb2.ListUserEventsRequest,
            google.cloud.recommendationengine.v1beta1.user_event_service_pb2.ListUserEventsResponse,
        )
        self.PurgeUserEvents = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.recommendationengine.v1beta1.UserEventService/PurgeUserEvents',
            google.cloud.recommendationengine.v1beta1.user_event_service_pb2.PurgeUserEventsRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ImportUserEvents = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.recommendationengine.v1beta1.UserEventService/ImportUserEvents',
            google.cloud.recommendationengine.v1beta1.import_pb2.ImportUserEventsRequest,
            google.longrunning.operations_pb2.Operation,
        )
