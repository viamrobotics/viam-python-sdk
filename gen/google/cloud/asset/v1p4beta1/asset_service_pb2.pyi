"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.asset.v1p4beta1.assets_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class IamPolicyAnalysisQuery(google.protobuf.message.Message):
    """IAM policy analysis query message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ResourceSelector(google.protobuf.message.Message):
        """Specifies the resource to analyze for access policies, which may be set
        directly on the resource, or on ancestors such as organizations, folders or
        projects. At least one of [ResourceSelector][google.cloud.asset.v1p4beta1.IamPolicyAnalysisQuery.ResourceSelector], [IdentitySelector][google.cloud.asset.v1p4beta1.IamPolicyAnalysisQuery.IdentitySelector] or
        [AccessSelector][google.cloud.asset.v1p4beta1.IamPolicyAnalysisQuery.AccessSelector] must be specified in a request.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FULL_RESOURCE_NAME_FIELD_NUMBER: builtins.int
        full_resource_name: typing.Text = ...
        """Required. The [full resource
        name](https://cloud.google.com/apis/design/resource_names#full_resource_name)
        .
        """

        def __init__(self,
            *,
            full_resource_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["full_resource_name",b"full_resource_name"]) -> None: ...

    class IdentitySelector(google.protobuf.message.Message):
        """Specifies an identity for which to determine resource access, based on
        roles assigned either directly to them or to the groups they belong to,
        directly or indirectly.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        IDENTITY_FIELD_NUMBER: builtins.int
        identity: typing.Text = ...
        """Required. The identity appear in the form of members in
        [IAM policy
        binding](https://cloud.google.com/iam/reference/rest/v1/Binding).
        """

        def __init__(self,
            *,
            identity : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["identity",b"identity"]) -> None: ...

    class AccessSelector(google.protobuf.message.Message):
        """Specifies roles and/or permissions to analyze, to determine both the
        identities possessing them and the resources they control. If multiple
        values are specified, results will include identities and resources
        matching any of them.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ROLES_FIELD_NUMBER: builtins.int
        PERMISSIONS_FIELD_NUMBER: builtins.int
        @property
        def roles(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Optional. The roles to appear in result."""
            pass
        @property
        def permissions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Optional. The permissions to appear in result."""
            pass
        def __init__(self,
            *,
            roles : typing.Optional[typing.Iterable[typing.Text]] = ...,
            permissions : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["permissions",b"permissions","roles",b"roles"]) -> None: ...

    PARENT_FIELD_NUMBER: builtins.int
    RESOURCE_SELECTOR_FIELD_NUMBER: builtins.int
    IDENTITY_SELECTOR_FIELD_NUMBER: builtins.int
    ACCESS_SELECTOR_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The relative name of the root asset. Only resources and IAM policies within
    the parent will be analyzed. This can only be an organization number (such
    as "organizations/123") or a folder number (such as "folders/123").
    """

    @property
    def resource_selector(self) -> global___IamPolicyAnalysisQuery.ResourceSelector:
        """Optional. Specifies a resource for analysis. Leaving it empty means ANY."""
        pass
    @property
    def identity_selector(self) -> global___IamPolicyAnalysisQuery.IdentitySelector:
        """Optional. Specifies an identity for analysis. Leaving it empty means ANY."""
        pass
    @property
    def access_selector(self) -> global___IamPolicyAnalysisQuery.AccessSelector:
        """Optional. Specifies roles or permissions for analysis. Leaving it empty
        means ANY.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        resource_selector : typing.Optional[global___IamPolicyAnalysisQuery.ResourceSelector] = ...,
        identity_selector : typing.Optional[global___IamPolicyAnalysisQuery.IdentitySelector] = ...,
        access_selector : typing.Optional[global___IamPolicyAnalysisQuery.AccessSelector] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["access_selector",b"access_selector","identity_selector",b"identity_selector","resource_selector",b"resource_selector"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_selector",b"access_selector","identity_selector",b"identity_selector","parent",b"parent","resource_selector",b"resource_selector"]) -> None: ...
global___IamPolicyAnalysisQuery = IamPolicyAnalysisQuery

class AnalyzeIamPolicyRequest(google.protobuf.message.Message):
    """A request message for [AssetService.AnalyzeIamPolicy][google.cloud.asset.v1p4beta1.AssetService.AnalyzeIamPolicy]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Options(google.protobuf.message.Message):
        """Contains request options."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        EXPAND_GROUPS_FIELD_NUMBER: builtins.int
        EXPAND_ROLES_FIELD_NUMBER: builtins.int
        EXPAND_RESOURCES_FIELD_NUMBER: builtins.int
        OUTPUT_RESOURCE_EDGES_FIELD_NUMBER: builtins.int
        OUTPUT_GROUP_EDGES_FIELD_NUMBER: builtins.int
        ANALYZE_SERVICE_ACCOUNT_IMPERSONATION_FIELD_NUMBER: builtins.int
        EXECUTION_TIMEOUT_FIELD_NUMBER: builtins.int
        expand_groups: builtins.bool = ...
        """Optional. If true, the identities section of the result will expand any
        Google groups appearing in an IAM policy binding.

        If [identity_selector][] is specified, the identity in the result will
        be determined by the selector, and this flag will have no effect.

        Default is false.
        """

        expand_roles: builtins.bool = ...
        """Optional. If true, the access section of result will expand any roles
        appearing in IAM policy bindings to include their permissions.

        If [access_selector][] is specified, the access section of the result
        will be determined by the selector, and this flag will have no effect.

        Default is false.
        """

        expand_resources: builtins.bool = ...
        """Optional. If true, the resource section of the result will expand any
        resource attached to an IAM policy to include resources lower in the
        resource hierarchy.

        For example, if the request analyzes for which resources user A has
        permission P, and the results include an IAM policy with P on a GCP
        folder, the results will also include resources in that folder with
        permission P.

        If [resource_selector][] is specified, the resource section of the result
        will be determined by the selector, and this flag will have no effect.
        Default is false.
        """

        output_resource_edges: builtins.bool = ...
        """Optional. If true, the result will output resource edges, starting
        from the policy attached resource, to any expanded resources.
        Default is false.
        """

        output_group_edges: builtins.bool = ...
        """Optional. If true, the result will output group identity edges, starting
        from the binding's group members, to any expanded identities.
        Default is false.
        """

        analyze_service_account_impersonation: builtins.bool = ...
        """Optional. If true, the response will include access analysis from identities to
        resources via service account impersonation. This is a very expensive
        operation, because many derived queries will be executed. We highly
        recommend you use ExportIamPolicyAnalysis rpc instead.

        For example, if the request analyzes for which resources user A has
        permission P, and there's an IAM policy states user A has
        iam.serviceAccounts.getAccessToken permission to a service account SA,
        and there's another IAM policy states service account SA has permission P
        to a GCP folder F, then user A potentially has access to the GCP folder
        F. And those advanced analysis results will be included in
        [AnalyzeIamPolicyResponse.service_account_impersonation_analysis][google.cloud.asset.v1p4beta1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis].

        Another example, if the request analyzes for who has
        permission P to a GCP folder F, and there's an IAM policy states user A
        has iam.serviceAccounts.actAs permission to a service account SA, and
        there's another IAM policy states service account SA has permission P to
        the GCP folder F, then user A potentially has access to the GCP folder
        F. And those advanced analysis results will be included in
        [AnalyzeIamPolicyResponse.service_account_impersonation_analysis][google.cloud.asset.v1p4beta1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis].

        Default is false.
        """

        @property
        def execution_timeout(self) -> google.protobuf.duration_pb2.Duration:
            """Optional. Amount of time executable has to complete.  See JSON representation of
            [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json).

            If this field is set with a value less than the RPC deadline, and the
            execution of your query hasn't finished in the specified
            execution timeout,  you will get a response with partial result.
            Otherwise, your query's execution will continue until the RPC deadline.
            If it's not finished until then, you will get a  DEADLINE_EXCEEDED error.

            Default is empty.
            """
            pass
        def __init__(self,
            *,
            expand_groups : builtins.bool = ...,
            expand_roles : builtins.bool = ...,
            expand_resources : builtins.bool = ...,
            output_resource_edges : builtins.bool = ...,
            output_group_edges : builtins.bool = ...,
            analyze_service_account_impersonation : builtins.bool = ...,
            execution_timeout : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["execution_timeout",b"execution_timeout"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["analyze_service_account_impersonation",b"analyze_service_account_impersonation","execution_timeout",b"execution_timeout","expand_groups",b"expand_groups","expand_resources",b"expand_resources","expand_roles",b"expand_roles","output_group_edges",b"output_group_edges","output_resource_edges",b"output_resource_edges"]) -> None: ...

    ANALYSIS_QUERY_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    @property
    def analysis_query(self) -> global___IamPolicyAnalysisQuery:
        """Required. The request query."""
        pass
    @property
    def options(self) -> global___AnalyzeIamPolicyRequest.Options:
        """Optional. The request options."""
        pass
    def __init__(self,
        *,
        analysis_query : typing.Optional[global___IamPolicyAnalysisQuery] = ...,
        options : typing.Optional[global___AnalyzeIamPolicyRequest.Options] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["analysis_query",b"analysis_query","options",b"options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["analysis_query",b"analysis_query","options",b"options"]) -> None: ...
global___AnalyzeIamPolicyRequest = AnalyzeIamPolicyRequest

class AnalyzeIamPolicyResponse(google.protobuf.message.Message):
    """A response message for [AssetService.AnalyzeIamPolicy][google.cloud.asset.v1p4beta1.AssetService.AnalyzeIamPolicy]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class IamPolicyAnalysis(google.protobuf.message.Message):
        """An analysis message to group the query and results."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ANALYSIS_QUERY_FIELD_NUMBER: builtins.int
        ANALYSIS_RESULTS_FIELD_NUMBER: builtins.int
        FULLY_EXPLORED_FIELD_NUMBER: builtins.int
        @property
        def analysis_query(self) -> global___IamPolicyAnalysisQuery:
            """The analysis query."""
            pass
        @property
        def analysis_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.asset.v1p4beta1.assets_pb2.IamPolicyAnalysisResult]:
            """A list of [IamPolicyAnalysisResult][google.cloud.asset.v1p4beta1.IamPolicyAnalysisResult] that matches the analysis query, or
            empty if no result is found.
            """
            pass
        fully_explored: builtins.bool = ...
        """Represents whether all entries in the [analysis_results][google.cloud.asset.v1p4beta1.AnalyzeIamPolicyResponse.IamPolicyAnalysis.analysis_results] have been
        fully explored to answer the query.
        """

        def __init__(self,
            *,
            analysis_query : typing.Optional[global___IamPolicyAnalysisQuery] = ...,
            analysis_results : typing.Optional[typing.Iterable[google.cloud.asset.v1p4beta1.assets_pb2.IamPolicyAnalysisResult]] = ...,
            fully_explored : builtins.bool = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["analysis_query",b"analysis_query"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["analysis_query",b"analysis_query","analysis_results",b"analysis_results","fully_explored",b"fully_explored"]) -> None: ...

    MAIN_ANALYSIS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_IMPERSONATION_ANALYSIS_FIELD_NUMBER: builtins.int
    FULLY_EXPLORED_FIELD_NUMBER: builtins.int
    NON_CRITICAL_ERRORS_FIELD_NUMBER: builtins.int
    @property
    def main_analysis(self) -> global___AnalyzeIamPolicyResponse.IamPolicyAnalysis:
        """The main analysis that matches the original request."""
        pass
    @property
    def service_account_impersonation_analysis(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AnalyzeIamPolicyResponse.IamPolicyAnalysis]:
        """The service account impersonation analysis if
        [AnalyzeIamPolicyRequest.analyze_service_account_impersonation][] is
        enabled.
        """
        pass
    fully_explored: builtins.bool = ...
    """Represents whether all entries in the [main_analysis][google.cloud.asset.v1p4beta1.AnalyzeIamPolicyResponse.main_analysis] and
    [service_account_impersonation_analysis][google.cloud.asset.v1p4beta1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis] have been fully explored to
    answer the query in the request.
    """

    @property
    def non_critical_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.asset.v1p4beta1.assets_pb2.IamPolicyAnalysisResult.AnalysisState]:
        """A list of non-critical errors happened during the request handling to
        explain why `fully_explored` is false, or empty if no error happened.
        """
        pass
    def __init__(self,
        *,
        main_analysis : typing.Optional[global___AnalyzeIamPolicyResponse.IamPolicyAnalysis] = ...,
        service_account_impersonation_analysis : typing.Optional[typing.Iterable[global___AnalyzeIamPolicyResponse.IamPolicyAnalysis]] = ...,
        fully_explored : builtins.bool = ...,
        non_critical_errors : typing.Optional[typing.Iterable[google.cloud.asset.v1p4beta1.assets_pb2.IamPolicyAnalysisResult.AnalysisState]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["main_analysis",b"main_analysis"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fully_explored",b"fully_explored","main_analysis",b"main_analysis","non_critical_errors",b"non_critical_errors","service_account_impersonation_analysis",b"service_account_impersonation_analysis"]) -> None: ...
global___AnalyzeIamPolicyResponse = AnalyzeIamPolicyResponse

class IamPolicyAnalysisOutputConfig(google.protobuf.message.Message):
    """Output configuration for export IAM policy analysis destination."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class GcsDestination(google.protobuf.message.Message):
        """A Cloud Storage location."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        URI_FIELD_NUMBER: builtins.int
        uri: typing.Text = ...
        """Required. The uri of the Cloud Storage object. It's the same uri that is used by
        gsutil. For example: "gs://bucket_name/object_name". See [Viewing and
        Editing Object
        Metadata](https://cloud.google.com/storage/docs/viewing-editing-metadata)
        for more information.
        """

        def __init__(self,
            *,
            uri : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...

    GCS_DESTINATION_FIELD_NUMBER: builtins.int
    @property
    def gcs_destination(self) -> global___IamPolicyAnalysisOutputConfig.GcsDestination:
        """Destination on Cloud Storage."""
        pass
    def __init__(self,
        *,
        gcs_destination : typing.Optional[global___IamPolicyAnalysisOutputConfig.GcsDestination] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination",b"destination","gcs_destination",b"gcs_destination"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["destination",b"destination","gcs_destination",b"gcs_destination"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["destination",b"destination"]) -> typing.Optional[typing_extensions.Literal["gcs_destination"]]: ...
global___IamPolicyAnalysisOutputConfig = IamPolicyAnalysisOutputConfig

class ExportIamPolicyAnalysisRequest(google.protobuf.message.Message):
    """A request message for [AssetService.ExportIamPolicyAnalysis][google.cloud.asset.v1p4beta1.AssetService.ExportIamPolicyAnalysis]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Options(google.protobuf.message.Message):
        """Contains request options."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        EXPAND_GROUPS_FIELD_NUMBER: builtins.int
        EXPAND_ROLES_FIELD_NUMBER: builtins.int
        EXPAND_RESOURCES_FIELD_NUMBER: builtins.int
        OUTPUT_RESOURCE_EDGES_FIELD_NUMBER: builtins.int
        OUTPUT_GROUP_EDGES_FIELD_NUMBER: builtins.int
        ANALYZE_SERVICE_ACCOUNT_IMPERSONATION_FIELD_NUMBER: builtins.int
        expand_groups: builtins.bool = ...
        """Optional. If true, the identities section of the result will expand any
        Google groups appearing in an IAM policy binding.

        If [identity_selector][] is specified, the identity in the result will
        be determined by the selector, and this flag will have no effect.

        Default is false.
        """

        expand_roles: builtins.bool = ...
        """Optional. If true, the access section of result will expand any roles
        appearing in IAM policy bindings to include their permissions.

        If [access_selector][] is specified, the access section of the result
        will be determined by the selector, and this flag will have no effect.

        Default is false.
        """

        expand_resources: builtins.bool = ...
        """Optional. If true, the resource section of the result will expand any
        resource attached to an IAM policy to include resources lower in the
        resource hierarchy.

        For example, if the request analyzes for which resources user A has
        permission P, and the results include an IAM policy with P on a GCP
        folder, the results will also include resources in that folder with
        permission P.

        If [resource_selector][] is specified, the resource section of the result
        will be determined by the selector, and this flag will have no effect.
        Default is false.
        """

        output_resource_edges: builtins.bool = ...
        """Optional. If true, the result will output resource edges, starting
        from the policy attached resource, to any expanded resources.
        Default is false.
        """

        output_group_edges: builtins.bool = ...
        """Optional. If true, the result will output group identity edges, starting
        from the binding's group members, to any expanded identities.
        Default is false.
        """

        analyze_service_account_impersonation: builtins.bool = ...
        """Optional. If true, the response will include access analysis from identities to
        resources via service account impersonation. This is a very expensive
        operation, because many derived queries will be executed.

        For example, if the request analyzes for which resources user A has
        permission P, and there's an IAM policy states user A has
        iam.serviceAccounts.getAccessToken permission to a service account SA,
        and there's another IAM policy states service account SA has permission P
        to a GCP folder F, then user A potentially has access to the GCP folder
        F. And those advanced analysis results will be included in
        [AnalyzeIamPolicyResponse.service_account_impersonation_analysis][google.cloud.asset.v1p4beta1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis].

        Another example, if the request analyzes for who has
        permission P to a GCP folder F, and there's an IAM policy states user A
        has iam.serviceAccounts.actAs permission to a service account SA, and
        there's another IAM policy states service account SA has permission P to
        the GCP folder F, then user A potentially has access to the GCP folder
        F. And those advanced analysis results will be included in
        [AnalyzeIamPolicyResponse.service_account_impersonation_analysis][google.cloud.asset.v1p4beta1.AnalyzeIamPolicyResponse.service_account_impersonation_analysis].

        Default is false.
        """

        def __init__(self,
            *,
            expand_groups : builtins.bool = ...,
            expand_roles : builtins.bool = ...,
            expand_resources : builtins.bool = ...,
            output_resource_edges : builtins.bool = ...,
            output_group_edges : builtins.bool = ...,
            analyze_service_account_impersonation : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["analyze_service_account_impersonation",b"analyze_service_account_impersonation","expand_groups",b"expand_groups","expand_resources",b"expand_resources","expand_roles",b"expand_roles","output_group_edges",b"output_group_edges","output_resource_edges",b"output_resource_edges"]) -> None: ...

    ANALYSIS_QUERY_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    OUTPUT_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def analysis_query(self) -> global___IamPolicyAnalysisQuery:
        """Required. The request query."""
        pass
    @property
    def options(self) -> global___ExportIamPolicyAnalysisRequest.Options:
        """Optional. The request options."""
        pass
    @property
    def output_config(self) -> global___IamPolicyAnalysisOutputConfig:
        """Required. Output configuration indicating where the results will be output to."""
        pass
    def __init__(self,
        *,
        analysis_query : typing.Optional[global___IamPolicyAnalysisQuery] = ...,
        options : typing.Optional[global___ExportIamPolicyAnalysisRequest.Options] = ...,
        output_config : typing.Optional[global___IamPolicyAnalysisOutputConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["analysis_query",b"analysis_query","options",b"options","output_config",b"output_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["analysis_query",b"analysis_query","options",b"options","output_config",b"output_config"]) -> None: ...
global___ExportIamPolicyAnalysisRequest = ExportIamPolicyAnalysisRequest

class ExportIamPolicyAnalysisResponse(google.protobuf.message.Message):
    """The export IAM policy analysis response. This message is returned by the
    [google.longrunning.Operations.GetOperation][] method in the returned
    [google.longrunning.Operation.response][] field.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OUTPUT_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def output_config(self) -> global___IamPolicyAnalysisOutputConfig:
        """Output configuration indicating where the results were output to."""
        pass
    def __init__(self,
        *,
        output_config : typing.Optional[global___IamPolicyAnalysisOutputConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["output_config",b"output_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["output_config",b"output_config"]) -> None: ...
global___ExportIamPolicyAnalysisResponse = ExportIamPolicyAnalysisResponse
