# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/lifesciences/v2beta/workflows.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.field_behavior_pb2
import google.longrunning.operations_pb2
import google.protobuf.duration_pb2
import google.protobuf.timestamp_pb2
import google.rpc.code_pb2
import google.api.client_pb2
import google.cloud.lifesciences.v2beta.workflows_pb2


class WorkflowsServiceV2BetaBase(abc.ABC):

    @abc.abstractmethod
    async def RunPipeline(self, stream: 'grpclib.server.Stream[google.cloud.lifesciences.v2beta.workflows_pb2.RunPipelineRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.lifesciences.v2beta.WorkflowsServiceV2Beta/RunPipeline': grpclib.const.Handler(
                self.RunPipeline,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.lifesciences.v2beta.workflows_pb2.RunPipelineRequest,
                google.longrunning.operations_pb2.Operation,
            ),
        }


class WorkflowsServiceV2BetaStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.RunPipeline = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.lifesciences.v2beta.WorkflowsServiceV2Beta/RunPipeline',
            google.cloud.lifesciences.v2beta.workflows_pb2.RunPipelineRequest,
            google.longrunning.operations_pb2.Operation,
        )
