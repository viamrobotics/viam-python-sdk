"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class DiscoveryEvent(google.protobuf.message.Message):
    """The payload associated with Discovery data processing."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EventType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EventTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EventType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        EVENT_TYPE_UNSPECIFIED: DiscoveryEvent.EventType.ValueType = ...  # 0
        """An unspecified event type."""

        CONFIG: DiscoveryEvent.EventType.ValueType = ...  # 1
        """An event representing discovery configuration in effect."""

        ENTITY_CREATED: DiscoveryEvent.EventType.ValueType = ...  # 2
        """An event representing a metadata entity being created."""

        ENTITY_UPDATED: DiscoveryEvent.EventType.ValueType = ...  # 3
        """An event representing a metadata entity being updated."""

        ENTITY_DELETED: DiscoveryEvent.EventType.ValueType = ...  # 4
        """An event representing a metadata entity being deleted."""

        PARTITION_CREATED: DiscoveryEvent.EventType.ValueType = ...  # 5
        """An event representing a partition being created."""

        PARTITION_UPDATED: DiscoveryEvent.EventType.ValueType = ...  # 6
        """An event representing a partition being updated."""

        PARTITION_DELETED: DiscoveryEvent.EventType.ValueType = ...  # 7
        """An event representing a partition being deleted."""

    class EventType(_EventType, metaclass=_EventTypeEnumTypeWrapper):
        """The type of the event."""
        pass

    EVENT_TYPE_UNSPECIFIED: DiscoveryEvent.EventType.ValueType = ...  # 0
    """An unspecified event type."""

    CONFIG: DiscoveryEvent.EventType.ValueType = ...  # 1
    """An event representing discovery configuration in effect."""

    ENTITY_CREATED: DiscoveryEvent.EventType.ValueType = ...  # 2
    """An event representing a metadata entity being created."""

    ENTITY_UPDATED: DiscoveryEvent.EventType.ValueType = ...  # 3
    """An event representing a metadata entity being updated."""

    ENTITY_DELETED: DiscoveryEvent.EventType.ValueType = ...  # 4
    """An event representing a metadata entity being deleted."""

    PARTITION_CREATED: DiscoveryEvent.EventType.ValueType = ...  # 5
    """An event representing a partition being created."""

    PARTITION_UPDATED: DiscoveryEvent.EventType.ValueType = ...  # 6
    """An event representing a partition being updated."""

    PARTITION_DELETED: DiscoveryEvent.EventType.ValueType = ...  # 7
    """An event representing a partition being deleted."""


    class _EntityType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EntityTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EntityType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ENTITY_TYPE_UNSPECIFIED: DiscoveryEvent.EntityType.ValueType = ...  # 0
        """An unspecified event type."""

        TABLE: DiscoveryEvent.EntityType.ValueType = ...  # 1
        """Entities representing structured data."""

        FILESET: DiscoveryEvent.EntityType.ValueType = ...  # 2
        """Entities representing unstructured data."""

    class EntityType(_EntityType, metaclass=_EntityTypeEnumTypeWrapper):
        """The type of the entity."""
        pass

    ENTITY_TYPE_UNSPECIFIED: DiscoveryEvent.EntityType.ValueType = ...  # 0
    """An unspecified event type."""

    TABLE: DiscoveryEvent.EntityType.ValueType = ...  # 1
    """Entities representing structured data."""

    FILESET: DiscoveryEvent.EntityType.ValueType = ...  # 2
    """Entities representing unstructured data."""


    class ConfigDetails(google.protobuf.message.Message):
        """Details about configuration events."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class ParametersEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text = ...
            value: typing.Text = ...
            def __init__(self,
                *,
                key : typing.Text = ...,
                value : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        PARAMETERS_FIELD_NUMBER: builtins.int
        @property
        def parameters(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
            """A list of discovery configuration parameters in effect.
            The keys are the field paths within DiscoverySpec.
            Eg. includePatterns, excludePatterns, csvOptions.disableTypeInference,
            etc.
            """
            pass
        def __init__(self,
            *,
            parameters : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["parameters",b"parameters"]) -> None: ...

    class EntityDetails(google.protobuf.message.Message):
        """Details about the entity."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ENTITY_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        entity: typing.Text = ...
        """The name of the entity resource.
        The name is the fully-qualified resource name.
        """

        type: global___DiscoveryEvent.EntityType.ValueType = ...
        """The type of the entity resource."""

        def __init__(self,
            *,
            entity : typing.Text = ...,
            type : global___DiscoveryEvent.EntityType.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["entity",b"entity","type",b"type"]) -> None: ...

    class PartitionDetails(google.protobuf.message.Message):
        """Details about the partition."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PARTITION_FIELD_NUMBER: builtins.int
        ENTITY_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        partition: typing.Text = ...
        """The name to the partition resource.
        The name is the fully-qualified resource name.
        """

        entity: typing.Text = ...
        """The name to the containing entity resource.
        The name is the fully-qualified resource name.
        """

        type: global___DiscoveryEvent.EntityType.ValueType = ...
        """The type of the containing entity resource."""

        def __init__(self,
            *,
            partition : typing.Text = ...,
            entity : typing.Text = ...,
            type : global___DiscoveryEvent.EntityType.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["entity",b"entity","partition",b"partition","type",b"type"]) -> None: ...

    class ActionDetails(google.protobuf.message.Message):
        """Details about the action."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TYPE_FIELD_NUMBER: builtins.int
        type: typing.Text = ...
        """The type of action.
        Eg. IncompatibleDataSchema, InvalidDataFormat
        """

        def __init__(self,
            *,
            type : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...

    MESSAGE_FIELD_NUMBER: builtins.int
    LAKE_ID_FIELD_NUMBER: builtins.int
    ZONE_ID_FIELD_NUMBER: builtins.int
    ASSET_ID_FIELD_NUMBER: builtins.int
    DATA_LOCATION_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    ENTITY_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    message: typing.Text = ...
    """The log message."""

    lake_id: typing.Text = ...
    """The id of the associated lake."""

    zone_id: typing.Text = ...
    """The id of the associated zone."""

    asset_id: typing.Text = ...
    """The id of the associated asset."""

    data_location: typing.Text = ...
    """The data location associated with the event."""

    type: global___DiscoveryEvent.EventType.ValueType = ...
    """The type of the event being logged."""

    @property
    def config(self) -> global___DiscoveryEvent.ConfigDetails:
        """Details about discovery configuration in effect."""
        pass
    @property
    def entity(self) -> global___DiscoveryEvent.EntityDetails:
        """Details about the entity associated with the event."""
        pass
    @property
    def partition(self) -> global___DiscoveryEvent.PartitionDetails:
        """Details about the partition associated with the event."""
        pass
    @property
    def action(self) -> global___DiscoveryEvent.ActionDetails:
        """Details about the action associated with the event."""
        pass
    def __init__(self,
        *,
        message : typing.Text = ...,
        lake_id : typing.Text = ...,
        zone_id : typing.Text = ...,
        asset_id : typing.Text = ...,
        data_location : typing.Text = ...,
        type : global___DiscoveryEvent.EventType.ValueType = ...,
        config : typing.Optional[global___DiscoveryEvent.ConfigDetails] = ...,
        entity : typing.Optional[global___DiscoveryEvent.EntityDetails] = ...,
        partition : typing.Optional[global___DiscoveryEvent.PartitionDetails] = ...,
        action : typing.Optional[global___DiscoveryEvent.ActionDetails] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action",b"action","config",b"config","details",b"details","entity",b"entity","partition",b"partition"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","asset_id",b"asset_id","config",b"config","data_location",b"data_location","details",b"details","entity",b"entity","lake_id",b"lake_id","message",b"message","partition",b"partition","type",b"type","zone_id",b"zone_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["details",b"details"]) -> typing.Optional[typing_extensions.Literal["config","entity","partition","action"]]: ...
global___DiscoveryEvent = DiscoveryEvent

class JobEvent(google.protobuf.message.Message):
    """The payload associated with Job logs that contains events describing jobs
    that have run within a Lake.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TYPE_UNSPECIFIED: JobEvent.Type.ValueType = ...  # 0
        """Unspecified job type."""

        SPARK: JobEvent.Type.ValueType = ...  # 1
        """Spark jobs."""

        NOTEBOOK: JobEvent.Type.ValueType = ...  # 2
        """Notebook jobs."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The type of the job."""
        pass

    TYPE_UNSPECIFIED: JobEvent.Type.ValueType = ...  # 0
    """Unspecified job type."""

    SPARK: JobEvent.Type.ValueType = ...  # 1
    """Spark jobs."""

    NOTEBOOK: JobEvent.Type.ValueType = ...  # 2
    """Notebook jobs."""


    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: JobEvent.State.ValueType = ...  # 0
        """Unspecified job state."""

        SUCCEEDED: JobEvent.State.ValueType = ...  # 1
        """Job successfully completed."""

        FAILED: JobEvent.State.ValueType = ...  # 2
        """Job was unsuccessful."""

        CANCELLED: JobEvent.State.ValueType = ...  # 3
        """Job was cancelled by the user."""

        ABORTED: JobEvent.State.ValueType = ...  # 4
        """Job was cancelled or aborted via the service executing the job."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The completion status of the job."""
        pass

    STATE_UNSPECIFIED: JobEvent.State.ValueType = ...  # 0
    """Unspecified job state."""

    SUCCEEDED: JobEvent.State.ValueType = ...  # 1
    """Job successfully completed."""

    FAILED: JobEvent.State.ValueType = ...  # 2
    """Job was unsuccessful."""

    CANCELLED: JobEvent.State.ValueType = ...  # 3
    """Job was cancelled by the user."""

    ABORTED: JobEvent.State.ValueType = ...  # 4
    """Job was cancelled or aborted via the service executing the job."""


    class _Service:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ServiceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Service.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SERVICE_UNSPECIFIED: JobEvent.Service.ValueType = ...  # 0
        """Unspecified service."""

        DATAPROC: JobEvent.Service.ValueType = ...  # 1
        """Cloud Dataproc."""

    class Service(_Service, metaclass=_ServiceEnumTypeWrapper):
        """The service used to execute the job."""
        pass

    SERVICE_UNSPECIFIED: JobEvent.Service.ValueType = ...  # 0
    """Unspecified service."""

    DATAPROC: JobEvent.Service.ValueType = ...  # 1
    """Cloud Dataproc."""


    MESSAGE_FIELD_NUMBER: builtins.int
    JOB_ID_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    RETRIES_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    SERVICE_JOB_FIELD_NUMBER: builtins.int
    message: typing.Text = ...
    """The log message."""

    job_id: typing.Text = ...
    """The unique id identifying the job."""

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the job started running."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the job ended running."""
        pass
    state: global___JobEvent.State.ValueType = ...
    """The job state on completion."""

    retries: builtins.int = ...
    """The number of retries."""

    type: global___JobEvent.Type.ValueType = ...
    """The type of the job."""

    service: global___JobEvent.Service.ValueType = ...
    """The service used to execute the job."""

    service_job: typing.Text = ...
    """The reference to the job within the service."""

    def __init__(self,
        *,
        message : typing.Text = ...,
        job_id : typing.Text = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___JobEvent.State.ValueType = ...,
        retries : builtins.int = ...,
        type : global___JobEvent.Type.ValueType = ...,
        service : global___JobEvent.Service.ValueType = ...,
        service_job : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time",b"end_time","job_id",b"job_id","message",b"message","retries",b"retries","service",b"service","service_job",b"service_job","start_time",b"start_time","state",b"state","type",b"type"]) -> None: ...
global___JobEvent = JobEvent

class SessionEvent(google.protobuf.message.Message):
    """These messages contain information about sessions within an environment.
    The monitored resource is 'Environment'.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EventType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EventTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EventType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        EVENT_TYPE_UNSPECIFIED: SessionEvent.EventType.ValueType = ...  # 0
        """An unspecified event type."""

        START: SessionEvent.EventType.ValueType = ...  # 1
        """Event for start of a session."""

        STOP: SessionEvent.EventType.ValueType = ...  # 2
        """Event for stop of a session."""

        QUERY: SessionEvent.EventType.ValueType = ...  # 3
        """Query events in the session."""

    class EventType(_EventType, metaclass=_EventTypeEnumTypeWrapper):
        """The type of the event."""
        pass

    EVENT_TYPE_UNSPECIFIED: SessionEvent.EventType.ValueType = ...  # 0
    """An unspecified event type."""

    START: SessionEvent.EventType.ValueType = ...  # 1
    """Event for start of a session."""

    STOP: SessionEvent.EventType.ValueType = ...  # 2
    """Event for stop of a session."""

    QUERY: SessionEvent.EventType.ValueType = ...  # 3
    """Query events in the session."""


    class QueryDetail(google.protobuf.message.Message):
        """Execution details of the query."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Engine:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _EngineEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Engine.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            ENGINE_UNSPECIFIED: SessionEvent.QueryDetail.Engine.ValueType = ...  # 0
            """An unspecified Engine type."""

            SPARK_SQL: SessionEvent.QueryDetail.Engine.ValueType = ...  # 1
            """Spark-sql engine is specified in Query."""

            BIGQUERY: SessionEvent.QueryDetail.Engine.ValueType = ...  # 2
            """BigQuery engine is specified in Query."""

        class Engine(_Engine, metaclass=_EngineEnumTypeWrapper):
            """Query Execution engine."""
            pass

        ENGINE_UNSPECIFIED: SessionEvent.QueryDetail.Engine.ValueType = ...  # 0
        """An unspecified Engine type."""

        SPARK_SQL: SessionEvent.QueryDetail.Engine.ValueType = ...  # 1
        """Spark-sql engine is specified in Query."""

        BIGQUERY: SessionEvent.QueryDetail.Engine.ValueType = ...  # 2
        """BigQuery engine is specified in Query."""


        QUERY_ID_FIELD_NUMBER: builtins.int
        QUERY_TEXT_FIELD_NUMBER: builtins.int
        ENGINE_FIELD_NUMBER: builtins.int
        DURATION_FIELD_NUMBER: builtins.int
        RESULT_SIZE_BYTES_FIELD_NUMBER: builtins.int
        DATA_PROCESSED_BYTES_FIELD_NUMBER: builtins.int
        query_id: typing.Text = ...
        """The unique Query id identifying the query."""

        query_text: typing.Text = ...
        """The query text executed."""

        engine: global___SessionEvent.QueryDetail.Engine.ValueType = ...
        """Query Execution engine."""

        @property
        def duration(self) -> google.protobuf.duration_pb2.Duration:
            """Time taken for execution of the query."""
            pass
        result_size_bytes: builtins.int = ...
        """The size of results the query produced."""

        data_processed_bytes: builtins.int = ...
        """The data processed by the query."""

        def __init__(self,
            *,
            query_id : typing.Text = ...,
            query_text : typing.Text = ...,
            engine : global___SessionEvent.QueryDetail.Engine.ValueType = ...,
            duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            result_size_bytes : builtins.int = ...,
            data_processed_bytes : builtins.int = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["duration",b"duration"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["data_processed_bytes",b"data_processed_bytes","duration",b"duration","engine",b"engine","query_id",b"query_id","query_text",b"query_text","result_size_bytes",b"result_size_bytes"]) -> None: ...

    MESSAGE_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    message: typing.Text = ...
    """The log message."""

    user_id: typing.Text = ...
    """The information about the user that created the session."""

    session_id: typing.Text = ...
    """Unique identifier for the session."""

    type: global___SessionEvent.EventType.ValueType = ...
    """The type of the event."""

    @property
    def query(self) -> global___SessionEvent.QueryDetail:
        """The execution details of the query."""
        pass
    def __init__(self,
        *,
        message : typing.Text = ...,
        user_id : typing.Text = ...,
        session_id : typing.Text = ...,
        type : global___SessionEvent.EventType.ValueType = ...,
        query : typing.Optional[global___SessionEvent.QueryDetail] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["detail",b"detail","query",b"query"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["detail",b"detail","message",b"message","query",b"query","session_id",b"session_id","type",b"type","user_id",b"user_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["detail",b"detail"]) -> typing.Optional[typing_extensions.Literal["query"]]: ...
global___SessionEvent = SessionEvent
