"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.dataqna.v1alpha.annotated_string_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _SuggestionType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SuggestionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SuggestionType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SUGGESTION_TYPE_UNSPECIFIED: SuggestionType.ValueType = ...  # 0
    """No suggestiont type is specified."""

    ENTITY: SuggestionType.ValueType = ...  # 1
    """Entity suggestion type. Suggestions are for single entities."""

    TEMPLATE: SuggestionType.ValueType = ...  # 2
    """Template suggestion type. Suggestions are for full sentences."""

class SuggestionType(_SuggestionType, metaclass=_SuggestionTypeEnumTypeWrapper):
    """The type of suggestion."""
    pass

SUGGESTION_TYPE_UNSPECIFIED: SuggestionType.ValueType = ...  # 0
"""No suggestiont type is specified."""

ENTITY: SuggestionType.ValueType = ...  # 1
"""Entity suggestion type. Suggestions are for single entities."""

TEMPLATE: SuggestionType.ValueType = ...  # 2
"""Template suggestion type. Suggestions are for full sentences."""

global___SuggestionType = SuggestionType


class SuggestQueriesRequest(google.protobuf.message.Message):
    """Request for query suggestions."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    SCOPES_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    SUGGESTION_TYPES_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent of the suggestion query is the resource denoting the project and
    location.
    """

    @property
    def scopes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The scopes to which this search is restricted. The only supported scope
        pattern is
        `//bigquery.googleapis.com/projects/{GCP-PROJECT-ID}/datasets/{DATASET-ID}/tables/{TABLE-ID}`.
        """
        pass
    query: typing.Text = ...
    """User query for which to generate suggestions. If the query is empty, zero
    state suggestions are returned. This allows UIs to display suggestions
    right away, helping the user to get a sense of what a query might look
    like.
    """

    @property
    def suggestion_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___SuggestionType.ValueType]:
        """The requested suggestion type. Multiple suggestion types can be
        requested, but there is no guarantee that the service will return
        suggestions for each type. Suggestions for a requested type might rank
        lower than suggestions for other types and the service may decide to cut
        these suggestions off.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        scopes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        query : typing.Text = ...,
        suggestion_types : typing.Optional[typing.Iterable[global___SuggestionType.ValueType]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","query",b"query","scopes",b"scopes","suggestion_types",b"suggestion_types"]) -> None: ...
global___SuggestQueriesRequest = SuggestQueriesRequest

class Suggestion(google.protobuf.message.Message):
    """A suggestion for a query with a ranking score."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUGGESTION_INFO_FIELD_NUMBER: builtins.int
    RANKING_SCORE_FIELD_NUMBER: builtins.int
    SUGGESTION_TYPE_FIELD_NUMBER: builtins.int
    @property
    def suggestion_info(self) -> global___SuggestionInfo:
        """Detailed information about the suggestion."""
        pass
    ranking_score: builtins.float = ...
    """The score of the suggestion. This can be used to define ordering in UI.
    The score represents confidence in the suggestion where higher is better.
    All score values must be in the range [0, 1).
    """

    suggestion_type: global___SuggestionType.ValueType = ...
    """The type of the suggestion."""

    def __init__(self,
        *,
        suggestion_info : typing.Optional[global___SuggestionInfo] = ...,
        ranking_score : builtins.float = ...,
        suggestion_type : global___SuggestionType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["suggestion_info",b"suggestion_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ranking_score",b"ranking_score","suggestion_info",b"suggestion_info","suggestion_type",b"suggestion_type"]) -> None: ...
global___Suggestion = Suggestion

class SuggestionInfo(google.protobuf.message.Message):
    """Detailed information about the suggestion."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MatchInfo(google.protobuf.message.Message):
        """MatchInfo describes which part of suggestion matched with data in user
        typed query. This can be used to highlight matching parts in the UI. This
        is different from the annotations provided in annotated_suggestion. The
        annotated_suggestion provides information about the semantic meaning, while
        this provides information about how it relates to the input.

        Example:
        user query: `top products`

        ```
        annotated_suggestion {
         text_formatted = "top product_group"
         html_formatted = "top <b>product_group</b>"
         markups {
          {type: TEXT, start_char_index: 0, length: 3}
          {type: DIMENSION, start_char_index: 4, length: 13}
         }
        }

        query_matches {
         { start_char_index: 0, length: 3 }
         { start_char_index: 4, length: 7}
        }
        ```
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        START_CHAR_INDEX_FIELD_NUMBER: builtins.int
        LENGTH_FIELD_NUMBER: builtins.int
        start_char_index: builtins.int = ...
        """Unicode character index of the string annotation."""

        length: builtins.int = ...
        """Count of unicode characters of this substring."""

        def __init__(self,
            *,
            start_char_index : builtins.int = ...,
            length : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["length",b"length","start_char_index",b"start_char_index"]) -> None: ...

    ANNOTATED_SUGGESTION_FIELD_NUMBER: builtins.int
    QUERY_MATCHES_FIELD_NUMBER: builtins.int
    @property
    def annotated_suggestion(self) -> google.cloud.dataqna.v1alpha.annotated_string_pb2.AnnotatedString:
        """Annotations for the suggestion. This provides information about which part
        of the suggestion corresponds to what semantic meaning (e.g. a metric).
        """
        pass
    @property
    def query_matches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SuggestionInfo.MatchInfo]:
        """Matches between user query and the annotated string."""
        pass
    def __init__(self,
        *,
        annotated_suggestion : typing.Optional[google.cloud.dataqna.v1alpha.annotated_string_pb2.AnnotatedString] = ...,
        query_matches : typing.Optional[typing.Iterable[global___SuggestionInfo.MatchInfo]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["annotated_suggestion",b"annotated_suggestion"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotated_suggestion",b"annotated_suggestion","query_matches",b"query_matches"]) -> None: ...
global___SuggestionInfo = SuggestionInfo

class SuggestQueriesResponse(google.protobuf.message.Message):
    """Response to SuggestQueries."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUGGESTIONS_FIELD_NUMBER: builtins.int
    @property
    def suggestions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Suggestion]:
        """A list of suggestions."""
        pass
    def __init__(self,
        *,
        suggestions : typing.Optional[typing.Iterable[global___Suggestion]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["suggestions",b"suggestions"]) -> None: ...
global___SuggestQueriesResponse = SuggestQueriesResponse
