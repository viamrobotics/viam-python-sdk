"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class UserFeedback(google.protobuf.message.Message):
    """Feedback provided by a user."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _UserFeedbackRating:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UserFeedbackRatingEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UserFeedbackRating.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        USER_FEEDBACK_RATING_UNSPECIFIED: UserFeedback.UserFeedbackRating.ValueType = ...  # 0
        """No rating was specified."""

        POSITIVE: UserFeedback.UserFeedbackRating.ValueType = ...  # 1
        """The user provided positive feedback."""

        NEGATIVE: UserFeedback.UserFeedbackRating.ValueType = ...  # 2
        """The user provided negative feedback."""

    class UserFeedbackRating(_UserFeedbackRating, metaclass=_UserFeedbackRatingEnumTypeWrapper):
        """Enumeration of feedback ratings."""
        pass

    USER_FEEDBACK_RATING_UNSPECIFIED: UserFeedback.UserFeedbackRating.ValueType = ...  # 0
    """No rating was specified."""

    POSITIVE: UserFeedback.UserFeedbackRating.ValueType = ...  # 1
    """The user provided positive feedback."""

    NEGATIVE: UserFeedback.UserFeedbackRating.ValueType = ...  # 2
    """The user provided negative feedback."""


    NAME_FIELD_NUMBER: builtins.int
    FREE_FORM_FEEDBACK_FIELD_NUMBER: builtins.int
    RATING_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The unique identifier for the user feedback.
    User feedback is a singleton resource on a Question.
    Example: `projects/foo/locations/bar/questions/1234/userFeedback`
    """

    free_form_feedback: typing.Text = ...
    """Free form user feedback, such as a text box."""

    rating: global___UserFeedback.UserFeedbackRating.ValueType = ...
    """The user feedback rating"""

    def __init__(self,
        *,
        name : typing.Text = ...,
        free_form_feedback : typing.Text = ...,
        rating : global___UserFeedback.UserFeedbackRating.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["free_form_feedback",b"free_form_feedback","name",b"name","rating",b"rating"]) -> None: ...
global___UserFeedback = UserFeedback
