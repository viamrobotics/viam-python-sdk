"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ScanRunWarningTrace(google.protobuf.message.Message):
    """Output only.
    Defines a warning trace message for ScanRun. Warning traces provide customers
    with useful information that helps make the scanning process more effective.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Code:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Code.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CODE_UNSPECIFIED: ScanRunWarningTrace.Code.ValueType = ...  # 0
        """Default value is never used."""

        INSUFFICIENT_CRAWL_RESULTS: ScanRunWarningTrace.Code.ValueType = ...  # 1
        """Indicates that a scan discovered an unexpectedly low number of URLs. This
        is sometimes caused by complex navigation features or by using a single
        URL for numerous pages.
        """

        TOO_MANY_CRAWL_RESULTS: ScanRunWarningTrace.Code.ValueType = ...  # 2
        """Indicates that a scan discovered too many URLs to test, or excessive
        redundant URLs.
        """

        TOO_MANY_FUZZ_TASKS: ScanRunWarningTrace.Code.ValueType = ...  # 3
        """Indicates that too many tests have been generated for the scan. Customer
        should try reducing the number of starting URLs, increasing the QPS rate,
        or narrowing down the scope of the scan using the excluded patterns.
        """

        BLOCKED_BY_IAP: ScanRunWarningTrace.Code.ValueType = ...  # 4
        """Indicates that a scan is blocked by IAP."""

    class Code(_Code, metaclass=_CodeEnumTypeWrapper):
        """Output only.
        Defines a warning message code.
        Next id: 6
        """
        pass

    CODE_UNSPECIFIED: ScanRunWarningTrace.Code.ValueType = ...  # 0
    """Default value is never used."""

    INSUFFICIENT_CRAWL_RESULTS: ScanRunWarningTrace.Code.ValueType = ...  # 1
    """Indicates that a scan discovered an unexpectedly low number of URLs. This
    is sometimes caused by complex navigation features or by using a single
    URL for numerous pages.
    """

    TOO_MANY_CRAWL_RESULTS: ScanRunWarningTrace.Code.ValueType = ...  # 2
    """Indicates that a scan discovered too many URLs to test, or excessive
    redundant URLs.
    """

    TOO_MANY_FUZZ_TASKS: ScanRunWarningTrace.Code.ValueType = ...  # 3
    """Indicates that too many tests have been generated for the scan. Customer
    should try reducing the number of starting URLs, increasing the QPS rate,
    or narrowing down the scope of the scan using the excluded patterns.
    """

    BLOCKED_BY_IAP: ScanRunWarningTrace.Code.ValueType = ...  # 4
    """Indicates that a scan is blocked by IAP."""


    CODE_FIELD_NUMBER: builtins.int
    code: global___ScanRunWarningTrace.Code.ValueType = ...
    """Output only. Indicates the warning code."""

    def __init__(self,
        *,
        code : global___ScanRunWarningTrace.Code.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code"]) -> None: ...
global___ScanRunWarningTrace = ScanRunWarningTrace
