"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.dialogflow.v2.audio_config_pb2
import google.cloud.dialogflow.v2.session_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Participant(google.protobuf.message.Message):
    """Represents a conversation participant (human agent, virtual agent, end-user)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Role:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RoleEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Role.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ROLE_UNSPECIFIED: Participant.Role.ValueType = ...  # 0
        """Participant role not set."""

        HUMAN_AGENT: Participant.Role.ValueType = ...  # 1
        """Participant is a human agent."""

        AUTOMATED_AGENT: Participant.Role.ValueType = ...  # 2
        """Participant is an automated agent, such as a Dialogflow agent."""

        END_USER: Participant.Role.ValueType = ...  # 3
        """Participant is an end user that has called or chatted with
        Dialogflow services.
        """

    class Role(_Role, metaclass=_RoleEnumTypeWrapper):
        """Enumeration of the roles a participant can play in a conversation."""
        pass

    ROLE_UNSPECIFIED: Participant.Role.ValueType = ...  # 0
    """Participant role not set."""

    HUMAN_AGENT: Participant.Role.ValueType = ...  # 1
    """Participant is a human agent."""

    AUTOMATED_AGENT: Participant.Role.ValueType = ...  # 2
    """Participant is an automated agent, such as a Dialogflow agent."""

    END_USER: Participant.Role.ValueType = ...  # 3
    """Participant is an end user that has called or chatted with
    Dialogflow services.
    """


    class DocumentsMetadataFiltersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    SIP_RECORDING_MEDIA_LABEL_FIELD_NUMBER: builtins.int
    DOCUMENTS_METADATA_FILTERS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Optional. The unique identifier of this participant.
    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
    """

    role: global___Participant.Role.ValueType = ...
    """Immutable. The role this participant plays in the conversation. This field must be set
    during participant creation and is then immutable.
    """

    sip_recording_media_label: typing.Text = ...
    """Optional. Label applied to streams representing this participant in SIPREC
    XML metadata and SDP. This is used to assign transcriptions from that
    media stream to this participant. This field can be updated.
    """

    @property
    def documents_metadata_filters(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional. Key-value filters on the metadata of documents returned by article
        suggestion. If specified, article suggestion only returns suggested
        documents that match all filters in their [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
        values for a metadata key should be concatenated by comma. For example,
        filters to match all documents that have 'US' or 'CA' in their market
        metadata values and 'agent' in their user metadata values will be
        ```
        documents_metadata_filters {
          key: "market"
          value: "US,CA"
        }
        documents_metadata_filters {
          key: "user"
          value: "agent"
        }
        ```
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        role : global___Participant.Role.ValueType = ...,
        sip_recording_media_label : typing.Text = ...,
        documents_metadata_filters : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["documents_metadata_filters",b"documents_metadata_filters","name",b"name","role",b"role","sip_recording_media_label",b"sip_recording_media_label"]) -> None: ...
global___Participant = Participant

class Message(google.protobuf.message.Message):
    """Represents a message posted into a conversation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    PARTICIPANT_FIELD_NUMBER: builtins.int
    PARTICIPANT_ROLE_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    MESSAGE_ANNOTATION_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The unique identifier of the message.
    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>/messages/<Message ID>`.
    """

    content: typing.Text = ...
    """Required. The message content."""

    language_code: typing.Text = ...
    """Optional. The message language.
    This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt)
    language tag. Example: "en-US".
    """

    participant: typing.Text = ...
    """Output only. The participant that sends this message."""

    participant_role: global___Participant.Role.ValueType = ...
    """Output only. The role of the participant."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the message was created."""
        pass
    @property
    def message_annotation(self) -> global___MessageAnnotation:
        """Output only. The annotation for the message."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        content : typing.Text = ...,
        language_code : typing.Text = ...,
        participant : typing.Text = ...,
        participant_role : global___Participant.Role.ValueType = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        message_annotation : typing.Optional[global___MessageAnnotation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","message_annotation",b"message_annotation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["content",b"content","create_time",b"create_time","language_code",b"language_code","message_annotation",b"message_annotation","name",b"name","participant",b"participant","participant_role",b"participant_role"]) -> None: ...
global___Message = Message

class CreateParticipantRequest(google.protobuf.message.Message):
    """The request message for [Participants.CreateParticipant][google.cloud.dialogflow.v2.Participants.CreateParticipant]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PARTICIPANT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Resource identifier of the conversation adding the participant.
    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>`.
    """

    @property
    def participant(self) -> global___Participant:
        """Required. The participant to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        participant : typing.Optional[global___Participant] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["participant",b"participant"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","participant",b"participant"]) -> None: ...
global___CreateParticipantRequest = CreateParticipantRequest

class GetParticipantRequest(google.protobuf.message.Message):
    """The request message for [Participants.GetParticipant][google.cloud.dialogflow.v2.Participants.GetParticipant]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the participant. Format:
    `projects/<Project ID>/locations/<Location ID>/conversations/<Conversation
    ID>/participants/<Participant ID>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetParticipantRequest = GetParticipantRequest

class ListParticipantsRequest(google.protobuf.message.Message):
    """The request message for [Participants.ListParticipants][google.cloud.dialogflow.v2.Participants.ListParticipants]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The conversation to list all participants from.
    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>`.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of items to return in a single page. By
    default 100 and at most 1000.
    """

    page_token: typing.Text = ...
    """Optional. The next_page_token value returned from a previous list request."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListParticipantsRequest = ListParticipantsRequest

class ListParticipantsResponse(google.protobuf.message.Message):
    """The response message for [Participants.ListParticipants][google.cloud.dialogflow.v2.Participants.ListParticipants]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARTICIPANTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def participants(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Participant]:
        """The list of participants. There is a maximum number of items
        returned based on the page_size field in the request.
        """
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results or empty if there are no
    more results in the list.
    """

    def __init__(self,
        *,
        participants : typing.Optional[typing.Iterable[global___Participant]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","participants",b"participants"]) -> None: ...
global___ListParticipantsResponse = ListParticipantsResponse

class UpdateParticipantRequest(google.protobuf.message.Message):
    """The request message for [Participants.UpdateParticipant][google.cloud.dialogflow.v2.Participants.UpdateParticipant]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARTICIPANT_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def participant(self) -> global___Participant:
        """Required. The participant to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The mask to specify which fields to update."""
        pass
    def __init__(self,
        *,
        participant : typing.Optional[global___Participant] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["participant",b"participant","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["participant",b"participant","update_mask",b"update_mask"]) -> None: ...
global___UpdateParticipantRequest = UpdateParticipantRequest

class AnalyzeContentRequest(google.protobuf.message.Message):
    """The request message for [Participants.AnalyzeContent][google.cloud.dialogflow.v2.Participants.AnalyzeContent]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARTICIPANT_FIELD_NUMBER: builtins.int
    TEXT_INPUT_FIELD_NUMBER: builtins.int
    EVENT_INPUT_FIELD_NUMBER: builtins.int
    REPLY_AUDIO_CONFIG_FIELD_NUMBER: builtins.int
    QUERY_PARAMS_FIELD_NUMBER: builtins.int
    ASSIST_QUERY_PARAMS_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    participant: typing.Text = ...
    """Required. The name of the participant this text comes from.
    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
    """

    @property
    def text_input(self) -> google.cloud.dialogflow.v2.session_pb2.TextInput:
        """The natural language text to be processed."""
        pass
    @property
    def event_input(self) -> google.cloud.dialogflow.v2.session_pb2.EventInput:
        """An input event to send to Dialogflow."""
        pass
    @property
    def reply_audio_config(self) -> google.cloud.dialogflow.v2.audio_config_pb2.OutputAudioConfig:
        """Speech synthesis configuration.
        The speech synthesis settings for a virtual agent that may be configured
        for the associated conversation profile are not used when calling
        AnalyzeContent. If this configuration is not supplied, speech synthesis
        is disabled.
        """
        pass
    @property
    def query_params(self) -> google.cloud.dialogflow.v2.session_pb2.QueryParameters:
        """Parameters for a Dialogflow virtual-agent query."""
        pass
    @property
    def assist_query_params(self) -> global___AssistQueryParameters:
        """Parameters for a human assist query."""
        pass
    request_id: typing.Text = ...
    """A unique identifier for this request. Restricted to 36 ASCII characters.
    A random UUID is recommended.
    This request is only idempotent if a `request_id` is provided.
    """

    def __init__(self,
        *,
        participant : typing.Text = ...,
        text_input : typing.Optional[google.cloud.dialogflow.v2.session_pb2.TextInput] = ...,
        event_input : typing.Optional[google.cloud.dialogflow.v2.session_pb2.EventInput] = ...,
        reply_audio_config : typing.Optional[google.cloud.dialogflow.v2.audio_config_pb2.OutputAudioConfig] = ...,
        query_params : typing.Optional[google.cloud.dialogflow.v2.session_pb2.QueryParameters] = ...,
        assist_query_params : typing.Optional[global___AssistQueryParameters] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["assist_query_params",b"assist_query_params","event_input",b"event_input","input",b"input","query_params",b"query_params","reply_audio_config",b"reply_audio_config","text_input",b"text_input"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assist_query_params",b"assist_query_params","event_input",b"event_input","input",b"input","participant",b"participant","query_params",b"query_params","reply_audio_config",b"reply_audio_config","request_id",b"request_id","text_input",b"text_input"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["input",b"input"]) -> typing.Optional[typing_extensions.Literal["text_input","event_input"]]: ...
global___AnalyzeContentRequest = AnalyzeContentRequest

class DtmfParameters(google.protobuf.message.Message):
    """The message in the response that indicates the parameters of DTMF."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCEPTS_DTMF_INPUT_FIELD_NUMBER: builtins.int
    accepts_dtmf_input: builtins.bool = ...
    """Indicates whether DTMF input can be handled in the next request."""

    def __init__(self,
        *,
        accepts_dtmf_input : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accepts_dtmf_input",b"accepts_dtmf_input"]) -> None: ...
global___DtmfParameters = DtmfParameters

class AnalyzeContentResponse(google.protobuf.message.Message):
    """The response message for [Participants.AnalyzeContent][google.cloud.dialogflow.v2.Participants.AnalyzeContent]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REPLY_TEXT_FIELD_NUMBER: builtins.int
    REPLY_AUDIO_FIELD_NUMBER: builtins.int
    AUTOMATED_AGENT_REPLY_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    HUMAN_AGENT_SUGGESTION_RESULTS_FIELD_NUMBER: builtins.int
    END_USER_SUGGESTION_RESULTS_FIELD_NUMBER: builtins.int
    DTMF_PARAMETERS_FIELD_NUMBER: builtins.int
    reply_text: typing.Text = ...
    """The output text content.
    This field is set if the automated agent responded with text to show to
    the user.
    """

    @property
    def reply_audio(self) -> global___OutputAudio:
        """The audio data bytes encoded as specified in the request.
        This field is set if:

         - `reply_audio_config` was specified in the request, or
         - The automated agent responded with audio to play to the user. In such
           case, `reply_audio.config` contains settings used to synthesize the
           speech.

        In some scenarios, multiple output audio fields may be present in the
        response structure. In these cases, only the top-most-level audio output
        has content.
        """
        pass
    @property
    def automated_agent_reply(self) -> global___AutomatedAgentReply:
        """Only set if a Dialogflow automated agent has responded.
        Note that: [AutomatedAgentReply.detect_intent_response.output_audio][]
        and [AutomatedAgentReply.detect_intent_response.output_audio_config][]
        are always empty, use [reply_audio][google.cloud.dialogflow.v2.AnalyzeContentResponse.reply_audio] instead.
        """
        pass
    @property
    def message(self) -> global___Message:
        """Message analyzed by CCAI."""
        pass
    @property
    def human_agent_suggestion_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SuggestionResult]:
        """The suggestions for most recent human agent. The order is the same as
        [HumanAgentAssistantConfig.SuggestionConfig.feature_configs][google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig.feature_configs] of
        [HumanAgentAssistantConfig.human_agent_suggestion_config][google.cloud.dialogflow.v2.HumanAgentAssistantConfig.human_agent_suggestion_config].
        """
        pass
    @property
    def end_user_suggestion_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SuggestionResult]:
        """The suggestions for end user. The order is the same as
        [HumanAgentAssistantConfig.SuggestionConfig.feature_configs][google.cloud.dialogflow.v2.HumanAgentAssistantConfig.SuggestionConfig.feature_configs] of
        [HumanAgentAssistantConfig.end_user_suggestion_config][google.cloud.dialogflow.v2.HumanAgentAssistantConfig.end_user_suggestion_config].
        """
        pass
    @property
    def dtmf_parameters(self) -> global___DtmfParameters:
        """Indicates the parameters of DTMF."""
        pass
    def __init__(self,
        *,
        reply_text : typing.Text = ...,
        reply_audio : typing.Optional[global___OutputAudio] = ...,
        automated_agent_reply : typing.Optional[global___AutomatedAgentReply] = ...,
        message : typing.Optional[global___Message] = ...,
        human_agent_suggestion_results : typing.Optional[typing.Iterable[global___SuggestionResult]] = ...,
        end_user_suggestion_results : typing.Optional[typing.Iterable[global___SuggestionResult]] = ...,
        dtmf_parameters : typing.Optional[global___DtmfParameters] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["automated_agent_reply",b"automated_agent_reply","dtmf_parameters",b"dtmf_parameters","message",b"message","reply_audio",b"reply_audio"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["automated_agent_reply",b"automated_agent_reply","dtmf_parameters",b"dtmf_parameters","end_user_suggestion_results",b"end_user_suggestion_results","human_agent_suggestion_results",b"human_agent_suggestion_results","message",b"message","reply_audio",b"reply_audio","reply_text",b"reply_text"]) -> None: ...
global___AnalyzeContentResponse = AnalyzeContentResponse

class SuggestArticlesRequest(google.protobuf.message.Message):
    """The request message for [Participants.SuggestArticles][google.cloud.dialogflow.v2.Participants.SuggestArticles]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    LATEST_MESSAGE_FIELD_NUMBER: builtins.int
    CONTEXT_SIZE_FIELD_NUMBER: builtins.int
    ASSIST_QUERY_PARAMS_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the participant to fetch suggestion for.
    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
    """

    latest_message: typing.Text = ...
    """The name of the latest conversation message to compile suggestion
    for. If empty, it will be the latest message of the conversation.

    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>/messages/<Message ID>`.
    """

    context_size: builtins.int = ...
    """Max number of messages prior to and including
    [latest_message][google.cloud.dialogflow.v2.SuggestArticlesRequest.latest_message] to use as context
    when compiling the suggestion. By default 20 and at most 50.
    """

    @property
    def assist_query_params(self) -> global___AssistQueryParameters:
        """Parameters for a human assist query."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        latest_message : typing.Text = ...,
        context_size : builtins.int = ...,
        assist_query_params : typing.Optional[global___AssistQueryParameters] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["assist_query_params",b"assist_query_params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assist_query_params",b"assist_query_params","context_size",b"context_size","latest_message",b"latest_message","parent",b"parent"]) -> None: ...
global___SuggestArticlesRequest = SuggestArticlesRequest

class SuggestArticlesResponse(google.protobuf.message.Message):
    """The response message for [Participants.SuggestArticles][google.cloud.dialogflow.v2.Participants.SuggestArticles]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ARTICLE_ANSWERS_FIELD_NUMBER: builtins.int
    LATEST_MESSAGE_FIELD_NUMBER: builtins.int
    CONTEXT_SIZE_FIELD_NUMBER: builtins.int
    @property
    def article_answers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ArticleAnswer]:
        """Articles ordered by score in descending order."""
        pass
    latest_message: typing.Text = ...
    """The name of the latest conversation message used to compile
    suggestion for.

    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>/messages/<Message ID>`.
    """

    context_size: builtins.int = ...
    """Number of messages prior to and including
    [latest_message][google.cloud.dialogflow.v2.SuggestArticlesResponse.latest_message] to compile the
    suggestion. It may be smaller than the
    [SuggestArticlesRequest.context_size][google.cloud.dialogflow.v2.SuggestArticlesRequest.context_size] field in the request if there
    aren't that many messages in the conversation.
    """

    def __init__(self,
        *,
        article_answers : typing.Optional[typing.Iterable[global___ArticleAnswer]] = ...,
        latest_message : typing.Text = ...,
        context_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["article_answers",b"article_answers","context_size",b"context_size","latest_message",b"latest_message"]) -> None: ...
global___SuggestArticlesResponse = SuggestArticlesResponse

class SuggestFaqAnswersRequest(google.protobuf.message.Message):
    """The request message for [Participants.SuggestFaqAnswers][google.cloud.dialogflow.v2.Participants.SuggestFaqAnswers]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    LATEST_MESSAGE_FIELD_NUMBER: builtins.int
    CONTEXT_SIZE_FIELD_NUMBER: builtins.int
    ASSIST_QUERY_PARAMS_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the participant to fetch suggestion for.
    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>/participants/<Participant ID>`.
    """

    latest_message: typing.Text = ...
    """The name of the latest conversation message to compile suggestion
    for. If empty, it will be the latest message of the conversation.

    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>/messages/<Message ID>`.
    """

    context_size: builtins.int = ...
    """Max number of messages prior to and including
    [latest_message] to use as context when compiling the
    suggestion. By default 20 and at most 50.
    """

    @property
    def assist_query_params(self) -> global___AssistQueryParameters:
        """Parameters for a human assist query."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        latest_message : typing.Text = ...,
        context_size : builtins.int = ...,
        assist_query_params : typing.Optional[global___AssistQueryParameters] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["assist_query_params",b"assist_query_params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assist_query_params",b"assist_query_params","context_size",b"context_size","latest_message",b"latest_message","parent",b"parent"]) -> None: ...
global___SuggestFaqAnswersRequest = SuggestFaqAnswersRequest

class SuggestFaqAnswersResponse(google.protobuf.message.Message):
    """The request message for [Participants.SuggestFaqAnswers][google.cloud.dialogflow.v2.Participants.SuggestFaqAnswers]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FAQ_ANSWERS_FIELD_NUMBER: builtins.int
    LATEST_MESSAGE_FIELD_NUMBER: builtins.int
    CONTEXT_SIZE_FIELD_NUMBER: builtins.int
    @property
    def faq_answers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FaqAnswer]:
        """Answers extracted from FAQ documents."""
        pass
    latest_message: typing.Text = ...
    """The name of the latest conversation message used to compile
    suggestion for.

    Format: `projects/<Project ID>/locations/<Location
    ID>/conversations/<Conversation ID>/messages/<Message ID>`.
    """

    context_size: builtins.int = ...
    """Number of messages prior to and including
    [latest_message][google.cloud.dialogflow.v2.SuggestFaqAnswersResponse.latest_message] to compile the
    suggestion. It may be smaller than the
    [SuggestFaqAnswersRequest.context_size][google.cloud.dialogflow.v2.SuggestFaqAnswersRequest.context_size] field in the request if there
    aren't that many messages in the conversation.
    """

    def __init__(self,
        *,
        faq_answers : typing.Optional[typing.Iterable[global___FaqAnswer]] = ...,
        latest_message : typing.Text = ...,
        context_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["context_size",b"context_size","faq_answers",b"faq_answers","latest_message",b"latest_message"]) -> None: ...
global___SuggestFaqAnswersResponse = SuggestFaqAnswersResponse

class OutputAudio(google.protobuf.message.Message):
    """Represents the natural language speech audio to be played to the end user."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONFIG_FIELD_NUMBER: builtins.int
    AUDIO_FIELD_NUMBER: builtins.int
    @property
    def config(self) -> google.cloud.dialogflow.v2.audio_config_pb2.OutputAudioConfig:
        """Instructs the speech synthesizer how to generate the speech
        audio.
        """
        pass
    audio: builtins.bytes = ...
    """The natural language speech audio."""

    def __init__(self,
        *,
        config : typing.Optional[google.cloud.dialogflow.v2.audio_config_pb2.OutputAudioConfig] = ...,
        audio : builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio",b"audio","config",b"config"]) -> None: ...
global___OutputAudio = OutputAudio

class AutomatedAgentReply(google.protobuf.message.Message):
    """Represents a response from an automated agent."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AutomatedAgentReplyType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AutomatedAgentReplyTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AutomatedAgentReplyType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        AUTOMATED_AGENT_REPLY_TYPE_UNSPECIFIED: AutomatedAgentReply.AutomatedAgentReplyType.ValueType = ...  # 0
        """Not specified. This should never happen."""

        PARTIAL: AutomatedAgentReply.AutomatedAgentReplyType.ValueType = ...  # 1
        """Partial reply. e.g. Aggregated responses in a `Fulfillment` that enables
        `return_partial_response` can be returned as partial reply.
        WARNING: partial reply is not eligible for barge-in.
        """

        FINAL: AutomatedAgentReply.AutomatedAgentReplyType.ValueType = ...  # 2
        """Final reply."""

    class AutomatedAgentReplyType(_AutomatedAgentReplyType, metaclass=_AutomatedAgentReplyTypeEnumTypeWrapper):
        """Represents different automated agent reply types."""
        pass

    AUTOMATED_AGENT_REPLY_TYPE_UNSPECIFIED: AutomatedAgentReply.AutomatedAgentReplyType.ValueType = ...  # 0
    """Not specified. This should never happen."""

    PARTIAL: AutomatedAgentReply.AutomatedAgentReplyType.ValueType = ...  # 1
    """Partial reply. e.g. Aggregated responses in a `Fulfillment` that enables
    `return_partial_response` can be returned as partial reply.
    WARNING: partial reply is not eligible for barge-in.
    """

    FINAL: AutomatedAgentReply.AutomatedAgentReplyType.ValueType = ...  # 2
    """Final reply."""


    DETECT_INTENT_RESPONSE_FIELD_NUMBER: builtins.int
    AUTOMATED_AGENT_REPLY_TYPE_FIELD_NUMBER: builtins.int
    ALLOW_CANCELLATION_FIELD_NUMBER: builtins.int
    @property
    def detect_intent_response(self) -> google.cloud.dialogflow.v2.session_pb2.DetectIntentResponse:
        """Response of the Dialogflow [Sessions.DetectIntent][google.cloud.dialogflow.v2.Sessions.DetectIntent] call."""
        pass
    automated_agent_reply_type: global___AutomatedAgentReply.AutomatedAgentReplyType.ValueType = ...
    """AutomatedAgentReply type."""

    allow_cancellation: builtins.bool = ...
    """Indicates whether the partial automated agent reply is interruptible when a
    later reply message arrives. e.g. if the agent specified some music as
    partial response, it can be cancelled.
    """

    def __init__(self,
        *,
        detect_intent_response : typing.Optional[google.cloud.dialogflow.v2.session_pb2.DetectIntentResponse] = ...,
        automated_agent_reply_type : global___AutomatedAgentReply.AutomatedAgentReplyType.ValueType = ...,
        allow_cancellation : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["detect_intent_response",b"detect_intent_response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cancellation",b"allow_cancellation","automated_agent_reply_type",b"automated_agent_reply_type","detect_intent_response",b"detect_intent_response"]) -> None: ...
global___AutomatedAgentReply = AutomatedAgentReply

class ArticleAnswer(google.protobuf.message.Message):
    """Represents article answer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TITLE_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    SNIPPETS_FIELD_NUMBER: builtins.int
    CONFIDENCE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    ANSWER_RECORD_FIELD_NUMBER: builtins.int
    title: typing.Text = ...
    """The article title."""

    uri: typing.Text = ...
    """The article URI."""

    @property
    def snippets(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Article snippets."""
        pass
    confidence: builtins.float = ...
    """Article match confidence.
    The system's confidence score that this article is a good match for this
    conversation, as a value from 0.0 (completely uncertain) to 1.0
    (completely certain).
    """

    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """A map that contains metadata about the answer and the
        document from which it originates.
        """
        pass
    answer_record: typing.Text = ...
    """The name of answer record, in the format of
    "projects/<Project ID>/locations/<Location ID>/answerRecords/<Answer Record
    ID>"
    """

    def __init__(self,
        *,
        title : typing.Text = ...,
        uri : typing.Text = ...,
        snippets : typing.Optional[typing.Iterable[typing.Text]] = ...,
        confidence : builtins.float = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        answer_record : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer_record",b"answer_record","confidence",b"confidence","metadata",b"metadata","snippets",b"snippets","title",b"title","uri",b"uri"]) -> None: ...
global___ArticleAnswer = ArticleAnswer

class FaqAnswer(google.protobuf.message.Message):
    """Represents answer from "frequently asked questions"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ANSWER_FIELD_NUMBER: builtins.int
    CONFIDENCE_FIELD_NUMBER: builtins.int
    QUESTION_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    ANSWER_RECORD_FIELD_NUMBER: builtins.int
    answer: typing.Text = ...
    """The piece of text from the `source` knowledge base document."""

    confidence: builtins.float = ...
    """The system's confidence score that this Knowledge answer is a good match
    for this conversational query, range from 0.0 (completely uncertain)
    to 1.0 (completely certain).
    """

    question: typing.Text = ...
    """The corresponding FAQ question."""

    source: typing.Text = ...
    """Indicates which Knowledge Document this answer was extracted
    from.
    Format: `projects/<Project ID>/locations/<Location
    ID>/agent/knowledgeBases/<Knowledge Base ID>/documents/<Document ID>`.
    """

    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """A map that contains metadata about the answer and the
        document from which it originates.
        """
        pass
    answer_record: typing.Text = ...
    """The name of answer record, in the format of
    "projects/<Project ID>/locations/<Location ID>/answerRecords/<Answer Record
    ID>"
    """

    def __init__(self,
        *,
        answer : typing.Text = ...,
        confidence : builtins.float = ...,
        question : typing.Text = ...,
        source : typing.Text = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        answer_record : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer",b"answer","answer_record",b"answer_record","confidence",b"confidence","metadata",b"metadata","question",b"question","source",b"source"]) -> None: ...
global___FaqAnswer = FaqAnswer

class SuggestionResult(google.protobuf.message.Message):
    """One response of different type of suggestion response which is used in
    the response of [Participants.AnalyzeContent][google.cloud.dialogflow.v2.Participants.AnalyzeContent] and
    [Participants.AnalyzeContent][google.cloud.dialogflow.v2.Participants.AnalyzeContent], as well as [HumanAgentAssistantEvent][google.cloud.dialogflow.v2.HumanAgentAssistantEvent].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ERROR_FIELD_NUMBER: builtins.int
    SUGGEST_ARTICLES_RESPONSE_FIELD_NUMBER: builtins.int
    SUGGEST_FAQ_ANSWERS_RESPONSE_FIELD_NUMBER: builtins.int
    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """Error status if the request failed."""
        pass
    @property
    def suggest_articles_response(self) -> global___SuggestArticlesResponse:
        """SuggestArticlesResponse if request is for ARTICLE_SUGGESTION."""
        pass
    @property
    def suggest_faq_answers_response(self) -> global___SuggestFaqAnswersResponse:
        """SuggestFaqAnswersResponse if request is for FAQ_ANSWER."""
        pass
    def __init__(self,
        *,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        suggest_articles_response : typing.Optional[global___SuggestArticlesResponse] = ...,
        suggest_faq_answers_response : typing.Optional[global___SuggestFaqAnswersResponse] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","suggest_articles_response",b"suggest_articles_response","suggest_faq_answers_response",b"suggest_faq_answers_response","suggestion_response",b"suggestion_response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","suggest_articles_response",b"suggest_articles_response","suggest_faq_answers_response",b"suggest_faq_answers_response","suggestion_response",b"suggestion_response"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["suggestion_response",b"suggestion_response"]) -> typing.Optional[typing_extensions.Literal["error","suggest_articles_response","suggest_faq_answers_response"]]: ...
global___SuggestionResult = SuggestionResult

class AnnotatedMessagePart(google.protobuf.message.Message):
    """Represents a part of a message possibly annotated with an entity. The part
    can be an entity or purely a part of the message between two entities or
    message start/end.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_FIELD_NUMBER: builtins.int
    ENTITY_TYPE_FIELD_NUMBER: builtins.int
    FORMATTED_VALUE_FIELD_NUMBER: builtins.int
    text: typing.Text = ...
    """A part of a message possibly annotated with an entity."""

    entity_type: typing.Text = ...
    """The [Dialogflow system entity
    type](https://cloud.google.com/dialogflow/docs/reference/system-entities)
    of this message part. If this is empty, Dialogflow could not annotate the
    phrase part with a system entity.
    """

    @property
    def formatted_value(self) -> google.protobuf.struct_pb2.Value:
        """The [Dialogflow system entity formatted value
        ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of
        this message part. For example for a system entity of type
        `@sys.unit-currency`, this may contain:
        <pre>
        {
          "amount": 5,
          "currency": "USD"
        }
        </pre>
        """
        pass
    def __init__(self,
        *,
        text : typing.Text = ...,
        entity_type : typing.Text = ...,
        formatted_value : typing.Optional[google.protobuf.struct_pb2.Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["formatted_value",b"formatted_value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entity_type",b"entity_type","formatted_value",b"formatted_value","text",b"text"]) -> None: ...
global___AnnotatedMessagePart = AnnotatedMessagePart

class MessageAnnotation(google.protobuf.message.Message):
    """Represents the result of annotation for the message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARTS_FIELD_NUMBER: builtins.int
    CONTAIN_ENTITIES_FIELD_NUMBER: builtins.int
    @property
    def parts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AnnotatedMessagePart]:
        """The collection of annotated message parts ordered by their
        position in the message. You can recover the annotated message by
        concatenating [AnnotatedMessagePart.text].
        """
        pass
    contain_entities: builtins.bool = ...
    """Indicates whether the text message contains entities."""

    def __init__(self,
        *,
        parts : typing.Optional[typing.Iterable[global___AnnotatedMessagePart]] = ...,
        contain_entities : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["contain_entities",b"contain_entities","parts",b"parts"]) -> None: ...
global___MessageAnnotation = MessageAnnotation

class AssistQueryParameters(google.protobuf.message.Message):
    """Represents the parameters of human assist query."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class DocumentsMetadataFiltersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DOCUMENTS_METADATA_FILTERS_FIELD_NUMBER: builtins.int
    @property
    def documents_metadata_filters(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Key-value filters on the metadata of documents returned by article
        suggestion. If specified, article suggestion only returns suggested
        documents that match all filters in their [Document.metadata][google.cloud.dialogflow.v2.Document.metadata]. Multiple
        values for a metadata key should be concatenated by comma. For example,
        filters to match all documents that have 'US' or 'CA' in their market
        metadata values and 'agent' in their user metadata values will be
        ```
        documents_metadata_filters {
          key: "market"
          value: "US,CA"
        }
        documents_metadata_filters {
          key: "user"
          value: "agent"
        }
        ```
        """
        pass
    def __init__(self,
        *,
        documents_metadata_filters : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["documents_metadata_filters",b"documents_metadata_filters"]) -> None: ...
global___AssistQueryParameters = AssistQueryParameters
