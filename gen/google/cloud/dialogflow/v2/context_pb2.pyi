"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Context(google.protobuf.message.Message):
    """Dialogflow contexts are similar to natural language context. If a person says
    to you "they are orange", you need context in order to understand what "they"
    is referring to. Similarly, for Dialogflow to handle an end-user expression
    like that, it needs to be provided with context in order to correctly match
    an intent.

    Using contexts, you can control the flow of a conversation. You can configure
    contexts for an intent by setting input and output contexts, which are
    identified by string names. When an intent is matched, any configured output
    contexts for that intent become active. While any contexts are active,
    Dialogflow is more likely to match intents that are configured with input
    contexts that correspond to the currently active contexts.

    For more information about context, see the
    [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    LIFESPAN_COUNT_FIELD_NUMBER: builtins.int
    PARAMETERS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The unique identifier of the context. Format:
    `projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>`,
    or `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
    ID>/sessions/<Session ID>/contexts/<Context ID>`.

    The `Context ID` is always converted to lowercase, may only contain
    characters in a-zA-Z0-9_-% and may be at most 250 bytes long.

    If `Environment ID` is not specified, we assume default 'draft'
    environment. If `User ID` is not specified, we assume default '-' user.

    The following context names are reserved for internal use by Dialogflow.
    You should not use these contexts or create contexts with these names:

    * `__system_counters__`
    * `*_id_dialog_context`
    * `*_dialog_params_size`
    """

    lifespan_count: builtins.int = ...
    """Optional. The number of conversational query requests after which the
    context expires. The default is `0`. If set to `0`, the context expires
    immediately. Contexts expire automatically after 20 minutes if there
    are no matching queries.
    """

    @property
    def parameters(self) -> google.protobuf.struct_pb2.Struct:
        """Optional. The collection of parameters associated with this context.

        Depending on your protocol or client library language, this is a
        map, associative array, symbol table, dictionary, or JSON object
        composed of a collection of (MapKey, MapValue) pairs:

        -   MapKey type: string
        -   MapKey value: parameter name
        -   MapValue type:
            -   If parameter's entity type is a composite entity: map
            -   Else: depending on parameter value type, could be one of string,
                number, boolean, null, list or map
        -   MapValue value:
            -   If parameter's entity type is a composite entity:
                map from composite entity property names to property values
            -   Else: parameter value
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        lifespan_count : builtins.int = ...,
        parameters : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["parameters",b"parameters"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["lifespan_count",b"lifespan_count","name",b"name","parameters",b"parameters"]) -> None: ...
global___Context = Context

class ListContextsRequest(google.protobuf.message.Message):
    """The request message for [Contexts.ListContexts][google.cloud.dialogflow.v2.Contexts.ListContexts]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The session to list all contexts from.
    Format: `projects/<Project ID>/agent/sessions/<Session ID>` or
    `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
    ID>/sessions/<Session ID>`.
    If `Environment ID` is not specified, we assume default 'draft'
    environment. If `User ID` is not specified, we assume default '-' user.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of items to return in a single page. By
    default 100 and at most 1000.
    """

    page_token: typing.Text = ...
    """Optional. The next_page_token value returned from a previous list request."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListContextsRequest = ListContextsRequest

class ListContextsResponse(google.protobuf.message.Message):
    """The response message for [Contexts.ListContexts][google.cloud.dialogflow.v2.Contexts.ListContexts]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTEXTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def contexts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Context]:
        """The list of contexts. There will be a maximum number of items
        returned based on the page_size field in the request.
        """
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no
    more results in the list.
    """

    def __init__(self,
        *,
        contexts : typing.Optional[typing.Iterable[global___Context]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["contexts",b"contexts","next_page_token",b"next_page_token"]) -> None: ...
global___ListContextsResponse = ListContextsResponse

class GetContextRequest(google.protobuf.message.Message):
    """The request message for [Contexts.GetContext][google.cloud.dialogflow.v2.Contexts.GetContext]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the context. Format:
    `projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>`
    or `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
    ID>/sessions/<Session ID>/contexts/<Context ID>`.
    If `Environment ID` is not specified, we assume default 'draft'
    environment. If `User ID` is not specified, we assume default '-' user.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetContextRequest = GetContextRequest

class CreateContextRequest(google.protobuf.message.Message):
    """The request message for [Contexts.CreateContext][google.cloud.dialogflow.v2.Contexts.CreateContext]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    CONTEXT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The session to create a context for.
    Format: `projects/<Project ID>/agent/sessions/<Session ID>` or
    `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
    ID>/sessions/<Session ID>`.
    If `Environment ID` is not specified, we assume default 'draft'
    environment. If `User ID` is not specified, we assume default '-' user.
    """

    @property
    def context(self) -> global___Context:
        """Required. The context to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        context : typing.Optional[global___Context] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["context",b"context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["context",b"context","parent",b"parent"]) -> None: ...
global___CreateContextRequest = CreateContextRequest

class UpdateContextRequest(google.protobuf.message.Message):
    """The request message for [Contexts.UpdateContext][google.cloud.dialogflow.v2.Contexts.UpdateContext]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTEXT_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def context(self) -> global___Context:
        """Required. The context to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. The mask to control which fields get updated."""
        pass
    def __init__(self,
        *,
        context : typing.Optional[global___Context] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["context",b"context","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["context",b"context","update_mask",b"update_mask"]) -> None: ...
global___UpdateContextRequest = UpdateContextRequest

class DeleteContextRequest(google.protobuf.message.Message):
    """The request message for [Contexts.DeleteContext][google.cloud.dialogflow.v2.Contexts.DeleteContext]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the context to delete. Format:
    `projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>`
    or `projects/<Project ID>/agent/environments/<Environment ID>/users/<User
    ID>/sessions/<Session ID>/contexts/<Context ID>`.
    If `Environment ID` is not specified, we assume default 'draft'
    environment. If `User ID` is not specified, we assume default '-' user.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteContextRequest = DeleteContextRequest

class DeleteAllContextsRequest(google.protobuf.message.Message):
    """The request message for [Contexts.DeleteAllContexts][google.cloud.dialogflow.v2.Contexts.DeleteAllContexts]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the session to delete all contexts from. Format:
    `projects/<Project ID>/agent/sessions/<Session ID>` or `projects/<Project
    ID>/agent/environments/<Environment ID>/users/<User ID>/sessions/<Session
    ID>`.
    If `Environment ID` is not specified we assume default 'draft' environment.
    If `User ID` is not specified, we assume default '-' user.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent"]) -> None: ...
global___DeleteAllContextsRequest = DeleteAllContextsRequest
