"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.dialogflow.v2beta1.context_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _IntentView:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _IntentViewEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IntentView.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    INTENT_VIEW_UNSPECIFIED: IntentView.ValueType = ...  # 0
    """Training phrases field is not populated in the response."""

    INTENT_VIEW_FULL: IntentView.ValueType = ...  # 1
    """All fields are populated."""

class IntentView(_IntentView, metaclass=_IntentViewEnumTypeWrapper):
    """Represents the options for views of an intent.
    An intent can be a sizable object. Therefore, we provide a resource view that
    does not return training phrases in the response by default.
    """
    pass

INTENT_VIEW_UNSPECIFIED: IntentView.ValueType = ...  # 0
"""Training phrases field is not populated in the response."""

INTENT_VIEW_FULL: IntentView.ValueType = ...  # 1
"""All fields are populated."""

global___IntentView = IntentView


class Intent(google.protobuf.message.Message):
    """An intent categorizes an end-user's intention for one conversation turn. For
    each agent, you define many intents, where your combined intents can handle a
    complete conversation. When an end-user writes or says something, referred to
    as an end-user expression or end-user input, Dialogflow matches the end-user
    input to the best intent in your agent. Matching an intent is also known as
    intent classification.

    For more information, see the [intent
    guide](https://cloud.google.com/dialogflow/docs/intents-overview).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _WebhookState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _WebhookStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WebhookState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        WEBHOOK_STATE_UNSPECIFIED: Intent.WebhookState.ValueType = ...  # 0
        """Webhook is disabled in the agent and in the intent."""

        WEBHOOK_STATE_ENABLED: Intent.WebhookState.ValueType = ...  # 1
        """Webhook is enabled in the agent and in the intent."""

        WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Intent.WebhookState.ValueType = ...  # 2
        """Webhook is enabled in the agent and in the intent. Also, each slot
        filling prompt is forwarded to the webhook.
        """

    class WebhookState(_WebhookState, metaclass=_WebhookStateEnumTypeWrapper):
        """Represents the different states that webhooks can be in."""
        pass

    WEBHOOK_STATE_UNSPECIFIED: Intent.WebhookState.ValueType = ...  # 0
    """Webhook is disabled in the agent and in the intent."""

    WEBHOOK_STATE_ENABLED: Intent.WebhookState.ValueType = ...  # 1
    """Webhook is enabled in the agent and in the intent."""

    WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Intent.WebhookState.ValueType = ...  # 2
    """Webhook is enabled in the agent and in the intent. Also, each slot
    filling prompt is forwarded to the webhook.
    """


    class TrainingPhrase(google.protobuf.message.Message):
        """Represents an example that the agent is trained on."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            TYPE_UNSPECIFIED: Intent.TrainingPhrase.Type.ValueType = ...  # 0
            """Not specified. This value should never be used."""

            EXAMPLE: Intent.TrainingPhrase.Type.ValueType = ...  # 1
            """Examples do not contain @-prefixed entity type names, but example parts
            can be annotated with entity types.
            """

            TEMPLATE: Intent.TrainingPhrase.Type.ValueType = ...  # 2
            """Templates are not annotated with entity types, but they can contain
            @-prefixed entity type names as substrings.
            Template mode has been deprecated. Example mode is the only supported
            way to create new training phrases. If you have existing training
            phrases that you've created in template mode, those will continue to
            work.
            """

        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            """Represents different types of training phrases."""
            pass

        TYPE_UNSPECIFIED: Intent.TrainingPhrase.Type.ValueType = ...  # 0
        """Not specified. This value should never be used."""

        EXAMPLE: Intent.TrainingPhrase.Type.ValueType = ...  # 1
        """Examples do not contain @-prefixed entity type names, but example parts
        can be annotated with entity types.
        """

        TEMPLATE: Intent.TrainingPhrase.Type.ValueType = ...  # 2
        """Templates are not annotated with entity types, but they can contain
        @-prefixed entity type names as substrings.
        Template mode has been deprecated. Example mode is the only supported
        way to create new training phrases. If you have existing training
        phrases that you've created in template mode, those will continue to
        work.
        """


        class Part(google.protobuf.message.Message):
            """Represents a part of a training phrase."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TEXT_FIELD_NUMBER: builtins.int
            ENTITY_TYPE_FIELD_NUMBER: builtins.int
            ALIAS_FIELD_NUMBER: builtins.int
            USER_DEFINED_FIELD_NUMBER: builtins.int
            text: typing.Text = ...
            """Required. The text for this part."""

            entity_type: typing.Text = ...
            """Optional. The entity type name prefixed with `@`.
            This field is required for annotated parts of the training phrase.
            """

            alias: typing.Text = ...
            """Optional. The parameter name for the value extracted from the
            annotated part of the example.
            This field is required for annotated parts of the training phrase.
            """

            user_defined: builtins.bool = ...
            """Optional. Indicates whether the text was manually annotated.
            This field is set to true when the Dialogflow Console is used to
            manually annotate the part. When creating an annotated part with the
            API, you must set this to true.
            """

            def __init__(self,
                *,
                text : typing.Text = ...,
                entity_type : typing.Text = ...,
                alias : typing.Text = ...,
                user_defined : builtins.bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["alias",b"alias","entity_type",b"entity_type","text",b"text","user_defined",b"user_defined"]) -> None: ...

        NAME_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        PARTS_FIELD_NUMBER: builtins.int
        TIMES_ADDED_COUNT_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """Output only. The unique identifier of this training phrase."""

        type: global___Intent.TrainingPhrase.Type.ValueType = ...
        """Required. The type of the training phrase."""

        @property
        def parts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.TrainingPhrase.Part]:
            """Required. The ordered list of training phrase parts.
            The parts are concatenated in order to form the training phrase.

            Note: The API does not automatically annotate training phrases like the
            Dialogflow Console does.

            Note: Do not forget to include whitespace at part boundaries,
            so the training phrase is well formatted when the parts are concatenated.

            If the training phrase does not need to be annotated with parameters,
            you just need a single part with only the [Part.text][google.cloud.dialogflow.v2beta1.Intent.TrainingPhrase.Part.text] field set.

            If you want to annotate the training phrase, you must create multiple
            parts, where the fields of each part are populated in one of two ways:

            -   `Part.text` is set to a part of the phrase that has no parameters.
            -   `Part.text` is set to a part of the phrase that you want to annotate,
                and the `entity_type`, `alias`, and `user_defined` fields are all
                set.
            """
            pass
        times_added_count: builtins.int = ...
        """Optional. Indicates how many times this example was added to
        the intent. Each time a developer adds an existing sample by editing an
        intent or training, this counter is increased.
        """

        def __init__(self,
            *,
            name : typing.Text = ...,
            type : global___Intent.TrainingPhrase.Type.ValueType = ...,
            parts : typing.Optional[typing.Iterable[global___Intent.TrainingPhrase.Part]] = ...,
            times_added_count : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name",b"name","parts",b"parts","times_added_count",b"times_added_count","type",b"type"]) -> None: ...

    class Parameter(google.protobuf.message.Message):
        """Represents intent parameters."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_FIELD_NUMBER: builtins.int
        DISPLAY_NAME_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        DEFAULT_VALUE_FIELD_NUMBER: builtins.int
        ENTITY_TYPE_DISPLAY_NAME_FIELD_NUMBER: builtins.int
        MANDATORY_FIELD_NUMBER: builtins.int
        PROMPTS_FIELD_NUMBER: builtins.int
        IS_LIST_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """The unique identifier of this parameter."""

        display_name: typing.Text = ...
        """Required. The name of the parameter."""

        value: typing.Text = ...
        """Optional. The definition of the parameter value. It can be:

        - a constant string,
        - a parameter value defined as `$parameter_name`,
        - an original parameter value defined as `$parameter_name.original`,
        - a parameter value from some context defined as
          `#context_name.parameter_name`.
        """

        default_value: typing.Text = ...
        """Optional. The default value to use when the `value` yields an empty
        result.
        Default values can be extracted from contexts by using the following
        syntax: `#context_name.parameter_name`.
        """

        entity_type_display_name: typing.Text = ...
        """Optional. The name of the entity type, prefixed with `@`, that
        describes values of the parameter. If the parameter is
        required, this must be provided.
        """

        mandatory: builtins.bool = ...
        """Optional. Indicates whether the parameter is required. That is,
        whether the intent cannot be completed without collecting the parameter
        value.
        """

        @property
        def prompts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Optional. The collection of prompts that the agent can present to the
            user in order to collect a value for the parameter.
            """
            pass
        is_list: builtins.bool = ...
        """Optional. Indicates whether the parameter represents a list of values."""

        def __init__(self,
            *,
            name : typing.Text = ...,
            display_name : typing.Text = ...,
            value : typing.Text = ...,
            default_value : typing.Text = ...,
            entity_type_display_name : typing.Text = ...,
            mandatory : builtins.bool = ...,
            prompts : typing.Optional[typing.Iterable[typing.Text]] = ...,
            is_list : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["default_value",b"default_value","display_name",b"display_name","entity_type_display_name",b"entity_type_display_name","is_list",b"is_list","mandatory",b"mandatory","name",b"name","prompts",b"prompts","value",b"value"]) -> None: ...

    class Message(google.protobuf.message.Message):
        """Corresponds to the `Response` field in the Dialogflow console."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Platform:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _PlatformEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Platform.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            PLATFORM_UNSPECIFIED: Intent.Message.Platform.ValueType = ...  # 0
            """Not specified."""

            FACEBOOK: Intent.Message.Platform.ValueType = ...  # 1
            """Facebook."""

            SLACK: Intent.Message.Platform.ValueType = ...  # 2
            """Slack."""

            TELEGRAM: Intent.Message.Platform.ValueType = ...  # 3
            """Telegram."""

            KIK: Intent.Message.Platform.ValueType = ...  # 4
            """Kik."""

            SKYPE: Intent.Message.Platform.ValueType = ...  # 5
            """Skype."""

            LINE: Intent.Message.Platform.ValueType = ...  # 6
            """Line."""

            VIBER: Intent.Message.Platform.ValueType = ...  # 7
            """Viber."""

            ACTIONS_ON_GOOGLE: Intent.Message.Platform.ValueType = ...  # 8
            """Google Assistant
            See [Dialogflow webhook
            format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
            """

            TELEPHONY: Intent.Message.Platform.ValueType = ...  # 10
            """Telephony Gateway."""

            GOOGLE_HANGOUTS: Intent.Message.Platform.ValueType = ...  # 11
            """Google Hangouts."""

        class Platform(_Platform, metaclass=_PlatformEnumTypeWrapper):
            """Represents different platforms that a rich message can be intended for."""
            pass

        PLATFORM_UNSPECIFIED: Intent.Message.Platform.ValueType = ...  # 0
        """Not specified."""

        FACEBOOK: Intent.Message.Platform.ValueType = ...  # 1
        """Facebook."""

        SLACK: Intent.Message.Platform.ValueType = ...  # 2
        """Slack."""

        TELEGRAM: Intent.Message.Platform.ValueType = ...  # 3
        """Telegram."""

        KIK: Intent.Message.Platform.ValueType = ...  # 4
        """Kik."""

        SKYPE: Intent.Message.Platform.ValueType = ...  # 5
        """Skype."""

        LINE: Intent.Message.Platform.ValueType = ...  # 6
        """Line."""

        VIBER: Intent.Message.Platform.ValueType = ...  # 7
        """Viber."""

        ACTIONS_ON_GOOGLE: Intent.Message.Platform.ValueType = ...  # 8
        """Google Assistant
        See [Dialogflow webhook
        format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
        """

        TELEPHONY: Intent.Message.Platform.ValueType = ...  # 10
        """Telephony Gateway."""

        GOOGLE_HANGOUTS: Intent.Message.Platform.ValueType = ...  # 11
        """Google Hangouts."""


        class Text(google.protobuf.message.Message):
            """The text response message."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TEXT_FIELD_NUMBER: builtins.int
            @property
            def text(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Optional. The collection of the agent's responses."""
                pass
            def __init__(self,
                *,
                text : typing.Optional[typing.Iterable[typing.Text]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["text",b"text"]) -> None: ...

        class Image(google.protobuf.message.Message):
            """The image response message."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            IMAGE_URI_FIELD_NUMBER: builtins.int
            ACCESSIBILITY_TEXT_FIELD_NUMBER: builtins.int
            image_uri: typing.Text = ...
            """Optional. The public URI to an image file."""

            accessibility_text: typing.Text = ...
            """A text description of the image to be used for accessibility,
            e.g., screen readers. Required if image_uri is set for CarouselSelect.
            """

            def __init__(self,
                *,
                image_uri : typing.Text = ...,
                accessibility_text : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["accessibility_text",b"accessibility_text","image_uri",b"image_uri"]) -> None: ...

        class QuickReplies(google.protobuf.message.Message):
            """The quick replies response message."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TITLE_FIELD_NUMBER: builtins.int
            QUICK_REPLIES_FIELD_NUMBER: builtins.int
            title: typing.Text = ...
            """Optional. The title of the collection of quick replies."""

            @property
            def quick_replies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Optional. The collection of quick replies."""
                pass
            def __init__(self,
                *,
                title : typing.Text = ...,
                quick_replies : typing.Optional[typing.Iterable[typing.Text]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["quick_replies",b"quick_replies","title",b"title"]) -> None: ...

        class Card(google.protobuf.message.Message):
            """The card response message."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class Button(google.protobuf.message.Message):
                """Optional. Contains information about a button."""
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                TEXT_FIELD_NUMBER: builtins.int
                POSTBACK_FIELD_NUMBER: builtins.int
                text: typing.Text = ...
                """Optional. The text to show on the button."""

                postback: typing.Text = ...
                """Optional. The text to send back to the Dialogflow API or a URI to
                open.
                """

                def __init__(self,
                    *,
                    text : typing.Text = ...,
                    postback : typing.Text = ...,
                    ) -> None: ...
                def ClearField(self, field_name: typing_extensions.Literal["postback",b"postback","text",b"text"]) -> None: ...

            TITLE_FIELD_NUMBER: builtins.int
            SUBTITLE_FIELD_NUMBER: builtins.int
            IMAGE_URI_FIELD_NUMBER: builtins.int
            BUTTONS_FIELD_NUMBER: builtins.int
            title: typing.Text = ...
            """Optional. The title of the card."""

            subtitle: typing.Text = ...
            """Optional. The subtitle of the card."""

            image_uri: typing.Text = ...
            """Optional. The public URI to an image file for the card."""

            @property
            def buttons(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.Card.Button]:
                """Optional. The collection of card buttons."""
                pass
            def __init__(self,
                *,
                title : typing.Text = ...,
                subtitle : typing.Text = ...,
                image_uri : typing.Text = ...,
                buttons : typing.Optional[typing.Iterable[global___Intent.Message.Card.Button]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["buttons",b"buttons","image_uri",b"image_uri","subtitle",b"subtitle","title",b"title"]) -> None: ...

        class SimpleResponse(google.protobuf.message.Message):
            """The simple response message containing speech or text."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TEXT_TO_SPEECH_FIELD_NUMBER: builtins.int
            SSML_FIELD_NUMBER: builtins.int
            DISPLAY_TEXT_FIELD_NUMBER: builtins.int
            text_to_speech: typing.Text = ...
            """One of text_to_speech or ssml must be provided. The plain text of the
            speech output. Mutually exclusive with ssml.
            """

            ssml: typing.Text = ...
            """One of text_to_speech or ssml must be provided. Structured spoken
            response to the user in the SSML format. Mutually exclusive with
            text_to_speech.
            """

            display_text: typing.Text = ...
            """Optional. The text to display."""

            def __init__(self,
                *,
                text_to_speech : typing.Text = ...,
                ssml : typing.Text = ...,
                display_text : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["display_text",b"display_text","ssml",b"ssml","text_to_speech",b"text_to_speech"]) -> None: ...

        class SimpleResponses(google.protobuf.message.Message):
            """The collection of simple response candidates.
            This message in `QueryResult.fulfillment_messages` and
            `WebhookResponse.fulfillment_messages` should contain only one
            `SimpleResponse`.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            SIMPLE_RESPONSES_FIELD_NUMBER: builtins.int
            @property
            def simple_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.SimpleResponse]:
                """Required. The list of simple responses."""
                pass
            def __init__(self,
                *,
                simple_responses : typing.Optional[typing.Iterable[global___Intent.Message.SimpleResponse]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["simple_responses",b"simple_responses"]) -> None: ...

        class BasicCard(google.protobuf.message.Message):
            """The basic card message. Useful for displaying information."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class Button(google.protobuf.message.Message):
                """The button object that appears at the bottom of a card."""
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                class OpenUriAction(google.protobuf.message.Message):
                    """Opens the given URI."""
                    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                    URI_FIELD_NUMBER: builtins.int
                    uri: typing.Text = ...
                    """Required. The HTTP or HTTPS scheme URI."""

                    def __init__(self,
                        *,
                        uri : typing.Text = ...,
                        ) -> None: ...
                    def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...

                TITLE_FIELD_NUMBER: builtins.int
                OPEN_URI_ACTION_FIELD_NUMBER: builtins.int
                title: typing.Text = ...
                """Required. The title of the button."""

                @property
                def open_uri_action(self) -> global___Intent.Message.BasicCard.Button.OpenUriAction:
                    """Required. Action to take when a user taps on the button."""
                    pass
                def __init__(self,
                    *,
                    title : typing.Text = ...,
                    open_uri_action : typing.Optional[global___Intent.Message.BasicCard.Button.OpenUriAction] = ...,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions.Literal["open_uri_action",b"open_uri_action"]) -> builtins.bool: ...
                def ClearField(self, field_name: typing_extensions.Literal["open_uri_action",b"open_uri_action","title",b"title"]) -> None: ...

            TITLE_FIELD_NUMBER: builtins.int
            SUBTITLE_FIELD_NUMBER: builtins.int
            FORMATTED_TEXT_FIELD_NUMBER: builtins.int
            IMAGE_FIELD_NUMBER: builtins.int
            BUTTONS_FIELD_NUMBER: builtins.int
            title: typing.Text = ...
            """Optional. The title of the card."""

            subtitle: typing.Text = ...
            """Optional. The subtitle of the card."""

            formatted_text: typing.Text = ...
            """Required, unless image is present. The body text of the card."""

            @property
            def image(self) -> global___Intent.Message.Image:
                """Optional. The image for the card."""
                pass
            @property
            def buttons(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.BasicCard.Button]:
                """Optional. The collection of card buttons."""
                pass
            def __init__(self,
                *,
                title : typing.Text = ...,
                subtitle : typing.Text = ...,
                formatted_text : typing.Text = ...,
                image : typing.Optional[global___Intent.Message.Image] = ...,
                buttons : typing.Optional[typing.Iterable[global___Intent.Message.BasicCard.Button]] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["image",b"image"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["buttons",b"buttons","formatted_text",b"formatted_text","image",b"image","subtitle",b"subtitle","title",b"title"]) -> None: ...

        class Suggestion(google.protobuf.message.Message):
            """The suggestion chip message that the user can tap to quickly post a reply
            to the conversation.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TITLE_FIELD_NUMBER: builtins.int
            title: typing.Text = ...
            """Required. The text shown the in the suggestion chip."""

            def __init__(self,
                *,
                title : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["title",b"title"]) -> None: ...

        class Suggestions(google.protobuf.message.Message):
            """The collection of suggestions."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            SUGGESTIONS_FIELD_NUMBER: builtins.int
            @property
            def suggestions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.Suggestion]:
                """Required. The list of suggested replies."""
                pass
            def __init__(self,
                *,
                suggestions : typing.Optional[typing.Iterable[global___Intent.Message.Suggestion]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["suggestions",b"suggestions"]) -> None: ...

        class LinkOutSuggestion(google.protobuf.message.Message):
            """The suggestion chip message that allows the user to jump out to the app
            or website associated with this agent.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            DESTINATION_NAME_FIELD_NUMBER: builtins.int
            URI_FIELD_NUMBER: builtins.int
            destination_name: typing.Text = ...
            """Required. The name of the app or site this chip is linking to."""

            uri: typing.Text = ...
            """Required. The URI of the app or site to open when the user taps the
            suggestion chip.
            """

            def __init__(self,
                *,
                destination_name : typing.Text = ...,
                uri : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["destination_name",b"destination_name","uri",b"uri"]) -> None: ...

        class ListSelect(google.protobuf.message.Message):
            """The card for presenting a list of options to select from."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class Item(google.protobuf.message.Message):
                """An item in the list."""
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                INFO_FIELD_NUMBER: builtins.int
                TITLE_FIELD_NUMBER: builtins.int
                DESCRIPTION_FIELD_NUMBER: builtins.int
                IMAGE_FIELD_NUMBER: builtins.int
                @property
                def info(self) -> global___Intent.Message.SelectItemInfo:
                    """Required. Additional information about this option."""
                    pass
                title: typing.Text = ...
                """Required. The title of the list item."""

                description: typing.Text = ...
                """Optional. The main text describing the item."""

                @property
                def image(self) -> global___Intent.Message.Image:
                    """Optional. The image to display."""
                    pass
                def __init__(self,
                    *,
                    info : typing.Optional[global___Intent.Message.SelectItemInfo] = ...,
                    title : typing.Text = ...,
                    description : typing.Text = ...,
                    image : typing.Optional[global___Intent.Message.Image] = ...,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions.Literal["image",b"image","info",b"info"]) -> builtins.bool: ...
                def ClearField(self, field_name: typing_extensions.Literal["description",b"description","image",b"image","info",b"info","title",b"title"]) -> None: ...

            TITLE_FIELD_NUMBER: builtins.int
            ITEMS_FIELD_NUMBER: builtins.int
            SUBTITLE_FIELD_NUMBER: builtins.int
            title: typing.Text = ...
            """Optional. The overall title of the list."""

            @property
            def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.ListSelect.Item]:
                """Required. List items."""
                pass
            subtitle: typing.Text = ...
            """Optional. Subtitle of the list."""

            def __init__(self,
                *,
                title : typing.Text = ...,
                items : typing.Optional[typing.Iterable[global___Intent.Message.ListSelect.Item]] = ...,
                subtitle : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["items",b"items","subtitle",b"subtitle","title",b"title"]) -> None: ...

        class CarouselSelect(google.protobuf.message.Message):
            """The card for presenting a carousel of options to select from."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class Item(google.protobuf.message.Message):
                """An item in the carousel."""
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                INFO_FIELD_NUMBER: builtins.int
                TITLE_FIELD_NUMBER: builtins.int
                DESCRIPTION_FIELD_NUMBER: builtins.int
                IMAGE_FIELD_NUMBER: builtins.int
                @property
                def info(self) -> global___Intent.Message.SelectItemInfo:
                    """Required. Additional info about the option item."""
                    pass
                title: typing.Text = ...
                """Required. Title of the carousel item."""

                description: typing.Text = ...
                """Optional. The body text of the card."""

                @property
                def image(self) -> global___Intent.Message.Image:
                    """Optional. The image to display."""
                    pass
                def __init__(self,
                    *,
                    info : typing.Optional[global___Intent.Message.SelectItemInfo] = ...,
                    title : typing.Text = ...,
                    description : typing.Text = ...,
                    image : typing.Optional[global___Intent.Message.Image] = ...,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions.Literal["image",b"image","info",b"info"]) -> builtins.bool: ...
                def ClearField(self, field_name: typing_extensions.Literal["description",b"description","image",b"image","info",b"info","title",b"title"]) -> None: ...

            ITEMS_FIELD_NUMBER: builtins.int
            @property
            def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.CarouselSelect.Item]:
                """Required. Carousel items."""
                pass
            def __init__(self,
                *,
                items : typing.Optional[typing.Iterable[global___Intent.Message.CarouselSelect.Item]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["items",b"items"]) -> None: ...

        class SelectItemInfo(google.protobuf.message.Message):
            """Additional info about the select item for when it is triggered in a
            dialog.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            KEY_FIELD_NUMBER: builtins.int
            SYNONYMS_FIELD_NUMBER: builtins.int
            key: typing.Text = ...
            """Required. A unique key that will be sent back to the agent if this
            response is given.
            """

            @property
            def synonyms(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Optional. A list of synonyms that can also be used to trigger this
                item in dialog.
                """
                pass
            def __init__(self,
                *,
                key : typing.Text = ...,
                synonyms : typing.Optional[typing.Iterable[typing.Text]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","synonyms",b"synonyms"]) -> None: ...

        class TelephonyPlayAudio(google.protobuf.message.Message):
            """Plays audio from a file in Telephony Gateway."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            AUDIO_URI_FIELD_NUMBER: builtins.int
            audio_uri: typing.Text = ...
            """Required. URI to a Google Cloud Storage object containing the audio to
            play, e.g., "gs://bucket/object". The object must contain a single
            channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz.

            This object must be readable by the `service-<Project
            Number>@gcp-sa-dialogflow.iam.gserviceaccount.com` service account
            where <Project Number> is the number of the Telephony Gateway project
            (usually the same as the Dialogflow agent project). If the Google Cloud
            Storage bucket is in the Telephony Gateway project, this permission is
            added by default when enabling the Dialogflow V2 API.

            For audio from other sources, consider using the
            `TelephonySynthesizeSpeech` message with SSML.
            """

            def __init__(self,
                *,
                audio_uri : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["audio_uri",b"audio_uri"]) -> None: ...

        class TelephonySynthesizeSpeech(google.protobuf.message.Message):
            """Synthesizes speech and plays back the synthesized audio to the caller in
            Telephony Gateway.

            Telephony Gateway takes the synthesizer settings from
            `DetectIntentResponse.output_audio_config` which can either be set
            at request-level or can come from the agent-level synthesizer config.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TEXT_FIELD_NUMBER: builtins.int
            SSML_FIELD_NUMBER: builtins.int
            text: typing.Text = ...
            """The raw text to be synthesized."""

            ssml: typing.Text = ...
            """The SSML to be synthesized. For more information, see
            [SSML](https://developers.google.com/actions/reference/ssml).
            """

            def __init__(self,
                *,
                text : typing.Text = ...,
                ssml : typing.Text = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["source",b"source","ssml",b"ssml","text",b"text"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["source",b"source","ssml",b"ssml","text",b"text"]) -> None: ...
            def WhichOneof(self, oneof_group: typing_extensions.Literal["source",b"source"]) -> typing.Optional[typing_extensions.Literal["text","ssml"]]: ...

        class TelephonyTransferCall(google.protobuf.message.Message):
            """Transfers the call in Telephony Gateway."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            PHONE_NUMBER_FIELD_NUMBER: builtins.int
            phone_number: typing.Text = ...
            """Required. The phone number to transfer the call to
            in [E.164 format](https://en.wikipedia.org/wiki/E.164).

            We currently only allow transferring to US numbers (+1xxxyyyzzzz).
            """

            def __init__(self,
                *,
                phone_number : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["phone_number",b"phone_number"]) -> None: ...

        class RbmText(google.protobuf.message.Message):
            """Rich Business Messaging (RBM) text response with suggestions."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TEXT_FIELD_NUMBER: builtins.int
            RBM_SUGGESTION_FIELD_NUMBER: builtins.int
            text: typing.Text = ...
            """Required. Text sent and displayed to the user."""

            @property
            def rbm_suggestion(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.RbmSuggestion]:
                """Optional. One or more suggestions to show to the user."""
                pass
            def __init__(self,
                *,
                text : typing.Text = ...,
                rbm_suggestion : typing.Optional[typing.Iterable[global___Intent.Message.RbmSuggestion]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["rbm_suggestion",b"rbm_suggestion","text",b"text"]) -> None: ...

        class RbmCarouselCard(google.protobuf.message.Message):
            """Carousel Rich Business Messaging (RBM) rich card.

            Rich cards allow you to respond to users with more vivid content, e.g.
            with media and suggestions.

            If you want to show a single card with more control over the layout,
            please use [RbmStandaloneCard][google.cloud.dialogflow.v2beta1.Intent.Message.RbmStandaloneCard] instead.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class _CardWidth:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _CardWidthEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CardWidth.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                CARD_WIDTH_UNSPECIFIED: Intent.Message.RbmCarouselCard.CardWidth.ValueType = ...  # 0
                """Not specified."""

                SMALL: Intent.Message.RbmCarouselCard.CardWidth.ValueType = ...  # 1
                """120 DP. Note that tall media cannot be used."""

                MEDIUM: Intent.Message.RbmCarouselCard.CardWidth.ValueType = ...  # 2
                """232 DP."""

            class CardWidth(_CardWidth, metaclass=_CardWidthEnumTypeWrapper):
                """The width of the cards in the carousel."""
                pass

            CARD_WIDTH_UNSPECIFIED: Intent.Message.RbmCarouselCard.CardWidth.ValueType = ...  # 0
            """Not specified."""

            SMALL: Intent.Message.RbmCarouselCard.CardWidth.ValueType = ...  # 1
            """120 DP. Note that tall media cannot be used."""

            MEDIUM: Intent.Message.RbmCarouselCard.CardWidth.ValueType = ...  # 2
            """232 DP."""


            CARD_WIDTH_FIELD_NUMBER: builtins.int
            CARD_CONTENTS_FIELD_NUMBER: builtins.int
            card_width: global___Intent.Message.RbmCarouselCard.CardWidth.ValueType = ...
            """Required. The width of the cards in the carousel."""

            @property
            def card_contents(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.RbmCardContent]:
                """Required. The cards in the carousel. A carousel must have at least
                2 cards and at most 10.
                """
                pass
            def __init__(self,
                *,
                card_width : global___Intent.Message.RbmCarouselCard.CardWidth.ValueType = ...,
                card_contents : typing.Optional[typing.Iterable[global___Intent.Message.RbmCardContent]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["card_contents",b"card_contents","card_width",b"card_width"]) -> None: ...

        class RbmStandaloneCard(google.protobuf.message.Message):
            """Standalone Rich Business Messaging (RBM) rich card.

            Rich cards allow you to respond to users with more vivid content, e.g.
            with media and suggestions.

            You can group multiple rich cards into one using [RbmCarouselCard][google.cloud.dialogflow.v2beta1.Intent.Message.RbmCarouselCard] but
            carousel cards will give you less control over the card layout.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class _CardOrientation:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _CardOrientationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CardOrientation.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                CARD_ORIENTATION_UNSPECIFIED: Intent.Message.RbmStandaloneCard.CardOrientation.ValueType = ...  # 0
                """Not specified."""

                HORIZONTAL: Intent.Message.RbmStandaloneCard.CardOrientation.ValueType = ...  # 1
                """Horizontal layout."""

                VERTICAL: Intent.Message.RbmStandaloneCard.CardOrientation.ValueType = ...  # 2
                """Vertical layout."""

            class CardOrientation(_CardOrientation, metaclass=_CardOrientationEnumTypeWrapper):
                """Orientation of the card."""
                pass

            CARD_ORIENTATION_UNSPECIFIED: Intent.Message.RbmStandaloneCard.CardOrientation.ValueType = ...  # 0
            """Not specified."""

            HORIZONTAL: Intent.Message.RbmStandaloneCard.CardOrientation.ValueType = ...  # 1
            """Horizontal layout."""

            VERTICAL: Intent.Message.RbmStandaloneCard.CardOrientation.ValueType = ...  # 2
            """Vertical layout."""


            class _ThumbnailImageAlignment:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _ThumbnailImageAlignmentEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ThumbnailImageAlignment.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED: Intent.Message.RbmStandaloneCard.ThumbnailImageAlignment.ValueType = ...  # 0
                """Not specified."""

                LEFT: Intent.Message.RbmStandaloneCard.ThumbnailImageAlignment.ValueType = ...  # 1
                """Thumbnail preview is left-aligned."""

                RIGHT: Intent.Message.RbmStandaloneCard.ThumbnailImageAlignment.ValueType = ...  # 2
                """Thumbnail preview is right-aligned."""

            class ThumbnailImageAlignment(_ThumbnailImageAlignment, metaclass=_ThumbnailImageAlignmentEnumTypeWrapper):
                """Thumbnail preview alignment for standalone cards with horizontal
                layout.
                """
                pass

            THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED: Intent.Message.RbmStandaloneCard.ThumbnailImageAlignment.ValueType = ...  # 0
            """Not specified."""

            LEFT: Intent.Message.RbmStandaloneCard.ThumbnailImageAlignment.ValueType = ...  # 1
            """Thumbnail preview is left-aligned."""

            RIGHT: Intent.Message.RbmStandaloneCard.ThumbnailImageAlignment.ValueType = ...  # 2
            """Thumbnail preview is right-aligned."""


            CARD_ORIENTATION_FIELD_NUMBER: builtins.int
            THUMBNAIL_IMAGE_ALIGNMENT_FIELD_NUMBER: builtins.int
            CARD_CONTENT_FIELD_NUMBER: builtins.int
            card_orientation: global___Intent.Message.RbmStandaloneCard.CardOrientation.ValueType = ...
            """Required. Orientation of the card."""

            thumbnail_image_alignment: global___Intent.Message.RbmStandaloneCard.ThumbnailImageAlignment.ValueType = ...
            """Required if orientation is horizontal.
            Image preview alignment for standalone cards with horizontal layout.
            """

            @property
            def card_content(self) -> global___Intent.Message.RbmCardContent:
                """Required. Card content."""
                pass
            def __init__(self,
                *,
                card_orientation : global___Intent.Message.RbmStandaloneCard.CardOrientation.ValueType = ...,
                thumbnail_image_alignment : global___Intent.Message.RbmStandaloneCard.ThumbnailImageAlignment.ValueType = ...,
                card_content : typing.Optional[global___Intent.Message.RbmCardContent] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["card_content",b"card_content"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["card_content",b"card_content","card_orientation",b"card_orientation","thumbnail_image_alignment",b"thumbnail_image_alignment"]) -> None: ...

        class RbmCardContent(google.protobuf.message.Message):
            """Rich Business Messaging (RBM) Card content"""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class RbmMedia(google.protobuf.message.Message):
                """Rich Business Messaging (RBM) Media displayed in Cards
                The following media-types are currently supported:

                Image Types

                * image/jpeg
                * image/jpg'
                * image/gif
                * image/png

                Video Types

                * video/h263
                * video/m4v
                * video/mp4
                * video/mpeg
                * video/mpeg4
                * video/webm
                """
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                class _Height:
                    ValueType = typing.NewType('ValueType', builtins.int)
                    V: typing_extensions.TypeAlias = ValueType
                class _HeightEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Height.ValueType], builtins.type):
                    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                    HEIGHT_UNSPECIFIED: Intent.Message.RbmCardContent.RbmMedia.Height.ValueType = ...  # 0
                    """Not specified."""

                    SHORT: Intent.Message.RbmCardContent.RbmMedia.Height.ValueType = ...  # 1
                    """112 DP."""

                    MEDIUM: Intent.Message.RbmCardContent.RbmMedia.Height.ValueType = ...  # 2
                    """168 DP."""

                    TALL: Intent.Message.RbmCardContent.RbmMedia.Height.ValueType = ...  # 3
                    """264 DP. Not available for rich card carousels when the card width
                    is set to small.
                    """

                class Height(_Height, metaclass=_HeightEnumTypeWrapper):
                    """Media height"""
                    pass

                HEIGHT_UNSPECIFIED: Intent.Message.RbmCardContent.RbmMedia.Height.ValueType = ...  # 0
                """Not specified."""

                SHORT: Intent.Message.RbmCardContent.RbmMedia.Height.ValueType = ...  # 1
                """112 DP."""

                MEDIUM: Intent.Message.RbmCardContent.RbmMedia.Height.ValueType = ...  # 2
                """168 DP."""

                TALL: Intent.Message.RbmCardContent.RbmMedia.Height.ValueType = ...  # 3
                """264 DP. Not available for rich card carousels when the card width
                is set to small.
                """


                FILE_URI_FIELD_NUMBER: builtins.int
                THUMBNAIL_URI_FIELD_NUMBER: builtins.int
                HEIGHT_FIELD_NUMBER: builtins.int
                file_uri: typing.Text = ...
                """Required. Publicly reachable URI of the file. The RBM platform
                determines the MIME type of the file from the content-type field in
                the HTTP headers when the platform fetches the file. The content-type
                field must be present and accurate in the HTTP response from the URL.
                """

                thumbnail_uri: typing.Text = ...
                """Optional. Publicly reachable URI of the thumbnail.If you don't
                provide a thumbnail URI, the RBM platform displays a blank
                placeholder thumbnail until the user's device downloads the file.
                Depending on the user's setting, the file may not download
                automatically and may require the user to tap a download button.
                """

                height: global___Intent.Message.RbmCardContent.RbmMedia.Height.ValueType = ...
                """Required for cards with vertical orientation. The height of the media
                within a rich card with a vertical layout.
                For a standalone card with horizontal layout, height is not
                customizable, and this field is ignored.
                """

                def __init__(self,
                    *,
                    file_uri : typing.Text = ...,
                    thumbnail_uri : typing.Text = ...,
                    height : global___Intent.Message.RbmCardContent.RbmMedia.Height.ValueType = ...,
                    ) -> None: ...
                def ClearField(self, field_name: typing_extensions.Literal["file_uri",b"file_uri","height",b"height","thumbnail_uri",b"thumbnail_uri"]) -> None: ...

            TITLE_FIELD_NUMBER: builtins.int
            DESCRIPTION_FIELD_NUMBER: builtins.int
            MEDIA_FIELD_NUMBER: builtins.int
            SUGGESTIONS_FIELD_NUMBER: builtins.int
            title: typing.Text = ...
            """Optional. Title of the card (at most 200 bytes).

            At least one of the title, description or media must be set.
            """

            description: typing.Text = ...
            """Optional. Description of the card (at most 2000 bytes).

            At least one of the title, description or media must be set.
            """

            @property
            def media(self) -> global___Intent.Message.RbmCardContent.RbmMedia:
                """Optional. However at least one of the title, description or media must
                be set. Media (image, GIF or a video) to include in the card.
                """
                pass
            @property
            def suggestions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.RbmSuggestion]:
                """Optional. List of suggestions to include in the card."""
                pass
            def __init__(self,
                *,
                title : typing.Text = ...,
                description : typing.Text = ...,
                media : typing.Optional[global___Intent.Message.RbmCardContent.RbmMedia] = ...,
                suggestions : typing.Optional[typing.Iterable[global___Intent.Message.RbmSuggestion]] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["media",b"media"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["description",b"description","media",b"media","suggestions",b"suggestions","title",b"title"]) -> None: ...

        class RbmSuggestion(google.protobuf.message.Message):
            """Rich Business Messaging (RBM) suggestion. Suggestions allow user to
            easily select/click a predefined response or perform an action (like
            opening a web uri).
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            REPLY_FIELD_NUMBER: builtins.int
            ACTION_FIELD_NUMBER: builtins.int
            @property
            def reply(self) -> global___Intent.Message.RbmSuggestedReply:
                """Predefined replies for user to select instead of typing"""
                pass
            @property
            def action(self) -> global___Intent.Message.RbmSuggestedAction:
                """Predefined client side actions that user can choose"""
                pass
            def __init__(self,
                *,
                reply : typing.Optional[global___Intent.Message.RbmSuggestedReply] = ...,
                action : typing.Optional[global___Intent.Message.RbmSuggestedAction] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["action",b"action","reply",b"reply","suggestion",b"suggestion"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["action",b"action","reply",b"reply","suggestion",b"suggestion"]) -> None: ...
            def WhichOneof(self, oneof_group: typing_extensions.Literal["suggestion",b"suggestion"]) -> typing.Optional[typing_extensions.Literal["reply","action"]]: ...

        class RbmSuggestedReply(google.protobuf.message.Message):
            """Rich Business Messaging (RBM) suggested reply that the user can click
            instead of typing in their own response.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TEXT_FIELD_NUMBER: builtins.int
            POSTBACK_DATA_FIELD_NUMBER: builtins.int
            text: typing.Text = ...
            """Suggested reply text."""

            postback_data: typing.Text = ...
            """Opaque payload that the Dialogflow receives in a user event
            when the user taps the suggested reply. This data will be also
            forwarded to webhook to allow performing custom business logic.
            """

            def __init__(self,
                *,
                text : typing.Text = ...,
                postback_data : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["postback_data",b"postback_data","text",b"text"]) -> None: ...

        class RbmSuggestedAction(google.protobuf.message.Message):
            """Rich Business Messaging (RBM) suggested client-side action that the user
            can choose from the card.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class RbmSuggestedActionDial(google.protobuf.message.Message):
                """Opens the user's default dialer app with the specified phone number
                but does not dial automatically.
                """
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                PHONE_NUMBER_FIELD_NUMBER: builtins.int
                phone_number: typing.Text = ...
                """Required. The phone number to fill in the default dialer app.
                This field should be in [E.164](https://en.wikipedia.org/wiki/E.164)
                format. An example of a correctly formatted phone number:
                +15556767888.
                """

                def __init__(self,
                    *,
                    phone_number : typing.Text = ...,
                    ) -> None: ...
                def ClearField(self, field_name: typing_extensions.Literal["phone_number",b"phone_number"]) -> None: ...

            class RbmSuggestedActionOpenUri(google.protobuf.message.Message):
                """Opens the user's default web browser app to the specified uri
                If the user has an app installed that is
                registered as the default handler for the URL, then this app will be
                opened instead, and its icon will be used in the suggested action UI.
                """
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                URI_FIELD_NUMBER: builtins.int
                uri: typing.Text = ...
                """Required. The uri to open on the user device"""

                def __init__(self,
                    *,
                    uri : typing.Text = ...,
                    ) -> None: ...
                def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...

            class RbmSuggestedActionShareLocation(google.protobuf.message.Message):
                """Opens the device's location chooser so the user can pick a location
                to send back to the agent.
                """
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                def __init__(self,
                    ) -> None: ...

            TEXT_FIELD_NUMBER: builtins.int
            POSTBACK_DATA_FIELD_NUMBER: builtins.int
            DIAL_FIELD_NUMBER: builtins.int
            OPEN_URL_FIELD_NUMBER: builtins.int
            SHARE_LOCATION_FIELD_NUMBER: builtins.int
            text: typing.Text = ...
            """Text to display alongside the action."""

            postback_data: typing.Text = ...
            """Opaque payload that the Dialogflow receives in a user event
            when the user taps the suggested action. This data will be also
            forwarded to webhook to allow performing custom business logic.
            """

            @property
            def dial(self) -> global___Intent.Message.RbmSuggestedAction.RbmSuggestedActionDial:
                """Suggested client side action: Dial a phone number"""
                pass
            @property
            def open_url(self) -> global___Intent.Message.RbmSuggestedAction.RbmSuggestedActionOpenUri:
                """Suggested client side action: Open a URI on device"""
                pass
            @property
            def share_location(self) -> global___Intent.Message.RbmSuggestedAction.RbmSuggestedActionShareLocation:
                """Suggested client side action: Share user location"""
                pass
            def __init__(self,
                *,
                text : typing.Text = ...,
                postback_data : typing.Text = ...,
                dial : typing.Optional[global___Intent.Message.RbmSuggestedAction.RbmSuggestedActionDial] = ...,
                open_url : typing.Optional[global___Intent.Message.RbmSuggestedAction.RbmSuggestedActionOpenUri] = ...,
                share_location : typing.Optional[global___Intent.Message.RbmSuggestedAction.RbmSuggestedActionShareLocation] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["action",b"action","dial",b"dial","open_url",b"open_url","share_location",b"share_location"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["action",b"action","dial",b"dial","open_url",b"open_url","postback_data",b"postback_data","share_location",b"share_location","text",b"text"]) -> None: ...
            def WhichOneof(self, oneof_group: typing_extensions.Literal["action",b"action"]) -> typing.Optional[typing_extensions.Literal["dial","open_url","share_location"]]: ...

        class MediaContent(google.protobuf.message.Message):
            """The media content card for Actions on Google."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class _ResponseMediaType:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _ResponseMediaTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ResponseMediaType.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                RESPONSE_MEDIA_TYPE_UNSPECIFIED: Intent.Message.MediaContent.ResponseMediaType.ValueType = ...  # 0
                """Unspecified."""

                AUDIO: Intent.Message.MediaContent.ResponseMediaType.ValueType = ...  # 1
                """Response media type is audio."""

            class ResponseMediaType(_ResponseMediaType, metaclass=_ResponseMediaTypeEnumTypeWrapper):
                """Format of response media type."""
                pass

            RESPONSE_MEDIA_TYPE_UNSPECIFIED: Intent.Message.MediaContent.ResponseMediaType.ValueType = ...  # 0
            """Unspecified."""

            AUDIO: Intent.Message.MediaContent.ResponseMediaType.ValueType = ...  # 1
            """Response media type is audio."""


            class ResponseMediaObject(google.protobuf.message.Message):
                """Response media object for media content card."""
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                NAME_FIELD_NUMBER: builtins.int
                DESCRIPTION_FIELD_NUMBER: builtins.int
                LARGE_IMAGE_FIELD_NUMBER: builtins.int
                ICON_FIELD_NUMBER: builtins.int
                CONTENT_URL_FIELD_NUMBER: builtins.int
                name: typing.Text = ...
                """Required. Name of media card."""

                description: typing.Text = ...
                """Optional. Description of media card."""

                @property
                def large_image(self) -> global___Intent.Message.Image:
                    """Optional. Image to display above media content."""
                    pass
                @property
                def icon(self) -> global___Intent.Message.Image:
                    """Optional. Icon to display above media content."""
                    pass
                content_url: typing.Text = ...
                """Required. Url where the media is stored."""

                def __init__(self,
                    *,
                    name : typing.Text = ...,
                    description : typing.Text = ...,
                    large_image : typing.Optional[global___Intent.Message.Image] = ...,
                    icon : typing.Optional[global___Intent.Message.Image] = ...,
                    content_url : typing.Text = ...,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions.Literal["icon",b"icon","image",b"image","large_image",b"large_image"]) -> builtins.bool: ...
                def ClearField(self, field_name: typing_extensions.Literal["content_url",b"content_url","description",b"description","icon",b"icon","image",b"image","large_image",b"large_image","name",b"name"]) -> None: ...
                def WhichOneof(self, oneof_group: typing_extensions.Literal["image",b"image"]) -> typing.Optional[typing_extensions.Literal["large_image","icon"]]: ...

            MEDIA_TYPE_FIELD_NUMBER: builtins.int
            MEDIA_OBJECTS_FIELD_NUMBER: builtins.int
            media_type: global___Intent.Message.MediaContent.ResponseMediaType.ValueType = ...
            """Optional. What type of media is the content (ie "audio")."""

            @property
            def media_objects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.MediaContent.ResponseMediaObject]:
                """Required. List of media objects."""
                pass
            def __init__(self,
                *,
                media_type : global___Intent.Message.MediaContent.ResponseMediaType.ValueType = ...,
                media_objects : typing.Optional[typing.Iterable[global___Intent.Message.MediaContent.ResponseMediaObject]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["media_objects",b"media_objects","media_type",b"media_type"]) -> None: ...

        class BrowseCarouselCard(google.protobuf.message.Message):
            """Browse Carousel Card for Actions on Google.
            https://developers.google.com/actions/assistant/responses#browsing_carousel
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class _ImageDisplayOptions:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _ImageDisplayOptionsEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ImageDisplayOptions.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                IMAGE_DISPLAY_OPTIONS_UNSPECIFIED: Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...  # 0
                """Fill the gaps between the image and the image container with gray
                bars.
                """

                GRAY: Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...  # 1
                """Fill the gaps between the image and the image container with gray
                bars.
                """

                WHITE: Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...  # 2
                """Fill the gaps between the image and the image container with white
                bars.
                """

                CROPPED: Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...  # 3
                """Image is scaled such that the image width and height match or exceed
                the container dimensions. This may crop the top and bottom of the
                image if the scaled image height is greater than the container
                height, or crop the left and right of the image if the scaled image
                width is greater than the container width. This is similar to "Zoom
                Mode" on a widescreen TV when playing a 4:3 video.
                """

                BLURRED_BACKGROUND: Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...  # 4
                """Pad the gaps between image and image frame with a blurred copy of the
                same image.
                """

            class ImageDisplayOptions(_ImageDisplayOptions, metaclass=_ImageDisplayOptionsEnumTypeWrapper):
                """Image display options for Actions on Google. This should be used for
                when the image's aspect ratio does not match the image container's
                aspect ratio.
                """
                pass

            IMAGE_DISPLAY_OPTIONS_UNSPECIFIED: Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...  # 0
            """Fill the gaps between the image and the image container with gray
            bars.
            """

            GRAY: Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...  # 1
            """Fill the gaps between the image and the image container with gray
            bars.
            """

            WHITE: Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...  # 2
            """Fill the gaps between the image and the image container with white
            bars.
            """

            CROPPED: Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...  # 3
            """Image is scaled such that the image width and height match or exceed
            the container dimensions. This may crop the top and bottom of the
            image if the scaled image height is greater than the container
            height, or crop the left and right of the image if the scaled image
            width is greater than the container width. This is similar to "Zoom
            Mode" on a widescreen TV when playing a 4:3 video.
            """

            BLURRED_BACKGROUND: Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...  # 4
            """Pad the gaps between image and image frame with a blurred copy of the
            same image.
            """


            class BrowseCarouselCardItem(google.protobuf.message.Message):
                """Browsing carousel tile"""
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                class OpenUrlAction(google.protobuf.message.Message):
                    """Actions on Google action to open a given url."""
                    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                    class _UrlTypeHint:
                        ValueType = typing.NewType('ValueType', builtins.int)
                        V: typing_extensions.TypeAlias = ValueType
                    class _UrlTypeHintEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UrlTypeHint.ValueType], builtins.type):
                        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                        URL_TYPE_HINT_UNSPECIFIED: Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem.OpenUrlAction.UrlTypeHint.ValueType = ...  # 0
                        """Unspecified"""

                        AMP_ACTION: Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem.OpenUrlAction.UrlTypeHint.ValueType = ...  # 1
                        """Url would be an amp action"""

                        AMP_CONTENT: Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem.OpenUrlAction.UrlTypeHint.ValueType = ...  # 2
                        """URL that points directly to AMP content, or to a canonical URL
                        which refers to AMP content via <link rel="amphtml">.
                        """

                    class UrlTypeHint(_UrlTypeHint, metaclass=_UrlTypeHintEnumTypeWrapper):
                        """Type of the URI."""
                        pass

                    URL_TYPE_HINT_UNSPECIFIED: Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem.OpenUrlAction.UrlTypeHint.ValueType = ...  # 0
                    """Unspecified"""

                    AMP_ACTION: Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem.OpenUrlAction.UrlTypeHint.ValueType = ...  # 1
                    """Url would be an amp action"""

                    AMP_CONTENT: Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem.OpenUrlAction.UrlTypeHint.ValueType = ...  # 2
                    """URL that points directly to AMP content, or to a canonical URL
                    which refers to AMP content via <link rel="amphtml">.
                    """


                    URL_FIELD_NUMBER: builtins.int
                    URL_TYPE_HINT_FIELD_NUMBER: builtins.int
                    url: typing.Text = ...
                    """Required. URL"""

                    url_type_hint: global___Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem.OpenUrlAction.UrlTypeHint.ValueType = ...
                    """Optional. Specifies the type of viewer that is used when opening
                    the URL. Defaults to opening via web browser.
                    """

                    def __init__(self,
                        *,
                        url : typing.Text = ...,
                        url_type_hint : global___Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem.OpenUrlAction.UrlTypeHint.ValueType = ...,
                        ) -> None: ...
                    def ClearField(self, field_name: typing_extensions.Literal["url",b"url","url_type_hint",b"url_type_hint"]) -> None: ...

                OPEN_URI_ACTION_FIELD_NUMBER: builtins.int
                TITLE_FIELD_NUMBER: builtins.int
                DESCRIPTION_FIELD_NUMBER: builtins.int
                IMAGE_FIELD_NUMBER: builtins.int
                FOOTER_FIELD_NUMBER: builtins.int
                @property
                def open_uri_action(self) -> global___Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem.OpenUrlAction:
                    """Required. Action to present to the user."""
                    pass
                title: typing.Text = ...
                """Required. Title of the carousel item. Maximum of two lines of text."""

                description: typing.Text = ...
                """Optional. Description of the carousel item. Maximum of four lines of
                text.
                """

                @property
                def image(self) -> global___Intent.Message.Image:
                    """Optional. Hero image for the carousel item."""
                    pass
                footer: typing.Text = ...
                """Optional. Text that appears at the bottom of the Browse Carousel
                Card. Maximum of one line of text.
                """

                def __init__(self,
                    *,
                    open_uri_action : typing.Optional[global___Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem.OpenUrlAction] = ...,
                    title : typing.Text = ...,
                    description : typing.Text = ...,
                    image : typing.Optional[global___Intent.Message.Image] = ...,
                    footer : typing.Text = ...,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions.Literal["image",b"image","open_uri_action",b"open_uri_action"]) -> builtins.bool: ...
                def ClearField(self, field_name: typing_extensions.Literal["description",b"description","footer",b"footer","image",b"image","open_uri_action",b"open_uri_action","title",b"title"]) -> None: ...

            ITEMS_FIELD_NUMBER: builtins.int
            IMAGE_DISPLAY_OPTIONS_FIELD_NUMBER: builtins.int
            @property
            def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem]:
                """Required. List of items in the Browse Carousel Card. Minimum of two
                items, maximum of ten.
                """
                pass
            image_display_options: global___Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...
            """Optional. Settings for displaying the image. Applies to every image in
            [items][google.cloud.dialogflow.v2beta1.Intent.Message.BrowseCarouselCard.items].
            """

            def __init__(self,
                *,
                items : typing.Optional[typing.Iterable[global___Intent.Message.BrowseCarouselCard.BrowseCarouselCardItem]] = ...,
                image_display_options : global___Intent.Message.BrowseCarouselCard.ImageDisplayOptions.ValueType = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["image_display_options",b"image_display_options","items",b"items"]) -> None: ...

        class TableCard(google.protobuf.message.Message):
            """Table card for Actions on Google."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TITLE_FIELD_NUMBER: builtins.int
            SUBTITLE_FIELD_NUMBER: builtins.int
            IMAGE_FIELD_NUMBER: builtins.int
            COLUMN_PROPERTIES_FIELD_NUMBER: builtins.int
            ROWS_FIELD_NUMBER: builtins.int
            BUTTONS_FIELD_NUMBER: builtins.int
            title: typing.Text = ...
            """Required. Title of the card."""

            subtitle: typing.Text = ...
            """Optional. Subtitle to the title."""

            @property
            def image(self) -> global___Intent.Message.Image:
                """Optional. Image which should be displayed on the card."""
                pass
            @property
            def column_properties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.ColumnProperties]:
                """Optional. Display properties for the columns in this table."""
                pass
            @property
            def rows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.TableCardRow]:
                """Optional. Rows in this table of data."""
                pass
            @property
            def buttons(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.BasicCard.Button]:
                """Optional. List of buttons for the card."""
                pass
            def __init__(self,
                *,
                title : typing.Text = ...,
                subtitle : typing.Text = ...,
                image : typing.Optional[global___Intent.Message.Image] = ...,
                column_properties : typing.Optional[typing.Iterable[global___Intent.Message.ColumnProperties]] = ...,
                rows : typing.Optional[typing.Iterable[global___Intent.Message.TableCardRow]] = ...,
                buttons : typing.Optional[typing.Iterable[global___Intent.Message.BasicCard.Button]] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["image",b"image"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["buttons",b"buttons","column_properties",b"column_properties","image",b"image","rows",b"rows","subtitle",b"subtitle","title",b"title"]) -> None: ...

        class ColumnProperties(google.protobuf.message.Message):
            """Column properties for [TableCard][google.cloud.dialogflow.v2beta1.Intent.Message.TableCard]."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class _HorizontalAlignment:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _HorizontalAlignmentEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HorizontalAlignment.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                HORIZONTAL_ALIGNMENT_UNSPECIFIED: Intent.Message.ColumnProperties.HorizontalAlignment.ValueType = ...  # 0
                """Text is aligned to the leading edge of the column."""

                LEADING: Intent.Message.ColumnProperties.HorizontalAlignment.ValueType = ...  # 1
                """Text is aligned to the leading edge of the column."""

                CENTER: Intent.Message.ColumnProperties.HorizontalAlignment.ValueType = ...  # 2
                """Text is centered in the column."""

                TRAILING: Intent.Message.ColumnProperties.HorizontalAlignment.ValueType = ...  # 3
                """Text is aligned to the trailing edge of the column."""

            class HorizontalAlignment(_HorizontalAlignment, metaclass=_HorizontalAlignmentEnumTypeWrapper):
                """Text alignments within a cell."""
                pass

            HORIZONTAL_ALIGNMENT_UNSPECIFIED: Intent.Message.ColumnProperties.HorizontalAlignment.ValueType = ...  # 0
            """Text is aligned to the leading edge of the column."""

            LEADING: Intent.Message.ColumnProperties.HorizontalAlignment.ValueType = ...  # 1
            """Text is aligned to the leading edge of the column."""

            CENTER: Intent.Message.ColumnProperties.HorizontalAlignment.ValueType = ...  # 2
            """Text is centered in the column."""

            TRAILING: Intent.Message.ColumnProperties.HorizontalAlignment.ValueType = ...  # 3
            """Text is aligned to the trailing edge of the column."""


            HEADER_FIELD_NUMBER: builtins.int
            HORIZONTAL_ALIGNMENT_FIELD_NUMBER: builtins.int
            header: typing.Text = ...
            """Required. Column heading."""

            horizontal_alignment: global___Intent.Message.ColumnProperties.HorizontalAlignment.ValueType = ...
            """Optional. Defines text alignment for all cells in this column."""

            def __init__(self,
                *,
                header : typing.Text = ...,
                horizontal_alignment : global___Intent.Message.ColumnProperties.HorizontalAlignment.ValueType = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["header",b"header","horizontal_alignment",b"horizontal_alignment"]) -> None: ...

        class TableCardRow(google.protobuf.message.Message):
            """Row of [TableCard][google.cloud.dialogflow.v2beta1.Intent.Message.TableCard]."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            CELLS_FIELD_NUMBER: builtins.int
            DIVIDER_AFTER_FIELD_NUMBER: builtins.int
            @property
            def cells(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message.TableCardCell]:
                """Optional. List of cells that make up this row."""
                pass
            divider_after: builtins.bool = ...
            """Optional. Whether to add a visual divider after this row."""

            def __init__(self,
                *,
                cells : typing.Optional[typing.Iterable[global___Intent.Message.TableCardCell]] = ...,
                divider_after : builtins.bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["cells",b"cells","divider_after",b"divider_after"]) -> None: ...

        class TableCardCell(google.protobuf.message.Message):
            """Cell of [TableCardRow][google.cloud.dialogflow.v2beta1.Intent.Message.TableCardRow]."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TEXT_FIELD_NUMBER: builtins.int
            text: typing.Text = ...
            """Required. Text in this cell."""

            def __init__(self,
                *,
                text : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["text",b"text"]) -> None: ...

        TEXT_FIELD_NUMBER: builtins.int
        IMAGE_FIELD_NUMBER: builtins.int
        QUICK_REPLIES_FIELD_NUMBER: builtins.int
        CARD_FIELD_NUMBER: builtins.int
        PAYLOAD_FIELD_NUMBER: builtins.int
        SIMPLE_RESPONSES_FIELD_NUMBER: builtins.int
        BASIC_CARD_FIELD_NUMBER: builtins.int
        SUGGESTIONS_FIELD_NUMBER: builtins.int
        LINK_OUT_SUGGESTION_FIELD_NUMBER: builtins.int
        LIST_SELECT_FIELD_NUMBER: builtins.int
        CAROUSEL_SELECT_FIELD_NUMBER: builtins.int
        TELEPHONY_PLAY_AUDIO_FIELD_NUMBER: builtins.int
        TELEPHONY_SYNTHESIZE_SPEECH_FIELD_NUMBER: builtins.int
        TELEPHONY_TRANSFER_CALL_FIELD_NUMBER: builtins.int
        RBM_TEXT_FIELD_NUMBER: builtins.int
        RBM_STANDALONE_RICH_CARD_FIELD_NUMBER: builtins.int
        RBM_CAROUSEL_RICH_CARD_FIELD_NUMBER: builtins.int
        BROWSE_CAROUSEL_CARD_FIELD_NUMBER: builtins.int
        TABLE_CARD_FIELD_NUMBER: builtins.int
        MEDIA_CONTENT_FIELD_NUMBER: builtins.int
        PLATFORM_FIELD_NUMBER: builtins.int
        @property
        def text(self) -> global___Intent.Message.Text:
            """Returns a text response."""
            pass
        @property
        def image(self) -> global___Intent.Message.Image:
            """Displays an image."""
            pass
        @property
        def quick_replies(self) -> global___Intent.Message.QuickReplies:
            """Displays quick replies."""
            pass
        @property
        def card(self) -> global___Intent.Message.Card:
            """Displays a card."""
            pass
        @property
        def payload(self) -> google.protobuf.struct_pb2.Struct:
            """A custom platform-specific response."""
            pass
        @property
        def simple_responses(self) -> global___Intent.Message.SimpleResponses:
            """Returns a voice or text-only response for Actions on Google."""
            pass
        @property
        def basic_card(self) -> global___Intent.Message.BasicCard:
            """Displays a basic card for Actions on Google."""
            pass
        @property
        def suggestions(self) -> global___Intent.Message.Suggestions:
            """Displays suggestion chips for Actions on Google."""
            pass
        @property
        def link_out_suggestion(self) -> global___Intent.Message.LinkOutSuggestion:
            """Displays a link out suggestion chip for Actions on Google."""
            pass
        @property
        def list_select(self) -> global___Intent.Message.ListSelect:
            """Displays a list card for Actions on Google."""
            pass
        @property
        def carousel_select(self) -> global___Intent.Message.CarouselSelect:
            """Displays a carousel card for Actions on Google."""
            pass
        @property
        def telephony_play_audio(self) -> global___Intent.Message.TelephonyPlayAudio:
            """Plays audio from a file in Telephony Gateway."""
            pass
        @property
        def telephony_synthesize_speech(self) -> global___Intent.Message.TelephonySynthesizeSpeech:
            """Synthesizes speech in Telephony Gateway."""
            pass
        @property
        def telephony_transfer_call(self) -> global___Intent.Message.TelephonyTransferCall:
            """Transfers the call in Telephony Gateway."""
            pass
        @property
        def rbm_text(self) -> global___Intent.Message.RbmText:
            """Rich Business Messaging (RBM) text response.

            RBM allows businesses to send enriched and branded versions of SMS. See
            https://jibe.google.com/business-messaging.
            """
            pass
        @property
        def rbm_standalone_rich_card(self) -> global___Intent.Message.RbmStandaloneCard:
            """Standalone Rich Business Messaging (RBM) rich card response."""
            pass
        @property
        def rbm_carousel_rich_card(self) -> global___Intent.Message.RbmCarouselCard:
            """Rich Business Messaging (RBM) carousel rich card response."""
            pass
        @property
        def browse_carousel_card(self) -> global___Intent.Message.BrowseCarouselCard:
            """Browse carousel card for Actions on Google."""
            pass
        @property
        def table_card(self) -> global___Intent.Message.TableCard:
            """Table card for Actions on Google."""
            pass
        @property
        def media_content(self) -> global___Intent.Message.MediaContent:
            """The media content card for Actions on Google."""
            pass
        platform: global___Intent.Message.Platform.ValueType = ...
        """Optional. The platform that this message is intended for."""

        def __init__(self,
            *,
            text : typing.Optional[global___Intent.Message.Text] = ...,
            image : typing.Optional[global___Intent.Message.Image] = ...,
            quick_replies : typing.Optional[global___Intent.Message.QuickReplies] = ...,
            card : typing.Optional[global___Intent.Message.Card] = ...,
            payload : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
            simple_responses : typing.Optional[global___Intent.Message.SimpleResponses] = ...,
            basic_card : typing.Optional[global___Intent.Message.BasicCard] = ...,
            suggestions : typing.Optional[global___Intent.Message.Suggestions] = ...,
            link_out_suggestion : typing.Optional[global___Intent.Message.LinkOutSuggestion] = ...,
            list_select : typing.Optional[global___Intent.Message.ListSelect] = ...,
            carousel_select : typing.Optional[global___Intent.Message.CarouselSelect] = ...,
            telephony_play_audio : typing.Optional[global___Intent.Message.TelephonyPlayAudio] = ...,
            telephony_synthesize_speech : typing.Optional[global___Intent.Message.TelephonySynthesizeSpeech] = ...,
            telephony_transfer_call : typing.Optional[global___Intent.Message.TelephonyTransferCall] = ...,
            rbm_text : typing.Optional[global___Intent.Message.RbmText] = ...,
            rbm_standalone_rich_card : typing.Optional[global___Intent.Message.RbmStandaloneCard] = ...,
            rbm_carousel_rich_card : typing.Optional[global___Intent.Message.RbmCarouselCard] = ...,
            browse_carousel_card : typing.Optional[global___Intent.Message.BrowseCarouselCard] = ...,
            table_card : typing.Optional[global___Intent.Message.TableCard] = ...,
            media_content : typing.Optional[global___Intent.Message.MediaContent] = ...,
            platform : global___Intent.Message.Platform.ValueType = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["basic_card",b"basic_card","browse_carousel_card",b"browse_carousel_card","card",b"card","carousel_select",b"carousel_select","image",b"image","link_out_suggestion",b"link_out_suggestion","list_select",b"list_select","media_content",b"media_content","message",b"message","payload",b"payload","quick_replies",b"quick_replies","rbm_carousel_rich_card",b"rbm_carousel_rich_card","rbm_standalone_rich_card",b"rbm_standalone_rich_card","rbm_text",b"rbm_text","simple_responses",b"simple_responses","suggestions",b"suggestions","table_card",b"table_card","telephony_play_audio",b"telephony_play_audio","telephony_synthesize_speech",b"telephony_synthesize_speech","telephony_transfer_call",b"telephony_transfer_call","text",b"text"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["basic_card",b"basic_card","browse_carousel_card",b"browse_carousel_card","card",b"card","carousel_select",b"carousel_select","image",b"image","link_out_suggestion",b"link_out_suggestion","list_select",b"list_select","media_content",b"media_content","message",b"message","payload",b"payload","platform",b"platform","quick_replies",b"quick_replies","rbm_carousel_rich_card",b"rbm_carousel_rich_card","rbm_standalone_rich_card",b"rbm_standalone_rich_card","rbm_text",b"rbm_text","simple_responses",b"simple_responses","suggestions",b"suggestions","table_card",b"table_card","telephony_play_audio",b"telephony_play_audio","telephony_synthesize_speech",b"telephony_synthesize_speech","telephony_transfer_call",b"telephony_transfer_call","text",b"text"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["message",b"message"]) -> typing.Optional[typing_extensions.Literal["text","image","quick_replies","card","payload","simple_responses","basic_card","suggestions","link_out_suggestion","list_select","carousel_select","telephony_play_audio","telephony_synthesize_speech","telephony_transfer_call","rbm_text","rbm_standalone_rich_card","rbm_carousel_rich_card","browse_carousel_card","table_card","media_content"]]: ...

    class FollowupIntentInfo(google.protobuf.message.Message):
        """Represents a single followup intent in the chain."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FOLLOWUP_INTENT_NAME_FIELD_NUMBER: builtins.int
        PARENT_FOLLOWUP_INTENT_NAME_FIELD_NUMBER: builtins.int
        followup_intent_name: typing.Text = ...
        """The unique identifier of the followup intent.
        Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
        """

        parent_followup_intent_name: typing.Text = ...
        """The unique identifier of the followup intent's parent.
        Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
        """

        def __init__(self,
            *,
            followup_intent_name : typing.Text = ...,
            parent_followup_intent_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["followup_intent_name",b"followup_intent_name","parent_followup_intent_name",b"parent_followup_intent_name"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    WEBHOOK_STATE_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    IS_FALLBACK_FIELD_NUMBER: builtins.int
    ML_ENABLED_FIELD_NUMBER: builtins.int
    ML_DISABLED_FIELD_NUMBER: builtins.int
    LIVE_AGENT_HANDOFF_FIELD_NUMBER: builtins.int
    END_INTERACTION_FIELD_NUMBER: builtins.int
    INPUT_CONTEXT_NAMES_FIELD_NUMBER: builtins.int
    EVENTS_FIELD_NUMBER: builtins.int
    TRAINING_PHRASES_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    OUTPUT_CONTEXTS_FIELD_NUMBER: builtins.int
    RESET_CONTEXTS_FIELD_NUMBER: builtins.int
    PARAMETERS_FIELD_NUMBER: builtins.int
    MESSAGES_FIELD_NUMBER: builtins.int
    DEFAULT_RESPONSE_PLATFORMS_FIELD_NUMBER: builtins.int
    ROOT_FOLLOWUP_INTENT_NAME_FIELD_NUMBER: builtins.int
    PARENT_FOLLOWUP_INTENT_NAME_FIELD_NUMBER: builtins.int
    FOLLOWUP_INTENT_INFO_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Optional. The unique identifier of this intent.
    Required for [Intents.UpdateIntent][google.cloud.dialogflow.v2beta1.Intents.UpdateIntent] and [Intents.BatchUpdateIntents][google.cloud.dialogflow.v2beta1.Intents.BatchUpdateIntents]
    methods.
    Supported formats:

    - `projects/<Project ID>/agent/intents/<Intent ID>`
    - `projects/<Project ID>/locations/<Location ID>/agent/intents/<Intent ID>`
    """

    display_name: typing.Text = ...
    """Required. The name of this intent."""

    webhook_state: global___Intent.WebhookState.ValueType = ...
    """Optional. Indicates whether webhooks are enabled for the intent."""

    priority: builtins.int = ...
    """Optional. The priority of this intent. Higher numbers represent higher
    priorities.

    - If the supplied value is unspecified or 0, the service
      translates the value to 500,000, which corresponds to the
      `Normal` priority in the console.
    - If the supplied value is negative, the intent is ignored
      in runtime detect intent requests.
    """

    is_fallback: builtins.bool = ...
    """Optional. Indicates whether this is a fallback intent."""

    ml_enabled: builtins.bool = ...
    """Optional. Indicates whether Machine Learning is enabled for the intent.
    Note: If `ml_enabled` setting is set to false, then this intent is not
    taken into account during inference in `ML ONLY` match mode. Also,
    auto-markup in the UI is turned off.
    DEPRECATED! Please use `ml_disabled` field instead.
    NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false,
    then the default value is determined as follows:

    - Before April 15th, 2018 the default is:
      ml_enabled = false / ml_disabled = true.
    - After April 15th, 2018 the default is:
      ml_enabled = true / ml_disabled = false.
    """

    ml_disabled: builtins.bool = ...
    """Optional. Indicates whether Machine Learning is disabled for the intent.
    Note: If `ml_disabled` setting is set to true, then this intent is not
    taken into account during inference in `ML ONLY` match mode. Also,
    auto-markup in the UI is turned off.
    """

    live_agent_handoff: builtins.bool = ...
    """Optional. Indicates that a live agent should be brought in to handle the
    interaction with the user. In most cases, when you set this flag to true,
    you would also want to set end_interaction to true as well. Default is
    false.
    """

    end_interaction: builtins.bool = ...
    """Optional. Indicates that this intent ends an interaction. Some integrations
    (e.g., Actions on Google or Dialogflow phone gateway) use this information
    to close interaction with an end user. Default is false.
    """

    @property
    def input_context_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. The list of context names required for this intent to be
        triggered.
        Formats:

        - `projects/<Project ID>/agent/sessions/-/contexts/<Context ID>`
        - `projects/<Project ID>/locations/<Location
          ID>/agent/sessions/-/contexts/<Context ID>`
        """
        pass
    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. The collection of event names that trigger the intent.
        If the collection of input contexts is not empty, all of the contexts must
        be present in the active user session for an event to trigger this intent.
        Event names are limited to 150 characters.
        """
        pass
    @property
    def training_phrases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.TrainingPhrase]:
        """Optional. The collection of examples that the agent is
        trained on.
        """
        pass
    action: typing.Text = ...
    """Optional. The name of the action associated with the intent.
    Note: The action name must not contain whitespaces.
    """

    @property
    def output_contexts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.dialogflow.v2beta1.context_pb2.Context]:
        """Optional. The collection of contexts that are activated when the intent
        is matched. Context messages in this collection should not set the
        parameters field. Setting the `lifespan_count` to 0 will reset the context
        when the intent is matched.
        Format: `projects/<Project ID>/agent/sessions/-/contexts/<Context ID>`.
        """
        pass
    reset_contexts: builtins.bool = ...
    """Optional. Indicates whether to delete all contexts in the current
    session when this intent is matched.
    """

    @property
    def parameters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Parameter]:
        """Optional. The collection of parameters associated with the intent."""
        pass
    @property
    def messages(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.Message]:
        """Optional. The collection of rich messages corresponding to the
        `Response` field in the Dialogflow console.
        """
        pass
    @property
    def default_response_platforms(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Intent.Message.Platform.ValueType]:
        """Optional. The list of platforms for which the first responses will be
        copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
        """
        pass
    root_followup_intent_name: typing.Text = ...
    """Output only. The unique identifier of the root intent in the chain of
    followup intents. It identifies the correct followup intents chain for
    this intent.

    Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
    """

    parent_followup_intent_name: typing.Text = ...
    """Optional. The unique identifier of the parent intent in the
    chain of followup intents. You can set this field when creating an intent,
    for example with [CreateIntent][google.cloud.dialogflow.v2beta1.Intents.CreateIntent] or
    [BatchUpdateIntents][google.cloud.dialogflow.v2beta1.Intents.BatchUpdateIntents], in order to make this
    intent a followup intent.

    It identifies the parent followup intent.
    Format: `projects/<Project ID>/agent/intents/<Intent ID>`.
    """

    @property
    def followup_intent_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent.FollowupIntentInfo]:
        """Output only. Information about all followup intents that have this intent as
        a direct or indirect parent. We populate this field only in the output.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        webhook_state : global___Intent.WebhookState.ValueType = ...,
        priority : builtins.int = ...,
        is_fallback : builtins.bool = ...,
        ml_enabled : builtins.bool = ...,
        ml_disabled : builtins.bool = ...,
        live_agent_handoff : builtins.bool = ...,
        end_interaction : builtins.bool = ...,
        input_context_names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        events : typing.Optional[typing.Iterable[typing.Text]] = ...,
        training_phrases : typing.Optional[typing.Iterable[global___Intent.TrainingPhrase]] = ...,
        action : typing.Text = ...,
        output_contexts : typing.Optional[typing.Iterable[google.cloud.dialogflow.v2beta1.context_pb2.Context]] = ...,
        reset_contexts : builtins.bool = ...,
        parameters : typing.Optional[typing.Iterable[global___Intent.Parameter]] = ...,
        messages : typing.Optional[typing.Iterable[global___Intent.Message]] = ...,
        default_response_platforms : typing.Optional[typing.Iterable[global___Intent.Message.Platform.ValueType]] = ...,
        root_followup_intent_name : typing.Text = ...,
        parent_followup_intent_name : typing.Text = ...,
        followup_intent_info : typing.Optional[typing.Iterable[global___Intent.FollowupIntentInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","default_response_platforms",b"default_response_platforms","display_name",b"display_name","end_interaction",b"end_interaction","events",b"events","followup_intent_info",b"followup_intent_info","input_context_names",b"input_context_names","is_fallback",b"is_fallback","live_agent_handoff",b"live_agent_handoff","messages",b"messages","ml_disabled",b"ml_disabled","ml_enabled",b"ml_enabled","name",b"name","output_contexts",b"output_contexts","parameters",b"parameters","parent_followup_intent_name",b"parent_followup_intent_name","priority",b"priority","reset_contexts",b"reset_contexts","root_followup_intent_name",b"root_followup_intent_name","training_phrases",b"training_phrases","webhook_state",b"webhook_state"]) -> None: ...
global___Intent = Intent

class ListIntentsRequest(google.protobuf.message.Message):
    """The request message for [Intents.ListIntents][google.cloud.dialogflow.v2beta1.Intents.ListIntents]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    INTENT_VIEW_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The agent to list all intents from.
    Format: `projects/<Project ID>/agent` or `projects/<Project
    ID>/locations/<Location ID>/agent`.

    Alternatively, you can specify the environment to list intents for.
    Format: `projects/<Project ID>/agent/environments/<Environment ID>`
    or `projects/<Project ID>/locations/<Location
    ID>/agent/environments/<Environment ID>`.
    Note: training phrases of the intents will not be returned for non-draft
    environment.
    """

    language_code: typing.Text = ...
    """Optional. The language used to access language-specific data.
    If not specified, the agent's default language is used.
    For more information, see
    [Multilingual intent and entity
    data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
    """

    intent_view: global___IntentView.ValueType = ...
    """Optional. The resource view to apply to the returned intent."""

    page_size: builtins.int = ...
    """Optional. The maximum number of items to return in a single page. By
    default 100 and at most 1000.
    """

    page_token: typing.Text = ...
    """Optional. The next_page_token value returned from a previous list request."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        language_code : typing.Text = ...,
        intent_view : global___IntentView.ValueType = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["intent_view",b"intent_view","language_code",b"language_code","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListIntentsRequest = ListIntentsRequest

class ListIntentsResponse(google.protobuf.message.Message):
    """The response message for [Intents.ListIntents][google.cloud.dialogflow.v2beta1.Intents.ListIntents]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTENTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def intents(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent]:
        """The list of agent intents. There will be a maximum number of items
        returned based on the page_size field in the request.
        """
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no
    more results in the list.
    """

    def __init__(self,
        *,
        intents : typing.Optional[typing.Iterable[global___Intent]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["intents",b"intents","next_page_token",b"next_page_token"]) -> None: ...
global___ListIntentsResponse = ListIntentsResponse

class GetIntentRequest(google.protobuf.message.Message):
    """The request message for [Intents.GetIntent][google.cloud.dialogflow.v2beta1.Intents.GetIntent]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    INTENT_VIEW_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the intent.
    Supported formats:

    - `projects/<Project ID>/agent/intents/<Intent ID>`
    - `projects/<Project ID>/locations/<Location ID>/agent/intents/<Intent ID>`
    """

    language_code: typing.Text = ...
    """Optional. The language used to access language-specific data.
    If not specified, the agent's default language is used.
    For more information, see
    [Multilingual intent and entity
    data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
    """

    intent_view: global___IntentView.ValueType = ...
    """Optional. The resource view to apply to the returned intent."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        language_code : typing.Text = ...,
        intent_view : global___IntentView.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["intent_view",b"intent_view","language_code",b"language_code","name",b"name"]) -> None: ...
global___GetIntentRequest = GetIntentRequest

class CreateIntentRequest(google.protobuf.message.Message):
    """The request message for [Intents.CreateIntent][google.cloud.dialogflow.v2beta1.Intents.CreateIntent]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    INTENT_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    INTENT_VIEW_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The agent to create a intent for.
    Supported formats:

    - `projects/<Project ID>/agent`
    - `projects/<Project ID>/locations/<Location ID>/agent`
    """

    @property
    def intent(self) -> global___Intent:
        """Required. The intent to create."""
        pass
    language_code: typing.Text = ...
    """Optional. The language used to access language-specific data.
    If not specified, the agent's default language is used.
    For more information, see
    [Multilingual intent and entity
    data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
    """

    intent_view: global___IntentView.ValueType = ...
    """Optional. The resource view to apply to the returned intent."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        intent : typing.Optional[global___Intent] = ...,
        language_code : typing.Text = ...,
        intent_view : global___IntentView.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["intent",b"intent"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["intent",b"intent","intent_view",b"intent_view","language_code",b"language_code","parent",b"parent"]) -> None: ...
global___CreateIntentRequest = CreateIntentRequest

class UpdateIntentRequest(google.protobuf.message.Message):
    """The request message for [Intents.UpdateIntent][google.cloud.dialogflow.v2beta1.Intents.UpdateIntent]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTENT_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    INTENT_VIEW_FIELD_NUMBER: builtins.int
    @property
    def intent(self) -> global___Intent:
        """Required. The intent to update."""
        pass
    language_code: typing.Text = ...
    """Optional. The language used to access language-specific data.
    If not specified, the agent's default language is used.
    For more information, see
    [Multilingual intent and entity
    data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
    """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. The mask to control which fields get updated."""
        pass
    intent_view: global___IntentView.ValueType = ...
    """Optional. The resource view to apply to the returned intent."""

    def __init__(self,
        *,
        intent : typing.Optional[global___Intent] = ...,
        language_code : typing.Text = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        intent_view : global___IntentView.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["intent",b"intent","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["intent",b"intent","intent_view",b"intent_view","language_code",b"language_code","update_mask",b"update_mask"]) -> None: ...
global___UpdateIntentRequest = UpdateIntentRequest

class DeleteIntentRequest(google.protobuf.message.Message):
    """The request message for [Intents.DeleteIntent][google.cloud.dialogflow.v2beta1.Intents.DeleteIntent]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the intent to delete. If this intent has direct or
    indirect followup intents, we also delete them.

    Supported formats:

    - `projects/<Project ID>/agent/intents/<Intent ID>`
    - `projects/<Project ID>/locations/<Location ID>/agent/intents/<Intent ID>`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteIntentRequest = DeleteIntentRequest

class BatchUpdateIntentsRequest(google.protobuf.message.Message):
    """The request message for [Intents.BatchUpdateIntents][google.cloud.dialogflow.v2beta1.Intents.BatchUpdateIntents]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    INTENT_BATCH_URI_FIELD_NUMBER: builtins.int
    INTENT_BATCH_INLINE_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    INTENT_VIEW_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the agent to update or create intents in.
    Supported formats:

    - `projects/<Project ID>/agent`
    - `projects/<Project ID>/locations/<Location ID>/agent`
    """

    intent_batch_uri: typing.Text = ...
    """The URI to a Google Cloud Storage file containing intents to update or
    create. The file format can either be a serialized proto (of IntentBatch
    type) or JSON object. Note: The URI must start with "gs://".
    """

    @property
    def intent_batch_inline(self) -> global___IntentBatch:
        """The collection of intents to update or create."""
        pass
    language_code: typing.Text = ...
    """Optional. The language used to access language-specific data.
    If not specified, the agent's default language is used.
    For more information, see
    [Multilingual intent and entity
    data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
    """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. The mask to control which fields get updated."""
        pass
    intent_view: global___IntentView.ValueType = ...
    """Optional. The resource view to apply to the returned intent."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        intent_batch_uri : typing.Text = ...,
        intent_batch_inline : typing.Optional[global___IntentBatch] = ...,
        language_code : typing.Text = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        intent_view : global___IntentView.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["intent_batch",b"intent_batch","intent_batch_inline",b"intent_batch_inline","intent_batch_uri",b"intent_batch_uri","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["intent_batch",b"intent_batch","intent_batch_inline",b"intent_batch_inline","intent_batch_uri",b"intent_batch_uri","intent_view",b"intent_view","language_code",b"language_code","parent",b"parent","update_mask",b"update_mask"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["intent_batch",b"intent_batch"]) -> typing.Optional[typing_extensions.Literal["intent_batch_uri","intent_batch_inline"]]: ...
global___BatchUpdateIntentsRequest = BatchUpdateIntentsRequest

class BatchUpdateIntentsResponse(google.protobuf.message.Message):
    """The response message for [Intents.BatchUpdateIntents][google.cloud.dialogflow.v2beta1.Intents.BatchUpdateIntents]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTENTS_FIELD_NUMBER: builtins.int
    @property
    def intents(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent]:
        """The collection of updated or created intents."""
        pass
    def __init__(self,
        *,
        intents : typing.Optional[typing.Iterable[global___Intent]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["intents",b"intents"]) -> None: ...
global___BatchUpdateIntentsResponse = BatchUpdateIntentsResponse

class BatchDeleteIntentsRequest(google.protobuf.message.Message):
    """The request message for [Intents.BatchDeleteIntents][google.cloud.dialogflow.v2beta1.Intents.BatchDeleteIntents]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    INTENTS_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the agent to delete all entities types for.
    Supported formats:

    - `projects/<Project ID>/agent`
    - `projects/<Project ID>/locations/<Location ID>/agent`
    """

    @property
    def intents(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent]:
        """Required. The collection of intents to delete. Only intent `name` must be
        filled in.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        intents : typing.Optional[typing.Iterable[global___Intent]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["intents",b"intents","parent",b"parent"]) -> None: ...
global___BatchDeleteIntentsRequest = BatchDeleteIntentsRequest

class IntentBatch(google.protobuf.message.Message):
    """This message is a wrapper around a collection of intents."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTENTS_FIELD_NUMBER: builtins.int
    @property
    def intents(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent]:
        """A collection of intents."""
        pass
    def __init__(self,
        *,
        intents : typing.Optional[typing.Iterable[global___Intent]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["intents",b"intents"]) -> None: ...
global___IntentBatch = IntentBatch
