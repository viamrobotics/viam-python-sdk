"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.dialogflow.cx.v3.test_case_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Environment(google.protobuf.message.Message):
    """Represents an environment for an agent. You can create multiple versions
    of your agent and publish them to separate environments. When you edit an
    agent, you are editing the draft agent. At any point, you can save the draft
    agent as an agent version, which is an immutable snapshot of your agent. When
    you save the draft agent, it is published to the default environment. When
    you create agent versions, you can publish them to custom environments. You
    can create a variety of custom environments for testing, development,
    production, etc.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class VersionConfig(google.protobuf.message.Message):
        """Configuration for the version."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VERSION_FIELD_NUMBER: builtins.int
        version: typing.Text = ...
        """Required. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
        ID>/flows/<Flow ID>/versions/<Version ID>.
        """

        def __init__(self,
            *,
            version : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["version",b"version"]) -> None: ...

    class TestCasesConfig(google.protobuf.message.Message):
        """The configuration for continuous tests."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TEST_CASES_FIELD_NUMBER: builtins.int
        ENABLE_CONTINUOUS_RUN_FIELD_NUMBER: builtins.int
        ENABLE_PREDEPLOYMENT_RUN_FIELD_NUMBER: builtins.int
        @property
        def test_cases(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """A list of test case names to run. They should be under the same agent.
            Format of each test case name: `projects/<Project ID>/locations/
            <Location ID>/agents/<AgentID>/testCases/<TestCase ID>`
            """
            pass
        enable_continuous_run: builtins.bool = ...
        """Whether to run test cases in [TestCasesConfig.test_cases][google.cloud.dialogflow.cx.v3.Environment.TestCasesConfig.test_cases] periodically.
        Default false. If set to ture, run once a day.
        """

        enable_predeployment_run: builtins.bool = ...
        """Whether to run test cases in [TestCasesConfig.test_cases][google.cloud.dialogflow.cx.v3.Environment.TestCasesConfig.test_cases] before
        deploying a flow version to the environment. Default false.
        """

        def __init__(self,
            *,
            test_cases : typing.Optional[typing.Iterable[typing.Text]] = ...,
            enable_continuous_run : builtins.bool = ...,
            enable_predeployment_run : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["enable_continuous_run",b"enable_continuous_run","enable_predeployment_run",b"enable_predeployment_run","test_cases",b"test_cases"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    VERSION_CONFIGS_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    TEST_CASES_CONFIG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the environment.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>`.
    """

    display_name: typing.Text = ...
    """Required. The human-readable name of the environment (unique in an agent). Limit of
    64 characters.
    """

    description: typing.Text = ...
    """The human-readable description of the environment. The maximum length is
    500 characters. If exceeded, the request is rejected.
    """

    @property
    def version_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Environment.VersionConfig]:
        """Required. A list of configurations for flow versions. You should include version
        configs for all flows that are reachable from [`Start
        Flow`][Agent.start_flow] in the agent. Otherwise, an error will be
        returned.
        """
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Update time of this environment."""
        pass
    @property
    def test_cases_config(self) -> global___Environment.TestCasesConfig:
        """The test cases config for continuous tests of this environment."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        version_configs : typing.Optional[typing.Iterable[global___Environment.VersionConfig]] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        test_cases_config : typing.Optional[global___Environment.TestCasesConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_cases_config",b"test_cases_config","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","display_name",b"display_name","name",b"name","test_cases_config",b"test_cases_config","update_time",b"update_time","version_configs",b"version_configs"]) -> None: ...
global___Environment = Environment

class ListEnvironmentsRequest(google.protobuf.message.Message):
    """The request message for [Environments.ListEnvironments][google.cloud.dialogflow.cx.v3.Environments.ListEnvironments]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The [Agent][google.cloud.dialogflow.cx.v3.Agent] to list all environments for.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
    """

    page_size: builtins.int = ...
    """The maximum number of items to return in a single page. By default 20 and
    at most 100.
    """

    page_token: typing.Text = ...
    """The next_page_token value returned from a previous list request."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListEnvironmentsRequest = ListEnvironmentsRequest

class ListEnvironmentsResponse(google.protobuf.message.Message):
    """The response message for [Environments.ListEnvironments][google.cloud.dialogflow.cx.v3.Environments.ListEnvironments]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENVIRONMENTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def environments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Environment]:
        """The list of environments. There will be a maximum number of items
        returned based on the page_size field in the request. The list may in some
        cases be empty or contain fewer entries than page_size even if this isn't
        the last page.
        """
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results in the list.
    """

    def __init__(self,
        *,
        environments : typing.Optional[typing.Iterable[global___Environment]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["environments",b"environments","next_page_token",b"next_page_token"]) -> None: ...
global___ListEnvironmentsResponse = ListEnvironmentsResponse

class GetEnvironmentRequest(google.protobuf.message.Message):
    """The request message for [Environments.GetEnvironment][google.cloud.dialogflow.cx.v3.Environments.GetEnvironment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the [Environment][google.cloud.dialogflow.cx.v3.Environment].
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetEnvironmentRequest = GetEnvironmentRequest

class CreateEnvironmentRequest(google.protobuf.message.Message):
    """The request message for [Environments.CreateEnvironment][google.cloud.dialogflow.cx.v3.Environments.CreateEnvironment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The [Agent][google.cloud.dialogflow.cx.v3.Agent] to create an [Environment][google.cloud.dialogflow.cx.v3.Environment] for.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
    """

    @property
    def environment(self) -> global___Environment:
        """Required. The environment to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        environment : typing.Optional[global___Environment] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["environment",b"environment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["environment",b"environment","parent",b"parent"]) -> None: ...
global___CreateEnvironmentRequest = CreateEnvironmentRequest

class UpdateEnvironmentRequest(google.protobuf.message.Message):
    """The request message for [Environments.UpdateEnvironment][google.cloud.dialogflow.cx.v3.Environments.UpdateEnvironment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def environment(self) -> global___Environment:
        """Required. The environment to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The mask to control which fields get updated."""
        pass
    def __init__(self,
        *,
        environment : typing.Optional[global___Environment] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["environment",b"environment","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["environment",b"environment","update_mask",b"update_mask"]) -> None: ...
global___UpdateEnvironmentRequest = UpdateEnvironmentRequest

class DeleteEnvironmentRequest(google.protobuf.message.Message):
    """The request message for [Environments.DeleteEnvironment][google.cloud.dialogflow.cx.v3.Environments.DeleteEnvironment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the [Environment][google.cloud.dialogflow.cx.v3.Environment] to delete.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteEnvironmentRequest = DeleteEnvironmentRequest

class LookupEnvironmentHistoryRequest(google.protobuf.message.Message):
    """The request message for [Environments.LookupEnvironmentHistory][google.cloud.dialogflow.cx.v3.Environments.LookupEnvironmentHistory]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Resource name of the environment to look up the history for.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>`.
    """

    page_size: builtins.int = ...
    """The maximum number of items to return in a single page. By default 100 and
    at most 1000.
    """

    page_token: typing.Text = ...
    """The next_page_token value returned from a previous list request."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___LookupEnvironmentHistoryRequest = LookupEnvironmentHistoryRequest

class LookupEnvironmentHistoryResponse(google.protobuf.message.Message):
    """The response message for [Environments.LookupEnvironmentHistory][google.cloud.dialogflow.cx.v3.Environments.LookupEnvironmentHistory]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENVIRONMENTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def environments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Environment]:
        """Represents a list of snapshots for an environment. Time of the snapshots is
        stored in [`update_time`][google.cloud.dialogflow.cx.v3.Environment.update_time].
        """
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results in the list.
    """

    def __init__(self,
        *,
        environments : typing.Optional[typing.Iterable[global___Environment]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["environments",b"environments","next_page_token",b"next_page_token"]) -> None: ...
global___LookupEnvironmentHistoryResponse = LookupEnvironmentHistoryResponse

class ContinuousTestResult(google.protobuf.message.Message):
    """Represents a result from running a test case in an agent environment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AggregatedTestResult:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AggregatedTestResultEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AggregatedTestResult.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        AGGREGATED_TEST_RESULT_UNSPECIFIED: ContinuousTestResult.AggregatedTestResult.ValueType = ...  # 0
        """Not specified. Should never be used."""

        PASSED: ContinuousTestResult.AggregatedTestResult.ValueType = ...  # 1
        """All the tests passed."""

        FAILED: ContinuousTestResult.AggregatedTestResult.ValueType = ...  # 2
        """At least one test did not pass."""

    class AggregatedTestResult(_AggregatedTestResult, metaclass=_AggregatedTestResultEnumTypeWrapper):
        """The overall result for a continuous test run in an agent environment."""
        pass

    AGGREGATED_TEST_RESULT_UNSPECIFIED: ContinuousTestResult.AggregatedTestResult.ValueType = ...  # 0
    """Not specified. Should never be used."""

    PASSED: ContinuousTestResult.AggregatedTestResult.ValueType = ...  # 1
    """All the tests passed."""

    FAILED: ContinuousTestResult.AggregatedTestResult.ValueType = ...  # 2
    """At least one test did not pass."""


    NAME_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    TEST_CASE_RESULTS_FIELD_NUMBER: builtins.int
    RUN_TIME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name for the continuous test result. Format:
    `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment
    ID>/continuousTestResults/<ContinuousTestResult ID>`.
    """

    result: global___ContinuousTestResult.AggregatedTestResult.ValueType = ...
    """The result of this continuous test run, i.e. whether all the tests in this
    continuous test run pass or not.
    """

    @property
    def test_case_results(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of individual test case results names in this continuous test run."""
        pass
    @property
    def run_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when the continuous testing run starts."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        result : global___ContinuousTestResult.AggregatedTestResult.ValueType = ...,
        test_case_results : typing.Optional[typing.Iterable[typing.Text]] = ...,
        run_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["run_time",b"run_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","result",b"result","run_time",b"run_time","test_case_results",b"test_case_results"]) -> None: ...
global___ContinuousTestResult = ContinuousTestResult

class RunContinuousTestRequest(google.protobuf.message.Message):
    """The request message for [Environments.RunContinuousTest][google.cloud.dialogflow.cx.v3.Environments.RunContinuousTest]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    environment: typing.Text = ...
    """Required. Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>`.
    """

    def __init__(self,
        *,
        environment : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["environment",b"environment"]) -> None: ...
global___RunContinuousTestRequest = RunContinuousTestRequest

class RunContinuousTestResponse(google.protobuf.message.Message):
    """The response message for [Environments.RunContinuousTest][google.cloud.dialogflow.cx.v3.Environments.RunContinuousTest]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTINUOUS_TEST_RESULT_FIELD_NUMBER: builtins.int
    @property
    def continuous_test_result(self) -> global___ContinuousTestResult:
        """The result for a continuous test run."""
        pass
    def __init__(self,
        *,
        continuous_test_result : typing.Optional[global___ContinuousTestResult] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["continuous_test_result",b"continuous_test_result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["continuous_test_result",b"continuous_test_result"]) -> None: ...
global___RunContinuousTestResponse = RunContinuousTestResponse

class RunContinuousTestMetadata(google.protobuf.message.Message):
    """Metadata returned for the [Environments.RunContinuousTest][google.cloud.dialogflow.cx.v3.Environments.RunContinuousTest] long running
    operation.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.dialogflow.cx.v3.test_case_pb2.TestError]:
        """The test errors."""
        pass
    def __init__(self,
        *,
        errors : typing.Optional[typing.Iterable[google.cloud.dialogflow.cx.v3.test_case_pb2.TestError]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors"]) -> None: ...
global___RunContinuousTestMetadata = RunContinuousTestMetadata

class ListContinuousTestResultsRequest(google.protobuf.message.Message):
    """The request message for [Environments.ListContinuousTestResults][google.cloud.dialogflow.cx.v3.Environments.ListContinuousTestResults]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The environment to list results for.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/
    environments/<Environment ID>`.
    """

    page_size: builtins.int = ...
    """The maximum number of items to return in a single page. By default 100 and
    at most 1000.
    """

    page_token: typing.Text = ...
    """The next_page_token value returned from a previous list request."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListContinuousTestResultsRequest = ListContinuousTestResultsRequest

class ListContinuousTestResultsResponse(google.protobuf.message.Message):
    """The response message for [Environments.ListTestCaseResults][]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTINUOUS_TEST_RESULTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def continuous_test_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ContinuousTestResult]:
        """The list of continuous test results."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results in the list.
    """

    def __init__(self,
        *,
        continuous_test_results : typing.Optional[typing.Iterable[global___ContinuousTestResult]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["continuous_test_results",b"continuous_test_results","next_page_token",b"next_page_token"]) -> None: ...
global___ListContinuousTestResultsResponse = ListContinuousTestResultsResponse

class DeployFlowRequest(google.protobuf.message.Message):
    """The request message for [Environments.DeployFlow][google.cloud.dialogflow.cx.v3.Environments.DeployFlow]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    FLOW_VERSION_FIELD_NUMBER: builtins.int
    environment: typing.Text = ...
    """Required. The environment to deploy the flow to.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/
    environments/<Environment ID>`.
    """

    flow_version: typing.Text = ...
    """Required. The flow version to deploy.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/
    flows/<Flow ID>/versions/<Version ID>`.
    """

    def __init__(self,
        *,
        environment : typing.Text = ...,
        flow_version : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["environment",b"environment","flow_version",b"flow_version"]) -> None: ...
global___DeployFlowRequest = DeployFlowRequest

class DeployFlowResponse(google.protobuf.message.Message):
    """The response message for [Environments.DeployFlow][google.cloud.dialogflow.cx.v3.Environments.DeployFlow]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    DEPLOYMENT_FIELD_NUMBER: builtins.int
    @property
    def environment(self) -> global___Environment:
        """The updated environment where the flow is deployed."""
        pass
    deployment: typing.Text = ...
    """The name of the flow version [Deployment][google.cloud.dialogflow.cx.v3.Deployment].
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/
    environments/<Environment ID>/deployments/<Deployment ID>`.
    """

    def __init__(self,
        *,
        environment : typing.Optional[global___Environment] = ...,
        deployment : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["environment",b"environment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["deployment",b"deployment","environment",b"environment"]) -> None: ...
global___DeployFlowResponse = DeployFlowResponse

class DeployFlowMetadata(google.protobuf.message.Message):
    """Metadata returned for the [Environments.DeployFlow][google.cloud.dialogflow.cx.v3.Environments.DeployFlow] long running
    operation.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEST_ERRORS_FIELD_NUMBER: builtins.int
    @property
    def test_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.dialogflow.cx.v3.test_case_pb2.TestError]:
        """Errors of running deployment tests."""
        pass
    def __init__(self,
        *,
        test_errors : typing.Optional[typing.Iterable[google.cloud.dialogflow.cx.v3.test_case_pb2.TestError]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["test_errors",b"test_errors"]) -> None: ...
global___DeployFlowMetadata = DeployFlowMetadata
