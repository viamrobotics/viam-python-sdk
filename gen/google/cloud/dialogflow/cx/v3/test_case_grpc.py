# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/dialogflow/cx/v3/test_case.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.cloud.dialogflow.cx.v3.flow_pb2
import google.cloud.dialogflow.cx.v3.intent_pb2
import google.cloud.dialogflow.cx.v3.page_pb2
import google.cloud.dialogflow.cx.v3.response_message_pb2
import google.cloud.dialogflow.cx.v3.session_pb2
import google.cloud.dialogflow.cx.v3.transition_route_group_pb2
import google.longrunning.operations_pb2
import google.protobuf.empty_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import google.cloud.dialogflow.cx.v3.test_case_pb2


class TestCasesBase(abc.ABC):

    @abc.abstractmethod
    async def ListTestCases(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCasesRequest, google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCasesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def BatchDeleteTestCases(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.BatchDeleteTestCasesRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def GetTestCase(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.GetTestCaseRequest, google.cloud.dialogflow.cx.v3.test_case_pb2.TestCase]') -> None:
        pass

    @abc.abstractmethod
    async def CreateTestCase(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.CreateTestCaseRequest, google.cloud.dialogflow.cx.v3.test_case_pb2.TestCase]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateTestCase(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.UpdateTestCaseRequest, google.cloud.dialogflow.cx.v3.test_case_pb2.TestCase]') -> None:
        pass

    @abc.abstractmethod
    async def RunTestCase(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.RunTestCaseRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def BatchRunTestCases(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.BatchRunTestCasesRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def CalculateCoverage(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.CalculateCoverageRequest, google.cloud.dialogflow.cx.v3.test_case_pb2.CalculateCoverageResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ImportTestCases(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.ImportTestCasesRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ExportTestCases(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.ExportTestCasesRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ListTestCaseResults(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCaseResultsRequest, google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCaseResultsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetTestCaseResult(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3.test_case_pb2.GetTestCaseResultRequest, google.cloud.dialogflow.cx.v3.test_case_pb2.TestCaseResult]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.dialogflow.cx.v3.TestCases/ListTestCases': grpclib.const.Handler(
                self.ListTestCases,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCasesRequest,
                google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCasesResponse,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/BatchDeleteTestCases': grpclib.const.Handler(
                self.BatchDeleteTestCases,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.BatchDeleteTestCasesRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/GetTestCase': grpclib.const.Handler(
                self.GetTestCase,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.GetTestCaseRequest,
                google.cloud.dialogflow.cx.v3.test_case_pb2.TestCase,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/CreateTestCase': grpclib.const.Handler(
                self.CreateTestCase,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.CreateTestCaseRequest,
                google.cloud.dialogflow.cx.v3.test_case_pb2.TestCase,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/UpdateTestCase': grpclib.const.Handler(
                self.UpdateTestCase,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.UpdateTestCaseRequest,
                google.cloud.dialogflow.cx.v3.test_case_pb2.TestCase,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/RunTestCase': grpclib.const.Handler(
                self.RunTestCase,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.RunTestCaseRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/BatchRunTestCases': grpclib.const.Handler(
                self.BatchRunTestCases,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.BatchRunTestCasesRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/CalculateCoverage': grpclib.const.Handler(
                self.CalculateCoverage,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.CalculateCoverageRequest,
                google.cloud.dialogflow.cx.v3.test_case_pb2.CalculateCoverageResponse,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/ImportTestCases': grpclib.const.Handler(
                self.ImportTestCases,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.ImportTestCasesRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/ExportTestCases': grpclib.const.Handler(
                self.ExportTestCases,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.ExportTestCasesRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/ListTestCaseResults': grpclib.const.Handler(
                self.ListTestCaseResults,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCaseResultsRequest,
                google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCaseResultsResponse,
            ),
            '/google.cloud.dialogflow.cx.v3.TestCases/GetTestCaseResult': grpclib.const.Handler(
                self.GetTestCaseResult,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3.test_case_pb2.GetTestCaseResultRequest,
                google.cloud.dialogflow.cx.v3.test_case_pb2.TestCaseResult,
            ),
        }


class TestCasesStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListTestCases = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/ListTestCases',
            google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCasesRequest,
            google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCasesResponse,
        )
        self.BatchDeleteTestCases = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/BatchDeleteTestCases',
            google.cloud.dialogflow.cx.v3.test_case_pb2.BatchDeleteTestCasesRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.GetTestCase = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/GetTestCase',
            google.cloud.dialogflow.cx.v3.test_case_pb2.GetTestCaseRequest,
            google.cloud.dialogflow.cx.v3.test_case_pb2.TestCase,
        )
        self.CreateTestCase = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/CreateTestCase',
            google.cloud.dialogflow.cx.v3.test_case_pb2.CreateTestCaseRequest,
            google.cloud.dialogflow.cx.v3.test_case_pb2.TestCase,
        )
        self.UpdateTestCase = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/UpdateTestCase',
            google.cloud.dialogflow.cx.v3.test_case_pb2.UpdateTestCaseRequest,
            google.cloud.dialogflow.cx.v3.test_case_pb2.TestCase,
        )
        self.RunTestCase = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/RunTestCase',
            google.cloud.dialogflow.cx.v3.test_case_pb2.RunTestCaseRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.BatchRunTestCases = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/BatchRunTestCases',
            google.cloud.dialogflow.cx.v3.test_case_pb2.BatchRunTestCasesRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.CalculateCoverage = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/CalculateCoverage',
            google.cloud.dialogflow.cx.v3.test_case_pb2.CalculateCoverageRequest,
            google.cloud.dialogflow.cx.v3.test_case_pb2.CalculateCoverageResponse,
        )
        self.ImportTestCases = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/ImportTestCases',
            google.cloud.dialogflow.cx.v3.test_case_pb2.ImportTestCasesRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ExportTestCases = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/ExportTestCases',
            google.cloud.dialogflow.cx.v3.test_case_pb2.ExportTestCasesRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ListTestCaseResults = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/ListTestCaseResults',
            google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCaseResultsRequest,
            google.cloud.dialogflow.cx.v3.test_case_pb2.ListTestCaseResultsResponse,
        )
        self.GetTestCaseResult = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3.TestCases/GetTestCaseResult',
            google.cloud.dialogflow.cx.v3.test_case_pb2.GetTestCaseResultRequest,
            google.cloud.dialogflow.cx.v3.test_case_pb2.TestCaseResult,
        )
