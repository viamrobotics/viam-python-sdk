"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class EntityType(google.protobuf.message.Message):
    """Entities are extracted from user input and represent parameters that are
    meaningful to your application. For example, a date range, a proper name
    such as a geographic location or landmark, and so on. Entities represent
    actionable data for your application.

    When you define an entity, you can also include synonyms that all map to
    that entity. For example, "soft drink", "soda", "pop", and so on.

    There are three types of entities:

    *   **System** - entities that are defined by the Dialogflow API for common
        data types such as date, time, currency, and so on. A system entity is
        represented by the `EntityType` type.

    *   **Custom** - entities that are defined by you that represent
        actionable data that is meaningful to your application. For example,
        you could define a `pizza.sauce` entity for red or white pizza sauce,
        a `pizza.cheese` entity for the different types of cheese on a pizza,
        a `pizza.topping` entity for different toppings, and so on. A custom
        entity is represented by the `EntityType` type.

    *   **User** - entities that are built for an individual user such as
        favorites, preferences, playlists, and so on. A user entity is
        represented by the [SessionEntityType][google.cloud.dialogflow.cx.v3.SessionEntityType] type.

    For more information about entity types, see the [Dialogflow
    documentation](https://cloud.google.com/dialogflow/docs/entities-overview).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Kind:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _KindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Kind.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        KIND_UNSPECIFIED: EntityType.Kind.ValueType = ...  # 0
        """Not specified. This value should be never used."""

        KIND_MAP: EntityType.Kind.ValueType = ...  # 1
        """Map entity types allow mapping of a group of synonyms to a canonical
        value.
        """

        KIND_LIST: EntityType.Kind.ValueType = ...  # 2
        """List entity types contain a set of entries that do not map to canonical
        values. However, list entity types can contain references to other entity
        types (with or without aliases).
        """

        KIND_REGEXP: EntityType.Kind.ValueType = ...  # 3
        """Regexp entity types allow to specify regular expressions in entries
        values.
        """

    class Kind(_Kind, metaclass=_KindEnumTypeWrapper):
        """Represents kinds of entities."""
        pass

    KIND_UNSPECIFIED: EntityType.Kind.ValueType = ...  # 0
    """Not specified. This value should be never used."""

    KIND_MAP: EntityType.Kind.ValueType = ...  # 1
    """Map entity types allow mapping of a group of synonyms to a canonical
    value.
    """

    KIND_LIST: EntityType.Kind.ValueType = ...  # 2
    """List entity types contain a set of entries that do not map to canonical
    values. However, list entity types can contain references to other entity
    types (with or without aliases).
    """

    KIND_REGEXP: EntityType.Kind.ValueType = ...  # 3
    """Regexp entity types allow to specify regular expressions in entries
    values.
    """


    class _AutoExpansionMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AutoExpansionModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AutoExpansionMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        AUTO_EXPANSION_MODE_UNSPECIFIED: EntityType.AutoExpansionMode.ValueType = ...  # 0
        """Auto expansion disabled for the entity."""

        AUTO_EXPANSION_MODE_DEFAULT: EntityType.AutoExpansionMode.ValueType = ...  # 1
        """Allows an agent to recognize values that have not been explicitly
        listed in the entity.
        """

    class AutoExpansionMode(_AutoExpansionMode, metaclass=_AutoExpansionModeEnumTypeWrapper):
        """Represents different entity type expansion modes. Automated expansion
        allows an agent to recognize values that have not been explicitly listed in
        the entity (for example, new kinds of shopping list items).
        """
        pass

    AUTO_EXPANSION_MODE_UNSPECIFIED: EntityType.AutoExpansionMode.ValueType = ...  # 0
    """Auto expansion disabled for the entity."""

    AUTO_EXPANSION_MODE_DEFAULT: EntityType.AutoExpansionMode.ValueType = ...  # 1
    """Allows an agent to recognize values that have not been explicitly
    listed in the entity.
    """


    class Entity(google.protobuf.message.Message):
        """An **entity entry** for an associated entity type."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VALUE_FIELD_NUMBER: builtins.int
        SYNONYMS_FIELD_NUMBER: builtins.int
        value: typing.Text = ...
        """Required. The primary value associated with this entity entry.
        For example, if the entity type is *vegetable*, the value could be
        *scallions*.

        For `KIND_MAP` entity types:

        *   A canonical value to be used in place of synonyms.

        For `KIND_LIST` entity types:

        *   A string that can contain references to other entity types (with or
            without aliases).
        """

        @property
        def synonyms(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Required. A collection of value synonyms. For example, if the entity type
            is *vegetable*, and `value` is *scallions*, a synonym could be *green
            onions*.

            For `KIND_LIST` entity types:

            *   This collection must contain exactly one synonym equal to `value`.
            """
            pass
        def __init__(self,
            *,
            value : typing.Text = ...,
            synonyms : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["synonyms",b"synonyms","value",b"value"]) -> None: ...

    class ExcludedPhrase(google.protobuf.message.Message):
        """An excluded entity phrase that should not be matched."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VALUE_FIELD_NUMBER: builtins.int
        value: typing.Text = ...
        """Required. The word or phrase to be excluded."""

        def __init__(self,
            *,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    AUTO_EXPANSION_MODE_FIELD_NUMBER: builtins.int
    ENTITIES_FIELD_NUMBER: builtins.int
    EXCLUDED_PHRASES_FIELD_NUMBER: builtins.int
    ENABLE_FUZZY_EXTRACTION_FIELD_NUMBER: builtins.int
    REDACT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The unique identifier of the entity type.
    Required for [EntityTypes.UpdateEntityType][google.cloud.dialogflow.cx.v3.EntityTypes.UpdateEntityType].
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/entityTypes/<Entity Type ID>`.
    """

    display_name: typing.Text = ...
    """Required. The human-readable name of the entity type, unique within the agent."""

    kind: global___EntityType.Kind.ValueType = ...
    """Required. Indicates the kind of entity type."""

    auto_expansion_mode: global___EntityType.AutoExpansionMode.ValueType = ...
    """Indicates whether the entity type can be automatically expanded."""

    @property
    def entities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EntityType.Entity]:
        """The collection of entity entries associated with the entity type."""
        pass
    @property
    def excluded_phrases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EntityType.ExcludedPhrase]:
        """Collection of exceptional words and phrases that shouldn't be matched.
        For example, if you have a size entity type with entry `giant`(an
        adjective), you might consider adding `giants`(a noun) as an exclusion.
        If the kind of entity type is `KIND_MAP`, then the phrases specified by
        entities and excluded phrases should be mutually exclusive.
        """
        pass
    enable_fuzzy_extraction: builtins.bool = ...
    """Enables fuzzy entity extraction during classification."""

    redact: builtins.bool = ...
    """Indicates whether parameters of the entity type should be redacted in log.
    If redaction is enabled, page parameters and intent parameters referring to
    the entity type will be replaced by parameter name when logging.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        kind : global___EntityType.Kind.ValueType = ...,
        auto_expansion_mode : global___EntityType.AutoExpansionMode.ValueType = ...,
        entities : typing.Optional[typing.Iterable[global___EntityType.Entity]] = ...,
        excluded_phrases : typing.Optional[typing.Iterable[global___EntityType.ExcludedPhrase]] = ...,
        enable_fuzzy_extraction : builtins.bool = ...,
        redact : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["auto_expansion_mode",b"auto_expansion_mode","display_name",b"display_name","enable_fuzzy_extraction",b"enable_fuzzy_extraction","entities",b"entities","excluded_phrases",b"excluded_phrases","kind",b"kind","name",b"name","redact",b"redact"]) -> None: ...
global___EntityType = EntityType

class ListEntityTypesRequest(google.protobuf.message.Message):
    """The request message for [EntityTypes.ListEntityTypes][google.cloud.dialogflow.cx.v3.EntityTypes.ListEntityTypes]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The agent to list all entity types for.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
    """

    language_code: typing.Text = ...
    """The language to list entity types for. The following fields are language
    dependent:

    *   `EntityType.entities.value`
    *   `EntityType.entities.synonyms`
    *   `EntityType.excluded_phrases.value`

    If not specified, the agent's default language is used.
    [Many
    languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
    are supported.
    Note: languages must be enabled in the agent before they can be used.
    """

    page_size: builtins.int = ...
    """The maximum number of items to return in a single page. By default 100 and
    at most 1000.
    """

    page_token: typing.Text = ...
    """The next_page_token value returned from a previous list request."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        language_code : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["language_code",b"language_code","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListEntityTypesRequest = ListEntityTypesRequest

class ListEntityTypesResponse(google.protobuf.message.Message):
    """The response message for [EntityTypes.ListEntityTypes][google.cloud.dialogflow.cx.v3.EntityTypes.ListEntityTypes]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTITY_TYPES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def entity_types(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EntityType]:
        """The list of entity types. There will be a maximum number of items returned
        based on the page_size field in the request.
        """
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no
    more results in the list.
    """

    def __init__(self,
        *,
        entity_types : typing.Optional[typing.Iterable[global___EntityType]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entity_types",b"entity_types","next_page_token",b"next_page_token"]) -> None: ...
global___ListEntityTypesResponse = ListEntityTypesResponse

class GetEntityTypeRequest(google.protobuf.message.Message):
    """The request message for [EntityTypes.GetEntityType][google.cloud.dialogflow.cx.v3.EntityTypes.GetEntityType]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the entity type.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/entityTypes/<Entity Type ID>`.
    """

    language_code: typing.Text = ...
    """The language to retrieve the entity type for. The following fields are
    language dependent:

    *   `EntityType.entities.value`
    *   `EntityType.entities.synonyms`
    *   `EntityType.excluded_phrases.value`

    If not specified, the agent's default language is used.
    [Many
    languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
    are supported.
    Note: languages must be enabled in the agent before they can be used.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        language_code : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["language_code",b"language_code","name",b"name"]) -> None: ...
global___GetEntityTypeRequest = GetEntityTypeRequest

class CreateEntityTypeRequest(google.protobuf.message.Message):
    """The request message for [EntityTypes.CreateEntityType][google.cloud.dialogflow.cx.v3.EntityTypes.CreateEntityType]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    ENTITY_TYPE_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The agent to create a entity type for.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>`.
    """

    @property
    def entity_type(self) -> global___EntityType:
        """Required. The entity type to create."""
        pass
    language_code: typing.Text = ...
    """The language of the following fields in `entity_type`:

    *   `EntityType.entities.value`
    *   `EntityType.entities.synonyms`
    *   `EntityType.excluded_phrases.value`

    If not specified, the agent's default language is used.
    [Many
    languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
    are supported.
    Note: languages must be enabled in the agent before they can be used.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        entity_type : typing.Optional[global___EntityType] = ...,
        language_code : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity_type",b"entity_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entity_type",b"entity_type","language_code",b"language_code","parent",b"parent"]) -> None: ...
global___CreateEntityTypeRequest = CreateEntityTypeRequest

class UpdateEntityTypeRequest(google.protobuf.message.Message):
    """The request message for [EntityTypes.UpdateEntityType][google.cloud.dialogflow.cx.v3.EntityTypes.UpdateEntityType]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTITY_TYPE_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def entity_type(self) -> global___EntityType:
        """Required. The entity type to update."""
        pass
    language_code: typing.Text = ...
    """The language of the following fields in `entity_type`:

    *   `EntityType.entities.value`
    *   `EntityType.entities.synonyms`
    *   `EntityType.excluded_phrases.value`

    If not specified, the agent's default language is used.
    [Many
    languages](https://cloud.google.com/dialogflow/cx/docs/reference/language)
    are supported.
    Note: languages must be enabled in the agent before they can be used.
    """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The mask to control which fields get updated."""
        pass
    def __init__(self,
        *,
        entity_type : typing.Optional[global___EntityType] = ...,
        language_code : typing.Text = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity_type",b"entity_type","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entity_type",b"entity_type","language_code",b"language_code","update_mask",b"update_mask"]) -> None: ...
global___UpdateEntityTypeRequest = UpdateEntityTypeRequest

class DeleteEntityTypeRequest(google.protobuf.message.Message):
    """The request message for [EntityTypes.DeleteEntityType][google.cloud.dialogflow.cx.v3.EntityTypes.DeleteEntityType]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the entity type to delete.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/entityTypes/<Entity Type ID>`.
    """

    force: builtins.bool = ...
    """This field has no effect for entity type not being used.
    For entity types that are used by intents or pages:

    *  If `force` is set to false, an error will be returned with message
       indicating the referencing resources.
    *  If `force` is set to true, Dialogflow will remove the entity type, as
       well as any references to the entity type (i.e. Page
       [parameter][google.cloud.dialogflow.cx.v3.Form.Parameter] of the entity type will be changed to
       '@sys.any' and intent [parameter][google.cloud.dialogflow.cx.v3.Intent.Parameter] of the entity type
       will be removed).
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        force : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["force",b"force","name",b"name"]) -> None: ...
global___DeleteEntityTypeRequest = DeleteEntityTypeRequest
