# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/dialogflow/cx/v3beta1/session.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.cloud.dialogflow.cx.v3beta1.advanced_settings_pb2
import google.cloud.dialogflow.cx.v3beta1.audio_config_pb2
import google.cloud.dialogflow.cx.v3beta1.flow_pb2
import google.cloud.dialogflow.cx.v3beta1.intent_pb2
import google.cloud.dialogflow.cx.v3beta1.page_pb2
import google.cloud.dialogflow.cx.v3beta1.response_message_pb2
import google.cloud.dialogflow.cx.v3beta1.session_entity_type_pb2
import google.protobuf.duration_pb2
import google.protobuf.struct_pb2
import google.rpc.status_pb2
import google.type.latlng_pb2
import google.api.client_pb2
import google.cloud.dialogflow.cx.v3beta1.session_pb2


class SessionsBase(abc.ABC):

    @abc.abstractmethod
    async def DetectIntent(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3beta1.session_pb2.DetectIntentRequest, google.cloud.dialogflow.cx.v3beta1.session_pb2.DetectIntentResponse]') -> None:
        pass

    @abc.abstractmethod
    async def StreamingDetectIntent(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3beta1.session_pb2.StreamingDetectIntentRequest, google.cloud.dialogflow.cx.v3beta1.session_pb2.StreamingDetectIntentResponse]') -> None:
        pass

    @abc.abstractmethod
    async def MatchIntent(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3beta1.session_pb2.MatchIntentRequest, google.cloud.dialogflow.cx.v3beta1.session_pb2.MatchIntentResponse]') -> None:
        pass

    @abc.abstractmethod
    async def FulfillIntent(self, stream: 'grpclib.server.Stream[google.cloud.dialogflow.cx.v3beta1.session_pb2.FulfillIntentRequest, google.cloud.dialogflow.cx.v3beta1.session_pb2.FulfillIntentResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.dialogflow.cx.v3beta1.Sessions/DetectIntent': grpclib.const.Handler(
                self.DetectIntent,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3beta1.session_pb2.DetectIntentRequest,
                google.cloud.dialogflow.cx.v3beta1.session_pb2.DetectIntentResponse,
            ),
            '/google.cloud.dialogflow.cx.v3beta1.Sessions/StreamingDetectIntent': grpclib.const.Handler(
                self.StreamingDetectIntent,
                grpclib.const.Cardinality.STREAM_STREAM,
                google.cloud.dialogflow.cx.v3beta1.session_pb2.StreamingDetectIntentRequest,
                google.cloud.dialogflow.cx.v3beta1.session_pb2.StreamingDetectIntentResponse,
            ),
            '/google.cloud.dialogflow.cx.v3beta1.Sessions/MatchIntent': grpclib.const.Handler(
                self.MatchIntent,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3beta1.session_pb2.MatchIntentRequest,
                google.cloud.dialogflow.cx.v3beta1.session_pb2.MatchIntentResponse,
            ),
            '/google.cloud.dialogflow.cx.v3beta1.Sessions/FulfillIntent': grpclib.const.Handler(
                self.FulfillIntent,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.dialogflow.cx.v3beta1.session_pb2.FulfillIntentRequest,
                google.cloud.dialogflow.cx.v3beta1.session_pb2.FulfillIntentResponse,
            ),
        }


class SessionsStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.DetectIntent = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3beta1.Sessions/DetectIntent',
            google.cloud.dialogflow.cx.v3beta1.session_pb2.DetectIntentRequest,
            google.cloud.dialogflow.cx.v3beta1.session_pb2.DetectIntentResponse,
        )
        self.StreamingDetectIntent = grpclib.client.StreamStreamMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3beta1.Sessions/StreamingDetectIntent',
            google.cloud.dialogflow.cx.v3beta1.session_pb2.StreamingDetectIntentRequest,
            google.cloud.dialogflow.cx.v3beta1.session_pb2.StreamingDetectIntentResponse,
        )
        self.MatchIntent = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3beta1.Sessions/MatchIntent',
            google.cloud.dialogflow.cx.v3beta1.session_pb2.MatchIntentRequest,
            google.cloud.dialogflow.cx.v3beta1.session_pb2.MatchIntentResponse,
        )
        self.FulfillIntent = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.dialogflow.cx.v3beta1.Sessions/FulfillIntent',
            google.cloud.dialogflow.cx.v3beta1.session_pb2.FulfillIntentRequest,
            google.cloud.dialogflow.cx.v3beta1.session_pb2.FulfillIntentResponse,
        )
