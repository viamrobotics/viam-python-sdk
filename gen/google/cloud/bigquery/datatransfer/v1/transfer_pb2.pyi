"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _TransferType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TransferTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TransferType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TRANSFER_TYPE_UNSPECIFIED: TransferType.ValueType = ...  # 0
    """Invalid or Unknown transfer type placeholder."""

    BATCH: TransferType.ValueType = ...  # 1
    """Batch data transfer."""

    STREAMING: TransferType.ValueType = ...  # 2
    """Streaming data transfer. Streaming data source currently doesn't
    support multiple transfer configs per project.
    """

class TransferType(_TransferType, metaclass=_TransferTypeEnumTypeWrapper):
    """DEPRECATED. Represents data transfer type."""
    pass

TRANSFER_TYPE_UNSPECIFIED: TransferType.ValueType = ...  # 0
"""Invalid or Unknown transfer type placeholder."""

BATCH: TransferType.ValueType = ...  # 1
"""Batch data transfer."""

STREAMING: TransferType.ValueType = ...  # 2
"""Streaming data transfer. Streaming data source currently doesn't
support multiple transfer configs per project.
"""

global___TransferType = TransferType


class _TransferState:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TransferStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TransferState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TRANSFER_STATE_UNSPECIFIED: TransferState.ValueType = ...  # 0
    """State placeholder (0)."""

    PENDING: TransferState.ValueType = ...  # 2
    """Data transfer is scheduled and is waiting to be picked up by
    data transfer backend (2).
    """

    RUNNING: TransferState.ValueType = ...  # 3
    """Data transfer is in progress (3)."""

    SUCCEEDED: TransferState.ValueType = ...  # 4
    """Data transfer completed successfully (4)."""

    FAILED: TransferState.ValueType = ...  # 5
    """Data transfer failed (5)."""

    CANCELLED: TransferState.ValueType = ...  # 6
    """Data transfer is cancelled (6)."""

class TransferState(_TransferState, metaclass=_TransferStateEnumTypeWrapper):
    """Represents data transfer run state."""
    pass

TRANSFER_STATE_UNSPECIFIED: TransferState.ValueType = ...  # 0
"""State placeholder (0)."""

PENDING: TransferState.ValueType = ...  # 2
"""Data transfer is scheduled and is waiting to be picked up by
data transfer backend (2).
"""

RUNNING: TransferState.ValueType = ...  # 3
"""Data transfer is in progress (3)."""

SUCCEEDED: TransferState.ValueType = ...  # 4
"""Data transfer completed successfully (4)."""

FAILED: TransferState.ValueType = ...  # 5
"""Data transfer failed (5)."""

CANCELLED: TransferState.ValueType = ...  # 6
"""Data transfer is cancelled (6)."""

global___TransferState = TransferState


class EmailPreferences(google.protobuf.message.Message):
    """Represents preferences for sending email notifications for transfer run
    events.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_FAILURE_EMAIL_FIELD_NUMBER: builtins.int
    enable_failure_email: builtins.bool = ...
    """If true, email notifications will be sent on transfer run failures."""

    def __init__(self,
        *,
        enable_failure_email : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_failure_email",b"enable_failure_email"]) -> None: ...
global___EmailPreferences = EmailPreferences

class ScheduleOptions(google.protobuf.message.Message):
    """Options customizing the data transfer schedule."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISABLE_AUTO_SCHEDULING_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    disable_auto_scheduling: builtins.bool = ...
    """If true, automatic scheduling of data transfer runs for this configuration
    will be disabled. The runs can be started on ad-hoc basis using
    StartManualTransferRuns API. When automatic scheduling is disabled, the
    TransferConfig.schedule field will be ignored.
    """

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Specifies time to start scheduling transfer runs. The first run will be
        scheduled at or after the start time according to a recurrence pattern
        defined in the schedule string. The start time can be changed at any
        moment. The time when a data transfer can be trigerred manually is not
        limited by this option.
        """
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Defines time to stop scheduling transfer runs. A transfer run cannot be
        scheduled at or after the end time. The end time can be changed at any
        moment. The time when a data transfer can be trigerred manually is not
        limited by this option.
        """
        pass
    def __init__(self,
        *,
        disable_auto_scheduling : builtins.bool = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["disable_auto_scheduling",b"disable_auto_scheduling","end_time",b"end_time","start_time",b"start_time"]) -> None: ...
global___ScheduleOptions = ScheduleOptions

class UserInfo(google.protobuf.message.Message):
    """Information about a user."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EMAIL_FIELD_NUMBER: builtins.int
    email: typing.Text = ...
    """E-mail address of the user."""

    def __init__(self,
        *,
        email : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_email",b"_email","email",b"email"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_email",b"_email","email",b"email"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_email",b"_email"]) -> typing.Optional[typing_extensions.Literal["email"]]: ...
global___UserInfo = UserInfo

class TransferConfig(google.protobuf.message.Message):
    """Represents a data transfer configuration. A transfer configuration
    contains all metadata needed to perform a data transfer. For example,
    `destination_dataset_id` specifies where data should be stored.
    When a new transfer configuration is created, the specified
    `destination_dataset_id` is created when needed and shared with the
    appropriate data source service account.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DESTINATION_DATASET_ID_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DATA_SOURCE_ID_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    SCHEDULE_OPTIONS_FIELD_NUMBER: builtins.int
    DATA_REFRESH_WINDOW_DAYS_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    NEXT_RUN_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    DATASET_REGION_FIELD_NUMBER: builtins.int
    NOTIFICATION_PUBSUB_TOPIC_FIELD_NUMBER: builtins.int
    EMAIL_PREFERENCES_FIELD_NUMBER: builtins.int
    OWNER_INFO_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the transfer config.
    Transfer config names have the form
    `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`.
    Where `config_id` is usually a uuid, even though it is not
    guaranteed or required. The name is ignored when creating a transfer
    config.
    """

    destination_dataset_id: typing.Text = ...
    """The BigQuery target dataset id."""

    display_name: typing.Text = ...
    """User specified display name for the data transfer."""

    data_source_id: typing.Text = ...
    """Data source id. Cannot be changed once data transfer is created."""

    @property
    def params(self) -> google.protobuf.struct_pb2.Struct:
        """Parameters specific to each data source. For more information see the
        bq tab in the 'Setting up a data transfer' section for each data source.
        For example the parameters for Cloud Storage transfers are listed here:
        https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq
        """
        pass
    schedule: typing.Text = ...
    """Data transfer schedule.
    If the data source does not support a custom schedule, this should be
    empty. If it is empty, the default value for the data source will be
    used.
    The specified times are in UTC.
    Examples of valid format:
    `1st,3rd monday of month 15:30`,
    `every wed,fri of jan,jun 13:15`, and
    `first sunday of quarter 00:00`.
    See more explanation about the format here:
    https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format

    NOTE: The minimum interval time between recurring transfers depends on the
    data source; refer to the documentation for your data source.
    """

    @property
    def schedule_options(self) -> global___ScheduleOptions:
        """Options customizing the data transfer schedule."""
        pass
    data_refresh_window_days: builtins.int = ...
    """The number of days to look back to automatically refresh the data.
    For example, if `data_refresh_window_days = 10`, then every day
    BigQuery reingests data for [today-10, today-1], rather than ingesting data
    for just [today-1].
    Only valid if the data source supports the feature. Set the value to  0
    to use the default value.
    """

    disabled: builtins.bool = ...
    """Is this config disabled. When set to true, no runs are scheduled
    for a given transfer.
    """

    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Data transfer modification time. Ignored by server on input."""
        pass
    @property
    def next_run_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Next time when data transfer will run."""
        pass
    state: global___TransferState.ValueType = ...
    """Output only. State of the most recently updated transfer run."""

    user_id: builtins.int = ...
    """Deprecated. Unique ID of the user on whose behalf transfer is done."""

    dataset_region: typing.Text = ...
    """Output only. Region in which BigQuery dataset is located."""

    notification_pubsub_topic: typing.Text = ...
    """Pub/Sub topic where notifications will be sent after transfer runs
    associated with this transfer config finish.

    The format for specifying a pubsub topic is:
    `projects/{project}/topics/{topic}`
    """

    @property
    def email_preferences(self) -> global___EmailPreferences:
        """Email notifications will be sent according to these preferences
        to the email address of the user who owns this transfer config.
        """
        pass
    @property
    def owner_info(self) -> global___UserInfo:
        """Output only. Information about the user whose credentials are used to transfer data.
        Populated only for `transferConfigs.get` requests. In case the user
        information is not available, this field will not be populated.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        destination_dataset_id : typing.Text = ...,
        display_name : typing.Text = ...,
        data_source_id : typing.Text = ...,
        params : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        schedule : typing.Text = ...,
        schedule_options : typing.Optional[global___ScheduleOptions] = ...,
        data_refresh_window_days : builtins.int = ...,
        disabled : builtins.bool = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        next_run_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___TransferState.ValueType = ...,
        user_id : builtins.int = ...,
        dataset_region : typing.Text = ...,
        notification_pubsub_topic : typing.Text = ...,
        email_preferences : typing.Optional[global___EmailPreferences] = ...,
        owner_info : typing.Optional[global___UserInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_owner_info",b"_owner_info","destination",b"destination","destination_dataset_id",b"destination_dataset_id","email_preferences",b"email_preferences","next_run_time",b"next_run_time","owner_info",b"owner_info","params",b"params","schedule_options",b"schedule_options","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_owner_info",b"_owner_info","data_refresh_window_days",b"data_refresh_window_days","data_source_id",b"data_source_id","dataset_region",b"dataset_region","destination",b"destination","destination_dataset_id",b"destination_dataset_id","disabled",b"disabled","display_name",b"display_name","email_preferences",b"email_preferences","name",b"name","next_run_time",b"next_run_time","notification_pubsub_topic",b"notification_pubsub_topic","owner_info",b"owner_info","params",b"params","schedule",b"schedule","schedule_options",b"schedule_options","state",b"state","update_time",b"update_time","user_id",b"user_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_owner_info",b"_owner_info"]) -> typing.Optional[typing_extensions.Literal["owner_info"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["destination",b"destination"]) -> typing.Optional[typing_extensions.Literal["destination_dataset_id"]]: ...
global___TransferConfig = TransferConfig

class TransferRun(google.protobuf.message.Message):
    """Represents a data transfer run."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    SCHEDULE_TIME_FIELD_NUMBER: builtins.int
    RUN_TIME_FIELD_NUMBER: builtins.int
    ERROR_STATUS_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    DESTINATION_DATASET_ID_FIELD_NUMBER: builtins.int
    DATA_SOURCE_ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    NOTIFICATION_PUBSUB_TOPIC_FIELD_NUMBER: builtins.int
    EMAIL_PREFERENCES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the transfer run.
    Transfer run names have the form
    `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`.
    The name is ignored when creating a transfer run.
    """

    @property
    def schedule_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Minimum time after which a transfer run can be started."""
        pass
    @property
    def run_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """For batch transfer runs, specifies the date and time of the data should be
        ingested.
        """
        pass
    @property
    def error_status(self) -> google.rpc.status_pb2.Status:
        """Status of the transfer run."""
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time when transfer run was started.
        Parameter ignored by server for input requests.
        """
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time when transfer run ended.
        Parameter ignored by server for input requests.
        """
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Last time the data transfer run state was updated."""
        pass
    @property
    def params(self) -> google.protobuf.struct_pb2.Struct:
        """Output only. Parameters specific to each data source. For more information see the
        bq tab in the 'Setting up a data transfer' section for each data source.
        For example the parameters for Cloud Storage transfers are listed here:
        https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq
        """
        pass
    destination_dataset_id: typing.Text = ...
    """Output only. The BigQuery target dataset id."""

    data_source_id: typing.Text = ...
    """Output only. Data source id."""

    state: global___TransferState.ValueType = ...
    """Data transfer run state. Ignored for input requests."""

    user_id: builtins.int = ...
    """Deprecated. Unique ID of the user on whose behalf transfer is done."""

    schedule: typing.Text = ...
    """Output only. Describes the schedule of this transfer run if it was
    created as part of a regular schedule. For batch transfer runs that are
    scheduled manually, this is empty.
    NOTE: the system might choose to delay the schedule depending on the
    current load, so `schedule_time` doesn't always match this.
    """

    notification_pubsub_topic: typing.Text = ...
    """Output only. Pub/Sub topic where a notification will be sent after this
    transfer run finishes.

    The format for specifying a pubsub topic is:
    `projects/{project}/topics/{topic}`
    """

    @property
    def email_preferences(self) -> global___EmailPreferences:
        """Output only. Email notifications will be sent according to these
        preferences to the email address of the user who owns the transfer config
        this run was derived from.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        schedule_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        run_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        error_status : typing.Optional[google.rpc.status_pb2.Status] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        params : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        destination_dataset_id : typing.Text = ...,
        data_source_id : typing.Text = ...,
        state : global___TransferState.ValueType = ...,
        user_id : builtins.int = ...,
        schedule : typing.Text = ...,
        notification_pubsub_topic : typing.Text = ...,
        email_preferences : typing.Optional[global___EmailPreferences] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination",b"destination","destination_dataset_id",b"destination_dataset_id","email_preferences",b"email_preferences","end_time",b"end_time","error_status",b"error_status","params",b"params","run_time",b"run_time","schedule_time",b"schedule_time","start_time",b"start_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_source_id",b"data_source_id","destination",b"destination","destination_dataset_id",b"destination_dataset_id","email_preferences",b"email_preferences","end_time",b"end_time","error_status",b"error_status","name",b"name","notification_pubsub_topic",b"notification_pubsub_topic","params",b"params","run_time",b"run_time","schedule",b"schedule","schedule_time",b"schedule_time","start_time",b"start_time","state",b"state","update_time",b"update_time","user_id",b"user_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["destination",b"destination"]) -> typing.Optional[typing_extensions.Literal["destination_dataset_id"]]: ...
global___TransferRun = TransferRun

class TransferMessage(google.protobuf.message.Message):
    """Represents a user facing message for a particular data transfer run."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _MessageSeverity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MessageSeverityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MessageSeverity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        MESSAGE_SEVERITY_UNSPECIFIED: TransferMessage.MessageSeverity.ValueType = ...  # 0
        """No severity specified."""

        INFO: TransferMessage.MessageSeverity.ValueType = ...  # 1
        """Informational message."""

        WARNING: TransferMessage.MessageSeverity.ValueType = ...  # 2
        """Warning message."""

        ERROR: TransferMessage.MessageSeverity.ValueType = ...  # 3
        """Error message."""

    class MessageSeverity(_MessageSeverity, metaclass=_MessageSeverityEnumTypeWrapper):
        """Represents data transfer user facing message severity."""
        pass

    MESSAGE_SEVERITY_UNSPECIFIED: TransferMessage.MessageSeverity.ValueType = ...  # 0
    """No severity specified."""

    INFO: TransferMessage.MessageSeverity.ValueType = ...  # 1
    """Informational message."""

    WARNING: TransferMessage.MessageSeverity.ValueType = ...  # 2
    """Warning message."""

    ERROR: TransferMessage.MessageSeverity.ValueType = ...  # 3
    """Error message."""


    MESSAGE_TIME_FIELD_NUMBER: builtins.int
    SEVERITY_FIELD_NUMBER: builtins.int
    MESSAGE_TEXT_FIELD_NUMBER: builtins.int
    @property
    def message_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when message was logged."""
        pass
    severity: global___TransferMessage.MessageSeverity.ValueType = ...
    """Message severity."""

    message_text: typing.Text = ...
    """Message text."""

    def __init__(self,
        *,
        message_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        severity : global___TransferMessage.MessageSeverity.ValueType = ...,
        message_text : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["message_time",b"message_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message_text",b"message_text","message_time",b"message_time","severity",b"severity"]) -> None: ...
global___TransferMessage = TransferMessage
