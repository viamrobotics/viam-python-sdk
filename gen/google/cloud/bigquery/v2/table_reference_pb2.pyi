"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TableReference(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_ALTERNATIVE_FIELD_NUMBER: builtins.int
    DATASET_ID_ALTERNATIVE_FIELD_NUMBER: builtins.int
    TABLE_ID_ALTERNATIVE_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. The ID of the project containing this table."""

    dataset_id: typing.Text = ...
    """Required. The ID of the dataset containing this table."""

    table_id: typing.Text = ...
    """Required. The ID of the table. The ID must contain only
    letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
    length is 1,024 characters.  Certain operations allow
    suffixing of the table ID with a partition decorator, such as
    `sample_table$20190123`.
    """

    @property
    def project_id_alternative(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The alternative field that will be used when ESF is not able to translate
        the received data to the project_id field.
        """
        pass
    @property
    def dataset_id_alternative(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The alternative field that will be used when ESF is not able to translate
        the received data to the project_id field.
        """
        pass
    @property
    def table_id_alternative(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The alternative field that will be used when ESF is not able to translate
        the received data to the project_id field.
        """
        pass
    def __init__(self,
        *,
        project_id : typing.Text = ...,
        dataset_id : typing.Text = ...,
        table_id : typing.Text = ...,
        project_id_alternative : typing.Optional[typing.Iterable[typing.Text]] = ...,
        dataset_id_alternative : typing.Optional[typing.Iterable[typing.Text]] = ...,
        table_id_alternative : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id",b"dataset_id","dataset_id_alternative",b"dataset_id_alternative","project_id",b"project_id","project_id_alternative",b"project_id_alternative","table_id",b"table_id","table_id_alternative",b"table_id_alternative"]) -> None: ...
global___TableReference = TableReference
