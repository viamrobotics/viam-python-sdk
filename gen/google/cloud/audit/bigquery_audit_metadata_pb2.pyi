"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.iam.v1.policy_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class BigQueryAuditMetadata(google.protobuf.message.Message):
    """Audit log format for BigQuery cloud audit logs metadata."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _WriteDisposition:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _WriteDispositionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WriteDisposition.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        WRITE_DISPOSITION_UNSPECIFIED: BigQueryAuditMetadata.WriteDisposition.ValueType = ...  # 0
        """Unknown."""

        WRITE_EMPTY: BigQueryAuditMetadata.WriteDisposition.ValueType = ...  # 1
        """This job should only be writing to empty tables."""

        WRITE_TRUNCATE: BigQueryAuditMetadata.WriteDisposition.ValueType = ...  # 2
        """This job will truncate the existing table data."""

        WRITE_APPEND: BigQueryAuditMetadata.WriteDisposition.ValueType = ...  # 3
        """This job will append to the table."""

    class WriteDisposition(_WriteDisposition, metaclass=_WriteDispositionEnumTypeWrapper):
        """Describes whether a job should overwrite or append the existing destination
        table if it already exists.
        """
        pass

    WRITE_DISPOSITION_UNSPECIFIED: BigQueryAuditMetadata.WriteDisposition.ValueType = ...  # 0
    """Unknown."""

    WRITE_EMPTY: BigQueryAuditMetadata.WriteDisposition.ValueType = ...  # 1
    """This job should only be writing to empty tables."""

    WRITE_TRUNCATE: BigQueryAuditMetadata.WriteDisposition.ValueType = ...  # 2
    """This job will truncate the existing table data."""

    WRITE_APPEND: BigQueryAuditMetadata.WriteDisposition.ValueType = ...  # 3
    """This job will append to the table."""


    class _OperationType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _OperationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OperationType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        OPERATION_TYPE_UNSPECIFIED: BigQueryAuditMetadata.OperationType.ValueType = ...  # 0
        """Unspecified operation type."""

        COPY: BigQueryAuditMetadata.OperationType.ValueType = ...  # 1
        """The source and the destination table have the same table type."""

        SNAPSHOT: BigQueryAuditMetadata.OperationType.ValueType = ...  # 2
        """The source table type is TABLE and
        the destination table type is SNAPSHOT.
        """

        RESTORE: BigQueryAuditMetadata.OperationType.ValueType = ...  # 3
        """The source table type is SNAPSHOT and
        the destination table type is TABLE.
        """

    class OperationType(_OperationType, metaclass=_OperationTypeEnumTypeWrapper):
        """Table copy job operation type."""
        pass

    OPERATION_TYPE_UNSPECIFIED: BigQueryAuditMetadata.OperationType.ValueType = ...  # 0
    """Unspecified operation type."""

    COPY: BigQueryAuditMetadata.OperationType.ValueType = ...  # 1
    """The source and the destination table have the same table type."""

    SNAPSHOT: BigQueryAuditMetadata.OperationType.ValueType = ...  # 2
    """The source table type is TABLE and
    the destination table type is SNAPSHOT.
    """

    RESTORE: BigQueryAuditMetadata.OperationType.ValueType = ...  # 3
    """The source table type is SNAPSHOT and
    the destination table type is TABLE.
    """


    class _CreateDisposition:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CreateDispositionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CreateDisposition.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CREATE_DISPOSITION_UNSPECIFIED: BigQueryAuditMetadata.CreateDisposition.ValueType = ...  # 0
        """Unknown."""

        CREATE_NEVER: BigQueryAuditMetadata.CreateDisposition.ValueType = ...  # 1
        """This job should never create tables."""

        CREATE_IF_NEEDED: BigQueryAuditMetadata.CreateDisposition.ValueType = ...  # 2
        """This job should create a table if it doesn't already exist."""

    class CreateDisposition(_CreateDisposition, metaclass=_CreateDispositionEnumTypeWrapper):
        """Describes whether a job should create a destination table if it doesn't
        exist.
        """
        pass

    CREATE_DISPOSITION_UNSPECIFIED: BigQueryAuditMetadata.CreateDisposition.ValueType = ...  # 0
    """Unknown."""

    CREATE_NEVER: BigQueryAuditMetadata.CreateDisposition.ValueType = ...  # 1
    """This job should never create tables."""

    CREATE_IF_NEEDED: BigQueryAuditMetadata.CreateDisposition.ValueType = ...  # 2
    """This job should create a table if it doesn't already exist."""


    class _JobState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _JobStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_JobState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        JOB_STATE_UNSPECIFIED: BigQueryAuditMetadata.JobState.ValueType = ...  # 0
        """State unknown."""

        PENDING: BigQueryAuditMetadata.JobState.ValueType = ...  # 1
        """Job is waiting for the resources."""

        RUNNING: BigQueryAuditMetadata.JobState.ValueType = ...  # 2
        """Job is running."""

        DONE: BigQueryAuditMetadata.JobState.ValueType = ...  # 3
        """Job is done."""

    class JobState(_JobState, metaclass=_JobStateEnumTypeWrapper):
        """State of a job."""
        pass

    JOB_STATE_UNSPECIFIED: BigQueryAuditMetadata.JobState.ValueType = ...  # 0
    """State unknown."""

    PENDING: BigQueryAuditMetadata.JobState.ValueType = ...  # 1
    """Job is waiting for the resources."""

    RUNNING: BigQueryAuditMetadata.JobState.ValueType = ...  # 2
    """Job is running."""

    DONE: BigQueryAuditMetadata.JobState.ValueType = ...  # 3
    """Job is done."""


    class _QueryStatementType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _QueryStatementTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_QueryStatementType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        QUERY_STATEMENT_TYPE_UNSPECIFIED: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 0
        """Unknown."""

        SELECT: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 1
        """SELECT ... FROM &lt;Table list&gt; ..."""

        ASSERT: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 23
        """ASSERT &lt;condition&gt; AS 'description'"""

        INSERT: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 2
        """INSERT INTO &lt;Table&gt; ...."""

        UPDATE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 3
        """UPDATE &lt;Table&gt; SET ..."""

        DELETE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 4
        """DELETE &lt;Table&gt; ..."""

        MERGE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 5
        """MERGE INTO &lt;Table&gt; ...."""

        CREATE_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 6
        """CREATE TABLE &lt;Table&gt; &lt;column list&gt;"""

        CREATE_TABLE_AS_SELECT: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 7
        """CREATE TABLE &lt;Table&gt; AS SELECT"""

        CREATE_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 8
        """CREATE VIEW &lt;View&gt;"""

        CREATE_MODEL: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 9
        """CREATE MODEL &lt;Model&gt; AS &lt;Query&gt;"""

        CREATE_MATERIALIZED_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 13
        """CREATE MATERIALIZED VIEW &lt;View&gt; AS ..."""

        CREATE_FUNCTION: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 14
        """CREATE FUNCTION &lt;Function&gt;(&lt;Signature&gt;) AS ..."""

        CREATE_PROCEDURE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 20
        """CREATE PROCEDURE &lt;Procedure&gt;"""

        CREATE_SCHEMA: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 53
        """CREATE SCHEMA &lt;Schema&gt;"""

        DROP_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 10
        """DROP TABLE &lt;Table&gt;"""

        DROP_EXTERNAL_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 33
        """DROP EXTERNAL TABLE &lt;Table&gt;"""

        DROP_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 11
        """DROP VIEW &lt;View&gt;"""

        DROP_MODEL: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 12
        """DROP MODEL &lt;Model&gt;"""

        DROP_MATERIALIZED_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 15
        """DROP MATERIALIZED VIEW &lt;View&gt;"""

        DROP_FUNCTION: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 16
        """DROP FUNCTION &lt;Function&gt;"""

        DROP_PROCEDURE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 21
        """DROP PROCEDURE &lt;Procedure&gt;"""

        DROP_SCHEMA: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 54
        """DROP SCHEMA &lt;Schema&gt;"""

        ALTER_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 17
        """ALTER TABLE &lt;Table&gt;"""

        ALTER_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 18
        """ALTER VIEW &lt;View&gt;"""

        ALTER_MATERIALIZED_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 22
        """ALTER MATERIALIZED_VIEW &lt;view&gt;"""

        ALTER_SCHEMA: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 55
        """ALTER SCHEMA &lt;Schema&gt;"""

        SCRIPT: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 19
        """Script"""

        TRUNCATE_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 26
        """TRUNCATE TABLE &lt;Table&gt"""

        CREATE_EXTERNAL_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 27
        """CREATE EXTERNAL TABLE &lt;TABLE&gt;"""

        EXPORT_DATA: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 28
        """EXPORT DATA;"""

        CALL: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 29
        """CALL &lt;stored procedure&gt;"""

    class QueryStatementType(_QueryStatementType, metaclass=_QueryStatementTypeEnumTypeWrapper):
        """Type of the statement (e.g. SELECT, INSERT, CREATE_TABLE, CREATE_MODEL..)"""
        pass

    QUERY_STATEMENT_TYPE_UNSPECIFIED: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 0
    """Unknown."""

    SELECT: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 1
    """SELECT ... FROM &lt;Table list&gt; ..."""

    ASSERT: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 23
    """ASSERT &lt;condition&gt; AS 'description'"""

    INSERT: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 2
    """INSERT INTO &lt;Table&gt; ...."""

    UPDATE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 3
    """UPDATE &lt;Table&gt; SET ..."""

    DELETE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 4
    """DELETE &lt;Table&gt; ..."""

    MERGE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 5
    """MERGE INTO &lt;Table&gt; ...."""

    CREATE_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 6
    """CREATE TABLE &lt;Table&gt; &lt;column list&gt;"""

    CREATE_TABLE_AS_SELECT: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 7
    """CREATE TABLE &lt;Table&gt; AS SELECT"""

    CREATE_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 8
    """CREATE VIEW &lt;View&gt;"""

    CREATE_MODEL: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 9
    """CREATE MODEL &lt;Model&gt; AS &lt;Query&gt;"""

    CREATE_MATERIALIZED_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 13
    """CREATE MATERIALIZED VIEW &lt;View&gt; AS ..."""

    CREATE_FUNCTION: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 14
    """CREATE FUNCTION &lt;Function&gt;(&lt;Signature&gt;) AS ..."""

    CREATE_PROCEDURE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 20
    """CREATE PROCEDURE &lt;Procedure&gt;"""

    CREATE_SCHEMA: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 53
    """CREATE SCHEMA &lt;Schema&gt;"""

    DROP_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 10
    """DROP TABLE &lt;Table&gt;"""

    DROP_EXTERNAL_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 33
    """DROP EXTERNAL TABLE &lt;Table&gt;"""

    DROP_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 11
    """DROP VIEW &lt;View&gt;"""

    DROP_MODEL: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 12
    """DROP MODEL &lt;Model&gt;"""

    DROP_MATERIALIZED_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 15
    """DROP MATERIALIZED VIEW &lt;View&gt;"""

    DROP_FUNCTION: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 16
    """DROP FUNCTION &lt;Function&gt;"""

    DROP_PROCEDURE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 21
    """DROP PROCEDURE &lt;Procedure&gt;"""

    DROP_SCHEMA: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 54
    """DROP SCHEMA &lt;Schema&gt;"""

    ALTER_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 17
    """ALTER TABLE &lt;Table&gt;"""

    ALTER_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 18
    """ALTER VIEW &lt;View&gt;"""

    ALTER_MATERIALIZED_VIEW: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 22
    """ALTER MATERIALIZED_VIEW &lt;view&gt;"""

    ALTER_SCHEMA: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 55
    """ALTER SCHEMA &lt;Schema&gt;"""

    SCRIPT: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 19
    """Script"""

    TRUNCATE_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 26
    """TRUNCATE TABLE &lt;Table&gt"""

    CREATE_EXTERNAL_TABLE: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 27
    """CREATE EXTERNAL TABLE &lt;TABLE&gt;"""

    EXPORT_DATA: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 28
    """EXPORT DATA;"""

    CALL: BigQueryAuditMetadata.QueryStatementType.ValueType = ...  # 29
    """CALL &lt;stored procedure&gt;"""


    class JobInsertion(google.protobuf.message.Message):
        """Job insertion event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.JobInsertion.Reason.ValueType = ...  # 0
            """Unknown."""

            JOB_INSERT_REQUEST: BigQueryAuditMetadata.JobInsertion.Reason.ValueType = ...  # 1
            """Job was inserted using the jobs.insert API."""

            QUERY_REQUEST: BigQueryAuditMetadata.JobInsertion.Reason.ValueType = ...  # 2
            """Job was inserted using the jobs.query RPC."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the job was inserted."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.JobInsertion.Reason.ValueType = ...  # 0
        """Unknown."""

        JOB_INSERT_REQUEST: BigQueryAuditMetadata.JobInsertion.Reason.ValueType = ...  # 1
        """Job was inserted using the jobs.insert API."""

        QUERY_REQUEST: BigQueryAuditMetadata.JobInsertion.Reason.ValueType = ...  # 2
        """Job was inserted using the jobs.query RPC."""


        JOB_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        @property
        def job(self) -> global___BigQueryAuditMetadata.Job:
            """Job metadata."""
            pass
        reason: global___BigQueryAuditMetadata.JobInsertion.Reason.ValueType = ...
        """Describes how the job was inserted."""

        def __init__(self,
            *,
            job : typing.Optional[global___BigQueryAuditMetadata.Job] = ...,
            reason : global___BigQueryAuditMetadata.JobInsertion.Reason.ValueType = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["job",b"job"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["job",b"job","reason",b"reason"]) -> None: ...

    class JobChange(google.protobuf.message.Message):
        """Job state change event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        BEFORE_FIELD_NUMBER: builtins.int
        AFTER_FIELD_NUMBER: builtins.int
        JOB_FIELD_NUMBER: builtins.int
        before: global___BigQueryAuditMetadata.JobState.ValueType = ...
        """Job state before the job state change."""

        after: global___BigQueryAuditMetadata.JobState.ValueType = ...
        """Job state after the job state change."""

        @property
        def job(self) -> global___BigQueryAuditMetadata.Job:
            """Job metadata."""
            pass
        def __init__(self,
            *,
            before : global___BigQueryAuditMetadata.JobState.ValueType = ...,
            after : global___BigQueryAuditMetadata.JobState.ValueType = ...,
            job : typing.Optional[global___BigQueryAuditMetadata.Job] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["job",b"job"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["after",b"after","before",b"before","job",b"job"]) -> None: ...

    class DatasetCreation(google.protobuf.message.Message):
        """Dataset creation event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.DatasetCreation.Reason.ValueType = ...  # 0
            """Unknown."""

            CREATE: BigQueryAuditMetadata.DatasetCreation.Reason.ValueType = ...  # 1
            """Dataset was created using the datasets.create API."""

            QUERY: BigQueryAuditMetadata.DatasetCreation.Reason.ValueType = ...  # 2
            """Dataset was created using a query job, e.g., CREATE SCHEMA statement."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the dataset was created."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.DatasetCreation.Reason.ValueType = ...  # 0
        """Unknown."""

        CREATE: BigQueryAuditMetadata.DatasetCreation.Reason.ValueType = ...  # 1
        """Dataset was created using the datasets.create API."""

        QUERY: BigQueryAuditMetadata.DatasetCreation.Reason.ValueType = ...  # 2
        """Dataset was created using a query job, e.g., CREATE SCHEMA statement."""


        DATASET_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        @property
        def dataset(self) -> global___BigQueryAuditMetadata.Dataset:
            """Dataset metadata."""
            pass
        reason: global___BigQueryAuditMetadata.DatasetCreation.Reason.ValueType = ...
        """Describes how the dataset was created."""

        job_name: typing.Text = ...
        """The URI of the job that created the dataset.
        Present if the reason is QUERY.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            dataset : typing.Optional[global___BigQueryAuditMetadata.Dataset] = ...,
            reason : global___BigQueryAuditMetadata.DatasetCreation.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["dataset",b"dataset"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["dataset",b"dataset","job_name",b"job_name","reason",b"reason"]) -> None: ...

    class DatasetChange(google.protobuf.message.Message):
        """Dataset change event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.DatasetChange.Reason.ValueType = ...  # 0
            """Unknown."""

            UPDATE: BigQueryAuditMetadata.DatasetChange.Reason.ValueType = ...  # 1
            """Dataset was changed using the datasets.update or datasets.patch API."""

            SET_IAM_POLICY: BigQueryAuditMetadata.DatasetChange.Reason.ValueType = ...  # 2
            """Dataset was changed using the SetIamPolicy API."""

            QUERY: BigQueryAuditMetadata.DatasetChange.Reason.ValueType = ...  # 3
            """Dataset was changed using a query job, e.g., ALTER SCHEMA statement."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the dataset was changed."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.DatasetChange.Reason.ValueType = ...  # 0
        """Unknown."""

        UPDATE: BigQueryAuditMetadata.DatasetChange.Reason.ValueType = ...  # 1
        """Dataset was changed using the datasets.update or datasets.patch API."""

        SET_IAM_POLICY: BigQueryAuditMetadata.DatasetChange.Reason.ValueType = ...  # 2
        """Dataset was changed using the SetIamPolicy API."""

        QUERY: BigQueryAuditMetadata.DatasetChange.Reason.ValueType = ...  # 3
        """Dataset was changed using a query job, e.g., ALTER SCHEMA statement."""


        DATASET_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        @property
        def dataset(self) -> global___BigQueryAuditMetadata.Dataset:
            """Dataset metadata after the change."""
            pass
        reason: global___BigQueryAuditMetadata.DatasetChange.Reason.ValueType = ...
        """Describes how the dataset was changed."""

        job_name: typing.Text = ...
        """The URI of the job that updated the dataset.
        Present if the reason is QUERY.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            dataset : typing.Optional[global___BigQueryAuditMetadata.Dataset] = ...,
            reason : global___BigQueryAuditMetadata.DatasetChange.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["dataset",b"dataset"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["dataset",b"dataset","job_name",b"job_name","reason",b"reason"]) -> None: ...

    class DatasetDeletion(google.protobuf.message.Message):
        """Dataset deletion event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.DatasetDeletion.Reason.ValueType = ...  # 0
            """Unknown."""

            DELETE: BigQueryAuditMetadata.DatasetDeletion.Reason.ValueType = ...  # 1
            """Dataset was deleted using the datasets.delete API."""

            QUERY: BigQueryAuditMetadata.DatasetDeletion.Reason.ValueType = ...  # 2
            """Dataset was deleted using a query job, e.g., DROP SCHEMA statement."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the dataset was deleted."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.DatasetDeletion.Reason.ValueType = ...  # 0
        """Unknown."""

        DELETE: BigQueryAuditMetadata.DatasetDeletion.Reason.ValueType = ...  # 1
        """Dataset was deleted using the datasets.delete API."""

        QUERY: BigQueryAuditMetadata.DatasetDeletion.Reason.ValueType = ...  # 2
        """Dataset was deleted using a query job, e.g., DROP SCHEMA statement."""


        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        reason: global___BigQueryAuditMetadata.DatasetDeletion.Reason.ValueType = ...
        """Describes how the dataset was deleted."""

        job_name: typing.Text = ...
        """The URI of the job that deleted the dataset.
        Present if the reason is QUERY.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            reason : global___BigQueryAuditMetadata.DatasetDeletion.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","reason",b"reason"]) -> None: ...

    class TableCreation(google.protobuf.message.Message):
        """Table creation event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.TableCreation.Reason.ValueType = ...  # 0
            """Unknown."""

            JOB: BigQueryAuditMetadata.TableCreation.Reason.ValueType = ...  # 1
            """Table was created as a destination table during a query, load or copy
            job.
            """

            QUERY: BigQueryAuditMetadata.TableCreation.Reason.ValueType = ...  # 2
            """Table was created using a DDL query."""

            TABLE_INSERT_REQUEST: BigQueryAuditMetadata.TableCreation.Reason.ValueType = ...  # 3
            """Table was created using the tables.create API."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the table was created."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.TableCreation.Reason.ValueType = ...  # 0
        """Unknown."""

        JOB: BigQueryAuditMetadata.TableCreation.Reason.ValueType = ...  # 1
        """Table was created as a destination table during a query, load or copy
        job.
        """

        QUERY: BigQueryAuditMetadata.TableCreation.Reason.ValueType = ...  # 2
        """Table was created using a DDL query."""

        TABLE_INSERT_REQUEST: BigQueryAuditMetadata.TableCreation.Reason.ValueType = ...  # 3
        """Table was created using the tables.create API."""


        TABLE_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        @property
        def table(self) -> global___BigQueryAuditMetadata.Table:
            """Table metadata."""
            pass
        reason: global___BigQueryAuditMetadata.TableCreation.Reason.ValueType = ...
        """Describes how the table was created."""

        job_name: typing.Text = ...
        """The URI of the job that created a table.
        Present if the reason is JOB or QUERY.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            table : typing.Optional[global___BigQueryAuditMetadata.Table] = ...,
            reason : global___BigQueryAuditMetadata.TableCreation.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["table",b"table"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","reason",b"reason","table",b"table"]) -> None: ...

    class ModelCreation(google.protobuf.message.Message):
        """Model creation event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.ModelCreation.Reason.ValueType = ...  # 0
            """Unknown."""

            QUERY: BigQueryAuditMetadata.ModelCreation.Reason.ValueType = ...  # 2
            """Model was created using a DDL query."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the model was created."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.ModelCreation.Reason.ValueType = ...  # 0
        """Unknown."""

        QUERY: BigQueryAuditMetadata.ModelCreation.Reason.ValueType = ...  # 2
        """Model was created using a DDL query."""


        MODEL_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        @property
        def model(self) -> global___BigQueryAuditMetadata.Model:
            """Model metadata."""
            pass
        reason: global___BigQueryAuditMetadata.ModelCreation.Reason.ValueType = ...
        """Describes how the model was created."""

        job_name: typing.Text = ...
        """The URI of the job that created the model.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            model : typing.Optional[global___BigQueryAuditMetadata.Model] = ...,
            reason : global___BigQueryAuditMetadata.ModelCreation.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["model",b"model"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","model",b"model","reason",b"reason"]) -> None: ...

    class RoutineCreation(google.protobuf.message.Message):
        """Routine creation event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.RoutineCreation.Reason.ValueType = ...  # 0
            """Unknown."""

            QUERY: BigQueryAuditMetadata.RoutineCreation.Reason.ValueType = ...  # 1
            """Routine was created using a DDL query."""

            ROUTINE_INSERT_REQUEST: BigQueryAuditMetadata.RoutineCreation.Reason.ValueType = ...  # 2
            """Routine was created using the routines.create API."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the routine was created."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.RoutineCreation.Reason.ValueType = ...  # 0
        """Unknown."""

        QUERY: BigQueryAuditMetadata.RoutineCreation.Reason.ValueType = ...  # 1
        """Routine was created using a DDL query."""

        ROUTINE_INSERT_REQUEST: BigQueryAuditMetadata.RoutineCreation.Reason.ValueType = ...  # 2
        """Routine was created using the routines.create API."""


        ROUTINE_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        @property
        def routine(self) -> global___BigQueryAuditMetadata.Routine:
            """Created routine."""
            pass
        reason: global___BigQueryAuditMetadata.RoutineCreation.Reason.ValueType = ...
        """Describes how the routine was created."""

        job_name: typing.Text = ...
        """The URI of the job that created the routine.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            routine : typing.Optional[global___BigQueryAuditMetadata.Routine] = ...,
            reason : global___BigQueryAuditMetadata.RoutineCreation.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["routine",b"routine"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","reason",b"reason","routine",b"routine"]) -> None: ...

    class TableDataRead(google.protobuf.message.Message):
        """Table data read event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 0
            """Unknown."""

            JOB: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 1
            """Table was used as a source table during a BigQuery job."""

            TABLEDATA_LIST_REQUEST: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 2
            """Table data was accessed using the tabledata.list API."""

            GET_QUERY_RESULTS_REQUEST: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 3
            """Table data was accessed using the jobs.getQueryResults API."""

            QUERY_REQUEST: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 4
            """Table data was accessed using the jobs.query RPC."""

            CREATE_READ_SESSION: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 5
            """Table data was accessed using storage.CreateReadSession API."""

            MATERIALIZED_VIEW_REFRESH: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 6
            """Table data was accessed during a materialized view refresh."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the table data was read."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 0
        """Unknown."""

        JOB: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 1
        """Table was used as a source table during a BigQuery job."""

        TABLEDATA_LIST_REQUEST: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 2
        """Table data was accessed using the tabledata.list API."""

        GET_QUERY_RESULTS_REQUEST: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 3
        """Table data was accessed using the jobs.getQueryResults API."""

        QUERY_REQUEST: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 4
        """Table data was accessed using the jobs.query RPC."""

        CREATE_READ_SESSION: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 5
        """Table data was accessed using storage.CreateReadSession API."""

        MATERIALIZED_VIEW_REFRESH: BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...  # 6
        """Table data was accessed during a materialized view refresh."""


        FIELDS_FIELD_NUMBER: builtins.int
        FIELDS_TRUNCATED_FIELD_NUMBER: builtins.int
        POLICY_TAGS_FIELD_NUMBER: builtins.int
        POLICY_TAGS_TRUNCATED_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        SESSION_NAME_FIELD_NUMBER: builtins.int
        @property
        def fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """List of the accessed fields. Entire list is truncated if the record size
            exceeds 100K.
            """
            pass
        fields_truncated: builtins.bool = ...
        """True if the fields list was truncated."""

        @property
        def policy_tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """List of the referenced policy tags. That is, policy tags attached to the
            accessed fields or their ancestors.
            Policy tag resource name is a string of the format:
            `projects/<project_id>/locations/<location_id>/taxonomies/<taxonomy_id>/policyTags/<policy_tag_id>`
            """
            pass
        policy_tags_truncated: builtins.bool = ...
        """True if the policy tag list was truncated. At most 100 policy tags can be
        saved.
        """

        reason: global___BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...
        """Describes how the table data was read."""

        job_name: typing.Text = ...
        """The URI of the job that read a table.
        Present if the reason is JOB but can be redacted for privacy reasons.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        session_name: typing.Text = ...
        """The URI of the read session that read a table.
        Present if the reason is CREATE_READ_SESSION.

        Format:
        `projects/<project_id>/locations/<location>/sessions/<session_id>`.
        """

        def __init__(self,
            *,
            fields : typing.Optional[typing.Iterable[typing.Text]] = ...,
            fields_truncated : builtins.bool = ...,
            policy_tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
            policy_tags_truncated : builtins.bool = ...,
            reason : global___BigQueryAuditMetadata.TableDataRead.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            session_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["fields",b"fields","fields_truncated",b"fields_truncated","job_name",b"job_name","policy_tags",b"policy_tags","policy_tags_truncated",b"policy_tags_truncated","reason",b"reason","session_name",b"session_name"]) -> None: ...

    class TableChange(google.protobuf.message.Message):
        """Table metadata change event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.TableChange.Reason.ValueType = ...  # 0
            """Unknown."""

            TABLE_UPDATE_REQUEST: BigQueryAuditMetadata.TableChange.Reason.ValueType = ...  # 1
            """Table metadata was updated using the tables.update or tables.patch API."""

            JOB: BigQueryAuditMetadata.TableChange.Reason.ValueType = ...  # 2
            """Table was used as a job destination table."""

            QUERY: BigQueryAuditMetadata.TableChange.Reason.ValueType = ...  # 3
            """Table metadata was updated using a DML or DDL query."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the table metadata was changed."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.TableChange.Reason.ValueType = ...  # 0
        """Unknown."""

        TABLE_UPDATE_REQUEST: BigQueryAuditMetadata.TableChange.Reason.ValueType = ...  # 1
        """Table metadata was updated using the tables.update or tables.patch API."""

        JOB: BigQueryAuditMetadata.TableChange.Reason.ValueType = ...  # 2
        """Table was used as a job destination table."""

        QUERY: BigQueryAuditMetadata.TableChange.Reason.ValueType = ...  # 3
        """Table metadata was updated using a DML or DDL query."""


        TABLE_FIELD_NUMBER: builtins.int
        TRUNCATED_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        @property
        def table(self) -> global___BigQueryAuditMetadata.Table:
            """Updated table metadata."""
            pass
        truncated: builtins.bool = ...
        """True if the table was truncated."""

        reason: global___BigQueryAuditMetadata.TableChange.Reason.ValueType = ...
        """Describes how the table metadata was changed."""

        job_name: typing.Text = ...
        """The URI of the job that changed a table.
        Present if the reason is JOB or QUERY.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            table : typing.Optional[global___BigQueryAuditMetadata.Table] = ...,
            truncated : builtins.bool = ...,
            reason : global___BigQueryAuditMetadata.TableChange.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["table",b"table"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","reason",b"reason","table",b"table","truncated",b"truncated"]) -> None: ...

    class ModelMetadataChange(google.protobuf.message.Message):
        """Model metadata change event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.ModelMetadataChange.Reason.ValueType = ...  # 0
            """Unknown."""

            MODEL_PATCH_REQUEST: BigQueryAuditMetadata.ModelMetadataChange.Reason.ValueType = ...  # 1
            """Model metadata was updated using the models.patch API."""

            QUERY: BigQueryAuditMetadata.ModelMetadataChange.Reason.ValueType = ...  # 2
            """Model metadata was updated using a DDL query."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the model metadata was changed."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.ModelMetadataChange.Reason.ValueType = ...  # 0
        """Unknown."""

        MODEL_PATCH_REQUEST: BigQueryAuditMetadata.ModelMetadataChange.Reason.ValueType = ...  # 1
        """Model metadata was updated using the models.patch API."""

        QUERY: BigQueryAuditMetadata.ModelMetadataChange.Reason.ValueType = ...  # 2
        """Model metadata was updated using a DDL query."""


        MODEL_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        @property
        def model(self) -> global___BigQueryAuditMetadata.Model:
            """Updated model."""
            pass
        reason: global___BigQueryAuditMetadata.ModelMetadataChange.Reason.ValueType = ...
        """Describes how the model metadata was changed."""

        job_name: typing.Text = ...
        """The URI of the job that changed the model metadata.
        Present if and only if the reason is QUERY.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            model : typing.Optional[global___BigQueryAuditMetadata.Model] = ...,
            reason : global___BigQueryAuditMetadata.ModelMetadataChange.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["model",b"model"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","model",b"model","reason",b"reason"]) -> None: ...

    class RoutineChange(google.protobuf.message.Message):
        """Routine change event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.RoutineChange.Reason.ValueType = ...  # 0
            """Unknown."""

            QUERY: BigQueryAuditMetadata.RoutineChange.Reason.ValueType = ...  # 1
            """Routine was updated using a DDL query."""

            ROUTINE_UPDATE_REQUEST: BigQueryAuditMetadata.RoutineChange.Reason.ValueType = ...  # 2
            """Routine was updated using the routines.update or routines.patch API."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the routine was updated."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.RoutineChange.Reason.ValueType = ...  # 0
        """Unknown."""

        QUERY: BigQueryAuditMetadata.RoutineChange.Reason.ValueType = ...  # 1
        """Routine was updated using a DDL query."""

        ROUTINE_UPDATE_REQUEST: BigQueryAuditMetadata.RoutineChange.Reason.ValueType = ...  # 2
        """Routine was updated using the routines.update or routines.patch API."""


        ROUTINE_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        @property
        def routine(self) -> global___BigQueryAuditMetadata.Routine:
            """Updated routine."""
            pass
        reason: global___BigQueryAuditMetadata.RoutineChange.Reason.ValueType = ...
        """Describes how the routine was updated."""

        job_name: typing.Text = ...
        """The URI of the job that updated the routine.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            routine : typing.Optional[global___BigQueryAuditMetadata.Routine] = ...,
            reason : global___BigQueryAuditMetadata.RoutineChange.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["routine",b"routine"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","reason",b"reason","routine",b"routine"]) -> None: ...

    class TableDataChange(google.protobuf.message.Message):
        """Table data change event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...  # 0
            """Unknown."""

            JOB: BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...  # 1
            """Table was used as a job destination table."""

            QUERY: BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...  # 2
            """Table data was updated using a DML or DDL query."""

            MATERIALIZED_VIEW_REFRESH: BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...  # 3
            """Table data was updated during a materialized view refresh."""

            WRITE_API: BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...  # 4
            """Table data was added using the Write API."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the table data was changed."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...  # 0
        """Unknown."""

        JOB: BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...  # 1
        """Table was used as a job destination table."""

        QUERY: BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...  # 2
        """Table data was updated using a DML or DDL query."""

        MATERIALIZED_VIEW_REFRESH: BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...  # 3
        """Table data was updated during a materialized view refresh."""

        WRITE_API: BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...  # 4
        """Table data was added using the Write API."""


        DELETED_ROWS_COUNT_FIELD_NUMBER: builtins.int
        INSERTED_ROWS_COUNT_FIELD_NUMBER: builtins.int
        TRUNCATED_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        STREAM_NAME_FIELD_NUMBER: builtins.int
        deleted_rows_count: builtins.int = ...
        """Number of deleted rows."""

        inserted_rows_count: builtins.int = ...
        """Number of inserted rows."""

        truncated: builtins.bool = ...
        """True if the table was truncated."""

        reason: global___BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...
        """Describes how the table data was changed."""

        job_name: typing.Text = ...
        """The URI of the job that changed a table.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        stream_name: typing.Text = ...
        """If written from WRITE_API, the name of the stream.

        Format:
        `projects/<project_id>/datasets/<dataset_id>/tables/<table_id>/streams/<stream_id>`
        """

        def __init__(self,
            *,
            deleted_rows_count : builtins.int = ...,
            inserted_rows_count : builtins.int = ...,
            truncated : builtins.bool = ...,
            reason : global___BigQueryAuditMetadata.TableDataChange.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            stream_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["deleted_rows_count",b"deleted_rows_count","inserted_rows_count",b"inserted_rows_count","job_name",b"job_name","reason",b"reason","stream_name",b"stream_name","truncated",b"truncated"]) -> None: ...

    class ModelDataChange(google.protobuf.message.Message):
        """Model data change event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.ModelDataChange.Reason.ValueType = ...  # 0
            """Unknown."""

            QUERY: BigQueryAuditMetadata.ModelDataChange.Reason.ValueType = ...  # 1
            """Model data was changed using a DDL query."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the model data was changed."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.ModelDataChange.Reason.ValueType = ...  # 0
        """Unknown."""

        QUERY: BigQueryAuditMetadata.ModelDataChange.Reason.ValueType = ...  # 1
        """Model data was changed using a DDL query."""


        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        reason: global___BigQueryAuditMetadata.ModelDataChange.Reason.ValueType = ...
        """Describes how the model data was changed."""

        job_name: typing.Text = ...
        """The URI of the job that changed the model data.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            reason : global___BigQueryAuditMetadata.ModelDataChange.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","reason",b"reason"]) -> None: ...

    class ModelDataRead(google.protobuf.message.Message):
        """Model data read event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.ModelDataRead.Reason.ValueType = ...  # 0
            """Unknown."""

            JOB: BigQueryAuditMetadata.ModelDataRead.Reason.ValueType = ...  # 1
            """Model was used as a source model during a BigQuery job."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the model data was read."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.ModelDataRead.Reason.ValueType = ...  # 0
        """Unknown."""

        JOB: BigQueryAuditMetadata.ModelDataRead.Reason.ValueType = ...  # 1
        """Model was used as a source model during a BigQuery job."""


        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        reason: global___BigQueryAuditMetadata.ModelDataRead.Reason.ValueType = ...
        """Describes how the model data was read."""

        job_name: typing.Text = ...
        """The URI of the job that read the model data.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            reason : global___BigQueryAuditMetadata.ModelDataRead.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","reason",b"reason"]) -> None: ...

    class Dataset(google.protobuf.message.Message):
        """BigQuery dataset."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DATASET_NAME_FIELD_NUMBER: builtins.int
        CREATE_TIME_FIELD_NUMBER: builtins.int
        UPDATE_TIME_FIELD_NUMBER: builtins.int
        ACL_FIELD_NUMBER: builtins.int
        DEFAULT_TABLE_EXPIRE_DURATION_FIELD_NUMBER: builtins.int
        DATASET_INFO_FIELD_NUMBER: builtins.int
        DEFAULT_ENCRYPTION_FIELD_NUMBER: builtins.int
        dataset_name: typing.Text = ...
        """Dataset URI.

        Format: `projects/<project_id>/datasets/<dataset_id>`.
        """

        @property
        def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Dataset creation time."""
            pass
        @property
        def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Dataset metadata last update time."""
            pass
        @property
        def acl(self) -> global___BigQueryAuditMetadata.BigQueryAcl:
            """The access control list for the dataset."""
            pass
        @property
        def default_table_expire_duration(self) -> google.protobuf.duration_pb2.Duration:
            """Default expiration time for tables in the dataset."""
            pass
        @property
        def dataset_info(self) -> global___BigQueryAuditMetadata.EntityInfo:
            """User-provided metadata for the dataset."""
            pass
        @property
        def default_encryption(self) -> global___BigQueryAuditMetadata.EncryptionInfo:
            """Default encryption for tables in the dataset."""
            pass
        def __init__(self,
            *,
            dataset_name : typing.Text = ...,
            create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            acl : typing.Optional[global___BigQueryAuditMetadata.BigQueryAcl] = ...,
            default_table_expire_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            dataset_info : typing.Optional[global___BigQueryAuditMetadata.EntityInfo] = ...,
            default_encryption : typing.Optional[global___BigQueryAuditMetadata.EncryptionInfo] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["acl",b"acl","create_time",b"create_time","dataset_info",b"dataset_info","default_encryption",b"default_encryption","default_table_expire_duration",b"default_table_expire_duration","update_time",b"update_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["acl",b"acl","create_time",b"create_time","dataset_info",b"dataset_info","dataset_name",b"dataset_name","default_encryption",b"default_encryption","default_table_expire_duration",b"default_table_expire_duration","update_time",b"update_time"]) -> None: ...

    class TableDeletion(google.protobuf.message.Message):
        """Table deletion event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.TableDeletion.Reason.ValueType = ...  # 0
            """Unknown."""

            TABLE_DELETE_REQUEST: BigQueryAuditMetadata.TableDeletion.Reason.ValueType = ...  # 2
            """Table was deleted using the tables.delete API."""

            EXPIRED: BigQueryAuditMetadata.TableDeletion.Reason.ValueType = ...  # 3
            """Table expired."""

            QUERY: BigQueryAuditMetadata.TableDeletion.Reason.ValueType = ...  # 4
            """Table deleted using a DDL query."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the table was deleted."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.TableDeletion.Reason.ValueType = ...  # 0
        """Unknown."""

        TABLE_DELETE_REQUEST: BigQueryAuditMetadata.TableDeletion.Reason.ValueType = ...  # 2
        """Table was deleted using the tables.delete API."""

        EXPIRED: BigQueryAuditMetadata.TableDeletion.Reason.ValueType = ...  # 3
        """Table expired."""

        QUERY: BigQueryAuditMetadata.TableDeletion.Reason.ValueType = ...  # 4
        """Table deleted using a DDL query."""


        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        reason: global___BigQueryAuditMetadata.TableDeletion.Reason.ValueType = ...
        """Describes how the table was deleted."""

        job_name: typing.Text = ...
        """The URI of the job that deleted a table.
        Present if the reason is QUERY.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            reason : global___BigQueryAuditMetadata.TableDeletion.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","reason",b"reason"]) -> None: ...

    class ModelDeletion(google.protobuf.message.Message):
        """Model deletion event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.ModelDeletion.Reason.ValueType = ...  # 0
            """Unknown."""

            MODEL_DELETE_REQUEST: BigQueryAuditMetadata.ModelDeletion.Reason.ValueType = ...  # 1
            """Model was deleted using the models.delete API."""

            EXPIRED: BigQueryAuditMetadata.ModelDeletion.Reason.ValueType = ...  # 2
            """Model expired."""

            QUERY: BigQueryAuditMetadata.ModelDeletion.Reason.ValueType = ...  # 3
            """Model was deleted using DDL query."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the model was deleted."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.ModelDeletion.Reason.ValueType = ...  # 0
        """Unknown."""

        MODEL_DELETE_REQUEST: BigQueryAuditMetadata.ModelDeletion.Reason.ValueType = ...  # 1
        """Model was deleted using the models.delete API."""

        EXPIRED: BigQueryAuditMetadata.ModelDeletion.Reason.ValueType = ...  # 2
        """Model expired."""

        QUERY: BigQueryAuditMetadata.ModelDeletion.Reason.ValueType = ...  # 3
        """Model was deleted using DDL query."""


        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        reason: global___BigQueryAuditMetadata.ModelDeletion.Reason.ValueType = ...
        """Describes how the model was deleted."""

        job_name: typing.Text = ...
        """The URI of the job that deleted a model.
        Present if the reason is QUERY.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            reason : global___BigQueryAuditMetadata.ModelDeletion.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","reason",b"reason"]) -> None: ...

    class Model(google.protobuf.message.Message):
        """Trained BigQuery ML model."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MODEL_NAME_FIELD_NUMBER: builtins.int
        MODEL_INFO_FIELD_NUMBER: builtins.int
        EXPIRE_TIME_FIELD_NUMBER: builtins.int
        CREATE_TIME_FIELD_NUMBER: builtins.int
        UPDATE_TIME_FIELD_NUMBER: builtins.int
        ENCRYPTION_FIELD_NUMBER: builtins.int
        model_name: typing.Text = ...
        """Model URI.

        Format: `projects/<project_id>/datasets/<dataset_id>/models/<model_id>`.
        """

        @property
        def model_info(self) -> global___BigQueryAuditMetadata.EntityInfo:
            """User-provided metadata for the model."""
            pass
        @property
        def expire_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Model expiration time."""
            pass
        @property
        def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Model creation time."""
            pass
        @property
        def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Model last update time."""
            pass
        @property
        def encryption(self) -> global___BigQueryAuditMetadata.EncryptionInfo:
            """Model encryption information. Set when non-default encryption is used."""
            pass
        def __init__(self,
            *,
            model_name : typing.Text = ...,
            model_info : typing.Optional[global___BigQueryAuditMetadata.EntityInfo] = ...,
            expire_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            encryption : typing.Optional[global___BigQueryAuditMetadata.EncryptionInfo] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","encryption",b"encryption","expire_time",b"expire_time","model_info",b"model_info","update_time",b"update_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","encryption",b"encryption","expire_time",b"expire_time","model_info",b"model_info","model_name",b"model_name","update_time",b"update_time"]) -> None: ...

    class RoutineDeletion(google.protobuf.message.Message):
        """Routine deletion event."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Reason:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Reason.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            REASON_UNSPECIFIED: BigQueryAuditMetadata.RoutineDeletion.Reason.ValueType = ...  # 0
            """Unknown."""

            QUERY: BigQueryAuditMetadata.RoutineDeletion.Reason.ValueType = ...  # 1
            """Routine was deleted using DDL query."""

            ROUTINE_DELETE_REQUEST: BigQueryAuditMetadata.RoutineDeletion.Reason.ValueType = ...  # 2
            """Routine was deleted using the API."""

        class Reason(_Reason, metaclass=_ReasonEnumTypeWrapper):
            """Describes how the routine was deleted."""
            pass

        REASON_UNSPECIFIED: BigQueryAuditMetadata.RoutineDeletion.Reason.ValueType = ...  # 0
        """Unknown."""

        QUERY: BigQueryAuditMetadata.RoutineDeletion.Reason.ValueType = ...  # 1
        """Routine was deleted using DDL query."""

        ROUTINE_DELETE_REQUEST: BigQueryAuditMetadata.RoutineDeletion.Reason.ValueType = ...  # 2
        """Routine was deleted using the API."""


        ROUTINE_FIELD_NUMBER: builtins.int
        REASON_FIELD_NUMBER: builtins.int
        JOB_NAME_FIELD_NUMBER: builtins.int
        @property
        def routine(self) -> global___BigQueryAuditMetadata.Routine:
            """Deleted routine."""
            pass
        reason: global___BigQueryAuditMetadata.RoutineDeletion.Reason.ValueType = ...
        """Describes how the routine was deleted."""

        job_name: typing.Text = ...
        """The URI of the job that deleted the routine.
        Present if the reason is QUERY.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        def __init__(self,
            *,
            routine : typing.Optional[global___BigQueryAuditMetadata.Routine] = ...,
            reason : global___BigQueryAuditMetadata.RoutineDeletion.Reason.ValueType = ...,
            job_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["routine",b"routine"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_name",b"job_name","reason",b"reason","routine",b"routine"]) -> None: ...

    class Job(google.protobuf.message.Message):
        """BigQuery job."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        JOB_NAME_FIELD_NUMBER: builtins.int
        JOB_CONFIG_FIELD_NUMBER: builtins.int
        JOB_STATUS_FIELD_NUMBER: builtins.int
        JOB_STATS_FIELD_NUMBER: builtins.int
        job_name: typing.Text = ...
        """Job URI.

        Format: `projects/<project_id>/jobs/<job_id>`.
        """

        @property
        def job_config(self) -> global___BigQueryAuditMetadata.JobConfig:
            """Job configuration."""
            pass
        @property
        def job_status(self) -> global___BigQueryAuditMetadata.JobStatus:
            """Job status."""
            pass
        @property
        def job_stats(self) -> global___BigQueryAuditMetadata.JobStats:
            """Job statistics."""
            pass
        def __init__(self,
            *,
            job_name : typing.Text = ...,
            job_config : typing.Optional[global___BigQueryAuditMetadata.JobConfig] = ...,
            job_status : typing.Optional[global___BigQueryAuditMetadata.JobStatus] = ...,
            job_stats : typing.Optional[global___BigQueryAuditMetadata.JobStats] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["job_config",b"job_config","job_stats",b"job_stats","job_status",b"job_status"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["job_config",b"job_config","job_name",b"job_name","job_stats",b"job_stats","job_status",b"job_status"]) -> None: ...

    class JobConfig(google.protobuf.message.Message):
        """Job configuration.
        See the [Jobs](https://cloud.google.com/bigquery/docs/reference/v2/jobs)
        API resource for more details on individual fields.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            TYPE_UNSPECIFIED: BigQueryAuditMetadata.JobConfig.Type.ValueType = ...  # 0
            """Unknown."""

            QUERY: BigQueryAuditMetadata.JobConfig.Type.ValueType = ...  # 1
            """Query job."""

            COPY: BigQueryAuditMetadata.JobConfig.Type.ValueType = ...  # 2
            """Table copy job."""

            EXPORT: BigQueryAuditMetadata.JobConfig.Type.ValueType = ...  # 3
            """Export (extract) job."""

            IMPORT: BigQueryAuditMetadata.JobConfig.Type.ValueType = ...  # 4
            """Import (load) job."""

        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            """Job type."""
            pass

        TYPE_UNSPECIFIED: BigQueryAuditMetadata.JobConfig.Type.ValueType = ...  # 0
        """Unknown."""

        QUERY: BigQueryAuditMetadata.JobConfig.Type.ValueType = ...  # 1
        """Query job."""

        COPY: BigQueryAuditMetadata.JobConfig.Type.ValueType = ...  # 2
        """Table copy job."""

        EXPORT: BigQueryAuditMetadata.JobConfig.Type.ValueType = ...  # 3
        """Export (extract) job."""

        IMPORT: BigQueryAuditMetadata.JobConfig.Type.ValueType = ...  # 4
        """Import (load) job."""


        class Query(google.protobuf.message.Message):
            """Query job configuration."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class _Priority:
                ValueType = typing.NewType('ValueType', builtins.int)
                V: typing_extensions.TypeAlias = ValueType
            class _PriorityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Priority.ValueType], builtins.type):
                DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
                PRIORITY_UNSPECIFIED: BigQueryAuditMetadata.JobConfig.Query.Priority.ValueType = ...  # 0
                """Unknown."""

                QUERY_INTERACTIVE: BigQueryAuditMetadata.JobConfig.Query.Priority.ValueType = ...  # 1
                """Interactive query."""

                QUERY_BATCH: BigQueryAuditMetadata.JobConfig.Query.Priority.ValueType = ...  # 2
                """Batch query."""

            class Priority(_Priority, metaclass=_PriorityEnumTypeWrapper):
                """Priority given to the query."""
                pass

            PRIORITY_UNSPECIFIED: BigQueryAuditMetadata.JobConfig.Query.Priority.ValueType = ...  # 0
            """Unknown."""

            QUERY_INTERACTIVE: BigQueryAuditMetadata.JobConfig.Query.Priority.ValueType = ...  # 1
            """Interactive query."""

            QUERY_BATCH: BigQueryAuditMetadata.JobConfig.Query.Priority.ValueType = ...  # 2
            """Batch query."""


            QUERY_FIELD_NUMBER: builtins.int
            QUERY_TRUNCATED_FIELD_NUMBER: builtins.int
            DESTINATION_TABLE_FIELD_NUMBER: builtins.int
            CREATE_DISPOSITION_FIELD_NUMBER: builtins.int
            WRITE_DISPOSITION_FIELD_NUMBER: builtins.int
            DEFAULT_DATASET_FIELD_NUMBER: builtins.int
            TABLE_DEFINITIONS_FIELD_NUMBER: builtins.int
            PRIORITY_FIELD_NUMBER: builtins.int
            DESTINATION_TABLE_ENCRYPTION_FIELD_NUMBER: builtins.int
            STATEMENT_TYPE_FIELD_NUMBER: builtins.int
            query: typing.Text = ...
            """The SQL query to run. Truncated if exceeds 50K."""

            query_truncated: builtins.bool = ...
            """True if the query field was truncated."""

            destination_table: typing.Text = ...
            """The destination table for the query results."""

            create_disposition: global___BigQueryAuditMetadata.CreateDisposition.ValueType = ...
            """Destination table create disposition."""

            write_disposition: global___BigQueryAuditMetadata.WriteDisposition.ValueType = ...
            """Destination table write disposition."""

            default_dataset: typing.Text = ...
            """Default dataset for the query."""

            @property
            def table_definitions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BigQueryAuditMetadata.TableDefinition]:
                """External data sources used in the query."""
                pass
            priority: global___BigQueryAuditMetadata.JobConfig.Query.Priority.ValueType = ...
            """Priority given to the query."""

            @property
            def destination_table_encryption(self) -> global___BigQueryAuditMetadata.EncryptionInfo:
                """Result table encryption information. Set when non-default encryption is
                used.
                """
                pass
            statement_type: global___BigQueryAuditMetadata.QueryStatementType.ValueType = ...
            """Type of the query."""

            def __init__(self,
                *,
                query : typing.Text = ...,
                query_truncated : builtins.bool = ...,
                destination_table : typing.Text = ...,
                create_disposition : global___BigQueryAuditMetadata.CreateDisposition.ValueType = ...,
                write_disposition : global___BigQueryAuditMetadata.WriteDisposition.ValueType = ...,
                default_dataset : typing.Text = ...,
                table_definitions : typing.Optional[typing.Iterable[global___BigQueryAuditMetadata.TableDefinition]] = ...,
                priority : global___BigQueryAuditMetadata.JobConfig.Query.Priority.ValueType = ...,
                destination_table_encryption : typing.Optional[global___BigQueryAuditMetadata.EncryptionInfo] = ...,
                statement_type : global___BigQueryAuditMetadata.QueryStatementType.ValueType = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["destination_table_encryption",b"destination_table_encryption"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["create_disposition",b"create_disposition","default_dataset",b"default_dataset","destination_table",b"destination_table","destination_table_encryption",b"destination_table_encryption","priority",b"priority","query",b"query","query_truncated",b"query_truncated","statement_type",b"statement_type","table_definitions",b"table_definitions","write_disposition",b"write_disposition"]) -> None: ...

        class Load(google.protobuf.message.Message):
            """Load job configuration."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            SOURCE_URIS_FIELD_NUMBER: builtins.int
            SOURCE_URIS_TRUNCATED_FIELD_NUMBER: builtins.int
            SCHEMA_JSON_FIELD_NUMBER: builtins.int
            SCHEMA_JSON_TRUNCATED_FIELD_NUMBER: builtins.int
            DESTINATION_TABLE_FIELD_NUMBER: builtins.int
            CREATE_DISPOSITION_FIELD_NUMBER: builtins.int
            WRITE_DISPOSITION_FIELD_NUMBER: builtins.int
            DESTINATION_TABLE_ENCRYPTION_FIELD_NUMBER: builtins.int
            @property
            def source_uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """URIs for the data to be imported. Entire list is truncated if exceeds
                40K.
                """
                pass
            source_uris_truncated: builtins.bool = ...
            """True if the source_URIs field was truncated."""

            schema_json: typing.Text = ...
            """The table schema in JSON format. Entire field is truncated if exceeds
            40K.
            """

            schema_json_truncated: builtins.bool = ...
            """True if the schema_json field was truncated."""

            destination_table: typing.Text = ...
            """The destination table for the import."""

            create_disposition: global___BigQueryAuditMetadata.CreateDisposition.ValueType = ...
            """Destination table create disposition."""

            write_disposition: global___BigQueryAuditMetadata.WriteDisposition.ValueType = ...
            """Destination table write disposition."""

            @property
            def destination_table_encryption(self) -> global___BigQueryAuditMetadata.EncryptionInfo:
                """Result table encryption information. Set when non-default encryption is
                used.
                """
                pass
            def __init__(self,
                *,
                source_uris : typing.Optional[typing.Iterable[typing.Text]] = ...,
                source_uris_truncated : builtins.bool = ...,
                schema_json : typing.Text = ...,
                schema_json_truncated : builtins.bool = ...,
                destination_table : typing.Text = ...,
                create_disposition : global___BigQueryAuditMetadata.CreateDisposition.ValueType = ...,
                write_disposition : global___BigQueryAuditMetadata.WriteDisposition.ValueType = ...,
                destination_table_encryption : typing.Optional[global___BigQueryAuditMetadata.EncryptionInfo] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["destination_table_encryption",b"destination_table_encryption"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["create_disposition",b"create_disposition","destination_table",b"destination_table","destination_table_encryption",b"destination_table_encryption","schema_json",b"schema_json","schema_json_truncated",b"schema_json_truncated","source_uris",b"source_uris","source_uris_truncated",b"source_uris_truncated","write_disposition",b"write_disposition"]) -> None: ...

        class Extract(google.protobuf.message.Message):
            """Extract job configuration."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            DESTINATION_URIS_FIELD_NUMBER: builtins.int
            DESTINATION_URIS_TRUNCATED_FIELD_NUMBER: builtins.int
            SOURCE_TABLE_FIELD_NUMBER: builtins.int
            SOURCE_MODEL_FIELD_NUMBER: builtins.int
            @property
            def destination_uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """URIs where extracted data should be written. Entire list is truncated
                if exceeds 50K.
                """
                pass
            destination_uris_truncated: builtins.bool = ...
            """True if the destination_URIs field was truncated."""

            source_table: typing.Text = ...
            """The source table."""

            source_model: typing.Text = ...
            """The source model."""

            def __init__(self,
                *,
                destination_uris : typing.Optional[typing.Iterable[typing.Text]] = ...,
                destination_uris_truncated : builtins.bool = ...,
                source_table : typing.Text = ...,
                source_model : typing.Text = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["source",b"source","source_model",b"source_model","source_table",b"source_table"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["destination_uris",b"destination_uris","destination_uris_truncated",b"destination_uris_truncated","source",b"source","source_model",b"source_model","source_table",b"source_table"]) -> None: ...
            def WhichOneof(self, oneof_group: typing_extensions.Literal["source",b"source"]) -> typing.Optional[typing_extensions.Literal["source_table","source_model"]]: ...

        class TableCopy(google.protobuf.message.Message):
            """Table copy job configuration."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            SOURCE_TABLES_FIELD_NUMBER: builtins.int
            SOURCE_TABLES_TRUNCATED_FIELD_NUMBER: builtins.int
            DESTINATION_TABLE_FIELD_NUMBER: builtins.int
            CREATE_DISPOSITION_FIELD_NUMBER: builtins.int
            WRITE_DISPOSITION_FIELD_NUMBER: builtins.int
            DESTINATION_TABLE_ENCRYPTION_FIELD_NUMBER: builtins.int
            OPERATION_TYPE_FIELD_NUMBER: builtins.int
            DESTINATION_EXPIRATION_TIME_FIELD_NUMBER: builtins.int
            @property
            def source_tables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Source tables. Entire list is truncated if exceeds 50K."""
                pass
            source_tables_truncated: builtins.bool = ...
            """True if the source_tables field was truncated."""

            destination_table: typing.Text = ...
            """Destination table."""

            create_disposition: global___BigQueryAuditMetadata.CreateDisposition.ValueType = ...
            """Destination table create disposition."""

            write_disposition: global___BigQueryAuditMetadata.WriteDisposition.ValueType = ...
            """Destination table write disposition."""

            @property
            def destination_table_encryption(self) -> global___BigQueryAuditMetadata.EncryptionInfo:
                """Result table encryption information. Set when non-default encryption is
                used.
                """
                pass
            operation_type: global___BigQueryAuditMetadata.OperationType.ValueType = ...
            """Supported operation types in the table copy job."""

            @property
            def destination_expiration_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
                """Expiration time set on the destination table. Expired tables will be
                deleted and their storage reclaimed.
                """
                pass
            def __init__(self,
                *,
                source_tables : typing.Optional[typing.Iterable[typing.Text]] = ...,
                source_tables_truncated : builtins.bool = ...,
                destination_table : typing.Text = ...,
                create_disposition : global___BigQueryAuditMetadata.CreateDisposition.ValueType = ...,
                write_disposition : global___BigQueryAuditMetadata.WriteDisposition.ValueType = ...,
                destination_table_encryption : typing.Optional[global___BigQueryAuditMetadata.EncryptionInfo] = ...,
                operation_type : global___BigQueryAuditMetadata.OperationType.ValueType = ...,
                destination_expiration_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["destination_expiration_time",b"destination_expiration_time","destination_table_encryption",b"destination_table_encryption"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["create_disposition",b"create_disposition","destination_expiration_time",b"destination_expiration_time","destination_table",b"destination_table","destination_table_encryption",b"destination_table_encryption","operation_type",b"operation_type","source_tables",b"source_tables","source_tables_truncated",b"source_tables_truncated","write_disposition",b"write_disposition"]) -> None: ...

        class LabelsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text = ...
            value: typing.Text = ...
            def __init__(self,
                *,
                key : typing.Text = ...,
                value : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        TYPE_FIELD_NUMBER: builtins.int
        QUERY_CONFIG_FIELD_NUMBER: builtins.int
        LOAD_CONFIG_FIELD_NUMBER: builtins.int
        EXTRACT_CONFIG_FIELD_NUMBER: builtins.int
        TABLE_COPY_CONFIG_FIELD_NUMBER: builtins.int
        LABELS_FIELD_NUMBER: builtins.int
        type: global___BigQueryAuditMetadata.JobConfig.Type.ValueType = ...
        """Job type."""

        @property
        def query_config(self) -> global___BigQueryAuditMetadata.JobConfig.Query:
            """Query job information."""
            pass
        @property
        def load_config(self) -> global___BigQueryAuditMetadata.JobConfig.Load:
            """Load job information."""
            pass
        @property
        def extract_config(self) -> global___BigQueryAuditMetadata.JobConfig.Extract:
            """Extract job information."""
            pass
        @property
        def table_copy_config(self) -> global___BigQueryAuditMetadata.JobConfig.TableCopy:
            """TableCopy job information."""
            pass
        @property
        def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
            """Labels provided for the job."""
            pass
        def __init__(self,
            *,
            type : global___BigQueryAuditMetadata.JobConfig.Type.ValueType = ...,
            query_config : typing.Optional[global___BigQueryAuditMetadata.JobConfig.Query] = ...,
            load_config : typing.Optional[global___BigQueryAuditMetadata.JobConfig.Load] = ...,
            extract_config : typing.Optional[global___BigQueryAuditMetadata.JobConfig.Extract] = ...,
            table_copy_config : typing.Optional[global___BigQueryAuditMetadata.JobConfig.TableCopy] = ...,
            labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["config",b"config","extract_config",b"extract_config","load_config",b"load_config","query_config",b"query_config","table_copy_config",b"table_copy_config"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["config",b"config","extract_config",b"extract_config","labels",b"labels","load_config",b"load_config","query_config",b"query_config","table_copy_config",b"table_copy_config","type",b"type"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["config",b"config"]) -> typing.Optional[typing_extensions.Literal["query_config","load_config","extract_config","table_copy_config"]]: ...

    class TableDefinition(google.protobuf.message.Message):
        """Definition of an external data source used in a query."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_FIELD_NUMBER: builtins.int
        SOURCE_URIS_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """Name of the table, used in queries."""

        @property
        def source_uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """URIs for the data."""
            pass
        def __init__(self,
            *,
            name : typing.Text = ...,
            source_uris : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name",b"name","source_uris",b"source_uris"]) -> None: ...

    class JobStatus(google.protobuf.message.Message):
        """Status of a job."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        JOB_STATE_FIELD_NUMBER: builtins.int
        ERROR_RESULT_FIELD_NUMBER: builtins.int
        ERRORS_FIELD_NUMBER: builtins.int
        job_state: global___BigQueryAuditMetadata.JobState.ValueType = ...
        """State of the job."""

        @property
        def error_result(self) -> google.rpc.status_pb2.Status:
            """Job error, if the job failed."""
            pass
        @property
        def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.rpc.status_pb2.Status]:
            """Errors encountered during the running of the job. Does not necessarily
            mean that the job has completed or was unsuccessful.
            """
            pass
        def __init__(self,
            *,
            job_state : global___BigQueryAuditMetadata.JobState.ValueType = ...,
            error_result : typing.Optional[google.rpc.status_pb2.Status] = ...,
            errors : typing.Optional[typing.Iterable[google.rpc.status_pb2.Status]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["error_result",b"error_result"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["error_result",b"error_result","errors",b"errors","job_state",b"job_state"]) -> None: ...

    class JobStats(google.protobuf.message.Message):
        """Job statistics."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Query(google.protobuf.message.Message):
            """Query job statistics."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TOTAL_PROCESSED_BYTES_FIELD_NUMBER: builtins.int
            TOTAL_BILLED_BYTES_FIELD_NUMBER: builtins.int
            BILLING_TIER_FIELD_NUMBER: builtins.int
            REFERENCED_TABLES_FIELD_NUMBER: builtins.int
            REFERENCED_VIEWS_FIELD_NUMBER: builtins.int
            REFERENCED_ROUTINES_FIELD_NUMBER: builtins.int
            OUTPUT_ROW_COUNT_FIELD_NUMBER: builtins.int
            CACHE_HIT_FIELD_NUMBER: builtins.int
            total_processed_bytes: builtins.int = ...
            """Total bytes processed by the query job."""

            total_billed_bytes: builtins.int = ...
            """Total bytes billed by the query job."""

            billing_tier: builtins.int = ...
            """The tier assigned by the CPU-based billing."""

            @property
            def referenced_tables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Tables accessed by the query job."""
                pass
            @property
            def referenced_views(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Views accessed by the query job."""
                pass
            @property
            def referenced_routines(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Routines accessed by the query job."""
                pass
            output_row_count: builtins.int = ...
            """Number of output rows produced by the query job."""

            cache_hit: builtins.bool = ...
            """True if the query job results were read from the query cache."""

            def __init__(self,
                *,
                total_processed_bytes : builtins.int = ...,
                total_billed_bytes : builtins.int = ...,
                billing_tier : builtins.int = ...,
                referenced_tables : typing.Optional[typing.Iterable[typing.Text]] = ...,
                referenced_views : typing.Optional[typing.Iterable[typing.Text]] = ...,
                referenced_routines : typing.Optional[typing.Iterable[typing.Text]] = ...,
                output_row_count : builtins.int = ...,
                cache_hit : builtins.bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["billing_tier",b"billing_tier","cache_hit",b"cache_hit","output_row_count",b"output_row_count","referenced_routines",b"referenced_routines","referenced_tables",b"referenced_tables","referenced_views",b"referenced_views","total_billed_bytes",b"total_billed_bytes","total_processed_bytes",b"total_processed_bytes"]) -> None: ...

        class Load(google.protobuf.message.Message):
            """Load job statistics."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TOTAL_OUTPUT_BYTES_FIELD_NUMBER: builtins.int
            total_output_bytes: builtins.int = ...
            """Total bytes loaded by the import job."""

            def __init__(self,
                *,
                total_output_bytes : builtins.int = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["total_output_bytes",b"total_output_bytes"]) -> None: ...

        class Extract(google.protobuf.message.Message):
            """Extract job statistics."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TOTAL_INPUT_BYTES_FIELD_NUMBER: builtins.int
            total_input_bytes: builtins.int = ...
            """Total bytes exported by the extract job."""

            def __init__(self,
                *,
                total_input_bytes : builtins.int = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["total_input_bytes",b"total_input_bytes"]) -> None: ...

        class ReservationResourceUsage(google.protobuf.message.Message):
            """Job resource usage breakdown by reservation."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            SLOT_MS_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            """Reservation name or "unreserved" for on-demand resources usage."""

            slot_ms: builtins.int = ...
            """Total slot milliseconds used by the reservation for a particular job."""

            def __init__(self,
                *,
                name : typing.Text = ...,
                slot_ms : builtins.int = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name","slot_ms",b"slot_ms"]) -> None: ...

        CREATE_TIME_FIELD_NUMBER: builtins.int
        START_TIME_FIELD_NUMBER: builtins.int
        END_TIME_FIELD_NUMBER: builtins.int
        QUERY_STATS_FIELD_NUMBER: builtins.int
        LOAD_STATS_FIELD_NUMBER: builtins.int
        EXTRACT_STATS_FIELD_NUMBER: builtins.int
        TOTAL_SLOT_MS_FIELD_NUMBER: builtins.int
        RESERVATION_USAGE_FIELD_NUMBER: builtins.int
        PARENT_JOB_NAME_FIELD_NUMBER: builtins.int
        @property
        def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Job creation time."""
            pass
        @property
        def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Job execution start time."""
            pass
        @property
        def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Job completion time."""
            pass
        @property
        def query_stats(self) -> global___BigQueryAuditMetadata.JobStats.Query:
            """Query job statistics."""
            pass
        @property
        def load_stats(self) -> global___BigQueryAuditMetadata.JobStats.Load:
            """Load job statistics."""
            pass
        @property
        def extract_stats(self) -> global___BigQueryAuditMetadata.JobStats.Extract:
            """Extract job statistics."""
            pass
        total_slot_ms: builtins.int = ...
        """The total number of slot-ms consumed by the query job."""

        @property
        def reservation_usage(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BigQueryAuditMetadata.JobStats.ReservationResourceUsage]:
            """Reservation usage attributed from each tier of a reservation hierarchy."""
            pass
        parent_job_name: typing.Text = ...
        """Parent job name. Only present for child jobs."""

        def __init__(self,
            *,
            create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            query_stats : typing.Optional[global___BigQueryAuditMetadata.JobStats.Query] = ...,
            load_stats : typing.Optional[global___BigQueryAuditMetadata.JobStats.Load] = ...,
            extract_stats : typing.Optional[global___BigQueryAuditMetadata.JobStats.Extract] = ...,
            total_slot_ms : builtins.int = ...,
            reservation_usage : typing.Optional[typing.Iterable[global___BigQueryAuditMetadata.JobStats.ReservationResourceUsage]] = ...,
            parent_job_name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","extended",b"extended","extract_stats",b"extract_stats","load_stats",b"load_stats","query_stats",b"query_stats","start_time",b"start_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","extended",b"extended","extract_stats",b"extract_stats","load_stats",b"load_stats","parent_job_name",b"parent_job_name","query_stats",b"query_stats","reservation_usage",b"reservation_usage","start_time",b"start_time","total_slot_ms",b"total_slot_ms"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["extended",b"extended"]) -> typing.Optional[typing_extensions.Literal["query_stats","load_stats","extract_stats"]]: ...

    class Table(google.protobuf.message.Message):
        """BigQuery table."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TABLE_NAME_FIELD_NUMBER: builtins.int
        SCHEMA_JSON_FIELD_NUMBER: builtins.int
        SCHEMA_JSON_TRUNCATED_FIELD_NUMBER: builtins.int
        VIEW_FIELD_NUMBER: builtins.int
        EXPIRE_TIME_FIELD_NUMBER: builtins.int
        CREATE_TIME_FIELD_NUMBER: builtins.int
        UPDATE_TIME_FIELD_NUMBER: builtins.int
        TRUNCATE_TIME_FIELD_NUMBER: builtins.int
        ENCRYPTION_FIELD_NUMBER: builtins.int
        TABLE_INFO_FIELD_NUMBER: builtins.int
        table_name: typing.Text = ...
        """Table URI.

        Format: `projects/<project_id>/datasets/<dataset_id>/tables/<table_id>`.
        """

        schema_json: typing.Text = ...
        """A JSON representation of the table's schema. Entire field is truncated
        if exceeds 40K.
        """

        schema_json_truncated: builtins.bool = ...
        """True if the schema_json field was truncated."""

        @property
        def view(self) -> global___BigQueryAuditMetadata.TableViewDefinition:
            """View metadata. Only present for views."""
            pass
        @property
        def expire_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Table expiration time."""
            pass
        @property
        def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """The table creation time."""
            pass
        @property
        def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """The last time metadata update time."""
            pass
        @property
        def truncate_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """The last table truncation time."""
            pass
        @property
        def encryption(self) -> global___BigQueryAuditMetadata.EncryptionInfo:
            """Table encryption information. Set when non-default encryption is used."""
            pass
        @property
        def table_info(self) -> global___BigQueryAuditMetadata.EntityInfo:
            """User-provided metadata for the table."""
            pass
        def __init__(self,
            *,
            table_name : typing.Text = ...,
            schema_json : typing.Text = ...,
            schema_json_truncated : builtins.bool = ...,
            view : typing.Optional[global___BigQueryAuditMetadata.TableViewDefinition] = ...,
            expire_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            truncate_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            encryption : typing.Optional[global___BigQueryAuditMetadata.EncryptionInfo] = ...,
            table_info : typing.Optional[global___BigQueryAuditMetadata.EntityInfo] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","encryption",b"encryption","expire_time",b"expire_time","table_info",b"table_info","truncate_time",b"truncate_time","update_time",b"update_time","view",b"view"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","encryption",b"encryption","expire_time",b"expire_time","schema_json",b"schema_json","schema_json_truncated",b"schema_json_truncated","table_info",b"table_info","table_name",b"table_name","truncate_time",b"truncate_time","update_time",b"update_time","view",b"view"]) -> None: ...

    class Routine(google.protobuf.message.Message):
        """User Defined Function (UDF) or Stored Procedure."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ROUTINE_NAME_FIELD_NUMBER: builtins.int
        CREATE_TIME_FIELD_NUMBER: builtins.int
        UPDATE_TIME_FIELD_NUMBER: builtins.int
        routine_name: typing.Text = ...
        """Routine URI.

        Format:
        `projects/<project_id>/datasets/<dataset_id>/routines/<routine_id>`.
        """

        @property
        def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Routine creation time."""
            pass
        @property
        def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Routine last update time."""
            pass
        def __init__(self,
            *,
            routine_name : typing.Text = ...,
            create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","routine_name",b"routine_name","update_time",b"update_time"]) -> None: ...

    class EntityInfo(google.protobuf.message.Message):
        """User-provided metadata for an entity, for e.g. dataset, table or model."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class LabelsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text = ...
            value: typing.Text = ...
            def __init__(self,
                *,
                key : typing.Text = ...,
                value : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        FRIENDLY_NAME_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        LABELS_FIELD_NUMBER: builtins.int
        friendly_name: typing.Text = ...
        """A short name for the entity."""

        description: typing.Text = ...
        """A long description for the entity."""

        @property
        def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
            """Labels provided for the entity."""
            pass
        def __init__(self,
            *,
            friendly_name : typing.Text = ...,
            description : typing.Text = ...,
            labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["description",b"description","friendly_name",b"friendly_name","labels",b"labels"]) -> None: ...

    class TableViewDefinition(google.protobuf.message.Message):
        """View definition."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        QUERY_FIELD_NUMBER: builtins.int
        QUERY_TRUNCATED_FIELD_NUMBER: builtins.int
        query: typing.Text = ...
        """SQL query defining the view. Truncated if exceeds 40K."""

        query_truncated: builtins.bool = ...
        """True if the schema_json field was truncated."""

        def __init__(self,
            *,
            query : typing.Text = ...,
            query_truncated : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["query",b"query","query_truncated",b"query_truncated"]) -> None: ...

    class BigQueryAcl(google.protobuf.message.Message):
        """An access control list."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        POLICY_FIELD_NUMBER: builtins.int
        AUTHORIZED_VIEWS_FIELD_NUMBER: builtins.int
        @property
        def policy(self) -> google.iam.v1.policy_pb2.Policy:
            """IAM policy for the resource."""
            pass
        @property
        def authorized_views(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """List of authorized views for a dataset.

            Format: `projects/<project_id>/datasets/<dataset_id>/tables/<view_id>`.
            """
            pass
        def __init__(self,
            *,
            policy : typing.Optional[google.iam.v1.policy_pb2.Policy] = ...,
            authorized_views : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["policy",b"policy"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["authorized_views",b"authorized_views","policy",b"policy"]) -> None: ...

    class EncryptionInfo(google.protobuf.message.Message):
        """Encryption properties for a table or a job"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KMS_KEY_NAME_FIELD_NUMBER: builtins.int
        kms_key_name: typing.Text = ...
        """Cloud kms key identifier.

        Format:
        `projects/<project_id>/locations/<location>/keyRings/<key_ring_name>/cryptoKeys/<key_name>`
        """

        def __init__(self,
            *,
            kms_key_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["kms_key_name",b"kms_key_name"]) -> None: ...

    JOB_INSERTION_FIELD_NUMBER: builtins.int
    JOB_CHANGE_FIELD_NUMBER: builtins.int
    DATASET_CREATION_FIELD_NUMBER: builtins.int
    DATASET_CHANGE_FIELD_NUMBER: builtins.int
    DATASET_DELETION_FIELD_NUMBER: builtins.int
    TABLE_CREATION_FIELD_NUMBER: builtins.int
    TABLE_CHANGE_FIELD_NUMBER: builtins.int
    TABLE_DELETION_FIELD_NUMBER: builtins.int
    TABLE_DATA_READ_FIELD_NUMBER: builtins.int
    TABLE_DATA_CHANGE_FIELD_NUMBER: builtins.int
    MODEL_DELETION_FIELD_NUMBER: builtins.int
    MODEL_CREATION_FIELD_NUMBER: builtins.int
    MODEL_METADATA_CHANGE_FIELD_NUMBER: builtins.int
    MODEL_DATA_CHANGE_FIELD_NUMBER: builtins.int
    MODEL_DATA_READ_FIELD_NUMBER: builtins.int
    ROUTINE_CREATION_FIELD_NUMBER: builtins.int
    ROUTINE_CHANGE_FIELD_NUMBER: builtins.int
    ROUTINE_DELETION_FIELD_NUMBER: builtins.int
    @property
    def job_insertion(self) -> global___BigQueryAuditMetadata.JobInsertion:
        """Job insertion event."""
        pass
    @property
    def job_change(self) -> global___BigQueryAuditMetadata.JobChange:
        """Job state change event."""
        pass
    @property
    def dataset_creation(self) -> global___BigQueryAuditMetadata.DatasetCreation:
        """Dataset creation event."""
        pass
    @property
    def dataset_change(self) -> global___BigQueryAuditMetadata.DatasetChange:
        """Dataset change event."""
        pass
    @property
    def dataset_deletion(self) -> global___BigQueryAuditMetadata.DatasetDeletion:
        """Dataset deletion event."""
        pass
    @property
    def table_creation(self) -> global___BigQueryAuditMetadata.TableCreation:
        """Table creation event."""
        pass
    @property
    def table_change(self) -> global___BigQueryAuditMetadata.TableChange:
        """Table metadata change event."""
        pass
    @property
    def table_deletion(self) -> global___BigQueryAuditMetadata.TableDeletion:
        """Table deletion event."""
        pass
    @property
    def table_data_read(self) -> global___BigQueryAuditMetadata.TableDataRead:
        """Table data read event."""
        pass
    @property
    def table_data_change(self) -> global___BigQueryAuditMetadata.TableDataChange:
        """Table data change event."""
        pass
    @property
    def model_deletion(self) -> global___BigQueryAuditMetadata.ModelDeletion:
        """Model deletion event."""
        pass
    @property
    def model_creation(self) -> global___BigQueryAuditMetadata.ModelCreation:
        """Model creation event."""
        pass
    @property
    def model_metadata_change(self) -> global___BigQueryAuditMetadata.ModelMetadataChange:
        """Model metadata change event."""
        pass
    @property
    def model_data_change(self) -> global___BigQueryAuditMetadata.ModelDataChange:
        """Model data change event."""
        pass
    @property
    def model_data_read(self) -> global___BigQueryAuditMetadata.ModelDataRead:
        """Model data read event."""
        pass
    @property
    def routine_creation(self) -> global___BigQueryAuditMetadata.RoutineCreation:
        """Routine creation event."""
        pass
    @property
    def routine_change(self) -> global___BigQueryAuditMetadata.RoutineChange:
        """Routine change event."""
        pass
    @property
    def routine_deletion(self) -> global___BigQueryAuditMetadata.RoutineDeletion:
        """Routine deletion event."""
        pass
    def __init__(self,
        *,
        job_insertion : typing.Optional[global___BigQueryAuditMetadata.JobInsertion] = ...,
        job_change : typing.Optional[global___BigQueryAuditMetadata.JobChange] = ...,
        dataset_creation : typing.Optional[global___BigQueryAuditMetadata.DatasetCreation] = ...,
        dataset_change : typing.Optional[global___BigQueryAuditMetadata.DatasetChange] = ...,
        dataset_deletion : typing.Optional[global___BigQueryAuditMetadata.DatasetDeletion] = ...,
        table_creation : typing.Optional[global___BigQueryAuditMetadata.TableCreation] = ...,
        table_change : typing.Optional[global___BigQueryAuditMetadata.TableChange] = ...,
        table_deletion : typing.Optional[global___BigQueryAuditMetadata.TableDeletion] = ...,
        table_data_read : typing.Optional[global___BigQueryAuditMetadata.TableDataRead] = ...,
        table_data_change : typing.Optional[global___BigQueryAuditMetadata.TableDataChange] = ...,
        model_deletion : typing.Optional[global___BigQueryAuditMetadata.ModelDeletion] = ...,
        model_creation : typing.Optional[global___BigQueryAuditMetadata.ModelCreation] = ...,
        model_metadata_change : typing.Optional[global___BigQueryAuditMetadata.ModelMetadataChange] = ...,
        model_data_change : typing.Optional[global___BigQueryAuditMetadata.ModelDataChange] = ...,
        model_data_read : typing.Optional[global___BigQueryAuditMetadata.ModelDataRead] = ...,
        routine_creation : typing.Optional[global___BigQueryAuditMetadata.RoutineCreation] = ...,
        routine_change : typing.Optional[global___BigQueryAuditMetadata.RoutineChange] = ...,
        routine_deletion : typing.Optional[global___BigQueryAuditMetadata.RoutineDeletion] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_change",b"dataset_change","dataset_creation",b"dataset_creation","dataset_deletion",b"dataset_deletion","event",b"event","job_change",b"job_change","job_insertion",b"job_insertion","model_creation",b"model_creation","model_data_change",b"model_data_change","model_data_read",b"model_data_read","model_deletion",b"model_deletion","model_metadata_change",b"model_metadata_change","routine_change",b"routine_change","routine_creation",b"routine_creation","routine_deletion",b"routine_deletion","table_change",b"table_change","table_creation",b"table_creation","table_data_change",b"table_data_change","table_data_read",b"table_data_read","table_deletion",b"table_deletion"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_change",b"dataset_change","dataset_creation",b"dataset_creation","dataset_deletion",b"dataset_deletion","event",b"event","job_change",b"job_change","job_insertion",b"job_insertion","model_creation",b"model_creation","model_data_change",b"model_data_change","model_data_read",b"model_data_read","model_deletion",b"model_deletion","model_metadata_change",b"model_metadata_change","routine_change",b"routine_change","routine_creation",b"routine_creation","routine_deletion",b"routine_deletion","table_change",b"table_change","table_creation",b"table_creation","table_data_change",b"table_data_change","table_data_read",b"table_data_read","table_deletion",b"table_deletion"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["event",b"event"]) -> typing.Optional[typing_extensions.Literal["job_insertion","job_change","dataset_creation","dataset_change","dataset_deletion","table_creation","table_change","table_deletion","table_data_read","table_data_change","model_deletion","model_creation","model_metadata_change","model_data_change","model_data_read","routine_creation","routine_change","routine_deletion"]]: ...
global___BigQueryAuditMetadata = BigQueryAuditMetadata
