# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/dataflow/v1beta3/templates.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.dataflow.v1beta3.environment_pb2
import google.dataflow.v1beta3.jobs_pb2
import google.rpc.status_pb2
import google.api.client_pb2
import google.dataflow.v1beta3.templates_pb2


class TemplatesServiceBase(abc.ABC):

    @abc.abstractmethod
    async def CreateJobFromTemplate(self, stream: 'grpclib.server.Stream[google.dataflow.v1beta3.templates_pb2.CreateJobFromTemplateRequest, google.dataflow.v1beta3.jobs_pb2.Job]') -> None:
        pass

    @abc.abstractmethod
    async def LaunchTemplate(self, stream: 'grpclib.server.Stream[google.dataflow.v1beta3.templates_pb2.LaunchTemplateRequest, google.dataflow.v1beta3.templates_pb2.LaunchTemplateResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetTemplate(self, stream: 'grpclib.server.Stream[google.dataflow.v1beta3.templates_pb2.GetTemplateRequest, google.dataflow.v1beta3.templates_pb2.GetTemplateResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.dataflow.v1beta3.TemplatesService/CreateJobFromTemplate': grpclib.const.Handler(
                self.CreateJobFromTemplate,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.dataflow.v1beta3.templates_pb2.CreateJobFromTemplateRequest,
                google.dataflow.v1beta3.jobs_pb2.Job,
            ),
            '/google.dataflow.v1beta3.TemplatesService/LaunchTemplate': grpclib.const.Handler(
                self.LaunchTemplate,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.dataflow.v1beta3.templates_pb2.LaunchTemplateRequest,
                google.dataflow.v1beta3.templates_pb2.LaunchTemplateResponse,
            ),
            '/google.dataflow.v1beta3.TemplatesService/GetTemplate': grpclib.const.Handler(
                self.GetTemplate,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.dataflow.v1beta3.templates_pb2.GetTemplateRequest,
                google.dataflow.v1beta3.templates_pb2.GetTemplateResponse,
            ),
        }


class TemplatesServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateJobFromTemplate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.dataflow.v1beta3.TemplatesService/CreateJobFromTemplate',
            google.dataflow.v1beta3.templates_pb2.CreateJobFromTemplateRequest,
            google.dataflow.v1beta3.jobs_pb2.Job,
        )
        self.LaunchTemplate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.dataflow.v1beta3.TemplatesService/LaunchTemplate',
            google.dataflow.v1beta3.templates_pb2.LaunchTemplateRequest,
            google.dataflow.v1beta3.templates_pb2.LaunchTemplateResponse,
        )
        self.GetTemplate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.dataflow.v1beta3.TemplatesService/GetTemplate',
            google.dataflow.v1beta3.templates_pb2.GetTemplateRequest,
            google.dataflow.v1beta3.templates_pb2.GetTemplateResponse,
        )


class FlexTemplatesServiceBase(abc.ABC):

    @abc.abstractmethod
    async def LaunchFlexTemplate(self, stream: 'grpclib.server.Stream[google.dataflow.v1beta3.templates_pb2.LaunchFlexTemplateRequest, google.dataflow.v1beta3.templates_pb2.LaunchFlexTemplateResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.dataflow.v1beta3.FlexTemplatesService/LaunchFlexTemplate': grpclib.const.Handler(
                self.LaunchFlexTemplate,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.dataflow.v1beta3.templates_pb2.LaunchFlexTemplateRequest,
                google.dataflow.v1beta3.templates_pb2.LaunchFlexTemplateResponse,
            ),
        }


class FlexTemplatesServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.LaunchFlexTemplate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.dataflow.v1beta3.FlexTemplatesService/LaunchFlexTemplate',
            google.dataflow.v1beta3.templates_pb2.LaunchFlexTemplateRequest,
            google.dataflow.v1beta3.templates_pb2.LaunchFlexTemplateResponse,
        )
