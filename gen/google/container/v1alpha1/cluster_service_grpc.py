# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/container/v1alpha1/cluster_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.protobuf.empty_pb2
import google.container.v1alpha1.cluster_service_pb2


class ClusterManagerBase(abc.ABC):

    @abc.abstractmethod
    async def ListClusters(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.ListClustersRequest, google.container.v1alpha1.cluster_service_pb2.ListClustersResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetCluster(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.GetClusterRequest, google.container.v1alpha1.cluster_service_pb2.Cluster]') -> None:
        pass

    @abc.abstractmethod
    async def CreateCluster(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.CreateClusterRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateCluster(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.UpdateClusterRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateNodePool(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.UpdateNodePoolRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetNodePoolAutoscaling(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetNodePoolAutoscalingRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetLoggingService(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetLoggingServiceRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetMonitoringService(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetMonitoringServiceRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetAddonsConfig(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetAddonsConfigRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetLocations(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetLocationsRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateMaster(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.UpdateMasterRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetMasterAuth(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetMasterAuthRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteCluster(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.DeleteClusterRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ListOperations(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.ListOperationsRequest, google.container.v1alpha1.cluster_service_pb2.ListOperationsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetOperation(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.GetOperationRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def CancelOperation(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.CancelOperationRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def GetServerConfig(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.GetServerConfigRequest, google.container.v1alpha1.cluster_service_pb2.ServerConfig]') -> None:
        pass

    @abc.abstractmethod
    async def ListNodePools(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.ListNodePoolsRequest, google.container.v1alpha1.cluster_service_pb2.ListNodePoolsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetNodePool(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.GetNodePoolRequest, google.container.v1alpha1.cluster_service_pb2.NodePool]') -> None:
        pass

    @abc.abstractmethod
    async def CreateNodePool(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.CreateNodePoolRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteNodePool(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.DeleteNodePoolRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def RollbackNodePoolUpgrade(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.RollbackNodePoolUpgradeRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetNodePoolManagement(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetNodePoolManagementRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetLabels(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetLabelsRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetLegacyAbac(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetLegacyAbacRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def StartIPRotation(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.StartIPRotationRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def CompleteIPRotation(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.CompleteIPRotationRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetNodePoolSize(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetNodePoolSizeRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetNetworkPolicy(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetNetworkPolicyRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def SetMaintenancePolicy(self, stream: 'grpclib.server.Stream[google.container.v1alpha1.cluster_service_pb2.SetMaintenancePolicyRequest, google.container.v1alpha1.cluster_service_pb2.Operation]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.container.v1alpha1.ClusterManager/ListClusters': grpclib.const.Handler(
                self.ListClusters,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.ListClustersRequest,
                google.container.v1alpha1.cluster_service_pb2.ListClustersResponse,
            ),
            '/google.container.v1alpha1.ClusterManager/GetCluster': grpclib.const.Handler(
                self.GetCluster,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.GetClusterRequest,
                google.container.v1alpha1.cluster_service_pb2.Cluster,
            ),
            '/google.container.v1alpha1.ClusterManager/CreateCluster': grpclib.const.Handler(
                self.CreateCluster,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.CreateClusterRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/UpdateCluster': grpclib.const.Handler(
                self.UpdateCluster,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.UpdateClusterRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/UpdateNodePool': grpclib.const.Handler(
                self.UpdateNodePool,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.UpdateNodePoolRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetNodePoolAutoscaling': grpclib.const.Handler(
                self.SetNodePoolAutoscaling,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetNodePoolAutoscalingRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetLoggingService': grpclib.const.Handler(
                self.SetLoggingService,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetLoggingServiceRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetMonitoringService': grpclib.const.Handler(
                self.SetMonitoringService,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetMonitoringServiceRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetAddonsConfig': grpclib.const.Handler(
                self.SetAddonsConfig,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetAddonsConfigRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetLocations': grpclib.const.Handler(
                self.SetLocations,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetLocationsRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/UpdateMaster': grpclib.const.Handler(
                self.UpdateMaster,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.UpdateMasterRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetMasterAuth': grpclib.const.Handler(
                self.SetMasterAuth,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetMasterAuthRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/DeleteCluster': grpclib.const.Handler(
                self.DeleteCluster,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.DeleteClusterRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/ListOperations': grpclib.const.Handler(
                self.ListOperations,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.ListOperationsRequest,
                google.container.v1alpha1.cluster_service_pb2.ListOperationsResponse,
            ),
            '/google.container.v1alpha1.ClusterManager/GetOperation': grpclib.const.Handler(
                self.GetOperation,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.GetOperationRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/CancelOperation': grpclib.const.Handler(
                self.CancelOperation,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.CancelOperationRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.container.v1alpha1.ClusterManager/GetServerConfig': grpclib.const.Handler(
                self.GetServerConfig,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.GetServerConfigRequest,
                google.container.v1alpha1.cluster_service_pb2.ServerConfig,
            ),
            '/google.container.v1alpha1.ClusterManager/ListNodePools': grpclib.const.Handler(
                self.ListNodePools,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.ListNodePoolsRequest,
                google.container.v1alpha1.cluster_service_pb2.ListNodePoolsResponse,
            ),
            '/google.container.v1alpha1.ClusterManager/GetNodePool': grpclib.const.Handler(
                self.GetNodePool,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.GetNodePoolRequest,
                google.container.v1alpha1.cluster_service_pb2.NodePool,
            ),
            '/google.container.v1alpha1.ClusterManager/CreateNodePool': grpclib.const.Handler(
                self.CreateNodePool,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.CreateNodePoolRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/DeleteNodePool': grpclib.const.Handler(
                self.DeleteNodePool,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.DeleteNodePoolRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/RollbackNodePoolUpgrade': grpclib.const.Handler(
                self.RollbackNodePoolUpgrade,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.RollbackNodePoolUpgradeRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetNodePoolManagement': grpclib.const.Handler(
                self.SetNodePoolManagement,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetNodePoolManagementRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetLabels': grpclib.const.Handler(
                self.SetLabels,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetLabelsRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetLegacyAbac': grpclib.const.Handler(
                self.SetLegacyAbac,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetLegacyAbacRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/StartIPRotation': grpclib.const.Handler(
                self.StartIPRotation,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.StartIPRotationRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/CompleteIPRotation': grpclib.const.Handler(
                self.CompleteIPRotation,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.CompleteIPRotationRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetNodePoolSize': grpclib.const.Handler(
                self.SetNodePoolSize,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetNodePoolSizeRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetNetworkPolicy': grpclib.const.Handler(
                self.SetNetworkPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetNetworkPolicyRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
            '/google.container.v1alpha1.ClusterManager/SetMaintenancePolicy': grpclib.const.Handler(
                self.SetMaintenancePolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.container.v1alpha1.cluster_service_pb2.SetMaintenancePolicyRequest,
                google.container.v1alpha1.cluster_service_pb2.Operation,
            ),
        }


class ClusterManagerStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListClusters = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/ListClusters',
            google.container.v1alpha1.cluster_service_pb2.ListClustersRequest,
            google.container.v1alpha1.cluster_service_pb2.ListClustersResponse,
        )
        self.GetCluster = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/GetCluster',
            google.container.v1alpha1.cluster_service_pb2.GetClusterRequest,
            google.container.v1alpha1.cluster_service_pb2.Cluster,
        )
        self.CreateCluster = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/CreateCluster',
            google.container.v1alpha1.cluster_service_pb2.CreateClusterRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.UpdateCluster = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/UpdateCluster',
            google.container.v1alpha1.cluster_service_pb2.UpdateClusterRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.UpdateNodePool = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/UpdateNodePool',
            google.container.v1alpha1.cluster_service_pb2.UpdateNodePoolRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetNodePoolAutoscaling = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetNodePoolAutoscaling',
            google.container.v1alpha1.cluster_service_pb2.SetNodePoolAutoscalingRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetLoggingService = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetLoggingService',
            google.container.v1alpha1.cluster_service_pb2.SetLoggingServiceRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetMonitoringService = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetMonitoringService',
            google.container.v1alpha1.cluster_service_pb2.SetMonitoringServiceRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetAddonsConfig = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetAddonsConfig',
            google.container.v1alpha1.cluster_service_pb2.SetAddonsConfigRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetLocations = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetLocations',
            google.container.v1alpha1.cluster_service_pb2.SetLocationsRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.UpdateMaster = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/UpdateMaster',
            google.container.v1alpha1.cluster_service_pb2.UpdateMasterRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetMasterAuth = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetMasterAuth',
            google.container.v1alpha1.cluster_service_pb2.SetMasterAuthRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.DeleteCluster = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/DeleteCluster',
            google.container.v1alpha1.cluster_service_pb2.DeleteClusterRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.ListOperations = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/ListOperations',
            google.container.v1alpha1.cluster_service_pb2.ListOperationsRequest,
            google.container.v1alpha1.cluster_service_pb2.ListOperationsResponse,
        )
        self.GetOperation = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/GetOperation',
            google.container.v1alpha1.cluster_service_pb2.GetOperationRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.CancelOperation = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/CancelOperation',
            google.container.v1alpha1.cluster_service_pb2.CancelOperationRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.GetServerConfig = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/GetServerConfig',
            google.container.v1alpha1.cluster_service_pb2.GetServerConfigRequest,
            google.container.v1alpha1.cluster_service_pb2.ServerConfig,
        )
        self.ListNodePools = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/ListNodePools',
            google.container.v1alpha1.cluster_service_pb2.ListNodePoolsRequest,
            google.container.v1alpha1.cluster_service_pb2.ListNodePoolsResponse,
        )
        self.GetNodePool = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/GetNodePool',
            google.container.v1alpha1.cluster_service_pb2.GetNodePoolRequest,
            google.container.v1alpha1.cluster_service_pb2.NodePool,
        )
        self.CreateNodePool = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/CreateNodePool',
            google.container.v1alpha1.cluster_service_pb2.CreateNodePoolRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.DeleteNodePool = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/DeleteNodePool',
            google.container.v1alpha1.cluster_service_pb2.DeleteNodePoolRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.RollbackNodePoolUpgrade = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/RollbackNodePoolUpgrade',
            google.container.v1alpha1.cluster_service_pb2.RollbackNodePoolUpgradeRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetNodePoolManagement = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetNodePoolManagement',
            google.container.v1alpha1.cluster_service_pb2.SetNodePoolManagementRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetLabels = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetLabels',
            google.container.v1alpha1.cluster_service_pb2.SetLabelsRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetLegacyAbac = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetLegacyAbac',
            google.container.v1alpha1.cluster_service_pb2.SetLegacyAbacRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.StartIPRotation = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/StartIPRotation',
            google.container.v1alpha1.cluster_service_pb2.StartIPRotationRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.CompleteIPRotation = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/CompleteIPRotation',
            google.container.v1alpha1.cluster_service_pb2.CompleteIPRotationRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetNodePoolSize = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetNodePoolSize',
            google.container.v1alpha1.cluster_service_pb2.SetNodePoolSizeRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetNetworkPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetNetworkPolicy',
            google.container.v1alpha1.cluster_service_pb2.SetNetworkPolicyRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
        self.SetMaintenancePolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.container.v1alpha1.ClusterManager/SetMaintenancePolicy',
            google.container.v1alpha1.cluster_service_pb2.SetMaintenancePolicyRequest,
            google.container.v1alpha1.cluster_service_pb2.Operation,
        )
