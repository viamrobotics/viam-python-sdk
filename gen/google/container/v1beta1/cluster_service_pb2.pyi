"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import google.rpc.code_pb2
import google.rpc.status_pb2
import google.type.date_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _PrivateIPv6GoogleAccess:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _PrivateIPv6GoogleAccessEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PrivateIPv6GoogleAccess.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED: PrivateIPv6GoogleAccess.ValueType = ...  # 0
    """Default value. Same as DISABLED"""

    PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED: PrivateIPv6GoogleAccess.ValueType = ...  # 1
    """No private access to or from Google Services"""

    PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE: PrivateIPv6GoogleAccess.ValueType = ...  # 2
    """Enables private IPv6 access to Google Services from GKE"""

    PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL: PrivateIPv6GoogleAccess.ValueType = ...  # 3
    """Enables priate IPv6 access to and from Google Services"""

class PrivateIPv6GoogleAccess(_PrivateIPv6GoogleAccess, metaclass=_PrivateIPv6GoogleAccessEnumTypeWrapper):
    """PrivateIPv6GoogleAccess controls whether and how the pods can communicate
    with Google Services through gRPC over IPv6.
    """
    pass

PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED: PrivateIPv6GoogleAccess.ValueType = ...  # 0
"""Default value. Same as DISABLED"""

PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED: PrivateIPv6GoogleAccess.ValueType = ...  # 1
"""No private access to or from Google Services"""

PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE: PrivateIPv6GoogleAccess.ValueType = ...  # 2
"""Enables private IPv6 access to Google Services from GKE"""

PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL: PrivateIPv6GoogleAccess.ValueType = ...  # 3
"""Enables priate IPv6 access to and from Google Services"""

global___PrivateIPv6GoogleAccess = PrivateIPv6GoogleAccess


class _DatapathProvider:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DatapathProviderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DatapathProvider.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    DATAPATH_PROVIDER_UNSPECIFIED: DatapathProvider.ValueType = ...  # 0
    """Default value."""

    LEGACY_DATAPATH: DatapathProvider.ValueType = ...  # 1
    """Use the IPTables implementation based on kube-proxy."""

    ADVANCED_DATAPATH: DatapathProvider.ValueType = ...  # 2
    """Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE
    Dataplane V2
    documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2)
    for more.
    """

class DatapathProvider(_DatapathProvider, metaclass=_DatapathProviderEnumTypeWrapper):
    """The datapath provider selects the implementation of the Kubernetes networking
    // model for service resolution and network policy enforcement.
    """
    pass

DATAPATH_PROVIDER_UNSPECIFIED: DatapathProvider.ValueType = ...  # 0
"""Default value."""

LEGACY_DATAPATH: DatapathProvider.ValueType = ...  # 1
"""Use the IPTables implementation based on kube-proxy."""

ADVANCED_DATAPATH: DatapathProvider.ValueType = ...  # 2
"""Use the eBPF based GKE Dataplane V2 with additional features. See the [GKE
Dataplane V2
documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/dataplane-v2)
for more.
"""

global___DatapathProvider = DatapathProvider


class _UpgradeResourceType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _UpgradeResourceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UpgradeResourceType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UPGRADE_RESOURCE_TYPE_UNSPECIFIED: UpgradeResourceType.ValueType = ...  # 0
    """Default value. This shouldn't be used."""

    MASTER: UpgradeResourceType.ValueType = ...  # 1
    """Master / control plane"""

    NODE_POOL: UpgradeResourceType.ValueType = ...  # 2
    """Node pool"""

class UpgradeResourceType(_UpgradeResourceType, metaclass=_UpgradeResourceTypeEnumTypeWrapper):
    """UpgradeResourceType is the resource type that is upgrading. It is used
    in upgrade notifications.
    """
    pass

UPGRADE_RESOURCE_TYPE_UNSPECIFIED: UpgradeResourceType.ValueType = ...  # 0
"""Default value. This shouldn't be used."""

MASTER: UpgradeResourceType.ValueType = ...  # 1
"""Master / control plane"""

NODE_POOL: UpgradeResourceType.ValueType = ...  # 2
"""Node pool"""

global___UpgradeResourceType = UpgradeResourceType


class LinuxNodeConfig(google.protobuf.message.Message):
    """Parameters that can be configured on Linux nodes."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SysctlsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    SYSCTLS_FIELD_NUMBER: builtins.int
    @property
    def sysctls(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The Linux kernel parameters to be applied to the nodes and all pods running
        on the nodes.

        The following parameters are supported.

        net.core.netdev_max_backlog
        net.core.rmem_max
        net.core.wmem_default
        net.core.wmem_max
        net.core.optmem_max
        net.core.somaxconn
        net.ipv4.tcp_rmem
        net.ipv4.tcp_wmem
        net.ipv4.tcp_tw_reuse
        """
        pass
    def __init__(self,
        *,
        sysctls : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sysctls",b"sysctls"]) -> None: ...
global___LinuxNodeConfig = LinuxNodeConfig

class NodeKubeletConfig(google.protobuf.message.Message):
    """Node kubelet configs."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CPU_MANAGER_POLICY_FIELD_NUMBER: builtins.int
    CPU_CFS_QUOTA_FIELD_NUMBER: builtins.int
    CPU_CFS_QUOTA_PERIOD_FIELD_NUMBER: builtins.int
    cpu_manager_policy: typing.Text = ...
    """Control the CPU management policy on the node.
    See
    https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/

    The following values are allowed.
    * "none": the default, which represents the existing scheduling behavior.
    * "static": allows pods with certain resource characteristics to be granted
    increased CPU affinity and exclusivity on the node.
    The default value is 'none' if unspecified.
    """

    @property
    def cpu_cfs_quota(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Enable CPU CFS quota enforcement for containers that specify CPU limits.

        This option is enabled by default which makes kubelet use CFS quota
        (https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt) to
        enforce container CPU limits. Otherwise, CPU limits will not be enforced at
        all.

        Disable this option to mitigate CPU throttling problems while still having
        your pods to be in Guaranteed QoS class by specifying the CPU limits.

        The default value is 'true' if unspecified.
        """
        pass
    cpu_cfs_quota_period: typing.Text = ...
    """Set the CPU CFS quota period value 'cpu.cfs_period_us'.

    The string must be a sequence of decimal numbers, each with optional
    fraction and a unit suffix, such as "300ms".
    Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".
    The value must be a positive duration.
    """

    def __init__(self,
        *,
        cpu_manager_policy : typing.Text = ...,
        cpu_cfs_quota : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        cpu_cfs_quota_period : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cpu_cfs_quota",b"cpu_cfs_quota"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cpu_cfs_quota",b"cpu_cfs_quota","cpu_cfs_quota_period",b"cpu_cfs_quota_period","cpu_manager_policy",b"cpu_manager_policy"]) -> None: ...
global___NodeKubeletConfig = NodeKubeletConfig

class NodeConfig(google.protobuf.message.Message):
    """Parameters that describe the nodes in a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    OAUTH_SCOPES_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    IMAGE_TYPE_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LOCAL_SSD_COUNT_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    PREEMPTIBLE_FIELD_NUMBER: builtins.int
    ACCELERATORS_FIELD_NUMBER: builtins.int
    SANDBOX_CONFIG_FIELD_NUMBER: builtins.int
    NODE_GROUP_FIELD_NUMBER: builtins.int
    RESERVATION_AFFINITY_FIELD_NUMBER: builtins.int
    DISK_TYPE_FIELD_NUMBER: builtins.int
    MIN_CPU_PLATFORM_FIELD_NUMBER: builtins.int
    WORKLOAD_METADATA_CONFIG_FIELD_NUMBER: builtins.int
    TAINTS_FIELD_NUMBER: builtins.int
    BOOT_DISK_KMS_KEY_FIELD_NUMBER: builtins.int
    SHIELDED_INSTANCE_CONFIG_FIELD_NUMBER: builtins.int
    LINUX_NODE_CONFIG_FIELD_NUMBER: builtins.int
    KUBELET_CONFIG_FIELD_NUMBER: builtins.int
    EPHEMERAL_STORAGE_CONFIG_FIELD_NUMBER: builtins.int
    GCFS_CONFIG_FIELD_NUMBER: builtins.int
    ADVANCED_MACHINE_FEATURES_FIELD_NUMBER: builtins.int
    GVNIC_FIELD_NUMBER: builtins.int
    SPOT_FIELD_NUMBER: builtins.int
    machine_type: typing.Text = ...
    """The name of a Google Compute Engine [machine
    type](https://cloud.google.com/compute/docs/machine-types).

    If unspecified, the default machine type is
    `e2-medium`.
    """

    disk_size_gb: builtins.int = ...
    """Size of the disk attached to each node, specified in GB.
    The smallest allowed disk size is 10GB.

    If unspecified, the default disk size is 100GB.
    """

    @property
    def oauth_scopes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The set of Google API scopes to be made available on all of the
        node VMs under the "default" service account.

        The following scopes are recommended, but not required, and by default are
        not included:

        * `https://www.googleapis.com/auth/compute` is required for mounting
        persistent storage on your nodes.
        * `https://www.googleapis.com/auth/devstorage.read_only` is required for
        communicating with **gcr.io**
        (the [Google Container
        Registry](https://cloud.google.com/container-registry/)).

        If unspecified, no scopes are added, unless Cloud Logging or Cloud
        Monitoring are enabled, in which case their required scopes will be added.
        """
        pass
    service_account: typing.Text = ...
    """The Google Cloud Platform Service Account to be used by the node VMs.
    Specify the email address of the Service Account; otherwise, if no Service
    Account is specified, the "default" service account is used.
    """

    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The metadata key/value pairs assigned to instances in the cluster.

        Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes
        in length. These are reflected as part of a URL in the metadata server.
        Additionally, to avoid ambiguity, keys must not conflict with any other
        metadata keys for the project or be one of the reserved keys:
         - "cluster-location"
         - "cluster-name"
         - "cluster-uid"
         - "configure-sh"
         - "containerd-configure-sh"
         - "enable-oslogin"
         - "gci-ensure-gke-docker"
         - "gci-metrics-enabled"
         - "gci-update-strategy"
         - "instance-template"
         - "kube-env"
         - "startup-script"
         - "user-data"
         - "disable-address-manager"
         - "windows-startup-script-ps1"
         - "common-psm1"
         - "k8s-node-setup-psm1"
         - "install-ssh-psm1"
         - "user-profile-psm1"

        Values are free-form strings, and only have meaning as interpreted by
        the image running in the instance. The only restriction placed on them is
        that each value's size must be less than or equal to 32 KB.

        The total size of all keys and values must be less than 512 KB.
        """
        pass
    image_type: typing.Text = ...
    """The image type to use for this node. Note that for a given image type,
    the latest version of it will be used.
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The map of Kubernetes labels (key/value pairs) to be applied to each node.
        These will added in addition to any default label(s) that
        Kubernetes may apply to the node.
        In case of conflict in label keys, the applied set may differ depending on
        the Kubernetes version -- it's best to assume the behavior is undefined
        and conflicts should be avoided.
        For more information, including usage and the valid values, see:
        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
        """
        pass
    local_ssd_count: builtins.int = ...
    """The number of local SSD disks to be attached to the node.

    The limit for this value is dependent upon the maximum number of
    disks available on a machine per zone. See:
    https://cloud.google.com/compute/docs/disks/local-ssd
    for more information.
    """

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of instance tags applied to all nodes. Tags are used to identify
        valid sources or targets for network firewalls and are specified by
        the client during cluster or node pool creation. Each tag within the list
        must comply with RFC1035.
        """
        pass
    preemptible: builtins.bool = ...
    """Whether the nodes are created as preemptible VM instances. See:
    https://cloud.google.com/compute/docs/instances/preemptible for more
    inforamtion about preemptible VM instances.
    """

    @property
    def accelerators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AcceleratorConfig]:
        """A list of hardware accelerators to be attached to each node.
        See https://cloud.google.com/compute/docs/gpus for more information about
        support for GPUs.
        """
        pass
    @property
    def sandbox_config(self) -> global___SandboxConfig:
        """Sandbox configuration for this node."""
        pass
    node_group: typing.Text = ...
    """Setting this field will assign instances of this
    pool to run on the specified node group. This is useful for running
    workloads on [sole tenant
    nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
    """

    @property
    def reservation_affinity(self) -> global___ReservationAffinity:
        """The optional reservation affinity. Setting this field will apply
        the specified [Zonal Compute
        Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources)
        to this node pool.
        """
        pass
    disk_type: typing.Text = ...
    """Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or
    'pd-balanced')

    If unspecified, the default disk type is 'pd-standard'
    """

    min_cpu_platform: typing.Text = ...
    """Minimum CPU platform to be used by this instance. The instance may be
    scheduled on the specified or newer CPU platform. Applicable values are the
    friendly names of CPU platforms, such as
    `minCpuPlatform: "Intel Haswell"` or
    `minCpuPlatform: "Intel Sandy Bridge"`. For more
    information, read [how to specify min CPU
    platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
    """

    @property
    def workload_metadata_config(self) -> global___WorkloadMetadataConfig:
        """The workload metadata configuration for this node."""
        pass
    @property
    def taints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeTaint]:
        """List of kubernetes taints to be applied to each node.

        For more information, including usage and the valid values, see:
        https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        """
        pass
    boot_disk_kms_key: typing.Text = ...
    """
    The Customer Managed Encryption Key used to encrypt the boot disk attached
    to each node in the node pool. This should be of the form
    projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME].
    For more information about protecting resources with Cloud KMS Keys please
    see:
    https://cloud.google.com/compute/docs/disks/customer-managed-encryption
    """

    @property
    def shielded_instance_config(self) -> global___ShieldedInstanceConfig:
        """Shielded Instance options."""
        pass
    @property
    def linux_node_config(self) -> global___LinuxNodeConfig:
        """Parameters that can be configured on Linux nodes."""
        pass
    @property
    def kubelet_config(self) -> global___NodeKubeletConfig:
        """Node kubelet configs."""
        pass
    @property
    def ephemeral_storage_config(self) -> global___EphemeralStorageConfig:
        """Parameters for the ephemeral storage filesystem.
        If unspecified, ephemeral storage is backed by the boot disk.
        """
        pass
    @property
    def gcfs_config(self) -> global___GcfsConfig:
        """GCFS (Google Container File System) configs."""
        pass
    @property
    def advanced_machine_features(self) -> global___AdvancedMachineFeatures:
        """Advanced features for the Compute Engine VM."""
        pass
    @property
    def gvnic(self) -> global___VirtualNIC:
        """Enable or disable gvnic on the node pool."""
        pass
    spot: builtins.bool = ...
    """Spot flag for enabling Spot VM, which is a rebrand of
    the existing preemptible flag.
    """

    def __init__(self,
        *,
        machine_type : typing.Text = ...,
        disk_size_gb : builtins.int = ...,
        oauth_scopes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        service_account : typing.Text = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        image_type : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        local_ssd_count : builtins.int = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        preemptible : builtins.bool = ...,
        accelerators : typing.Optional[typing.Iterable[global___AcceleratorConfig]] = ...,
        sandbox_config : typing.Optional[global___SandboxConfig] = ...,
        node_group : typing.Text = ...,
        reservation_affinity : typing.Optional[global___ReservationAffinity] = ...,
        disk_type : typing.Text = ...,
        min_cpu_platform : typing.Text = ...,
        workload_metadata_config : typing.Optional[global___WorkloadMetadataConfig] = ...,
        taints : typing.Optional[typing.Iterable[global___NodeTaint]] = ...,
        boot_disk_kms_key : typing.Text = ...,
        shielded_instance_config : typing.Optional[global___ShieldedInstanceConfig] = ...,
        linux_node_config : typing.Optional[global___LinuxNodeConfig] = ...,
        kubelet_config : typing.Optional[global___NodeKubeletConfig] = ...,
        ephemeral_storage_config : typing.Optional[global___EphemeralStorageConfig] = ...,
        gcfs_config : typing.Optional[global___GcfsConfig] = ...,
        advanced_machine_features : typing.Optional[global___AdvancedMachineFeatures] = ...,
        gvnic : typing.Optional[global___VirtualNIC] = ...,
        spot : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["advanced_machine_features",b"advanced_machine_features","ephemeral_storage_config",b"ephemeral_storage_config","gcfs_config",b"gcfs_config","gvnic",b"gvnic","kubelet_config",b"kubelet_config","linux_node_config",b"linux_node_config","reservation_affinity",b"reservation_affinity","sandbox_config",b"sandbox_config","shielded_instance_config",b"shielded_instance_config","workload_metadata_config",b"workload_metadata_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["accelerators",b"accelerators","advanced_machine_features",b"advanced_machine_features","boot_disk_kms_key",b"boot_disk_kms_key","disk_size_gb",b"disk_size_gb","disk_type",b"disk_type","ephemeral_storage_config",b"ephemeral_storage_config","gcfs_config",b"gcfs_config","gvnic",b"gvnic","image_type",b"image_type","kubelet_config",b"kubelet_config","labels",b"labels","linux_node_config",b"linux_node_config","local_ssd_count",b"local_ssd_count","machine_type",b"machine_type","metadata",b"metadata","min_cpu_platform",b"min_cpu_platform","node_group",b"node_group","oauth_scopes",b"oauth_scopes","preemptible",b"preemptible","reservation_affinity",b"reservation_affinity","sandbox_config",b"sandbox_config","service_account",b"service_account","shielded_instance_config",b"shielded_instance_config","spot",b"spot","tags",b"tags","taints",b"taints","workload_metadata_config",b"workload_metadata_config"]) -> None: ...
global___NodeConfig = NodeConfig

class AdvancedMachineFeatures(google.protobuf.message.Message):
    """Specifies options for controlling advanced machine features."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    THREADS_PER_CORE_FIELD_NUMBER: builtins.int
    threads_per_core: builtins.int = ...
    """The number of threads per physical core. To disable simultaneous
    multithreading (SMT) set this to 1. If unset, the maximum number of threads
    supported per core by the underlying processor is assumed.
    """

    def __init__(self,
        *,
        threads_per_core : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_threads_per_core",b"_threads_per_core","threads_per_core",b"threads_per_core"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_threads_per_core",b"_threads_per_core","threads_per_core",b"threads_per_core"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_threads_per_core",b"_threads_per_core"]) -> typing.Optional[typing_extensions.Literal["threads_per_core"]]: ...
global___AdvancedMachineFeatures = AdvancedMachineFeatures

class NodeNetworkConfig(google.protobuf.message.Message):
    """Parameters for node pool-level network config."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_POD_RANGE_FIELD_NUMBER: builtins.int
    POD_RANGE_FIELD_NUMBER: builtins.int
    POD_IPV4_CIDR_BLOCK_FIELD_NUMBER: builtins.int
    create_pod_range: builtins.bool = ...
    """Input only. Whether to create a new range for pod IPs in this node pool.
    Defaults are provided for `pod_range` and `pod_ipv4_cidr_block` if they
    are not specified.

    If neither `create_pod_range` or `pod_range` are specified, the
    cluster-level default (`ip_allocation_policy.cluster_ipv4_cidr_block`) is
    used.

    Only applicable if `ip_allocation_policy.use_ip_aliases` is true.

    This field cannot be changed after the node pool has been created.
    """

    pod_range: typing.Text = ...
    """The ID of the secondary range for pod IPs.
    If `create_pod_range` is true, this ID is used for the new range.
    If `create_pod_range` is false, uses an existing secondary range with this
    ID.

    Only applicable if `ip_allocation_policy.use_ip_aliases` is true.

    This field cannot be changed after the node pool has been created.
    """

    pod_ipv4_cidr_block: typing.Text = ...
    """The IP address range for pod IPs in this node pool.

    Only applicable if `create_pod_range` is true.

    Set to blank to have a range chosen with the default size.

    Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    netmask.

    Set to a
    [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    notation (e.g. `10.96.0.0/14`) to pick a specific range to use.

    Only applicable if `ip_allocation_policy.use_ip_aliases` is true.

    This field cannot be changed after the node pool has been created.
    """

    def __init__(self,
        *,
        create_pod_range : builtins.bool = ...,
        pod_range : typing.Text = ...,
        pod_ipv4_cidr_block : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_pod_range",b"create_pod_range","pod_ipv4_cidr_block",b"pod_ipv4_cidr_block","pod_range",b"pod_range"]) -> None: ...
global___NodeNetworkConfig = NodeNetworkConfig

class ShieldedInstanceConfig(google.protobuf.message.Message):
    """A set of Shielded Instance options."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_SECURE_BOOT_FIELD_NUMBER: builtins.int
    ENABLE_INTEGRITY_MONITORING_FIELD_NUMBER: builtins.int
    enable_secure_boot: builtins.bool = ...
    """Defines whether the instance has Secure Boot enabled.

    Secure Boot helps ensure that the system only runs authentic software by
    verifying the digital signature of all boot components, and halting the
    boot process if signature verification fails.
    """

    enable_integrity_monitoring: builtins.bool = ...
    """Defines whether the instance has integrity monitoring enabled.

    Enables monitoring and attestation of the boot integrity of the instance.
    The attestation is performed against the integrity policy baseline. This
    baseline is initially derived from the implicitly trusted boot image when
    the instance is created.
    """

    def __init__(self,
        *,
        enable_secure_boot : builtins.bool = ...,
        enable_integrity_monitoring : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_integrity_monitoring",b"enable_integrity_monitoring","enable_secure_boot",b"enable_secure_boot"]) -> None: ...
global___ShieldedInstanceConfig = ShieldedInstanceConfig

class SandboxConfig(google.protobuf.message.Message):
    """SandboxConfig contains configurations of the sandbox to use for the node."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: SandboxConfig.Type.ValueType = ...  # 0
        """Default value. This should not be used."""

        GVISOR: SandboxConfig.Type.ValueType = ...  # 1
        """Run sandbox using gvisor."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Possible types of sandboxes."""
        pass

    UNSPECIFIED: SandboxConfig.Type.ValueType = ...  # 0
    """Default value. This should not be used."""

    GVISOR: SandboxConfig.Type.ValueType = ...  # 1
    """Run sandbox using gvisor."""


    SANDBOX_TYPE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    sandbox_type: typing.Text = ...
    """Type of the sandbox to use for the node (e.g. 'gvisor')"""

    type: global___SandboxConfig.Type.ValueType = ...
    """Type of the sandbox to use for the node."""

    def __init__(self,
        *,
        sandbox_type : typing.Text = ...,
        type : global___SandboxConfig.Type.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sandbox_type",b"sandbox_type","type",b"type"]) -> None: ...
global___SandboxConfig = SandboxConfig

class EphemeralStorageConfig(google.protobuf.message.Message):
    """EphemeralStorageConfig contains configuration for the ephemeral storage
    filesystem.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCAL_SSD_COUNT_FIELD_NUMBER: builtins.int
    local_ssd_count: builtins.int = ...
    """Number of local SSDs to use to back ephemeral storage. Uses NVMe
    interfaces. Each local SSD is 375 GB in size.
    If zero, it means to disable using local SSDs as ephemeral storage.
    """

    def __init__(self,
        *,
        local_ssd_count : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["local_ssd_count",b"local_ssd_count"]) -> None: ...
global___EphemeralStorageConfig = EphemeralStorageConfig

class GcfsConfig(google.protobuf.message.Message):
    """GcfsConfig contains configurations of Google Container File System."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether to use GCFS."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___GcfsConfig = GcfsConfig

class ReservationAffinity(google.protobuf.message.Message):
    """[ReservationAffinity](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources)
    is the configuration of desired reservation which instances could take
    capacity from.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: ReservationAffinity.Type.ValueType = ...  # 0
        """Default value. This should not be used."""

        NO_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 1
        """Do not consume from any reserved capacity."""

        ANY_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 2
        """Consume any reservation available."""

        SPECIFIC_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 3
        """Must consume from a specific reservation. Must specify key value fields
        for specifying the reservations.
        """

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Indicates whether to consume capacity from a reservation or not."""
        pass

    UNSPECIFIED: ReservationAffinity.Type.ValueType = ...  # 0
    """Default value. This should not be used."""

    NO_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 1
    """Do not consume from any reserved capacity."""

    ANY_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 2
    """Consume any reservation available."""

    SPECIFIC_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 3
    """Must consume from a specific reservation. Must specify key value fields
    for specifying the reservations.
    """


    CONSUME_RESERVATION_TYPE_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    consume_reservation_type: global___ReservationAffinity.Type.ValueType = ...
    """Corresponds to the type of reservation consumption."""

    key: typing.Text = ...
    """Corresponds to the label key of a reservation resource. To target a
    SPECIFIC_RESERVATION by name, specify "googleapis.com/reservation-name" as
    the key and specify the name of your reservation as its value.
    """

    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Corresponds to the label value(s) of reservation resource(s)."""
        pass
    def __init__(self,
        *,
        consume_reservation_type : global___ReservationAffinity.Type.ValueType = ...,
        key : typing.Text = ...,
        values : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["consume_reservation_type",b"consume_reservation_type","key",b"key","values",b"values"]) -> None: ...
global___ReservationAffinity = ReservationAffinity

class NodeTaint(google.protobuf.message.Message):
    """Kubernetes taint is comprised of three fields: key, value, and effect. Effect
    can only be one of three types:  NoSchedule, PreferNoSchedule or NoExecute.

    See
    [here](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration)
    for more information, including usage and the valid values.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Effect:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EffectEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Effect.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        EFFECT_UNSPECIFIED: NodeTaint.Effect.ValueType = ...  # 0
        """Not set"""

        NO_SCHEDULE: NodeTaint.Effect.ValueType = ...  # 1
        """NoSchedule"""

        PREFER_NO_SCHEDULE: NodeTaint.Effect.ValueType = ...  # 2
        """PreferNoSchedule"""

        NO_EXECUTE: NodeTaint.Effect.ValueType = ...  # 3
        """NoExecute"""

    class Effect(_Effect, metaclass=_EffectEnumTypeWrapper):
        """Possible values for Effect in taint."""
        pass

    EFFECT_UNSPECIFIED: NodeTaint.Effect.ValueType = ...  # 0
    """Not set"""

    NO_SCHEDULE: NodeTaint.Effect.ValueType = ...  # 1
    """NoSchedule"""

    PREFER_NO_SCHEDULE: NodeTaint.Effect.ValueType = ...  # 2
    """PreferNoSchedule"""

    NO_EXECUTE: NodeTaint.Effect.ValueType = ...  # 3
    """NoExecute"""


    KEY_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    EFFECT_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """Key for taint."""

    value: typing.Text = ...
    """Value for taint."""

    effect: global___NodeTaint.Effect.ValueType = ...
    """Effect for taint."""

    def __init__(self,
        *,
        key : typing.Text = ...,
        value : typing.Text = ...,
        effect : global___NodeTaint.Effect.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["effect",b"effect","key",b"key","value",b"value"]) -> None: ...
global___NodeTaint = NodeTaint

class NodeTaints(google.protobuf.message.Message):
    """Collection of Kubernetes [node
    taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAINTS_FIELD_NUMBER: builtins.int
    @property
    def taints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeTaint]:
        """List of node taints."""
        pass
    def __init__(self,
        *,
        taints : typing.Optional[typing.Iterable[global___NodeTaint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["taints",b"taints"]) -> None: ...
global___NodeTaints = NodeTaints

class NodeLabels(google.protobuf.message.Message):
    """Collection of node-level [Kubernetes
    labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    LABELS_FIELD_NUMBER: builtins.int
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Map of node label keys and node label values."""
        pass
    def __init__(self,
        *,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["labels",b"labels"]) -> None: ...
global___NodeLabels = NodeLabels

class NetworkTags(google.protobuf.message.Message):
    """Collection of Compute Engine network tags that can be applied to a node's
    underlying VM instance. (See `tags` field in
    [`NodeConfig`](/kubernetes-engine/docs/reference/rest/v1/NodeConfig)).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of network tags."""
        pass
    def __init__(self,
        *,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["tags",b"tags"]) -> None: ...
global___NetworkTags = NetworkTags

class MasterAuth(google.protobuf.message.Message):
    """The authentication information for accessing the master endpoint.
    Authentication can be done using HTTP basic auth or using client
    certificates.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    CLIENT_CERTIFICATE_CONFIG_FIELD_NUMBER: builtins.int
    CLUSTER_CA_CERTIFICATE_FIELD_NUMBER: builtins.int
    CLIENT_CERTIFICATE_FIELD_NUMBER: builtins.int
    CLIENT_KEY_FIELD_NUMBER: builtins.int
    username: typing.Text = ...
    """The username to use for HTTP basic authentication to the master endpoint.
    For clusters v1.6.0 and later, basic authentication can be disabled by
    leaving username unspecified (or setting it to the empty string).

    Warning: basic authentication is deprecated, and will be removed in GKE
    control plane versions 1.19 and newer. For a list of recommended
    authentication methods, see:
    https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication
    """

    password: typing.Text = ...
    """The password to use for HTTP basic authentication to the master endpoint.
    Because the master endpoint is open to the Internet, you should create a
    strong password.  If a password is provided for cluster creation, username
    must be non-empty.

    Warning: basic authentication is deprecated, and will be removed in GKE
    control plane versions 1.19 and newer. For a list of recommended
    authentication methods, see:
    https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication
    """

    @property
    def client_certificate_config(self) -> global___ClientCertificateConfig:
        """Configuration for client certificate authentication on the cluster. For
        clusters before v1.12, if no configuration is specified, a client
        certificate is issued.
        """
        pass
    cluster_ca_certificate: typing.Text = ...
    client_certificate: typing.Text = ...
    """[Output only] Base64-encoded public certificate used by clients to
    authenticate to the cluster endpoint.
    """

    client_key: typing.Text = ...
    """[Output only] Base64-encoded private key used by clients to authenticate
    to the cluster endpoint.
    """

    def __init__(self,
        *,
        username : typing.Text = ...,
        password : typing.Text = ...,
        client_certificate_config : typing.Optional[global___ClientCertificateConfig] = ...,
        cluster_ca_certificate : typing.Text = ...,
        client_certificate : typing.Text = ...,
        client_key : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client_certificate_config",b"client_certificate_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["client_certificate",b"client_certificate","client_certificate_config",b"client_certificate_config","client_key",b"client_key","cluster_ca_certificate",b"cluster_ca_certificate","password",b"password","username",b"username"]) -> None: ...
global___MasterAuth = MasterAuth

class ClientCertificateConfig(google.protobuf.message.Message):
    """Configuration for client certificates on the cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ISSUE_CLIENT_CERTIFICATE_FIELD_NUMBER: builtins.int
    issue_client_certificate: builtins.bool = ...
    """Issue a client certificate."""

    def __init__(self,
        *,
        issue_client_certificate : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["issue_client_certificate",b"issue_client_certificate"]) -> None: ...
global___ClientCertificateConfig = ClientCertificateConfig

class AddonsConfig(google.protobuf.message.Message):
    """Configuration for the addons that can be automatically spun up in the
    cluster, enabling additional functionality.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HTTP_LOAD_BALANCING_FIELD_NUMBER: builtins.int
    HORIZONTAL_POD_AUTOSCALING_FIELD_NUMBER: builtins.int
    KUBERNETES_DASHBOARD_FIELD_NUMBER: builtins.int
    NETWORK_POLICY_CONFIG_FIELD_NUMBER: builtins.int
    ISTIO_CONFIG_FIELD_NUMBER: builtins.int
    CLOUD_RUN_CONFIG_FIELD_NUMBER: builtins.int
    DNS_CACHE_CONFIG_FIELD_NUMBER: builtins.int
    CONFIG_CONNECTOR_CONFIG_FIELD_NUMBER: builtins.int
    GCE_PERSISTENT_DISK_CSI_DRIVER_CONFIG_FIELD_NUMBER: builtins.int
    KALM_CONFIG_FIELD_NUMBER: builtins.int
    GCP_FILESTORE_CSI_DRIVER_CONFIG_FIELD_NUMBER: builtins.int
    GKE_BACKUP_AGENT_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def http_load_balancing(self) -> global___HttpLoadBalancing:
        """Configuration for the HTTP (L7) load balancing controller addon, which
        makes it easy to set up HTTP load balancers for services in a cluster.
        """
        pass
    @property
    def horizontal_pod_autoscaling(self) -> global___HorizontalPodAutoscaling:
        """Configuration for the horizontal pod autoscaling feature, which
        increases or decreases the number of replica pods a replication controller
        has based on the resource usage of the existing pods.
        """
        pass
    @property
    def kubernetes_dashboard(self) -> global___KubernetesDashboard:
        """Configuration for the Kubernetes Dashboard.
        This addon is deprecated, and will be disabled in 1.15. It is recommended
        to use the Cloud Console to manage and monitor your Kubernetes clusters,
        workloads and applications. For more information, see:
        https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards
        """
        pass
    @property
    def network_policy_config(self) -> global___NetworkPolicyConfig:
        """Configuration for NetworkPolicy. This only tracks whether the addon
        is enabled or not on the Master, it does not track whether network policy
        is enabled for the nodes.
        """
        pass
    @property
    def istio_config(self) -> global___IstioConfig:
        """Configuration for Istio, an open platform to connect, manage, and secure
        microservices.
        """
        pass
    @property
    def cloud_run_config(self) -> global___CloudRunConfig:
        """Configuration for the Cloud Run addon. The `IstioConfig` addon must be
        enabled in order to enable Cloud Run addon. This option can only be enabled
        at cluster creation time.
        """
        pass
    @property
    def dns_cache_config(self) -> global___DnsCacheConfig:
        """Configuration for NodeLocalDNS, a dns cache running on cluster nodes"""
        pass
    @property
    def config_connector_config(self) -> global___ConfigConnectorConfig:
        """Configuration for the ConfigConnector add-on, a Kubernetes
        extension to manage hosted GCP services through the Kubernetes API
        """
        pass
    @property
    def gce_persistent_disk_csi_driver_config(self) -> global___GcePersistentDiskCsiDriverConfig:
        """Configuration for the Compute Engine Persistent Disk CSI driver."""
        pass
    @property
    def kalm_config(self) -> global___KalmConfig:
        """Configuration for the KALM addon, which manages the lifecycle of k8s
        applications.
        """
        pass
    @property
    def gcp_filestore_csi_driver_config(self) -> global___GcpFilestoreCsiDriverConfig:
        """Configuration for the GCP Filestore CSI driver."""
        pass
    @property
    def gke_backup_agent_config(self) -> global___GkeBackupAgentConfig:
        """Configuration for the Backup for GKE agent addon."""
        pass
    def __init__(self,
        *,
        http_load_balancing : typing.Optional[global___HttpLoadBalancing] = ...,
        horizontal_pod_autoscaling : typing.Optional[global___HorizontalPodAutoscaling] = ...,
        kubernetes_dashboard : typing.Optional[global___KubernetesDashboard] = ...,
        network_policy_config : typing.Optional[global___NetworkPolicyConfig] = ...,
        istio_config : typing.Optional[global___IstioConfig] = ...,
        cloud_run_config : typing.Optional[global___CloudRunConfig] = ...,
        dns_cache_config : typing.Optional[global___DnsCacheConfig] = ...,
        config_connector_config : typing.Optional[global___ConfigConnectorConfig] = ...,
        gce_persistent_disk_csi_driver_config : typing.Optional[global___GcePersistentDiskCsiDriverConfig] = ...,
        kalm_config : typing.Optional[global___KalmConfig] = ...,
        gcp_filestore_csi_driver_config : typing.Optional[global___GcpFilestoreCsiDriverConfig] = ...,
        gke_backup_agent_config : typing.Optional[global___GkeBackupAgentConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cloud_run_config",b"cloud_run_config","config_connector_config",b"config_connector_config","dns_cache_config",b"dns_cache_config","gce_persistent_disk_csi_driver_config",b"gce_persistent_disk_csi_driver_config","gcp_filestore_csi_driver_config",b"gcp_filestore_csi_driver_config","gke_backup_agent_config",b"gke_backup_agent_config","horizontal_pod_autoscaling",b"horizontal_pod_autoscaling","http_load_balancing",b"http_load_balancing","istio_config",b"istio_config","kalm_config",b"kalm_config","kubernetes_dashboard",b"kubernetes_dashboard","network_policy_config",b"network_policy_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cloud_run_config",b"cloud_run_config","config_connector_config",b"config_connector_config","dns_cache_config",b"dns_cache_config","gce_persistent_disk_csi_driver_config",b"gce_persistent_disk_csi_driver_config","gcp_filestore_csi_driver_config",b"gcp_filestore_csi_driver_config","gke_backup_agent_config",b"gke_backup_agent_config","horizontal_pod_autoscaling",b"horizontal_pod_autoscaling","http_load_balancing",b"http_load_balancing","istio_config",b"istio_config","kalm_config",b"kalm_config","kubernetes_dashboard",b"kubernetes_dashboard","network_policy_config",b"network_policy_config"]) -> None: ...
global___AddonsConfig = AddonsConfig

class HttpLoadBalancing(google.protobuf.message.Message):
    """Configuration options for the HTTP (L7) load balancing controller addon,
    which makes it easy to set up HTTP load balancers for services in a cluster.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISABLED_FIELD_NUMBER: builtins.int
    disabled: builtins.bool = ...
    """Whether the HTTP Load Balancing controller is enabled in the cluster.
    When enabled, it runs a small pod in the cluster that manages the load
    balancers.
    """

    def __init__(self,
        *,
        disabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disabled",b"disabled"]) -> None: ...
global___HttpLoadBalancing = HttpLoadBalancing

class HorizontalPodAutoscaling(google.protobuf.message.Message):
    """Configuration options for the horizontal pod autoscaling feature, which
    increases or decreases the number of replica pods a replication controller
    has based on the resource usage of the existing pods.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISABLED_FIELD_NUMBER: builtins.int
    disabled: builtins.bool = ...
    """Whether the Horizontal Pod Autoscaling feature is enabled in the cluster.
    When enabled, it ensures that metrics are collected into Stackdriver
    Monitoring.
    """

    def __init__(self,
        *,
        disabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disabled",b"disabled"]) -> None: ...
global___HorizontalPodAutoscaling = HorizontalPodAutoscaling

class KubernetesDashboard(google.protobuf.message.Message):
    """Configuration for the Kubernetes Dashboard."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISABLED_FIELD_NUMBER: builtins.int
    disabled: builtins.bool = ...
    """Whether the Kubernetes Dashboard is enabled for this cluster."""

    def __init__(self,
        *,
        disabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disabled",b"disabled"]) -> None: ...
global___KubernetesDashboard = KubernetesDashboard

class NetworkPolicyConfig(google.protobuf.message.Message):
    """Configuration for NetworkPolicy. This only tracks whether the addon
    is enabled or not on the Master, it does not track whether network policy
    is enabled for the nodes.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISABLED_FIELD_NUMBER: builtins.int
    disabled: builtins.bool = ...
    """Whether NetworkPolicy is enabled for this cluster."""

    def __init__(self,
        *,
        disabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disabled",b"disabled"]) -> None: ...
global___NetworkPolicyConfig = NetworkPolicyConfig

class DnsCacheConfig(google.protobuf.message.Message):
    """Configuration for NodeLocal DNSCache"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether NodeLocal DNSCache is enabled for this cluster."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___DnsCacheConfig = DnsCacheConfig

class KalmConfig(google.protobuf.message.Message):
    """Configuration options for the KALM addon."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether KALM is enabled for this cluster."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___KalmConfig = KalmConfig

class GkeBackupAgentConfig(google.protobuf.message.Message):
    """Configuration for the Backup for GKE Agent."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether the Backup for GKE agent is enabled for this cluster."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___GkeBackupAgentConfig = GkeBackupAgentConfig

class ConfigConnectorConfig(google.protobuf.message.Message):
    """Configuration options for the Config Connector add-on."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether Cloud Connector is enabled for this cluster."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___ConfigConnectorConfig = ConfigConnectorConfig

class GcePersistentDiskCsiDriverConfig(google.protobuf.message.Message):
    """Configuration for the Compute Engine PD CSI driver."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether the Compute Engine PD CSI driver is enabled for this cluster."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___GcePersistentDiskCsiDriverConfig = GcePersistentDiskCsiDriverConfig

class GcpFilestoreCsiDriverConfig(google.protobuf.message.Message):
    """Configuration for the GCP Filestore CSI driver."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether the GCP Filestore CSI driver is enabled for this cluster."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___GcpFilestoreCsiDriverConfig = GcpFilestoreCsiDriverConfig

class PrivateClusterMasterGlobalAccessConfig(google.protobuf.message.Message):
    """Configuration for controlling master global access settings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whenever master is accessible globally or not."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___PrivateClusterMasterGlobalAccessConfig = PrivateClusterMasterGlobalAccessConfig

class PrivateClusterConfig(google.protobuf.message.Message):
    """Configuration options for private clusters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_PRIVATE_NODES_FIELD_NUMBER: builtins.int
    ENABLE_PRIVATE_ENDPOINT_FIELD_NUMBER: builtins.int
    MASTER_IPV4_CIDR_BLOCK_FIELD_NUMBER: builtins.int
    PRIVATE_ENDPOINT_FIELD_NUMBER: builtins.int
    PUBLIC_ENDPOINT_FIELD_NUMBER: builtins.int
    PEERING_NAME_FIELD_NUMBER: builtins.int
    MASTER_GLOBAL_ACCESS_CONFIG_FIELD_NUMBER: builtins.int
    enable_private_nodes: builtins.bool = ...
    """Whether nodes have internal IP addresses only. If enabled, all nodes are
    given only RFC 1918 private addresses and communicate with the master via
    private networking.
    """

    enable_private_endpoint: builtins.bool = ...
    """Whether the master's internal IP address is used as the cluster endpoint."""

    master_ipv4_cidr_block: typing.Text = ...
    """The IP range in CIDR notation to use for the hosted master network. This
    range will be used for assigning internal IP addresses to the master or
    set of masters, as well as the ILB VIP. This range must not overlap with
    any other ranges in use within the cluster's network.
    """

    private_endpoint: typing.Text = ...
    """Output only. The internal IP address of this cluster's master endpoint."""

    public_endpoint: typing.Text = ...
    """Output only. The external IP address of this cluster's master endpoint."""

    peering_name: typing.Text = ...
    """Output only. The peering name in the customer VPC used by this cluster."""

    @property
    def master_global_access_config(self) -> global___PrivateClusterMasterGlobalAccessConfig:
        """Controls master global access settings."""
        pass
    def __init__(self,
        *,
        enable_private_nodes : builtins.bool = ...,
        enable_private_endpoint : builtins.bool = ...,
        master_ipv4_cidr_block : typing.Text = ...,
        private_endpoint : typing.Text = ...,
        public_endpoint : typing.Text = ...,
        peering_name : typing.Text = ...,
        master_global_access_config : typing.Optional[global___PrivateClusterMasterGlobalAccessConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["master_global_access_config",b"master_global_access_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_private_endpoint",b"enable_private_endpoint","enable_private_nodes",b"enable_private_nodes","master_global_access_config",b"master_global_access_config","master_ipv4_cidr_block",b"master_ipv4_cidr_block","peering_name",b"peering_name","private_endpoint",b"private_endpoint","public_endpoint",b"public_endpoint"]) -> None: ...
global___PrivateClusterConfig = PrivateClusterConfig

class IstioConfig(google.protobuf.message.Message):
    """Configuration options for Istio addon."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _IstioAuthMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _IstioAuthModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IstioAuthMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        AUTH_NONE: IstioConfig.IstioAuthMode.ValueType = ...  # 0
        """auth not enabled"""

        AUTH_MUTUAL_TLS: IstioConfig.IstioAuthMode.ValueType = ...  # 1
        """auth mutual TLS enabled"""

    class IstioAuthMode(_IstioAuthMode, metaclass=_IstioAuthModeEnumTypeWrapper):
        """Istio auth mode, https://istio.io/docs/concepts/security/mutual-tls.html"""
        pass

    AUTH_NONE: IstioConfig.IstioAuthMode.ValueType = ...  # 0
    """auth not enabled"""

    AUTH_MUTUAL_TLS: IstioConfig.IstioAuthMode.ValueType = ...  # 1
    """auth mutual TLS enabled"""


    DISABLED_FIELD_NUMBER: builtins.int
    AUTH_FIELD_NUMBER: builtins.int
    disabled: builtins.bool = ...
    """Whether Istio is enabled for this cluster."""

    auth: global___IstioConfig.IstioAuthMode.ValueType = ...
    """The specified Istio auth mode, either none, or mutual TLS."""

    def __init__(self,
        *,
        disabled : builtins.bool = ...,
        auth : global___IstioConfig.IstioAuthMode.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth",b"auth","disabled",b"disabled"]) -> None: ...
global___IstioConfig = IstioConfig

class CloudRunConfig(google.protobuf.message.Message):
    """Configuration options for the Cloud Run feature."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _LoadBalancerType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LoadBalancerTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LoadBalancerType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        LOAD_BALANCER_TYPE_UNSPECIFIED: CloudRunConfig.LoadBalancerType.ValueType = ...  # 0
        """Load balancer type for Cloud Run is unspecified."""

        LOAD_BALANCER_TYPE_EXTERNAL: CloudRunConfig.LoadBalancerType.ValueType = ...  # 1
        """Install external load balancer for Cloud Run."""

        LOAD_BALANCER_TYPE_INTERNAL: CloudRunConfig.LoadBalancerType.ValueType = ...  # 2
        """Install internal load balancer for Cloud Run."""

    class LoadBalancerType(_LoadBalancerType, metaclass=_LoadBalancerTypeEnumTypeWrapper):
        """Load balancer type of ingress service of Cloud Run."""
        pass

    LOAD_BALANCER_TYPE_UNSPECIFIED: CloudRunConfig.LoadBalancerType.ValueType = ...  # 0
    """Load balancer type for Cloud Run is unspecified."""

    LOAD_BALANCER_TYPE_EXTERNAL: CloudRunConfig.LoadBalancerType.ValueType = ...  # 1
    """Install external load balancer for Cloud Run."""

    LOAD_BALANCER_TYPE_INTERNAL: CloudRunConfig.LoadBalancerType.ValueType = ...  # 2
    """Install internal load balancer for Cloud Run."""


    DISABLED_FIELD_NUMBER: builtins.int
    LOAD_BALANCER_TYPE_FIELD_NUMBER: builtins.int
    disabled: builtins.bool = ...
    """Whether Cloud Run addon is enabled for this cluster."""

    load_balancer_type: global___CloudRunConfig.LoadBalancerType.ValueType = ...
    """Which load balancer type is installed for Cloud Run."""

    def __init__(self,
        *,
        disabled : builtins.bool = ...,
        load_balancer_type : global___CloudRunConfig.LoadBalancerType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disabled",b"disabled","load_balancer_type",b"load_balancer_type"]) -> None: ...
global___CloudRunConfig = CloudRunConfig

class MasterAuthorizedNetworksConfig(google.protobuf.message.Message):
    """Configuration options for the master authorized networks feature. Enabled
    master authorized networks will disallow all external traffic to access
    Kubernetes master through HTTPS except traffic from the given CIDR blocks,
    Google Compute Engine Public IPs and Google Prod IPs.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CidrBlock(google.protobuf.message.Message):
        """CidrBlock contains an optional name and one CIDR block."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DISPLAY_NAME_FIELD_NUMBER: builtins.int
        CIDR_BLOCK_FIELD_NUMBER: builtins.int
        display_name: typing.Text = ...
        """display_name is an optional field for users to identify CIDR blocks."""

        cidr_block: typing.Text = ...
        """cidr_block must be specified in CIDR notation."""

        def __init__(self,
            *,
            display_name : typing.Text = ...,
            cidr_block : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["cidr_block",b"cidr_block","display_name",b"display_name"]) -> None: ...

    ENABLED_FIELD_NUMBER: builtins.int
    CIDR_BLOCKS_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether or not master authorized networks is enabled."""

    @property
    def cidr_blocks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MasterAuthorizedNetworksConfig.CidrBlock]:
        """cidr_blocks define up to 10 external networks that could access
        Kubernetes master through HTTPS.
        """
        pass
    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        cidr_blocks : typing.Optional[typing.Iterable[global___MasterAuthorizedNetworksConfig.CidrBlock]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cidr_blocks",b"cidr_blocks","enabled",b"enabled"]) -> None: ...
global___MasterAuthorizedNetworksConfig = MasterAuthorizedNetworksConfig

class LegacyAbac(google.protobuf.message.Message):
    """Configuration for the legacy Attribute Based Access Control authorization
    mode.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether the ABAC authorizer is enabled for this cluster. When enabled,
    identities in the system, including service accounts, nodes, and
    controllers, will have statically granted permissions beyond those
    provided by the RBAC configuration or IAM.
    """

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___LegacyAbac = LegacyAbac

class NetworkPolicy(google.protobuf.message.Message):
    """Configuration options for the NetworkPolicy feature.
    https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Provider:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProviderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Provider.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PROVIDER_UNSPECIFIED: NetworkPolicy.Provider.ValueType = ...  # 0
        """Not set"""

        CALICO: NetworkPolicy.Provider.ValueType = ...  # 1
        """Tigera (Calico Felix)."""

    class Provider(_Provider, metaclass=_ProviderEnumTypeWrapper):
        """Allowed Network Policy providers."""
        pass

    PROVIDER_UNSPECIFIED: NetworkPolicy.Provider.ValueType = ...  # 0
    """Not set"""

    CALICO: NetworkPolicy.Provider.ValueType = ...  # 1
    """Tigera (Calico Felix)."""


    PROVIDER_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    provider: global___NetworkPolicy.Provider.ValueType = ...
    """The selected network policy provider."""

    enabled: builtins.bool = ...
    """Whether network policy is enabled on the cluster."""

    def __init__(self,
        *,
        provider : global___NetworkPolicy.Provider.ValueType = ...,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","provider",b"provider"]) -> None: ...
global___NetworkPolicy = NetworkPolicy

class IPAllocationPolicy(google.protobuf.message.Message):
    """Configuration for controlling how IPs are allocated in the cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USE_IP_ALIASES_FIELD_NUMBER: builtins.int
    CREATE_SUBNETWORK_FIELD_NUMBER: builtins.int
    SUBNETWORK_NAME_FIELD_NUMBER: builtins.int
    CLUSTER_IPV4_CIDR_FIELD_NUMBER: builtins.int
    NODE_IPV4_CIDR_FIELD_NUMBER: builtins.int
    SERVICES_IPV4_CIDR_FIELD_NUMBER: builtins.int
    CLUSTER_SECONDARY_RANGE_NAME_FIELD_NUMBER: builtins.int
    SERVICES_SECONDARY_RANGE_NAME_FIELD_NUMBER: builtins.int
    CLUSTER_IPV4_CIDR_BLOCK_FIELD_NUMBER: builtins.int
    NODE_IPV4_CIDR_BLOCK_FIELD_NUMBER: builtins.int
    SERVICES_IPV4_CIDR_BLOCK_FIELD_NUMBER: builtins.int
    ALLOW_ROUTE_OVERLAP_FIELD_NUMBER: builtins.int
    TPU_IPV4_CIDR_BLOCK_FIELD_NUMBER: builtins.int
    USE_ROUTES_FIELD_NUMBER: builtins.int
    use_ip_aliases: builtins.bool = ...
    """Whether alias IPs will be used for pod IPs in the cluster.
    This is used in conjunction with use_routes. It cannot
    be true if use_routes is true. If both use_ip_aliases and use_routes are
    false, then the server picks the default IP allocation mode
    """

    create_subnetwork: builtins.bool = ...
    """Whether a new subnetwork will be created automatically for the cluster.

    This field is only applicable when `use_ip_aliases` is true.
    """

    subnetwork_name: typing.Text = ...
    """A custom subnetwork name to be used if `create_subnetwork` is true.  If
    this field is empty, then an automatic name will be chosen for the new
    subnetwork.
    """

    cluster_ipv4_cidr: typing.Text = ...
    """This field is deprecated, use cluster_ipv4_cidr_block."""

    node_ipv4_cidr: typing.Text = ...
    """This field is deprecated, use node_ipv4_cidr_block."""

    services_ipv4_cidr: typing.Text = ...
    """This field is deprecated, use services_ipv4_cidr_block."""

    cluster_secondary_range_name: typing.Text = ...
    """The name of the secondary range to be used for the cluster CIDR
    block.  The secondary range will be used for pod IP
    addresses. This must be an existing secondary range associated
    with the cluster subnetwork.

    This field is only applicable with use_ip_aliases and
    create_subnetwork is false.
    """

    services_secondary_range_name: typing.Text = ...
    """The name of the secondary range to be used as for the services
    CIDR block.  The secondary range will be used for service
    ClusterIPs. This must be an existing secondary range associated
    with the cluster subnetwork.

    This field is only applicable with use_ip_aliases and
    create_subnetwork is false.
    """

    cluster_ipv4_cidr_block: typing.Text = ...
    """The IP address range for the cluster pod IPs. If this field is set, then
    `cluster.cluster_ipv4_cidr` must be left blank.

    This field is only applicable when `use_ip_aliases` is true.

    Set to blank to have a range chosen with the default size.

    Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    netmask.

    Set to a
    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    to use.
    """

    node_ipv4_cidr_block: typing.Text = ...
    """The IP address range of the instance IPs in this cluster.

    This is applicable only if `create_subnetwork` is true.

    Set to blank to have a range chosen with the default size.

    Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    netmask.

    Set to a
    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    to use.
    """

    services_ipv4_cidr_block: typing.Text = ...
    """The IP address range of the services IPs in this cluster. If blank, a range
    will be automatically chosen with the default size.

    This field is only applicable when `use_ip_aliases` is true.

    Set to blank to have a range chosen with the default size.

    Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    netmask.

    Set to a
    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    to use.
    """

    allow_route_overlap: builtins.bool = ...
    """If true, allow allocation of cluster CIDR ranges that overlap with certain
    kinds of network routes. By default we do not allow cluster CIDR ranges to
    intersect with any user declared routes. With allow_route_overlap == true,
    we allow overlapping with CIDR ranges that are larger than the cluster CIDR
    range.

    If this field is set to true, then cluster and services CIDRs must be
    fully-specified (e.g. `10.96.0.0/14`, but not `/14`), which means:
    1) When `use_ip_aliases` is true, `cluster_ipv4_cidr_block` and
       `services_ipv4_cidr_block` must be fully-specified.
    2) When `use_ip_aliases` is false, `cluster.cluster_ipv4_cidr` muse be
       fully-specified.
    """

    tpu_ipv4_cidr_block: typing.Text = ...
    """The IP address range of the Cloud TPUs in this cluster. If unspecified, a
    range will be automatically chosen with the default size.

    This field is only applicable when `use_ip_aliases` is true.

    If unspecified, the range will use the default size.

    Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    netmask.

    Set to a
    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    to use.
    This field is deprecated, use cluster.tpu_config.ipv4_cidr_block instead.
    """

    use_routes: builtins.bool = ...
    """Whether routes will be used for pod IPs in the cluster.
    This is used in conjunction with use_ip_aliases. It cannot be true if
    use_ip_aliases is true. If both use_ip_aliases and use_routes are false,
    then the server picks the default IP allocation mode
    """

    def __init__(self,
        *,
        use_ip_aliases : builtins.bool = ...,
        create_subnetwork : builtins.bool = ...,
        subnetwork_name : typing.Text = ...,
        cluster_ipv4_cidr : typing.Text = ...,
        node_ipv4_cidr : typing.Text = ...,
        services_ipv4_cidr : typing.Text = ...,
        cluster_secondary_range_name : typing.Text = ...,
        services_secondary_range_name : typing.Text = ...,
        cluster_ipv4_cidr_block : typing.Text = ...,
        node_ipv4_cidr_block : typing.Text = ...,
        services_ipv4_cidr_block : typing.Text = ...,
        allow_route_overlap : builtins.bool = ...,
        tpu_ipv4_cidr_block : typing.Text = ...,
        use_routes : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_route_overlap",b"allow_route_overlap","cluster_ipv4_cidr",b"cluster_ipv4_cidr","cluster_ipv4_cidr_block",b"cluster_ipv4_cidr_block","cluster_secondary_range_name",b"cluster_secondary_range_name","create_subnetwork",b"create_subnetwork","node_ipv4_cidr",b"node_ipv4_cidr","node_ipv4_cidr_block",b"node_ipv4_cidr_block","services_ipv4_cidr",b"services_ipv4_cidr","services_ipv4_cidr_block",b"services_ipv4_cidr_block","services_secondary_range_name",b"services_secondary_range_name","subnetwork_name",b"subnetwork_name","tpu_ipv4_cidr_block",b"tpu_ipv4_cidr_block","use_ip_aliases",b"use_ip_aliases","use_routes",b"use_routes"]) -> None: ...
global___IPAllocationPolicy = IPAllocationPolicy

class BinaryAuthorization(google.protobuf.message.Message):
    """Configuration for Binary Authorization."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Enable Binary Authorization for this cluster. If enabled, all container
    images will be validated by Google Binauthz.
    """

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___BinaryAuthorization = BinaryAuthorization

class PodSecurityPolicyConfig(google.protobuf.message.Message):
    """Configuration for the PodSecurityPolicy feature."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Enable the PodSecurityPolicy controller for this cluster. If enabled, pods
    must be valid under a PodSecurityPolicy to be created.
    """

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___PodSecurityPolicyConfig = PodSecurityPolicyConfig

class AuthenticatorGroupsConfig(google.protobuf.message.Message):
    """Configuration for returning group information from authenticators."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    SECURITY_GROUP_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether this cluster should return group membership lookups
    during authentication using a group of security groups.
    """

    security_group: typing.Text = ...
    """The name of the security group-of-groups to be used. Only relevant
    if enabled = true.
    """

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        security_group : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","security_group",b"security_group"]) -> None: ...
global___AuthenticatorGroupsConfig = AuthenticatorGroupsConfig

class ClusterTelemetry(google.protobuf.message.Message):
    """Telemetry integration for the cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: ClusterTelemetry.Type.ValueType = ...  # 0
        """Not set."""

        DISABLED: ClusterTelemetry.Type.ValueType = ...  # 1
        """Monitoring integration is disabled."""

        ENABLED: ClusterTelemetry.Type.ValueType = ...  # 2
        """Monitoring integration is enabled."""

        SYSTEM_ONLY: ClusterTelemetry.Type.ValueType = ...  # 3
        """Only system components are monitored and logged."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Type of the integration."""
        pass

    UNSPECIFIED: ClusterTelemetry.Type.ValueType = ...  # 0
    """Not set."""

    DISABLED: ClusterTelemetry.Type.ValueType = ...  # 1
    """Monitoring integration is disabled."""

    ENABLED: ClusterTelemetry.Type.ValueType = ...  # 2
    """Monitoring integration is enabled."""

    SYSTEM_ONLY: ClusterTelemetry.Type.ValueType = ...  # 3
    """Only system components are monitored and logged."""


    TYPE_FIELD_NUMBER: builtins.int
    type: global___ClusterTelemetry.Type.ValueType = ...
    """Type of the integration."""

    def __init__(self,
        *,
        type : global___ClusterTelemetry.Type.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...
global___ClusterTelemetry = ClusterTelemetry

class Cluster(google.protobuf.message.Message):
    """A Google Kubernetes Engine cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATUS_UNSPECIFIED: Cluster.Status.ValueType = ...  # 0
        """Not set."""

        PROVISIONING: Cluster.Status.ValueType = ...  # 1
        """The PROVISIONING state indicates the cluster is being created."""

        RUNNING: Cluster.Status.ValueType = ...  # 2
        """The RUNNING state indicates the cluster has been created and is fully
        usable.
        """

        RECONCILING: Cluster.Status.ValueType = ...  # 3
        """The RECONCILING state indicates that some work is actively being done on
        the cluster, such as upgrading the master or node software. Details can
        be found in the `statusMessage` field.
        """

        STOPPING: Cluster.Status.ValueType = ...  # 4
        """The STOPPING state indicates the cluster is being deleted."""

        ERROR: Cluster.Status.ValueType = ...  # 5
        """The ERROR state indicates the cluster may be unusable. Details
        can be found in the `statusMessage` field.
        """

        DEGRADED: Cluster.Status.ValueType = ...  # 6
        """The DEGRADED state indicates the cluster requires user action to restore
        full functionality. Details can be found in the `statusMessage` field.
        """

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """The current status of the cluster."""
        pass

    STATUS_UNSPECIFIED: Cluster.Status.ValueType = ...  # 0
    """Not set."""

    PROVISIONING: Cluster.Status.ValueType = ...  # 1
    """The PROVISIONING state indicates the cluster is being created."""

    RUNNING: Cluster.Status.ValueType = ...  # 2
    """The RUNNING state indicates the cluster has been created and is fully
    usable.
    """

    RECONCILING: Cluster.Status.ValueType = ...  # 3
    """The RECONCILING state indicates that some work is actively being done on
    the cluster, such as upgrading the master or node software. Details can
    be found in the `statusMessage` field.
    """

    STOPPING: Cluster.Status.ValueType = ...  # 4
    """The STOPPING state indicates the cluster is being deleted."""

    ERROR: Cluster.Status.ValueType = ...  # 5
    """The ERROR state indicates the cluster may be unusable. Details
    can be found in the `statusMessage` field.
    """

    DEGRADED: Cluster.Status.ValueType = ...  # 6
    """The DEGRADED state indicates the cluster requires user action to restore
    full functionality. Details can be found in the `statusMessage` field.
    """


    class ResourceLabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    INITIAL_NODE_COUNT_FIELD_NUMBER: builtins.int
    NODE_CONFIG_FIELD_NUMBER: builtins.int
    MASTER_AUTH_FIELD_NUMBER: builtins.int
    LOGGING_SERVICE_FIELD_NUMBER: builtins.int
    MONITORING_SERVICE_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    CLUSTER_IPV4_CIDR_FIELD_NUMBER: builtins.int
    ADDONS_CONFIG_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    NODE_POOLS_FIELD_NUMBER: builtins.int
    LOCATIONS_FIELD_NUMBER: builtins.int
    ENABLE_KUBERNETES_ALPHA_FIELD_NUMBER: builtins.int
    RESOURCE_LABELS_FIELD_NUMBER: builtins.int
    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LEGACY_ABAC_FIELD_NUMBER: builtins.int
    NETWORK_POLICY_FIELD_NUMBER: builtins.int
    IP_ALLOCATION_POLICY_FIELD_NUMBER: builtins.int
    MASTER_AUTHORIZED_NETWORKS_CONFIG_FIELD_NUMBER: builtins.int
    MAINTENANCE_POLICY_FIELD_NUMBER: builtins.int
    BINARY_AUTHORIZATION_FIELD_NUMBER: builtins.int
    POD_SECURITY_POLICY_CONFIG_FIELD_NUMBER: builtins.int
    AUTOSCALING_FIELD_NUMBER: builtins.int
    NETWORK_CONFIG_FIELD_NUMBER: builtins.int
    PRIVATE_CLUSTER_FIELD_NUMBER: builtins.int
    MASTER_IPV4_CIDR_BLOCK_FIELD_NUMBER: builtins.int
    DEFAULT_MAX_PODS_CONSTRAINT_FIELD_NUMBER: builtins.int
    RESOURCE_USAGE_EXPORT_CONFIG_FIELD_NUMBER: builtins.int
    AUTHENTICATOR_GROUPS_CONFIG_FIELD_NUMBER: builtins.int
    PRIVATE_CLUSTER_CONFIG_FIELD_NUMBER: builtins.int
    VERTICAL_POD_AUTOSCALING_FIELD_NUMBER: builtins.int
    SHIELDED_NODES_FIELD_NUMBER: builtins.int
    RELEASE_CHANNEL_FIELD_NUMBER: builtins.int
    WORKLOAD_IDENTITY_CONFIG_FIELD_NUMBER: builtins.int
    WORKLOAD_CERTIFICATES_FIELD_NUMBER: builtins.int
    MESH_CERTIFICATES_FIELD_NUMBER: builtins.int
    CLUSTER_TELEMETRY_FIELD_NUMBER: builtins.int
    TPU_CONFIG_FIELD_NUMBER: builtins.int
    NOTIFICATION_CONFIG_FIELD_NUMBER: builtins.int
    CONFIDENTIAL_NODES_FIELD_NUMBER: builtins.int
    IDENTITY_SERVICE_CONFIG_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    ENDPOINT_FIELD_NUMBER: builtins.int
    INITIAL_CLUSTER_VERSION_FIELD_NUMBER: builtins.int
    CURRENT_MASTER_VERSION_FIELD_NUMBER: builtins.int
    CURRENT_NODE_VERSION_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    NODE_IPV4_CIDR_SIZE_FIELD_NUMBER: builtins.int
    SERVICES_IPV4_CIDR_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_URLS_FIELD_NUMBER: builtins.int
    CURRENT_NODE_COUNT_FIELD_NUMBER: builtins.int
    EXPIRE_TIME_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    ENABLE_TPU_FIELD_NUMBER: builtins.int
    TPU_IPV4_CIDR_BLOCK_FIELD_NUMBER: builtins.int
    DATABASE_ENCRYPTION_FIELD_NUMBER: builtins.int
    CONDITIONS_FIELD_NUMBER: builtins.int
    MASTER_FIELD_NUMBER: builtins.int
    AUTOPILOT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    NODE_POOL_DEFAULTS_FIELD_NUMBER: builtins.int
    LOGGING_CONFIG_FIELD_NUMBER: builtins.int
    MONITORING_CONFIG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of this cluster. The name must be unique within this project
    and location (e.g. zone or region), and can be up to 40 characters with
    the following restrictions:

    * Lowercase letters, numbers, and hyphens only.
    * Must start with a letter.
    * Must end with a number or a letter.
    """

    description: typing.Text = ...
    """An optional description of this cluster."""

    initial_node_count: builtins.int = ...
    """The number of nodes to create in this cluster. You must ensure that your
    Compute Engine [resource quota](https://cloud.google.com/compute/quotas)
    is sufficient for this number of instances. You must also have available
    firewall and routes quota.
    For requests, this field should only be used in lieu of a
    "node_pool" object, since this configuration (along with the
    "node_config") will be used to create a "NodePool" object with an
    auto-generated name. Do not use this and a node_pool at the same time.

    This field is deprecated, use node_pool.initial_node_count instead.
    """

    @property
    def node_config(self) -> global___NodeConfig:
        """Parameters used in creating the cluster's nodes.
        For requests, this field should only be used in lieu of a
        "node_pool" object, since this configuration (along with the
        "initial_node_count") will be used to create a "NodePool" object with an
        auto-generated name. Do not use this and a node_pool at the same time.
        For responses, this field will be populated with the node configuration of
        the first node pool. (For configuration of each node pool, see
        `node_pool.config`)

        If unspecified, the defaults are used.
        This field is deprecated, use node_pool.config instead.
        """
        pass
    @property
    def master_auth(self) -> global___MasterAuth:
        """The authentication information for accessing the master endpoint.
        If unspecified, the defaults are used:
        For clusters before v1.12, if master_auth is unspecified, `username` will
        be set to "admin", a random password will be generated, and a client
        certificate will be issued.
        """
        pass
    logging_service: typing.Text = ...
    """The logging service the cluster should use to write logs.
    Currently available options:

    * `logging.googleapis.com/kubernetes` - The Cloud Logging
    service with a Kubernetes-native resource model
    * `logging.googleapis.com` - The legacy Cloud Logging service (no longer
      available as of GKE 1.15).
    * `none` - no logs will be exported from the cluster.

    If left as an empty string,`logging.googleapis.com/kubernetes` will be
    used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
    """

    monitoring_service: typing.Text = ...
    """The monitoring service the cluster should use to write metrics.
    Currently available options:

    * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring
    service with a Kubernetes-native resource model
    * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no
      longer available as of GKE 1.15).
    * `none` - No metrics will be exported from the cluster.

    If left as an empty string,`monitoring.googleapis.com/kubernetes` will be
    used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
    """

    network: typing.Text = ...
    """The name of the Google Compute Engine
    [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks)
    to which the cluster is connected. If left unspecified, the `default`
    network will be used. On output this shows the network ID instead of the
    name.
    """

    cluster_ipv4_cidr: typing.Text = ...
    """The IP address range of the container pods in this cluster, in
    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    notation (e.g. `10.96.0.0/14`). Leave blank to have
    one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
    """

    @property
    def addons_config(self) -> global___AddonsConfig:
        """Configurations for the various addons available to run in the cluster."""
        pass
    subnetwork: typing.Text = ...
    """The name of the Google Compute Engine
    [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which
    the cluster is connected. On output this shows the subnetwork ID instead of
    the name.
    """

    @property
    def node_pools(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodePool]:
        """The node pools associated with this cluster.
        This field should not be set if "node_config" or "initial_node_count" are
        specified.
        """
        pass
    @property
    def locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of Google Compute Engine
        [zones](https://cloud.google.com/compute/docs/zones#available) in which the
        cluster's nodes should be located.

        This field provides a default value if
        [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations)
        are not specified during node pool creation.

        Warning: changing cluster locations will update the
        [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations)
        of all node pools and will result in nodes being added and/or removed.
        """
        pass
    enable_kubernetes_alpha: builtins.bool = ...
    """Kubernetes alpha features are enabled on this cluster. This includes alpha
    API groups (e.g. v1beta1) and features that may not be production ready in
    the kubernetes version of the master and nodes.
    The cluster has no SLA for uptime and master/node upgrades are disabled.
    Alpha enabled clusters are automatically deleted thirty days after
    creation.
    """

    @property
    def resource_labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The resource labels for the cluster to use to annotate any related
        Google Compute Engine resources.
        """
        pass
    label_fingerprint: typing.Text = ...
    """The fingerprint of the set of labels for this cluster."""

    @property
    def legacy_abac(self) -> global___LegacyAbac:
        """Configuration for the legacy ABAC authorization mode."""
        pass
    @property
    def network_policy(self) -> global___NetworkPolicy:
        """Configuration options for the NetworkPolicy feature."""
        pass
    @property
    def ip_allocation_policy(self) -> global___IPAllocationPolicy:
        """Configuration for cluster IP allocation."""
        pass
    @property
    def master_authorized_networks_config(self) -> global___MasterAuthorizedNetworksConfig:
        """The configuration options for master authorized networks feature."""
        pass
    @property
    def maintenance_policy(self) -> global___MaintenancePolicy:
        """Configure the maintenance policy for this cluster."""
        pass
    @property
    def binary_authorization(self) -> global___BinaryAuthorization:
        """Configuration for Binary Authorization."""
        pass
    @property
    def pod_security_policy_config(self) -> global___PodSecurityPolicyConfig:
        """Configuration for the PodSecurityPolicy feature."""
        pass
    @property
    def autoscaling(self) -> global___ClusterAutoscaling:
        """Cluster-level autoscaling configuration."""
        pass
    @property
    def network_config(self) -> global___NetworkConfig:
        """Configuration for cluster networking."""
        pass
    private_cluster: builtins.bool = ...
    """If this is a private cluster setup. Private clusters are clusters that, by
    default have no external IP addresses on the nodes and where nodes and the
    master communicate over private IP addresses.
    This field is deprecated, use private_cluster_config.enable_private_nodes
    instead.
    """

    master_ipv4_cidr_block: typing.Text = ...
    """The IP prefix in CIDR notation to use for the hosted master network.
    This prefix will be used for assigning private IP addresses to the
    master or set of masters, as well as the ILB VIP.
    This field is deprecated, use
    private_cluster_config.master_ipv4_cidr_block instead.
    """

    @property
    def default_max_pods_constraint(self) -> global___MaxPodsConstraint:
        """The default constraint on the maximum number of pods that can be run
        simultaneously on a node in the node pool of this cluster. Only honored
        if cluster created with IP Alias support.
        """
        pass
    @property
    def resource_usage_export_config(self) -> global___ResourceUsageExportConfig:
        """Configuration for exporting resource usages. Resource usage export is
        disabled when this config unspecified.
        """
        pass
    @property
    def authenticator_groups_config(self) -> global___AuthenticatorGroupsConfig:
        """Configuration controlling RBAC group membership information."""
        pass
    @property
    def private_cluster_config(self) -> global___PrivateClusterConfig:
        """Configuration for private cluster."""
        pass
    @property
    def vertical_pod_autoscaling(self) -> global___VerticalPodAutoscaling:
        """Cluster-level Vertical Pod Autoscaling configuration."""
        pass
    @property
    def shielded_nodes(self) -> global___ShieldedNodes:
        """Shielded Nodes configuration."""
        pass
    @property
    def release_channel(self) -> global___ReleaseChannel:
        """Release channel configuration."""
        pass
    @property
    def workload_identity_config(self) -> global___WorkloadIdentityConfig:
        """Configuration for the use of Kubernetes Service Accounts in GCP IAM
        policies.
        """
        pass
    @property
    def workload_certificates(self) -> global___WorkloadCertificates:
        """Configuration for issuance of mTLS keys and certificates to Kubernetes
        pods.
        """
        pass
    @property
    def mesh_certificates(self) -> global___MeshCertificates:
        """Configuration for issuance of mTLS keys and certificates to Kubernetes
        pods.
        """
        pass
    @property
    def cluster_telemetry(self) -> global___ClusterTelemetry:
        """Telemetry integration for the cluster."""
        pass
    @property
    def tpu_config(self) -> global___TpuConfig:
        """Configuration for Cloud TPU support;"""
        pass
    @property
    def notification_config(self) -> global___NotificationConfig:
        """Notification configuration of the cluster."""
        pass
    @property
    def confidential_nodes(self) -> global___ConfidentialNodes:
        """Configuration of Confidential Nodes"""
        pass
    @property
    def identity_service_config(self) -> global___IdentityServiceConfig:
        """Configuration for Identity Service component."""
        pass
    self_link: typing.Text = ...
    """[Output only] Server-defined URL for the resource."""

    zone: typing.Text = ...
    """[Output only] The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field is deprecated, use location instead.
    """

    endpoint: typing.Text = ...
    """[Output only] The IP address of this cluster's master endpoint.
    The endpoint can be accessed from the internet at
    `https://username:password@endpoint/`.

    See the `masterAuth` property of this resource for username and
    password information.
    """

    initial_cluster_version: typing.Text = ...
    """The initial Kubernetes version for this cluster.  Valid versions are those
    found in validMasterVersions returned by getServerConfig.  The version can
    be upgraded over time; such upgrades are reflected in
    currentMasterVersion and currentNodeVersion.

    Users may specify either explicit versions offered by
    Kubernetes Engine or version aliases, which have the following behavior:

    - "latest": picks the highest valid Kubernetes version
    - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    - "1.X.Y-gke.N": picks an explicit Kubernetes version
    - "","-": picks the default Kubernetes version
    """

    current_master_version: typing.Text = ...
    """[Output only] The current software version of the master endpoint."""

    current_node_version: typing.Text = ...
    """[Output only] Deprecated, use
    [NodePool.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters.nodePools)
    instead. The current version of the node software components.
    If they are currently at multiple versions because they're in the process
    of being upgraded, this reflects the minimum version of all nodes.
    """

    create_time: typing.Text = ...
    """[Output only] The time the cluster was created, in
    [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    """

    status: global___Cluster.Status.ValueType = ...
    """[Output only] The current status of this cluster."""

    status_message: typing.Text = ...
    """[Output only] Deprecated. Use conditions instead.
    Additional information about the current status of this
    cluster, if available.
    """

    node_ipv4_cidr_size: builtins.int = ...
    """[Output only] The size of the address space on each node for hosting
    containers. This is provisioned from within the `container_ipv4_cidr`
    range. This field will only be set when cluster is in route-based network
    mode.
    """

    services_ipv4_cidr: typing.Text = ...
    """[Output only] The IP address range of the Kubernetes services in
    this cluster, in
    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    notation (e.g. `1.2.3.4/29`). Service addresses are
    typically put in the last `/16` from the container CIDR.
    """

    @property
    def instance_group_urls(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Deprecated. Use node_pools.instance_group_urls."""
        pass
    current_node_count: builtins.int = ...
    """[Output only]  The number of nodes currently in the cluster. Deprecated.
    Call Kubernetes API directly to retrieve node information.
    """

    expire_time: typing.Text = ...
    """[Output only] The time the cluster will be automatically
    deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    """

    location: typing.Text = ...
    """[Output only] The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
    or
    [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
    in which the cluster resides.
    """

    enable_tpu: builtins.bool = ...
    """Enable the ability to use Cloud TPUs in this cluster.
    This field is deprecated, use tpu_config.enabled instead.
    """

    tpu_ipv4_cidr_block: typing.Text = ...
    """[Output only] The IP address range of the Cloud TPUs in this cluster, in
    [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    notation (e.g. `1.2.3.4/29`).
    """

    @property
    def database_encryption(self) -> global___DatabaseEncryption:
        """Configuration of etcd encryption."""
        pass
    @property
    def conditions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StatusCondition]:
        """Which conditions caused the current cluster state."""
        pass
    @property
    def master(self) -> global___Master:
        """Configuration for master components."""
        pass
    @property
    def autopilot(self) -> global___Autopilot:
        """Autopilot configuration for the cluster."""
        pass
    id: typing.Text = ...
    """Output only. Unique id for the cluster."""

    @property
    def node_pool_defaults(self) -> global___NodePoolDefaults:
        """Default NodePool settings for the entire cluster. These settings are
        overridden if specified on the specific NodePool object.
        """
        pass
    @property
    def logging_config(self) -> global___LoggingConfig:
        """Logging configuration for the cluster."""
        pass
    @property
    def monitoring_config(self) -> global___MonitoringConfig:
        """Monitoring configuration for the cluster."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        initial_node_count : builtins.int = ...,
        node_config : typing.Optional[global___NodeConfig] = ...,
        master_auth : typing.Optional[global___MasterAuth] = ...,
        logging_service : typing.Text = ...,
        monitoring_service : typing.Text = ...,
        network : typing.Text = ...,
        cluster_ipv4_cidr : typing.Text = ...,
        addons_config : typing.Optional[global___AddonsConfig] = ...,
        subnetwork : typing.Text = ...,
        node_pools : typing.Optional[typing.Iterable[global___NodePool]] = ...,
        locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        enable_kubernetes_alpha : builtins.bool = ...,
        resource_labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        label_fingerprint : typing.Text = ...,
        legacy_abac : typing.Optional[global___LegacyAbac] = ...,
        network_policy : typing.Optional[global___NetworkPolicy] = ...,
        ip_allocation_policy : typing.Optional[global___IPAllocationPolicy] = ...,
        master_authorized_networks_config : typing.Optional[global___MasterAuthorizedNetworksConfig] = ...,
        maintenance_policy : typing.Optional[global___MaintenancePolicy] = ...,
        binary_authorization : typing.Optional[global___BinaryAuthorization] = ...,
        pod_security_policy_config : typing.Optional[global___PodSecurityPolicyConfig] = ...,
        autoscaling : typing.Optional[global___ClusterAutoscaling] = ...,
        network_config : typing.Optional[global___NetworkConfig] = ...,
        private_cluster : builtins.bool = ...,
        master_ipv4_cidr_block : typing.Text = ...,
        default_max_pods_constraint : typing.Optional[global___MaxPodsConstraint] = ...,
        resource_usage_export_config : typing.Optional[global___ResourceUsageExportConfig] = ...,
        authenticator_groups_config : typing.Optional[global___AuthenticatorGroupsConfig] = ...,
        private_cluster_config : typing.Optional[global___PrivateClusterConfig] = ...,
        vertical_pod_autoscaling : typing.Optional[global___VerticalPodAutoscaling] = ...,
        shielded_nodes : typing.Optional[global___ShieldedNodes] = ...,
        release_channel : typing.Optional[global___ReleaseChannel] = ...,
        workload_identity_config : typing.Optional[global___WorkloadIdentityConfig] = ...,
        workload_certificates : typing.Optional[global___WorkloadCertificates] = ...,
        mesh_certificates : typing.Optional[global___MeshCertificates] = ...,
        cluster_telemetry : typing.Optional[global___ClusterTelemetry] = ...,
        tpu_config : typing.Optional[global___TpuConfig] = ...,
        notification_config : typing.Optional[global___NotificationConfig] = ...,
        confidential_nodes : typing.Optional[global___ConfidentialNodes] = ...,
        identity_service_config : typing.Optional[global___IdentityServiceConfig] = ...,
        self_link : typing.Text = ...,
        zone : typing.Text = ...,
        endpoint : typing.Text = ...,
        initial_cluster_version : typing.Text = ...,
        current_master_version : typing.Text = ...,
        current_node_version : typing.Text = ...,
        create_time : typing.Text = ...,
        status : global___Cluster.Status.ValueType = ...,
        status_message : typing.Text = ...,
        node_ipv4_cidr_size : builtins.int = ...,
        services_ipv4_cidr : typing.Text = ...,
        instance_group_urls : typing.Optional[typing.Iterable[typing.Text]] = ...,
        current_node_count : builtins.int = ...,
        expire_time : typing.Text = ...,
        location : typing.Text = ...,
        enable_tpu : builtins.bool = ...,
        tpu_ipv4_cidr_block : typing.Text = ...,
        database_encryption : typing.Optional[global___DatabaseEncryption] = ...,
        conditions : typing.Optional[typing.Iterable[global___StatusCondition]] = ...,
        master : typing.Optional[global___Master] = ...,
        autopilot : typing.Optional[global___Autopilot] = ...,
        id : typing.Text = ...,
        node_pool_defaults : typing.Optional[global___NodePoolDefaults] = ...,
        logging_config : typing.Optional[global___LoggingConfig] = ...,
        monitoring_config : typing.Optional[global___MonitoringConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_node_pool_defaults",b"_node_pool_defaults","addons_config",b"addons_config","authenticator_groups_config",b"authenticator_groups_config","autopilot",b"autopilot","autoscaling",b"autoscaling","binary_authorization",b"binary_authorization","cluster_telemetry",b"cluster_telemetry","confidential_nodes",b"confidential_nodes","database_encryption",b"database_encryption","default_max_pods_constraint",b"default_max_pods_constraint","identity_service_config",b"identity_service_config","ip_allocation_policy",b"ip_allocation_policy","legacy_abac",b"legacy_abac","logging_config",b"logging_config","maintenance_policy",b"maintenance_policy","master",b"master","master_auth",b"master_auth","master_authorized_networks_config",b"master_authorized_networks_config","mesh_certificates",b"mesh_certificates","monitoring_config",b"monitoring_config","network_config",b"network_config","network_policy",b"network_policy","node_config",b"node_config","node_pool_defaults",b"node_pool_defaults","notification_config",b"notification_config","pod_security_policy_config",b"pod_security_policy_config","private_cluster_config",b"private_cluster_config","release_channel",b"release_channel","resource_usage_export_config",b"resource_usage_export_config","shielded_nodes",b"shielded_nodes","tpu_config",b"tpu_config","vertical_pod_autoscaling",b"vertical_pod_autoscaling","workload_certificates",b"workload_certificates","workload_identity_config",b"workload_identity_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_node_pool_defaults",b"_node_pool_defaults","addons_config",b"addons_config","authenticator_groups_config",b"authenticator_groups_config","autopilot",b"autopilot","autoscaling",b"autoscaling","binary_authorization",b"binary_authorization","cluster_ipv4_cidr",b"cluster_ipv4_cidr","cluster_telemetry",b"cluster_telemetry","conditions",b"conditions","confidential_nodes",b"confidential_nodes","create_time",b"create_time","current_master_version",b"current_master_version","current_node_count",b"current_node_count","current_node_version",b"current_node_version","database_encryption",b"database_encryption","default_max_pods_constraint",b"default_max_pods_constraint","description",b"description","enable_kubernetes_alpha",b"enable_kubernetes_alpha","enable_tpu",b"enable_tpu","endpoint",b"endpoint","expire_time",b"expire_time","id",b"id","identity_service_config",b"identity_service_config","initial_cluster_version",b"initial_cluster_version","initial_node_count",b"initial_node_count","instance_group_urls",b"instance_group_urls","ip_allocation_policy",b"ip_allocation_policy","label_fingerprint",b"label_fingerprint","legacy_abac",b"legacy_abac","location",b"location","locations",b"locations","logging_config",b"logging_config","logging_service",b"logging_service","maintenance_policy",b"maintenance_policy","master",b"master","master_auth",b"master_auth","master_authorized_networks_config",b"master_authorized_networks_config","master_ipv4_cidr_block",b"master_ipv4_cidr_block","mesh_certificates",b"mesh_certificates","monitoring_config",b"monitoring_config","monitoring_service",b"monitoring_service","name",b"name","network",b"network","network_config",b"network_config","network_policy",b"network_policy","node_config",b"node_config","node_ipv4_cidr_size",b"node_ipv4_cidr_size","node_pool_defaults",b"node_pool_defaults","node_pools",b"node_pools","notification_config",b"notification_config","pod_security_policy_config",b"pod_security_policy_config","private_cluster",b"private_cluster","private_cluster_config",b"private_cluster_config","release_channel",b"release_channel","resource_labels",b"resource_labels","resource_usage_export_config",b"resource_usage_export_config","self_link",b"self_link","services_ipv4_cidr",b"services_ipv4_cidr","shielded_nodes",b"shielded_nodes","status",b"status","status_message",b"status_message","subnetwork",b"subnetwork","tpu_config",b"tpu_config","tpu_ipv4_cidr_block",b"tpu_ipv4_cidr_block","vertical_pod_autoscaling",b"vertical_pod_autoscaling","workload_certificates",b"workload_certificates","workload_identity_config",b"workload_identity_config","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_node_pool_defaults",b"_node_pool_defaults"]) -> typing.Optional[typing_extensions.Literal["node_pool_defaults"]]: ...
global___Cluster = Cluster

class NodePoolDefaults(google.protobuf.message.Message):
    """Subset of Nodepool message that has defaults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_CONFIG_DEFAULTS_FIELD_NUMBER: builtins.int
    @property
    def node_config_defaults(self) -> global___NodeConfigDefaults:
        """Subset of NodeConfig message that has defaults."""
        pass
    def __init__(self,
        *,
        node_config_defaults : typing.Optional[global___NodeConfigDefaults] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["node_config_defaults",b"node_config_defaults"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["node_config_defaults",b"node_config_defaults"]) -> None: ...
global___NodePoolDefaults = NodePoolDefaults

class NodeConfigDefaults(google.protobuf.message.Message):
    """Subset of NodeConfig message that has defaults."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GCFS_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def gcfs_config(self) -> global___GcfsConfig:
        """GCFS (Google Container File System, a.k.a Riptide) options."""
        pass
    def __init__(self,
        *,
        gcfs_config : typing.Optional[global___GcfsConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["gcfs_config",b"gcfs_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["gcfs_config",b"gcfs_config"]) -> None: ...
global___NodeConfigDefaults = NodeConfigDefaults

class ClusterUpdate(google.protobuf.message.Message):
    """ClusterUpdate describes an update to the cluster. Exactly one update can
    be applied to a cluster with each request, so at most one field can be
    provided.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESIRED_NODE_VERSION_FIELD_NUMBER: builtins.int
    DESIRED_MONITORING_SERVICE_FIELD_NUMBER: builtins.int
    DESIRED_ADDONS_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_NODE_POOL_ID_FIELD_NUMBER: builtins.int
    DESIRED_IMAGE_TYPE_FIELD_NUMBER: builtins.int
    DESIRED_NODE_POOL_AUTOSCALING_FIELD_NUMBER: builtins.int
    DESIRED_LOCATIONS_FIELD_NUMBER: builtins.int
    DESIRED_MASTER_AUTHORIZED_NETWORKS_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_POD_SECURITY_POLICY_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_CLUSTER_AUTOSCALING_FIELD_NUMBER: builtins.int
    DESIRED_BINARY_AUTHORIZATION_FIELD_NUMBER: builtins.int
    DESIRED_LOGGING_SERVICE_FIELD_NUMBER: builtins.int
    DESIRED_RESOURCE_USAGE_EXPORT_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_VERTICAL_POD_AUTOSCALING_FIELD_NUMBER: builtins.int
    DESIRED_PRIVATE_CLUSTER_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_INTRA_NODE_VISIBILITY_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_DEFAULT_SNAT_STATUS_FIELD_NUMBER: builtins.int
    DESIRED_CLUSTER_TELEMETRY_FIELD_NUMBER: builtins.int
    DESIRED_RELEASE_CHANNEL_FIELD_NUMBER: builtins.int
    DESIRED_TPU_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_L4ILB_SUBSETTING_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_DATAPATH_PROVIDER_FIELD_NUMBER: builtins.int
    DESIRED_PRIVATE_IPV6_GOOGLE_ACCESS_FIELD_NUMBER: builtins.int
    DESIRED_NOTIFICATION_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_MASTER_VERSION_FIELD_NUMBER: builtins.int
    DESIRED_GCFS_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_DATABASE_ENCRYPTION_FIELD_NUMBER: builtins.int
    DESIRED_WORKLOAD_IDENTITY_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_WORKLOAD_CERTIFICATES_FIELD_NUMBER: builtins.int
    DESIRED_MESH_CERTIFICATES_FIELD_NUMBER: builtins.int
    DESIRED_SHIELDED_NODES_FIELD_NUMBER: builtins.int
    DESIRED_MASTER_FIELD_NUMBER: builtins.int
    DESIRED_DNS_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_SERVICE_EXTERNAL_IPS_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_AUTHENTICATOR_GROUPS_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_LOGGING_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_MONITORING_CONFIG_FIELD_NUMBER: builtins.int
    DESIRED_IDENTITY_SERVICE_CONFIG_FIELD_NUMBER: builtins.int
    desired_node_version: typing.Text = ...
    """The Kubernetes version to change the nodes to (typically an
    upgrade).

    Users may specify either explicit versions offered by
    Kubernetes Engine or version aliases, which have the following behavior:

    - "latest": picks the highest valid Kubernetes version
    - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    - "1.X.Y-gke.N": picks an explicit Kubernetes version
    - "-": picks the Kubernetes master version
    """

    desired_monitoring_service: typing.Text = ...
    """The monitoring service the cluster should use to write metrics.
    Currently available options:

    * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring
    service with a Kubernetes-native resource model
    * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no
      longer available as of GKE 1.15).
    * `none` - No metrics will be exported from the cluster.

    If left as an empty string,`monitoring.googleapis.com/kubernetes` will be
    used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
    """

    @property
    def desired_addons_config(self) -> global___AddonsConfig:
        """Configurations for the various addons available to run in the cluster."""
        pass
    desired_node_pool_id: typing.Text = ...
    """The node pool to be upgraded. This field is mandatory if
    "desired_node_version", "desired_image_family",
    "desired_node_pool_autoscaling", or "desired_workload_metadata_config"
    is specified and there is more than one node pool on the cluster.
    """

    desired_image_type: typing.Text = ...
    """The desired image type for the node pool.
    NOTE: Set the "desired_node_pool" field as well.
    """

    @property
    def desired_node_pool_autoscaling(self) -> global___NodePoolAutoscaling:
        """Autoscaler configuration for the node pool specified in
        desired_node_pool_id. If there is only one pool in the
        cluster and desired_node_pool_id is not provided then
        the change applies to that single node pool.
        """
        pass
    @property
    def desired_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The desired list of Google Compute Engine
        [zones](https://cloud.google.com/compute/docs/zones#available) in which the
        cluster's nodes should be located.

        This list must always include the cluster's primary zone.

        Warning: changing cluster locations will update the locations of all node
        pools and will result in nodes being added and/or removed.
        """
        pass
    @property
    def desired_master_authorized_networks_config(self) -> global___MasterAuthorizedNetworksConfig:
        """The desired configuration options for master authorized networks feature."""
        pass
    @property
    def desired_pod_security_policy_config(self) -> global___PodSecurityPolicyConfig:
        """The desired configuration options for the PodSecurityPolicy feature."""
        pass
    @property
    def desired_cluster_autoscaling(self) -> global___ClusterAutoscaling:
        """Cluster-level autoscaling configuration."""
        pass
    @property
    def desired_binary_authorization(self) -> global___BinaryAuthorization:
        """The desired configuration options for the Binary Authorization feature."""
        pass
    desired_logging_service: typing.Text = ...
    """The logging service the cluster should use to write logs.
    Currently available options:

    * `logging.googleapis.com/kubernetes` - The Cloud Logging
    service with a Kubernetes-native resource model
    * `logging.googleapis.com` - The legacy Cloud Logging service (no longer
      available as of GKE 1.15).
    * `none` - no logs will be exported from the cluster.

    If left as an empty string,`logging.googleapis.com/kubernetes` will be
    used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
    """

    @property
    def desired_resource_usage_export_config(self) -> global___ResourceUsageExportConfig:
        """The desired configuration for exporting resource usage."""
        pass
    @property
    def desired_vertical_pod_autoscaling(self) -> global___VerticalPodAutoscaling:
        """Cluster-level Vertical Pod Autoscaling configuration."""
        pass
    @property
    def desired_private_cluster_config(self) -> global___PrivateClusterConfig:
        """The desired private cluster configuration."""
        pass
    @property
    def desired_intra_node_visibility_config(self) -> global___IntraNodeVisibilityConfig:
        """The desired config of Intra-node visibility."""
        pass
    @property
    def desired_default_snat_status(self) -> global___DefaultSnatStatus:
        """The desired status of whether to disable default sNAT for this cluster."""
        pass
    @property
    def desired_cluster_telemetry(self) -> global___ClusterTelemetry:
        """The desired telemetry integration for the cluster."""
        pass
    @property
    def desired_release_channel(self) -> global___ReleaseChannel:
        """The desired release channel configuration."""
        pass
    @property
    def desired_tpu_config(self) -> global___TpuConfig:
        """The desired Cloud TPU configuration."""
        pass
    @property
    def desired_l4ilb_subsetting_config(self) -> global___ILBSubsettingConfig:
        """The desired L4 Internal Load Balancer Subsetting configuration."""
        pass
    desired_datapath_provider: global___DatapathProvider.ValueType = ...
    """The desired datapath provider for the cluster."""

    desired_private_ipv6_google_access: global___PrivateIPv6GoogleAccess.ValueType = ...
    """The desired state of IPv6 connectivity to Google Services."""

    @property
    def desired_notification_config(self) -> global___NotificationConfig:
        """The desired notification configuration."""
        pass
    desired_master_version: typing.Text = ...
    """The Kubernetes version to change the master to. The only valid value is the
    latest supported version.

    Users may specify either explicit versions offered by
    Kubernetes Engine or version aliases, which have the following behavior:

    - "latest": picks the highest valid Kubernetes version
    - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    - "1.X.Y-gke.N": picks an explicit Kubernetes version
    - "-": picks the default Kubernetes version
    """

    @property
    def desired_gcfs_config(self) -> global___GcfsConfig:
        """The desired GCFS config for the cluster."""
        pass
    @property
    def desired_database_encryption(self) -> global___DatabaseEncryption:
        """Configuration of etcd encryption."""
        pass
    @property
    def desired_workload_identity_config(self) -> global___WorkloadIdentityConfig:
        """Configuration for Workload Identity."""
        pass
    @property
    def desired_workload_certificates(self) -> global___WorkloadCertificates:
        """Configuration for issuance of mTLS keys and certificates to Kubernetes
        pods.
        """
        pass
    @property
    def desired_mesh_certificates(self) -> global___MeshCertificates:
        """Configuration for issuance of mTLS keys and certificates to Kubernetes
        pods.
        """
        pass
    @property
    def desired_shielded_nodes(self) -> global___ShieldedNodes:
        """Configuration for Shielded Nodes."""
        pass
    @property
    def desired_master(self) -> global___Master:
        """Configuration for master components."""
        pass
    @property
    def desired_dns_config(self) -> global___DNSConfig:
        """DNSConfig contains clusterDNS config for this cluster."""
        pass
    @property
    def desired_service_external_ips_config(self) -> global___ServiceExternalIPsConfig:
        """ServiceExternalIPsConfig specifies the config for the use of Services with
        ExternalIPs field.
        """
        pass
    @property
    def desired_authenticator_groups_config(self) -> global___AuthenticatorGroupsConfig:
        """AuthenticatorGroupsConfig specifies the config for the cluster security
        groups settings.
        """
        pass
    @property
    def desired_logging_config(self) -> global___LoggingConfig:
        """The desired logging configuration."""
        pass
    @property
    def desired_monitoring_config(self) -> global___MonitoringConfig:
        """The desired monitoring configuration."""
        pass
    @property
    def desired_identity_service_config(self) -> global___IdentityServiceConfig:
        """The desired Identity Service component configuration."""
        pass
    def __init__(self,
        *,
        desired_node_version : typing.Text = ...,
        desired_monitoring_service : typing.Text = ...,
        desired_addons_config : typing.Optional[global___AddonsConfig] = ...,
        desired_node_pool_id : typing.Text = ...,
        desired_image_type : typing.Text = ...,
        desired_node_pool_autoscaling : typing.Optional[global___NodePoolAutoscaling] = ...,
        desired_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        desired_master_authorized_networks_config : typing.Optional[global___MasterAuthorizedNetworksConfig] = ...,
        desired_pod_security_policy_config : typing.Optional[global___PodSecurityPolicyConfig] = ...,
        desired_cluster_autoscaling : typing.Optional[global___ClusterAutoscaling] = ...,
        desired_binary_authorization : typing.Optional[global___BinaryAuthorization] = ...,
        desired_logging_service : typing.Text = ...,
        desired_resource_usage_export_config : typing.Optional[global___ResourceUsageExportConfig] = ...,
        desired_vertical_pod_autoscaling : typing.Optional[global___VerticalPodAutoscaling] = ...,
        desired_private_cluster_config : typing.Optional[global___PrivateClusterConfig] = ...,
        desired_intra_node_visibility_config : typing.Optional[global___IntraNodeVisibilityConfig] = ...,
        desired_default_snat_status : typing.Optional[global___DefaultSnatStatus] = ...,
        desired_cluster_telemetry : typing.Optional[global___ClusterTelemetry] = ...,
        desired_release_channel : typing.Optional[global___ReleaseChannel] = ...,
        desired_tpu_config : typing.Optional[global___TpuConfig] = ...,
        desired_l4ilb_subsetting_config : typing.Optional[global___ILBSubsettingConfig] = ...,
        desired_datapath_provider : global___DatapathProvider.ValueType = ...,
        desired_private_ipv6_google_access : global___PrivateIPv6GoogleAccess.ValueType = ...,
        desired_notification_config : typing.Optional[global___NotificationConfig] = ...,
        desired_master_version : typing.Text = ...,
        desired_gcfs_config : typing.Optional[global___GcfsConfig] = ...,
        desired_database_encryption : typing.Optional[global___DatabaseEncryption] = ...,
        desired_workload_identity_config : typing.Optional[global___WorkloadIdentityConfig] = ...,
        desired_workload_certificates : typing.Optional[global___WorkloadCertificates] = ...,
        desired_mesh_certificates : typing.Optional[global___MeshCertificates] = ...,
        desired_shielded_nodes : typing.Optional[global___ShieldedNodes] = ...,
        desired_master : typing.Optional[global___Master] = ...,
        desired_dns_config : typing.Optional[global___DNSConfig] = ...,
        desired_service_external_ips_config : typing.Optional[global___ServiceExternalIPsConfig] = ...,
        desired_authenticator_groups_config : typing.Optional[global___AuthenticatorGroupsConfig] = ...,
        desired_logging_config : typing.Optional[global___LoggingConfig] = ...,
        desired_monitoring_config : typing.Optional[global___MonitoringConfig] = ...,
        desired_identity_service_config : typing.Optional[global___IdentityServiceConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["desired_addons_config",b"desired_addons_config","desired_authenticator_groups_config",b"desired_authenticator_groups_config","desired_binary_authorization",b"desired_binary_authorization","desired_cluster_autoscaling",b"desired_cluster_autoscaling","desired_cluster_telemetry",b"desired_cluster_telemetry","desired_database_encryption",b"desired_database_encryption","desired_default_snat_status",b"desired_default_snat_status","desired_dns_config",b"desired_dns_config","desired_gcfs_config",b"desired_gcfs_config","desired_identity_service_config",b"desired_identity_service_config","desired_intra_node_visibility_config",b"desired_intra_node_visibility_config","desired_l4ilb_subsetting_config",b"desired_l4ilb_subsetting_config","desired_logging_config",b"desired_logging_config","desired_master",b"desired_master","desired_master_authorized_networks_config",b"desired_master_authorized_networks_config","desired_mesh_certificates",b"desired_mesh_certificates","desired_monitoring_config",b"desired_monitoring_config","desired_node_pool_autoscaling",b"desired_node_pool_autoscaling","desired_notification_config",b"desired_notification_config","desired_pod_security_policy_config",b"desired_pod_security_policy_config","desired_private_cluster_config",b"desired_private_cluster_config","desired_release_channel",b"desired_release_channel","desired_resource_usage_export_config",b"desired_resource_usage_export_config","desired_service_external_ips_config",b"desired_service_external_ips_config","desired_shielded_nodes",b"desired_shielded_nodes","desired_tpu_config",b"desired_tpu_config","desired_vertical_pod_autoscaling",b"desired_vertical_pod_autoscaling","desired_workload_certificates",b"desired_workload_certificates","desired_workload_identity_config",b"desired_workload_identity_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["desired_addons_config",b"desired_addons_config","desired_authenticator_groups_config",b"desired_authenticator_groups_config","desired_binary_authorization",b"desired_binary_authorization","desired_cluster_autoscaling",b"desired_cluster_autoscaling","desired_cluster_telemetry",b"desired_cluster_telemetry","desired_database_encryption",b"desired_database_encryption","desired_datapath_provider",b"desired_datapath_provider","desired_default_snat_status",b"desired_default_snat_status","desired_dns_config",b"desired_dns_config","desired_gcfs_config",b"desired_gcfs_config","desired_identity_service_config",b"desired_identity_service_config","desired_image_type",b"desired_image_type","desired_intra_node_visibility_config",b"desired_intra_node_visibility_config","desired_l4ilb_subsetting_config",b"desired_l4ilb_subsetting_config","desired_locations",b"desired_locations","desired_logging_config",b"desired_logging_config","desired_logging_service",b"desired_logging_service","desired_master",b"desired_master","desired_master_authorized_networks_config",b"desired_master_authorized_networks_config","desired_master_version",b"desired_master_version","desired_mesh_certificates",b"desired_mesh_certificates","desired_monitoring_config",b"desired_monitoring_config","desired_monitoring_service",b"desired_monitoring_service","desired_node_pool_autoscaling",b"desired_node_pool_autoscaling","desired_node_pool_id",b"desired_node_pool_id","desired_node_version",b"desired_node_version","desired_notification_config",b"desired_notification_config","desired_pod_security_policy_config",b"desired_pod_security_policy_config","desired_private_cluster_config",b"desired_private_cluster_config","desired_private_ipv6_google_access",b"desired_private_ipv6_google_access","desired_release_channel",b"desired_release_channel","desired_resource_usage_export_config",b"desired_resource_usage_export_config","desired_service_external_ips_config",b"desired_service_external_ips_config","desired_shielded_nodes",b"desired_shielded_nodes","desired_tpu_config",b"desired_tpu_config","desired_vertical_pod_autoscaling",b"desired_vertical_pod_autoscaling","desired_workload_certificates",b"desired_workload_certificates","desired_workload_identity_config",b"desired_workload_identity_config"]) -> None: ...
global___ClusterUpdate = ClusterUpdate

class Operation(google.protobuf.message.Message):
    """This operation resource represents operations that may have happened or are
    happening on the cluster. All fields are output only.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATUS_UNSPECIFIED: Operation.Status.ValueType = ...  # 0
        """Not set."""

        PENDING: Operation.Status.ValueType = ...  # 1
        """The operation has been created."""

        RUNNING: Operation.Status.ValueType = ...  # 2
        """The operation is currently running."""

        DONE: Operation.Status.ValueType = ...  # 3
        """The operation is done, either cancelled or completed."""

        ABORTING: Operation.Status.ValueType = ...  # 4
        """The operation is aborting."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Current status of the operation."""
        pass

    STATUS_UNSPECIFIED: Operation.Status.ValueType = ...  # 0
    """Not set."""

    PENDING: Operation.Status.ValueType = ...  # 1
    """The operation has been created."""

    RUNNING: Operation.Status.ValueType = ...  # 2
    """The operation is currently running."""

    DONE: Operation.Status.ValueType = ...  # 3
    """The operation is done, either cancelled or completed."""

    ABORTING: Operation.Status.ValueType = ...  # 4
    """The operation is aborting."""


    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TYPE_UNSPECIFIED: Operation.Type.ValueType = ...  # 0
        """Not set."""

        CREATE_CLUSTER: Operation.Type.ValueType = ...  # 1
        """Cluster create."""

        DELETE_CLUSTER: Operation.Type.ValueType = ...  # 2
        """Cluster delete."""

        UPGRADE_MASTER: Operation.Type.ValueType = ...  # 3
        """A master upgrade."""

        UPGRADE_NODES: Operation.Type.ValueType = ...  # 4
        """A node upgrade."""

        REPAIR_CLUSTER: Operation.Type.ValueType = ...  # 5
        """Cluster repair."""

        UPDATE_CLUSTER: Operation.Type.ValueType = ...  # 6
        """Cluster update."""

        CREATE_NODE_POOL: Operation.Type.ValueType = ...  # 7
        """Node pool create."""

        DELETE_NODE_POOL: Operation.Type.ValueType = ...  # 8
        """Node pool delete."""

        SET_NODE_POOL_MANAGEMENT: Operation.Type.ValueType = ...  # 9
        """Set node pool management."""

        AUTO_REPAIR_NODES: Operation.Type.ValueType = ...  # 10
        """Automatic node pool repair."""

        AUTO_UPGRADE_NODES: Operation.Type.ValueType = ...  # 11
        """Automatic node upgrade."""

        SET_LABELS: Operation.Type.ValueType = ...  # 12
        """Set labels."""

        SET_MASTER_AUTH: Operation.Type.ValueType = ...  # 13
        """Set/generate master auth materials"""

        SET_NODE_POOL_SIZE: Operation.Type.ValueType = ...  # 14
        """Set node pool size."""

        SET_NETWORK_POLICY: Operation.Type.ValueType = ...  # 15
        """Updates network policy for a cluster."""

        SET_MAINTENANCE_POLICY: Operation.Type.ValueType = ...  # 16
        """Set the maintenance policy."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Operation type."""
        pass

    TYPE_UNSPECIFIED: Operation.Type.ValueType = ...  # 0
    """Not set."""

    CREATE_CLUSTER: Operation.Type.ValueType = ...  # 1
    """Cluster create."""

    DELETE_CLUSTER: Operation.Type.ValueType = ...  # 2
    """Cluster delete."""

    UPGRADE_MASTER: Operation.Type.ValueType = ...  # 3
    """A master upgrade."""

    UPGRADE_NODES: Operation.Type.ValueType = ...  # 4
    """A node upgrade."""

    REPAIR_CLUSTER: Operation.Type.ValueType = ...  # 5
    """Cluster repair."""

    UPDATE_CLUSTER: Operation.Type.ValueType = ...  # 6
    """Cluster update."""

    CREATE_NODE_POOL: Operation.Type.ValueType = ...  # 7
    """Node pool create."""

    DELETE_NODE_POOL: Operation.Type.ValueType = ...  # 8
    """Node pool delete."""

    SET_NODE_POOL_MANAGEMENT: Operation.Type.ValueType = ...  # 9
    """Set node pool management."""

    AUTO_REPAIR_NODES: Operation.Type.ValueType = ...  # 10
    """Automatic node pool repair."""

    AUTO_UPGRADE_NODES: Operation.Type.ValueType = ...  # 11
    """Automatic node upgrade."""

    SET_LABELS: Operation.Type.ValueType = ...  # 12
    """Set labels."""

    SET_MASTER_AUTH: Operation.Type.ValueType = ...  # 13
    """Set/generate master auth materials"""

    SET_NODE_POOL_SIZE: Operation.Type.ValueType = ...  # 14
    """Set node pool size."""

    SET_NETWORK_POLICY: Operation.Type.ValueType = ...  # 15
    """Updates network policy for a cluster."""

    SET_MAINTENANCE_POLICY: Operation.Type.ValueType = ...  # 16
    """Set the maintenance policy."""


    NAME_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    OPERATION_TYPE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    DETAIL_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    TARGET_LINK_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    PROGRESS_FIELD_NUMBER: builtins.int
    CLUSTER_CONDITIONS_FIELD_NUMBER: builtins.int
    NODEPOOL_CONDITIONS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The server-assigned ID for the operation."""

    zone: typing.Text = ...
    """The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    operation is taking place. This field is deprecated, use location instead.
    """

    operation_type: global___Operation.Type.ValueType = ...
    """The operation type."""

    status: global___Operation.Status.ValueType = ...
    """The current status of the operation."""

    detail: typing.Text = ...
    """Detailed operation progress, if available."""

    status_message: typing.Text = ...
    """Output only. If an error has occurred, a textual description of the error.
    Deprecated. Use field error instead.
    """

    self_link: typing.Text = ...
    """Server-defined URL for the resource."""

    target_link: typing.Text = ...
    """Server-defined URL for the target of the operation."""

    location: typing.Text = ...
    """[Output only] The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
    or
    [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available)
    in which the cluster resides.
    """

    start_time: typing.Text = ...
    """[Output only] The time the operation started, in
    [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    """

    end_time: typing.Text = ...
    """[Output only] The time the operation completed, in
    [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    """

    @property
    def progress(self) -> global___OperationProgress:
        """Output only. [Output only] Progress information for an operation."""
        pass
    @property
    def cluster_conditions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StatusCondition]:
        """Which conditions caused the current cluster state.
        Deprecated. Use field error instead.
        """
        pass
    @property
    def nodepool_conditions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StatusCondition]:
        """Which conditions caused the current node pool state.
        Deprecated. Use field error instead.
        """
        pass
    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """The error result of the operation in case of failure."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        zone : typing.Text = ...,
        operation_type : global___Operation.Type.ValueType = ...,
        status : global___Operation.Status.ValueType = ...,
        detail : typing.Text = ...,
        status_message : typing.Text = ...,
        self_link : typing.Text = ...,
        target_link : typing.Text = ...,
        location : typing.Text = ...,
        start_time : typing.Text = ...,
        end_time : typing.Text = ...,
        progress : typing.Optional[global___OperationProgress] = ...,
        cluster_conditions : typing.Optional[typing.Iterable[global___StatusCondition]] = ...,
        nodepool_conditions : typing.Optional[typing.Iterable[global___StatusCondition]] = ...,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","progress",b"progress"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_conditions",b"cluster_conditions","detail",b"detail","end_time",b"end_time","error",b"error","location",b"location","name",b"name","nodepool_conditions",b"nodepool_conditions","operation_type",b"operation_type","progress",b"progress","self_link",b"self_link","start_time",b"start_time","status",b"status","status_message",b"status_message","target_link",b"target_link","zone",b"zone"]) -> None: ...
global___Operation = Operation

class OperationProgress(google.protobuf.message.Message):
    """Information about operation (or operation stage) progress."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Metric(google.protobuf.message.Message):
        """Progress metric is (string, int|float|string) pair."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_FIELD_NUMBER: builtins.int
        INT_VALUE_FIELD_NUMBER: builtins.int
        DOUBLE_VALUE_FIELD_NUMBER: builtins.int
        STRING_VALUE_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """Required. Metric name, e.g., "nodes total", "percent done"."""

        int_value: builtins.int = ...
        """For metrics with integer value."""

        double_value: builtins.float = ...
        """For metrics with floating point value."""

        string_value: typing.Text = ...
        """For metrics with custom values (ratios, visual progress, etc.)."""

        def __init__(self,
            *,
            name : typing.Text = ...,
            int_value : builtins.int = ...,
            double_value : builtins.float = ...,
            string_value : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["double_value",b"double_value","int_value",b"int_value","string_value",b"string_value","value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["double_value",b"double_value","int_value",b"int_value","name",b"name","string_value",b"string_value","value",b"value"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["value",b"value"]) -> typing.Optional[typing_extensions.Literal["int_value","double_value","string_value"]]: ...

    NAME_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    METRICS_FIELD_NUMBER: builtins.int
    STAGES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """A non-parameterized string describing an operation stage.
    Unset for single-stage operations.
    """

    status: global___Operation.Status.ValueType = ...
    """Status of an operation stage.
    Unset for single-stage operations.
    """

    @property
    def metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OperationProgress.Metric]:
        """Progress metric bundle, for example:
          metrics: [{name: "nodes done",     int_value: 15},
                    {name: "nodes total",    int_value: 32}]
        or
          metrics: [{name: "progress",       double_value: 0.56},
                    {name: "progress scale", double_value: 1.0}]
        """
        pass
    @property
    def stages(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OperationProgress]:
        """Substages of an operation or a stage."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        status : global___Operation.Status.ValueType = ...,
        metrics : typing.Optional[typing.Iterable[global___OperationProgress.Metric]] = ...,
        stages : typing.Optional[typing.Iterable[global___OperationProgress]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metrics",b"metrics","name",b"name","stages",b"stages","status",b"status"]) -> None: ...
global___OperationProgress = OperationProgress

class CreateClusterRequest(google.protobuf.message.Message):
    """CreateClusterRequest creates a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the parent field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the parent
    field.
    """

    @property
    def cluster(self) -> global___Cluster:
        """Required. A [cluster
        resource](https://cloud.google.com/container-engine/reference/rest/v1beta1/projects.locations.clusters)
        """
        pass
    parent: typing.Text = ...
    """The parent (project and location) where the cluster will be created.
    Specified in the format `projects/*/locations/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster : typing.Optional[global___Cluster] = ...,
        parent : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cluster",b"cluster"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster",b"cluster","parent",b"parent","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___CreateClusterRequest = CreateClusterRequest

class GetClusterRequest(google.protobuf.message.Message):
    """GetClusterRequest gets the settings of a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to retrieve.
    This field has been deprecated and replaced by the name field.
    """

    name: typing.Text = ...
    """The name (project, location, cluster) of the cluster to retrieve.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___GetClusterRequest = GetClusterRequest

class UpdateClusterRequest(google.protobuf.message.Message):
    """UpdateClusterRequest updates the settings of a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    @property
    def update(self) -> global___ClusterUpdate:
        """Required. A description of the update."""
        pass
    name: typing.Text = ...
    """The name (project, location, cluster) of the cluster to update.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        update : typing.Optional[global___ClusterUpdate] = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update",b"update"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","name",b"name","project_id",b"project_id","update",b"update","zone",b"zone"]) -> None: ...
global___UpdateClusterRequest = UpdateClusterRequest

class UpdateNodePoolRequest(google.protobuf.message.Message):
    """SetNodePoolVersionRequest updates the version of a node pool."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NODE_POOL_ID_FIELD_NUMBER: builtins.int
    NODE_VERSION_FIELD_NUMBER: builtins.int
    IMAGE_TYPE_FIELD_NUMBER: builtins.int
    LOCATIONS_FIELD_NUMBER: builtins.int
    WORKLOAD_METADATA_CONFIG_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    UPGRADE_SETTINGS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    TAINTS_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LINUX_NODE_CONFIG_FIELD_NUMBER: builtins.int
    KUBELET_CONFIG_FIELD_NUMBER: builtins.int
    GCFS_CONFIG_FIELD_NUMBER: builtins.int
    GVNIC_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    node_pool_id: typing.Text = ...
    """Required. Deprecated. The name of the node pool to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    node_version: typing.Text = ...
    """Required. The Kubernetes version to change the nodes to (typically an
    upgrade).

    Users may specify either explicit versions offered by Kubernetes Engine or
    version aliases, which have the following behavior:

    - "latest": picks the highest valid Kubernetes version
    - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    - "1.X.Y-gke.N": picks an explicit Kubernetes version
    - "-": picks the Kubernetes master version
    """

    image_type: typing.Text = ...
    """Required. The desired image type for the node pool."""

    @property
    def locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The desired list of Google Compute Engine
        [zones](https://cloud.google.com/compute/docs/zones#available) in which the
        node pool's nodes should be located. Changing the locations for a node pool
        will result in nodes being either created or removed from the node pool,
        depending on whether locations are being added or removed.
        """
        pass
    @property
    def workload_metadata_config(self) -> global___WorkloadMetadataConfig:
        """The desired workload metadata config for the node pool."""
        pass
    name: typing.Text = ...
    """The name (project, location, cluster, node pool) of the node pool to
    update. Specified in the format
    `projects/*/locations/*/clusters/*/nodePools/*`.
    """

    @property
    def upgrade_settings(self) -> global___NodePool.UpgradeSettings:
        """Upgrade settings control disruption and speed of the upgrade."""
        pass
    @property
    def tags(self) -> global___NetworkTags:
        """The desired network tags to be applied to all nodes in the node pool.
        If this field is not present, the tags will not be changed. Otherwise,
        the existing network tags will be *replaced* with the provided tags.
        """
        pass
    @property
    def taints(self) -> global___NodeTaints:
        """The desired node taints to be applied to all nodes in the node pool.
        If this field is not present, the taints will not be changed. Otherwise,
        the existing node taints will be *replaced* with the provided taints.
        """
        pass
    @property
    def labels(self) -> global___NodeLabels:
        """The desired node labels to be applied to all nodes in the node pool.
        If this field is not present, the labels will not be changed. Otherwise,
        the existing node labels will be *replaced* with the provided labels.
        """
        pass
    @property
    def linux_node_config(self) -> global___LinuxNodeConfig:
        """Parameters that can be configured on Linux nodes."""
        pass
    @property
    def kubelet_config(self) -> global___NodeKubeletConfig:
        """Node kubelet configs."""
        pass
    @property
    def gcfs_config(self) -> global___GcfsConfig:
        """GCFS config."""
        pass
    @property
    def gvnic(self) -> global___VirtualNIC:
        """Enable or disable gvnic on the node pool."""
        pass
    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        node_pool_id : typing.Text = ...,
        node_version : typing.Text = ...,
        image_type : typing.Text = ...,
        locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        workload_metadata_config : typing.Optional[global___WorkloadMetadataConfig] = ...,
        name : typing.Text = ...,
        upgrade_settings : typing.Optional[global___NodePool.UpgradeSettings] = ...,
        tags : typing.Optional[global___NetworkTags] = ...,
        taints : typing.Optional[global___NodeTaints] = ...,
        labels : typing.Optional[global___NodeLabels] = ...,
        linux_node_config : typing.Optional[global___LinuxNodeConfig] = ...,
        kubelet_config : typing.Optional[global___NodeKubeletConfig] = ...,
        gcfs_config : typing.Optional[global___GcfsConfig] = ...,
        gvnic : typing.Optional[global___VirtualNIC] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["gcfs_config",b"gcfs_config","gvnic",b"gvnic","kubelet_config",b"kubelet_config","labels",b"labels","linux_node_config",b"linux_node_config","tags",b"tags","taints",b"taints","upgrade_settings",b"upgrade_settings","workload_metadata_config",b"workload_metadata_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","gcfs_config",b"gcfs_config","gvnic",b"gvnic","image_type",b"image_type","kubelet_config",b"kubelet_config","labels",b"labels","linux_node_config",b"linux_node_config","locations",b"locations","name",b"name","node_pool_id",b"node_pool_id","node_version",b"node_version","project_id",b"project_id","tags",b"tags","taints",b"taints","upgrade_settings",b"upgrade_settings","workload_metadata_config",b"workload_metadata_config","zone",b"zone"]) -> None: ...
global___UpdateNodePoolRequest = UpdateNodePoolRequest

class SetNodePoolAutoscalingRequest(google.protobuf.message.Message):
    """SetNodePoolAutoscalingRequest sets the autoscaler settings of a node pool."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NODE_POOL_ID_FIELD_NUMBER: builtins.int
    AUTOSCALING_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    node_pool_id: typing.Text = ...
    """Required. Deprecated. The name of the node pool to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    @property
    def autoscaling(self) -> global___NodePoolAutoscaling:
        """Required. Autoscaling configuration for the node pool."""
        pass
    name: typing.Text = ...
    """The name (project, location, cluster, node pool) of the node pool to set
    autoscaler settings. Specified in the format
    `projects/*/locations/*/clusters/*/nodePools/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        node_pool_id : typing.Text = ...,
        autoscaling : typing.Optional[global___NodePoolAutoscaling] = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["autoscaling",b"autoscaling"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["autoscaling",b"autoscaling","cluster_id",b"cluster_id","name",b"name","node_pool_id",b"node_pool_id","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___SetNodePoolAutoscalingRequest = SetNodePoolAutoscalingRequest

class SetLoggingServiceRequest(google.protobuf.message.Message):
    """SetLoggingServiceRequest sets the logging service of a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    LOGGING_SERVICE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    logging_service: typing.Text = ...
    """Required. The logging service the cluster should use to write logs.
    Currently available options:

    * `logging.googleapis.com/kubernetes` - The Cloud Logging
    service with a Kubernetes-native resource model
    * `logging.googleapis.com` - The legacy Cloud Logging service (no longer
      available as of GKE 1.15).
    * `none` - no logs will be exported from the cluster.

    If left as an empty string,`logging.googleapis.com/kubernetes` will be
    used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
    """

    name: typing.Text = ...
    """The name (project, location, cluster) of the cluster to set logging.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        logging_service : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","logging_service",b"logging_service","name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___SetLoggingServiceRequest = SetLoggingServiceRequest

class SetMonitoringServiceRequest(google.protobuf.message.Message):
    """SetMonitoringServiceRequest sets the monitoring service of a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    MONITORING_SERVICE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    monitoring_service: typing.Text = ...
    """Required. The monitoring service the cluster should use to write metrics.
    Currently available options:

    * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring
    service with a Kubernetes-native resource model
    * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no
      longer available as of GKE 1.15).
    * `none` - No metrics will be exported from the cluster.

    If left as an empty string,`monitoring.googleapis.com/kubernetes` will be
    used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
    """

    name: typing.Text = ...
    """The name (project, location, cluster) of the cluster to set monitoring.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        monitoring_service : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","monitoring_service",b"monitoring_service","name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___SetMonitoringServiceRequest = SetMonitoringServiceRequest

class SetAddonsConfigRequest(google.protobuf.message.Message):
    """SetAddonsRequest sets the addons associated with the cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    ADDONS_CONFIG_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    @property
    def addons_config(self) -> global___AddonsConfig:
        """Required. The desired configurations for the various addons available to run in the
        cluster.
        """
        pass
    name: typing.Text = ...
    """The name (project, location, cluster) of the cluster to set addons.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        addons_config : typing.Optional[global___AddonsConfig] = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["addons_config",b"addons_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["addons_config",b"addons_config","cluster_id",b"cluster_id","name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___SetAddonsConfigRequest = SetAddonsConfigRequest

class SetLocationsRequest(google.protobuf.message.Message):
    """SetLocationsRequest sets the locations of the cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    LOCATIONS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    @property
    def locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. The desired list of Google Compute Engine
        [zones](https://cloud.google.com/compute/docs/zones#available) in which the
        cluster's nodes should be located. Changing the locations a cluster is in
        will result in nodes being either created or removed from the cluster,
        depending on whether locations are being added or removed.

        This list must always include the cluster's primary zone.
        """
        pass
    name: typing.Text = ...
    """The name (project, location, cluster) of the cluster to set locations.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","locations",b"locations","name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___SetLocationsRequest = SetLocationsRequest

class UpdateMasterRequest(google.protobuf.message.Message):
    """UpdateMasterRequest updates the master of the cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    MASTER_VERSION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    master_version: typing.Text = ...
    """Required. The Kubernetes version to change the master to.

    Users may specify either explicit versions offered by
    Kubernetes Engine or version aliases, which have the following behavior:

    - "latest": picks the highest valid Kubernetes version
    - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    - "1.X.Y-gke.N": picks an explicit Kubernetes version
    - "-": picks the default Kubernetes version
    """

    name: typing.Text = ...
    """The name (project, location, cluster) of the cluster to update.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        master_version : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","master_version",b"master_version","name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___UpdateMasterRequest = UpdateMasterRequest

class SetMasterAuthRequest(google.protobuf.message.Message):
    """SetMasterAuthRequest updates the admin password of a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Action:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Action.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: SetMasterAuthRequest.Action.ValueType = ...  # 0
        """Operation is unknown and will error out."""

        SET_PASSWORD: SetMasterAuthRequest.Action.ValueType = ...  # 1
        """Set the password to a user generated value."""

        GENERATE_PASSWORD: SetMasterAuthRequest.Action.ValueType = ...  # 2
        """Generate a new password and set it to that."""

        SET_USERNAME: SetMasterAuthRequest.Action.ValueType = ...  # 3
        """Set the username.  If an empty username is provided, basic authentication
        is disabled for the cluster.  If a non-empty username is provided, basic
        authentication is enabled, with either a provided password or a generated
        one.
        """

    class Action(_Action, metaclass=_ActionEnumTypeWrapper):
        """Operation type: what type update to perform."""
        pass

    UNKNOWN: SetMasterAuthRequest.Action.ValueType = ...  # 0
    """Operation is unknown and will error out."""

    SET_PASSWORD: SetMasterAuthRequest.Action.ValueType = ...  # 1
    """Set the password to a user generated value."""

    GENERATE_PASSWORD: SetMasterAuthRequest.Action.ValueType = ...  # 2
    """Generate a new password and set it to that."""

    SET_USERNAME: SetMasterAuthRequest.Action.ValueType = ...  # 3
    """Set the username.  If an empty username is provided, basic authentication
    is disabled for the cluster.  If a non-empty username is provided, basic
    authentication is enabled, with either a provided password or a generated
    one.
    """


    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    UPDATE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to upgrade.
    This field has been deprecated and replaced by the name field.
    """

    action: global___SetMasterAuthRequest.Action.ValueType = ...
    """Required. The exact form of action to be taken on the master auth."""

    @property
    def update(self) -> global___MasterAuth:
        """Required. A description of the update."""
        pass
    name: typing.Text = ...
    """The name (project, location, cluster) of the cluster to set auth.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        action : global___SetMasterAuthRequest.Action.ValueType = ...,
        update : typing.Optional[global___MasterAuth] = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update",b"update"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","cluster_id",b"cluster_id","name",b"name","project_id",b"project_id","update",b"update","zone",b"zone"]) -> None: ...
global___SetMasterAuthRequest = SetMasterAuthRequest

class DeleteClusterRequest(google.protobuf.message.Message):
    """DeleteClusterRequest deletes a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to delete.
    This field has been deprecated and replaced by the name field.
    """

    name: typing.Text = ...
    """The name (project, location, cluster) of the cluster to delete.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___DeleteClusterRequest = DeleteClusterRequest

class ListClustersRequest(google.protobuf.message.Message):
    """ListClustersRequest lists clusters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the parent field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides, or "-" for all zones. This field has been deprecated and
    replaced by the parent field.
    """

    parent: typing.Text = ...
    """The parent (project and location) where the clusters will be listed.
    Specified in the format `projects/*/locations/*`.
    Location "-" matches all zones and all regions.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        parent : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___ListClustersRequest = ListClustersRequest

class ListClustersResponse(google.protobuf.message.Message):
    """ListClustersResponse is the result of ListClustersRequest."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLUSTERS_FIELD_NUMBER: builtins.int
    MISSING_ZONES_FIELD_NUMBER: builtins.int
    @property
    def clusters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Cluster]:
        """A list of clusters in the project in the specified zone, or
        across all ones.
        """
        pass
    @property
    def missing_zones(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If any zones are listed here, the list of clusters returned
        may be missing those zones.
        """
        pass
    def __init__(self,
        *,
        clusters : typing.Optional[typing.Iterable[global___Cluster]] = ...,
        missing_zones : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["clusters",b"clusters","missing_zones",b"missing_zones"]) -> None: ...
global___ListClustersResponse = ListClustersResponse

class GetOperationRequest(google.protobuf.message.Message):
    """GetOperationRequest gets a single operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    OPERATION_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    operation_id: typing.Text = ...
    """Required. Deprecated. The server-assigned `name` of the operation.
    This field has been deprecated and replaced by the name field.
    """

    name: typing.Text = ...
    """The name (project, location, operation id) of the operation to get.
    Specified in the format `projects/*/locations/*/operations/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        operation_id : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","operation_id",b"operation_id","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___GetOperationRequest = GetOperationRequest

class ListOperationsRequest(google.protobuf.message.Message):
    """ListOperationsRequest lists operations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the parent field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) to return
    operations for, or `-` for all zones. This field has been deprecated and
    replaced by the parent field.
    """

    parent: typing.Text = ...
    """The parent (project and location) where the operations will be listed.
    Specified in the format `projects/*/locations/*`.
    Location "-" matches all zones and all regions.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        parent : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___ListOperationsRequest = ListOperationsRequest

class CancelOperationRequest(google.protobuf.message.Message):
    """CancelOperationRequest cancels a single operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    OPERATION_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    operation resides. This field has been deprecated and replaced by the name
    field.
    """

    operation_id: typing.Text = ...
    """Required. Deprecated. The server-assigned `name` of the operation.
    This field has been deprecated and replaced by the name field.
    """

    name: typing.Text = ...
    """The name (project, location, operation id) of the operation to cancel.
    Specified in the format `projects/*/locations/*/operations/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        operation_id : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","operation_id",b"operation_id","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___CancelOperationRequest = CancelOperationRequest

class ListOperationsResponse(google.protobuf.message.Message):
    """ListOperationsResponse is the result of ListOperationsRequest."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATIONS_FIELD_NUMBER: builtins.int
    MISSING_ZONES_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operation]:
        """A list of operations in the project in the specified zone."""
        pass
    @property
    def missing_zones(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If any zones are listed here, the list of operations returned
        may be missing the operations from those zones.
        """
        pass
    def __init__(self,
        *,
        operations : typing.Optional[typing.Iterable[global___Operation]] = ...,
        missing_zones : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["missing_zones",b"missing_zones","operations",b"operations"]) -> None: ...
global___ListOperationsResponse = ListOperationsResponse

class GetServerConfigRequest(google.protobuf.message.Message):
    """Gets the current Kubernetes Engine service configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) to return
    operations for. This field has been deprecated and replaced by the name
    field.
    """

    name: typing.Text = ...
    """The name (project and location) of the server config to get,
    specified in the format `projects/*/locations/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___GetServerConfigRequest = GetServerConfigRequest

class ServerConfig(google.protobuf.message.Message):
    """Kubernetes Engine service configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ReleaseChannelConfig(google.protobuf.message.Message):
        """ReleaseChannelConfig exposes configuration for a release channel."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class AvailableVersion(google.protobuf.message.Message):
            """Deprecated."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VERSION_FIELD_NUMBER: builtins.int
            REASON_FIELD_NUMBER: builtins.int
            version: typing.Text = ...
            """Kubernetes version."""

            reason: typing.Text = ...
            """Reason for availability."""

            def __init__(self,
                *,
                version : typing.Text = ...,
                reason : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["reason",b"reason","version",b"version"]) -> None: ...

        CHANNEL_FIELD_NUMBER: builtins.int
        DEFAULT_VERSION_FIELD_NUMBER: builtins.int
        AVAILABLE_VERSIONS_FIELD_NUMBER: builtins.int
        VALID_VERSIONS_FIELD_NUMBER: builtins.int
        channel: global___ReleaseChannel.Channel.ValueType = ...
        """The release channel this configuration applies to."""

        default_version: typing.Text = ...
        """The default version for newly created clusters on the channel."""

        @property
        def available_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServerConfig.ReleaseChannelConfig.AvailableVersion]:
            """Deprecated.
            This field has been deprecated and replaced with the valid_versions
            field.
            """
            pass
        @property
        def valid_versions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """List of valid versions for the channel."""
            pass
        def __init__(self,
            *,
            channel : global___ReleaseChannel.Channel.ValueType = ...,
            default_version : typing.Text = ...,
            available_versions : typing.Optional[typing.Iterable[global___ServerConfig.ReleaseChannelConfig.AvailableVersion]] = ...,
            valid_versions : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["available_versions",b"available_versions","channel",b"channel","default_version",b"default_version","valid_versions",b"valid_versions"]) -> None: ...

    class WindowsVersionMapsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___WindowsVersions: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___WindowsVersions] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DEFAULT_CLUSTER_VERSION_FIELD_NUMBER: builtins.int
    VALID_NODE_VERSIONS_FIELD_NUMBER: builtins.int
    DEFAULT_IMAGE_TYPE_FIELD_NUMBER: builtins.int
    VALID_IMAGE_TYPES_FIELD_NUMBER: builtins.int
    VALID_MASTER_VERSIONS_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    WINDOWS_VERSION_MAPS_FIELD_NUMBER: builtins.int
    default_cluster_version: typing.Text = ...
    """Version of Kubernetes the service deploys by default."""

    @property
    def valid_node_versions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of valid node upgrade target versions, in descending order."""
        pass
    default_image_type: typing.Text = ...
    """Default image type."""

    @property
    def valid_image_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of valid image types."""
        pass
    @property
    def valid_master_versions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of valid master versions, in descending order."""
        pass
    @property
    def channels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServerConfig.ReleaseChannelConfig]:
        """List of release channel configurations."""
        pass
    @property
    def windows_version_maps(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___WindowsVersions]:
        """Maps of Kubernetes version and supported Windows server versions."""
        pass
    def __init__(self,
        *,
        default_cluster_version : typing.Text = ...,
        valid_node_versions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        default_image_type : typing.Text = ...,
        valid_image_types : typing.Optional[typing.Iterable[typing.Text]] = ...,
        valid_master_versions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        channels : typing.Optional[typing.Iterable[global___ServerConfig.ReleaseChannelConfig]] = ...,
        windows_version_maps : typing.Optional[typing.Mapping[typing.Text, global___WindowsVersions]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channels",b"channels","default_cluster_version",b"default_cluster_version","default_image_type",b"default_image_type","valid_image_types",b"valid_image_types","valid_master_versions",b"valid_master_versions","valid_node_versions",b"valid_node_versions","windows_version_maps",b"windows_version_maps"]) -> None: ...
global___ServerConfig = ServerConfig

class WindowsVersions(google.protobuf.message.Message):
    """Windows server versions."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class WindowsVersion(google.protobuf.message.Message):
        """Windows server version."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        IMAGE_TYPE_FIELD_NUMBER: builtins.int
        OS_VERSION_FIELD_NUMBER: builtins.int
        SUPPORT_END_DATE_FIELD_NUMBER: builtins.int
        image_type: typing.Text = ...
        """Windows server image type"""

        os_version: typing.Text = ...
        """Windows server build number"""

        @property
        def support_end_date(self) -> google.type.date_pb2.Date:
            """Mainstream support end date"""
            pass
        def __init__(self,
            *,
            image_type : typing.Text = ...,
            os_version : typing.Text = ...,
            support_end_date : typing.Optional[google.type.date_pb2.Date] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["support_end_date",b"support_end_date"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["image_type",b"image_type","os_version",b"os_version","support_end_date",b"support_end_date"]) -> None: ...

    WINDOWS_VERSIONS_FIELD_NUMBER: builtins.int
    @property
    def windows_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WindowsVersions.WindowsVersion]:
        """List of Windows server versions."""
        pass
    def __init__(self,
        *,
        windows_versions : typing.Optional[typing.Iterable[global___WindowsVersions.WindowsVersion]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["windows_versions",b"windows_versions"]) -> None: ...
global___WindowsVersions = WindowsVersions

class CreateNodePoolRequest(google.protobuf.message.Message):
    """CreateNodePoolRequest creates a node pool for a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NODE_POOL_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://developers.google.com/console/help/new/#projectnumber).
    This field has been deprecated and replaced by the parent field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the parent
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster.
    This field has been deprecated and replaced by the parent field.
    """

    @property
    def node_pool(self) -> global___NodePool:
        """Required. The node pool to create."""
        pass
    parent: typing.Text = ...
    """The parent (project, location, cluster id) where the node pool will be
    created. Specified in the format
    `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        node_pool : typing.Optional[global___NodePool] = ...,
        parent : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["node_pool",b"node_pool"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","node_pool",b"node_pool","parent",b"parent","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___CreateNodePoolRequest = CreateNodePoolRequest

class DeleteNodePoolRequest(google.protobuf.message.Message):
    """DeleteNodePoolRequest deletes a node pool for a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NODE_POOL_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://developers.google.com/console/help/new/#projectnumber).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster.
    This field has been deprecated and replaced by the name field.
    """

    node_pool_id: typing.Text = ...
    """Required. Deprecated. The name of the node pool to delete.
    This field has been deprecated and replaced by the name field.
    """

    name: typing.Text = ...
    """The name (project, location, cluster, node pool id) of the node pool to
    delete. Specified in the format
    `projects/*/locations/*/clusters/*/nodePools/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        node_pool_id : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","name",b"name","node_pool_id",b"node_pool_id","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___DeleteNodePoolRequest = DeleteNodePoolRequest

class ListNodePoolsRequest(google.protobuf.message.Message):
    """ListNodePoolsRequest lists the node pool(s) for a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://developers.google.com/console/help/new/#projectnumber).
    This field has been deprecated and replaced by the parent field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the parent
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster.
    This field has been deprecated and replaced by the parent field.
    """

    parent: typing.Text = ...
    """The parent (project, location, cluster id) where the node pools will be
    listed. Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        parent : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","parent",b"parent","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___ListNodePoolsRequest = ListNodePoolsRequest

class GetNodePoolRequest(google.protobuf.message.Message):
    """GetNodePoolRequest retrieves a node pool for a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NODE_POOL_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://developers.google.com/console/help/new/#projectnumber).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster.
    This field has been deprecated and replaced by the name field.
    """

    node_pool_id: typing.Text = ...
    """Required. Deprecated. The name of the node pool.
    This field has been deprecated and replaced by the name field.
    """

    name: typing.Text = ...
    """The name (project, location, cluster, node pool id) of the node pool to
    get. Specified in the format
    `projects/*/locations/*/clusters/*/nodePools/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        node_pool_id : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","name",b"name","node_pool_id",b"node_pool_id","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___GetNodePoolRequest = GetNodePoolRequest

class NodePool(google.protobuf.message.Message):
    """NodePool contains the name and configuration for a cluster's node pool.
    Node pools are a set of nodes (i.e. VM's), with a common configuration and
    specification, under the control of the cluster master. They may have a set
    of Kubernetes labels applied to them, which may be used to reference them
    during pod scheduling. They may also be resized up or down, to accommodate
    the workload.
    These upgrade settings control the level of parallelism and the level of
    disruption caused by an upgrade.

    maxUnavailable controls the number of nodes that can be simultaneously
    unavailable.

    maxSurge controls the number of additional nodes that can be added to the
    node pool temporarily for the time of the upgrade to increase the number of
    available nodes.

    (maxUnavailable + maxSurge) determines the level of parallelism (how many
    nodes are being upgraded at the same time).

    Note: upgrades inevitably introduce some disruption since workloads need to
    be moved from old nodes to new, upgraded ones. Even if maxUnavailable=0,
    this holds true. (Disruption stays within the limits of
    PodDisruptionBudget, if it is configured.)

    Consider a hypothetical node pool with 5 nodes having maxSurge=2,
    maxUnavailable=1. This means the upgrade process upgrades 3 nodes
    simultaneously. It creates 2 additional (upgraded) nodes, then it brings
    down 3 old (not yet upgraded) nodes at the same time. This ensures that
    there are always at least 4 nodes available.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATUS_UNSPECIFIED: NodePool.Status.ValueType = ...  # 0
        """Not set."""

        PROVISIONING: NodePool.Status.ValueType = ...  # 1
        """The PROVISIONING state indicates the node pool is being created."""

        RUNNING: NodePool.Status.ValueType = ...  # 2
        """The RUNNING state indicates the node pool has been created
        and is fully usable.
        """

        RUNNING_WITH_ERROR: NodePool.Status.ValueType = ...  # 3
        """The RUNNING_WITH_ERROR state indicates the node pool has been created
        and is partially usable. Some error state has occurred and some
        functionality may be impaired. Customer may need to reissue a request
        or trigger a new update.
        """

        RECONCILING: NodePool.Status.ValueType = ...  # 4
        """The RECONCILING state indicates that some work is actively being done on
        the node pool, such as upgrading node software. Details can
        be found in the `statusMessage` field.
        """

        STOPPING: NodePool.Status.ValueType = ...  # 5
        """The STOPPING state indicates the node pool is being deleted."""

        ERROR: NodePool.Status.ValueType = ...  # 6
        """The ERROR state indicates the node pool may be unusable. Details
        can be found in the `statusMessage` field.
        """

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """The current status of the node pool instance."""
        pass

    STATUS_UNSPECIFIED: NodePool.Status.ValueType = ...  # 0
    """Not set."""

    PROVISIONING: NodePool.Status.ValueType = ...  # 1
    """The PROVISIONING state indicates the node pool is being created."""

    RUNNING: NodePool.Status.ValueType = ...  # 2
    """The RUNNING state indicates the node pool has been created
    and is fully usable.
    """

    RUNNING_WITH_ERROR: NodePool.Status.ValueType = ...  # 3
    """The RUNNING_WITH_ERROR state indicates the node pool has been created
    and is partially usable. Some error state has occurred and some
    functionality may be impaired. Customer may need to reissue a request
    or trigger a new update.
    """

    RECONCILING: NodePool.Status.ValueType = ...  # 4
    """The RECONCILING state indicates that some work is actively being done on
    the node pool, such as upgrading node software. Details can
    be found in the `statusMessage` field.
    """

    STOPPING: NodePool.Status.ValueType = ...  # 5
    """The STOPPING state indicates the node pool is being deleted."""

    ERROR: NodePool.Status.ValueType = ...  # 6
    """The ERROR state indicates the node pool may be unusable. Details
    can be found in the `statusMessage` field.
    """


    class UpgradeSettings(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MAX_SURGE_FIELD_NUMBER: builtins.int
        MAX_UNAVAILABLE_FIELD_NUMBER: builtins.int
        max_surge: builtins.int = ...
        """The maximum number of nodes that can be created beyond the current size
        of the node pool during the upgrade process.
        """

        max_unavailable: builtins.int = ...
        """The maximum number of nodes that can be simultaneously unavailable during
        the upgrade process. A node is considered available if its status is
        Ready.
        """

        def __init__(self,
            *,
            max_surge : builtins.int = ...,
            max_unavailable : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["max_surge",b"max_surge","max_unavailable",b"max_unavailable"]) -> None: ...

    class PlacementPolicy(google.protobuf.message.Message):
        """PlacementPolicy defines the placement policy used by the node pool."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            TYPE_UNSPECIFIED: NodePool.PlacementPolicy.Type.ValueType = ...  # 0
            """TYPE_UNSPECIFIED specifies no requirements on nodes
            placement.
            """

            COMPACT: NodePool.PlacementPolicy.Type.ValueType = ...  # 1
            """COMPACT specifies node placement in the same availability domain to
            ensure low communication latency.
            """

        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            """Type defines the type of placement policy."""
            pass

        TYPE_UNSPECIFIED: NodePool.PlacementPolicy.Type.ValueType = ...  # 0
        """TYPE_UNSPECIFIED specifies no requirements on nodes
        placement.
        """

        COMPACT: NodePool.PlacementPolicy.Type.ValueType = ...  # 1
        """COMPACT specifies node placement in the same availability domain to
        ensure low communication latency.
        """


        TYPE_FIELD_NUMBER: builtins.int
        type: global___NodePool.PlacementPolicy.Type.ValueType = ...
        """The type of placement."""

        def __init__(self,
            *,
            type : global___NodePool.PlacementPolicy.Type.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    INITIAL_NODE_COUNT_FIELD_NUMBER: builtins.int
    LOCATIONS_FIELD_NUMBER: builtins.int
    NETWORK_CONFIG_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_URLS_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    AUTOSCALING_FIELD_NUMBER: builtins.int
    MANAGEMENT_FIELD_NUMBER: builtins.int
    MAX_PODS_CONSTRAINT_FIELD_NUMBER: builtins.int
    CONDITIONS_FIELD_NUMBER: builtins.int
    POD_IPV4_CIDR_SIZE_FIELD_NUMBER: builtins.int
    UPGRADE_SETTINGS_FIELD_NUMBER: builtins.int
    PLACEMENT_POLICY_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the node pool."""

    @property
    def config(self) -> global___NodeConfig:
        """The node configuration of the pool."""
        pass
    initial_node_count: builtins.int = ...
    """The initial node count for the pool. You must ensure that your
    Compute Engine [resource quota](https://cloud.google.com/compute/quotas)
    is sufficient for this number of instances. You must also have available
    firewall and routes quota.
    """

    @property
    def locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of Google Compute Engine
        [zones](https://cloud.google.com/compute/docs/zones#available) in which the
        NodePool's nodes should be located.

        If this value is unspecified during node pool creation, the
        [Cluster.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters#Cluster.FIELDS.locations)
        value will be used, instead.

        Warning: changing node pool locations will result in nodes being added
        and/or removed.
        """
        pass
    @property
    def network_config(self) -> global___NodeNetworkConfig:
        """Networking configuration for this NodePool. If specified, it overrides the
        cluster-level defaults.
        """
        pass
    self_link: typing.Text = ...
    """[Output only] Server-defined URL for the resource."""

    version: typing.Text = ...
    """The version of the Kubernetes of this node."""

    @property
    def instance_group_urls(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output only] The resource URLs of the [managed instance
        groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances)
        associated with this node pool.
        """
        pass
    status: global___NodePool.Status.ValueType = ...
    """[Output only] The status of the nodes in this pool instance."""

    status_message: typing.Text = ...
    """[Output only] Deprecated. Use conditions instead.
    Additional information about the current status of this
    node pool instance, if available.
    """

    @property
    def autoscaling(self) -> global___NodePoolAutoscaling:
        """Autoscaler configuration for this NodePool. Autoscaler is enabled
        only if a valid configuration is present.
        """
        pass
    @property
    def management(self) -> global___NodeManagement:
        """NodeManagement configuration for this NodePool."""
        pass
    @property
    def max_pods_constraint(self) -> global___MaxPodsConstraint:
        """The constraint on the maximum number of pods that can be run
        simultaneously on a node in the node pool.
        """
        pass
    @property
    def conditions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StatusCondition]:
        """Which conditions caused the current node pool state."""
        pass
    pod_ipv4_cidr_size: builtins.int = ...
    """[Output only] The pod CIDR block size per node in this node pool."""

    @property
    def upgrade_settings(self) -> global___NodePool.UpgradeSettings:
        """Upgrade settings control disruption and speed of the upgrade."""
        pass
    @property
    def placement_policy(self) -> global___NodePool.PlacementPolicy:
        """Specifies the node placement policy."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        config : typing.Optional[global___NodeConfig] = ...,
        initial_node_count : builtins.int = ...,
        locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        network_config : typing.Optional[global___NodeNetworkConfig] = ...,
        self_link : typing.Text = ...,
        version : typing.Text = ...,
        instance_group_urls : typing.Optional[typing.Iterable[typing.Text]] = ...,
        status : global___NodePool.Status.ValueType = ...,
        status_message : typing.Text = ...,
        autoscaling : typing.Optional[global___NodePoolAutoscaling] = ...,
        management : typing.Optional[global___NodeManagement] = ...,
        max_pods_constraint : typing.Optional[global___MaxPodsConstraint] = ...,
        conditions : typing.Optional[typing.Iterable[global___StatusCondition]] = ...,
        pod_ipv4_cidr_size : builtins.int = ...,
        upgrade_settings : typing.Optional[global___NodePool.UpgradeSettings] = ...,
        placement_policy : typing.Optional[global___NodePool.PlacementPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["autoscaling",b"autoscaling","config",b"config","management",b"management","max_pods_constraint",b"max_pods_constraint","network_config",b"network_config","placement_policy",b"placement_policy","upgrade_settings",b"upgrade_settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["autoscaling",b"autoscaling","conditions",b"conditions","config",b"config","initial_node_count",b"initial_node_count","instance_group_urls",b"instance_group_urls","locations",b"locations","management",b"management","max_pods_constraint",b"max_pods_constraint","name",b"name","network_config",b"network_config","placement_policy",b"placement_policy","pod_ipv4_cidr_size",b"pod_ipv4_cidr_size","self_link",b"self_link","status",b"status","status_message",b"status_message","upgrade_settings",b"upgrade_settings","version",b"version"]) -> None: ...
global___NodePool = NodePool

class NodeManagement(google.protobuf.message.Message):
    """NodeManagement defines the set of node management services turned on for the
    node pool.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTO_UPGRADE_FIELD_NUMBER: builtins.int
    AUTO_REPAIR_FIELD_NUMBER: builtins.int
    UPGRADE_OPTIONS_FIELD_NUMBER: builtins.int
    auto_upgrade: builtins.bool = ...
    """Whether the nodes will be automatically upgraded."""

    auto_repair: builtins.bool = ...
    """Whether the nodes will be automatically repaired."""

    @property
    def upgrade_options(self) -> global___AutoUpgradeOptions:
        """Specifies the Auto Upgrade knobs for the node pool."""
        pass
    def __init__(self,
        *,
        auto_upgrade : builtins.bool = ...,
        auto_repair : builtins.bool = ...,
        upgrade_options : typing.Optional[global___AutoUpgradeOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["upgrade_options",b"upgrade_options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auto_repair",b"auto_repair","auto_upgrade",b"auto_upgrade","upgrade_options",b"upgrade_options"]) -> None: ...
global___NodeManagement = NodeManagement

class AutoUpgradeOptions(google.protobuf.message.Message):
    """AutoUpgradeOptions defines the set of options for the user to control how
    the Auto Upgrades will proceed.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTO_UPGRADE_START_TIME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    auto_upgrade_start_time: typing.Text = ...
    """[Output only] This field is set when upgrades are about to commence
    with the approximate start time for the upgrades, in
    [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    """

    description: typing.Text = ...
    """[Output only] This field is set when upgrades are about to commence
    with the description of the upgrade.
    """

    def __init__(self,
        *,
        auto_upgrade_start_time : typing.Text = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["auto_upgrade_start_time",b"auto_upgrade_start_time","description",b"description"]) -> None: ...
global___AutoUpgradeOptions = AutoUpgradeOptions

class MaintenancePolicy(google.protobuf.message.Message):
    """MaintenancePolicy defines the maintenance policy to be used for the cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WINDOW_FIELD_NUMBER: builtins.int
    RESOURCE_VERSION_FIELD_NUMBER: builtins.int
    @property
    def window(self) -> global___MaintenanceWindow:
        """Specifies the maintenance window in which maintenance may be performed."""
        pass
    resource_version: typing.Text = ...
    """A hash identifying the version of this policy, so that updates to fields of
    the policy won't accidentally undo intermediate changes (and so that users
    of the API unaware of some fields won't accidentally remove other fields).
    Make a `get()` request to the cluster to get the current
    resource version and include it with requests to set the policy.
    """

    def __init__(self,
        *,
        window : typing.Optional[global___MaintenanceWindow] = ...,
        resource_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["window",b"window"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_version",b"resource_version","window",b"window"]) -> None: ...
global___MaintenancePolicy = MaintenancePolicy

class MaintenanceWindow(google.protobuf.message.Message):
    """MaintenanceWindow defines the maintenance window to be used for the cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MaintenanceExclusionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___TimeWindow: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___TimeWindow] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DAILY_MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    RECURRING_WINDOW_FIELD_NUMBER: builtins.int
    MAINTENANCE_EXCLUSIONS_FIELD_NUMBER: builtins.int
    @property
    def daily_maintenance_window(self) -> global___DailyMaintenanceWindow:
        """DailyMaintenanceWindow specifies a daily maintenance operation window."""
        pass
    @property
    def recurring_window(self) -> global___RecurringTimeWindow:
        """RecurringWindow specifies some number of recurring time periods for
        maintenance to occur. The time windows may be overlapping. If no
        maintenance windows are set, maintenance can occur at any time.
        """
        pass
    @property
    def maintenance_exclusions(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___TimeWindow]:
        """Exceptions to maintenance window. Non-emergency maintenance should not
        occur in these windows.
        """
        pass
    def __init__(self,
        *,
        daily_maintenance_window : typing.Optional[global___DailyMaintenanceWindow] = ...,
        recurring_window : typing.Optional[global___RecurringTimeWindow] = ...,
        maintenance_exclusions : typing.Optional[typing.Mapping[typing.Text, global___TimeWindow]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["daily_maintenance_window",b"daily_maintenance_window","policy",b"policy","recurring_window",b"recurring_window"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["daily_maintenance_window",b"daily_maintenance_window","maintenance_exclusions",b"maintenance_exclusions","policy",b"policy","recurring_window",b"recurring_window"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["policy",b"policy"]) -> typing.Optional[typing_extensions.Literal["daily_maintenance_window","recurring_window"]]: ...
global___MaintenanceWindow = MaintenanceWindow

class TimeWindow(google.protobuf.message.Message):
    """Represents an arbitrary window of time."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MAINTENANCE_EXCLUSION_OPTIONS_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    @property
    def maintenance_exclusion_options(self) -> global___MaintenanceExclusionOptions:
        """MaintenanceExclusionOptions provides maintenance exclusion related
        options.
        """
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time that the window first starts."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time that the window ends. The end time should take place after the
        start time.
        """
        pass
    def __init__(self,
        *,
        maintenance_exclusion_options : typing.Optional[global___MaintenanceExclusionOptions] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","maintenance_exclusion_options",b"maintenance_exclusion_options","options",b"options","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time",b"end_time","maintenance_exclusion_options",b"maintenance_exclusion_options","options",b"options","start_time",b"start_time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["options",b"options"]) -> typing.Optional[typing_extensions.Literal["maintenance_exclusion_options"]]: ...
global___TimeWindow = TimeWindow

class MaintenanceExclusionOptions(google.protobuf.message.Message):
    """Represents the Maintenance exclusion option."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Scope:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ScopeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Scope.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        NO_UPGRADES: MaintenanceExclusionOptions.Scope.ValueType = ...  # 0
        """NO_UPGRADES excludes all upgrades, including patch upgrades and minor
        upgrades across control planes and nodes. This is the default exclusion
        behavior.
        """

        NO_MINOR_UPGRADES: MaintenanceExclusionOptions.Scope.ValueType = ...  # 1
        """NO_MINOR_UPGRADES excludes all minor upgrades for the cluster, only
        patches are allowed.
        """

        NO_MINOR_OR_NODE_UPGRADES: MaintenanceExclusionOptions.Scope.ValueType = ...  # 2
        """NO_MINOR_OR_NODE_UPGRADES excludes all minor upgrades for the cluster,
        and also exclude all node pool upgrades. Only control
        plane patches are allowed.
        """

    class Scope(_Scope, metaclass=_ScopeEnumTypeWrapper):
        """Scope of exclusion."""
        pass

    NO_UPGRADES: MaintenanceExclusionOptions.Scope.ValueType = ...  # 0
    """NO_UPGRADES excludes all upgrades, including patch upgrades and minor
    upgrades across control planes and nodes. This is the default exclusion
    behavior.
    """

    NO_MINOR_UPGRADES: MaintenanceExclusionOptions.Scope.ValueType = ...  # 1
    """NO_MINOR_UPGRADES excludes all minor upgrades for the cluster, only
    patches are allowed.
    """

    NO_MINOR_OR_NODE_UPGRADES: MaintenanceExclusionOptions.Scope.ValueType = ...  # 2
    """NO_MINOR_OR_NODE_UPGRADES excludes all minor upgrades for the cluster,
    and also exclude all node pool upgrades. Only control
    plane patches are allowed.
    """


    SCOPE_FIELD_NUMBER: builtins.int
    scope: global___MaintenanceExclusionOptions.Scope.ValueType = ...
    """Scope specifies the upgrade scope which upgrades are blocked by the
    exclusion.
    """

    def __init__(self,
        *,
        scope : global___MaintenanceExclusionOptions.Scope.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["scope",b"scope"]) -> None: ...
global___MaintenanceExclusionOptions = MaintenanceExclusionOptions

class RecurringTimeWindow(google.protobuf.message.Message):
    """Represents an arbitrary window of time that recurs."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WINDOW_FIELD_NUMBER: builtins.int
    RECURRENCE_FIELD_NUMBER: builtins.int
    @property
    def window(self) -> global___TimeWindow:
        """The window of the first recurrence."""
        pass
    recurrence: typing.Text = ...
    """An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
    this window reccurs. They go on for the span of time between the start and
    end time.

    For example, to have something repeat every weekday, you'd use:
    `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR`

    To repeat some window daily (equivalent to the DailyMaintenanceWindow):
    `FREQ=DAILY`

    For the first weekend of every month:
    `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU`

    This specifies how frequently the window starts. Eg, if you wanted to have
    a 9-5 UTC-4 window every weekday, you'd use something like:
    ```
    start time = 2019-01-01T09:00:00-0400
    end time = 2019-01-01T17:00:00-0400
    recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
    ```

    Windows can span multiple days. Eg, to make the window encompass every
    weekend from midnight Saturday till the last minute of Sunday UTC:
    ```
    start time = 2019-01-05T00:00:00Z
    end time = 2019-01-07T23:59:00Z
    recurrence = FREQ=WEEKLY;BYDAY=SA
    ```

    Note the start and end time's specific dates are largely arbitrary except
    to specify duration of the window and when it first starts.
    The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.
    """

    def __init__(self,
        *,
        window : typing.Optional[global___TimeWindow] = ...,
        recurrence : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["window",b"window"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["recurrence",b"recurrence","window",b"window"]) -> None: ...
global___RecurringTimeWindow = RecurringTimeWindow

class DailyMaintenanceWindow(google.protobuf.message.Message):
    """Time window specified for daily maintenance operations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_TIME_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    start_time: typing.Text = ...
    """Time within the maintenance window to start the maintenance operations.
    It must be in format "HH:MM", where HH : [00-23] and MM : [00-59] GMT.
    """

    duration: typing.Text = ...
    """[Output only] Duration of the time window, automatically chosen to be
    smallest possible in the given scenario.
    """

    def __init__(self,
        *,
        start_time : typing.Text = ...,
        duration : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["duration",b"duration","start_time",b"start_time"]) -> None: ...
global___DailyMaintenanceWindow = DailyMaintenanceWindow

class SetNodePoolManagementRequest(google.protobuf.message.Message):
    """SetNodePoolManagementRequest sets the node management properties of a node
    pool.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NODE_POOL_ID_FIELD_NUMBER: builtins.int
    MANAGEMENT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to update.
    This field has been deprecated and replaced by the name field.
    """

    node_pool_id: typing.Text = ...
    """Required. Deprecated. The name of the node pool to update.
    This field has been deprecated and replaced by the name field.
    """

    @property
    def management(self) -> global___NodeManagement:
        """Required. NodeManagement configuration for the node pool."""
        pass
    name: typing.Text = ...
    """The name (project, location, cluster, node pool id) of the node pool to set
    management properties. Specified in the format
    `projects/*/locations/*/clusters/*/nodePools/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        node_pool_id : typing.Text = ...,
        management : typing.Optional[global___NodeManagement] = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["management",b"management"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","management",b"management","name",b"name","node_pool_id",b"node_pool_id","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___SetNodePoolManagementRequest = SetNodePoolManagementRequest

class SetNodePoolSizeRequest(google.protobuf.message.Message):
    """SetNodePoolSizeRequest sets the size of a node pool."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NODE_POOL_ID_FIELD_NUMBER: builtins.int
    NODE_COUNT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to update.
    This field has been deprecated and replaced by the name field.
    """

    node_pool_id: typing.Text = ...
    """Required. Deprecated. The name of the node pool to update.
    This field has been deprecated and replaced by the name field.
    """

    node_count: builtins.int = ...
    """Required. The desired node count for the pool."""

    name: typing.Text = ...
    """The name (project, location, cluster, node pool id) of the node pool to set
    size.
    Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        node_pool_id : typing.Text = ...,
        node_count : builtins.int = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","name",b"name","node_count",b"node_count","node_pool_id",b"node_pool_id","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___SetNodePoolSizeRequest = SetNodePoolSizeRequest

class RollbackNodePoolUpgradeRequest(google.protobuf.message.Message):
    """RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed
    NodePool upgrade. This will be an no-op if the last upgrade successfully
    completed.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NODE_POOL_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to rollback.
    This field has been deprecated and replaced by the name field.
    """

    node_pool_id: typing.Text = ...
    """Required. Deprecated. The name of the node pool to rollback.
    This field has been deprecated and replaced by the name field.
    """

    name: typing.Text = ...
    """The name (project, location, cluster, node pool id) of the node poll to
    rollback upgrade.
    Specified in the format `projects/*/locations/*/clusters/*/nodePools/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        node_pool_id : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","name",b"name","node_pool_id",b"node_pool_id","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___RollbackNodePoolUpgradeRequest = RollbackNodePoolUpgradeRequest

class ListNodePoolsResponse(google.protobuf.message.Message):
    """ListNodePoolsResponse is the result of ListNodePoolsRequest."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_POOLS_FIELD_NUMBER: builtins.int
    @property
    def node_pools(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodePool]:
        """A list of node pools for a cluster."""
        pass
    def __init__(self,
        *,
        node_pools : typing.Optional[typing.Iterable[global___NodePool]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["node_pools",b"node_pools"]) -> None: ...
global___ListNodePoolsResponse = ListNodePoolsResponse

class ClusterAutoscaling(google.protobuf.message.Message):
    """ClusterAutoscaling contains global, per-cluster information
    required by Cluster Autoscaler to automatically adjust
    the size of the cluster and create/delete
    node pools based on the current needs.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AutoscalingProfile:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AutoscalingProfileEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AutoscalingProfile.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PROFILE_UNSPECIFIED: ClusterAutoscaling.AutoscalingProfile.ValueType = ...  # 0
        """No change to autoscaling configuration."""

        OPTIMIZE_UTILIZATION: ClusterAutoscaling.AutoscalingProfile.ValueType = ...  # 1
        """Prioritize optimizing utilization of resources."""

        BALANCED: ClusterAutoscaling.AutoscalingProfile.ValueType = ...  # 2
        """Use default (balanced) autoscaling configuration."""

    class AutoscalingProfile(_AutoscalingProfile, metaclass=_AutoscalingProfileEnumTypeWrapper):
        """Defines possible options for autoscaling_profile field."""
        pass

    PROFILE_UNSPECIFIED: ClusterAutoscaling.AutoscalingProfile.ValueType = ...  # 0
    """No change to autoscaling configuration."""

    OPTIMIZE_UTILIZATION: ClusterAutoscaling.AutoscalingProfile.ValueType = ...  # 1
    """Prioritize optimizing utilization of resources."""

    BALANCED: ClusterAutoscaling.AutoscalingProfile.ValueType = ...  # 2
    """Use default (balanced) autoscaling configuration."""


    ENABLE_NODE_AUTOPROVISIONING_FIELD_NUMBER: builtins.int
    RESOURCE_LIMITS_FIELD_NUMBER: builtins.int
    AUTOSCALING_PROFILE_FIELD_NUMBER: builtins.int
    AUTOPROVISIONING_NODE_POOL_DEFAULTS_FIELD_NUMBER: builtins.int
    AUTOPROVISIONING_LOCATIONS_FIELD_NUMBER: builtins.int
    enable_node_autoprovisioning: builtins.bool = ...
    """Enables automatic node pool creation and deletion."""

    @property
    def resource_limits(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourceLimit]:
        """Contains global constraints regarding minimum and maximum
        amount of resources in the cluster.
        """
        pass
    autoscaling_profile: global___ClusterAutoscaling.AutoscalingProfile.ValueType = ...
    """Defines autoscaling behaviour."""

    @property
    def autoprovisioning_node_pool_defaults(self) -> global___AutoprovisioningNodePoolDefaults:
        """AutoprovisioningNodePoolDefaults contains defaults for a node pool
        created by NAP.
        """
        pass
    @property
    def autoprovisioning_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of Google Compute Engine
        [zones](https://cloud.google.com/compute/docs/zones#available) in which the
        NodePool's nodes can be created by NAP.
        """
        pass
    def __init__(self,
        *,
        enable_node_autoprovisioning : builtins.bool = ...,
        resource_limits : typing.Optional[typing.Iterable[global___ResourceLimit]] = ...,
        autoscaling_profile : global___ClusterAutoscaling.AutoscalingProfile.ValueType = ...,
        autoprovisioning_node_pool_defaults : typing.Optional[global___AutoprovisioningNodePoolDefaults] = ...,
        autoprovisioning_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["autoprovisioning_node_pool_defaults",b"autoprovisioning_node_pool_defaults"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["autoprovisioning_locations",b"autoprovisioning_locations","autoprovisioning_node_pool_defaults",b"autoprovisioning_node_pool_defaults","autoscaling_profile",b"autoscaling_profile","enable_node_autoprovisioning",b"enable_node_autoprovisioning","resource_limits",b"resource_limits"]) -> None: ...
global___ClusterAutoscaling = ClusterAutoscaling

class AutoprovisioningNodePoolDefaults(google.protobuf.message.Message):
    """AutoprovisioningNodePoolDefaults contains defaults for a node pool created
    by NAP.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OAUTH_SCOPES_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    UPGRADE_SETTINGS_FIELD_NUMBER: builtins.int
    MANAGEMENT_FIELD_NUMBER: builtins.int
    MIN_CPU_PLATFORM_FIELD_NUMBER: builtins.int
    DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    DISK_TYPE_FIELD_NUMBER: builtins.int
    SHIELDED_INSTANCE_CONFIG_FIELD_NUMBER: builtins.int
    BOOT_DISK_KMS_KEY_FIELD_NUMBER: builtins.int
    IMAGE_TYPE_FIELD_NUMBER: builtins.int
    @property
    def oauth_scopes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The set of Google API scopes to be made available on all of the
        node VMs under the "default" service account.

        The following scopes are recommended, but not required, and by default are
        not included:

        * `https://www.googleapis.com/auth/compute` is required for mounting
        persistent storage on your nodes.
        * `https://www.googleapis.com/auth/devstorage.read_only` is required for
        communicating with **gcr.io**
        (the [Google Container
        Registry](https://cloud.google.com/container-registry/)).

        If unspecified, no scopes are added, unless Cloud Logging or Cloud
        Monitoring are enabled, in which case their required scopes will be added.
        """
        pass
    service_account: typing.Text = ...
    """The Google Cloud Platform Service Account to be used by the node VMs.
    Specify the email address of the Service Account; otherwise, if no Service
    Account is specified, the "default" service account is used.
    """

    @property
    def upgrade_settings(self) -> global___NodePool.UpgradeSettings:
        """Upgrade settings control disruption and speed of the upgrade."""
        pass
    @property
    def management(self) -> global___NodeManagement:
        """NodeManagement configuration for this NodePool."""
        pass
    min_cpu_platform: typing.Text = ...
    """Minimum CPU platform to be used by this instance. The instance may be
    scheduled on the specified or newer CPU platform. Applicable values are the
    friendly names of CPU platforms, such as
    `minCpuPlatform: "Intel Haswell"` or
    `minCpuPlatform: "Intel Sandy Bridge"`. For more
    information, read [how to specify min CPU
    platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
    To unset the min cpu platform field pass "automatic"
    as field value.
    """

    disk_size_gb: builtins.int = ...
    """Size of the disk attached to each node, specified in GB.
    The smallest allowed disk size is 10GB.

    If unspecified, the default disk size is 100GB.
    """

    disk_type: typing.Text = ...
    """Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or
    'pd-balanced')

    If unspecified, the default disk type is 'pd-standard'
    """

    @property
    def shielded_instance_config(self) -> global___ShieldedInstanceConfig:
        """Shielded Instance options."""
        pass
    boot_disk_kms_key: typing.Text = ...
    """
    The Customer Managed Encryption Key used to encrypt the boot disk attached
    to each node in the node pool. This should be of the form
    projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME].
    For more information about protecting resources with Cloud KMS Keys please
    see:
    https://cloud.google.com/compute/docs/disks/customer-managed-encryption
    """

    image_type: typing.Text = ...
    """The image type to use for NAP created node."""

    def __init__(self,
        *,
        oauth_scopes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        service_account : typing.Text = ...,
        upgrade_settings : typing.Optional[global___NodePool.UpgradeSettings] = ...,
        management : typing.Optional[global___NodeManagement] = ...,
        min_cpu_platform : typing.Text = ...,
        disk_size_gb : builtins.int = ...,
        disk_type : typing.Text = ...,
        shielded_instance_config : typing.Optional[global___ShieldedInstanceConfig] = ...,
        boot_disk_kms_key : typing.Text = ...,
        image_type : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["management",b"management","shielded_instance_config",b"shielded_instance_config","upgrade_settings",b"upgrade_settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["boot_disk_kms_key",b"boot_disk_kms_key","disk_size_gb",b"disk_size_gb","disk_type",b"disk_type","image_type",b"image_type","management",b"management","min_cpu_platform",b"min_cpu_platform","oauth_scopes",b"oauth_scopes","service_account",b"service_account","shielded_instance_config",b"shielded_instance_config","upgrade_settings",b"upgrade_settings"]) -> None: ...
global___AutoprovisioningNodePoolDefaults = AutoprovisioningNodePoolDefaults

class ResourceLimit(google.protobuf.message.Message):
    """Contains information about amount of some resource in the cluster.
    For memory, value should be in GB.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_TYPE_FIELD_NUMBER: builtins.int
    MINIMUM_FIELD_NUMBER: builtins.int
    MAXIMUM_FIELD_NUMBER: builtins.int
    resource_type: typing.Text = ...
    """Resource name "cpu", "memory" or gpu-specific string."""

    minimum: builtins.int = ...
    """Minimum amount of the resource in the cluster."""

    maximum: builtins.int = ...
    """Maximum amount of the resource in the cluster."""

    def __init__(self,
        *,
        resource_type : typing.Text = ...,
        minimum : builtins.int = ...,
        maximum : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["maximum",b"maximum","minimum",b"minimum","resource_type",b"resource_type"]) -> None: ...
global___ResourceLimit = ResourceLimit

class NodePoolAutoscaling(google.protobuf.message.Message):
    """NodePoolAutoscaling contains information required by cluster autoscaler to
    adjust the size of the node pool to the current cluster usage.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    MIN_NODE_COUNT_FIELD_NUMBER: builtins.int
    MAX_NODE_COUNT_FIELD_NUMBER: builtins.int
    AUTOPROVISIONED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Is autoscaling enabled for this node pool."""

    min_node_count: builtins.int = ...
    """Minimum number of nodes for one location in the NodePool. Must be >= 1 and
    <= max_node_count.
    """

    max_node_count: builtins.int = ...
    """Maximum number of nodes for one location in the NodePool. Must be >=
    min_node_count. There has to be enough quota to scale up the cluster.
    """

    autoprovisioned: builtins.bool = ...
    """Can this node pool be deleted automatically."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        min_node_count : builtins.int = ...,
        max_node_count : builtins.int = ...,
        autoprovisioned : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["autoprovisioned",b"autoprovisioned","enabled",b"enabled","max_node_count",b"max_node_count","min_node_count",b"min_node_count"]) -> None: ...
global___NodePoolAutoscaling = NodePoolAutoscaling

class SetLabelsRequest(google.protobuf.message.Message):
    """SetLabelsRequest sets the Google Cloud Platform labels on a Google Container
    Engine cluster, which will in turn set them for Google Compute Engine
    resources used by that cluster
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ResourceLabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    RESOURCE_LABELS_FIELD_NUMBER: builtins.int
    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://developers.google.com/console/help/new/#projectnumber).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster.
    This field has been deprecated and replaced by the name field.
    """

    @property
    def resource_labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Required. The labels to set for that cluster."""
        pass
    label_fingerprint: typing.Text = ...
    """Required. The fingerprint of the previous set of labels for this resource,
    used to detect conflicts. The fingerprint is initially generated by
    Kubernetes Engine and changes after every request to modify or update
    labels. You must always provide an up-to-date fingerprint hash when
    updating or changing labels. Make a `get()` request to the
    resource to get the latest fingerprint.
    """

    name: typing.Text = ...
    """The name (project, location, cluster id) of the cluster to set labels.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        resource_labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        label_fingerprint : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","label_fingerprint",b"label_fingerprint","name",b"name","project_id",b"project_id","resource_labels",b"resource_labels","zone",b"zone"]) -> None: ...
global___SetLabelsRequest = SetLabelsRequest

class SetLegacyAbacRequest(google.protobuf.message.Message):
    """SetLegacyAbacRequest enables or disables the ABAC authorization mechanism for
    a cluster.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster to update.
    This field has been deprecated and replaced by the name field.
    """

    enabled: builtins.bool = ...
    """Required. Whether ABAC authorization will be enabled in the cluster."""

    name: typing.Text = ...
    """The name (project, location, cluster id) of the cluster to set legacy abac.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        enabled : builtins.bool = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","enabled",b"enabled","name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___SetLegacyAbacRequest = SetLegacyAbacRequest

class StartIPRotationRequest(google.protobuf.message.Message):
    """StartIPRotationRequest creates a new IP for the cluster and then performs
    a node upgrade on each node pool to point to the new IP.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    ROTATE_CREDENTIALS_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://developers.google.com/console/help/new/#projectnumber).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster.
    This field has been deprecated and replaced by the name field.
    """

    name: typing.Text = ...
    """The name (project, location, cluster id) of the cluster to start IP
    rotation. Specified in the format `projects/*/locations/*/clusters/*`.
    """

    rotate_credentials: builtins.bool = ...
    """Whether to rotate credentials during IP rotation."""

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        name : typing.Text = ...,
        rotate_credentials : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","name",b"name","project_id",b"project_id","rotate_credentials",b"rotate_credentials","zone",b"zone"]) -> None: ...
global___StartIPRotationRequest = StartIPRotationRequest

class CompleteIPRotationRequest(google.protobuf.message.Message):
    """CompleteIPRotationRequest moves the cluster master back into single-IP mode."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://developers.google.com/console/help/new/#projectnumber).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster.
    This field has been deprecated and replaced by the name field.
    """

    name: typing.Text = ...
    """The name (project, location, cluster id) of the cluster to complete IP
    rotation. Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___CompleteIPRotationRequest = CompleteIPRotationRequest

class AcceleratorConfig(google.protobuf.message.Message):
    """AcceleratorConfig represents a Hardware Accelerator request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCELERATOR_COUNT_FIELD_NUMBER: builtins.int
    ACCELERATOR_TYPE_FIELD_NUMBER: builtins.int
    GPU_PARTITION_SIZE_FIELD_NUMBER: builtins.int
    accelerator_count: builtins.int = ...
    """The number of the accelerator cards exposed to an instance."""

    accelerator_type: typing.Text = ...
    """The accelerator type resource name. List of supported accelerators
    [here](https://cloud.google.com/compute/docs/gpus)
    """

    gpu_partition_size: typing.Text = ...
    """Size of partitions to create on the GPU. Valid values are described in the
    NVIDIA [mig user
    guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
    """

    def __init__(self,
        *,
        accelerator_count : builtins.int = ...,
        accelerator_type : typing.Text = ...,
        gpu_partition_size : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accelerator_count",b"accelerator_count","accelerator_type",b"accelerator_type","gpu_partition_size",b"gpu_partition_size"]) -> None: ...
global___AcceleratorConfig = AcceleratorConfig

class ManagedPrometheusConfig(google.protobuf.message.Message):
    """ManagedPrometheusConfig defines the configuration for
    Google Cloud Managed Service for Prometheus.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Enable Managed Collection."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___ManagedPrometheusConfig = ManagedPrometheusConfig

class WorkloadMetadataConfig(google.protobuf.message.Message):
    """WorkloadMetadataConfig defines the metadata configuration to expose to
    workloads on the node pool.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _NodeMetadata:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NodeMetadataEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NodeMetadata.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: WorkloadMetadataConfig.NodeMetadata.ValueType = ...  # 0
        """Not set."""

        SECURE: WorkloadMetadataConfig.NodeMetadata.ValueType = ...  # 1
        """Prevent workloads not in hostNetwork from accessing certain VM metadata,
        specifically kube-env, which contains Kubelet credentials, and the
        instance identity token.

        Metadata concealment is a temporary security solution available while the
        bootstrapping process for cluster nodes is being redesigned with
        significant security improvements.  This feature is scheduled to be
        deprecated in the future and later removed.
        """

        EXPOSE: WorkloadMetadataConfig.NodeMetadata.ValueType = ...  # 2
        """Expose all VM metadata to pods."""

        GKE_METADATA_SERVER: WorkloadMetadataConfig.NodeMetadata.ValueType = ...  # 3
        """Run the GKE Metadata Server on this node. The GKE Metadata Server exposes
        a metadata API to workloads that is compatible with the V1 Compute
        Metadata APIs exposed by the Compute Engine and App Engine Metadata
        Servers. This feature can only be enabled if Workload Identity is enabled
        at the cluster level.
        """

    class NodeMetadata(_NodeMetadata, metaclass=_NodeMetadataEnumTypeWrapper):
        """NodeMetadata is the configuration for if and how to expose the node
        metadata to the workload running on the node.
        """
        pass

    UNSPECIFIED: WorkloadMetadataConfig.NodeMetadata.ValueType = ...  # 0
    """Not set."""

    SECURE: WorkloadMetadataConfig.NodeMetadata.ValueType = ...  # 1
    """Prevent workloads not in hostNetwork from accessing certain VM metadata,
    specifically kube-env, which contains Kubelet credentials, and the
    instance identity token.

    Metadata concealment is a temporary security solution available while the
    bootstrapping process for cluster nodes is being redesigned with
    significant security improvements.  This feature is scheduled to be
    deprecated in the future and later removed.
    """

    EXPOSE: WorkloadMetadataConfig.NodeMetadata.ValueType = ...  # 2
    """Expose all VM metadata to pods."""

    GKE_METADATA_SERVER: WorkloadMetadataConfig.NodeMetadata.ValueType = ...  # 3
    """Run the GKE Metadata Server on this node. The GKE Metadata Server exposes
    a metadata API to workloads that is compatible with the V1 Compute
    Metadata APIs exposed by the Compute Engine and App Engine Metadata
    Servers. This feature can only be enabled if Workload Identity is enabled
    at the cluster level.
    """


    class _Mode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        MODE_UNSPECIFIED: WorkloadMetadataConfig.Mode.ValueType = ...  # 0
        """Not set."""

        GCE_METADATA: WorkloadMetadataConfig.Mode.ValueType = ...  # 1
        """Expose all Compute Engine metadata to pods."""

        GKE_METADATA: WorkloadMetadataConfig.Mode.ValueType = ...  # 2
        """Run the GKE Metadata Server on this node. The GKE Metadata Server exposes
        a metadata API to workloads that is compatible with the V1 Compute
        Metadata APIs exposed by the Compute Engine and App Engine Metadata
        Servers. This feature can only be enabled if Workload Identity is enabled
        at the cluster level.
        """

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper):
        """Mode is the configuration for how to expose metadata to workloads running
        on the node.
        """
        pass

    MODE_UNSPECIFIED: WorkloadMetadataConfig.Mode.ValueType = ...  # 0
    """Not set."""

    GCE_METADATA: WorkloadMetadataConfig.Mode.ValueType = ...  # 1
    """Expose all Compute Engine metadata to pods."""

    GKE_METADATA: WorkloadMetadataConfig.Mode.ValueType = ...  # 2
    """Run the GKE Metadata Server on this node. The GKE Metadata Server exposes
    a metadata API to workloads that is compatible with the V1 Compute
    Metadata APIs exposed by the Compute Engine and App Engine Metadata
    Servers. This feature can only be enabled if Workload Identity is enabled
    at the cluster level.
    """


    NODE_METADATA_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    node_metadata: global___WorkloadMetadataConfig.NodeMetadata.ValueType = ...
    """NodeMetadata is the configuration for how to expose metadata to the
    workloads running on the node.
    """

    mode: global___WorkloadMetadataConfig.Mode.ValueType = ...
    """Mode is the configuration for how to expose metadata to workloads running
    on the node pool.
    """

    def __init__(self,
        *,
        node_metadata : global___WorkloadMetadataConfig.NodeMetadata.ValueType = ...,
        mode : global___WorkloadMetadataConfig.Mode.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["mode",b"mode","node_metadata",b"node_metadata"]) -> None: ...
global___WorkloadMetadataConfig = WorkloadMetadataConfig

class SetNetworkPolicyRequest(google.protobuf.message.Message):
    """SetNetworkPolicyRequest enables/disables network policy for a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    NETWORK_POLICY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. Deprecated. The Google Developers Console [project ID or project
    number](https://developers.google.com/console/help/new/#projectnumber).
    This field has been deprecated and replaced by the name field.
    """

    zone: typing.Text = ...
    """Required. Deprecated. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides. This field has been deprecated and replaced by the name
    field.
    """

    cluster_id: typing.Text = ...
    """Required. Deprecated. The name of the cluster.
    This field has been deprecated and replaced by the name field.
    """

    @property
    def network_policy(self) -> global___NetworkPolicy:
        """Required. Configuration options for the NetworkPolicy feature."""
        pass
    name: typing.Text = ...
    """The name (project, location, cluster id) of the cluster to set networking
    policy. Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        network_policy : typing.Optional[global___NetworkPolicy] = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["network_policy",b"network_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","name",b"name","network_policy",b"network_policy","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___SetNetworkPolicyRequest = SetNetworkPolicyRequest

class SetMaintenancePolicyRequest(google.protobuf.message.Message):
    """SetMaintenancePolicyRequest sets the maintenance policy for a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    MAINTENANCE_POLICY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. The Google Developers Console [project ID or project
    number](https://support.google.com/cloud/answer/6158840).
    """

    zone: typing.Text = ...
    """Required. The name of the Google Compute Engine
    [zone](https://cloud.google.com/compute/docs/zones#available) in which the
    cluster resides.
    """

    cluster_id: typing.Text = ...
    """Required. The name of the cluster to update."""

    @property
    def maintenance_policy(self) -> global___MaintenancePolicy:
        """Required. The maintenance policy to be set for the cluster. An empty field
        clears the existing maintenance policy.
        """
        pass
    name: typing.Text = ...
    """The name (project, location, cluster id) of the cluster to set maintenance
    policy.
    Specified in the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        zone : typing.Text = ...,
        cluster_id : typing.Text = ...,
        maintenance_policy : typing.Optional[global___MaintenancePolicy] = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["maintenance_policy",b"maintenance_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_id",b"cluster_id","maintenance_policy",b"maintenance_policy","name",b"name","project_id",b"project_id","zone",b"zone"]) -> None: ...
global___SetMaintenancePolicyRequest = SetMaintenancePolicyRequest

class ListLocationsRequest(google.protobuf.message.Message):
    """ListLocationsRequest is used to request the locations that offer GKE."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Contains the name of the resource requested.
    Specified in the format `projects/*`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent"]) -> None: ...
global___ListLocationsRequest = ListLocationsRequest

class ListLocationsResponse(google.protobuf.message.Message):
    """ListLocationsResponse returns the list of all GKE locations and their
    recommendation state.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def locations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Location]:
        """A full list of GKE locations."""
        pass
    next_page_token: typing.Text = ...
    """Only return ListLocationsResponse that occur after the page_token. This
    value should be populated from the ListLocationsResponse.next_page_token if
    that response token was set (which happens when listing more Locations than
    fit in a single ListLocationsResponse).
    """

    def __init__(self,
        *,
        locations : typing.Optional[typing.Iterable[global___Location]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["locations",b"locations","next_page_token",b"next_page_token"]) -> None: ...
global___ListLocationsResponse = ListLocationsResponse

class Location(google.protobuf.message.Message):
    """Location returns the location name, and if the location is recommended
    for GKE cluster scheduling.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _LocationType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LocationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LocationType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        LOCATION_TYPE_UNSPECIFIED: Location.LocationType.ValueType = ...  # 0
        """LOCATION_TYPE_UNSPECIFIED means the location type was not determined."""

        ZONE: Location.LocationType.ValueType = ...  # 1
        """A GKE Location where Zonal clusters can be created."""

        REGION: Location.LocationType.ValueType = ...  # 2
        """A GKE Location where Regional clusters can be created."""

    class LocationType(_LocationType, metaclass=_LocationTypeEnumTypeWrapper):
        """LocationType is the type of GKE location, regional or zonal."""
        pass

    LOCATION_TYPE_UNSPECIFIED: Location.LocationType.ValueType = ...  # 0
    """LOCATION_TYPE_UNSPECIFIED means the location type was not determined."""

    ZONE: Location.LocationType.ValueType = ...  # 1
    """A GKE Location where Zonal clusters can be created."""

    REGION: Location.LocationType.ValueType = ...  # 2
    """A GKE Location where Regional clusters can be created."""


    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    RECOMMENDED_FIELD_NUMBER: builtins.int
    type: global___Location.LocationType.ValueType = ...
    """Contains the type of location this Location is for.
    Regional or Zonal.
    """

    name: typing.Text = ...
    """Contains the name of the resource requested.
    Specified in the format `projects/*/locations/*`.
    """

    recommended: builtins.bool = ...
    """Whether the location is recomended for GKE cluster scheduling."""

    def __init__(self,
        *,
        type : global___Location.LocationType.ValueType = ...,
        name : typing.Text = ...,
        recommended : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","recommended",b"recommended","type",b"type"]) -> None: ...
global___Location = Location

class StatusCondition(google.protobuf.message.Message):
    """StatusCondition describes why a cluster or a node pool has a certain status
    (e.g., ERROR or DEGRADED).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Code:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Code.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: StatusCondition.Code.ValueType = ...  # 0
        """UNKNOWN indicates a generic condition."""

        GCE_STOCKOUT: StatusCondition.Code.ValueType = ...  # 1
        """GCE_STOCKOUT indicates that Google Compute Engine resources are
        temporarily unavailable.
        """

        GKE_SERVICE_ACCOUNT_DELETED: StatusCondition.Code.ValueType = ...  # 2
        """GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot
        service account.
        """

        GCE_QUOTA_EXCEEDED: StatusCondition.Code.ValueType = ...  # 3
        """Google Compute Engine quota was exceeded."""

        SET_BY_OPERATOR: StatusCondition.Code.ValueType = ...  # 4
        """Cluster state was manually changed by an SRE due to a system logic error."""

        CLOUD_KMS_KEY_ERROR: StatusCondition.Code.ValueType = ...  # 7
        """Unable to perform an encrypt operation against the CloudKMS key used for
        etcd level encryption.
        """

        CA_EXPIRING: StatusCondition.Code.ValueType = ...  # 9
        """Cluster CA is expiring soon.
        More codes TBA
        """

    class Code(_Code, metaclass=_CodeEnumTypeWrapper):
        """Code for each condition"""
        pass

    UNKNOWN: StatusCondition.Code.ValueType = ...  # 0
    """UNKNOWN indicates a generic condition."""

    GCE_STOCKOUT: StatusCondition.Code.ValueType = ...  # 1
    """GCE_STOCKOUT indicates that Google Compute Engine resources are
    temporarily unavailable.
    """

    GKE_SERVICE_ACCOUNT_DELETED: StatusCondition.Code.ValueType = ...  # 2
    """GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot
    service account.
    """

    GCE_QUOTA_EXCEEDED: StatusCondition.Code.ValueType = ...  # 3
    """Google Compute Engine quota was exceeded."""

    SET_BY_OPERATOR: StatusCondition.Code.ValueType = ...  # 4
    """Cluster state was manually changed by an SRE due to a system logic error."""

    CLOUD_KMS_KEY_ERROR: StatusCondition.Code.ValueType = ...  # 7
    """Unable to perform an encrypt operation against the CloudKMS key used for
    etcd level encryption.
    """

    CA_EXPIRING: StatusCondition.Code.ValueType = ...  # 9
    """Cluster CA is expiring soon.
    More codes TBA
    """


    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    CANONICAL_CODE_FIELD_NUMBER: builtins.int
    code: global___StatusCondition.Code.ValueType = ...
    """Machine-friendly representation of the condition
    Deprecated. Use canonical_code instead.
    """

    message: typing.Text = ...
    """Human-friendly representation of the condition"""

    canonical_code: google.rpc.code_pb2.Code.ValueType = ...
    """Canonical code of the condition."""

    def __init__(self,
        *,
        code : global___StatusCondition.Code.ValueType = ...,
        message : typing.Text = ...,
        canonical_code : google.rpc.code_pb2.Code.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["canonical_code",b"canonical_code","code",b"code","message",b"message"]) -> None: ...
global___StatusCondition = StatusCondition

class NetworkConfig(google.protobuf.message.Message):
    """NetworkConfig reports the relative names of network & subnetwork."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    ENABLE_INTRA_NODE_VISIBILITY_FIELD_NUMBER: builtins.int
    DEFAULT_SNAT_STATUS_FIELD_NUMBER: builtins.int
    ENABLE_L4ILB_SUBSETTING_FIELD_NUMBER: builtins.int
    DATAPATH_PROVIDER_FIELD_NUMBER: builtins.int
    PRIVATE_IPV6_GOOGLE_ACCESS_FIELD_NUMBER: builtins.int
    DNS_CONFIG_FIELD_NUMBER: builtins.int
    SERVICE_EXTERNAL_IPS_CONFIG_FIELD_NUMBER: builtins.int
    network: typing.Text = ...
    """Output only. The relative name of the Google Compute Engine
    [network][google.container.v1beta1.NetworkConfig.network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks)
    to which the cluster is connected. Example:
    projects/my-project/global/networks/my-network
    """

    subnetwork: typing.Text = ...
    """Output only. The relative name of the Google Compute Engine
    [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the
    cluster is connected. Example:
    projects/my-project/regions/us-central1/subnetworks/my-subnet
    """

    enable_intra_node_visibility: builtins.bool = ...
    """Whether Intra-node visibility is enabled for this cluster.
    This makes same node pod to pod traffic visible for VPC network.
    """

    @property
    def default_snat_status(self) -> global___DefaultSnatStatus:
        """Whether the cluster disables default in-node sNAT rules. In-node sNAT rules
        will be disabled when default_snat_status is disabled. When disabled is set
        to false, default IP masquerade rules will be applied to the nodes to
        prevent sNAT on cluster internal traffic.
        """
        pass
    enable_l4ilb_subsetting: builtins.bool = ...
    """Whether L4ILB Subsetting is enabled for this cluster."""

    datapath_provider: global___DatapathProvider.ValueType = ...
    """The desired datapath provider for this cluster. By default, uses the
    IPTables-based kube-proxy implementation.
    """

    private_ipv6_google_access: global___PrivateIPv6GoogleAccess.ValueType = ...
    """The desired state of IPv6 connectivity to Google Services.
    By default, no private IPv6 access to or from Google Services (all access
    will be via IPv4)
    """

    @property
    def dns_config(self) -> global___DNSConfig:
        """DNSConfig contains clusterDNS config for this cluster."""
        pass
    @property
    def service_external_ips_config(self) -> global___ServiceExternalIPsConfig:
        """ServiceExternalIPsConfig specifies if services with externalIPs field are
        blocked or not.
        """
        pass
    def __init__(self,
        *,
        network : typing.Text = ...,
        subnetwork : typing.Text = ...,
        enable_intra_node_visibility : builtins.bool = ...,
        default_snat_status : typing.Optional[global___DefaultSnatStatus] = ...,
        enable_l4ilb_subsetting : builtins.bool = ...,
        datapath_provider : global___DatapathProvider.ValueType = ...,
        private_ipv6_google_access : global___PrivateIPv6GoogleAccess.ValueType = ...,
        dns_config : typing.Optional[global___DNSConfig] = ...,
        service_external_ips_config : typing.Optional[global___ServiceExternalIPsConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_snat_status",b"default_snat_status","dns_config",b"dns_config","service_external_ips_config",b"service_external_ips_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["datapath_provider",b"datapath_provider","default_snat_status",b"default_snat_status","dns_config",b"dns_config","enable_intra_node_visibility",b"enable_intra_node_visibility","enable_l4ilb_subsetting",b"enable_l4ilb_subsetting","network",b"network","private_ipv6_google_access",b"private_ipv6_google_access","service_external_ips_config",b"service_external_ips_config","subnetwork",b"subnetwork"]) -> None: ...
global___NetworkConfig = NetworkConfig

class ServiceExternalIPsConfig(google.protobuf.message.Message):
    """Config to block services with externalIPs field."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether Services with ExternalIPs field are allowed or not."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___ServiceExternalIPsConfig = ServiceExternalIPsConfig

class ListUsableSubnetworksRequest(google.protobuf.message.Message):
    """ListUsableSubnetworksRequest requests the list of usable subnetworks.
    available to a user for creating clusters.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent project where subnetworks are usable.
    Specified in the format `projects/*`.
    """

    filter: typing.Text = ...
    """Filtering currently only supports equality on the networkProjectId and must
    be in the form: "networkProjectId=[PROJECTID]", where `networkProjectId`
    is the project which owns the listed subnetworks. This defaults to the
    parent project ID.
    """

    page_size: builtins.int = ...
    """The max number of results per page that should be returned. If the number
    of available results is larger than `page_size`, a `next_page_token` is
    returned which can be used to get the next page of results in subsequent
    requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    """

    page_token: typing.Text = ...
    """Specifies a page token to use. Set this to the nextPageToken returned by
    previous list requests to get the next page of results.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListUsableSubnetworksRequest = ListUsableSubnetworksRequest

class ListUsableSubnetworksResponse(google.protobuf.message.Message):
    """ListUsableSubnetworksResponse is the response of
    ListUsableSubnetworksRequest.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUBNETWORKS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def subnetworks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UsableSubnetwork]:
        """A list of usable subnetworks in the specified network project."""
        pass
    next_page_token: typing.Text = ...
    """This token allows you to get the next page of results for list requests.
    If the number of results is larger than `page_size`, use the
    `next_page_token` as a value for the query parameter `page_token` in the
    next request. The value will become empty when there are no more pages.
    """

    def __init__(self,
        *,
        subnetworks : typing.Optional[typing.Iterable[global___UsableSubnetwork]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","subnetworks",b"subnetworks"]) -> None: ...
global___ListUsableSubnetworksResponse = ListUsableSubnetworksResponse

class UsableSubnetworkSecondaryRange(google.protobuf.message.Message):
    """Secondary IP range of a usable subnetwork."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: UsableSubnetworkSecondaryRange.Status.ValueType = ...  # 0
        """UNKNOWN is the zero value of the Status enum. It's not a valid status."""

        UNUSED: UsableSubnetworkSecondaryRange.Status.ValueType = ...  # 1
        """UNUSED denotes that this range is unclaimed by any cluster."""

        IN_USE_SERVICE: UsableSubnetworkSecondaryRange.Status.ValueType = ...  # 2
        """IN_USE_SERVICE denotes that this range is claimed by a cluster for
        services. It cannot be used for other clusters.
        """

        IN_USE_SHAREABLE_POD: UsableSubnetworkSecondaryRange.Status.ValueType = ...  # 3
        """IN_USE_SHAREABLE_POD denotes this range was created by the network admin
        and is currently claimed by a cluster for pods. It can only be used by
        other clusters as a pod range.
        """

        IN_USE_MANAGED_POD: UsableSubnetworkSecondaryRange.Status.ValueType = ...  # 4
        """IN_USE_MANAGED_POD denotes this range was created by GKE and is claimed
        for pods. It cannot be used for other clusters.
        """

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Status shows the current usage of a secondary IP range."""
        pass

    UNKNOWN: UsableSubnetworkSecondaryRange.Status.ValueType = ...  # 0
    """UNKNOWN is the zero value of the Status enum. It's not a valid status."""

    UNUSED: UsableSubnetworkSecondaryRange.Status.ValueType = ...  # 1
    """UNUSED denotes that this range is unclaimed by any cluster."""

    IN_USE_SERVICE: UsableSubnetworkSecondaryRange.Status.ValueType = ...  # 2
    """IN_USE_SERVICE denotes that this range is claimed by a cluster for
    services. It cannot be used for other clusters.
    """

    IN_USE_SHAREABLE_POD: UsableSubnetworkSecondaryRange.Status.ValueType = ...  # 3
    """IN_USE_SHAREABLE_POD denotes this range was created by the network admin
    and is currently claimed by a cluster for pods. It can only be used by
    other clusters as a pod range.
    """

    IN_USE_MANAGED_POD: UsableSubnetworkSecondaryRange.Status.ValueType = ...  # 4
    """IN_USE_MANAGED_POD denotes this range was created by GKE and is claimed
    for pods. It cannot be used for other clusters.
    """


    RANGE_NAME_FIELD_NUMBER: builtins.int
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    range_name: typing.Text = ...
    """The name associated with this subnetwork secondary range, used when adding
    an alias IP range to a VM instance.
    """

    ip_cidr_range: typing.Text = ...
    """The range of IP addresses belonging to this subnetwork secondary range."""

    status: global___UsableSubnetworkSecondaryRange.Status.ValueType = ...
    """This field is to determine the status of the secondary range programmably."""

    def __init__(self,
        *,
        range_name : typing.Text = ...,
        ip_cidr_range : typing.Text = ...,
        status : global___UsableSubnetworkSecondaryRange.Status.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ip_cidr_range",b"ip_cidr_range","range_name",b"range_name","status",b"status"]) -> None: ...
global___UsableSubnetworkSecondaryRange = UsableSubnetworkSecondaryRange

class UsableSubnetwork(google.protobuf.message.Message):
    """UsableSubnetwork resource returns the subnetwork name, its associated network
    and the primary CIDR range.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUBNETWORK_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    SECONDARY_IP_RANGES_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    subnetwork: typing.Text = ...
    """Subnetwork Name.
    Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
    """

    network: typing.Text = ...
    """Network Name.
    Example: projects/my-project/global/networks/my-network
    """

    ip_cidr_range: typing.Text = ...
    """The range of internal addresses that are owned by this subnetwork."""

    @property
    def secondary_ip_ranges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UsableSubnetworkSecondaryRange]:
        """Secondary IP ranges."""
        pass
    status_message: typing.Text = ...
    """A human readable status message representing the reasons for cases where
    the caller cannot use the secondary ranges under the subnet. For example if
    the secondary_ip_ranges is empty due to a permission issue, an insufficient
    permission message will be given by status_message.
    """

    def __init__(self,
        *,
        subnetwork : typing.Text = ...,
        network : typing.Text = ...,
        ip_cidr_range : typing.Text = ...,
        secondary_ip_ranges : typing.Optional[typing.Iterable[global___UsableSubnetworkSecondaryRange]] = ...,
        status_message : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ip_cidr_range",b"ip_cidr_range","network",b"network","secondary_ip_ranges",b"secondary_ip_ranges","status_message",b"status_message","subnetwork",b"subnetwork"]) -> None: ...
global___UsableSubnetwork = UsableSubnetwork

class VerticalPodAutoscaling(google.protobuf.message.Message):
    """VerticalPodAutoscaling contains global, per-cluster information
    required by Vertical Pod Autoscaler to automatically adjust
    the resources of pods controlled by it.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Enables vertical pod autoscaling."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___VerticalPodAutoscaling = VerticalPodAutoscaling

class DefaultSnatStatus(google.protobuf.message.Message):
    """DefaultSnatStatus contains the desired state of whether default sNAT should
    be disabled on the cluster.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISABLED_FIELD_NUMBER: builtins.int
    disabled: builtins.bool = ...
    """Disables cluster default sNAT rules."""

    def __init__(self,
        *,
        disabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disabled",b"disabled"]) -> None: ...
global___DefaultSnatStatus = DefaultSnatStatus

class IntraNodeVisibilityConfig(google.protobuf.message.Message):
    """IntraNodeVisibilityConfig contains the desired config of the intra-node
    visibility on this cluster.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Enables intra node visibility for this cluster."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___IntraNodeVisibilityConfig = IntraNodeVisibilityConfig

class ILBSubsettingConfig(google.protobuf.message.Message):
    """ILBSubsettingConfig contains the desired config of L4 Internal LoadBalancer
    subsetting on this cluster.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Enables l4 ILB subsetting for this cluster"""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___ILBSubsettingConfig = ILBSubsettingConfig

class DNSConfig(google.protobuf.message.Message):
    """DNSConfig contains the desired set of options for configuring clusterDNS."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Provider:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProviderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Provider.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PROVIDER_UNSPECIFIED: DNSConfig.Provider.ValueType = ...  # 0
        """Default value"""

        PLATFORM_DEFAULT: DNSConfig.Provider.ValueType = ...  # 1
        """Use GKE default DNS provider(kube-dns) for DNS resolution."""

        CLOUD_DNS: DNSConfig.Provider.ValueType = ...  # 2
        """Use CloudDNS for DNS resolution."""

    class Provider(_Provider, metaclass=_ProviderEnumTypeWrapper):
        """Provider lists the various in-cluster DNS providers."""
        pass

    PROVIDER_UNSPECIFIED: DNSConfig.Provider.ValueType = ...  # 0
    """Default value"""

    PLATFORM_DEFAULT: DNSConfig.Provider.ValueType = ...  # 1
    """Use GKE default DNS provider(kube-dns) for DNS resolution."""

    CLOUD_DNS: DNSConfig.Provider.ValueType = ...  # 2
    """Use CloudDNS for DNS resolution."""


    class _DNSScope:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DNSScopeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DNSScope.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DNS_SCOPE_UNSPECIFIED: DNSConfig.DNSScope.ValueType = ...  # 0
        """Default value, will be inferred as cluster scope."""

        CLUSTER_SCOPE: DNSConfig.DNSScope.ValueType = ...  # 1
        """DNS records are accessible from within the cluster."""

        VPC_SCOPE: DNSConfig.DNSScope.ValueType = ...  # 2
        """DNS records are accessible from within the VPC."""

    class DNSScope(_DNSScope, metaclass=_DNSScopeEnumTypeWrapper):
        """DNSScope lists the various scopes of access to cluster DNS records."""
        pass

    DNS_SCOPE_UNSPECIFIED: DNSConfig.DNSScope.ValueType = ...  # 0
    """Default value, will be inferred as cluster scope."""

    CLUSTER_SCOPE: DNSConfig.DNSScope.ValueType = ...  # 1
    """DNS records are accessible from within the cluster."""

    VPC_SCOPE: DNSConfig.DNSScope.ValueType = ...  # 2
    """DNS records are accessible from within the VPC."""


    CLUSTER_DNS_FIELD_NUMBER: builtins.int
    CLUSTER_DNS_SCOPE_FIELD_NUMBER: builtins.int
    CLUSTER_DNS_DOMAIN_FIELD_NUMBER: builtins.int
    cluster_dns: global___DNSConfig.Provider.ValueType = ...
    """cluster_dns indicates which in-cluster DNS provider should be used."""

    cluster_dns_scope: global___DNSConfig.DNSScope.ValueType = ...
    """cluster_dns_scope indicates the scope of access to cluster DNS records."""

    cluster_dns_domain: typing.Text = ...
    """cluster_dns_domain is the suffix used for all cluster service records."""

    def __init__(self,
        *,
        cluster_dns : global___DNSConfig.Provider.ValueType = ...,
        cluster_dns_scope : global___DNSConfig.DNSScope.ValueType = ...,
        cluster_dns_domain : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_dns",b"cluster_dns","cluster_dns_domain",b"cluster_dns_domain","cluster_dns_scope",b"cluster_dns_scope"]) -> None: ...
global___DNSConfig = DNSConfig

class MaxPodsConstraint(google.protobuf.message.Message):
    """Constraints applied to pods."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MAX_PODS_PER_NODE_FIELD_NUMBER: builtins.int
    max_pods_per_node: builtins.int = ...
    """Constraint enforced on the max num of pods per node."""

    def __init__(self,
        *,
        max_pods_per_node : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_pods_per_node",b"max_pods_per_node"]) -> None: ...
global___MaxPodsConstraint = MaxPodsConstraint

class WorkloadIdentityConfig(google.protobuf.message.Message):
    """Configuration for the use of Kubernetes Service Accounts in GCP IAM
    policies.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IDENTITY_NAMESPACE_FIELD_NUMBER: builtins.int
    WORKLOAD_POOL_FIELD_NUMBER: builtins.int
    IDENTITY_PROVIDER_FIELD_NUMBER: builtins.int
    identity_namespace: typing.Text = ...
    """IAM Identity Namespace to attach all Kubernetes Service Accounts to."""

    workload_pool: typing.Text = ...
    """The workload pool to attach all Kubernetes service accounts to."""

    identity_provider: typing.Text = ...
    """identity provider is the third party identity provider."""

    def __init__(self,
        *,
        identity_namespace : typing.Text = ...,
        workload_pool : typing.Text = ...,
        identity_provider : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["identity_namespace",b"identity_namespace","identity_provider",b"identity_provider","workload_pool",b"workload_pool"]) -> None: ...
global___WorkloadIdentityConfig = WorkloadIdentityConfig

class WorkloadCertificates(google.protobuf.message.Message):
    """Configuration for issuance of mTLS keys and certificates to Kubernetes pods."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_CERTIFICATES_FIELD_NUMBER: builtins.int
    @property
    def enable_certificates(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """enable_certificates controls issuance of workload mTLS certificates.

        If set, the GKE Workload Identity Certificates controller and node agent
        will be deployed in the cluster, which can then be configured by creating a
        WorkloadCertificateConfig Custom Resource.

        Requires Workload Identity
        ([workload_pool][google.container.v1beta1.WorkloadIdentityConfig.workload_pool]
        must be non-empty).
        """
        pass
    def __init__(self,
        *,
        enable_certificates : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["enable_certificates",b"enable_certificates"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_certificates",b"enable_certificates"]) -> None: ...
global___WorkloadCertificates = WorkloadCertificates

class MeshCertificates(google.protobuf.message.Message):
    """Configuration for issuance of mTLS keys and certificates to Kubernetes pods."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_CERTIFICATES_FIELD_NUMBER: builtins.int
    @property
    def enable_certificates(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """enable_certificates controls issuance of workload mTLS certificates.

        If set, the GKE Workload Identity Certificates controller and node agent
        will be deployed in the cluster, which can then be configured by creating a
        WorkloadCertificateConfig Custom Resource.

        Requires Workload Identity
        ([workload_pool][google.container.v1alpha1.WorkloadIdentityConfig.workload_pool]
        must be non-empty).
        """
        pass
    def __init__(self,
        *,
        enable_certificates : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["enable_certificates",b"enable_certificates"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_certificates",b"enable_certificates"]) -> None: ...
global___MeshCertificates = MeshCertificates

class DatabaseEncryption(google.protobuf.message.Message):
    """Configuration of etcd encryption."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN: DatabaseEncryption.State.ValueType = ...  # 0
        """Should never be set"""

        ENCRYPTED: DatabaseEncryption.State.ValueType = ...  # 1
        """Secrets in etcd are encrypted."""

        DECRYPTED: DatabaseEncryption.State.ValueType = ...  # 2
        """Secrets in etcd are stored in plain text (at etcd level) - this is
        unrelated to Compute Engine level full disk encryption.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """State of etcd encryption."""
        pass

    UNKNOWN: DatabaseEncryption.State.ValueType = ...  # 0
    """Should never be set"""

    ENCRYPTED: DatabaseEncryption.State.ValueType = ...  # 1
    """Secrets in etcd are encrypted."""

    DECRYPTED: DatabaseEncryption.State.ValueType = ...  # 2
    """Secrets in etcd are stored in plain text (at etcd level) - this is
    unrelated to Compute Engine level full disk encryption.
    """


    STATE_FIELD_NUMBER: builtins.int
    KEY_NAME_FIELD_NUMBER: builtins.int
    state: global___DatabaseEncryption.State.ValueType = ...
    """Denotes the state of etcd encryption."""

    key_name: typing.Text = ...
    """Name of CloudKMS key to use for the encryption of secrets in etcd.
    Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key
    """

    def __init__(self,
        *,
        state : global___DatabaseEncryption.State.ValueType = ...,
        key_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_name",b"key_name","state",b"state"]) -> None: ...
global___DatabaseEncryption = DatabaseEncryption

class ResourceUsageExportConfig(google.protobuf.message.Message):
    """Configuration for exporting cluster resource usages."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class BigQueryDestination(google.protobuf.message.Message):
        """Parameters for using BigQuery as the destination of resource usage export."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DATASET_ID_FIELD_NUMBER: builtins.int
        dataset_id: typing.Text = ...
        """The ID of a BigQuery Dataset."""

        def __init__(self,
            *,
            dataset_id : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["dataset_id",b"dataset_id"]) -> None: ...

    class ConsumptionMeteringConfig(google.protobuf.message.Message):
        """Parameters for controlling consumption metering."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ENABLED_FIELD_NUMBER: builtins.int
        enabled: builtins.bool = ...
        """Whether to enable consumption metering for this cluster. If enabled, a
        second BigQuery table will be created to hold resource consumption
        records.
        """

        def __init__(self,
            *,
            enabled : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...

    BIGQUERY_DESTINATION_FIELD_NUMBER: builtins.int
    ENABLE_NETWORK_EGRESS_METERING_FIELD_NUMBER: builtins.int
    CONSUMPTION_METERING_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def bigquery_destination(self) -> global___ResourceUsageExportConfig.BigQueryDestination:
        """Configuration to use BigQuery as usage export destination."""
        pass
    enable_network_egress_metering: builtins.bool = ...
    """Whether to enable network egress metering for this cluster. If enabled, a
    daemonset will be created in the cluster to meter network egress traffic.
    """

    @property
    def consumption_metering_config(self) -> global___ResourceUsageExportConfig.ConsumptionMeteringConfig:
        """Configuration to enable resource consumption metering."""
        pass
    def __init__(self,
        *,
        bigquery_destination : typing.Optional[global___ResourceUsageExportConfig.BigQueryDestination] = ...,
        enable_network_egress_metering : builtins.bool = ...,
        consumption_metering_config : typing.Optional[global___ResourceUsageExportConfig.ConsumptionMeteringConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bigquery_destination",b"bigquery_destination","consumption_metering_config",b"consumption_metering_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bigquery_destination",b"bigquery_destination","consumption_metering_config",b"consumption_metering_config","enable_network_egress_metering",b"enable_network_egress_metering"]) -> None: ...
global___ResourceUsageExportConfig = ResourceUsageExportConfig

class ShieldedNodes(google.protobuf.message.Message):
    """Configuration of Shielded Nodes feature."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether Shielded Nodes features are enabled on all nodes in this cluster."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___ShieldedNodes = ShieldedNodes

class VirtualNIC(google.protobuf.message.Message):
    """Configuration of gVNIC feature."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether gVNIC features are enabled in the node pool."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___VirtualNIC = VirtualNIC

class GetJSONWebKeysRequest(google.protobuf.message.Message):
    """GetJSONWebKeysRequest gets the public component of the keys used by the
    cluster to sign token requests. This will be the jwks_uri for the discover
    document returned by getOpenIDConfig. See the OpenID Connect
    Discovery 1.0 specification for details.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """The cluster (project, location, cluster id) to get keys for. Specified in
    the format `projects/*/locations/*/clusters/*`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent"]) -> None: ...
global___GetJSONWebKeysRequest = GetJSONWebKeysRequest

class Jwk(google.protobuf.message.Message):
    """Jwk is a JSON Web Key as specified in RFC 7517"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KTY_FIELD_NUMBER: builtins.int
    ALG_FIELD_NUMBER: builtins.int
    USE_FIELD_NUMBER: builtins.int
    KID_FIELD_NUMBER: builtins.int
    N_FIELD_NUMBER: builtins.int
    E_FIELD_NUMBER: builtins.int
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    CRV_FIELD_NUMBER: builtins.int
    kty: typing.Text = ...
    """Key Type."""

    alg: typing.Text = ...
    """Algorithm."""

    use: typing.Text = ...
    """Permitted uses for the public keys."""

    kid: typing.Text = ...
    """Key ID."""

    n: typing.Text = ...
    """Used for RSA keys."""

    e: typing.Text = ...
    """Used for RSA keys."""

    x: typing.Text = ...
    """Used for ECDSA keys."""

    y: typing.Text = ...
    """Used for ECDSA keys."""

    crv: typing.Text = ...
    """Used for ECDSA keys."""

    def __init__(self,
        *,
        kty : typing.Text = ...,
        alg : typing.Text = ...,
        use : typing.Text = ...,
        kid : typing.Text = ...,
        n : typing.Text = ...,
        e : typing.Text = ...,
        x : typing.Text = ...,
        y : typing.Text = ...,
        crv : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alg",b"alg","crv",b"crv","e",b"e","kid",b"kid","kty",b"kty","n",b"n","use",b"use","x",b"x","y",b"y"]) -> None: ...
global___Jwk = Jwk

class GetJSONWebKeysResponse(google.protobuf.message.Message):
    """GetJSONWebKeysResponse is a valid JSON Web Key Set as specififed in rfc 7517"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEYS_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Jwk]:
        """The public component of the keys used by the cluster to sign token
        requests.
        """
        pass
    def __init__(self,
        *,
        keys : typing.Optional[typing.Iterable[global___Jwk]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["keys",b"keys"]) -> None: ...
global___GetJSONWebKeysResponse = GetJSONWebKeysResponse

class ReleaseChannel(google.protobuf.message.Message):
    """ReleaseChannel indicates which release channel a cluster is
    subscribed to. Release channels are arranged in order of risk.

    When a cluster is subscribed to a release channel, Google maintains
    both the master version and the node version. Node auto-upgrade
    defaults to true and cannot be disabled.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Channel:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ChannelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Channel.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: ReleaseChannel.Channel.ValueType = ...  # 0
        """No channel specified."""

        RAPID: ReleaseChannel.Channel.ValueType = ...  # 1
        """RAPID channel is offered on an early access basis for customers who want
        to test new releases.

        WARNING: Versions available in the RAPID Channel may be subject to
        unresolved issues with no known workaround and are not subject to any
        SLAs.
        """

        REGULAR: ReleaseChannel.Channel.ValueType = ...  # 2
        """Clusters subscribed to REGULAR receive versions that are considered GA
        quality. REGULAR is intended for production users who want to take
        advantage of new features.
        """

        STABLE: ReleaseChannel.Channel.ValueType = ...  # 3
        """Clusters subscribed to STABLE receive versions that are known to be
        stable and reliable in production.
        """

    class Channel(_Channel, metaclass=_ChannelEnumTypeWrapper):
        """Possible values for 'channel'."""
        pass

    UNSPECIFIED: ReleaseChannel.Channel.ValueType = ...  # 0
    """No channel specified."""

    RAPID: ReleaseChannel.Channel.ValueType = ...  # 1
    """RAPID channel is offered on an early access basis for customers who want
    to test new releases.

    WARNING: Versions available in the RAPID Channel may be subject to
    unresolved issues with no known workaround and are not subject to any
    SLAs.
    """

    REGULAR: ReleaseChannel.Channel.ValueType = ...  # 2
    """Clusters subscribed to REGULAR receive versions that are considered GA
    quality. REGULAR is intended for production users who want to take
    advantage of new features.
    """

    STABLE: ReleaseChannel.Channel.ValueType = ...  # 3
    """Clusters subscribed to STABLE receive versions that are known to be
    stable and reliable in production.
    """


    CHANNEL_FIELD_NUMBER: builtins.int
    channel: global___ReleaseChannel.Channel.ValueType = ...
    """channel specifies which release channel the cluster is subscribed to."""

    def __init__(self,
        *,
        channel : global___ReleaseChannel.Channel.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel",b"channel"]) -> None: ...
global___ReleaseChannel = ReleaseChannel

class TpuConfig(google.protobuf.message.Message):
    """Configuration for Cloud TPU."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    USE_SERVICE_NETWORKING_FIELD_NUMBER: builtins.int
    IPV4_CIDR_BLOCK_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether Cloud TPU integration is enabled or not."""

    use_service_networking: builtins.bool = ...
    """Whether to use service networking for Cloud TPU or not."""

    ipv4_cidr_block: typing.Text = ...
    """IPv4 CIDR block reserved for Cloud TPU in the VPC."""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        use_service_networking : builtins.bool = ...,
        ipv4_cidr_block : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","ipv4_cidr_block",b"ipv4_cidr_block","use_service_networking",b"use_service_networking"]) -> None: ...
global___TpuConfig = TpuConfig

class Master(google.protobuf.message.Message):
    """Master is the configuration for components on master."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___Master = Master

class Autopilot(google.protobuf.message.Message):
    """Autopilot is the configuration for Autopilot settings on the cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Enable Autopilot"""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___Autopilot = Autopilot

class NotificationConfig(google.protobuf.message.Message):
    """NotificationConfig is the configuration of notifications."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EventType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EventTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EventType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        EVENT_TYPE_UNSPECIFIED: NotificationConfig.EventType.ValueType = ...  # 0
        """Not set, will be ignored."""

        UPGRADE_AVAILABLE_EVENT: NotificationConfig.EventType.ValueType = ...  # 1
        """Corresponds with UpgradeAvailableEvent."""

        UPGRADE_EVENT: NotificationConfig.EventType.ValueType = ...  # 2
        """Corresponds with UpgradeEvent."""

        SECURITY_BULLETIN_EVENT: NotificationConfig.EventType.ValueType = ...  # 3
        """Corresponds with SecurityBulletinEvent."""

    class EventType(_EventType, metaclass=_EventTypeEnumTypeWrapper):
        """Types of notifications currently supported. Can be used to filter what
        notifications are sent.
        """
        pass

    EVENT_TYPE_UNSPECIFIED: NotificationConfig.EventType.ValueType = ...  # 0
    """Not set, will be ignored."""

    UPGRADE_AVAILABLE_EVENT: NotificationConfig.EventType.ValueType = ...  # 1
    """Corresponds with UpgradeAvailableEvent."""

    UPGRADE_EVENT: NotificationConfig.EventType.ValueType = ...  # 2
    """Corresponds with UpgradeEvent."""

    SECURITY_BULLETIN_EVENT: NotificationConfig.EventType.ValueType = ...  # 3
    """Corresponds with SecurityBulletinEvent."""


    class PubSub(google.protobuf.message.Message):
        """Pub/Sub specific notification config."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ENABLED_FIELD_NUMBER: builtins.int
        TOPIC_FIELD_NUMBER: builtins.int
        FILTER_FIELD_NUMBER: builtins.int
        enabled: builtins.bool = ...
        """Enable notifications for Pub/Sub."""

        topic: typing.Text = ...
        """The desired Pub/Sub topic to which notifications will be
        sent by GKE. Format is `projects/{project}/topics/{topic}`.
        """

        @property
        def filter(self) -> global___NotificationConfig.Filter:
            """Allows filtering to one or more specific event types. If no filter is
            specified, or if a filter is specified with no event types, all event
            types will be sent
            """
            pass
        def __init__(self,
            *,
            enabled : builtins.bool = ...,
            topic : typing.Text = ...,
            filter : typing.Optional[global___NotificationConfig.Filter] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["filter",b"filter"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","filter",b"filter","topic",b"topic"]) -> None: ...

    class Filter(google.protobuf.message.Message):
        """Allows filtering to one or more specific event types. If event types are
        present, those and only those event types will be transmitted to the
        cluster. Other types will be skipped. If no filter is specified, or no
        event types are present, all event types will be sent
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        EVENT_TYPE_FIELD_NUMBER: builtins.int
        @property
        def event_type(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___NotificationConfig.EventType.ValueType]:
            """Event types to allowlist."""
            pass
        def __init__(self,
            *,
            event_type : typing.Optional[typing.Iterable[global___NotificationConfig.EventType.ValueType]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["event_type",b"event_type"]) -> None: ...

    PUBSUB_FIELD_NUMBER: builtins.int
    @property
    def pubsub(self) -> global___NotificationConfig.PubSub:
        """Notification config for Pub/Sub."""
        pass
    def __init__(self,
        *,
        pubsub : typing.Optional[global___NotificationConfig.PubSub] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pubsub",b"pubsub"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pubsub",b"pubsub"]) -> None: ...
global___NotificationConfig = NotificationConfig

class ConfidentialNodes(google.protobuf.message.Message):
    """ConfidentialNodes is configuration for the confidential nodes feature, which
    makes nodes run on confidential VMs.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether Confidential Nodes feature is enabled for all nodes in this
    cluster.
    """

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___ConfidentialNodes = ConfidentialNodes

class UpgradeEvent(google.protobuf.message.Message):
    """UpgradeEvent is a notification sent to customers by the cluster server when
    a resource is upgrading.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_TYPE_FIELD_NUMBER: builtins.int
    OPERATION_FIELD_NUMBER: builtins.int
    OPERATION_START_TIME_FIELD_NUMBER: builtins.int
    CURRENT_VERSION_FIELD_NUMBER: builtins.int
    TARGET_VERSION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    resource_type: global___UpgradeResourceType.ValueType = ...
    """The resource type that is upgrading."""

    operation: typing.Text = ...
    """The operation associated with this upgrade."""

    @property
    def operation_start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the operation was started."""
        pass
    current_version: typing.Text = ...
    """The current version before the upgrade."""

    target_version: typing.Text = ...
    """The target version for the upgrade."""

    resource: typing.Text = ...
    """Optional relative path to the resource. For example in node pool upgrades,
    the relative path of the node pool.
    """

    def __init__(self,
        *,
        resource_type : global___UpgradeResourceType.ValueType = ...,
        operation : typing.Text = ...,
        operation_start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        current_version : typing.Text = ...,
        target_version : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["operation_start_time",b"operation_start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_version",b"current_version","operation",b"operation","operation_start_time",b"operation_start_time","resource",b"resource","resource_type",b"resource_type","target_version",b"target_version"]) -> None: ...
global___UpgradeEvent = UpgradeEvent

class UpgradeAvailableEvent(google.protobuf.message.Message):
    """UpgradeAvailableEvent is a notification sent to customers when a new
    available version is released.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VERSION_FIELD_NUMBER: builtins.int
    RESOURCE_TYPE_FIELD_NUMBER: builtins.int
    RELEASE_CHANNEL_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    WINDOWS_VERSIONS_FIELD_NUMBER: builtins.int
    version: typing.Text = ...
    """The release version available for upgrade."""

    resource_type: global___UpgradeResourceType.ValueType = ...
    """The resource type of the release version."""

    @property
    def release_channel(self) -> global___ReleaseChannel:
        """The release channel of the version. If empty, it means a non-channel
        release.
        """
        pass
    resource: typing.Text = ...
    """Optional relative path to the resource. For example, the relative path of
    the node pool.
    """

    @property
    def windows_versions(self) -> global___WindowsVersions:
        """Windows node versions info."""
        pass
    def __init__(self,
        *,
        version : typing.Text = ...,
        resource_type : global___UpgradeResourceType.ValueType = ...,
        release_channel : typing.Optional[global___ReleaseChannel] = ...,
        resource : typing.Text = ...,
        windows_versions : typing.Optional[global___WindowsVersions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["release_channel",b"release_channel","windows_versions",b"windows_versions"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["release_channel",b"release_channel","resource",b"resource","resource_type",b"resource_type","version",b"version","windows_versions",b"windows_versions"]) -> None: ...
global___UpgradeAvailableEvent = UpgradeAvailableEvent

class SecurityBulletinEvent(google.protobuf.message.Message):
    """SecurityBulletinEvent is a notification sent to customers when a security
    bulletin has been posted that they are vulnerable to.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_TYPE_AFFECTED_FIELD_NUMBER: builtins.int
    BULLETIN_ID_FIELD_NUMBER: builtins.int
    CVE_IDS_FIELD_NUMBER: builtins.int
    SEVERITY_FIELD_NUMBER: builtins.int
    BULLETIN_URI_FIELD_NUMBER: builtins.int
    BRIEF_DESCRIPTION_FIELD_NUMBER: builtins.int
    AFFECTED_SUPPORTED_MINORS_FIELD_NUMBER: builtins.int
    PATCHED_VERSIONS_FIELD_NUMBER: builtins.int
    SUGGESTED_UPGRADE_TARGET_FIELD_NUMBER: builtins.int
    MANUAL_STEPS_REQUIRED_FIELD_NUMBER: builtins.int
    resource_type_affected: typing.Text = ...
    """The resource type (node/control plane) that has the vulnerability. Multiple
    notifications (1 notification per resource type) will be sent for a
    vulnerability that affects > 1 resource type.
    """

    bulletin_id: typing.Text = ...
    """The ID of the bulletin corresponding to the vulnerability."""

    @property
    def cve_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The CVEs associated with this bulletin."""
        pass
    severity: typing.Text = ...
    """The severity of this bulletin as it relates to GKE."""

    bulletin_uri: typing.Text = ...
    """The URI link to the bulletin on the website for more information."""

    brief_description: typing.Text = ...
    """A brief description of the bulletin. See the bulletin pointed to by the
    bulletin_uri field for an expanded description.
    """

    @property
    def affected_supported_minors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The GKE minor versions affected by this vulnerability."""
        pass
    @property
    def patched_versions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The GKE versions where this vulnerability is patched."""
        pass
    suggested_upgrade_target: typing.Text = ...
    """This represents a version selected from the patched_versions field that
    the cluster receiving this notification should most likely want to upgrade
    to based on its current version. Note that if this notification is being
    received by a given cluster, it means that this version is currently
    available as an upgrade target in that cluster's location.
    """

    manual_steps_required: builtins.bool = ...
    """If this field is specified, it means there are manual steps that the user
    must take to make their clusters safe.
    """

    def __init__(self,
        *,
        resource_type_affected : typing.Text = ...,
        bulletin_id : typing.Text = ...,
        cve_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        severity : typing.Text = ...,
        bulletin_uri : typing.Text = ...,
        brief_description : typing.Text = ...,
        affected_supported_minors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        patched_versions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        suggested_upgrade_target : typing.Text = ...,
        manual_steps_required : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["affected_supported_minors",b"affected_supported_minors","brief_description",b"brief_description","bulletin_id",b"bulletin_id","bulletin_uri",b"bulletin_uri","cve_ids",b"cve_ids","manual_steps_required",b"manual_steps_required","patched_versions",b"patched_versions","resource_type_affected",b"resource_type_affected","severity",b"severity","suggested_upgrade_target",b"suggested_upgrade_target"]) -> None: ...
global___SecurityBulletinEvent = SecurityBulletinEvent

class IdentityServiceConfig(google.protobuf.message.Message):
    """IdentityServiceConfig is configuration for Identity Service which allows
    customers to use external identity providers with the K8S API
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether to enable the Identity Service component"""

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled"]) -> None: ...
global___IdentityServiceConfig = IdentityServiceConfig

class LoggingConfig(google.protobuf.message.Message):
    """LoggingConfig is cluster logging configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMPONENT_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def component_config(self) -> global___LoggingComponentConfig:
        """Logging components configuration"""
        pass
    def __init__(self,
        *,
        component_config : typing.Optional[global___LoggingComponentConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["component_config",b"component_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["component_config",b"component_config"]) -> None: ...
global___LoggingConfig = LoggingConfig

class LoggingComponentConfig(google.protobuf.message.Message):
    """LoggingComponentConfig is cluster logging component configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Component:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ComponentEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Component.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        COMPONENT_UNSPECIFIED: LoggingComponentConfig.Component.ValueType = ...  # 0
        """Default value. This shouldn't be used."""

        SYSTEM_COMPONENTS: LoggingComponentConfig.Component.ValueType = ...  # 1
        """system components"""

        WORKLOADS: LoggingComponentConfig.Component.ValueType = ...  # 2
        """workloads"""

    class Component(_Component, metaclass=_ComponentEnumTypeWrapper):
        """GKE components exposing logs"""
        pass

    COMPONENT_UNSPECIFIED: LoggingComponentConfig.Component.ValueType = ...  # 0
    """Default value. This shouldn't be used."""

    SYSTEM_COMPONENTS: LoggingComponentConfig.Component.ValueType = ...  # 1
    """system components"""

    WORKLOADS: LoggingComponentConfig.Component.ValueType = ...  # 2
    """workloads"""


    ENABLE_COMPONENTS_FIELD_NUMBER: builtins.int
    @property
    def enable_components(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___LoggingComponentConfig.Component.ValueType]:
        """Select components to collect logs. An empty set would disable all logging."""
        pass
    def __init__(self,
        *,
        enable_components : typing.Optional[typing.Iterable[global___LoggingComponentConfig.Component.ValueType]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_components",b"enable_components"]) -> None: ...
global___LoggingComponentConfig = LoggingComponentConfig

class MonitoringConfig(google.protobuf.message.Message):
    """MonitoringConfig is cluster monitoring configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMPONENT_CONFIG_FIELD_NUMBER: builtins.int
    MANAGED_PROMETHEUS_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def component_config(self) -> global___MonitoringComponentConfig:
        """Monitoring components configuration"""
        pass
    @property
    def managed_prometheus_config(self) -> global___ManagedPrometheusConfig:
        """Enable Google Cloud Managed Service for Prometheus
        in the cluster.
        """
        pass
    def __init__(self,
        *,
        component_config : typing.Optional[global___MonitoringComponentConfig] = ...,
        managed_prometheus_config : typing.Optional[global___ManagedPrometheusConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["component_config",b"component_config","managed_prometheus_config",b"managed_prometheus_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["component_config",b"component_config","managed_prometheus_config",b"managed_prometheus_config"]) -> None: ...
global___MonitoringConfig = MonitoringConfig

class MonitoringComponentConfig(google.protobuf.message.Message):
    """MonitoringComponentConfig is cluster monitoring component configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Component:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ComponentEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Component.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        COMPONENT_UNSPECIFIED: MonitoringComponentConfig.Component.ValueType = ...  # 0
        """Default value. This shouldn't be used."""

        SYSTEM_COMPONENTS: MonitoringComponentConfig.Component.ValueType = ...  # 1
        """system components"""

        WORKLOADS: MonitoringComponentConfig.Component.ValueType = ...  # 2
        """workloads"""

    class Component(_Component, metaclass=_ComponentEnumTypeWrapper):
        """GKE components exposing metrics"""
        pass

    COMPONENT_UNSPECIFIED: MonitoringComponentConfig.Component.ValueType = ...  # 0
    """Default value. This shouldn't be used."""

    SYSTEM_COMPONENTS: MonitoringComponentConfig.Component.ValueType = ...  # 1
    """system components"""

    WORKLOADS: MonitoringComponentConfig.Component.ValueType = ...  # 2
    """workloads"""


    ENABLE_COMPONENTS_FIELD_NUMBER: builtins.int
    @property
    def enable_components(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___MonitoringComponentConfig.Component.ValueType]:
        """Select components to collect metrics. An empty set would disable all
        monitoring.
        """
        pass
    def __init__(self,
        *,
        enable_components : typing.Optional[typing.Iterable[global___MonitoringComponentConfig.Component.ValueType]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_components",b"enable_components"]) -> None: ...
global___MonitoringComponentConfig = MonitoringComponentConfig
