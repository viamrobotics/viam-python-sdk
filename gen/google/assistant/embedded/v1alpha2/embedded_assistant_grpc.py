# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/assistant/embedded/v1alpha2/embedded_assistant.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.type.latlng_pb2
import google.assistant.embedded.v1alpha2.embedded_assistant_pb2


class EmbeddedAssistantBase(abc.ABC):

    @abc.abstractmethod
    async def Assist(self, stream: 'grpclib.server.Stream[google.assistant.embedded.v1alpha2.embedded_assistant_pb2.AssistRequest, google.assistant.embedded.v1alpha2.embedded_assistant_pb2.AssistResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.assistant.embedded.v1alpha2.EmbeddedAssistant/Assist': grpclib.const.Handler(
                self.Assist,
                grpclib.const.Cardinality.STREAM_STREAM,
                google.assistant.embedded.v1alpha2.embedded_assistant_pb2.AssistRequest,
                google.assistant.embedded.v1alpha2.embedded_assistant_pb2.AssistResponse,
            ),
        }


class EmbeddedAssistantStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Assist = grpclib.client.StreamStreamMethod(
            channel,
            '/google.assistant.embedded.v1alpha2.EmbeddedAssistant/Assist',
            google.assistant.embedded.v1alpha2.embedded_assistant_pb2.AssistRequest,
            google.assistant.embedded.v1alpha2.embedded_assistant_pb2.AssistResponse,
        )
