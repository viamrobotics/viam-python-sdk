"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import google.type.latlng_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class PartitionId(google.protobuf.message.Message):
    """A partition ID identifies a grouping of entities. The grouping is always
    by project and namespace, however the namespace ID may be empty.

    A partition ID contains several dimensions:
    project ID and namespace ID.

    Partition dimensions:

    - May be `""`.
    - Must be valid UTF-8 bytes.
    - Must have values that match regex `[A-Za-z\\d\\.\\-_]{1,100}`
    If the value of any dimension matches regex `__.*__`, the partition is
    reserved/read-only.
    A reserved/read-only partition ID is forbidden in certain documented
    contexts.

    Foreign partition IDs (in which the project ID does
    not match the context project ID ) are discouraged.
    Reads and writes of foreign partition IDs may fail if the project is not in
    an active state.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    NAMESPACE_ID_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """The ID of the project to which the entities belong."""

    namespace_id: typing.Text = ...
    """If not empty, the ID of the namespace to which the entities belong."""

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        namespace_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["namespace_id",b"namespace_id","project_id",b"project_id"]) -> None: ...
global___PartitionId = PartitionId

class Key(google.protobuf.message.Message):
    """A unique identifier for an entity.
    If a key's partition ID or any of its path kinds or names are
    reserved/read-only, the key is reserved/read-only.
    A reserved/read-only key is forbidden in certain documented contexts.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PathElement(google.protobuf.message.Message):
        """A (kind, ID/name) pair used to construct a key path.

        If either name or ID is set, the element is complete.
        If neither is set, the element is incomplete.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KIND_FIELD_NUMBER: builtins.int
        ID_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        kind: typing.Text = ...
        """The kind of the entity.
        A kind matching regex `__.*__` is reserved/read-only.
        A kind must not contain more than 1500 bytes when UTF-8 encoded.
        Cannot be `""`.
        """

        id: builtins.int = ...
        """The auto-allocated ID of the entity.
        Never equal to zero. Values less than zero are discouraged and may not
        be supported in the future.
        """

        name: typing.Text = ...
        """The name of the entity.
        A name matching regex `__.*__` is reserved/read-only.
        A name must not be more than 1500 bytes when UTF-8 encoded.
        Cannot be `""`.
        """

        def __init__(self,
            *,
            kind : typing.Text = ...,
            id : builtins.int = ...,
            name : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["id",b"id","id_type",b"id_type","name",b"name"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["id",b"id","id_type",b"id_type","kind",b"kind","name",b"name"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["id_type",b"id_type"]) -> typing.Optional[typing_extensions.Literal["id","name"]]: ...

    PARTITION_ID_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    @property
    def partition_id(self) -> global___PartitionId:
        """Entities are partitioned into subsets, currently identified by a project
        ID and namespace ID.
        Queries are scoped to a single partition.
        """
        pass
    @property
    def path(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Key.PathElement]:
        """The entity path.
        An entity path consists of one or more elements composed of a kind and a
        string or numerical identifier, which identify entities. The first
        element identifies a _root entity_, the second element identifies
        a _child_ of the root entity, the third element identifies a child of the
        second entity, and so forth. The entities identified by all prefixes of
        the path are called the element's _ancestors_.

        An entity path is always fully complete: *all* of the entity's ancestors
        are required to be in the path along with the entity identifier itself.
        The only exception is that in some documented cases, the identifier in the
        last path element (for the entity) itself may be omitted. For example,
        the last path element of the key of `Mutation.insert` may have no
        identifier.

        A path can never be empty, and a path can have at most 100 elements.
        """
        pass
    def __init__(self,
        *,
        partition_id : typing.Optional[global___PartitionId] = ...,
        path : typing.Optional[typing.Iterable[global___Key.PathElement]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["partition_id",b"partition_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["partition_id",b"partition_id","path",b"path"]) -> None: ...
global___Key = Key

class ArrayValue(google.protobuf.message.Message):
    """An array value."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Value]:
        """Values in the array.
        The order of this array may not be preserved if it contains a mix of
        indexed and unindexed values.
        """
        pass
    def __init__(self,
        *,
        values : typing.Optional[typing.Iterable[global___Value]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["values",b"values"]) -> None: ...
global___ArrayValue = ArrayValue

class Value(google.protobuf.message.Message):
    """A message that can hold any of the supported value types and associated
    metadata.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NULL_VALUE_FIELD_NUMBER: builtins.int
    BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
    INTEGER_VALUE_FIELD_NUMBER: builtins.int
    DOUBLE_VALUE_FIELD_NUMBER: builtins.int
    TIMESTAMP_VALUE_FIELD_NUMBER: builtins.int
    KEY_VALUE_FIELD_NUMBER: builtins.int
    STRING_VALUE_FIELD_NUMBER: builtins.int
    BLOB_VALUE_FIELD_NUMBER: builtins.int
    GEO_POINT_VALUE_FIELD_NUMBER: builtins.int
    ENTITY_VALUE_FIELD_NUMBER: builtins.int
    ARRAY_VALUE_FIELD_NUMBER: builtins.int
    MEANING_FIELD_NUMBER: builtins.int
    EXCLUDE_FROM_INDEXES_FIELD_NUMBER: builtins.int
    null_value: google.protobuf.struct_pb2.NullValue.ValueType = ...
    """A null value."""

    boolean_value: builtins.bool = ...
    """A boolean value."""

    integer_value: builtins.int = ...
    """An integer value."""

    double_value: builtins.float = ...
    """A double value."""

    @property
    def timestamp_value(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """A timestamp value.
        When stored in the Datastore, precise only to microseconds;
        any additional precision is rounded down.
        """
        pass
    @property
    def key_value(self) -> global___Key:
        """A key value."""
        pass
    string_value: typing.Text = ...
    """A UTF-8 encoded string value.
    When `exclude_from_indexes` is false (it is indexed), may have at most
    1500 bytes. Otherwise, may be set to at most 1,000,000 bytes.
    """

    blob_value: builtins.bytes = ...
    """A blob value.
    May have at most 1,000,000 bytes.
    When `exclude_from_indexes` is false, may have at most 1500 bytes.
    In JSON requests, must be base64-encoded.
    """

    @property
    def geo_point_value(self) -> google.type.latlng_pb2.LatLng:
        """A geo point value representing a point on the surface of Earth."""
        pass
    @property
    def entity_value(self) -> global___Entity:
        """An entity value.

        - May have no key.
        - May have a key with an incomplete key path.
        - May have a reserved/read-only key.
        """
        pass
    @property
    def array_value(self) -> global___ArrayValue:
        """An array value.
        Cannot contain another array value.
        A `Value` instance that sets field `array_value` must not set fields
        `meaning` or `exclude_from_indexes`.
        """
        pass
    meaning: builtins.int = ...
    """The `meaning` field should only be populated for backwards compatibility."""

    exclude_from_indexes: builtins.bool = ...
    """If the value should be excluded from all indexes including those defined
    explicitly.
    """

    def __init__(self,
        *,
        null_value : google.protobuf.struct_pb2.NullValue.ValueType = ...,
        boolean_value : builtins.bool = ...,
        integer_value : builtins.int = ...,
        double_value : builtins.float = ...,
        timestamp_value : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        key_value : typing.Optional[global___Key] = ...,
        string_value : typing.Text = ...,
        blob_value : builtins.bytes = ...,
        geo_point_value : typing.Optional[google.type.latlng_pb2.LatLng] = ...,
        entity_value : typing.Optional[global___Entity] = ...,
        array_value : typing.Optional[global___ArrayValue] = ...,
        meaning : builtins.int = ...,
        exclude_from_indexes : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["array_value",b"array_value","blob_value",b"blob_value","boolean_value",b"boolean_value","double_value",b"double_value","entity_value",b"entity_value","geo_point_value",b"geo_point_value","integer_value",b"integer_value","key_value",b"key_value","null_value",b"null_value","string_value",b"string_value","timestamp_value",b"timestamp_value","value_type",b"value_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["array_value",b"array_value","blob_value",b"blob_value","boolean_value",b"boolean_value","double_value",b"double_value","entity_value",b"entity_value","exclude_from_indexes",b"exclude_from_indexes","geo_point_value",b"geo_point_value","integer_value",b"integer_value","key_value",b"key_value","meaning",b"meaning","null_value",b"null_value","string_value",b"string_value","timestamp_value",b"timestamp_value","value_type",b"value_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value_type",b"value_type"]) -> typing.Optional[typing_extensions.Literal["null_value","boolean_value","integer_value","double_value","timestamp_value","key_value","string_value","blob_value","geo_point_value","entity_value","array_value"]]: ...
global___Value = Value

class Entity(google.protobuf.message.Message):
    """A Datastore data object.

    An entity is limited to 1 megabyte when stored. That _roughly_
    corresponds to a limit of 1 megabyte for the serialized form of this
    message.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PropertiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Value: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    KEY_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def key(self) -> global___Key:
        """The entity's key.

        An entity must have a key, unless otherwise documented (for example,
        an entity in `Value.entity_value` may have no key).
        An entity's kind is its key path's last element's kind,
        or null if it has no key.
        """
        pass
    @property
    def properties(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Value]:
        """The entity's properties.
        The map's keys are property names.
        A property name matching regex `__.*__` is reserved.
        A reserved property name is forbidden in certain documented contexts.
        The name must not contain more than 500 characters.
        The name cannot be `""`.
        """
        pass
    def __init__(self,
        *,
        key : typing.Optional[global___Key] = ...,
        properties : typing.Optional[typing.Mapping[typing.Text, global___Value]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","properties",b"properties"]) -> None: ...
global___Entity = Entity
