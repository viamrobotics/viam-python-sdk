# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/datastore/v1/datastore.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.datastore.v1.entity_pb2
import google.datastore.v1.query_pb2
import google.datastore.v1.datastore_pb2


class DatastoreBase(abc.ABC):

    @abc.abstractmethod
    async def Lookup(self, stream: 'grpclib.server.Stream[google.datastore.v1.datastore_pb2.LookupRequest, google.datastore.v1.datastore_pb2.LookupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def RunQuery(self, stream: 'grpclib.server.Stream[google.datastore.v1.datastore_pb2.RunQueryRequest, google.datastore.v1.datastore_pb2.RunQueryResponse]') -> None:
        pass

    @abc.abstractmethod
    async def BeginTransaction(self, stream: 'grpclib.server.Stream[google.datastore.v1.datastore_pb2.BeginTransactionRequest, google.datastore.v1.datastore_pb2.BeginTransactionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Commit(self, stream: 'grpclib.server.Stream[google.datastore.v1.datastore_pb2.CommitRequest, google.datastore.v1.datastore_pb2.CommitResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Rollback(self, stream: 'grpclib.server.Stream[google.datastore.v1.datastore_pb2.RollbackRequest, google.datastore.v1.datastore_pb2.RollbackResponse]') -> None:
        pass

    @abc.abstractmethod
    async def AllocateIds(self, stream: 'grpclib.server.Stream[google.datastore.v1.datastore_pb2.AllocateIdsRequest, google.datastore.v1.datastore_pb2.AllocateIdsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ReserveIds(self, stream: 'grpclib.server.Stream[google.datastore.v1.datastore_pb2.ReserveIdsRequest, google.datastore.v1.datastore_pb2.ReserveIdsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.datastore.v1.Datastore/Lookup': grpclib.const.Handler(
                self.Lookup,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.datastore.v1.datastore_pb2.LookupRequest,
                google.datastore.v1.datastore_pb2.LookupResponse,
            ),
            '/google.datastore.v1.Datastore/RunQuery': grpclib.const.Handler(
                self.RunQuery,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.datastore.v1.datastore_pb2.RunQueryRequest,
                google.datastore.v1.datastore_pb2.RunQueryResponse,
            ),
            '/google.datastore.v1.Datastore/BeginTransaction': grpclib.const.Handler(
                self.BeginTransaction,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.datastore.v1.datastore_pb2.BeginTransactionRequest,
                google.datastore.v1.datastore_pb2.BeginTransactionResponse,
            ),
            '/google.datastore.v1.Datastore/Commit': grpclib.const.Handler(
                self.Commit,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.datastore.v1.datastore_pb2.CommitRequest,
                google.datastore.v1.datastore_pb2.CommitResponse,
            ),
            '/google.datastore.v1.Datastore/Rollback': grpclib.const.Handler(
                self.Rollback,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.datastore.v1.datastore_pb2.RollbackRequest,
                google.datastore.v1.datastore_pb2.RollbackResponse,
            ),
            '/google.datastore.v1.Datastore/AllocateIds': grpclib.const.Handler(
                self.AllocateIds,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.datastore.v1.datastore_pb2.AllocateIdsRequest,
                google.datastore.v1.datastore_pb2.AllocateIdsResponse,
            ),
            '/google.datastore.v1.Datastore/ReserveIds': grpclib.const.Handler(
                self.ReserveIds,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.datastore.v1.datastore_pb2.ReserveIdsRequest,
                google.datastore.v1.datastore_pb2.ReserveIdsResponse,
            ),
        }


class DatastoreStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Lookup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.datastore.v1.Datastore/Lookup',
            google.datastore.v1.datastore_pb2.LookupRequest,
            google.datastore.v1.datastore_pb2.LookupResponse,
        )
        self.RunQuery = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.datastore.v1.Datastore/RunQuery',
            google.datastore.v1.datastore_pb2.RunQueryRequest,
            google.datastore.v1.datastore_pb2.RunQueryResponse,
        )
        self.BeginTransaction = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.datastore.v1.Datastore/BeginTransaction',
            google.datastore.v1.datastore_pb2.BeginTransactionRequest,
            google.datastore.v1.datastore_pb2.BeginTransactionResponse,
        )
        self.Commit = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.datastore.v1.Datastore/Commit',
            google.datastore.v1.datastore_pb2.CommitRequest,
            google.datastore.v1.datastore_pb2.CommitResponse,
        )
        self.Rollback = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.datastore.v1.Datastore/Rollback',
            google.datastore.v1.datastore_pb2.RollbackRequest,
            google.datastore.v1.datastore_pb2.RollbackResponse,
        )
        self.AllocateIds = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.datastore.v1.Datastore/AllocateIds',
            google.datastore.v1.datastore_pb2.AllocateIdsRequest,
            google.datastore.v1.datastore_pb2.AllocateIdsResponse,
        )
        self.ReserveIds = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.datastore.v1.Datastore/ReserveIds',
            google.datastore.v1.datastore_pb2.ReserveIdsRequest,
            google.datastore.v1.datastore_pb2.ReserveIdsResponse,
        )
