"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.api.servicecontrol.v1.log_entry_pb2
import google.api.servicecontrol.v1.metric_value_pb2
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Operation(google.protobuf.message.Message):
    """Represents information regarding an operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Importance:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ImportanceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Importance.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        LOW: Operation.Importance.ValueType = ...  # 0
        """Allows data caching, batching, and aggregation. It provides
        higher performance with higher data loss risk.
        """

        HIGH: Operation.Importance.ValueType = ...  # 1
        """Disables data aggregation to minimize data loss. It is for operations
        that contains significant monetary value or audit trail. This feature
        only applies to the client libraries.
        """

    class Importance(_Importance, metaclass=_ImportanceEnumTypeWrapper):
        """Defines the importance of the data contained in the operation."""
        pass

    LOW: Operation.Importance.ValueType = ...  # 0
    """Allows data caching, batching, and aggregation. It provides
    higher performance with higher data loss risk.
    """

    HIGH: Operation.Importance.ValueType = ...  # 1
    """Disables data aggregation to minimize data loss. It is for operations
    that contains significant monetary value or audit trail. This feature
    only applies to the client libraries.
    """


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    OPERATION_ID_FIELD_NUMBER: builtins.int
    OPERATION_NAME_FIELD_NUMBER: builtins.int
    CONSUMER_ID_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    METRIC_VALUE_SETS_FIELD_NUMBER: builtins.int
    LOG_ENTRIES_FIELD_NUMBER: builtins.int
    IMPORTANCE_FIELD_NUMBER: builtins.int
    EXTENSIONS_FIELD_NUMBER: builtins.int
    operation_id: typing.Text = ...
    """Identity of the operation. This must be unique within the scope of the
    service that generated the operation. If the service calls
    Check() and Report() on the same operation, the two calls should carry
    the same id.

    UUID version 4 is recommended, though not required.
    In scenarios where an operation is computed from existing information
    and an idempotent id is desirable for deduplication purpose, UUID version 5
    is recommended. See RFC 4122 for details.
    """

    operation_name: typing.Text = ...
    """Fully qualified name of the operation. Reserved for future use."""

    consumer_id: typing.Text = ...
    """Identity of the consumer who is using the service.
    This field should be filled in for the operations initiated by a
    consumer, but not for service-initiated operations that are
    not related to a specific consumer.

    - This can be in one of the following formats:
        - project:PROJECT_ID,
        - project`_`number:PROJECT_NUMBER,
        - projects/PROJECT_ID or PROJECT_NUMBER,
        - folders/FOLDER_NUMBER,
        - organizations/ORGANIZATION_NUMBER,
        - api`_`key:API_KEY.
    """

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Required. Start time of the operation."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """End time of the operation.
        Required when the operation is used in
        [ServiceController.Report][google.api.servicecontrol.v1.ServiceController.Report],
        but optional when the operation is used in
        [ServiceController.Check][google.api.servicecontrol.v1.ServiceController.Check].
        """
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels describing the operation. Only the following labels are allowed:

        - Labels describing monitored resources as defined in
          the service configuration.
        - Default labels of metric values. When specified, labels defined in the
          metric value override these default.
        - The following labels defined by Google Cloud Platform:
            - `cloud.googleapis.com/location` describing the location where the
               operation happened,
            - `servicecontrol.googleapis.com/user_agent` describing the user agent
               of the API request,
            - `servicecontrol.googleapis.com/service_agent` describing the service
               used to handle the API request (e.g. ESP),
            - `servicecontrol.googleapis.com/platform` describing the platform
               where the API is served, such as App Engine, Compute Engine, or
               Kubernetes Engine.
        """
        pass
    @property
    def metric_value_sets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.api.servicecontrol.v1.metric_value_pb2.MetricValueSet]:
        """Represents information about this operation. Each MetricValueSet
        corresponds to a metric defined in the service configuration.
        The data type used in the MetricValueSet must agree with
        the data type specified in the metric definition.

        Within a single operation, it is not allowed to have more than one
        MetricValue instances that have the same metric names and identical
        label value combinations. If a request has such duplicated MetricValue
        instances, the entire request is rejected with
        an invalid argument error.
        """
        pass
    @property
    def log_entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.api.servicecontrol.v1.log_entry_pb2.LogEntry]:
        """Represents information to be logged."""
        pass
    importance: global___Operation.Importance.ValueType = ...
    """DO NOT USE. This is an experimental field."""

    @property
    def extensions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.any_pb2.Any]:
        """Unimplemented."""
        pass
    def __init__(self,
        *,
        operation_id : typing.Text = ...,
        operation_name : typing.Text = ...,
        consumer_id : typing.Text = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        metric_value_sets : typing.Optional[typing.Iterable[google.api.servicecontrol.v1.metric_value_pb2.MetricValueSet]] = ...,
        log_entries : typing.Optional[typing.Iterable[google.api.servicecontrol.v1.log_entry_pb2.LogEntry]] = ...,
        importance : global___Operation.Importance.ValueType = ...,
        extensions : typing.Optional[typing.Iterable[google.protobuf.any_pb2.Any]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["consumer_id",b"consumer_id","end_time",b"end_time","extensions",b"extensions","importance",b"importance","labels",b"labels","log_entries",b"log_entries","metric_value_sets",b"metric_value_sets","operation_id",b"operation_id","operation_name",b"operation_name","start_time",b"start_time"]) -> None: ...
global___Operation = Operation
