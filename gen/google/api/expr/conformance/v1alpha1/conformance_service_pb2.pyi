"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.api.expr.v1alpha1.checked_pb2
import google.api.expr.v1alpha1.eval_pb2
import google.api.expr.v1alpha1.syntax_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ParseRequest(google.protobuf.message.Message):
    """Request message for the Parse method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CEL_SOURCE_FIELD_NUMBER: builtins.int
    SYNTAX_VERSION_FIELD_NUMBER: builtins.int
    SOURCE_LOCATION_FIELD_NUMBER: builtins.int
    DISABLE_MACROS_FIELD_NUMBER: builtins.int
    cel_source: typing.Text = ...
    """Required. Source text in CEL syntax."""

    syntax_version: typing.Text = ...
    """Tag for version of CEL syntax, for future use."""

    source_location: typing.Text = ...
    """File or resource for source text, used in [SourceInfo][google.api.SourceInfo]."""

    disable_macros: builtins.bool = ...
    """Prevent macro expansion.  See "Macros" in Language Defiinition."""

    def __init__(self,
        *,
        cel_source : typing.Text = ...,
        syntax_version : typing.Text = ...,
        source_location : typing.Text = ...,
        disable_macros : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cel_source",b"cel_source","disable_macros",b"disable_macros","source_location",b"source_location","syntax_version",b"syntax_version"]) -> None: ...
global___ParseRequest = ParseRequest

class ParseResponse(google.protobuf.message.Message):
    """Response message for the Parse method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARSED_EXPR_FIELD_NUMBER: builtins.int
    ISSUES_FIELD_NUMBER: builtins.int
    @property
    def parsed_expr(self) -> google.api.expr.v1alpha1.syntax_pb2.ParsedExpr:
        """The parsed representation, or unset if parsing failed."""
        pass
    @property
    def issues(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.rpc.status_pb2.Status]:
        """Any number of issues with [StatusDetails][] as the details."""
        pass
    def __init__(self,
        *,
        parsed_expr : typing.Optional[google.api.expr.v1alpha1.syntax_pb2.ParsedExpr] = ...,
        issues : typing.Optional[typing.Iterable[google.rpc.status_pb2.Status]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["parsed_expr",b"parsed_expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["issues",b"issues","parsed_expr",b"parsed_expr"]) -> None: ...
global___ParseResponse = ParseResponse

class CheckRequest(google.protobuf.message.Message):
    """Request message for the Check method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARSED_EXPR_FIELD_NUMBER: builtins.int
    TYPE_ENV_FIELD_NUMBER: builtins.int
    CONTAINER_FIELD_NUMBER: builtins.int
    NO_STD_ENV_FIELD_NUMBER: builtins.int
    @property
    def parsed_expr(self) -> google.api.expr.v1alpha1.syntax_pb2.ParsedExpr:
        """Required. The parsed representation of the CEL program."""
        pass
    @property
    def type_env(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.api.expr.v1alpha1.checked_pb2.Decl]:
        """Declarations of types for external variables and functions.
        Required if program uses external variables or functions
        not in the default environment.
        """
        pass
    container: typing.Text = ...
    """The protocol buffer context.  See "Name Resolution" in the
    Language Definition.
    """

    no_std_env: builtins.bool = ...
    """If true, use only the declarations in [type_env][google.api.expr.conformance.v1alpha1.CheckRequest.type_env].  If false (default),
    add declarations for the standard definitions to the type environment.  See
    "Standard Definitions" in the Language Definition.
    """

    def __init__(self,
        *,
        parsed_expr : typing.Optional[google.api.expr.v1alpha1.syntax_pb2.ParsedExpr] = ...,
        type_env : typing.Optional[typing.Iterable[google.api.expr.v1alpha1.checked_pb2.Decl]] = ...,
        container : typing.Text = ...,
        no_std_env : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["parsed_expr",b"parsed_expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["container",b"container","no_std_env",b"no_std_env","parsed_expr",b"parsed_expr","type_env",b"type_env"]) -> None: ...
global___CheckRequest = CheckRequest

class CheckResponse(google.protobuf.message.Message):
    """Response message for the Check method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CHECKED_EXPR_FIELD_NUMBER: builtins.int
    ISSUES_FIELD_NUMBER: builtins.int
    @property
    def checked_expr(self) -> google.api.expr.v1alpha1.checked_pb2.CheckedExpr:
        """The annotated representation, or unset if checking failed."""
        pass
    @property
    def issues(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.rpc.status_pb2.Status]:
        """Any number of issues with [StatusDetails][] as the details."""
        pass
    def __init__(self,
        *,
        checked_expr : typing.Optional[google.api.expr.v1alpha1.checked_pb2.CheckedExpr] = ...,
        issues : typing.Optional[typing.Iterable[google.rpc.status_pb2.Status]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["checked_expr",b"checked_expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["checked_expr",b"checked_expr","issues",b"issues"]) -> None: ...
global___CheckResponse = CheckResponse

class EvalRequest(google.protobuf.message.Message):
    """Request message for the Eval method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class BindingsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> google.api.expr.v1alpha1.eval_pb2.ExprValue: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[google.api.expr.v1alpha1.eval_pb2.ExprValue] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PARSED_EXPR_FIELD_NUMBER: builtins.int
    CHECKED_EXPR_FIELD_NUMBER: builtins.int
    BINDINGS_FIELD_NUMBER: builtins.int
    CONTAINER_FIELD_NUMBER: builtins.int
    @property
    def parsed_expr(self) -> google.api.expr.v1alpha1.syntax_pb2.ParsedExpr:
        """Evaluate based on the parsed representation."""
        pass
    @property
    def checked_expr(self) -> google.api.expr.v1alpha1.checked_pb2.CheckedExpr:
        """Evaluate based on the checked representation."""
        pass
    @property
    def bindings(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.api.expr.v1alpha1.eval_pb2.ExprValue]:
        """Bindings for the external variables.  The types SHOULD be compatible
        with the type environment in [CheckRequest][google.api.expr.conformance.v1alpha1.CheckRequest], if checked.
        """
        pass
    container: typing.Text = ...
    """SHOULD be the same container as used in [CheckRequest][google.api.expr.conformance.v1alpha1.CheckRequest], if checked."""

    def __init__(self,
        *,
        parsed_expr : typing.Optional[google.api.expr.v1alpha1.syntax_pb2.ParsedExpr] = ...,
        checked_expr : typing.Optional[google.api.expr.v1alpha1.checked_pb2.CheckedExpr] = ...,
        bindings : typing.Optional[typing.Mapping[typing.Text, google.api.expr.v1alpha1.eval_pb2.ExprValue]] = ...,
        container : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["checked_expr",b"checked_expr","expr_kind",b"expr_kind","parsed_expr",b"parsed_expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bindings",b"bindings","checked_expr",b"checked_expr","container",b"container","expr_kind",b"expr_kind","parsed_expr",b"parsed_expr"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["expr_kind",b"expr_kind"]) -> typing.Optional[typing_extensions.Literal["parsed_expr","checked_expr"]]: ...
global___EvalRequest = EvalRequest

class EvalResponse(google.protobuf.message.Message):
    """Response message for the Eval method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULT_FIELD_NUMBER: builtins.int
    ISSUES_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> google.api.expr.v1alpha1.eval_pb2.ExprValue:
        """The execution result, or unset if execution couldn't start."""
        pass
    @property
    def issues(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.rpc.status_pb2.Status]:
        """Any number of issues with [StatusDetails][] as the details.
        Note that CEL execution errors are reified into [ExprValue][].
        Nevertheless, we'll allow out-of-band issues to be raised,
        which also makes the replies more regular.
        """
        pass
    def __init__(self,
        *,
        result : typing.Optional[google.api.expr.v1alpha1.eval_pb2.ExprValue] = ...,
        issues : typing.Optional[typing.Iterable[google.rpc.status_pb2.Status]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["issues",b"issues","result",b"result"]) -> None: ...
global___EvalResponse = EvalResponse

class IssueDetails(google.protobuf.message.Message):
    """Warnings or errors in service execution are represented by
    [google.rpc.Status][google.rpc.Status] messages, with the following message
    in the details field.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Severity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SeverityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Severity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SEVERITY_UNSPECIFIED: IssueDetails.Severity.ValueType = ...  # 0
        """An unspecified severity."""

        DEPRECATION: IssueDetails.Severity.ValueType = ...  # 1
        """Deprecation issue for statements and method that may no longer be
        supported or maintained.
        """

        WARNING: IssueDetails.Severity.ValueType = ...  # 2
        """Warnings such as: unused variables."""

        ERROR: IssueDetails.Severity.ValueType = ...  # 3
        """Errors such as: unmatched curly braces or variable redefinition."""

    class Severity(_Severity, metaclass=_SeverityEnumTypeWrapper):
        """Severities of issues."""
        pass

    SEVERITY_UNSPECIFIED: IssueDetails.Severity.ValueType = ...  # 0
    """An unspecified severity."""

    DEPRECATION: IssueDetails.Severity.ValueType = ...  # 1
    """Deprecation issue for statements and method that may no longer be
    supported or maintained.
    """

    WARNING: IssueDetails.Severity.ValueType = ...  # 2
    """Warnings such as: unused variables."""

    ERROR: IssueDetails.Severity.ValueType = ...  # 3
    """Errors such as: unmatched curly braces or variable redefinition."""


    SEVERITY_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    severity: global___IssueDetails.Severity.ValueType = ...
    """The severity of the issue."""

    @property
    def position(self) -> google.api.expr.v1alpha1.syntax_pb2.SourcePosition:
        """Position in the source, if known."""
        pass
    id: builtins.int = ...
    """Expression ID from [Expr][], 0 if unknown."""

    def __init__(self,
        *,
        severity : global___IssueDetails.Severity.ValueType = ...,
        position : typing.Optional[google.api.expr.v1alpha1.syntax_pb2.SourcePosition] = ...,
        id : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["position",b"position"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","position",b"position","severity",b"severity"]) -> None: ...
global___IssueDetails = IssueDetails
