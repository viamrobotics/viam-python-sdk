# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/api/serviceusage/v1/serviceusage.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.serviceusage.v1.resources_pb2
import google.longrunning.operations_pb2
import google.api.client_pb2
import google.api.serviceusage.v1.serviceusage_pb2


class ServiceUsageBase(abc.ABC):

    @abc.abstractmethod
    async def EnableService(self, stream: 'grpclib.server.Stream[google.api.serviceusage.v1.serviceusage_pb2.EnableServiceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DisableService(self, stream: 'grpclib.server.Stream[google.api.serviceusage.v1.serviceusage_pb2.DisableServiceRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def GetService(self, stream: 'grpclib.server.Stream[google.api.serviceusage.v1.serviceusage_pb2.GetServiceRequest, google.api.serviceusage.v1.resources_pb2.Service]') -> None:
        pass

    @abc.abstractmethod
    async def ListServices(self, stream: 'grpclib.server.Stream[google.api.serviceusage.v1.serviceusage_pb2.ListServicesRequest, google.api.serviceusage.v1.serviceusage_pb2.ListServicesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def BatchEnableServices(self, stream: 'grpclib.server.Stream[google.api.serviceusage.v1.serviceusage_pb2.BatchEnableServicesRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def BatchGetServices(self, stream: 'grpclib.server.Stream[google.api.serviceusage.v1.serviceusage_pb2.BatchGetServicesRequest, google.api.serviceusage.v1.serviceusage_pb2.BatchGetServicesResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.api.serviceusage.v1.ServiceUsage/EnableService': grpclib.const.Handler(
                self.EnableService,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.api.serviceusage.v1.serviceusage_pb2.EnableServiceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.api.serviceusage.v1.ServiceUsage/DisableService': grpclib.const.Handler(
                self.DisableService,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.api.serviceusage.v1.serviceusage_pb2.DisableServiceRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.api.serviceusage.v1.ServiceUsage/GetService': grpclib.const.Handler(
                self.GetService,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.api.serviceusage.v1.serviceusage_pb2.GetServiceRequest,
                google.api.serviceusage.v1.resources_pb2.Service,
            ),
            '/google.api.serviceusage.v1.ServiceUsage/ListServices': grpclib.const.Handler(
                self.ListServices,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.api.serviceusage.v1.serviceusage_pb2.ListServicesRequest,
                google.api.serviceusage.v1.serviceusage_pb2.ListServicesResponse,
            ),
            '/google.api.serviceusage.v1.ServiceUsage/BatchEnableServices': grpclib.const.Handler(
                self.BatchEnableServices,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.api.serviceusage.v1.serviceusage_pb2.BatchEnableServicesRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.api.serviceusage.v1.ServiceUsage/BatchGetServices': grpclib.const.Handler(
                self.BatchGetServices,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.api.serviceusage.v1.serviceusage_pb2.BatchGetServicesRequest,
                google.api.serviceusage.v1.serviceusage_pb2.BatchGetServicesResponse,
            ),
        }


class ServiceUsageStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.EnableService = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.api.serviceusage.v1.ServiceUsage/EnableService',
            google.api.serviceusage.v1.serviceusage_pb2.EnableServiceRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.DisableService = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.api.serviceusage.v1.ServiceUsage/DisableService',
            google.api.serviceusage.v1.serviceusage_pb2.DisableServiceRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.GetService = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.api.serviceusage.v1.ServiceUsage/GetService',
            google.api.serviceusage.v1.serviceusage_pb2.GetServiceRequest,
            google.api.serviceusage.v1.resources_pb2.Service,
        )
        self.ListServices = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.api.serviceusage.v1.ServiceUsage/ListServices',
            google.api.serviceusage.v1.serviceusage_pb2.ListServicesRequest,
            google.api.serviceusage.v1.serviceusage_pb2.ListServicesResponse,
        )
        self.BatchEnableServices = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.api.serviceusage.v1.ServiceUsage/BatchEnableServices',
            google.api.serviceusage.v1.serviceusage_pb2.BatchEnableServicesRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.BatchGetServices = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.api.serviceusage.v1.ServiceUsage/BatchGetServices',
            google.api.serviceusage.v1.serviceusage_pb2.BatchGetServicesRequest,
            google.api.serviceusage.v1.serviceusage_pb2.BatchGetServicesResponse,
        )
