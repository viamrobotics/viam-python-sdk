# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/partner/aistreams/v1alpha1/aistreams.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.longrunning.operations_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.timestamp_pb2
import google.partner.aistreams.v1alpha1.aistreams_pb2


class AIStreamsBase(abc.ABC):

    @abc.abstractmethod
    async def ListClusters(self, stream: 'grpclib.server.Stream[google.partner.aistreams.v1alpha1.aistreams_pb2.ListClustersRequest, google.partner.aistreams.v1alpha1.aistreams_pb2.ListClustersResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetCluster(self, stream: 'grpclib.server.Stream[google.partner.aistreams.v1alpha1.aistreams_pb2.GetClusterRequest, google.partner.aistreams.v1alpha1.aistreams_pb2.Cluster]') -> None:
        pass

    @abc.abstractmethod
    async def CreateCluster(self, stream: 'grpclib.server.Stream[google.partner.aistreams.v1alpha1.aistreams_pb2.CreateClusterRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateCluster(self, stream: 'grpclib.server.Stream[google.partner.aistreams.v1alpha1.aistreams_pb2.UpdateClusterRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteCluster(self, stream: 'grpclib.server.Stream[google.partner.aistreams.v1alpha1.aistreams_pb2.DeleteClusterRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ListStreams(self, stream: 'grpclib.server.Stream[google.partner.aistreams.v1alpha1.aistreams_pb2.ListStreamsRequest, google.partner.aistreams.v1alpha1.aistreams_pb2.ListStreamsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetStream(self, stream: 'grpclib.server.Stream[google.partner.aistreams.v1alpha1.aistreams_pb2.GetStreamRequest, google.partner.aistreams.v1alpha1.aistreams_pb2.Stream]') -> None:
        pass

    @abc.abstractmethod
    async def CreateStream(self, stream: 'grpclib.server.Stream[google.partner.aistreams.v1alpha1.aistreams_pb2.CreateStreamRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateStream(self, stream: 'grpclib.server.Stream[google.partner.aistreams.v1alpha1.aistreams_pb2.UpdateStreamRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteStream(self, stream: 'grpclib.server.Stream[google.partner.aistreams.v1alpha1.aistreams_pb2.DeleteStreamRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.partner.aistreams.v1alpha1.AIStreams/ListClusters': grpclib.const.Handler(
                self.ListClusters,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.partner.aistreams.v1alpha1.aistreams_pb2.ListClustersRequest,
                google.partner.aistreams.v1alpha1.aistreams_pb2.ListClustersResponse,
            ),
            '/google.partner.aistreams.v1alpha1.AIStreams/GetCluster': grpclib.const.Handler(
                self.GetCluster,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.partner.aistreams.v1alpha1.aistreams_pb2.GetClusterRequest,
                google.partner.aistreams.v1alpha1.aistreams_pb2.Cluster,
            ),
            '/google.partner.aistreams.v1alpha1.AIStreams/CreateCluster': grpclib.const.Handler(
                self.CreateCluster,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.partner.aistreams.v1alpha1.aistreams_pb2.CreateClusterRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.partner.aistreams.v1alpha1.AIStreams/UpdateCluster': grpclib.const.Handler(
                self.UpdateCluster,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.partner.aistreams.v1alpha1.aistreams_pb2.UpdateClusterRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.partner.aistreams.v1alpha1.AIStreams/DeleteCluster': grpclib.const.Handler(
                self.DeleteCluster,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.partner.aistreams.v1alpha1.aistreams_pb2.DeleteClusterRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.partner.aistreams.v1alpha1.AIStreams/ListStreams': grpclib.const.Handler(
                self.ListStreams,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.partner.aistreams.v1alpha1.aistreams_pb2.ListStreamsRequest,
                google.partner.aistreams.v1alpha1.aistreams_pb2.ListStreamsResponse,
            ),
            '/google.partner.aistreams.v1alpha1.AIStreams/GetStream': grpclib.const.Handler(
                self.GetStream,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.partner.aistreams.v1alpha1.aistreams_pb2.GetStreamRequest,
                google.partner.aistreams.v1alpha1.aistreams_pb2.Stream,
            ),
            '/google.partner.aistreams.v1alpha1.AIStreams/CreateStream': grpclib.const.Handler(
                self.CreateStream,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.partner.aistreams.v1alpha1.aistreams_pb2.CreateStreamRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.partner.aistreams.v1alpha1.AIStreams/UpdateStream': grpclib.const.Handler(
                self.UpdateStream,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.partner.aistreams.v1alpha1.aistreams_pb2.UpdateStreamRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.partner.aistreams.v1alpha1.AIStreams/DeleteStream': grpclib.const.Handler(
                self.DeleteStream,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.partner.aistreams.v1alpha1.aistreams_pb2.DeleteStreamRequest,
                google.longrunning.operations_pb2.Operation,
            ),
        }


class AIStreamsStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListClusters = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.partner.aistreams.v1alpha1.AIStreams/ListClusters',
            google.partner.aistreams.v1alpha1.aistreams_pb2.ListClustersRequest,
            google.partner.aistreams.v1alpha1.aistreams_pb2.ListClustersResponse,
        )
        self.GetCluster = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.partner.aistreams.v1alpha1.AIStreams/GetCluster',
            google.partner.aistreams.v1alpha1.aistreams_pb2.GetClusterRequest,
            google.partner.aistreams.v1alpha1.aistreams_pb2.Cluster,
        )
        self.CreateCluster = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.partner.aistreams.v1alpha1.AIStreams/CreateCluster',
            google.partner.aistreams.v1alpha1.aistreams_pb2.CreateClusterRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.UpdateCluster = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.partner.aistreams.v1alpha1.AIStreams/UpdateCluster',
            google.partner.aistreams.v1alpha1.aistreams_pb2.UpdateClusterRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.DeleteCluster = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.partner.aistreams.v1alpha1.AIStreams/DeleteCluster',
            google.partner.aistreams.v1alpha1.aistreams_pb2.DeleteClusterRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ListStreams = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.partner.aistreams.v1alpha1.AIStreams/ListStreams',
            google.partner.aistreams.v1alpha1.aistreams_pb2.ListStreamsRequest,
            google.partner.aistreams.v1alpha1.aistreams_pb2.ListStreamsResponse,
        )
        self.GetStream = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.partner.aistreams.v1alpha1.AIStreams/GetStream',
            google.partner.aistreams.v1alpha1.aistreams_pb2.GetStreamRequest,
            google.partner.aistreams.v1alpha1.aistreams_pb2.Stream,
        )
        self.CreateStream = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.partner.aistreams.v1alpha1.AIStreams/CreateStream',
            google.partner.aistreams.v1alpha1.aistreams_pb2.CreateStreamRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.UpdateStream = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.partner.aistreams.v1alpha1.AIStreams/UpdateStream',
            google.partner.aistreams.v1alpha1.aistreams_pb2.UpdateStreamRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.DeleteStream = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.partner.aistreams.v1alpha1.AIStreams/DeleteStream',
            google.partner.aistreams.v1alpha1.aistreams_pb2.DeleteStreamRequest,
            google.longrunning.operations_pb2.Operation,
        )
