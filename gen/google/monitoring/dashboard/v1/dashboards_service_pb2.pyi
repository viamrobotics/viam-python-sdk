"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.monitoring.dashboard.v1.dashboard_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CreateDashboardRequest(google.protobuf.message.Message):
    """The `CreateDashboard` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    DASHBOARD_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The project on which to execute the request. The format is:

        projects/[PROJECT_ID_OR_NUMBER]

    The `[PROJECT_ID_OR_NUMBER]` must match the dashboard resource name.
    """

    @property
    def dashboard(self) -> google.monitoring.dashboard.v1.dashboard_pb2.Dashboard:
        """Required. The initial dashboard specification."""
        pass
    validate_only: builtins.bool = ...
    """If set, validate the request and preview the review, but do not actually
    save it.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        dashboard : typing.Optional[google.monitoring.dashboard.v1.dashboard_pb2.Dashboard] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dashboard",b"dashboard"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboard",b"dashboard","parent",b"parent","validate_only",b"validate_only"]) -> None: ...
global___CreateDashboardRequest = CreateDashboardRequest

class ListDashboardsRequest(google.protobuf.message.Message):
    """The `ListDashboards` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The scope of the dashboards to list. The format is:

        projects/[PROJECT_ID_OR_NUMBER]
    """

    page_size: builtins.int = ...
    """A positive number that is the maximum number of results to return.
    If unspecified, a default of 1000 is used.
    """

    page_token: typing.Text = ...
    """If this field is not empty then it must contain the `nextPageToken` value
    returned by a previous call to this method.  Using this field causes the
    method to return additional results from the previous method call.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListDashboardsRequest = ListDashboardsRequest

class ListDashboardsResponse(google.protobuf.message.Message):
    """The `ListDashboards` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DASHBOARDS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def dashboards(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.monitoring.dashboard.v1.dashboard_pb2.Dashboard]:
        """The list of requested dashboards."""
        pass
    next_page_token: typing.Text = ...
    """If there are more results than have been returned, then this field is set
    to a non-empty value.  To see the additional results,
    use that value as `page_token` in the next call to this method.
    """

    def __init__(self,
        *,
        dashboards : typing.Optional[typing.Iterable[google.monitoring.dashboard.v1.dashboard_pb2.Dashboard]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboards",b"dashboards","next_page_token",b"next_page_token"]) -> None: ...
global___ListDashboardsResponse = ListDashboardsResponse

class GetDashboardRequest(google.protobuf.message.Message):
    """The `GetDashboard` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of the Dashboard. The format is one of:

     -  `dashboards/[DASHBOARD_ID]` (for system dashboards)
     -  `projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID]`
          (for custom dashboards).
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetDashboardRequest = GetDashboardRequest

class DeleteDashboardRequest(google.protobuf.message.Message):
    """The `DeleteDashboard` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of the Dashboard. The format is:

        projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID]
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteDashboardRequest = DeleteDashboardRequest

class UpdateDashboardRequest(google.protobuf.message.Message):
    """The `UpdateDashboard` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DASHBOARD_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    @property
    def dashboard(self) -> google.monitoring.dashboard.v1.dashboard_pb2.Dashboard:
        """Required. The dashboard that will replace the existing dashboard."""
        pass
    validate_only: builtins.bool = ...
    """If set, validate the request and preview the review, but do not actually
    save it.
    """

    def __init__(self,
        *,
        dashboard : typing.Optional[google.monitoring.dashboard.v1.dashboard_pb2.Dashboard] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dashboard",b"dashboard"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dashboard",b"dashboard","validate_only",b"validate_only"]) -> None: ...
global___UpdateDashboardRequest = UpdateDashboardRequest
