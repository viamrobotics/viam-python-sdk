# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/monitoring/v3/group_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.monitored_resource_pb2
import google.api.resource_pb2
import google.monitoring.v3.common_pb2
import google.monitoring.v3.group_pb2
import google.protobuf.empty_pb2
import google.monitoring.v3.group_service_pb2


class GroupServiceBase(abc.ABC):

    @abc.abstractmethod
    async def ListGroups(self, stream: 'grpclib.server.Stream[google.monitoring.v3.group_service_pb2.ListGroupsRequest, google.monitoring.v3.group_service_pb2.ListGroupsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetGroup(self, stream: 'grpclib.server.Stream[google.monitoring.v3.group_service_pb2.GetGroupRequest, google.monitoring.v3.group_pb2.Group]') -> None:
        pass

    @abc.abstractmethod
    async def CreateGroup(self, stream: 'grpclib.server.Stream[google.monitoring.v3.group_service_pb2.CreateGroupRequest, google.monitoring.v3.group_pb2.Group]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateGroup(self, stream: 'grpclib.server.Stream[google.monitoring.v3.group_service_pb2.UpdateGroupRequest, google.monitoring.v3.group_pb2.Group]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteGroup(self, stream: 'grpclib.server.Stream[google.monitoring.v3.group_service_pb2.DeleteGroupRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def ListGroupMembers(self, stream: 'grpclib.server.Stream[google.monitoring.v3.group_service_pb2.ListGroupMembersRequest, google.monitoring.v3.group_service_pb2.ListGroupMembersResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.monitoring.v3.GroupService/ListGroups': grpclib.const.Handler(
                self.ListGroups,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.monitoring.v3.group_service_pb2.ListGroupsRequest,
                google.monitoring.v3.group_service_pb2.ListGroupsResponse,
            ),
            '/google.monitoring.v3.GroupService/GetGroup': grpclib.const.Handler(
                self.GetGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.monitoring.v3.group_service_pb2.GetGroupRequest,
                google.monitoring.v3.group_pb2.Group,
            ),
            '/google.monitoring.v3.GroupService/CreateGroup': grpclib.const.Handler(
                self.CreateGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.monitoring.v3.group_service_pb2.CreateGroupRequest,
                google.monitoring.v3.group_pb2.Group,
            ),
            '/google.monitoring.v3.GroupService/UpdateGroup': grpclib.const.Handler(
                self.UpdateGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.monitoring.v3.group_service_pb2.UpdateGroupRequest,
                google.monitoring.v3.group_pb2.Group,
            ),
            '/google.monitoring.v3.GroupService/DeleteGroup': grpclib.const.Handler(
                self.DeleteGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.monitoring.v3.group_service_pb2.DeleteGroupRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.monitoring.v3.GroupService/ListGroupMembers': grpclib.const.Handler(
                self.ListGroupMembers,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.monitoring.v3.group_service_pb2.ListGroupMembersRequest,
                google.monitoring.v3.group_service_pb2.ListGroupMembersResponse,
            ),
        }


class GroupServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListGroups = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.monitoring.v3.GroupService/ListGroups',
            google.monitoring.v3.group_service_pb2.ListGroupsRequest,
            google.monitoring.v3.group_service_pb2.ListGroupsResponse,
        )
        self.GetGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.monitoring.v3.GroupService/GetGroup',
            google.monitoring.v3.group_service_pb2.GetGroupRequest,
            google.monitoring.v3.group_pb2.Group,
        )
        self.CreateGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.monitoring.v3.GroupService/CreateGroup',
            google.monitoring.v3.group_service_pb2.CreateGroupRequest,
            google.monitoring.v3.group_pb2.Group,
        )
        self.UpdateGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.monitoring.v3.GroupService/UpdateGroup',
            google.monitoring.v3.group_service_pb2.UpdateGroupRequest,
            google.monitoring.v3.group_pb2.Group,
        )
        self.DeleteGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.monitoring.v3.GroupService/DeleteGroup',
            google.monitoring.v3.group_service_pb2.DeleteGroupRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.ListGroupMembers = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.monitoring.v3.GroupService/ListGroupMembers',
            google.monitoring.v3.group_service_pb2.ListGroupMembersRequest,
            google.monitoring.v3.group_service_pb2.ListGroupMembersResponse,
        )
