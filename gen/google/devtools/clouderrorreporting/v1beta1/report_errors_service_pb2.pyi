"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.devtools.clouderrorreporting.v1beta1.common_pb2
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ReportErrorEventRequest(google.protobuf.message.Message):
    """A request for reporting an individual error event."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_NAME_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    project_name: typing.Text = ...
    """Required. The resource name of the Google Cloud Platform project. Written
    as `projects/{projectId}`, where `{projectId}` is the
    [Google Cloud Platform project
    ID](https://support.google.com/cloud/answer/6158840).

    Example: // `projects/my-project-123`.
    """

    @property
    def event(self) -> global___ReportedErrorEvent:
        """Required. The error event to be reported."""
        pass
    def __init__(self,
        *,
        project_name : typing.Text = ...,
        event : typing.Optional[global___ReportedErrorEvent] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event",b"event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event",b"event","project_name",b"project_name"]) -> None: ...
global___ReportErrorEventRequest = ReportErrorEventRequest

class ReportErrorEventResponse(google.protobuf.message.Message):
    """Response for reporting an individual error event.
    Data may be added to this message in the future.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ReportErrorEventResponse = ReportErrorEventResponse

class ReportedErrorEvent(google.protobuf.message.Message):
    """An error event which is reported to the Error Reporting system."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EVENT_TIME_FIELD_NUMBER: builtins.int
    SERVICE_CONTEXT_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def event_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Optional. Time when the event occurred.
        If not provided, the time when the event was received by the
        Error Reporting system will be used.
        """
        pass
    @property
    def service_context(self) -> google.devtools.clouderrorreporting.v1beta1.common_pb2.ServiceContext:
        """Required. The service context in which this error has occurred."""
        pass
    message: typing.Text = ...
    """Required. The error message.
    If no `context.reportLocation` is provided, the message must contain a
    header (typically consisting of the exception type name and an error
    message) and an exception stack trace in one of the supported programming
    languages and formats.
    Supported languages are Java, Python, JavaScript, Ruby, C#, PHP, and Go.
    Supported stack trace formats are:

    * **Java**: Must be the return value of
    [`Throwable.printStackTrace()`](https://docs.oracle.com/javase/7/docs/api/java/lang/Throwable.html#printStackTrace%28%29).
    * **Python**: Must be the return value of
    [`traceback.format_exc()`](https://docs.python.org/2/library/traceback.html#traceback.format_exc).
    * **JavaScript**: Must be the value of
    [`error.stack`](https://github.com/v8/v8/wiki/Stack-Trace-API) as returned
    by V8.
    * **Ruby**: Must contain frames returned by
    [`Exception.backtrace`](https://ruby-doc.org/core-2.2.0/Exception.html#method-i-backtrace).
    * **C#**: Must be the return value of
    [`Exception.ToString()`](https://msdn.microsoft.com/en-us/library/system.exception.tostring.aspx).
    * **PHP**: Must start with `PHP (Notice|Parse error|Fatal error|Warning)`
    and contain the result of
    [`(string)$exception`](http://php.net/manual/en/exception.tostring.php).
    * **Go**: Must be the return value of
    [`runtime.Stack()`](https://golang.org/pkg/runtime/debug/#Stack).
    """

    @property
    def context(self) -> google.devtools.clouderrorreporting.v1beta1.common_pb2.ErrorContext:
        """Optional. A description of the context in which the error occurred."""
        pass
    def __init__(self,
        *,
        event_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        service_context : typing.Optional[google.devtools.clouderrorreporting.v1beta1.common_pb2.ServiceContext] = ...,
        message : typing.Text = ...,
        context : typing.Optional[google.devtools.clouderrorreporting.v1beta1.common_pb2.ErrorContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["context",b"context","event_time",b"event_time","service_context",b"service_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["context",b"context","event_time",b"event_time","message",b"message","service_context",b"service_context"]) -> None: ...
global___ReportedErrorEvent = ReportedErrorEvent
