"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _ResolutionStatus:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ResolutionStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ResolutionStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    RESOLUTION_STATUS_UNSPECIFIED: ResolutionStatus.ValueType = ...  # 0
    """Status is unknown. When left unspecified in requests, it is treated like
    OPEN.
    """

    OPEN: ResolutionStatus.ValueType = ...  # 1
    """The error group is not being addressed. This is the default for
    new groups. It is also used for errors re-occurring after marked RESOLVED.
    """

    ACKNOWLEDGED: ResolutionStatus.ValueType = ...  # 2
    """Error Group manually acknowledged, it can have an issue link attached."""

    RESOLVED: ResolutionStatus.ValueType = ...  # 3
    """Error Group manually resolved, more events for this group are not expected
    to occur.
    """

    MUTED: ResolutionStatus.ValueType = ...  # 4
    """The error group is muted and excluded by default on group stats requests."""

class ResolutionStatus(_ResolutionStatus, metaclass=_ResolutionStatusEnumTypeWrapper):
    """Resolution status of an error group."""
    pass

RESOLUTION_STATUS_UNSPECIFIED: ResolutionStatus.ValueType = ...  # 0
"""Status is unknown. When left unspecified in requests, it is treated like
OPEN.
"""

OPEN: ResolutionStatus.ValueType = ...  # 1
"""The error group is not being addressed. This is the default for
new groups. It is also used for errors re-occurring after marked RESOLVED.
"""

ACKNOWLEDGED: ResolutionStatus.ValueType = ...  # 2
"""Error Group manually acknowledged, it can have an issue link attached."""

RESOLVED: ResolutionStatus.ValueType = ...  # 3
"""Error Group manually resolved, more events for this group are not expected
to occur.
"""

MUTED: ResolutionStatus.ValueType = ...  # 4
"""The error group is muted and excluded by default on group stats requests."""

global___ResolutionStatus = ResolutionStatus


class ErrorGroup(google.protobuf.message.Message):
    """Description of a group of similar error events."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    GROUP_ID_FIELD_NUMBER: builtins.int
    TRACKING_ISSUES_FIELD_NUMBER: builtins.int
    RESOLUTION_STATUS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The group resource name.
    Example: <code>projects/my-project-123/groups/CNSgkpnppqKCUw</code>
    """

    group_id: typing.Text = ...
    """Group IDs are unique for a given project. If the same kind of error
    occurs in different service contexts, it will receive the same group ID.
    """

    @property
    def tracking_issues(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TrackingIssue]:
        """Associated tracking issues."""
        pass
    resolution_status: global___ResolutionStatus.ValueType = ...
    """Error group's resolution status.
    An unspecified resolution status will be interpreted as OPEN
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        group_id : typing.Text = ...,
        tracking_issues : typing.Optional[typing.Iterable[global___TrackingIssue]] = ...,
        resolution_status : global___ResolutionStatus.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["group_id",b"group_id","name",b"name","resolution_status",b"resolution_status","tracking_issues",b"tracking_issues"]) -> None: ...
global___ErrorGroup = ErrorGroup

class TrackingIssue(google.protobuf.message.Message):
    """Information related to tracking the progress on resolving the error."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URL_FIELD_NUMBER: builtins.int
    url: typing.Text = ...
    """A URL pointing to a related entry in an issue tracking system.
    Example: `https://github.com/user/project/issues/4`
    """

    def __init__(self,
        *,
        url : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["url",b"url"]) -> None: ...
global___TrackingIssue = TrackingIssue

class ErrorEvent(google.protobuf.message.Message):
    """An error event which is returned by the Error Reporting system."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EVENT_TIME_FIELD_NUMBER: builtins.int
    SERVICE_CONTEXT_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def event_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when the event occurred as provided in the error report.
        If the report did not contain a timestamp, the time the error was received
        by the Error Reporting system is used.
        """
        pass
    @property
    def service_context(self) -> global___ServiceContext:
        """The `ServiceContext` for which this error was reported."""
        pass
    message: typing.Text = ...
    """The stack trace that was reported or logged by the service."""

    @property
    def context(self) -> global___ErrorContext:
        """Data about the context in which the error occurred."""
        pass
    def __init__(self,
        *,
        event_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        service_context : typing.Optional[global___ServiceContext] = ...,
        message : typing.Text = ...,
        context : typing.Optional[global___ErrorContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["context",b"context","event_time",b"event_time","service_context",b"service_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["context",b"context","event_time",b"event_time","message",b"message","service_context",b"service_context"]) -> None: ...
global___ErrorEvent = ErrorEvent

class ServiceContext(google.protobuf.message.Message):
    """Describes a running service that sends errors.
    Its version changes over time and multiple versions can run in parallel.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    RESOURCE_TYPE_FIELD_NUMBER: builtins.int
    service: typing.Text = ...
    """An identifier of the service, such as the name of the
    executable, job, or Google App Engine service name. This field is expected
    to have a low number of values that are relatively stable over time, as
    opposed to `version`, which can be changed whenever new code is deployed.

    Contains the service name for error reports extracted from Google
    App Engine logs or `default` if the App Engine default service is used.
    """

    version: typing.Text = ...
    """Represents the source code version that the developer provided,
    which could represent a version label or a Git SHA-1 hash, for example.
    For App Engine standard environment, the version is set to the version of
    the app.
    """

    resource_type: typing.Text = ...
    """Type of the MonitoredResource. List of possible values:
    https://cloud.google.com/monitoring/api/resources

    Value is set automatically for incoming errors and must not be set when
    reporting errors.
    """

    def __init__(self,
        *,
        service : typing.Text = ...,
        version : typing.Text = ...,
        resource_type : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_type",b"resource_type","service",b"service","version",b"version"]) -> None: ...
global___ServiceContext = ServiceContext

class ErrorContext(google.protobuf.message.Message):
    """A description of the context in which an error occurred.
    This data should be provided by the application when reporting an error,
    unless the
    error report has been generated automatically from Google App Engine logs.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HTTP_REQUEST_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    REPORT_LOCATION_FIELD_NUMBER: builtins.int
    @property
    def http_request(self) -> global___HttpRequestContext:
        """The HTTP request which was processed when the error was
        triggered.
        """
        pass
    user: typing.Text = ...
    """The user who caused or was affected by the crash.
    This can be a user ID, an email address, or an arbitrary token that
    uniquely identifies the user.
    When sending an error report, leave this field empty if the user was not
    logged in. In this case the
    Error Reporting system will use other data, such as remote IP address, to
    distinguish affected users. See `affected_users_count` in
    `ErrorGroupStats`.
    """

    @property
    def report_location(self) -> global___SourceLocation:
        """The location in the source code where the decision was made to
        report the error, usually the place where it was logged.
        For a logged exception this would be the source line where the
        exception is logged, usually close to the place where it was
        caught.
        """
        pass
    def __init__(self,
        *,
        http_request : typing.Optional[global___HttpRequestContext] = ...,
        user : typing.Text = ...,
        report_location : typing.Optional[global___SourceLocation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["http_request",b"http_request","report_location",b"report_location"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["http_request",b"http_request","report_location",b"report_location","user",b"user"]) -> None: ...
global___ErrorContext = ErrorContext

class HttpRequestContext(google.protobuf.message.Message):
    """HTTP request data that is related to a reported error.
    This data should be provided by the application when reporting an error,
    unless the
    error report has been generated automatically from Google App Engine logs.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    METHOD_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    USER_AGENT_FIELD_NUMBER: builtins.int
    REFERRER_FIELD_NUMBER: builtins.int
    RESPONSE_STATUS_CODE_FIELD_NUMBER: builtins.int
    REMOTE_IP_FIELD_NUMBER: builtins.int
    method: typing.Text = ...
    """The type of HTTP request, such as `GET`, `POST`, etc."""

    url: typing.Text = ...
    """The URL of the request."""

    user_agent: typing.Text = ...
    """The user agent information that is provided with the request."""

    referrer: typing.Text = ...
    """The referrer information that is provided with the request."""

    response_status_code: builtins.int = ...
    """The HTTP response status code for the request."""

    remote_ip: typing.Text = ...
    """The IP address from which the request originated.
    This can be IPv4, IPv6, or a token which is derived from the
    IP address, depending on the data that has been provided
    in the error report.
    """

    def __init__(self,
        *,
        method : typing.Text = ...,
        url : typing.Text = ...,
        user_agent : typing.Text = ...,
        referrer : typing.Text = ...,
        response_status_code : builtins.int = ...,
        remote_ip : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["method",b"method","referrer",b"referrer","remote_ip",b"remote_ip","response_status_code",b"response_status_code","url",b"url","user_agent",b"user_agent"]) -> None: ...
global___HttpRequestContext = HttpRequestContext

class SourceLocation(google.protobuf.message.Message):
    """Indicates a location in the source code of the service for which errors are
    reported. `functionName` must be provided by the application when reporting
    an error, unless the error report contains a `message` with a supported
    exception stack trace. All fields are optional for the later case.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILE_PATH_FIELD_NUMBER: builtins.int
    LINE_NUMBER_FIELD_NUMBER: builtins.int
    FUNCTION_NAME_FIELD_NUMBER: builtins.int
    file_path: typing.Text = ...
    """The source code filename, which can include a truncated relative
    path, or a full path from a production machine.
    """

    line_number: builtins.int = ...
    """1-based. 0 indicates that the line number is unknown."""

    function_name: typing.Text = ...
    """Human-readable name of a function or method.
    The value can include optional context like the class or package name.
    For example, `my.package.MyClass.method` in case of Java.
    """

    def __init__(self,
        *,
        file_path : typing.Text = ...,
        line_number : builtins.int = ...,
        function_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_path",b"file_path","function_name",b"function_name","line_number",b"line_number"]) -> None: ...
global___SourceLocation = SourceLocation
