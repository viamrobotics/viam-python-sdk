"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class File(google.protobuf.message.Message):
    """The metadata for a file or an archive file entry."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _HashType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _HashTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HashType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        HASH_TYPE_UNSPECIFIED: File.HashType.ValueType = ...  # 0
        """Unknown"""

        MD5: File.HashType.ValueType = ...  # 1
        """MD5"""

        SHA1: File.HashType.ValueType = ...  # 2
        """SHA-1"""

        SHA256: File.HashType.ValueType = ...  # 3
        """SHA-256"""

    class HashType(_HashType, metaclass=_HashTypeEnumTypeWrapper):
        """If known, the hash function used to compute this digest."""
        pass

    HASH_TYPE_UNSPECIFIED: File.HashType.ValueType = ...  # 0
    """Unknown"""

    MD5: File.HashType.ValueType = ...  # 1
    """MD5"""

    SHA1: File.HashType.ValueType = ...  # 2
    """SHA-1"""

    SHA256: File.HashType.ValueType = ...  # 3
    """SHA-256"""


    UID_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    CONTENT_TYPE_FIELD_NUMBER: builtins.int
    ARCHIVE_ENTRY_FIELD_NUMBER: builtins.int
    CONTENT_VIEWER_FIELD_NUMBER: builtins.int
    HIDDEN_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DIGEST_FIELD_NUMBER: builtins.int
    HASH_TYPE_FIELD_NUMBER: builtins.int
    uid: typing.Text = ...
    """The identifier of the file or archive entry.
    User-provided, must be unique for the repeated field it is in. When an
    Append RPC is called with a Files field populated, if a File already exists
    with this ID, that File will be overwritten with the new File proto.
    """

    uri: typing.Text = ...
    """The URI of a file.
    This could also be the URI of an entire archive.
    Most log data doesn't need to be stored forever, so a ttl is suggested.
    Note that if you ever move or delete the file at this URI, the link from
    the server will be broken.
    """

    @property
    def length(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """The length of the file in bytes.  Allows the filesize to be shown in the
        UI.  Omit if file is still being written or length is not known.  This
        could also be the length of an entire archive.
        """
        pass
    content_type: typing.Text = ...
    """The content-type (aka MIME-type) of the file.  This is sent to the web
    browser so it knows how to handle the file. (e.g. text/plain, image/jpeg,
    text/html, etc). For zip archives, use "application/zip".
    """

    @property
    def archive_entry(self) -> global___ArchiveEntry:
        """If the above path, length, and content_type are referring to an archive,
        and you wish to refer to a particular entry within that archive, put the
        particular archive entry data here.
        """
        pass
    content_viewer: typing.Text = ...
    """A url to a content display app/site for this file or archive entry."""

    hidden: builtins.bool = ...
    """Whether to hide this file or archive entry in the UI.  Defaults to false.
    A checkbox lets users see hidden files, but they're hidden by default.
    """

    description: typing.Text = ...
    """A short description of what this file or archive entry contains. This
    description should help someone viewing the list of these files to
    understand the purpose of this file and what they would want to view it
    for.
    """

    digest: typing.Text = ...
    """The digest of this file in hexadecimal-like string if known."""

    hash_type: global___File.HashType.ValueType = ...
    """The algorithm corresponding to the digest if known."""

    def __init__(self,
        *,
        uid : typing.Text = ...,
        uri : typing.Text = ...,
        length : typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        content_type : typing.Text = ...,
        archive_entry : typing.Optional[global___ArchiveEntry] = ...,
        content_viewer : typing.Text = ...,
        hidden : builtins.bool = ...,
        description : typing.Text = ...,
        digest : typing.Text = ...,
        hash_type : global___File.HashType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["archive_entry",b"archive_entry","length",b"length"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["archive_entry",b"archive_entry","content_type",b"content_type","content_viewer",b"content_viewer","description",b"description","digest",b"digest","hash_type",b"hash_type","hidden",b"hidden","length",b"length","uid",b"uid","uri",b"uri"]) -> None: ...
global___File = File

class ArchiveEntry(google.protobuf.message.Message):
    """Information specific to an entry in an archive."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PATH_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    CONTENT_TYPE_FIELD_NUMBER: builtins.int
    path: typing.Text = ...
    """The relative path of the entry within the archive."""

    @property
    def length(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """The uncompressed length of the archive entry in bytes.  Allows the entry
        size to be shown in the UI.  Omit if the length is not known.
        """
        pass
    content_type: typing.Text = ...
    """The content-type (aka MIME-type) of the archive entry. (e.g. text/plain,
    image/jpeg, text/html, etc). This is sent to the web browser so it knows
    how to handle the entry.
    """

    def __init__(self,
        *,
        path : typing.Text = ...,
        length : typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        content_type : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["length",b"length"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["content_type",b"content_type","length",b"length","path",b"path"]) -> None: ...
global___ArchiveEntry = ArchiveEntry
