"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _Language:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _LanguageEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Language.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    LANGUAGE_UNSPECIFIED: Language.ValueType = ...  # 0
    """Language unspecified or not listed here."""

    NONE: Language.ValueType = ...  # 1
    """Not related to any particular language"""

    ANDROID: Language.ValueType = ...  # 2
    """Android"""

    AS: Language.ValueType = ...  # 3
    """ActionScript (Flash)"""

    CC: Language.ValueType = ...  # 4
    """C++ or C"""

    CSS: Language.ValueType = ...  # 5
    """Cascading-Style-Sheets"""

    DART: Language.ValueType = ...  # 6
    """Dart"""

    GO: Language.ValueType = ...  # 7
    """Go"""

    GWT: Language.ValueType = ...  # 8
    """Google-Web-Toolkit"""

    HASKELL: Language.ValueType = ...  # 9
    """Haskell"""

    JAVA: Language.ValueType = ...  # 10
    """Java"""

    JS: Language.ValueType = ...  # 11
    """Javascript"""

    LISP: Language.ValueType = ...  # 12
    """Lisp"""

    OBJC: Language.ValueType = ...  # 13
    """Objective-C"""

    PY: Language.ValueType = ...  # 14
    """Python"""

    SH: Language.ValueType = ...  # 15
    """Shell (Typically Bash)"""

    SWIFT: Language.ValueType = ...  # 16
    """Swift"""

    TS: Language.ValueType = ...  # 18
    """Typescript"""

    WEB: Language.ValueType = ...  # 19
    """Webtesting"""

    SCALA: Language.ValueType = ...  # 20
    """Scala"""

    PROTO: Language.ValueType = ...  # 21
    """Protocol Buffer"""

    XML: Language.ValueType = ...  # 22
    """Extensible Markup Language"""

class Language(_Language, metaclass=_LanguageEnumTypeWrapper):
    """These correspond to the prefix of the rule name. Eg cc_test has language CC."""
    pass

LANGUAGE_UNSPECIFIED: Language.ValueType = ...  # 0
"""Language unspecified or not listed here."""

NONE: Language.ValueType = ...  # 1
"""Not related to any particular language"""

ANDROID: Language.ValueType = ...  # 2
"""Android"""

AS: Language.ValueType = ...  # 3
"""ActionScript (Flash)"""

CC: Language.ValueType = ...  # 4
"""C++ or C"""

CSS: Language.ValueType = ...  # 5
"""Cascading-Style-Sheets"""

DART: Language.ValueType = ...  # 6
"""Dart"""

GO: Language.ValueType = ...  # 7
"""Go"""

GWT: Language.ValueType = ...  # 8
"""Google-Web-Toolkit"""

HASKELL: Language.ValueType = ...  # 9
"""Haskell"""

JAVA: Language.ValueType = ...  # 10
"""Java"""

JS: Language.ValueType = ...  # 11
"""Javascript"""

LISP: Language.ValueType = ...  # 12
"""Lisp"""

OBJC: Language.ValueType = ...  # 13
"""Objective-C"""

PY: Language.ValueType = ...  # 14
"""Python"""

SH: Language.ValueType = ...  # 15
"""Shell (Typically Bash)"""

SWIFT: Language.ValueType = ...  # 16
"""Swift"""

TS: Language.ValueType = ...  # 18
"""Typescript"""

WEB: Language.ValueType = ...  # 19
"""Webtesting"""

SCALA: Language.ValueType = ...  # 20
"""Scala"""

PROTO: Language.ValueType = ...  # 21
"""Protocol Buffer"""

XML: Language.ValueType = ...  # 22
"""Extensible Markup Language"""

global___Language = Language


class _Status:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    STATUS_UNSPECIFIED: Status.ValueType = ...  # 0
    """The implicit default enum value. Should never be set."""

    BUILDING: Status.ValueType = ...  # 1
    """Displays as "Building". Means the target is compiling, linking, etc."""

    BUILT: Status.ValueType = ...  # 2
    """Displays as "Built". Means the target was built successfully.
    If testing was requested, it should never reach this status: it should go
    straight from BUILDING to TESTING.
    """

    FAILED_TO_BUILD: Status.ValueType = ...  # 3
    """Displays as "Broken". Means build failure such as compile error."""

    TESTING: Status.ValueType = ...  # 4
    """Displays as "Testing". Means the test is running."""

    PASSED: Status.ValueType = ...  # 5
    """Displays as "Passed". Means the test was run and passed."""

    FAILED: Status.ValueType = ...  # 6
    """Displays as "Failed". Means the test was run and failed."""

    TIMED_OUT: Status.ValueType = ...  # 7
    """Displays as "Timed out". Means the test didn't finish in time."""

    CANCELLED: Status.ValueType = ...  # 8
    """Displays as "Cancelled". Means the build or test was cancelled.
    E.g. User hit control-C.
    """

    TOOL_FAILED: Status.ValueType = ...  # 9
    """Displays as "Tool Failed". Means the build or test had internal tool
    failure.
    """

    INCOMPLETE: Status.ValueType = ...  # 10
    """Displays as "Incomplete". Means the build or test did not complete.  This
    might happen when a build breakage or test failure causes the tool to stop
    trying to build anything more or run any more tests, with the default
    bazel --nokeep_going option or the --notest_keep_going option.
    """

    FLAKY: Status.ValueType = ...  # 11
    """Displays as "Flaky". Means the aggregate status contains some runs that
    were successful, and some that were not.
    """

    UNKNOWN: Status.ValueType = ...  # 12
    """Displays as "Unknown". Means the tool uploading to the server died
    mid-upload or does not know the state.
    """

    SKIPPED: Status.ValueType = ...  # 13
    """Displays as "Skipped". Means building and testing were skipped.
    (E.g. Restricted to a different configuration.)
    """

class Status(_Status, metaclass=_StatusEnumTypeWrapper):
    """Status of a resource."""
    pass

STATUS_UNSPECIFIED: Status.ValueType = ...  # 0
"""The implicit default enum value. Should never be set."""

BUILDING: Status.ValueType = ...  # 1
"""Displays as "Building". Means the target is compiling, linking, etc."""

BUILT: Status.ValueType = ...  # 2
"""Displays as "Built". Means the target was built successfully.
If testing was requested, it should never reach this status: it should go
straight from BUILDING to TESTING.
"""

FAILED_TO_BUILD: Status.ValueType = ...  # 3
"""Displays as "Broken". Means build failure such as compile error."""

TESTING: Status.ValueType = ...  # 4
"""Displays as "Testing". Means the test is running."""

PASSED: Status.ValueType = ...  # 5
"""Displays as "Passed". Means the test was run and passed."""

FAILED: Status.ValueType = ...  # 6
"""Displays as "Failed". Means the test was run and failed."""

TIMED_OUT: Status.ValueType = ...  # 7
"""Displays as "Timed out". Means the test didn't finish in time."""

CANCELLED: Status.ValueType = ...  # 8
"""Displays as "Cancelled". Means the build or test was cancelled.
E.g. User hit control-C.
"""

TOOL_FAILED: Status.ValueType = ...  # 9
"""Displays as "Tool Failed". Means the build or test had internal tool
failure.
"""

INCOMPLETE: Status.ValueType = ...  # 10
"""Displays as "Incomplete". Means the build or test did not complete.  This
might happen when a build breakage or test failure causes the tool to stop
trying to build anything more or run any more tests, with the default
bazel --nokeep_going option or the --notest_keep_going option.
"""

FLAKY: Status.ValueType = ...  # 11
"""Displays as "Flaky". Means the aggregate status contains some runs that
were successful, and some that were not.
"""

UNKNOWN: Status.ValueType = ...  # 12
"""Displays as "Unknown". Means the tool uploading to the server died
mid-upload or does not know the state.
"""

SKIPPED: Status.ValueType = ...  # 13
"""Displays as "Skipped". Means building and testing were skipped.
(E.g. Restricted to a different configuration.)
"""

global___Status = Status


class _UploadStatus:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _UploadStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UploadStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UPLOAD_STATUS_UNSPECIFIED: UploadStatus.ValueType = ...  # 0
    """The implicit default enum value. Should never be set."""

    UPLOADING: UploadStatus.ValueType = ...  # 1
    """The invocation is still uploading to the ResultStore."""

    POST_PROCESSING: UploadStatus.ValueType = ...  # 2
    """The invocation upload is complete. The ResultStore is still post-processing
    the invocation.
    """

    IMMUTABLE: UploadStatus.ValueType = ...  # 3
    """All post-processing is complete, and the invocation is now immutable."""

class UploadStatus(_UploadStatus, metaclass=_UploadStatusEnumTypeWrapper):
    """Indicates the upload status of the invocation, whether it is
    post-processing, or immutable, etc.
    """
    pass

UPLOAD_STATUS_UNSPECIFIED: UploadStatus.ValueType = ...  # 0
"""The implicit default enum value. Should never be set."""

UPLOADING: UploadStatus.ValueType = ...  # 1
"""The invocation is still uploading to the ResultStore."""

POST_PROCESSING: UploadStatus.ValueType = ...  # 2
"""The invocation upload is complete. The ResultStore is still post-processing
the invocation.
"""

IMMUTABLE: UploadStatus.ValueType = ...  # 3
"""All post-processing is complete, and the invocation is now immutable."""

global___UploadStatus = UploadStatus


class StatusAttributes(google.protobuf.message.Message):
    """Describes the status of a resource in both enum and string form.
    Only use description when conveying additional info not captured in the enum
    name.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATUS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    status: global___Status.ValueType = ...
    """Enum representation of the status."""

    description: typing.Text = ...
    """A longer description about the status."""

    def __init__(self,
        *,
        status : global___Status.ValueType = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","status",b"status"]) -> None: ...
global___StatusAttributes = StatusAttributes

class Property(google.protobuf.message.Message):
    """A generic key-value property definition."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """The key."""

    value: typing.Text = ...
    """The value."""

    def __init__(self,
        *,
        key : typing.Text = ...,
        value : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...
global___Property = Property

class Timing(google.protobuf.message.Message):
    """The timing of a particular Invocation, Action, etc. The start_time is
    specified, stop time can be calculated by adding duration to start_time.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_TIME_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the resource started running. This is in UTC Epoch time."""
        pass
    @property
    def duration(self) -> google.protobuf.duration_pb2.Duration:
        """The duration for which the resource ran."""
        pass
    def __init__(self,
        *,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["duration",b"duration","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["duration",b"duration","start_time",b"start_time"]) -> None: ...
global___Timing = Timing

class Dependency(google.protobuf.message.Message):
    """Represents a dependency of a resource on another resource. This can be used
    to define a graph or a workflow paradigm through resources.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    CONFIGURED_TARGET_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    target: typing.Text = ...
    """The name of a target.  Its format must be:
    invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
    This must point to an target under the same invocation.
    """

    configured_target: typing.Text = ...
    """The name of a configured target.  Its format must be:
    invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${url_encode(CONFIG_ID)}
    This must point to an configured target under the same invocation.
    """

    action: typing.Text = ...
    """The name of an action.  Its format must be:
    invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${url_encode(CONFIG_ID)}/actions/${url_encode(ACTION_ID)}
    This must point to an action under the same invocation.
    """

    label: typing.Text = ...
    """A label describing this dependency.
    The label "Root Cause" is handled specially. It is used to point to the
    exact resource that caused a resource to fail.
    """

    def __init__(self,
        *,
        target : typing.Text = ...,
        configured_target : typing.Text = ...,
        action : typing.Text = ...,
        label : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action",b"action","configured_target",b"configured_target","resource",b"resource","target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","configured_target",b"configured_target","label",b"label","resource",b"resource","target",b"target"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["resource",b"resource"]) -> typing.Optional[typing_extensions.Literal["target","configured_target","action"]]: ...
global___Dependency = Dependency
