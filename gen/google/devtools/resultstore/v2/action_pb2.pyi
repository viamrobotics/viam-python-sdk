"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.devtools.resultstore.v2.common_pb2
import google.devtools.resultstore.v2.coverage_pb2
import google.devtools.resultstore.v2.file_pb2
import google.devtools.resultstore.v2.file_processing_error_pb2
import google.devtools.resultstore.v2.test_suite_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _ExecutionStrategy:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ExecutionStrategyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ExecutionStrategy.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    EXECUTION_STRATEGY_UNSPECIFIED: ExecutionStrategy.ValueType = ...  # 0
    """The action did not indicate how it was executed."""

    OTHER_ENVIRONMENT: ExecutionStrategy.ValueType = ...  # 1
    """The action was executed in some other form."""

    REMOTE_SERVICE: ExecutionStrategy.ValueType = ...  # 2
    """The action used a remote build service."""

    LOCAL_PARALLEL: ExecutionStrategy.ValueType = ...  # 3
    """The action was executed locally, in parallel with other actions."""

    LOCAL_SEQUENTIAL: ExecutionStrategy.ValueType = ...  # 4
    """The action was executed locally, without parallelism."""

class ExecutionStrategy(_ExecutionStrategy, metaclass=_ExecutionStrategyEnumTypeWrapper):
    """Indicates how/where this Action was executed."""
    pass

EXECUTION_STRATEGY_UNSPECIFIED: ExecutionStrategy.ValueType = ...  # 0
"""The action did not indicate how it was executed."""

OTHER_ENVIRONMENT: ExecutionStrategy.ValueType = ...  # 1
"""The action was executed in some other form."""

REMOTE_SERVICE: ExecutionStrategy.ValueType = ...  # 2
"""The action used a remote build service."""

LOCAL_PARALLEL: ExecutionStrategy.ValueType = ...  # 3
"""The action was executed locally, in parallel with other actions."""

LOCAL_SEQUENTIAL: ExecutionStrategy.ValueType = ...  # 4
"""The action was executed locally, without parallelism."""

global___ExecutionStrategy = ExecutionStrategy


class _TestCaching:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _TestCachingEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TestCaching.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TEST_CACHING_UNSPECIFIED: TestCaching.ValueType = ...  # 0
    """The implicit default enum value. Should never be set."""

    LOCAL_CACHE_HIT: TestCaching.ValueType = ...  # 1
    """The test result was found in a local cache, so it wasn't run again."""

    REMOTE_CACHE_HIT: TestCaching.ValueType = ...  # 2
    """The test result was found in a remote cache, so it wasn't run again."""

    CACHE_MISS: TestCaching.ValueType = ...  # 3
    """The test result was not found in any cache, so it had to be run again."""

class TestCaching(_TestCaching, metaclass=_TestCachingEnumTypeWrapper):
    """Most build systems cache build results to speed up incremental builds.
    Some also cache test results too. This indicates whether the test results
    were found in a cache, and where that cache was located.
    """
    pass

TEST_CACHING_UNSPECIFIED: TestCaching.ValueType = ...  # 0
"""The implicit default enum value. Should never be set."""

LOCAL_CACHE_HIT: TestCaching.ValueType = ...  # 1
"""The test result was found in a local cache, so it wasn't run again."""

REMOTE_CACHE_HIT: TestCaching.ValueType = ...  # 2
"""The test result was found in a remote cache, so it wasn't run again."""

CACHE_MISS: TestCaching.ValueType = ...  # 3
"""The test result was not found in any cache, so it had to be run again."""

global___TestCaching = TestCaching


class Action(google.protobuf.message.Message):
    """An action that happened as part of a configured target. This action could be
    a build, a test, or another type of action, as specified in action_type
    oneof.

    Each parent ConfiguredTarget resource should have at least one Action as its
    child resource before the invocation is finalized. For a simple build, at
    least one build action should be created to represent the build result, and
    at least one test action should be created to represent the test result, if
    any.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Id(google.protobuf.message.Message):
        """The resource ID components that identify the Action."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        INVOCATION_ID_FIELD_NUMBER: builtins.int
        TARGET_ID_FIELD_NUMBER: builtins.int
        CONFIGURATION_ID_FIELD_NUMBER: builtins.int
        ACTION_ID_FIELD_NUMBER: builtins.int
        invocation_id: typing.Text = ...
        """The Invocation ID."""

        target_id: typing.Text = ...
        """The Target ID."""

        configuration_id: typing.Text = ...
        """The Configuration ID."""

        action_id: typing.Text = ...
        """The Action ID."""

        def __init__(self,
            *,
            invocation_id : typing.Text = ...,
            target_id : typing.Text = ...,
            configuration_id : typing.Text = ...,
            action_id : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["action_id",b"action_id","configuration_id",b"configuration_id","invocation_id",b"invocation_id","target_id",b"target_id"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    STATUS_ATTRIBUTES_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    BUILD_ACTION_FIELD_NUMBER: builtins.int
    TEST_ACTION_FIELD_NUMBER: builtins.int
    ACTION_ATTRIBUTES_FIELD_NUMBER: builtins.int
    ACTION_DEPENDENCIES_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    FILES_FIELD_NUMBER: builtins.int
    FILE_SETS_FIELD_NUMBER: builtins.int
    COVERAGE_FIELD_NUMBER: builtins.int
    FILE_PROCESSING_ERRORS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name.  Its format must be:
    invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/url_encode(${CONFIG_ID})/actions/${url_encode(ACTION_ID)}

    See CreateActionRequest proto for more information.
    """

    @property
    def id(self) -> global___Action.Id:
        """The resource ID components that identify the Action. They must match the
        resource name after proper encoding.
        """
        pass
    @property
    def status_attributes(self) -> google.devtools.resultstore.v2.common_pb2.StatusAttributes:
        """The status of the action."""
        pass
    @property
    def timing(self) -> google.devtools.resultstore.v2.common_pb2.Timing:
        """The timing of the whole action. For TestActions, the start time may be
        before the test actually started, and the duration may last until after the
        test actually finished.
        """
        pass
    @property
    def build_action(self) -> global___BuildAction:
        """Used only when this action represents a build action."""
        pass
    @property
    def test_action(self) -> global___TestAction:
        """Only for test actions."""
        pass
    @property
    def action_attributes(self) -> global___ActionAttributes:
        """General attributes of the action."""
        pass
    @property
    def action_dependencies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.devtools.resultstore.v2.common_pb2.Dependency]:
        """A list of resources that this action depended upon. May be used to provide
        the cause of a build failure in the case of a failed build action.
        """
        pass
    @property
    def properties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.devtools.resultstore.v2.common_pb2.Property]:
        """Arbitrary name-value pairs.
        This is implemented as a multi-map. Multiple properties are allowed with
        the same key. Properties will be returned in lexicographical order by key.
        """
        pass
    @property
    def files(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.devtools.resultstore.v2.file_pb2.File]:
        """A list of file references for action level files.
        The file IDs must be unique within this list. Duplicate file IDs will
        result in an error. Files will be returned in lexicographical order by ID.

        Files with the following reserved file IDs cause specific post-processing
        or have special handling. These files must be immediately available to
        ResultStore for processing when the reference is uploaded.

        For build actions:
        stdout: The stdout of the action
        stderr: The stderr of the action
        baseline.lcov: Baseline coverage file to be parsed by the server. This
            uses a stripped down implementation of the LCOV standard.
            http://ltp.sourceforge.net/coverage/lcov/geninfo.1.php

        For test actions:
        test.xml: The test suite / test case data in XML format.
        test.log: The combined stdout and stderr of the test process.
        test.lcov: Coverage file to be parsed by the server. This uses a stripped
            down implementation of the LCOV standard.
            http://ltp.sourceforge.net/coverage/lcov/geninfo.1.php
        """
        pass
    @property
    def file_sets(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of names of file sets that are referenced from this Action.
        Each name must point to a file set under the same Invocation. The name
        format must be: invocations/${INVOCATION_ID}/fileSets/${FILE_SET_ID}
        """
        pass
    @property
    def coverage(self) -> google.devtools.resultstore.v2.coverage_pb2.ActionCoverage:
        """Coverage data was collected while running the build or test action. This
        usually includes line coverage, and may also include branch coverage.
        For test actions, this is usually only for the source files which were
        actually executed by that particular action.
        For build actions, this is the baseline coverage, which captures the
        instrumented files and lines, without any lines being executed. This
        ensures files that are never covered at all are included.
        """
        pass
    @property
    def file_processing_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.devtools.resultstore.v2.file_processing_error_pb2.FileProcessingErrors]:
        """ResultStore will read and parse Files with reserved IDs listed above. Read
        and parse errors for all these Files are reported here.
        This is implemented as a map, with one FileProcessingErrors for each file.
        Typically produced when parsing Files, but may also be provided directly
        by clients.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Optional[global___Action.Id] = ...,
        status_attributes : typing.Optional[google.devtools.resultstore.v2.common_pb2.StatusAttributes] = ...,
        timing : typing.Optional[google.devtools.resultstore.v2.common_pb2.Timing] = ...,
        build_action : typing.Optional[global___BuildAction] = ...,
        test_action : typing.Optional[global___TestAction] = ...,
        action_attributes : typing.Optional[global___ActionAttributes] = ...,
        action_dependencies : typing.Optional[typing.Iterable[google.devtools.resultstore.v2.common_pb2.Dependency]] = ...,
        properties : typing.Optional[typing.Iterable[google.devtools.resultstore.v2.common_pb2.Property]] = ...,
        files : typing.Optional[typing.Iterable[google.devtools.resultstore.v2.file_pb2.File]] = ...,
        file_sets : typing.Optional[typing.Iterable[typing.Text]] = ...,
        coverage : typing.Optional[google.devtools.resultstore.v2.coverage_pb2.ActionCoverage] = ...,
        file_processing_errors : typing.Optional[typing.Iterable[google.devtools.resultstore.v2.file_processing_error_pb2.FileProcessingErrors]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action_attributes",b"action_attributes","action_type",b"action_type","build_action",b"build_action","coverage",b"coverage","id",b"id","status_attributes",b"status_attributes","test_action",b"test_action","timing",b"timing"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action_attributes",b"action_attributes","action_dependencies",b"action_dependencies","action_type",b"action_type","build_action",b"build_action","coverage",b"coverage","file_processing_errors",b"file_processing_errors","file_sets",b"file_sets","files",b"files","id",b"id","name",b"name","properties",b"properties","status_attributes",b"status_attributes","test_action",b"test_action","timing",b"timing"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["action_type",b"action_type"]) -> typing.Optional[typing_extensions.Literal["build_action","test_action"]]: ...
global___Action = Action

class BuildAction(google.protobuf.message.Message):
    """A build action, such as building a java library."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    PRIMARY_INPUT_PATH_FIELD_NUMBER: builtins.int
    PRIMARY_OUTPUT_PATH_FIELD_NUMBER: builtins.int
    type: typing.Text = ...
    """The type of the action.  This is intended to be a clue as to how the output
    of the action should be parsed. For example "javac" for a Java compile
    action.
    """

    primary_input_path: typing.Text = ...
    """The "primary" input artifact processed by this action.  E.g., the .cc file
    of a C++ compile action.  Empty string ("") if the action has no input
    artifacts or no "primary" input artifact.
    """

    primary_output_path: typing.Text = ...
    """The "primary" output artifact processed by this action.  E.g., the .o file
    of a C++ compile action.  Empty string ("") if the action has no output
    artifacts or no "primary" output artifact.
    """

    def __init__(self,
        *,
        type : typing.Text = ...,
        primary_input_path : typing.Text = ...,
        primary_output_path : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["primary_input_path",b"primary_input_path","primary_output_path",b"primary_output_path","type",b"type"]) -> None: ...
global___BuildAction = BuildAction

class TestAction(google.protobuf.message.Message):
    """A test action, such as running a JUnit4 test binary."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEST_TIMING_FIELD_NUMBER: builtins.int
    SHARD_NUMBER_FIELD_NUMBER: builtins.int
    RUN_NUMBER_FIELD_NUMBER: builtins.int
    ATTEMPT_NUMBER_FIELD_NUMBER: builtins.int
    TEST_SUITE_FIELD_NUMBER: builtins.int
    WARNINGS_FIELD_NUMBER: builtins.int
    ESTIMATED_MEMORY_BYTES_FIELD_NUMBER: builtins.int
    @property
    def test_timing(self) -> global___TestTiming:
        """Timing data for execution of the test action."""
        pass
    shard_number: builtins.int = ...
    """If the test is divided up into shards to improve performance, set this to
    indicate which shard this test action is for. Value must be in interval
    [0, total_shard_count). Defaults to 0, which is appropriate if all test
    cases are run in the same process.
    """

    run_number: builtins.int = ...
    """If the user requested that every test be run multiple times, as is often
    done to measure flakiness, set this to indicate which run this test action
    is for. Value must be in interval [0, total_run_count). Defaults to 0,
    which is appropriate if multiple runs were not requested.
    """

    attempt_number: builtins.int = ...
    """If flaky tests are automatically retried, set this to indicate which
    attempt this test action is for. (e.g. 0 for the first attempt, 1 for
    second, and so on). Defaults to 0, which is appropriate if this is the only
    attempt.
    """

    @property
    def test_suite(self) -> google.devtools.resultstore.v2.test_suite_pb2.TestSuite:
        """A tree of test suites and test cases that were run by this test action.
        Each test case has its own status information, including stack traces.
        Typically produced by parsing an XML Log, but may also be provided directly
        by clients.
        """
        pass
    @property
    def warnings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TestWarning]:
        """Warnings for this test action."""
        pass
    estimated_memory_bytes: builtins.int = ...
    """Estimated memory consumption of the test action, in bytes. A default value
    of 0 means there is no memory consumption estimate specified.
    """

    def __init__(self,
        *,
        test_timing : typing.Optional[global___TestTiming] = ...,
        shard_number : builtins.int = ...,
        run_number : builtins.int = ...,
        attempt_number : builtins.int = ...,
        test_suite : typing.Optional[google.devtools.resultstore.v2.test_suite_pb2.TestSuite] = ...,
        warnings : typing.Optional[typing.Iterable[global___TestWarning]] = ...,
        estimated_memory_bytes : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_suite",b"test_suite","test_timing",b"test_timing"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attempt_number",b"attempt_number","estimated_memory_bytes",b"estimated_memory_bytes","run_number",b"run_number","shard_number",b"shard_number","test_suite",b"test_suite","test_timing",b"test_timing","warnings",b"warnings"]) -> None: ...
global___TestAction = TestAction

class ActionAttributes(google.protobuf.message.Message):
    """General attributes of an action"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXECUTION_STRATEGY_FIELD_NUMBER: builtins.int
    EXIT_CODE_FIELD_NUMBER: builtins.int
    HOSTNAME_FIELD_NUMBER: builtins.int
    INPUT_FILE_INFO_FIELD_NUMBER: builtins.int
    execution_strategy: global___ExecutionStrategy.ValueType = ...
    """Strategy used for executing the action."""

    exit_code: builtins.int = ...
    """Exit code of the process that ran the action. A non-zero value means
    failure.
    """

    hostname: typing.Text = ...
    """Where the action was run."""

    @property
    def input_file_info(self) -> global___InputFileInfo:
        """Information about the input files used in all actions under this configured
        target.
        """
        pass
    def __init__(self,
        *,
        execution_strategy : global___ExecutionStrategy.ValueType = ...,
        exit_code : builtins.int = ...,
        hostname : typing.Text = ...,
        input_file_info : typing.Optional[global___InputFileInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["input_file_info",b"input_file_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["execution_strategy",b"execution_strategy","exit_code",b"exit_code","hostname",b"hostname","input_file_info",b"input_file_info"]) -> None: ...
global___ActionAttributes = ActionAttributes

class InputFileInfo(google.protobuf.message.Message):
    """File count and size information for the input files to a configured target."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COUNT_FIELD_NUMBER: builtins.int
    DISTINCT_COUNT_FIELD_NUMBER: builtins.int
    COUNT_LIMIT_FIELD_NUMBER: builtins.int
    DISTINCT_BYTES_FIELD_NUMBER: builtins.int
    DISTINCT_BYTE_LIMIT_FIELD_NUMBER: builtins.int
    count: builtins.int = ...
    """The number of input files (counting every file, even if a duplicate)."""

    distinct_count: builtins.int = ...
    """The number of distinct input files."""

    count_limit: builtins.int = ...
    """The max number of input files allowed by the build system (counting every
    file, even if a duplicate).
    """

    distinct_bytes: builtins.int = ...
    """The total size of the distinct input files."""

    distinct_byte_limit: builtins.int = ...
    """The max allowed total size of the distinct input files."""

    def __init__(self,
        *,
        count : builtins.int = ...,
        distinct_count : builtins.int = ...,
        count_limit : builtins.int = ...,
        distinct_bytes : builtins.int = ...,
        distinct_byte_limit : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["count",b"count","count_limit",b"count_limit","distinct_byte_limit",b"distinct_byte_limit","distinct_bytes",b"distinct_bytes","distinct_count",b"distinct_count"]) -> None: ...
global___InputFileInfo = InputFileInfo

class LocalTestTiming(google.protobuf.message.Message):
    """Timing data for tests executed locally on the machine running the build."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEST_PROCESS_DURATION_FIELD_NUMBER: builtins.int
    @property
    def test_process_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Time taken by the test process, typically surrounded by a small wrapper
        script.
        """
        pass
    def __init__(self,
        *,
        test_process_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_process_duration",b"test_process_duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["test_process_duration",b"test_process_duration"]) -> None: ...
global___LocalTestTiming = LocalTestTiming

class RemoteTestAttemptTiming(google.protobuf.message.Message):
    """Timing data for one attempt to execute a test action remotely."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    QUEUE_DURATION_FIELD_NUMBER: builtins.int
    UPLOAD_DURATION_FIELD_NUMBER: builtins.int
    MACHINE_SETUP_DURATION_FIELD_NUMBER: builtins.int
    TEST_PROCESS_DURATION_FIELD_NUMBER: builtins.int
    DOWNLOAD_DURATION_FIELD_NUMBER: builtins.int
    @property
    def queue_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Idle period before the test process is invoked on the remote machine."""
        pass
    @property
    def upload_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Time to upload data dependencies from the local machine to the remote
        machine running the test, or to the distributed cache.
        """
        pass
    @property
    def machine_setup_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Time to set up the remote machine.
        Not to be confused with setup time in
        xUnit test frameworks, which falls within the test_process_time.
        """
        pass
    @property
    def test_process_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Time taken by the test process, typically surrounded by a small wrapper
        script.
        For Java tests, this includes JVM setup, flag parsing, class path setup,
        parsing files to setup the suite, and finally running your test methods.
        In many cases, only a small fraction of the test process time is spent
        running the test methods.
        """
        pass
    @property
    def download_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Time spent retrieving test logs and any other test outputs, back to the
        local machine.
        """
        pass
    def __init__(self,
        *,
        queue_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        upload_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        machine_setup_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        test_process_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        download_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["download_duration",b"download_duration","machine_setup_duration",b"machine_setup_duration","queue_duration",b"queue_duration","test_process_duration",b"test_process_duration","upload_duration",b"upload_duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["download_duration",b"download_duration","machine_setup_duration",b"machine_setup_duration","queue_duration",b"queue_duration","test_process_duration",b"test_process_duration","upload_duration",b"upload_duration"]) -> None: ...
global___RemoteTestAttemptTiming = RemoteTestAttemptTiming

class RemoteTestTiming(google.protobuf.message.Message):
    """Timing data for the part of the test execution that is done remotely."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCAL_ANALYSIS_DURATION_FIELD_NUMBER: builtins.int
    ATTEMPTS_FIELD_NUMBER: builtins.int
    @property
    def local_analysis_duration(self) -> google.protobuf.duration_pb2.Duration:
        """Time taken locally to determine what to do."""
        pass
    @property
    def attempts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RemoteTestAttemptTiming]:
        """Normally there is only one attempt, but the system may retry on internal
        errors, leading to multiple attempts.
        """
        pass
    def __init__(self,
        *,
        local_analysis_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        attempts : typing.Optional[typing.Iterable[global___RemoteTestAttemptTiming]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["local_analysis_duration",b"local_analysis_duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attempts",b"attempts","local_analysis_duration",b"local_analysis_duration"]) -> None: ...
global___RemoteTestTiming = RemoteTestTiming

class TestTiming(google.protobuf.message.Message):
    """Timing data for execution of a test action. The action may be performed
    locally, on the machine running the build, or remotely.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCAL_FIELD_NUMBER: builtins.int
    REMOTE_FIELD_NUMBER: builtins.int
    SYSTEM_TIME_DURATION_FIELD_NUMBER: builtins.int
    USER_TIME_DURATION_FIELD_NUMBER: builtins.int
    TEST_CACHING_FIELD_NUMBER: builtins.int
    @property
    def local(self) -> global___LocalTestTiming:
        """Used for local test actions."""
        pass
    @property
    def remote(self) -> global___RemoteTestTiming:
        """Used for remote test actions."""
        pass
    @property
    def system_time_duration(self) -> google.protobuf.duration_pb2.Duration:
        """The amount of CPU time spent by the test process executing system calls
        within the kernel, as opposed to library code. Time the test process spent
        blocked does not count towards this figure.
        """
        pass
    @property
    def user_time_duration(self) -> google.protobuf.duration_pb2.Duration:
        """The amount of CPU time spent by the test process executing user-mode code
        outside the kernel, as opposed to library code. Time the test process
        spent blocked does not count towards this figure. You can add user_time to
        system_time to get total CPU time taken by the test process.
        """
        pass
    test_caching: global___TestCaching.ValueType = ...
    """Most build systems cache build results to speed up incremental builds.
    Some also cache test results too. This indicates whether the test results
    were found in a cache, and where that cache was located.
    """

    def __init__(self,
        *,
        local : typing.Optional[global___LocalTestTiming] = ...,
        remote : typing.Optional[global___RemoteTestTiming] = ...,
        system_time_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        user_time_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        test_caching : global___TestCaching.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["local",b"local","location",b"location","remote",b"remote","system_time_duration",b"system_time_duration","user_time_duration",b"user_time_duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["local",b"local","location",b"location","remote",b"remote","system_time_duration",b"system_time_duration","test_caching",b"test_caching","user_time_duration",b"user_time_duration"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["location",b"location"]) -> typing.Optional[typing_extensions.Literal["local","remote"]]: ...
global___TestTiming = TestTiming

class TestWarning(google.protobuf.message.Message):
    """A warning from a test execution."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WARNING_MESSAGE_FIELD_NUMBER: builtins.int
    warning_message: typing.Text = ...
    """Contains the message detailing the warning."""

    def __init__(self,
        *,
        warning_message : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["warning_message",b"warning_message"]) -> None: ...
global___TestWarning = TestWarning
