"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.devtools.resultstore.v2.common_pb2
import google.devtools.resultstore.v2.coverage_pb2
import google.devtools.resultstore.v2.coverage_summary_pb2
import google.devtools.resultstore.v2.file_pb2
import google.devtools.resultstore.v2.file_processing_error_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Invocation(google.protobuf.message.Message):
    """An Invocation typically represents the result of running a tool. Each has a
    unique ID, typically generated by the server. Target resources under each
    Invocation contain the bulk of the data.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Id(google.protobuf.message.Message):
        """The resource ID components that identify the Invocation."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        INVOCATION_ID_FIELD_NUMBER: builtins.int
        invocation_id: typing.Text = ...
        """The Invocation ID."""

        def __init__(self,
            *,
            invocation_id : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["invocation_id",b"invocation_id"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    STATUS_ATTRIBUTES_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    INVOCATION_ATTRIBUTES_FIELD_NUMBER: builtins.int
    WORKSPACE_INFO_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    FILES_FIELD_NUMBER: builtins.int
    COVERAGE_SUMMARIES_FIELD_NUMBER: builtins.int
    AGGREGATE_COVERAGE_FIELD_NUMBER: builtins.int
    FILE_PROCESSING_ERRORS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name.  Its format must be:
    invocations/${INVOCATION_ID}
    """

    @property
    def id(self) -> global___Invocation.Id:
        """The resource ID components that identify the Invocation. They must match
        the resource name after proper encoding.
        """
        pass
    @property
    def status_attributes(self) -> google.devtools.resultstore.v2.common_pb2.StatusAttributes:
        """The aggregate status of the invocation."""
        pass
    @property
    def timing(self) -> google.devtools.resultstore.v2.common_pb2.Timing:
        """When this invocation started and its duration."""
        pass
    @property
    def invocation_attributes(self) -> global___InvocationAttributes:
        """Attributes of this invocation."""
        pass
    @property
    def workspace_info(self) -> global___WorkspaceInfo:
        """The workspace the tool was run in."""
        pass
    @property
    def properties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.devtools.resultstore.v2.common_pb2.Property]:
        """Arbitrary name-value pairs.
        This is implemented as a multi-map. Multiple properties are allowed with
        the same key. Properties will be returned in lexicographical order by key.
        """
        pass
    @property
    def files(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.devtools.resultstore.v2.file_pb2.File]:
        """A list of file references for invocation level files.
        The file IDs must be unique within this list. Duplicate file IDs will
        result in an error. Files will be returned in lexicographical order by ID.
        Use this field to specify build logs, and other invocation level logs.

        Files with the following reserved file IDs cause specific post-processing
        or have special handling. These files must be immediately available to
        ResultStore for processing when the reference is uploaded.

        build.log: The primary log for the Invocation.
        coverage_report.lcov: Aggregate coverage report for the invocation.
        """
        pass
    @property
    def coverage_summaries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.devtools.resultstore.v2.coverage_summary_pb2.LanguageCoverageSummary]:
        """Summary of aggregate coverage across all Actions in this Invocation.
        If missing, this data will be populated by the server from the
        coverage_report.lcov file or the union of all ActionCoverages under this
        invocation (in that order).
        """
        pass
    @property
    def aggregate_coverage(self) -> google.devtools.resultstore.v2.coverage_pb2.AggregateCoverage:
        """Aggregate code coverage for all build and test Actions within this
        Invocation. If missing, this data will be populated by the server
        from the coverage_report.lcov file or the union of all ActionCoverages
        under this invocation (in that order).
        """
        pass
    @property
    def file_processing_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.devtools.resultstore.v2.file_processing_error_pb2.FileProcessingErrors]:
        """NOT IMPLEMENTED.
        ResultStore will read and parse Files with reserved IDs listed above. Read
        and parse errors for all these Files are reported here.
        This is implemented as a map, with one FileProcessingErrors for each file.
        Typically produced when parsing Files, but may also be provided directly
        by clients.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Optional[global___Invocation.Id] = ...,
        status_attributes : typing.Optional[google.devtools.resultstore.v2.common_pb2.StatusAttributes] = ...,
        timing : typing.Optional[google.devtools.resultstore.v2.common_pb2.Timing] = ...,
        invocation_attributes : typing.Optional[global___InvocationAttributes] = ...,
        workspace_info : typing.Optional[global___WorkspaceInfo] = ...,
        properties : typing.Optional[typing.Iterable[google.devtools.resultstore.v2.common_pb2.Property]] = ...,
        files : typing.Optional[typing.Iterable[google.devtools.resultstore.v2.file_pb2.File]] = ...,
        coverage_summaries : typing.Optional[typing.Iterable[google.devtools.resultstore.v2.coverage_summary_pb2.LanguageCoverageSummary]] = ...,
        aggregate_coverage : typing.Optional[google.devtools.resultstore.v2.coverage_pb2.AggregateCoverage] = ...,
        file_processing_errors : typing.Optional[typing.Iterable[google.devtools.resultstore.v2.file_processing_error_pb2.FileProcessingErrors]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["aggregate_coverage",b"aggregate_coverage","id",b"id","invocation_attributes",b"invocation_attributes","status_attributes",b"status_attributes","timing",b"timing","workspace_info",b"workspace_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aggregate_coverage",b"aggregate_coverage","coverage_summaries",b"coverage_summaries","file_processing_errors",b"file_processing_errors","files",b"files","id",b"id","invocation_attributes",b"invocation_attributes","name",b"name","properties",b"properties","status_attributes",b"status_attributes","timing",b"timing","workspace_info",b"workspace_info"]) -> None: ...
global___Invocation = Invocation

class WorkspaceContext(google.protobuf.message.Message):
    """If known, represents the state of the user/build-system workspace."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___WorkspaceContext = WorkspaceContext

class WorkspaceInfo(google.protobuf.message.Message):
    """Describes the workspace under which the tool was invoked, this includes
    information that was fed into the command, the source code referenced, and
    the tool itself.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WORKSPACE_CONTEXT_FIELD_NUMBER: builtins.int
    HOSTNAME_FIELD_NUMBER: builtins.int
    WORKING_DIRECTORY_FIELD_NUMBER: builtins.int
    TOOL_TAG_FIELD_NUMBER: builtins.int
    COMMAND_LINES_FIELD_NUMBER: builtins.int
    @property
    def workspace_context(self) -> global___WorkspaceContext:
        """Data about the workspace that might be useful for debugging."""
        pass
    hostname: typing.Text = ...
    """Where the tool was invoked"""

    working_directory: typing.Text = ...
    """The client's working directory where the build/test was run from."""

    tool_tag: typing.Text = ...
    """Tools should set tool_tag to the name of the tool or use case."""

    @property
    def command_lines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CommandLine]:
        """The command lines invoked. The first command line is the one typed by the
        user, then each one after that should be an expansion of the previous
        command line.
        """
        pass
    def __init__(self,
        *,
        workspace_context : typing.Optional[global___WorkspaceContext] = ...,
        hostname : typing.Text = ...,
        working_directory : typing.Text = ...,
        tool_tag : typing.Text = ...,
        command_lines : typing.Optional[typing.Iterable[global___CommandLine]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["workspace_context",b"workspace_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["command_lines",b"command_lines","hostname",b"hostname","tool_tag",b"tool_tag","working_directory",b"working_directory","workspace_context",b"workspace_context"]) -> None: ...
global___WorkspaceInfo = WorkspaceInfo

class CommandLine(google.protobuf.message.Message):
    """The command and arguments that produced this Invocation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LABEL_FIELD_NUMBER: builtins.int
    TOOL_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    label: typing.Text = ...
    """A label describing this command line."""

    tool: typing.Text = ...
    """The command-line tool that is run: argv[0]."""

    @property
    def args(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The arguments to the above tool: argv[1]...argv[N]."""
        pass
    command: typing.Text = ...
    """The subcommand that was run with the tool, usually "build" or "test".
    For example, in the Bazel command "bazel build //foo", this would be set
    to "build". Omit if the tool doesn't accept a subcommand.  This is must
    be a reference to one of values in args.
    """

    def __init__(self,
        *,
        label : typing.Text = ...,
        tool : typing.Text = ...,
        args : typing.Optional[typing.Iterable[typing.Text]] = ...,
        command : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["args",b"args","command",b"command","label",b"label","tool",b"tool"]) -> None: ...
global___CommandLine = CommandLine

class InvocationAttributes(google.protobuf.message.Message):
    """Attributes that apply to all invocations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    USERS_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    INVOCATION_CONTEXTS_FIELD_NUMBER: builtins.int
    EXIT_CODE_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Immutable. The Cloud Project that owns this invocation (this is different than the
    Consumer Cloud Project that calls this API).
    This must be set in the CreateInvocation call, and can't be changed.
    As input, callers can set this field to a project id (string) or a
    stringified int64 project number. As output, the API populates this field
    with the stringified int64 project number (per
    https://google.aip.dev/cloud/2510).
    """

    @property
    def users(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of users in the command chain.  The first user in this sequence
        is the one who instigated the first command in the chain. For example,
        this might contain just the user that ran a Bazel command, or a robot
        that tested a change as part of a CI system. It could also contain the user
        that manually triggered a CI test, then the robot that ran the test.
        """
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Labels to categorize this invocation.
        This is implemented as a set. All labels will be unique. Any duplicate
        labels added will be ignored. Labels will be returned in lexicographical
        order. Labels should be a list of words describing the Invocation. Labels
        should be short, easy to read, and you shouldn't have more than a handful.
        Labels should not be used for unique properties such as unique IDs. Use
        properties in cases that don't meet these conditions.
        """
        pass
    description: typing.Text = ...
    """This field describes the overall context or purpose of this invocation.
    It will be used in the UI to give users more information about
    how or why this invocation was run.
    """

    @property
    def invocation_contexts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InvocationContext]:
        """If this Invocation was run in the context of a larger Continuous
        Integration build or other automated system, this field may contain more
        information about the greater context.
        """
        pass
    exit_code: builtins.int = ...
    """Exit code of the process that ran the invocation. A non-zero value
    means failure. For example, the exit code of a "bazel test" command.
    """

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        users : typing.Optional[typing.Iterable[typing.Text]] = ...,
        labels : typing.Optional[typing.Iterable[typing.Text]] = ...,
        description : typing.Text = ...,
        invocation_contexts : typing.Optional[typing.Iterable[global___InvocationContext]] = ...,
        exit_code : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","exit_code",b"exit_code","invocation_contexts",b"invocation_contexts","labels",b"labels","project_id",b"project_id","users",b"users"]) -> None: ...
global___InvocationAttributes = InvocationAttributes

class InvocationContext(google.protobuf.message.Message):
    """Describes the invocation context which includes a display name and URL."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    display_name: typing.Text = ...
    """A human readable name for the context under which this Invocation was run."""

    url: typing.Text = ...
    """A URL pointing to a UI containing more information"""

    def __init__(self,
        *,
        display_name : typing.Text = ...,
        url : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["display_name",b"display_name","url",b"url"]) -> None: ...
global___InvocationContext = InvocationContext
