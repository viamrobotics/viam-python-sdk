"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.devtools.resultstore.v2.action_pb2
import google.devtools.resultstore.v2.configuration_pb2
import google.devtools.resultstore.v2.configured_target_pb2
import google.devtools.resultstore.v2.file_set_pb2
import google.devtools.resultstore.v2.invocation_pb2
import google.devtools.resultstore.v2.target_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CreateInvocationRequest(google.protobuf.message.Message):
    """Request passed into CreateInvocation"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    INVOCATION_ID_FIELD_NUMBER: builtins.int
    INVOCATION_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    AUTO_FINALIZE_TIME_FIELD_NUMBER: builtins.int
    INITIAL_RESUME_TOKEN_FIELD_NUMBER: builtins.int
    UPLOADER_STATE_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID. If set, invocation_id must also be provided.
    Restricted to 36 Unicode characters.
    """

    invocation_id: typing.Text = ...
    """The invocation ID. It is optional, but strongly recommended.

    If left empty then a new unique ID will be assigned by the server. If
    populated, a RFC 4122-compliant v4 UUID is preferred, but v3 or v5 UUIDs
    are allowed too.
    """

    @property
    def invocation(self) -> google.devtools.resultstore.v2.invocation_pb2.Invocation:
        """Required. The invocation to create.  Its name field will be ignored, since the name
        will be derived from the id field above and assigned by the server.
        """
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize upload access to this invocation. It must be
    set to a RFC 4122-compliant v3, v4, or v5 UUID. Once this is set in
    CreateInvocation, all other upload RPCs for that Invocation and any of its
    child resources must also include the exact same token, or they will be
    rejected. The generated token should be unique to this invocation, and it
    should be kept secret.

    The purpose of this field is to prevent other users and tools from
    clobbering your upload intentionally or accidentally. The standard way of
    using this token is to create a second v4 UUID when the invocation_id is
    created, and storing them together during the upload. Essentially, this is
    a "password" to the invocation.
    """

    @property
    def auto_finalize_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """By default, Invocations are auto-finalized if they are not modified for 24
        hours. If you need auto-finalize to happen sooner, set this field to the
        time you'd like auto-finalize to occur.
        """
        pass
    initial_resume_token: typing.Text = ...
    """Client provided unique token for batch upload to ensure data integrity and
    to provide a way to resume batch upload in case of a distributed failure on
    the client side. The standard uploading client is presumed to have many
    machines uploading to ResultStore, and that any given machine could process
    any given Invocation at any time. This field is used to coordinate between
    the client's machines, resolve concurrency issues, and enforce "exactly
    once" semantics on each batch within the upload.

    The typical usage of the resume_token is that it should contain a "key"
    indicating to the client where it is in the upload process, so that the
    client can use it to resume the upload by reconstructing the state of
    upload from the point where it was interrupted.

    If this matches the previously uploaded resume_token, then this request
    will silently do nothing, making CreateInvocation idempotent.
    If this token is provided, all further upload RPCs must be done through
    UploadBatch. This token must not be combined with request_id.
    Must be web safe Base64 encoded bytes.
    """

    uploader_state: builtins.bytes = ...
    """Client-specific data used to resume batch upload if an error occurs and
    retry is needed. This serves a role closely related to resume_token, as
    both fields may be used to provide state required to restore a Batch
    Upload, but they differ in two important aspects:
     - it is not compared to previous values, and as such does not provide
       concurrency control;
     - it allows for a larger payload, since the contents are never
       inspected/compared;
    The size of the message must be within 1 MiB. Too large requests will be
    rejected.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        invocation_id : typing.Text = ...,
        invocation : typing.Optional[google.devtools.resultstore.v2.invocation_pb2.Invocation] = ...,
        authorization_token : typing.Text = ...,
        auto_finalize_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        initial_resume_token : typing.Text = ...,
        uploader_state : builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auto_finalize_time",b"auto_finalize_time","invocation",b"invocation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","auto_finalize_time",b"auto_finalize_time","initial_resume_token",b"initial_resume_token","invocation",b"invocation","invocation_id",b"invocation_id","request_id",b"request_id","uploader_state",b"uploader_state"]) -> None: ...
global___CreateInvocationRequest = CreateInvocationRequest

class UpdateInvocationRequest(google.protobuf.message.Message):
    """Request passed into UpdateInvocation"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INVOCATION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def invocation(self) -> google.devtools.resultstore.v2.invocation_pb2.Invocation:
        """Contains the name and the fields of the invocation to be updated.  The
        name format must be: invocations/${INVOCATION_ID}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to update."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        invocation : typing.Optional[google.devtools.resultstore.v2.invocation_pb2.Invocation] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["invocation",b"invocation","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","invocation",b"invocation","update_mask",b"update_mask"]) -> None: ...
global___UpdateInvocationRequest = UpdateInvocationRequest

class MergeInvocationRequest(google.protobuf.message.Message):
    """Request passed into MergeInvocation"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    INVOCATION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID.  Restricted to 36 Unicode characters.
    """

    @property
    def invocation(self) -> google.devtools.resultstore.v2.invocation_pb2.Invocation:
        """Contains the name and the fields of the invocation to be merged.  The
        name format must be: invocations/${INVOCATION_ID}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to merge."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        invocation : typing.Optional[google.devtools.resultstore.v2.invocation_pb2.Invocation] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["invocation",b"invocation","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","invocation",b"invocation","request_id",b"request_id","update_mask",b"update_mask"]) -> None: ...
global___MergeInvocationRequest = MergeInvocationRequest

class TouchInvocationRequest(google.protobuf.message.Message):
    """Request passed into TouchInvocation"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the invocation.  Its format must be:
    invocations/${INVOCATION_ID}
    """

    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","name",b"name"]) -> None: ...
global___TouchInvocationRequest = TouchInvocationRequest

class TouchInvocationResponse(google.protobuf.message.Message):
    """Response returned from TouchInvocation"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the invocation.  Its format will be:
    invocations/${INVOCATION_ID}
    """

    @property
    def id(self) -> google.devtools.resultstore.v2.invocation_pb2.Invocation.Id:
        """The resource ID components that identify the Invocation."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Optional[google.devtools.resultstore.v2.invocation_pb2.Invocation.Id] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id",b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name"]) -> None: ...
global___TouchInvocationResponse = TouchInvocationResponse

class DeleteInvocationRequest(google.protobuf.message.Message):
    """Request passed into DeleteInvocation"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the invocation.  Its format must be:
    invocations/${INVOCATION_ID}
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteInvocationRequest = DeleteInvocationRequest

class FinalizeInvocationRequest(google.protobuf.message.Message):
    """Request passed into FinalizeInvocation"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the invocation.  Its format must be:
    invocations/${INVOCATION_ID}
    """

    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","name",b"name"]) -> None: ...
global___FinalizeInvocationRequest = FinalizeInvocationRequest

class FinalizeInvocationResponse(google.protobuf.message.Message):
    """Response returned from FinalizeInvocation"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the invocation.  Its format will be:
    invocations/${INVOCATION_ID}
    """

    @property
    def id(self) -> google.devtools.resultstore.v2.invocation_pb2.Invocation.Id:
        """The resource ID components that identify the Invocation."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Optional[google.devtools.resultstore.v2.invocation_pb2.Invocation.Id] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id",b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name"]) -> None: ...
global___FinalizeInvocationResponse = FinalizeInvocationResponse

class CreateTargetRequest(google.protobuf.message.Message):
    """Request passed into CreateTarget"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    TARGET_ID_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID.  Restricted to 36 Unicode characters.
    """

    parent: typing.Text = ...
    """Required. The name of the parent invocation in which the target is created.
    Its format must be invocations/${INVOCATION_ID}
    """

    target_id: typing.Text = ...
    """The target identifier.  It can be any string up to 1024 Unicode characters
    long except for the reserved id '-'.
    """

    @property
    def target(self) -> google.devtools.resultstore.v2.target_pb2.Target:
        """Required. The target to create.  Its name field will be ignored, since the name will
        be derived from the id field above and assigned by the server.
        """
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        parent : typing.Text = ...,
        target_id : typing.Text = ...,
        target : typing.Optional[google.devtools.resultstore.v2.target_pb2.Target] = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","parent",b"parent","request_id",b"request_id","target",b"target","target_id",b"target_id"]) -> None: ...
global___CreateTargetRequest = CreateTargetRequest

class UpdateTargetRequest(google.protobuf.message.Message):
    """Request passed into UpdateTarget"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    CREATE_IF_NOT_FOUND_FIELD_NUMBER: builtins.int
    @property
    def target(self) -> google.devtools.resultstore.v2.target_pb2.Target:
        """Contains the name and the fields of the target to be updated.  The name
        format must be:
        invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to update."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    create_if_not_found: builtins.bool = ...
    """If true then the Update operation will become a Create operation if the
    Target is NOT_FOUND.
    """

    def __init__(self,
        *,
        target : typing.Optional[google.devtools.resultstore.v2.target_pb2.Target] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        create_if_not_found : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["target",b"target","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","create_if_not_found",b"create_if_not_found","target",b"target","update_mask",b"update_mask"]) -> None: ...
global___UpdateTargetRequest = UpdateTargetRequest

class MergeTargetRequest(google.protobuf.message.Message):
    """Request passed into MergeTarget"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    CREATE_IF_NOT_FOUND_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID.  Restricted to 36 Unicode characters.
    """

    @property
    def target(self) -> google.devtools.resultstore.v2.target_pb2.Target:
        """Contains the name and the fields of the target to be merged.  The name
        format must be:
        invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to merge."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    create_if_not_found: builtins.bool = ...
    """If true then the Merge operation will become a Create operation if the
    Target is NOT_FOUND.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        target : typing.Optional[google.devtools.resultstore.v2.target_pb2.Target] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        create_if_not_found : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["target",b"target","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","create_if_not_found",b"create_if_not_found","request_id",b"request_id","target",b"target","update_mask",b"update_mask"]) -> None: ...
global___MergeTargetRequest = MergeTargetRequest

class FinalizeTargetRequest(google.protobuf.message.Message):
    """Request passed into FinalizeTarget"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the target.  Its format must be:
    invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
    """

    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","name",b"name"]) -> None: ...
global___FinalizeTargetRequest = FinalizeTargetRequest

class FinalizeTargetResponse(google.protobuf.message.Message):
    """Response returned from FinalizeTarget"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the target.  Its format will be:
    invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
    """

    @property
    def id(self) -> google.devtools.resultstore.v2.target_pb2.Target.Id:
        """The resource ID components that identify the Target."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Optional[google.devtools.resultstore.v2.target_pb2.Target.Id] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id",b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name"]) -> None: ...
global___FinalizeTargetResponse = FinalizeTargetResponse

class CreateConfiguredTargetRequest(google.protobuf.message.Message):
    """Request passed into CreateConfiguredTarget"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    CONFIG_ID_FIELD_NUMBER: builtins.int
    CONFIGURED_TARGET_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID.  Restricted to 36 Unicode characters.
    """

    parent: typing.Text = ...
    """Required. The name of the parent target in which the configured target is created.
    Its format must be:
    invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}
    """

    config_id: typing.Text = ...
    """The configuration identifier. This must match the ID of an existing
    Configuration under this Invocation. Cannot be the reserved id '-'.
    """

    @property
    def configured_target(self) -> google.devtools.resultstore.v2.configured_target_pb2.ConfiguredTarget:
        """Required. The configured target to create. Its name field will be ignored, since the
        name will be derived from the id field above and assigned by the server.
        """
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        parent : typing.Text = ...,
        config_id : typing.Text = ...,
        configured_target : typing.Optional[google.devtools.resultstore.v2.configured_target_pb2.ConfiguredTarget] = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["configured_target",b"configured_target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","config_id",b"config_id","configured_target",b"configured_target","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateConfiguredTargetRequest = CreateConfiguredTargetRequest

class UpdateConfiguredTargetRequest(google.protobuf.message.Message):
    """Request passed into UpdateConfiguredTarget"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONFIGURED_TARGET_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    CREATE_IF_NOT_FOUND_FIELD_NUMBER: builtins.int
    @property
    def configured_target(self) -> google.devtools.resultstore.v2.configured_target_pb2.ConfiguredTarget:
        """Contains the name and the fields of the configured target to be updated.
        The name format must be:
        invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${CONFIG_ID}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to update."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    create_if_not_found: builtins.bool = ...
    """If true then the Update operation will become a Create operation if the
    ConfiguredTarget is NOT_FOUND.
    """

    def __init__(self,
        *,
        configured_target : typing.Optional[google.devtools.resultstore.v2.configured_target_pb2.ConfiguredTarget] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        create_if_not_found : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["configured_target",b"configured_target","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","configured_target",b"configured_target","create_if_not_found",b"create_if_not_found","update_mask",b"update_mask"]) -> None: ...
global___UpdateConfiguredTargetRequest = UpdateConfiguredTargetRequest

class MergeConfiguredTargetRequest(google.protobuf.message.Message):
    """Request passed into MergeConfiguredTarget"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    CONFIGURED_TARGET_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    CREATE_IF_NOT_FOUND_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID.  Restricted to 36 Unicode characters.
    """

    @property
    def configured_target(self) -> google.devtools.resultstore.v2.configured_target_pb2.ConfiguredTarget:
        """Contains the name and the fields of the configured target to be merged.
        The name format must be:
        invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${CONFIG_ID}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to merge."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    create_if_not_found: builtins.bool = ...
    """If true then the Merge operation will become a Create operation if the
    ConfiguredTarget is NOT_FOUND.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        configured_target : typing.Optional[google.devtools.resultstore.v2.configured_target_pb2.ConfiguredTarget] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        create_if_not_found : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["configured_target",b"configured_target","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","configured_target",b"configured_target","create_if_not_found",b"create_if_not_found","request_id",b"request_id","update_mask",b"update_mask"]) -> None: ...
global___MergeConfiguredTargetRequest = MergeConfiguredTargetRequest

class FinalizeConfiguredTargetRequest(google.protobuf.message.Message):
    """Request passed into FinalizeConfiguredTarget"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the configured target. Its format must be:
    invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${CONFIG_ID}
    """

    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","name",b"name"]) -> None: ...
global___FinalizeConfiguredTargetRequest = FinalizeConfiguredTargetRequest

class FinalizeConfiguredTargetResponse(google.protobuf.message.Message):
    """Response returned from FinalizeConfiguredTarget"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the configured target. Its format must be:
    invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${CONFIG_ID}
    """

    @property
    def id(self) -> google.devtools.resultstore.v2.configured_target_pb2.ConfiguredTarget.Id:
        """The resource ID components that identify the ConfiguredTarget."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Optional[google.devtools.resultstore.v2.configured_target_pb2.ConfiguredTarget.Id] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id",b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name"]) -> None: ...
global___FinalizeConfiguredTargetResponse = FinalizeConfiguredTargetResponse

class CreateActionRequest(google.protobuf.message.Message):
    """Request passed into CreateAction"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    ACTION_ID_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID.  Restricted to 36 Unicode characters.
    """

    parent: typing.Text = ...
    """Required. The name of the parent configured target in which the action is created.
    Its format must be:
    invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${CONFIG_ID}
    """

    action_id: typing.Text = ...
    """The action identifier. It can be any string up to 512 Unicode characters
    long, except for the reserved id '-'.

    Recommended IDs for Test Actions:
    "test": For a single test action.
    "test_shard0_run0_attempt0" ... "test_shard9_run9_attempt9": For tests with
     shard/run/attempts.

    Recommended IDs for Build Actions:
    "build": If you only have a single build action.
    """

    @property
    def action(self) -> google.devtools.resultstore.v2.action_pb2.Action:
        """Required. The action to create.  Its name field will be ignored, since the
        name will be derived from the id field above and assigned by the server.
        """
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        parent : typing.Text = ...,
        action_id : typing.Text = ...,
        action : typing.Optional[google.devtools.resultstore.v2.action_pb2.Action] = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action",b"action"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","action_id",b"action_id","authorization_token",b"authorization_token","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateActionRequest = CreateActionRequest

class UpdateActionRequest(google.protobuf.message.Message):
    """Request passed into UpdateAction"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACTION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    CREATE_IF_NOT_FOUND_FIELD_NUMBER: builtins.int
    @property
    def action(self) -> google.devtools.resultstore.v2.action_pb2.Action:
        """Contains the name and the fields of the action to be updated.  The
        name format must be:
        invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${CONFIG_ID}/actions/${ACTION_ID}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to update."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    create_if_not_found: builtins.bool = ...
    """If true then the Update operation will become a Create operation if the
    Action is NOT_FOUND.
    """

    def __init__(self,
        *,
        action : typing.Optional[google.devtools.resultstore.v2.action_pb2.Action] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        create_if_not_found : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action",b"action","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","authorization_token",b"authorization_token","create_if_not_found",b"create_if_not_found","update_mask",b"update_mask"]) -> None: ...
global___UpdateActionRequest = UpdateActionRequest

class MergeActionRequest(google.protobuf.message.Message):
    """Request passed into MergeAction"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    CREATE_IF_NOT_FOUND_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID.  Restricted to 36 Unicode characters.
    """

    @property
    def action(self) -> google.devtools.resultstore.v2.action_pb2.Action:
        """Contains the name and the fields of the action to be merged.  The
        name format must be:
        invocations/${INVOCATION_ID}/targets/${url_encode(TARGET_ID)}/configuredTargets/${CONFIG_ID}/actions/${ACTION_ID}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to merge."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    create_if_not_found: builtins.bool = ...
    """If true then the Merge operation will become a Create operation if the
    Action is NOT_FOUND.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        action : typing.Optional[google.devtools.resultstore.v2.action_pb2.Action] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        create_if_not_found : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action",b"action","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","authorization_token",b"authorization_token","create_if_not_found",b"create_if_not_found","request_id",b"request_id","update_mask",b"update_mask"]) -> None: ...
global___MergeActionRequest = MergeActionRequest

class CreateConfigurationRequest(google.protobuf.message.Message):
    """Request passed into CreateConfiguration"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    CONFIG_ID_FIELD_NUMBER: builtins.int
    CONFIGURATION_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID.  Restricted to 36 Unicode characters.
    """

    parent: typing.Text = ...
    """Required. The name of the parent invocation in which the configuration is created.
    Its format must be invocations/${INVOCATION_ID}
    """

    config_id: typing.Text = ...
    """The configuration identifier. It can be any string up to 256 Unicode
    characters long. The configuration ID of "default" should be preferred for
    the default configuration in a single-config invocation. Cannot be the
    reserved id '-'.
    """

    @property
    def configuration(self) -> google.devtools.resultstore.v2.configuration_pb2.Configuration:
        """Required. The configuration to create. Its name field will be ignored, since the name
        will be derived from the id field above and assigned by the server.
        """
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        parent : typing.Text = ...,
        config_id : typing.Text = ...,
        configuration : typing.Optional[google.devtools.resultstore.v2.configuration_pb2.Configuration] = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["configuration",b"configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","config_id",b"config_id","configuration",b"configuration","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateConfigurationRequest = CreateConfigurationRequest

class UpdateConfigurationRequest(google.protobuf.message.Message):
    """Request passed into UpdateConfiguration"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONFIGURATION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    CREATE_IF_NOT_FOUND_FIELD_NUMBER: builtins.int
    @property
    def configuration(self) -> google.devtools.resultstore.v2.configuration_pb2.Configuration:
        """Contains the name and fields of the configuration to be updated. The name
        format must be:
        invocations/${INVOCATION_ID}/configs/${CONFIG_ID}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to update."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    create_if_not_found: builtins.bool = ...
    """If true then the Update operation will become a Create operation if the
    Configuration is NOT_FOUND.
    """

    def __init__(self,
        *,
        configuration : typing.Optional[google.devtools.resultstore.v2.configuration_pb2.Configuration] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        create_if_not_found : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["configuration",b"configuration","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","configuration",b"configuration","create_if_not_found",b"create_if_not_found","update_mask",b"update_mask"]) -> None: ...
global___UpdateConfigurationRequest = UpdateConfigurationRequest

class CreateFileSetRequest(google.protobuf.message.Message):
    """Request passed into CreateFileSet"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    FILE_SET_ID_FIELD_NUMBER: builtins.int
    FILE_SET_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID.  Restricted to 36 Unicode characters.
    """

    parent: typing.Text = ...
    """Required. The name of the parent invocation in which the file set is created.
    Its format must be invocations/${INVOCATION_ID}
    """

    file_set_id: typing.Text = ...
    """The file set identifier. It can be any string up to 256 Unicode characters
    long.
    """

    @property
    def file_set(self) -> google.devtools.resultstore.v2.file_set_pb2.FileSet:
        """Required. The file set to create. Its name field will be ignored, since the name will
        be derived from the id field above and assigned by the server.
        """
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        parent : typing.Text = ...,
        file_set_id : typing.Text = ...,
        file_set : typing.Optional[google.devtools.resultstore.v2.file_set_pb2.FileSet] = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["file_set",b"file_set"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","file_set",b"file_set","file_set_id",b"file_set_id","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateFileSetRequest = CreateFileSetRequest

class UpdateFileSetRequest(google.protobuf.message.Message):
    """Request passed into UpdateFileSet"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILE_SET_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    CREATE_IF_NOT_FOUND_FIELD_NUMBER: builtins.int
    @property
    def file_set(self) -> google.devtools.resultstore.v2.file_set_pb2.FileSet:
        """Contains the name and fields of the file set to be updated. The name format
        must be: invocations/${INVOCATION_ID}/fileSets/${FILE_SET_ID}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to update."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    create_if_not_found: builtins.bool = ...
    """If true then the Update operation will become a Create operation if the
    FileSet is NOT_FOUND.
    """

    def __init__(self,
        *,
        file_set : typing.Optional[google.devtools.resultstore.v2.file_set_pb2.FileSet] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        create_if_not_found : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["file_set",b"file_set","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","create_if_not_found",b"create_if_not_found","file_set",b"file_set","update_mask",b"update_mask"]) -> None: ...
global___UpdateFileSetRequest = UpdateFileSetRequest

class MergeFileSetRequest(google.protobuf.message.Message):
    """Request passed into MergeFileSet"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_ID_FIELD_NUMBER: builtins.int
    FILE_SET_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    CREATE_IF_NOT_FOUND_FIELD_NUMBER: builtins.int
    request_id: typing.Text = ...
    """A unique identifier for this request. Must be set to a different value for
    each request that affects a given resource (eg. a random UUID). Required
    for the operation to be idempotent. This is achieved by ignoring this
    request if the last successful operation on the resource had the same
    request ID.  Restricted to 36 Unicode characters.
    """

    @property
    def file_set(self) -> google.devtools.resultstore.v2.file_set_pb2.FileSet:
        """Contains the name and fields of the file set to be merged. The name
        format must be:
        invocations/${INVOCATION_ID}/fileSets/${FILE_SET_ID}
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Indicates which fields to merge."""
        pass
    authorization_token: typing.Text = ...
    """This is a token to authorize access to this invocation. It must be set to
    the same value that was provided in the CreateInvocationRequest.
    """

    create_if_not_found: builtins.bool = ...
    """If true then the Merge operation will become a Create operation if the
    FileSet is NOT_FOUND.
    """

    def __init__(self,
        *,
        request_id : typing.Text = ...,
        file_set : typing.Optional[google.devtools.resultstore.v2.file_set_pb2.FileSet] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_token : typing.Text = ...,
        create_if_not_found : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["file_set",b"file_set","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","create_if_not_found",b"create_if_not_found","file_set",b"file_set","request_id",b"request_id","update_mask",b"update_mask"]) -> None: ...
global___MergeFileSetRequest = MergeFileSetRequest

class UploadBatchRequest(google.protobuf.message.Message):
    """Request passed into UploadBatch"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    NEXT_RESUME_TOKEN_FIELD_NUMBER: builtins.int
    RESUME_TOKEN_FIELD_NUMBER: builtins.int
    UPLOADER_STATE_FIELD_NUMBER: builtins.int
    UPLOAD_REQUESTS_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the invocation being modified.
    The name format must be: invocations/${INVOCATION_ID}
    """

    authorization_token: typing.Text = ...
    """Required. A UUID that must match the value provided in CreateInvocationRequest."""

    next_resume_token: typing.Text = ...
    """Required. The token of this batch, that will be committed in this UploadBatchRequest.
    If this matches the previously uploaded resume_token, then this request
    will silently do nothing.
    See CreateInvocationRequest.initial_resume_token for more information.
    Must be web safe Base64 encoded bytes.
    """

    resume_token: typing.Text = ...
    """Required. The token of the previous batch that was committed in a UploadBatchRequest.
    This will be checked after next_resume_token match is checked. If this does
    not match the previously uploaded resume_token, a 409 Conflict (HTTPS) or
    ABORTED (gRPC ) error code indicating a concurrency
    failure will be returned, and that the user should call
    GetInvocationUploadMetadata to fetch the current resume_token to
    reconstruct the state of the upload to resume it.
    See CreateInvocationRequest.initial_resume_token for more information.
    Must be web safe Base64 encoded bytes.
    """

    uploader_state: builtins.bytes = ...
    """Client-specific data used to resume batch upload if an error occurs and
    retry is needed. This serves a role closely related to resume_token, as
    both fields may be used to provide state required to restore a Batch
    Upload, but they differ in two important aspects:
     - it is not compared to previous values, and as such does not provide
       concurrency control;
     - it allows for a larger payload, since the contents are never
       inspected/compared;
    The size of the message must be within 1 MiB. Too large requests will be
    rejected.
    """

    @property
    def upload_requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UploadRequest]:
        """The individual upload requests for this batch.
        This field may be empty, allowing this RPC to be used like TouchInvocation.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        authorization_token : typing.Text = ...,
        next_resume_token : typing.Text = ...,
        resume_token : typing.Text = ...,
        uploader_state : builtins.bytes = ...,
        upload_requests : typing.Optional[typing.Iterable[global___UploadRequest]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","next_resume_token",b"next_resume_token","parent",b"parent","resume_token",b"resume_token","upload_requests",b"upload_requests","uploader_state",b"uploader_state"]) -> None: ...
global___UploadBatchRequest = UploadBatchRequest

class UploadBatchResponse(google.protobuf.message.Message):
    """Response for UploadBatch"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___UploadBatchResponse = UploadBatchResponse

class UploadRequest(google.protobuf.message.Message):
    """The individual upload requests for this batch."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _UploadOperation:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UploadOperationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UploadOperation.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UPLOAD_OPERATION_UNSPECIFIED: UploadRequest.UploadOperation.ValueType = ...  # 0
        """Unspecified"""

        CREATE: UploadRequest.UploadOperation.ValueType = ...  # 1
        """Create the given resources except Invocation.
        For more information, check the Create APIs.
        """

        UPDATE: UploadRequest.UploadOperation.ValueType = ...  # 2
        """Applies a standard update to the resource identified by the given
        proto's name. For more information, see the Update APIs.
        UploadBatch does not support arbitrary field masks. The list of allowed
        field masks can be found below.
        """

        MERGE: UploadRequest.UploadOperation.ValueType = ...  # 3
        """Applies an merge update to the resource identified by the given
        proto's name. For more information, see the Merge APIs.
        UploadBatch does not support arbitrary field masks. The list of allowed
        field masks can be found below.
        """

        FINALIZE: UploadRequest.UploadOperation.ValueType = ...  # 4
        """Declares the resource with the given name as finalized and immutable by
        the uploader. Only supported for Invocation, Target, ConfiguredTarget.
        There must be no operation on child resources after parent resource is
        Finalized. If there is a Finalize of Invocation, it must be the final
        UploadRequest. For more information, see the Finalize APIs.
        An empty resource should be provided below.
        """

    class UploadOperation(_UploadOperation, metaclass=_UploadOperationEnumTypeWrapper):
        """The operation for the request (e.g. Create(), Update(), etc.)"""
        pass

    UPLOAD_OPERATION_UNSPECIFIED: UploadRequest.UploadOperation.ValueType = ...  # 0
    """Unspecified"""

    CREATE: UploadRequest.UploadOperation.ValueType = ...  # 1
    """Create the given resources except Invocation.
    For more information, check the Create APIs.
    """

    UPDATE: UploadRequest.UploadOperation.ValueType = ...  # 2
    """Applies a standard update to the resource identified by the given
    proto's name. For more information, see the Update APIs.
    UploadBatch does not support arbitrary field masks. The list of allowed
    field masks can be found below.
    """

    MERGE: UploadRequest.UploadOperation.ValueType = ...  # 3
    """Applies an merge update to the resource identified by the given
    proto's name. For more information, see the Merge APIs.
    UploadBatch does not support arbitrary field masks. The list of allowed
    field masks can be found below.
    """

    FINALIZE: UploadRequest.UploadOperation.ValueType = ...  # 4
    """Declares the resource with the given name as finalized and immutable by
    the uploader. Only supported for Invocation, Target, ConfiguredTarget.
    There must be no operation on child resources after parent resource is
    Finalized. If there is a Finalize of Invocation, it must be the final
    UploadRequest. For more information, see the Finalize APIs.
    An empty resource should be provided below.
    """


    class Id(google.protobuf.message.Message):
        """The resource ID components that identify the resource being uploaded."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TARGET_ID_FIELD_NUMBER: builtins.int
        CONFIGURATION_ID_FIELD_NUMBER: builtins.int
        ACTION_ID_FIELD_NUMBER: builtins.int
        FILE_SET_ID_FIELD_NUMBER: builtins.int
        target_id: typing.Text = ...
        """Required for Target, ConfiguredTarget, or Action.
        The Target ID.
        """

        configuration_id: typing.Text = ...
        """Required for Configuration, ConfiguredTarget, or Action.
        The Configuration ID.
        """

        action_id: typing.Text = ...
        """Required for Action.
        The Action ID.
        """

        file_set_id: typing.Text = ...
        """Required for FileSet.
        The FileSet ID.
        """

        def __init__(self,
            *,
            target_id : typing.Text = ...,
            configuration_id : typing.Text = ...,
            action_id : typing.Text = ...,
            file_set_id : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["action_id",b"action_id","configuration_id",b"configuration_id","file_set_id",b"file_set_id","target_id",b"target_id"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    UPLOAD_OPERATION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    CREATE_IF_NOT_FOUND_FIELD_NUMBER: builtins.int
    INVOCATION_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    CONFIGURATION_FIELD_NUMBER: builtins.int
    CONFIGURED_TARGET_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    FILE_SET_FIELD_NUMBER: builtins.int
    @property
    def id(self) -> global___UploadRequest.Id:
        """The resource ID components that identify the resource being uploaded."""
        pass
    upload_operation: global___UploadRequest.UploadOperation.ValueType = ...
    """The operation for the request (e.g. Create(), Update(), etc.)"""

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required for Update and Merge operations.
        Ignored for Create and Finalize operations.
        Masks the fields of the resource being uploaded. Provides support for a
        more granular upload. FieldMasks are limited to certain fields and must
        match one of the follow patterns, where * means any single field name.

        For Update Operations:

        Invocation: [*, status_attributes.*, timing.*, invocation_attributes.*,
        workspace_info.*].
        Target: [*, status_attributes.*, timing.*].
        Configuration: [*, status_attributes.*].
        ConfiguredTarget: [*, status_attributes.*].
        Action: [*, status_attributes.*, timing.*, test_action.test_suite,
        test_action.infrastructure_failure_info].
        FileSet: [*].

        For Merge Operations:

        Invocation: [invocation_attributes.labels, workspace_info.command_lines,
        properties, files, file_processing_errors].
        Target: [files].
        ConfiguredTarget: [files].
        Action: [files, file_processing_errors].
        """
        pass
    create_if_not_found: builtins.bool = ...
    """If true then the Update, Merge operation will become a Create operation if
    the resource is NOT_FOUND. Not supported for Invocation resource.
    """

    @property
    def invocation(self) -> google.devtools.resultstore.v2.invocation_pb2.Invocation:
        """The Invocation Resource"""
        pass
    @property
    def target(self) -> google.devtools.resultstore.v2.target_pb2.Target:
        """The Target Resource"""
        pass
    @property
    def configuration(self) -> google.devtools.resultstore.v2.configuration_pb2.Configuration:
        """The Configuration Resource"""
        pass
    @property
    def configured_target(self) -> google.devtools.resultstore.v2.configured_target_pb2.ConfiguredTarget:
        """The ConfiguredTarget Resource"""
        pass
    @property
    def action(self) -> google.devtools.resultstore.v2.action_pb2.Action:
        """The Action Resource"""
        pass
    @property
    def file_set(self) -> google.devtools.resultstore.v2.file_set_pb2.FileSet:
        """The FileSet Resource"""
        pass
    def __init__(self,
        *,
        id : typing.Optional[global___UploadRequest.Id] = ...,
        upload_operation : global___UploadRequest.UploadOperation.ValueType = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        create_if_not_found : builtins.bool = ...,
        invocation : typing.Optional[google.devtools.resultstore.v2.invocation_pb2.Invocation] = ...,
        target : typing.Optional[google.devtools.resultstore.v2.target_pb2.Target] = ...,
        configuration : typing.Optional[google.devtools.resultstore.v2.configuration_pb2.Configuration] = ...,
        configured_target : typing.Optional[google.devtools.resultstore.v2.configured_target_pb2.ConfiguredTarget] = ...,
        action : typing.Optional[google.devtools.resultstore.v2.action_pb2.Action] = ...,
        file_set : typing.Optional[google.devtools.resultstore.v2.file_set_pb2.FileSet] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action",b"action","configuration",b"configuration","configured_target",b"configured_target","file_set",b"file_set","id",b"id","invocation",b"invocation","resource",b"resource","target",b"target","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","configuration",b"configuration","configured_target",b"configured_target","create_if_not_found",b"create_if_not_found","file_set",b"file_set","id",b"id","invocation",b"invocation","resource",b"resource","target",b"target","update_mask",b"update_mask","upload_operation",b"upload_operation"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["resource",b"resource"]) -> typing.Optional[typing_extensions.Literal["invocation","target","configuration","configured_target","action","file_set"]]: ...
global___UploadRequest = UploadRequest

class GetInvocationUploadMetadataRequest(google.protobuf.message.Message):
    """Request passed into GetInvocationUploadMetadata"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    AUTHORIZATION_TOKEN_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the UploadMetadata being requested.
    The name format must be: invocations/${INVOCATION_ID}/uploadMetadata
    """

    authorization_token: typing.Text = ...
    """Required. A UUID that must match the value provided in CreateInvocationRequest."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        authorization_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_token",b"authorization_token","name",b"name"]) -> None: ...
global___GetInvocationUploadMetadataRequest = GetInvocationUploadMetadataRequest
