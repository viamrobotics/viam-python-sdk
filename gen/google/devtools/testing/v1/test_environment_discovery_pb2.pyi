"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.type.date_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _DeviceForm:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DeviceFormEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DeviceForm.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    DEVICE_FORM_UNSPECIFIED: DeviceForm.ValueType = ...  # 0
    """Do not use.  For proto versioning only."""

    VIRTUAL: DeviceForm.ValueType = ...  # 1
    """Android virtual device using Compute Engine native virtualization. Firebase
    Test Lab only.
    """

    PHYSICAL: DeviceForm.ValueType = ...  # 2
    """Actual hardware."""

    EMULATOR: DeviceForm.ValueType = ...  # 3
    """Android virtual device using emulator in nested virtualization. Equivalent
    to Android Studio.
    """

class DeviceForm(_DeviceForm, metaclass=_DeviceFormEnumTypeWrapper):
    """Whether the device is physical or virtual."""
    pass

DEVICE_FORM_UNSPECIFIED: DeviceForm.ValueType = ...  # 0
"""Do not use.  For proto versioning only."""

VIRTUAL: DeviceForm.ValueType = ...  # 1
"""Android virtual device using Compute Engine native virtualization. Firebase
Test Lab only.
"""

PHYSICAL: DeviceForm.ValueType = ...  # 2
"""Actual hardware."""

EMULATOR: DeviceForm.ValueType = ...  # 3
"""Android virtual device using emulator in nested virtualization. Equivalent
to Android Studio.
"""

global___DeviceForm = DeviceForm


class _DeviceFormFactor:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _DeviceFormFactorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DeviceFormFactor.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    DEVICE_FORM_FACTOR_UNSPECIFIED: DeviceFormFactor.ValueType = ...  # 0
    """Do not use. For proto versioning only."""

    PHONE: DeviceFormFactor.ValueType = ...  # 1
    """This device has the shape of a phone."""

    TABLET: DeviceFormFactor.ValueType = ...  # 2
    """This device has the shape of a tablet."""

    WEARABLE: DeviceFormFactor.ValueType = ...  # 3
    """This device has the shape of a watch or other wearable."""

class DeviceFormFactor(_DeviceFormFactor, metaclass=_DeviceFormFactorEnumTypeWrapper):
    """The form factor of a device."""
    pass

DEVICE_FORM_FACTOR_UNSPECIFIED: DeviceFormFactor.ValueType = ...  # 0
"""Do not use. For proto versioning only."""

PHONE: DeviceFormFactor.ValueType = ...  # 1
"""This device has the shape of a phone."""

TABLET: DeviceFormFactor.ValueType = ...  # 2
"""This device has the shape of a tablet."""

WEARABLE: DeviceFormFactor.ValueType = ...  # 3
"""This device has the shape of a watch or other wearable."""

global___DeviceFormFactor = DeviceFormFactor


class DeviceIpBlock(google.protobuf.message.Message):
    """A single device IP block"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BLOCK_FIELD_NUMBER: builtins.int
    FORM_FIELD_NUMBER: builtins.int
    ADDED_DATE_FIELD_NUMBER: builtins.int
    block: typing.Text = ...
    """An IP address block in CIDR notation eg: 34.68.194.64/29"""

    form: global___DeviceForm.ValueType = ...
    """Whether this block is used by physical or virtual devices"""

    @property
    def added_date(self) -> google.type.date_pb2.Date:
        """The date this block was added to Firebase Test Lab"""
        pass
    def __init__(self,
        *,
        block : typing.Text = ...,
        form : global___DeviceForm.ValueType = ...,
        added_date : typing.Optional[google.type.date_pb2.Date] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["added_date",b"added_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["added_date",b"added_date","block",b"block","form",b"form"]) -> None: ...
global___DeviceIpBlock = DeviceIpBlock

class GetTestEnvironmentCatalogRequest(google.protobuf.message.Message):
    """Request to list the currently supported values for an environment type."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EnvironmentType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EnvironmentTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EnvironmentType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ENVIRONMENT_TYPE_UNSPECIFIED: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 0
        """Do not use.  For proto versioning only."""

        ANDROID: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 1
        """A device running a version of the Android OS."""

        IOS: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 3
        """A device running a version of iOS."""

        NETWORK_CONFIGURATION: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 4
        """A network configuration to use when running a test."""

        PROVIDED_SOFTWARE: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 5
        """The software environment provided by TestExecutionService."""

        DEVICE_IP_BLOCKS: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 6
        """The IP blocks used by devices in the test environment."""

    class EnvironmentType(_EnvironmentType, metaclass=_EnvironmentTypeEnumTypeWrapper):
        """Types of environments the Test API supports."""
        pass

    ENVIRONMENT_TYPE_UNSPECIFIED: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 0
    """Do not use.  For proto versioning only."""

    ANDROID: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 1
    """A device running a version of the Android OS."""

    IOS: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 3
    """A device running a version of iOS."""

    NETWORK_CONFIGURATION: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 4
    """A network configuration to use when running a test."""

    PROVIDED_SOFTWARE: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 5
    """The software environment provided by TestExecutionService."""

    DEVICE_IP_BLOCKS: GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...  # 6
    """The IP blocks used by devices in the test environment."""


    ENVIRONMENT_TYPE_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    environment_type: global___GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...
    """Required. The type of environment that should be listed."""

    project_id: typing.Text = ...
    """For authorization, the cloud project requesting the TestEnvironmentCatalog."""

    def __init__(self,
        *,
        environment_type : global___GetTestEnvironmentCatalogRequest.EnvironmentType.ValueType = ...,
        project_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["environment_type",b"environment_type","project_id",b"project_id"]) -> None: ...
global___GetTestEnvironmentCatalogRequest = GetTestEnvironmentCatalogRequest

class TestEnvironmentCatalog(google.protobuf.message.Message):
    """A description of a test environment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANDROID_DEVICE_CATALOG_FIELD_NUMBER: builtins.int
    IOS_DEVICE_CATALOG_FIELD_NUMBER: builtins.int
    NETWORK_CONFIGURATION_CATALOG_FIELD_NUMBER: builtins.int
    SOFTWARE_CATALOG_FIELD_NUMBER: builtins.int
    DEVICE_IP_BLOCK_CATALOG_FIELD_NUMBER: builtins.int
    @property
    def android_device_catalog(self) -> global___AndroidDeviceCatalog:
        """Supported Android devices."""
        pass
    @property
    def ios_device_catalog(self) -> global___IosDeviceCatalog:
        """Supported iOS devices."""
        pass
    @property
    def network_configuration_catalog(self) -> global___NetworkConfigurationCatalog:
        """Supported network configurations."""
        pass
    @property
    def software_catalog(self) -> global___ProvidedSoftwareCatalog:
        """The software test environment provided by TestExecutionService."""
        pass
    @property
    def device_ip_block_catalog(self) -> global___DeviceIpBlockCatalog:
        """The IP blocks used by devices in the test environment."""
        pass
    def __init__(self,
        *,
        android_device_catalog : typing.Optional[global___AndroidDeviceCatalog] = ...,
        ios_device_catalog : typing.Optional[global___IosDeviceCatalog] = ...,
        network_configuration_catalog : typing.Optional[global___NetworkConfigurationCatalog] = ...,
        software_catalog : typing.Optional[global___ProvidedSoftwareCatalog] = ...,
        device_ip_block_catalog : typing.Optional[global___DeviceIpBlockCatalog] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["android_device_catalog",b"android_device_catalog","device_ip_block_catalog",b"device_ip_block_catalog","environment_catalog",b"environment_catalog","ios_device_catalog",b"ios_device_catalog","network_configuration_catalog",b"network_configuration_catalog","software_catalog",b"software_catalog"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["android_device_catalog",b"android_device_catalog","device_ip_block_catalog",b"device_ip_block_catalog","environment_catalog",b"environment_catalog","ios_device_catalog",b"ios_device_catalog","network_configuration_catalog",b"network_configuration_catalog","software_catalog",b"software_catalog"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["environment_catalog",b"environment_catalog"]) -> typing.Optional[typing_extensions.Literal["android_device_catalog","ios_device_catalog","network_configuration_catalog","software_catalog","device_ip_block_catalog"]]: ...
global___TestEnvironmentCatalog = TestEnvironmentCatalog

class DeviceIpBlockCatalog(google.protobuf.message.Message):
    """List of IP blocks used by the Firebase Test Lab"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IP_BLOCKS_FIELD_NUMBER: builtins.int
    @property
    def ip_blocks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeviceIpBlock]:
        """The device IP blocks used by Firebase Test Lab"""
        pass
    def __init__(self,
        *,
        ip_blocks : typing.Optional[typing.Iterable[global___DeviceIpBlock]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ip_blocks",b"ip_blocks"]) -> None: ...
global___DeviceIpBlockCatalog = DeviceIpBlockCatalog

class AndroidDeviceCatalog(google.protobuf.message.Message):
    """The currently supported Android devices."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MODELS_FIELD_NUMBER: builtins.int
    VERSIONS_FIELD_NUMBER: builtins.int
    RUNTIME_CONFIGURATION_FIELD_NUMBER: builtins.int
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AndroidModel]:
        """The set of supported Android device models."""
        pass
    @property
    def versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AndroidVersion]:
        """The set of supported Android OS versions."""
        pass
    @property
    def runtime_configuration(self) -> global___AndroidRuntimeConfiguration:
        """The set of supported runtime configurations."""
        pass
    def __init__(self,
        *,
        models : typing.Optional[typing.Iterable[global___AndroidModel]] = ...,
        versions : typing.Optional[typing.Iterable[global___AndroidVersion]] = ...,
        runtime_configuration : typing.Optional[global___AndroidRuntimeConfiguration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["runtime_configuration",b"runtime_configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["models",b"models","runtime_configuration",b"runtime_configuration","versions",b"versions"]) -> None: ...
global___AndroidDeviceCatalog = AndroidDeviceCatalog

class AndroidRuntimeConfiguration(google.protobuf.message.Message):
    """Android configuration that can be selected at the time a test is run."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCALES_FIELD_NUMBER: builtins.int
    ORIENTATIONS_FIELD_NUMBER: builtins.int
    @property
    def locales(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Locale]:
        """The set of available locales."""
        pass
    @property
    def orientations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Orientation]:
        """The set of available orientations."""
        pass
    def __init__(self,
        *,
        locales : typing.Optional[typing.Iterable[global___Locale]] = ...,
        orientations : typing.Optional[typing.Iterable[global___Orientation]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["locales",b"locales","orientations",b"orientations"]) -> None: ...
global___AndroidRuntimeConfiguration = AndroidRuntimeConfiguration

class AndroidModel(google.protobuf.message.Message):
    """A description of an Android device tests may be run on."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    MANUFACTURER_FIELD_NUMBER: builtins.int
    BRAND_FIELD_NUMBER: builtins.int
    CODENAME_FIELD_NUMBER: builtins.int
    FORM_FIELD_NUMBER: builtins.int
    FORM_FACTOR_FIELD_NUMBER: builtins.int
    SCREEN_X_FIELD_NUMBER: builtins.int
    SCREEN_Y_FIELD_NUMBER: builtins.int
    SCREEN_DENSITY_FIELD_NUMBER: builtins.int
    LOW_FPS_VIDEO_RECORDING_FIELD_NUMBER: builtins.int
    SUPPORTED_VERSION_IDS_FIELD_NUMBER: builtins.int
    SUPPORTED_ABIS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    THUMBNAIL_URL_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """The unique opaque id for this model.
    Use this for invoking the TestExecutionService.
    """

    name: typing.Text = ...
    """The human-readable marketing name for this device model.
    Examples: "Nexus 5", "Galaxy S5".
    """

    manufacturer: typing.Text = ...
    """The manufacturer of this device."""

    brand: typing.Text = ...
    """The company that this device is branded with.
    Example: "Google", "Samsung".
    """

    codename: typing.Text = ...
    """The name of the industrial design.
    This corresponds to android.os.Build.DEVICE.
    """

    form: global___DeviceForm.ValueType = ...
    """Whether this device is virtual or physical."""

    form_factor: global___DeviceFormFactor.ValueType = ...
    """Whether this device is a phone, tablet, wearable, etc."""

    screen_x: builtins.int = ...
    """Screen size in the horizontal (X) dimension measured in pixels."""

    screen_y: builtins.int = ...
    """Screen size in the vertical (Y) dimension measured in pixels."""

    screen_density: builtins.int = ...
    """Screen density in DPI.
    This corresponds to ro.sf.lcd_density
    """

    low_fps_video_recording: builtins.bool = ...
    """True if and only if tests with this model are recorded by stitching
    together screenshots. See use_low_spec_video_recording in device config.
    """

    @property
    def supported_version_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The set of Android versions this device supports."""
        pass
    @property
    def supported_abis(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of supported ABIs for this device.
        This corresponds to either android.os.Build.SUPPORTED_ABIS (for API level
        21 and above) or android.os.Build.CPU_ABI/CPU_ABI2.
        The most preferred ABI is the first element in the list.

        Elements are optionally prefixed by "version_id:" (where version_id is
        the id of an AndroidVersion), denoting an ABI that is supported only on
        a particular version.
        """
        pass
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Tags for this dimension.
        Examples: "default", "preview", "deprecated".
        """
        pass
    thumbnail_url: typing.Text = ...
    """URL of a thumbnail image (photo) of the device.
    e.g. https://lh3.googleusercontent.com/90WcauuJiCYABEl8U0lcZeuS5STUbf2yW...
    """

    def __init__(self,
        *,
        id : typing.Text = ...,
        name : typing.Text = ...,
        manufacturer : typing.Text = ...,
        brand : typing.Text = ...,
        codename : typing.Text = ...,
        form : global___DeviceForm.ValueType = ...,
        form_factor : global___DeviceFormFactor.ValueType = ...,
        screen_x : builtins.int = ...,
        screen_y : builtins.int = ...,
        screen_density : builtins.int = ...,
        low_fps_video_recording : builtins.bool = ...,
        supported_version_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        supported_abis : typing.Optional[typing.Iterable[typing.Text]] = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        thumbnail_url : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["brand",b"brand","codename",b"codename","form",b"form","form_factor",b"form_factor","id",b"id","low_fps_video_recording",b"low_fps_video_recording","manufacturer",b"manufacturer","name",b"name","screen_density",b"screen_density","screen_x",b"screen_x","screen_y",b"screen_y","supported_abis",b"supported_abis","supported_version_ids",b"supported_version_ids","tags",b"tags","thumbnail_url",b"thumbnail_url"]) -> None: ...
global___AndroidModel = AndroidModel

class AndroidVersion(google.protobuf.message.Message):
    """A version of the Android OS."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    VERSION_STRING_FIELD_NUMBER: builtins.int
    API_LEVEL_FIELD_NUMBER: builtins.int
    CODE_NAME_FIELD_NUMBER: builtins.int
    RELEASE_DATE_FIELD_NUMBER: builtins.int
    DISTRIBUTION_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """An opaque id for this Android version.
    Use this id to invoke the TestExecutionService.
    """

    version_string: typing.Text = ...
    """A string representing this version of the Android OS.
    Examples: "4.3", "4.4".
    """

    api_level: builtins.int = ...
    """The API level for this Android version.
    Examples: 18, 19.
    """

    code_name: typing.Text = ...
    """The code name for this Android version.
    Examples: "JellyBean", "KitKat".
    """

    @property
    def release_date(self) -> google.type.date_pb2.Date:
        """The date this Android version became available in the market."""
        pass
    @property
    def distribution(self) -> global___Distribution:
        """Market share for this version."""
        pass
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Tags for this dimension.
        Examples: "default", "preview", "deprecated".
        """
        pass
    def __init__(self,
        *,
        id : typing.Text = ...,
        version_string : typing.Text = ...,
        api_level : builtins.int = ...,
        code_name : typing.Text = ...,
        release_date : typing.Optional[google.type.date_pb2.Date] = ...,
        distribution : typing.Optional[global___Distribution] = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["distribution",b"distribution","release_date",b"release_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_level",b"api_level","code_name",b"code_name","distribution",b"distribution","id",b"id","release_date",b"release_date","tags",b"tags","version_string",b"version_string"]) -> None: ...
global___AndroidVersion = AndroidVersion

class Distribution(google.protobuf.message.Message):
    """Data about the relative number of devices running a
    given configuration of the Android platform.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MEASUREMENT_TIME_FIELD_NUMBER: builtins.int
    MARKET_SHARE_FIELD_NUMBER: builtins.int
    @property
    def measurement_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time this distribution was measured."""
        pass
    market_share: builtins.float = ...
    """Output only. The estimated fraction (0-1) of the total market with this
    configuration.
    """

    def __init__(self,
        *,
        measurement_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        market_share : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["measurement_time",b"measurement_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["market_share",b"market_share","measurement_time",b"measurement_time"]) -> None: ...
global___Distribution = Distribution

class IosDeviceCatalog(google.protobuf.message.Message):
    """The currently supported iOS devices."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MODELS_FIELD_NUMBER: builtins.int
    VERSIONS_FIELD_NUMBER: builtins.int
    XCODE_VERSIONS_FIELD_NUMBER: builtins.int
    RUNTIME_CONFIGURATION_FIELD_NUMBER: builtins.int
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IosModel]:
        """The set of supported iOS device models."""
        pass
    @property
    def versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IosVersion]:
        """The set of supported iOS software versions."""
        pass
    @property
    def xcode_versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___XcodeVersion]:
        """The set of supported Xcode versions."""
        pass
    @property
    def runtime_configuration(self) -> global___IosRuntimeConfiguration:
        """The set of supported runtime configurations."""
        pass
    def __init__(self,
        *,
        models : typing.Optional[typing.Iterable[global___IosModel]] = ...,
        versions : typing.Optional[typing.Iterable[global___IosVersion]] = ...,
        xcode_versions : typing.Optional[typing.Iterable[global___XcodeVersion]] = ...,
        runtime_configuration : typing.Optional[global___IosRuntimeConfiguration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["runtime_configuration",b"runtime_configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["models",b"models","runtime_configuration",b"runtime_configuration","versions",b"versions","xcode_versions",b"xcode_versions"]) -> None: ...
global___IosDeviceCatalog = IosDeviceCatalog

class IosRuntimeConfiguration(google.protobuf.message.Message):
    """iOS configuration that can be selected at the time a test is run."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCALES_FIELD_NUMBER: builtins.int
    ORIENTATIONS_FIELD_NUMBER: builtins.int
    @property
    def locales(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Locale]:
        """The set of available locales."""
        pass
    @property
    def orientations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Orientation]:
        """The set of available orientations."""
        pass
    def __init__(self,
        *,
        locales : typing.Optional[typing.Iterable[global___Locale]] = ...,
        orientations : typing.Optional[typing.Iterable[global___Orientation]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["locales",b"locales","orientations",b"orientations"]) -> None: ...
global___IosRuntimeConfiguration = IosRuntimeConfiguration

class IosModel(google.protobuf.message.Message):
    """A description of an iOS device tests may be run on."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SUPPORTED_VERSION_IDS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    DEVICE_CAPABILITIES_FIELD_NUMBER: builtins.int
    SCREEN_X_FIELD_NUMBER: builtins.int
    SCREEN_Y_FIELD_NUMBER: builtins.int
    SCREEN_DENSITY_FIELD_NUMBER: builtins.int
    FORM_FACTOR_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """The unique opaque id for this model.
    Use this for invoking the TestExecutionService.
    """

    name: typing.Text = ...
    """The human-readable name for this device model.
    Examples: "iPhone 4s", "iPad Mini 2".
    """

    @property
    def supported_version_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The set of iOS major software versions this device supports."""
        pass
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Tags for this dimension.
        Examples: "default", "preview", "deprecated".
        """
        pass
    @property
    def device_capabilities(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Device capabilities.
        Copied from
        https://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html
        """
        pass
    screen_x: builtins.int = ...
    """Screen size in the horizontal (X) dimension measured in pixels."""

    screen_y: builtins.int = ...
    """Screen size in the vertical (Y) dimension measured in pixels."""

    screen_density: builtins.int = ...
    """Screen density in DPI."""

    form_factor: global___DeviceFormFactor.ValueType = ...
    """Whether this device is a phone, tablet, wearable, etc."""

    def __init__(self,
        *,
        id : typing.Text = ...,
        name : typing.Text = ...,
        supported_version_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        device_capabilities : typing.Optional[typing.Iterable[typing.Text]] = ...,
        screen_x : builtins.int = ...,
        screen_y : builtins.int = ...,
        screen_density : builtins.int = ...,
        form_factor : global___DeviceFormFactor.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_capabilities",b"device_capabilities","form_factor",b"form_factor","id",b"id","name",b"name","screen_density",b"screen_density","screen_x",b"screen_x","screen_y",b"screen_y","supported_version_ids",b"supported_version_ids","tags",b"tags"]) -> None: ...
global___IosModel = IosModel

class IosVersion(google.protobuf.message.Message):
    """An iOS version."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    MAJOR_VERSION_FIELD_NUMBER: builtins.int
    MINOR_VERSION_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    SUPPORTED_XCODE_VERSION_IDS_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """An opaque id for this iOS version.
    Use this id to invoke the TestExecutionService.
    """

    major_version: builtins.int = ...
    """An integer representing the major iOS version.
    Examples: "8", "9".
    """

    minor_version: builtins.int = ...
    """An integer representing the minor iOS version.
    Examples: "1", "2".
    """

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Tags for this dimension.
        Examples: "default", "preview", "deprecated".
        """
        pass
    @property
    def supported_xcode_version_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The available Xcode versions for this version."""
        pass
    def __init__(self,
        *,
        id : typing.Text = ...,
        major_version : builtins.int = ...,
        minor_version : builtins.int = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        supported_xcode_version_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","major_version",b"major_version","minor_version",b"minor_version","supported_xcode_version_ids",b"supported_xcode_version_ids","tags",b"tags"]) -> None: ...
global___IosVersion = IosVersion

class Locale(google.protobuf.message.Message):
    """A location/region designation for language."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """The id for this locale.
    Example: "en_US".
    """

    name: typing.Text = ...
    """A human-friendly name for this language/locale.
    Example: "English".
    """

    region: typing.Text = ...
    """A human-friendly string representing the region for this
    locale. Example: "United States". Not present for every locale.
    """

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Tags for this dimension.
        Example: "default".
        """
        pass
    def __init__(self,
        *,
        id : typing.Text = ...,
        name : typing.Text = ...,
        region : typing.Text = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name","region",b"region","tags",b"tags"]) -> None: ...
global___Locale = Locale

class Orientation(google.protobuf.message.Message):
    """Screen orientation of the device."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """The id for this orientation.
    Example: "portrait".
    """

    name: typing.Text = ...
    """A human-friendly name for this orientation.
    Example: "portrait".
    """

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Tags for this dimension.
        Example: "default".
        """
        pass
    def __init__(self,
        *,
        id : typing.Text = ...,
        name : typing.Text = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name","tags",b"tags"]) -> None: ...
global___Orientation = Orientation

class XcodeVersion(google.protobuf.message.Message):
    """An Xcode version that an iOS version is compatible with."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VERSION_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    version: typing.Text = ...
    """The id for this version.
    Example: "9.2".
    """

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Tags for this Xcode version.
        Example: "default".
        """
        pass
    def __init__(self,
        *,
        version : typing.Text = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["tags",b"tags","version",b"version"]) -> None: ...
global___XcodeVersion = XcodeVersion

class NetworkConfigurationCatalog(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONFIGURATIONS_FIELD_NUMBER: builtins.int
    @property
    def configurations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkConfiguration]: ...
    def __init__(self,
        *,
        configurations : typing.Optional[typing.Iterable[global___NetworkConfiguration]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["configurations",b"configurations"]) -> None: ...
global___NetworkConfigurationCatalog = NetworkConfigurationCatalog

class NetworkConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    UP_RULE_FIELD_NUMBER: builtins.int
    DOWN_RULE_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """The unique opaque id for this network traffic configuration."""

    @property
    def up_rule(self) -> global___TrafficRule:
        """The emulation rule applying to the upload traffic."""
        pass
    @property
    def down_rule(self) -> global___TrafficRule:
        """The emulation rule applying to the download traffic."""
        pass
    def __init__(self,
        *,
        id : typing.Text = ...,
        up_rule : typing.Optional[global___TrafficRule] = ...,
        down_rule : typing.Optional[global___TrafficRule] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["down_rule",b"down_rule","up_rule",b"up_rule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["down_rule",b"down_rule","id",b"id","up_rule",b"up_rule"]) -> None: ...
global___NetworkConfiguration = NetworkConfiguration

class TrafficRule(google.protobuf.message.Message):
    """Network emulation parameters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DELAY_FIELD_NUMBER: builtins.int
    PACKET_LOSS_RATIO_FIELD_NUMBER: builtins.int
    PACKET_DUPLICATION_RATIO_FIELD_NUMBER: builtins.int
    BANDWIDTH_FIELD_NUMBER: builtins.int
    BURST_FIELD_NUMBER: builtins.int
    @property
    def delay(self) -> google.protobuf.duration_pb2.Duration:
        """Packet delay, must be >= 0."""
        pass
    packet_loss_ratio: builtins.float = ...
    """Packet loss ratio (0.0 - 1.0)."""

    packet_duplication_ratio: builtins.float = ...
    """Packet duplication ratio (0.0 - 1.0)."""

    bandwidth: builtins.float = ...
    """Bandwidth in kbits/second."""

    burst: builtins.float = ...
    """Burst size in kbits."""

    def __init__(self,
        *,
        delay : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        packet_loss_ratio : builtins.float = ...,
        packet_duplication_ratio : builtins.float = ...,
        bandwidth : builtins.float = ...,
        burst : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["delay",b"delay"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bandwidth",b"bandwidth","burst",b"burst","delay",b"delay","packet_duplication_ratio",b"packet_duplication_ratio","packet_loss_ratio",b"packet_loss_ratio"]) -> None: ...
global___TrafficRule = TrafficRule

class ProvidedSoftwareCatalog(google.protobuf.message.Message):
    """The currently provided software environment on the devices under test."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ORCHESTRATOR_VERSION_FIELD_NUMBER: builtins.int
    ANDROIDX_ORCHESTRATOR_VERSION_FIELD_NUMBER: builtins.int
    orchestrator_version: typing.Text = ...
    """A string representing the current version of Android Test Orchestrator
    that is used in the environment. The package is available at
    https://maven.google.com/web/index.html#com.android.support.test:orchestrator.
    """

    androidx_orchestrator_version: typing.Text = ...
    """A string representing the current version of AndroidX Test Orchestrator
    that is used in the environment. The package is available at
    https://maven.google.com/web/index.html#androidx.test:orchestrator.
    """

    def __init__(self,
        *,
        orchestrator_version : typing.Text = ...,
        androidx_orchestrator_version : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["androidx_orchestrator_version",b"androidx_orchestrator_version","orchestrator_version",b"orchestrator_version"]) -> None: ...
global___ProvidedSoftwareCatalog = ProvidedSoftwareCatalog
