"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.api.httpbody_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class RetryBuildRequest(google.protobuf.message.Message):
    """Specifies a build to retry."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the `Build` to retry.
    Format: `projects/{project}/locations/{location}/builds/{build}`
    """

    project_id: typing.Text = ...
    """Required. ID of the project."""

    id: typing.Text = ...
    """Required. Build ID of the original build."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        project_id : typing.Text = ...,
        id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name","project_id",b"project_id"]) -> None: ...
global___RetryBuildRequest = RetryBuildRequest

class RunBuildTriggerRequest(google.protobuf.message.Message):
    """Specifies a build trigger to run and the source to use."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TRIGGER_ID_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the `Trigger` to run.
    Format: `projects/{project}/locations/{location}/triggers/{trigger}`
    """

    project_id: typing.Text = ...
    """Required. ID of the project."""

    trigger_id: typing.Text = ...
    """Required. ID of the trigger."""

    @property
    def source(self) -> global___RepoSource:
        """Source to build against this trigger."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        project_id : typing.Text = ...,
        trigger_id : typing.Text = ...,
        source : typing.Optional[global___RepoSource] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","project_id",b"project_id","source",b"source","trigger_id",b"trigger_id"]) -> None: ...
global___RunBuildTriggerRequest = RunBuildTriggerRequest

class StorageSource(google.protobuf.message.Message):
    """Location of the source in an archive file in Google Cloud Storage."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUCKET_FIELD_NUMBER: builtins.int
    OBJECT_FIELD_NUMBER: builtins.int
    GENERATION_FIELD_NUMBER: builtins.int
    bucket: typing.Text = ...
    """Google Cloud Storage bucket containing the source (see
    [Bucket Name
    Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
    """

    object: typing.Text = ...
    """Google Cloud Storage object containing the source.

    This object must be a gzipped archive file (`.tar.gz`) containing source to
    build.
    """

    generation: builtins.int = ...
    """Google Cloud Storage generation for the object. If the generation is
    omitted, the latest generation will be used.
    """

    def __init__(self,
        *,
        bucket : typing.Text = ...,
        object : typing.Text = ...,
        generation : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket",b"bucket","generation",b"generation","object",b"object"]) -> None: ...
global___StorageSource = StorageSource

class RepoSource(google.protobuf.message.Message):
    """Location of the source in a Google Cloud Source Repository."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SubstitutionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROJECT_ID_FIELD_NUMBER: builtins.int
    REPO_NAME_FIELD_NUMBER: builtins.int
    BRANCH_NAME_FIELD_NUMBER: builtins.int
    TAG_NAME_FIELD_NUMBER: builtins.int
    COMMIT_SHA_FIELD_NUMBER: builtins.int
    DIR_FIELD_NUMBER: builtins.int
    INVERT_REGEX_FIELD_NUMBER: builtins.int
    SUBSTITUTIONS_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """ID of the project that owns the Cloud Source Repository. If omitted, the
    project ID requesting the build is assumed.
    """

    repo_name: typing.Text = ...
    """Name of the Cloud Source Repository."""

    branch_name: typing.Text = ...
    """Regex matching branches to build.

    The syntax of the regular expressions accepted is the syntax accepted by
    RE2 and described at https://github.com/google/re2/wiki/Syntax
    """

    tag_name: typing.Text = ...
    """Regex matching tags to build.

    The syntax of the regular expressions accepted is the syntax accepted by
    RE2 and described at https://github.com/google/re2/wiki/Syntax
    """

    commit_sha: typing.Text = ...
    """Explicit commit SHA to build."""

    dir: typing.Text = ...
    """Directory, relative to the source root, in which to run the build.

    This must be a relative path. If a step's `dir` is specified and is an
    absolute path, this value is ignored for that step's execution.
    """

    invert_regex: builtins.bool = ...
    """Only trigger a build if the revision regex does NOT match the revision
    regex.
    """

    @property
    def substitutions(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Substitutions to use in a triggered build.
        Should only be used with RunBuildTrigger
        """
        pass
    def __init__(self,
        *,
        project_id : typing.Text = ...,
        repo_name : typing.Text = ...,
        branch_name : typing.Text = ...,
        tag_name : typing.Text = ...,
        commit_sha : typing.Text = ...,
        dir : typing.Text = ...,
        invert_regex : builtins.bool = ...,
        substitutions : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["branch_name",b"branch_name","commit_sha",b"commit_sha","revision",b"revision","tag_name",b"tag_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["branch_name",b"branch_name","commit_sha",b"commit_sha","dir",b"dir","invert_regex",b"invert_regex","project_id",b"project_id","repo_name",b"repo_name","revision",b"revision","substitutions",b"substitutions","tag_name",b"tag_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["revision",b"revision"]) -> typing.Optional[typing_extensions.Literal["branch_name","tag_name","commit_sha"]]: ...
global___RepoSource = RepoSource

class StorageSourceManifest(google.protobuf.message.Message):
    """Location of the source manifest in Google Cloud Storage.
    This feature is in Preview; see description
    [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUCKET_FIELD_NUMBER: builtins.int
    OBJECT_FIELD_NUMBER: builtins.int
    GENERATION_FIELD_NUMBER: builtins.int
    bucket: typing.Text = ...
    """Google Cloud Storage bucket containing the source manifest (see [Bucket
    Name
    Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
    """

    object: typing.Text = ...
    """Google Cloud Storage object containing the source manifest.

    This object must be a JSON file.
    """

    generation: builtins.int = ...
    """Google Cloud Storage generation for the object. If the generation is
    omitted, the latest generation will be used.
    """

    def __init__(self,
        *,
        bucket : typing.Text = ...,
        object : typing.Text = ...,
        generation : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket",b"bucket","generation",b"generation","object",b"object"]) -> None: ...
global___StorageSourceManifest = StorageSourceManifest

class Source(google.protobuf.message.Message):
    """Location of the source in a supported storage service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STORAGE_SOURCE_FIELD_NUMBER: builtins.int
    REPO_SOURCE_FIELD_NUMBER: builtins.int
    STORAGE_SOURCE_MANIFEST_FIELD_NUMBER: builtins.int
    @property
    def storage_source(self) -> global___StorageSource:
        """If provided, get the source from this location in Google Cloud Storage."""
        pass
    @property
    def repo_source(self) -> global___RepoSource:
        """If provided, get the source from this location in a Cloud Source
        Repository.
        """
        pass
    @property
    def storage_source_manifest(self) -> global___StorageSourceManifest:
        """If provided, get the source from this manifest in Google Cloud Storage.
        This feature is in Preview; see description
        [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher).
        """
        pass
    def __init__(self,
        *,
        storage_source : typing.Optional[global___StorageSource] = ...,
        repo_source : typing.Optional[global___RepoSource] = ...,
        storage_source_manifest : typing.Optional[global___StorageSourceManifest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["repo_source",b"repo_source","source",b"source","storage_source",b"storage_source","storage_source_manifest",b"storage_source_manifest"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["repo_source",b"repo_source","source",b"source","storage_source",b"storage_source","storage_source_manifest",b"storage_source_manifest"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["source",b"source"]) -> typing.Optional[typing_extensions.Literal["storage_source","repo_source","storage_source_manifest"]]: ...
global___Source = Source

class BuiltImage(google.protobuf.message.Message):
    """An image built by the pipeline."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DIGEST_FIELD_NUMBER: builtins.int
    PUSH_TIMING_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name used to push the container image to Google Container Registry, as
    presented to `docker push`.
    """

    digest: typing.Text = ...
    """Docker Registry 2.0 digest."""

    @property
    def push_timing(self) -> global___TimeSpan:
        """Output only. Stores timing information for pushing the specified image."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        digest : typing.Text = ...,
        push_timing : typing.Optional[global___TimeSpan] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["push_timing",b"push_timing"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["digest",b"digest","name",b"name","push_timing",b"push_timing"]) -> None: ...
global___BuiltImage = BuiltImage

class BuildStep(google.protobuf.message.Message):
    """A step in the build pipeline."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ENV_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    DIR_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    WAIT_FOR_FIELD_NUMBER: builtins.int
    ENTRYPOINT_FIELD_NUMBER: builtins.int
    SECRET_ENV_FIELD_NUMBER: builtins.int
    VOLUMES_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    PULL_TIMING_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    SCRIPT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the container image that will run this particular
    build step.

    If the image is available in the host's Docker daemon's cache, it
    will be run directly. If not, the host will attempt to pull the image
    first, using the builder service account's credentials if necessary.

    The Docker daemon's cache will already have the latest versions of all of
    the officially supported build steps
    ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)).
    The Docker daemon will also have cached many of the layers for some popular
    images, like "ubuntu", "debian", but they will be refreshed at the time you
    attempt to use them.

    If you built an image in a previous build step, it will be stored in the
    host's Docker daemon's cache and is available to use as the name for a
    later build step.
    """

    @property
    def env(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of environment variable definitions to be used when running a step.

        The elements are of the form "KEY=VALUE" for the environment variable "KEY"
        being given the value "VALUE".
        """
        pass
    @property
    def args(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of arguments that will be presented to the step when it is started.

        If the image used to run the step's container has an entrypoint, the `args`
        are used as arguments to that entrypoint. If the image does not define
        an entrypoint, the first element in args is used as the entrypoint,
        and the remainder will be used as arguments.
        """
        pass
    dir: typing.Text = ...
    """Working directory to use when running this step's container.

    If this value is a relative path, it is relative to the build's working
    directory. If this value is absolute, it may be outside the build's working
    directory, in which case the contents of the path may not be persisted
    across build step executions, unless a `volume` for that path is specified.

    If the build specifies a `RepoSource` with `dir` and a step with a `dir`,
    which specifies an absolute path, the `RepoSource` `dir` is ignored for
    the step's execution.
    """

    id: typing.Text = ...
    """Unique identifier for this build step, used in `wait_for` to
    reference this build step as a dependency.
    """

    @property
    def wait_for(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The ID(s) of the step(s) that this build step depends on.
        This build step will not start until all the build steps in `wait_for`
        have completed successfully. If `wait_for` is empty, this build step will
        start when all previous build steps in the `Build.Steps` list have
        completed successfully.
        """
        pass
    entrypoint: typing.Text = ...
    """Entrypoint to be used instead of the build step image's default entrypoint.
    If unset, the image's default entrypoint is used.
    """

    @property
    def secret_env(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of environment variables which are encrypted using a Cloud Key
        Management Service crypto key. These values must be specified in the
        build's `Secret`.
        """
        pass
    @property
    def volumes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Volume]:
        """List of volumes to mount into the build step.

        Each volume is created as an empty volume prior to execution of the
        build step. Upon completion of the build, volumes and their contents are
        discarded.

        Using a named volume in only one step is not valid as it is indicative
        of a build request with an incorrect configuration.
        """
        pass
    @property
    def timing(self) -> global___TimeSpan:
        """Output only. Stores timing information for executing this build step."""
        pass
    @property
    def pull_timing(self) -> global___TimeSpan:
        """Output only. Stores timing information for pulling this build step's
        builder image only.
        """
        pass
    @property
    def timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Time limit for executing this build step. If not defined, the step has no
        time limit and will be allowed to continue to run until either it completes
        or the build itself times out.
        """
        pass
    status: global___Build.Status.ValueType = ...
    """Output only. Status of the build step. At this time, build step status is
    only updated on build completion; step status is not updated in real-time
    as the build progresses.
    """

    script: typing.Text = ...
    """A shell script to be executed in the step.

    When script is provided, the user cannot specify the entrypoint or args.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        env : typing.Optional[typing.Iterable[typing.Text]] = ...,
        args : typing.Optional[typing.Iterable[typing.Text]] = ...,
        dir : typing.Text = ...,
        id : typing.Text = ...,
        wait_for : typing.Optional[typing.Iterable[typing.Text]] = ...,
        entrypoint : typing.Text = ...,
        secret_env : typing.Optional[typing.Iterable[typing.Text]] = ...,
        volumes : typing.Optional[typing.Iterable[global___Volume]] = ...,
        timing : typing.Optional[global___TimeSpan] = ...,
        pull_timing : typing.Optional[global___TimeSpan] = ...,
        timeout : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        status : global___Build.Status.ValueType = ...,
        script : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pull_timing",b"pull_timing","timeout",b"timeout","timing",b"timing"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["args",b"args","dir",b"dir","entrypoint",b"entrypoint","env",b"env","id",b"id","name",b"name","pull_timing",b"pull_timing","script",b"script","secret_env",b"secret_env","status",b"status","timeout",b"timeout","timing",b"timing","volumes",b"volumes","wait_for",b"wait_for"]) -> None: ...
global___BuildStep = BuildStep

class Volume(google.protobuf.message.Message):
    """Volume describes a Docker container volume which is mounted into build steps
    in order to persist files across build step execution.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of the volume to mount.

    Volume names must be unique per build step and must be valid names for
    Docker volumes. Each named volume must be used by at least two build steps.
    """

    path: typing.Text = ...
    """Path at which to mount the volume.

    Paths must be absolute and cannot conflict with other volume paths on the
    same build step or with certain reserved volume paths.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        path : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","path",b"path"]) -> None: ...
global___Volume = Volume

class Results(google.protobuf.message.Message):
    """Artifacts created by the build pipeline."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IMAGES_FIELD_NUMBER: builtins.int
    BUILD_STEP_IMAGES_FIELD_NUMBER: builtins.int
    ARTIFACT_MANIFEST_FIELD_NUMBER: builtins.int
    NUM_ARTIFACTS_FIELD_NUMBER: builtins.int
    BUILD_STEP_OUTPUTS_FIELD_NUMBER: builtins.int
    ARTIFACT_TIMING_FIELD_NUMBER: builtins.int
    @property
    def images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BuiltImage]:
        """Container images that were built as a part of the build."""
        pass
    @property
    def build_step_images(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of build step digests, in the order corresponding to build step
        indices.
        """
        pass
    artifact_manifest: typing.Text = ...
    """Path to the artifact manifest. Only populated when artifacts are uploaded."""

    num_artifacts: builtins.int = ...
    """Number of artifacts uploaded. Only populated when artifacts are uploaded."""

    @property
    def build_step_outputs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]:
        """List of build step outputs, produced by builder images, in the order
        corresponding to build step indices.

        [Cloud Builders](https://cloud.google.com/cloud-build/docs/cloud-builders)
        can produce this output by writing to `$BUILDER_OUTPUT/output`.
        Only the first 4KB of data is stored.
        """
        pass
    @property
    def artifact_timing(self) -> global___TimeSpan:
        """Time to push all non-container artifacts."""
        pass
    def __init__(self,
        *,
        images : typing.Optional[typing.Iterable[global___BuiltImage]] = ...,
        build_step_images : typing.Optional[typing.Iterable[typing.Text]] = ...,
        artifact_manifest : typing.Text = ...,
        num_artifacts : builtins.int = ...,
        build_step_outputs : typing.Optional[typing.Iterable[builtins.bytes]] = ...,
        artifact_timing : typing.Optional[global___TimeSpan] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["artifact_timing",b"artifact_timing"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["artifact_manifest",b"artifact_manifest","artifact_timing",b"artifact_timing","build_step_images",b"build_step_images","build_step_outputs",b"build_step_outputs","images",b"images","num_artifacts",b"num_artifacts"]) -> None: ...
global___Results = Results

class ArtifactResult(google.protobuf.message.Message):
    """An artifact that was uploaded during a build. This
    is a single record in the artifact manifest JSON file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCATION_FIELD_NUMBER: builtins.int
    FILE_HASH_FIELD_NUMBER: builtins.int
    location: typing.Text = ...
    """The path of an artifact in a Google Cloud Storage bucket, with the
    generation number. For example,
    `gs://mybucket/path/to/output.jar#generation`.
    """

    @property
    def file_hash(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileHashes]:
        """The file hash of the artifact."""
        pass
    def __init__(self,
        *,
        location : typing.Text = ...,
        file_hash : typing.Optional[typing.Iterable[global___FileHashes]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_hash",b"file_hash","location",b"location"]) -> None: ...
global___ArtifactResult = ArtifactResult

class Build(google.protobuf.message.Message):
    """A build resource in the Cloud Build API.

    At a high level, a `Build` describes where to find source code, how to build
    it (for example, the builder image to run on the source), and where to store
    the built artifacts.

    Fields can include the following variables, which will be expanded when the
    build is created:

    - $PROJECT_ID: the project ID of the build.
    - $PROJECT_NUMBER: the project number of the build.
    - $BUILD_ID: the autogenerated ID of the build.
    - $REPO_NAME: the source repository name specified by RepoSource.
    - $BRANCH_NAME: the branch name specified by RepoSource.
    - $TAG_NAME: the tag name specified by RepoSource.
    - $REVISION_ID or $COMMIT_SHA: the commit SHA specified by RepoSource or
      resolved from the specified branch or tag.
    - $SHORT_SHA: first 7 characters of $REVISION_ID or $COMMIT_SHA.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATUS_UNKNOWN: Build.Status.ValueType = ...  # 0
        """Status of the build is unknown."""

        PENDING: Build.Status.ValueType = ...  # 10
        """Build has been created and is pending execution and queuing. It has not
        been queued.
        """

        QUEUED: Build.Status.ValueType = ...  # 1
        """Build or step is queued; work has not yet begun."""

        WORKING: Build.Status.ValueType = ...  # 2
        """Build or step is being executed."""

        SUCCESS: Build.Status.ValueType = ...  # 3
        """Build or step finished successfully."""

        FAILURE: Build.Status.ValueType = ...  # 4
        """Build or step failed to complete successfully."""

        INTERNAL_ERROR: Build.Status.ValueType = ...  # 5
        """Build or step failed due to an internal cause."""

        TIMEOUT: Build.Status.ValueType = ...  # 6
        """Build or step took longer than was allowed."""

        CANCELLED: Build.Status.ValueType = ...  # 7
        """Build or step was canceled by a user."""

        EXPIRED: Build.Status.ValueType = ...  # 9
        """Build was enqueued for longer than the value of `queue_ttl`."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Possible status of a build or build step."""
        pass

    STATUS_UNKNOWN: Build.Status.ValueType = ...  # 0
    """Status of the build is unknown."""

    PENDING: Build.Status.ValueType = ...  # 10
    """Build has been created and is pending execution and queuing. It has not
    been queued.
    """

    QUEUED: Build.Status.ValueType = ...  # 1
    """Build or step is queued; work has not yet begun."""

    WORKING: Build.Status.ValueType = ...  # 2
    """Build or step is being executed."""

    SUCCESS: Build.Status.ValueType = ...  # 3
    """Build or step finished successfully."""

    FAILURE: Build.Status.ValueType = ...  # 4
    """Build or step failed to complete successfully."""

    INTERNAL_ERROR: Build.Status.ValueType = ...  # 5
    """Build or step failed due to an internal cause."""

    TIMEOUT: Build.Status.ValueType = ...  # 6
    """Build or step took longer than was allowed."""

    CANCELLED: Build.Status.ValueType = ...  # 7
    """Build or step was canceled by a user."""

    EXPIRED: Build.Status.ValueType = ...  # 9
    """Build was enqueued for longer than the value of `queue_ttl`."""


    class Warning(google.protobuf.message.Message):
        """A non-fatal problem encountered during the execution of the build."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Priority:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _PriorityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Priority.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            PRIORITY_UNSPECIFIED: Build.Warning.Priority.ValueType = ...  # 0
            """Should not be used."""

            INFO: Build.Warning.Priority.ValueType = ...  # 1
            """e.g. deprecation warnings and alternative feature highlights."""

            WARNING: Build.Warning.Priority.ValueType = ...  # 2
            """e.g. automated detection of possible issues with the build."""

            ALERT: Build.Warning.Priority.ValueType = ...  # 3
            """e.g. alerts that a feature used in the build is pending removal"""

        class Priority(_Priority, metaclass=_PriorityEnumTypeWrapper):
            """The relative importance of this warning."""
            pass

        PRIORITY_UNSPECIFIED: Build.Warning.Priority.ValueType = ...  # 0
        """Should not be used."""

        INFO: Build.Warning.Priority.ValueType = ...  # 1
        """e.g. deprecation warnings and alternative feature highlights."""

        WARNING: Build.Warning.Priority.ValueType = ...  # 2
        """e.g. automated detection of possible issues with the build."""

        ALERT: Build.Warning.Priority.ValueType = ...  # 3
        """e.g. alerts that a feature used in the build is pending removal"""


        TEXT_FIELD_NUMBER: builtins.int
        PRIORITY_FIELD_NUMBER: builtins.int
        text: typing.Text = ...
        """Explanation of the warning generated."""

        priority: global___Build.Warning.Priority.ValueType = ...
        """The priority for this warning."""

        def __init__(self,
            *,
            text : typing.Text = ...,
            priority : global___Build.Warning.Priority.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["priority",b"priority","text",b"text"]) -> None: ...

    class FailureInfo(google.protobuf.message.Message):
        """A fatal problem encountered during the execution of the build."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _FailureType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _FailureTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FailureType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            FAILURE_TYPE_UNSPECIFIED: Build.FailureInfo.FailureType.ValueType = ...  # 0
            """Type unspecified"""

            PUSH_FAILED: Build.FailureInfo.FailureType.ValueType = ...  # 1
            """Unable to push the image to the repository."""

            PUSH_IMAGE_NOT_FOUND: Build.FailureInfo.FailureType.ValueType = ...  # 2
            """Final image not found."""

            PUSH_NOT_AUTHORIZED: Build.FailureInfo.FailureType.ValueType = ...  # 3
            """Unauthorized push of the final image."""

            LOGGING_FAILURE: Build.FailureInfo.FailureType.ValueType = ...  # 4
            """Backend logging failures. Should retry."""

            USER_BUILD_STEP: Build.FailureInfo.FailureType.ValueType = ...  # 5
            """A build step has failed."""

            FETCH_SOURCE_FAILED: Build.FailureInfo.FailureType.ValueType = ...  # 6
            """The source fetching has failed."""

        class FailureType(_FailureType, metaclass=_FailureTypeEnumTypeWrapper):
            """The name of a fatal problem encountered during the execution of the
            build.
            """
            pass

        FAILURE_TYPE_UNSPECIFIED: Build.FailureInfo.FailureType.ValueType = ...  # 0
        """Type unspecified"""

        PUSH_FAILED: Build.FailureInfo.FailureType.ValueType = ...  # 1
        """Unable to push the image to the repository."""

        PUSH_IMAGE_NOT_FOUND: Build.FailureInfo.FailureType.ValueType = ...  # 2
        """Final image not found."""

        PUSH_NOT_AUTHORIZED: Build.FailureInfo.FailureType.ValueType = ...  # 3
        """Unauthorized push of the final image."""

        LOGGING_FAILURE: Build.FailureInfo.FailureType.ValueType = ...  # 4
        """Backend logging failures. Should retry."""

        USER_BUILD_STEP: Build.FailureInfo.FailureType.ValueType = ...  # 5
        """A build step has failed."""

        FETCH_SOURCE_FAILED: Build.FailureInfo.FailureType.ValueType = ...  # 6
        """The source fetching has failed."""


        TYPE_FIELD_NUMBER: builtins.int
        DETAIL_FIELD_NUMBER: builtins.int
        type: global___Build.FailureInfo.FailureType.ValueType = ...
        """The name of the failure."""

        detail: typing.Text = ...
        """Explains the failure issue in more detail using hard-coded text."""

        def __init__(self,
            *,
            type : global___Build.FailureInfo.FailureType.ValueType = ...,
            detail : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["detail",b"detail","type",b"type"]) -> None: ...

    class SubstitutionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class TimingEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___TimeSpan: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___TimeSpan] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    STATUS_DETAIL_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    STEPS_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    FINISH_TIME_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    IMAGES_FIELD_NUMBER: builtins.int
    QUEUE_TTL_FIELD_NUMBER: builtins.int
    ARTIFACTS_FIELD_NUMBER: builtins.int
    LOGS_BUCKET_FIELD_NUMBER: builtins.int
    SOURCE_PROVENANCE_FIELD_NUMBER: builtins.int
    BUILD_TRIGGER_ID_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    LOG_URL_FIELD_NUMBER: builtins.int
    SUBSTITUTIONS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    SECRETS_FIELD_NUMBER: builtins.int
    TIMING_FIELD_NUMBER: builtins.int
    APPROVAL_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    AVAILABLE_SECRETS_FIELD_NUMBER: builtins.int
    WARNINGS_FIELD_NUMBER: builtins.int
    FAILURE_INFO_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The 'Build' name with format:
    `projects/{project}/locations/{location}/builds/{build}`, where {build}
    is a unique identifier generated by the service.
    """

    id: typing.Text = ...
    """Output only. Unique identifier of the build."""

    project_id: typing.Text = ...
    """Output only. ID of the project."""

    status: global___Build.Status.ValueType = ...
    """Output only. Status of the build."""

    status_detail: typing.Text = ...
    """Output only. Customer-readable message about the current status."""

    @property
    def source(self) -> global___Source:
        """The location of the source files to build."""
        pass
    @property
    def steps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BuildStep]:
        """Required. The operations to be performed on the workspace."""
        pass
    @property
    def results(self) -> global___Results:
        """Output only. Results of the build."""
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time at which the request to create the build was received."""
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time at which execution of the build was started."""
        pass
    @property
    def finish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time at which execution of the build was finished.

        The difference between finish_time and start_time is the duration of the
        build's execution.
        """
        pass
    @property
    def timeout(self) -> google.protobuf.duration_pb2.Duration:
        """Amount of time that this build should be allowed to run, to second
        granularity. If this amount of time elapses, work on the build will cease
        and the build status will be `TIMEOUT`.

        `timeout` starts ticking from `startTime`.

        Default time is ten minutes.
        """
        pass
    @property
    def images(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of images to be pushed upon the successful completion of all build
        steps.

        The images are pushed using the builder service account's credentials.

        The digests of the pushed images will be stored in the `Build` resource's
        results field.

        If any of the images fail to be pushed, the build status is marked
        `FAILURE`.
        """
        pass
    @property
    def queue_ttl(self) -> google.protobuf.duration_pb2.Duration:
        """TTL in queue for this build. If provided and the build is enqueued longer
        than this value, the build will expire and the build status will be
        `EXPIRED`.

        The TTL starts ticking from create_time.
        """
        pass
    @property
    def artifacts(self) -> global___Artifacts:
        """Artifacts produced by the build that should be uploaded upon
        successful completion of all build steps.
        """
        pass
    logs_bucket: typing.Text = ...
    """Google Cloud Storage bucket where logs should be written (see
    [Bucket Name
    Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
    Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
    """

    @property
    def source_provenance(self) -> global___SourceProvenance:
        """Output only. A permanent fixed identifier for source."""
        pass
    build_trigger_id: typing.Text = ...
    """Output only. The ID of the `BuildTrigger` that triggered this build, if it
    was triggered automatically.
    """

    @property
    def options(self) -> global___BuildOptions:
        """Special options for this build."""
        pass
    log_url: typing.Text = ...
    """Output only. URL to logs for this build in Google Cloud Console."""

    @property
    def substitutions(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Substitutions data for `Build` resource."""
        pass
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Tags for annotation of a `Build`. These are not docker tags."""
        pass
    @property
    def secrets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Secret]:
        """Secrets to decrypt using Cloud Key Management Service.
        Note: Secret Manager is the recommended technique
        for managing sensitive data with Cloud Build. Use `available_secrets` to
        configure builds to access secrets from Secret Manager. For instructions,
        see: https://cloud.google.com/cloud-build/docs/securing-builds/use-secrets
        """
        pass
    @property
    def timing(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___TimeSpan]:
        """Output only. Stores timing information for phases of the build. Valid keys
        are:

        * BUILD: time to execute all build steps.
        * PUSH: time to push all specified images.
        * FETCHSOURCE: time to fetch source.
        * SETUPBUILD: time to set up build.

        If the build does not specify source or images,
        these keys will not be included.
        """
        pass
    @property
    def approval(self) -> global___BuildApproval:
        """Output only. Describes this build's approval configuration, status,
        and result.
        """
        pass
    service_account: typing.Text = ...
    """IAM service account whose credentials will be used at build runtime.
    Must be of the format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
    ACCOUNT can be email address or uniqueId of the service account.
    """

    @property
    def available_secrets(self) -> global___Secrets:
        """Secrets and secret environment variables."""
        pass
    @property
    def warnings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Build.Warning]:
        """Output only. Non-fatal problems encountered during the execution of the
        build.
        """
        pass
    @property
    def failure_info(self) -> global___Build.FailureInfo:
        """Output only. Contains information about the build when status=FAILURE."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Text = ...,
        project_id : typing.Text = ...,
        status : global___Build.Status.ValueType = ...,
        status_detail : typing.Text = ...,
        source : typing.Optional[global___Source] = ...,
        steps : typing.Optional[typing.Iterable[global___BuildStep]] = ...,
        results : typing.Optional[global___Results] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        finish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        timeout : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        images : typing.Optional[typing.Iterable[typing.Text]] = ...,
        queue_ttl : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        artifacts : typing.Optional[global___Artifacts] = ...,
        logs_bucket : typing.Text = ...,
        source_provenance : typing.Optional[global___SourceProvenance] = ...,
        build_trigger_id : typing.Text = ...,
        options : typing.Optional[global___BuildOptions] = ...,
        log_url : typing.Text = ...,
        substitutions : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        secrets : typing.Optional[typing.Iterable[global___Secret]] = ...,
        timing : typing.Optional[typing.Mapping[typing.Text, global___TimeSpan]] = ...,
        approval : typing.Optional[global___BuildApproval] = ...,
        service_account : typing.Text = ...,
        available_secrets : typing.Optional[global___Secrets] = ...,
        warnings : typing.Optional[typing.Iterable[global___Build.Warning]] = ...,
        failure_info : typing.Optional[global___Build.FailureInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["approval",b"approval","artifacts",b"artifacts","available_secrets",b"available_secrets","create_time",b"create_time","failure_info",b"failure_info","finish_time",b"finish_time","options",b"options","queue_ttl",b"queue_ttl","results",b"results","source",b"source","source_provenance",b"source_provenance","start_time",b"start_time","timeout",b"timeout"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["approval",b"approval","artifacts",b"artifacts","available_secrets",b"available_secrets","build_trigger_id",b"build_trigger_id","create_time",b"create_time","failure_info",b"failure_info","finish_time",b"finish_time","id",b"id","images",b"images","log_url",b"log_url","logs_bucket",b"logs_bucket","name",b"name","options",b"options","project_id",b"project_id","queue_ttl",b"queue_ttl","results",b"results","secrets",b"secrets","service_account",b"service_account","source",b"source","source_provenance",b"source_provenance","start_time",b"start_time","status",b"status","status_detail",b"status_detail","steps",b"steps","substitutions",b"substitutions","tags",b"tags","timeout",b"timeout","timing",b"timing","warnings",b"warnings"]) -> None: ...
global___Build = Build

class Artifacts(google.protobuf.message.Message):
    """Artifacts produced by a build that should be uploaded upon
    successful completion of all build steps.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ArtifactObjects(google.protobuf.message.Message):
        """Files in the workspace to upload to Cloud Storage upon successful
        completion of all build steps.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        LOCATION_FIELD_NUMBER: builtins.int
        PATHS_FIELD_NUMBER: builtins.int
        TIMING_FIELD_NUMBER: builtins.int
        location: typing.Text = ...
        """Cloud Storage bucket and optional object path, in the form
        "gs://bucket/path/to/somewhere/". (see [Bucket Name
        Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).

        Files in the workspace matching any path pattern will be uploaded to
        Cloud Storage with this location as a prefix.
        """

        @property
        def paths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Path globs used to match files in the build's workspace."""
            pass
        @property
        def timing(self) -> global___TimeSpan:
            """Output only. Stores timing information for pushing all artifact objects."""
            pass
        def __init__(self,
            *,
            location : typing.Text = ...,
            paths : typing.Optional[typing.Iterable[typing.Text]] = ...,
            timing : typing.Optional[global___TimeSpan] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["timing",b"timing"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["location",b"location","paths",b"paths","timing",b"timing"]) -> None: ...

    IMAGES_FIELD_NUMBER: builtins.int
    OBJECTS_FIELD_NUMBER: builtins.int
    @property
    def images(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of images to be pushed upon the successful completion of all build
        steps.

        The images will be pushed using the builder service account's credentials.

        The digests of the pushed images will be stored in the Build resource's
        results field.

        If any of the images fail to be pushed, the build is marked FAILURE.
        """
        pass
    @property
    def objects(self) -> global___Artifacts.ArtifactObjects:
        """A list of objects to be uploaded to Cloud Storage upon successful
        completion of all build steps.

        Files in the workspace matching specified paths globs will be uploaded to
        the specified Cloud Storage location using the builder service account's
        credentials.

        The location and generation of the uploaded objects will be stored in the
        Build resource's results field.

        If any objects fail to be pushed, the build is marked FAILURE.
        """
        pass
    def __init__(self,
        *,
        images : typing.Optional[typing.Iterable[typing.Text]] = ...,
        objects : typing.Optional[global___Artifacts.ArtifactObjects] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["objects",b"objects"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["images",b"images","objects",b"objects"]) -> None: ...
global___Artifacts = Artifacts

class TimeSpan(google.protobuf.message.Message):
    """Start and end times for a build execution phase."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Start of time span."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """End of time span."""
        pass
    def __init__(self,
        *,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> None: ...
global___TimeSpan = TimeSpan

class BuildOperationMetadata(google.protobuf.message.Message):
    """Metadata for build operations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUILD_FIELD_NUMBER: builtins.int
    @property
    def build(self) -> global___Build:
        """The build that the operation is tracking."""
        pass
    def __init__(self,
        *,
        build : typing.Optional[global___Build] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["build",b"build"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["build",b"build"]) -> None: ...
global___BuildOperationMetadata = BuildOperationMetadata

class SourceProvenance(google.protobuf.message.Message):
    """Provenance of the source. Ways to find the original source, or verify that
    some source was used for this build.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class FileHashesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___FileHashes: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___FileHashes] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    RESOLVED_STORAGE_SOURCE_FIELD_NUMBER: builtins.int
    RESOLVED_REPO_SOURCE_FIELD_NUMBER: builtins.int
    RESOLVED_STORAGE_SOURCE_MANIFEST_FIELD_NUMBER: builtins.int
    FILE_HASHES_FIELD_NUMBER: builtins.int
    @property
    def resolved_storage_source(self) -> global___StorageSource:
        """A copy of the build's `source.storage_source`, if exists, with any
        generations resolved.
        """
        pass
    @property
    def resolved_repo_source(self) -> global___RepoSource:
        """A copy of the build's `source.repo_source`, if exists, with any
        revisions resolved.
        """
        pass
    @property
    def resolved_storage_source_manifest(self) -> global___StorageSourceManifest:
        """A copy of the build's `source.storage_source_manifest`, if exists, with any
        revisions resolved.
        This feature is in Preview.
        """
        pass
    @property
    def file_hashes(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___FileHashes]:
        """Output only. Hash(es) of the build source, which can be used to verify that
        the original source integrity was maintained in the build. Note that
        `FileHashes` will only be populated if `BuildOptions` has requested a
        `SourceProvenanceHash`.

        The keys to this map are file paths used as build source and the values
        contain the hash values for those files.

        If the build source came in a single package such as a gzipped tarfile
        (`.tar.gz`), the `FileHash` will be for the single path to that file.
        """
        pass
    def __init__(self,
        *,
        resolved_storage_source : typing.Optional[global___StorageSource] = ...,
        resolved_repo_source : typing.Optional[global___RepoSource] = ...,
        resolved_storage_source_manifest : typing.Optional[global___StorageSourceManifest] = ...,
        file_hashes : typing.Optional[typing.Mapping[typing.Text, global___FileHashes]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resolved_repo_source",b"resolved_repo_source","resolved_storage_source",b"resolved_storage_source","resolved_storage_source_manifest",b"resolved_storage_source_manifest"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_hashes",b"file_hashes","resolved_repo_source",b"resolved_repo_source","resolved_storage_source",b"resolved_storage_source","resolved_storage_source_manifest",b"resolved_storage_source_manifest"]) -> None: ...
global___SourceProvenance = SourceProvenance

class FileHashes(google.protobuf.message.Message):
    """Container message for hashes of byte content of files, used in
    SourceProvenance messages to verify integrity of source input to the build.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILE_HASH_FIELD_NUMBER: builtins.int
    @property
    def file_hash(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Hash]:
        """Collection of file hashes."""
        pass
    def __init__(self,
        *,
        file_hash : typing.Optional[typing.Iterable[global___Hash]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_hash",b"file_hash"]) -> None: ...
global___FileHashes = FileHashes

class Hash(google.protobuf.message.Message):
    """Container message for hash values."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _HashType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _HashTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HashType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        NONE: Hash.HashType.ValueType = ...  # 0
        """No hash requested."""

        SHA256: Hash.HashType.ValueType = ...  # 1
        """Use a sha256 hash."""

        MD5: Hash.HashType.ValueType = ...  # 2
        """Use a md5 hash."""

    class HashType(_HashType, metaclass=_HashTypeEnumTypeWrapper):
        """Specifies the hash algorithm, if any."""
        pass

    NONE: Hash.HashType.ValueType = ...  # 0
    """No hash requested."""

    SHA256: Hash.HashType.ValueType = ...  # 1
    """Use a sha256 hash."""

    MD5: Hash.HashType.ValueType = ...  # 2
    """Use a md5 hash."""


    TYPE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    type: global___Hash.HashType.ValueType = ...
    """The type of hash that was performed."""

    value: builtins.bytes = ...
    """The hash value."""

    def __init__(self,
        *,
        type : global___Hash.HashType.ValueType = ...,
        value : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type",b"type","value",b"value"]) -> None: ...
global___Hash = Hash

class Secrets(google.protobuf.message.Message):
    """Secrets and secret environment variables."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SECRET_MANAGER_FIELD_NUMBER: builtins.int
    INLINE_FIELD_NUMBER: builtins.int
    @property
    def secret_manager(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SecretManagerSecret]:
        """Secrets in Secret Manager and associated secret environment variable."""
        pass
    @property
    def inline(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InlineSecret]:
        """Secrets encrypted with KMS key and the associated secret environment
        variable.
        """
        pass
    def __init__(self,
        *,
        secret_manager : typing.Optional[typing.Iterable[global___SecretManagerSecret]] = ...,
        inline : typing.Optional[typing.Iterable[global___InlineSecret]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["inline",b"inline","secret_manager",b"secret_manager"]) -> None: ...
global___Secrets = Secrets

class InlineSecret(google.protobuf.message.Message):
    """Pairs a set of secret environment variables mapped to encrypted
    values with the Cloud KMS key to use to decrypt the value.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class EnvMapEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.bytes = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.bytes = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    ENV_MAP_FIELD_NUMBER: builtins.int
    kms_key_name: typing.Text = ...
    """Resource name of Cloud KMS crypto key to decrypt the encrypted value.
    In format: projects/*/locations/*/keyRings/*/cryptoKeys/*
    """

    @property
    def env_map(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.bytes]:
        """Map of environment variable name to its encrypted value.

        Secret environment variables must be unique across all of a build's
        secrets, and must be used by at least one build step. Values can be at most
        64 KB in size. There can be at most 100 secret values across all of a
        build's secrets.
        """
        pass
    def __init__(self,
        *,
        kms_key_name : typing.Text = ...,
        env_map : typing.Optional[typing.Mapping[typing.Text, builtins.bytes]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["env_map",b"env_map","kms_key_name",b"kms_key_name"]) -> None: ...
global___InlineSecret = InlineSecret

class SecretManagerSecret(google.protobuf.message.Message):
    """Pairs a secret environment variable with a SecretVersion in Secret Manager."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VERSION_NAME_FIELD_NUMBER: builtins.int
    ENV_FIELD_NUMBER: builtins.int
    version_name: typing.Text = ...
    """Resource name of the SecretVersion. In format:
    projects/*/secrets/*/versions/*
    """

    env: typing.Text = ...
    """Environment variable name to associate with the secret.
    Secret environment variables must be unique across all of a build's
    secrets, and must be used by at least one build step.
    """

    def __init__(self,
        *,
        version_name : typing.Text = ...,
        env : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["env",b"env","version_name",b"version_name"]) -> None: ...
global___SecretManagerSecret = SecretManagerSecret

class Secret(google.protobuf.message.Message):
    """Pairs a set of secret environment variables containing encrypted
    values with the Cloud KMS key to use to decrypt the value.
    Note: Use `kmsKeyName` with  `available_secrets` instead of using
    `kmsKeyName` with `secret`. For instructions see:
    https://cloud.google.com/cloud-build/docs/securing-builds/use-encrypted-credentials.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SecretEnvEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.bytes = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.bytes = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    SECRET_ENV_FIELD_NUMBER: builtins.int
    kms_key_name: typing.Text = ...
    """Cloud KMS key name to use to decrypt these envs."""

    @property
    def secret_env(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.bytes]:
        """Map of environment variable name to its encrypted value.

        Secret environment variables must be unique across all of a build's
        secrets, and must be used by at least one build step. Values can be at most
        64 KB in size. There can be at most 100 secret values across all of a
        build's secrets.
        """
        pass
    def __init__(self,
        *,
        kms_key_name : typing.Text = ...,
        secret_env : typing.Optional[typing.Mapping[typing.Text, builtins.bytes]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kms_key_name",b"kms_key_name","secret_env",b"secret_env"]) -> None: ...
global___Secret = Secret

class CreateBuildRequest(google.protobuf.message.Message):
    """Request to create a new build."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    BUILD_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """The parent resource where this build will be created.
    Format: `projects/{project}/locations/{location}`
    """

    project_id: typing.Text = ...
    """Required. ID of the project."""

    @property
    def build(self) -> global___Build:
        """Required. Build resource to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        project_id : typing.Text = ...,
        build : typing.Optional[global___Build] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["build",b"build"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["build",b"build","parent",b"parent","project_id",b"project_id"]) -> None: ...
global___CreateBuildRequest = CreateBuildRequest

class GetBuildRequest(google.protobuf.message.Message):
    """Request to get a build."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the `Build` to retrieve.
    Format: `projects/{project}/locations/{location}/builds/{build}`
    """

    project_id: typing.Text = ...
    """Required. ID of the project."""

    id: typing.Text = ...
    """Required. ID of the build."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        project_id : typing.Text = ...,
        id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name","project_id",b"project_id"]) -> None: ...
global___GetBuildRequest = GetBuildRequest

class ListBuildsRequest(google.protobuf.message.Message):
    """Request to list builds."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """The parent of the collection of `Builds`.
    Format: `projects/{project}/locations/location`
    """

    project_id: typing.Text = ...
    """Required. ID of the project."""

    page_size: builtins.int = ...
    """Number of results to return in the list."""

    page_token: typing.Text = ...
    """The page token for the next page of Builds.

    If unspecified, the first page of results is returned.

    If the token is rejected for any reason, INVALID_ARGUMENT will be thrown.
    In this case, the token should be discarded, and pagination should be
    restarted from the first page of results.

    See https://google.aip.dev/158 for more.
    """

    filter: typing.Text = ...
    """The raw filter text to constrain the results."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        project_id : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent","project_id",b"project_id"]) -> None: ...
global___ListBuildsRequest = ListBuildsRequest

class ListBuildsResponse(google.protobuf.message.Message):
    """Response including listed builds."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUILDS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def builds(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Build]:
        """Builds will be sorted by `create_time`, descending."""
        pass
    next_page_token: typing.Text = ...
    """Token to receive the next page of results.
    This will be absent if the end of the response list has been reached.
    """

    def __init__(self,
        *,
        builds : typing.Optional[typing.Iterable[global___Build]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["builds",b"builds","next_page_token",b"next_page_token"]) -> None: ...
global___ListBuildsResponse = ListBuildsResponse

class CancelBuildRequest(google.protobuf.message.Message):
    """Request to cancel an ongoing build."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the `Build` to cancel.
    Format: `projects/{project}/locations/{location}/builds/{build}`
    """

    project_id: typing.Text = ...
    """Required. ID of the project."""

    id: typing.Text = ...
    """Required. ID of the build."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        project_id : typing.Text = ...,
        id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name","project_id",b"project_id"]) -> None: ...
global___CancelBuildRequest = CancelBuildRequest

class ApproveBuildRequest(google.protobuf.message.Message):
    """Request to approve or reject a pending build."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    APPROVAL_RESULT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the target build.
    For example: "projects/{$project_id}/builds/{$build_id}"
    """

    @property
    def approval_result(self) -> global___ApprovalResult:
        """Approval decision and metadata."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        approval_result : typing.Optional[global___ApprovalResult] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["approval_result",b"approval_result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["approval_result",b"approval_result","name",b"name"]) -> None: ...
global___ApproveBuildRequest = ApproveBuildRequest

class BuildApproval(google.protobuf.message.Message):
    """BuildApproval describes a build's approval configuration, state, and
    result.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: BuildApproval.State.ValueType = ...  # 0
        """Default enum type. This should not be used."""

        PENDING: BuildApproval.State.ValueType = ...  # 1
        """Build approval is pending."""

        APPROVED: BuildApproval.State.ValueType = ...  # 2
        """Build approval has been approved."""

        REJECTED: BuildApproval.State.ValueType = ...  # 3
        """Build approval has been rejected."""

        CANCELLED: BuildApproval.State.ValueType = ...  # 5
        """Build was cancelled while it was still pending approval."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Specifies the current state of a build's approval."""
        pass

    STATE_UNSPECIFIED: BuildApproval.State.ValueType = ...  # 0
    """Default enum type. This should not be used."""

    PENDING: BuildApproval.State.ValueType = ...  # 1
    """Build approval is pending."""

    APPROVED: BuildApproval.State.ValueType = ...  # 2
    """Build approval has been approved."""

    REJECTED: BuildApproval.State.ValueType = ...  # 3
    """Build approval has been rejected."""

    CANCELLED: BuildApproval.State.ValueType = ...  # 5
    """Build was cancelled while it was still pending approval."""


    STATE_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    state: global___BuildApproval.State.ValueType = ...
    """Output only. The state of this build's approval."""

    @property
    def config(self) -> global___ApprovalConfig:
        """Output only. Configuration for manual approval of this build."""
        pass
    @property
    def result(self) -> global___ApprovalResult:
        """Output only. Result of manual approval for this Build."""
        pass
    def __init__(self,
        *,
        state : global___BuildApproval.State.ValueType = ...,
        config : typing.Optional[global___ApprovalConfig] = ...,
        result : typing.Optional[global___ApprovalResult] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config","result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config",b"config","result",b"result","state",b"state"]) -> None: ...
global___BuildApproval = BuildApproval

class ApprovalConfig(google.protobuf.message.Message):
    """ApprovalConfig describes configuration for manual approval of a build."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    APPROVAL_REQUIRED_FIELD_NUMBER: builtins.int
    approval_required: builtins.bool = ...
    """Whether or not approval is needed. If this is set on a build, it will
    become pending when created, and will need to be explicitly approved
    to start.
    """

    def __init__(self,
        *,
        approval_required : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["approval_required",b"approval_required"]) -> None: ...
global___ApprovalConfig = ApprovalConfig

class ApprovalResult(google.protobuf.message.Message):
    """ApprovalResult describes the decision and associated metadata of a manual
    approval of a build.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Decision:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DecisionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Decision.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DECISION_UNSPECIFIED: ApprovalResult.Decision.ValueType = ...  # 0
        """Default enum type. This should not be used."""

        APPROVED: ApprovalResult.Decision.ValueType = ...  # 1
        """Build is approved."""

        REJECTED: ApprovalResult.Decision.ValueType = ...  # 2
        """Build is rejected."""

    class Decision(_Decision, metaclass=_DecisionEnumTypeWrapper):
        """Specifies whether or not this manual approval result is to approve
        or reject a build.
        """
        pass

    DECISION_UNSPECIFIED: ApprovalResult.Decision.ValueType = ...  # 0
    """Default enum type. This should not be used."""

    APPROVED: ApprovalResult.Decision.ValueType = ...  # 1
    """Build is approved."""

    REJECTED: ApprovalResult.Decision.ValueType = ...  # 2
    """Build is rejected."""


    APPROVER_ACCOUNT_FIELD_NUMBER: builtins.int
    APPROVAL_TIME_FIELD_NUMBER: builtins.int
    DECISION_FIELD_NUMBER: builtins.int
    COMMENT_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    approver_account: typing.Text = ...
    """Output only. Email of the user that called the ApproveBuild API to
    approve or reject a build at the time that the API was called.
    """

    @property
    def approval_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the approval decision was made."""
        pass
    decision: global___ApprovalResult.Decision.ValueType = ...
    """Required. The decision of this manual approval."""

    comment: typing.Text = ...
    """Optional. An optional comment for this manual approval result."""

    url: typing.Text = ...
    """Optional. An optional URL tied to this manual approval result. This field
    is essentially the same as comment, except that it will be rendered by the
    UI differently. An example use case is a link to an external job that
    approved this Build.
    """

    def __init__(self,
        *,
        approver_account : typing.Text = ...,
        approval_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        decision : global___ApprovalResult.Decision.ValueType = ...,
        comment : typing.Text = ...,
        url : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["approval_time",b"approval_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["approval_time",b"approval_time","approver_account",b"approver_account","comment",b"comment","decision",b"decision","url",b"url"]) -> None: ...
global___ApprovalResult = ApprovalResult

class BuildTrigger(google.protobuf.message.Message):
    """Configuration for an automated build in response to source repository
    changes.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SubstitutionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    TRIGGER_TEMPLATE_FIELD_NUMBER: builtins.int
    GITHUB_FIELD_NUMBER: builtins.int
    PUBSUB_CONFIG_FIELD_NUMBER: builtins.int
    WEBHOOK_CONFIG_FIELD_NUMBER: builtins.int
    AUTODETECT_FIELD_NUMBER: builtins.int
    BUILD_FIELD_NUMBER: builtins.int
    FILENAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    SUBSTITUTIONS_FIELD_NUMBER: builtins.int
    IGNORED_FILES_FIELD_NUMBER: builtins.int
    INCLUDED_FILES_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """The `Trigger` name with format:
    `projects/{project}/locations/{location}/triggers/{trigger}`, where
    {trigger} is a unique identifier generated by the service.
    """

    id: typing.Text = ...
    """Output only. Unique identifier of the trigger."""

    description: typing.Text = ...
    """Human-readable description of this trigger."""

    name: typing.Text = ...
    """User-assigned name of the trigger. Must be unique within the project.
    Trigger names must meet the following requirements:

    + They must contain only alphanumeric characters and dashes.
    + They can be 1-64 characters long.
    + They must begin and end with an alphanumeric character.
    """

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Tags for annotation of a `BuildTrigger`"""
        pass
    @property
    def trigger_template(self) -> global___RepoSource:
        """Template describing the types of source changes to trigger a build.

        Branch and tag names in trigger templates are interpreted as regular
        expressions. Any branch or tag change that matches that regular expression
        will trigger a build.

        Mutually exclusive with `github`.
        """
        pass
    @property
    def github(self) -> global___GitHubEventsConfig:
        """GitHubEventsConfig describes the configuration of a trigger that creates
        a build whenever a GitHub event is received.

        Mutually exclusive with `trigger_template`.
        """
        pass
    @property
    def pubsub_config(self) -> global___PubsubConfig:
        """PubsubConfig describes the configuration of a trigger that
        creates a build whenever a Pub/Sub message is published.
        """
        pass
    @property
    def webhook_config(self) -> global___WebhookConfig:
        """WebhookConfig describes the configuration of a trigger that
        creates a build whenever a webhook is sent to a trigger's webhook URL.
        """
        pass
    autodetect: builtins.bool = ...
    """Autodetect build configuration.  The following precedence is used (case
    insensitive):

    1. cloudbuild.yaml
    2. cloudbuild.yml
    3. cloudbuild.json
    4. Dockerfile

    Currently only available for GitHub App Triggers.
    """

    @property
    def build(self) -> global___Build:
        """Contents of the build template."""
        pass
    filename: typing.Text = ...
    """Path, from the source root, to the build configuration file
    (i.e. cloudbuild.yaml).
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time when the trigger was created."""
        pass
    disabled: builtins.bool = ...
    """If true, the trigger will never automatically execute a build."""

    @property
    def substitutions(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Substitutions for Build resource. The keys must match the following
        regular expression: `^_[A-Z0-9_]+$`.
        """
        pass
    @property
    def ignored_files(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """ignored_files and included_files are file glob matches using
        https://golang.org/pkg/path/filepath/#Match extended with support for "**".

        If ignored_files and changed files are both empty, then they are
        not used to determine whether or not to trigger a build.

        If ignored_files is not empty, then we ignore any files that match
        any of the ignored_file globs. If the change has no files that are
        outside of the ignored_files globs, then we do not trigger a build.
        """
        pass
    @property
    def included_files(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If any of the files altered in the commit pass the ignored_files
        filter and included_files is empty, then as far as this filter is
        concerned, we should trigger the build.

        If any of the files altered in the commit pass the ignored_files
        filter and included_files is not empty, then we make sure that at
        least one of those files matches a included_files glob. If not,
        then we do not trigger a build.
        """
        pass
    filter: typing.Text = ...
    """Optional. A Common Expression Language string."""

    service_account: typing.Text = ...
    """The service account used for all user-controlled operations including
    UpdateBuildTrigger, RunBuildTrigger, CreateBuild, and CancelBuild.
    If no service account is set, then the standard Cloud Build service account
    ([PROJECT_NUM]@system.gserviceaccount.com) will be used instead.
    Format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_ID_OR_EMAIL}`
    """

    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        id : typing.Text = ...,
        description : typing.Text = ...,
        name : typing.Text = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        trigger_template : typing.Optional[global___RepoSource] = ...,
        github : typing.Optional[global___GitHubEventsConfig] = ...,
        pubsub_config : typing.Optional[global___PubsubConfig] = ...,
        webhook_config : typing.Optional[global___WebhookConfig] = ...,
        autodetect : builtins.bool = ...,
        build : typing.Optional[global___Build] = ...,
        filename : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        disabled : builtins.bool = ...,
        substitutions : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ignored_files : typing.Optional[typing.Iterable[typing.Text]] = ...,
        included_files : typing.Optional[typing.Iterable[typing.Text]] = ...,
        filter : typing.Text = ...,
        service_account : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["autodetect",b"autodetect","build",b"build","build_template",b"build_template","create_time",b"create_time","filename",b"filename","github",b"github","pubsub_config",b"pubsub_config","trigger_template",b"trigger_template","webhook_config",b"webhook_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["autodetect",b"autodetect","build",b"build","build_template",b"build_template","create_time",b"create_time","description",b"description","disabled",b"disabled","filename",b"filename","filter",b"filter","github",b"github","id",b"id","ignored_files",b"ignored_files","included_files",b"included_files","name",b"name","pubsub_config",b"pubsub_config","resource_name",b"resource_name","service_account",b"service_account","substitutions",b"substitutions","tags",b"tags","trigger_template",b"trigger_template","webhook_config",b"webhook_config"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["build_template",b"build_template"]) -> typing.Optional[typing_extensions.Literal["autodetect","build","filename"]]: ...
global___BuildTrigger = BuildTrigger

class GitHubEventsConfig(google.protobuf.message.Message):
    """GitHubEventsConfig describes the configuration of a trigger that creates a
    build whenever a GitHub event is received.

    This message is experimental.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTALLATION_ID_FIELD_NUMBER: builtins.int
    OWNER_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PULL_REQUEST_FIELD_NUMBER: builtins.int
    PUSH_FIELD_NUMBER: builtins.int
    installation_id: builtins.int = ...
    """The installationID that emits the GitHub event."""

    owner: typing.Text = ...
    """Owner of the repository. For example: The owner for
    https://github.com/googlecloudplatform/cloud-builders is
    "googlecloudplatform".
    """

    name: typing.Text = ...
    """Name of the repository. For example: The name for
    https://github.com/googlecloudplatform/cloud-builders is "cloud-builders".
    """

    @property
    def pull_request(self) -> global___PullRequestFilter:
        """filter to match changes in pull requests."""
        pass
    @property
    def push(self) -> global___PushFilter:
        """filter to match changes in refs like branches, tags."""
        pass
    def __init__(self,
        *,
        installation_id : builtins.int = ...,
        owner : typing.Text = ...,
        name : typing.Text = ...,
        pull_request : typing.Optional[global___PullRequestFilter] = ...,
        push : typing.Optional[global___PushFilter] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event",b"event","pull_request",b"pull_request","push",b"push"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event",b"event","installation_id",b"installation_id","name",b"name","owner",b"owner","pull_request",b"pull_request","push",b"push"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["event",b"event"]) -> typing.Optional[typing_extensions.Literal["pull_request","push"]]: ...
global___GitHubEventsConfig = GitHubEventsConfig

class PubsubConfig(google.protobuf.message.Message):
    """PubsubConfig describes the configuration of a trigger that
    creates a build whenever a Pub/Sub message is published.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: PubsubConfig.State.ValueType = ...  # 0
        """The subscription configuration has not been checked."""

        OK: PubsubConfig.State.ValueType = ...  # 1
        """The Pub/Sub subscription is properly configured."""

        SUBSCRIPTION_DELETED: PubsubConfig.State.ValueType = ...  # 2
        """The subscription has been deleted."""

        TOPIC_DELETED: PubsubConfig.State.ValueType = ...  # 3
        """The topic has been deleted."""

        SUBSCRIPTION_MISCONFIGURED: PubsubConfig.State.ValueType = ...  # 4
        """Some of the subscription's field are misconfigured."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Enumerates potential issues with the underlying Pub/Sub subscription
        configuration.
        """
        pass

    STATE_UNSPECIFIED: PubsubConfig.State.ValueType = ...  # 0
    """The subscription configuration has not been checked."""

    OK: PubsubConfig.State.ValueType = ...  # 1
    """The Pub/Sub subscription is properly configured."""

    SUBSCRIPTION_DELETED: PubsubConfig.State.ValueType = ...  # 2
    """The subscription has been deleted."""

    TOPIC_DELETED: PubsubConfig.State.ValueType = ...  # 3
    """The topic has been deleted."""

    SUBSCRIPTION_MISCONFIGURED: PubsubConfig.State.ValueType = ...  # 4
    """Some of the subscription's field are misconfigured."""


    SUBSCRIPTION_FIELD_NUMBER: builtins.int
    TOPIC_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_EMAIL_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    subscription: typing.Text = ...
    """Output only. Name of the subscription. Format is
    `projects/{project}/subscriptions/{subscription}`.
    """

    topic: typing.Text = ...
    """The name of the topic from which this subscription is receiving messages.
    Format is `projects/{project}/topics/{topic}`.
    """

    service_account_email: typing.Text = ...
    """Service account that will make the push request."""

    state: global___PubsubConfig.State.ValueType = ...
    """Potential issues with the underlying Pub/Sub subscription configuration.
    Only populated on get requests.
    """

    def __init__(self,
        *,
        subscription : typing.Text = ...,
        topic : typing.Text = ...,
        service_account_email : typing.Text = ...,
        state : global___PubsubConfig.State.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["service_account_email",b"service_account_email","state",b"state","subscription",b"subscription","topic",b"topic"]) -> None: ...
global___PubsubConfig = PubsubConfig

class WebhookConfig(google.protobuf.message.Message):
    """WebhookConfig describes the configuration of a trigger that
    creates a build whenever a webhook is sent to a trigger's webhook URL.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: WebhookConfig.State.ValueType = ...  # 0
        """The webhook auth configuration not been checked."""

        OK: WebhookConfig.State.ValueType = ...  # 1
        """The auth configuration is properly setup."""

        SECRET_DELETED: WebhookConfig.State.ValueType = ...  # 2
        """The secret provided in auth_method has been deleted."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Enumerates potential issues with the Secret Manager secret provided by the
        user.
        """
        pass

    STATE_UNSPECIFIED: WebhookConfig.State.ValueType = ...  # 0
    """The webhook auth configuration not been checked."""

    OK: WebhookConfig.State.ValueType = ...  # 1
    """The auth configuration is properly setup."""

    SECRET_DELETED: WebhookConfig.State.ValueType = ...  # 2
    """The secret provided in auth_method has been deleted."""


    SECRET_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    secret: typing.Text = ...
    """Required. Resource name for the secret required as a URL parameter."""

    state: global___WebhookConfig.State.ValueType = ...
    """Potential issues with the underlying Pub/Sub subscription configuration.
    Only populated on get requests.
    """

    def __init__(self,
        *,
        secret : typing.Text = ...,
        state : global___WebhookConfig.State.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_method",b"auth_method","secret",b"secret"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_method",b"auth_method","secret",b"secret","state",b"state"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["auth_method",b"auth_method"]) -> typing.Optional[typing_extensions.Literal["secret"]]: ...
global___WebhookConfig = WebhookConfig

class PullRequestFilter(google.protobuf.message.Message):
    """PullRequestFilter contains filter properties for matching GitHub Pull
    Requests.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CommentControl:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CommentControlEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CommentControl.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        COMMENTS_DISABLED: PullRequestFilter.CommentControl.ValueType = ...  # 0
        """Do not require comments on Pull Requests before builds are triggered."""

        COMMENTS_ENABLED: PullRequestFilter.CommentControl.ValueType = ...  # 1
        """Enforce that repository owners or collaborators must comment on Pull
        Requests before builds are triggered.
        """

        COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY: PullRequestFilter.CommentControl.ValueType = ...  # 2
        """Enforce that repository owners or collaborators must comment on external
        contributors' Pull Requests before builds are triggered.
        """

    class CommentControl(_CommentControl, metaclass=_CommentControlEnumTypeWrapper):
        """Controls behavior of Pull Request comments."""
        pass

    COMMENTS_DISABLED: PullRequestFilter.CommentControl.ValueType = ...  # 0
    """Do not require comments on Pull Requests before builds are triggered."""

    COMMENTS_ENABLED: PullRequestFilter.CommentControl.ValueType = ...  # 1
    """Enforce that repository owners or collaborators must comment on Pull
    Requests before builds are triggered.
    """

    COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY: PullRequestFilter.CommentControl.ValueType = ...  # 2
    """Enforce that repository owners or collaborators must comment on external
    contributors' Pull Requests before builds are triggered.
    """


    BRANCH_FIELD_NUMBER: builtins.int
    COMMENT_CONTROL_FIELD_NUMBER: builtins.int
    INVERT_REGEX_FIELD_NUMBER: builtins.int
    branch: typing.Text = ...
    """Regex of branches to match.

    The syntax of the regular expressions accepted is the syntax accepted by
    RE2 and described at https://github.com/google/re2/wiki/Syntax
    """

    comment_control: global___PullRequestFilter.CommentControl.ValueType = ...
    """Configure builds to run whether a repository owner or collaborator need to
    comment `/gcbrun`.
    """

    invert_regex: builtins.bool = ...
    """If true, branches that do NOT match the git_ref will trigger a build."""

    def __init__(self,
        *,
        branch : typing.Text = ...,
        comment_control : global___PullRequestFilter.CommentControl.ValueType = ...,
        invert_regex : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["branch",b"branch","git_ref",b"git_ref"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["branch",b"branch","comment_control",b"comment_control","git_ref",b"git_ref","invert_regex",b"invert_regex"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["git_ref",b"git_ref"]) -> typing.Optional[typing_extensions.Literal["branch"]]: ...
global___PullRequestFilter = PullRequestFilter

class PushFilter(google.protobuf.message.Message):
    """Push contains filter properties for matching GitHub git pushes."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BRANCH_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    INVERT_REGEX_FIELD_NUMBER: builtins.int
    branch: typing.Text = ...
    """Regexes matching branches to build.

    The syntax of the regular expressions accepted is the syntax accepted by
    RE2 and described at https://github.com/google/re2/wiki/Syntax
    """

    tag: typing.Text = ...
    """Regexes matching tags to build.

    The syntax of the regular expressions accepted is the syntax accepted by
    RE2 and described at https://github.com/google/re2/wiki/Syntax
    """

    invert_regex: builtins.bool = ...
    """When true, only trigger a build if the revision regex does NOT match the
    git_ref regex.
    """

    def __init__(self,
        *,
        branch : typing.Text = ...,
        tag : typing.Text = ...,
        invert_regex : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["branch",b"branch","git_ref",b"git_ref","tag",b"tag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["branch",b"branch","git_ref",b"git_ref","invert_regex",b"invert_regex","tag",b"tag"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["git_ref",b"git_ref"]) -> typing.Optional[typing_extensions.Literal["branch","tag"]]: ...
global___PushFilter = PushFilter

class CreateBuildTriggerRequest(google.protobuf.message.Message):
    """Request to create a new `BuildTrigger`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TRIGGER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """The parent resource where this trigger will be created.
    Format: `projects/{project}/locations/{location}`
    """

    project_id: typing.Text = ...
    """Required. ID of the project for which to configure automatic builds."""

    @property
    def trigger(self) -> global___BuildTrigger:
        """Required. `BuildTrigger` to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        project_id : typing.Text = ...,
        trigger : typing.Optional[global___BuildTrigger] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["trigger",b"trigger"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","project_id",b"project_id","trigger",b"trigger"]) -> None: ...
global___CreateBuildTriggerRequest = CreateBuildTriggerRequest

class GetBuildTriggerRequest(google.protobuf.message.Message):
    """Returns the `BuildTrigger` with the specified ID."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TRIGGER_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the `Trigger` to retrieve.
    Format: `projects/{project}/locations/{location}/triggers/{trigger}`
    """

    project_id: typing.Text = ...
    """Required. ID of the project that owns the trigger."""

    trigger_id: typing.Text = ...
    """Required. Identifier (`id` or `name`) of the `BuildTrigger` to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        project_id : typing.Text = ...,
        trigger_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","project_id",b"project_id","trigger_id",b"trigger_id"]) -> None: ...
global___GetBuildTriggerRequest = GetBuildTriggerRequest

class ListBuildTriggersRequest(google.protobuf.message.Message):
    """Request to list existing `BuildTriggers`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """The parent of the collection of `Triggers`.
    Format: `projects/{project}/locations/{location}`
    """

    project_id: typing.Text = ...
    """Required. ID of the project for which to list BuildTriggers."""

    page_size: builtins.int = ...
    """Number of results to return in the list."""

    page_token: typing.Text = ...
    """Token to provide to skip to a particular spot in the list."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        project_id : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent","project_id",b"project_id"]) -> None: ...
global___ListBuildTriggersRequest = ListBuildTriggersRequest

class ListBuildTriggersResponse(google.protobuf.message.Message):
    """Response containing existing `BuildTriggers`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TRIGGERS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def triggers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BuildTrigger]:
        """`BuildTriggers` for the project, sorted by `create_time` descending."""
        pass
    next_page_token: typing.Text = ...
    """Token to receive the next page of results."""

    def __init__(self,
        *,
        triggers : typing.Optional[typing.Iterable[global___BuildTrigger]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","triggers",b"triggers"]) -> None: ...
global___ListBuildTriggersResponse = ListBuildTriggersResponse

class DeleteBuildTriggerRequest(google.protobuf.message.Message):
    """Request to delete a `BuildTrigger`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TRIGGER_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the `Trigger` to delete.
    Format: `projects/{project}/locations/{location}/triggers/{trigger}`
    """

    project_id: typing.Text = ...
    """Required. ID of the project that owns the trigger."""

    trigger_id: typing.Text = ...
    """Required. ID of the `BuildTrigger` to delete."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        project_id : typing.Text = ...,
        trigger_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","project_id",b"project_id","trigger_id",b"trigger_id"]) -> None: ...
global___DeleteBuildTriggerRequest = DeleteBuildTriggerRequest

class UpdateBuildTriggerRequest(google.protobuf.message.Message):
    """Request to update an existing `BuildTrigger`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TRIGGER_ID_FIELD_NUMBER: builtins.int
    TRIGGER_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Required. ID of the project that owns the trigger."""

    trigger_id: typing.Text = ...
    """Required. ID of the `BuildTrigger` to update."""

    @property
    def trigger(self) -> global___BuildTrigger:
        """Required. `BuildTrigger` to update."""
        pass
    def __init__(self,
        *,
        project_id : typing.Text = ...,
        trigger_id : typing.Text = ...,
        trigger : typing.Optional[global___BuildTrigger] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["trigger",b"trigger"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project_id",b"project_id","trigger",b"trigger","trigger_id",b"trigger_id"]) -> None: ...
global___UpdateBuildTriggerRequest = UpdateBuildTriggerRequest

class BuildOptions(google.protobuf.message.Message):
    """Optional arguments to enable specific features of builds."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _VerifyOption:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _VerifyOptionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VerifyOption.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        NOT_VERIFIED: BuildOptions.VerifyOption.ValueType = ...  # 0
        """Not a verifiable build. (default)"""

        VERIFIED: BuildOptions.VerifyOption.ValueType = ...  # 1
        """Verified build."""

    class VerifyOption(_VerifyOption, metaclass=_VerifyOptionEnumTypeWrapper):
        """Specifies the manner in which the build should be verified, if at all."""
        pass

    NOT_VERIFIED: BuildOptions.VerifyOption.ValueType = ...  # 0
    """Not a verifiable build. (default)"""

    VERIFIED: BuildOptions.VerifyOption.ValueType = ...  # 1
    """Verified build."""


    class _MachineType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MachineTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MachineType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: BuildOptions.MachineType.ValueType = ...  # 0
        """Standard machine type."""

        N1_HIGHCPU_8: BuildOptions.MachineType.ValueType = ...  # 1
        """Highcpu machine with 8 CPUs."""

        N1_HIGHCPU_32: BuildOptions.MachineType.ValueType = ...  # 2
        """Highcpu machine with 32 CPUs."""

        E2_HIGHCPU_8: BuildOptions.MachineType.ValueType = ...  # 5
        """Highcpu e2 machine with 8 CPUs."""

        E2_HIGHCPU_32: BuildOptions.MachineType.ValueType = ...  # 6
        """Highcpu e2 machine with 32 CPUs."""

    class MachineType(_MachineType, metaclass=_MachineTypeEnumTypeWrapper):
        """Supported Compute Engine machine types.
        For more information, see [Machine
        types](https://cloud.google.com/compute/docs/machine-types).
        """
        pass

    UNSPECIFIED: BuildOptions.MachineType.ValueType = ...  # 0
    """Standard machine type."""

    N1_HIGHCPU_8: BuildOptions.MachineType.ValueType = ...  # 1
    """Highcpu machine with 8 CPUs."""

    N1_HIGHCPU_32: BuildOptions.MachineType.ValueType = ...  # 2
    """Highcpu machine with 32 CPUs."""

    E2_HIGHCPU_8: BuildOptions.MachineType.ValueType = ...  # 5
    """Highcpu e2 machine with 8 CPUs."""

    E2_HIGHCPU_32: BuildOptions.MachineType.ValueType = ...  # 6
    """Highcpu e2 machine with 32 CPUs."""


    class _SubstitutionOption:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SubstitutionOptionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SubstitutionOption.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        MUST_MATCH: BuildOptions.SubstitutionOption.ValueType = ...  # 0
        """Fails the build if error in substitutions checks, like missing
        a substitution in the template or in the map.
        """

        ALLOW_LOOSE: BuildOptions.SubstitutionOption.ValueType = ...  # 1
        """Do not fail the build if error in substitutions checks."""

    class SubstitutionOption(_SubstitutionOption, metaclass=_SubstitutionOptionEnumTypeWrapper):
        """Specifies the behavior when there is an error in the substitution checks."""
        pass

    MUST_MATCH: BuildOptions.SubstitutionOption.ValueType = ...  # 0
    """Fails the build if error in substitutions checks, like missing
    a substitution in the template or in the map.
    """

    ALLOW_LOOSE: BuildOptions.SubstitutionOption.ValueType = ...  # 1
    """Do not fail the build if error in substitutions checks."""


    class _LogStreamingOption:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LogStreamingOptionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LogStreamingOption.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STREAM_DEFAULT: BuildOptions.LogStreamingOption.ValueType = ...  # 0
        """Service may automatically determine build log streaming behavior."""

        STREAM_ON: BuildOptions.LogStreamingOption.ValueType = ...  # 1
        """Build logs should be streamed to Google Cloud Storage."""

        STREAM_OFF: BuildOptions.LogStreamingOption.ValueType = ...  # 2
        """Build logs should not be streamed to Google Cloud Storage; they will be
        written when the build is completed.
        """

    class LogStreamingOption(_LogStreamingOption, metaclass=_LogStreamingOptionEnumTypeWrapper):
        """Specifies the behavior when writing build logs to Google Cloud Storage."""
        pass

    STREAM_DEFAULT: BuildOptions.LogStreamingOption.ValueType = ...  # 0
    """Service may automatically determine build log streaming behavior."""

    STREAM_ON: BuildOptions.LogStreamingOption.ValueType = ...  # 1
    """Build logs should be streamed to Google Cloud Storage."""

    STREAM_OFF: BuildOptions.LogStreamingOption.ValueType = ...  # 2
    """Build logs should not be streamed to Google Cloud Storage; they will be
    written when the build is completed.
    """


    class _LoggingMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LoggingModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LoggingMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        LOGGING_UNSPECIFIED: BuildOptions.LoggingMode.ValueType = ...  # 0
        """The service determines the logging mode. The default is `LEGACY`. Do not
        rely on the default logging behavior as it may change in the future.
        """

        LEGACY: BuildOptions.LoggingMode.ValueType = ...  # 1
        """Cloud Logging and Cloud Storage logging are enabled."""

        GCS_ONLY: BuildOptions.LoggingMode.ValueType = ...  # 2
        """Only Cloud Storage logging is enabled."""

        STACKDRIVER_ONLY: BuildOptions.LoggingMode.ValueType = ...  # 3
        """This option is the same as CLOUD_LOGGING_ONLY."""

        CLOUD_LOGGING_ONLY: BuildOptions.LoggingMode.ValueType = ...  # 5
        """Only Cloud Logging is enabled. Note that logs for both the Cloud Console
        UI and Cloud SDK are based on Cloud Storage logs, so neither will provide
        logs if this option is chosen.
        """

        NONE: BuildOptions.LoggingMode.ValueType = ...  # 4
        """Turn off all logging. No build logs will be captured."""

    class LoggingMode(_LoggingMode, metaclass=_LoggingModeEnumTypeWrapper):
        """Specifies the logging mode."""
        pass

    LOGGING_UNSPECIFIED: BuildOptions.LoggingMode.ValueType = ...  # 0
    """The service determines the logging mode. The default is `LEGACY`. Do not
    rely on the default logging behavior as it may change in the future.
    """

    LEGACY: BuildOptions.LoggingMode.ValueType = ...  # 1
    """Cloud Logging and Cloud Storage logging are enabled."""

    GCS_ONLY: BuildOptions.LoggingMode.ValueType = ...  # 2
    """Only Cloud Storage logging is enabled."""

    STACKDRIVER_ONLY: BuildOptions.LoggingMode.ValueType = ...  # 3
    """This option is the same as CLOUD_LOGGING_ONLY."""

    CLOUD_LOGGING_ONLY: BuildOptions.LoggingMode.ValueType = ...  # 5
    """Only Cloud Logging is enabled. Note that logs for both the Cloud Console
    UI and Cloud SDK are based on Cloud Storage logs, so neither will provide
    logs if this option is chosen.
    """

    NONE: BuildOptions.LoggingMode.ValueType = ...  # 4
    """Turn off all logging. No build logs will be captured."""


    class PoolOption(google.protobuf.message.Message):
        """Details about how a build should be executed on a `WorkerPool`.

        See [running builds in a private
        pool](https://cloud.google.com/build/docs/private-pools/run-builds-in-private-pool)
        for more information.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """The `WorkerPool` resource to execute the build on.
        You must have `cloudbuild.workerpools.use` on the project hosting the
        WorkerPool.

        Format projects/{project}/locations/{location}/workerPools/{workerPoolId}
        """

        def __init__(self,
            *,
            name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...

    SOURCE_PROVENANCE_HASH_FIELD_NUMBER: builtins.int
    REQUESTED_VERIFY_OPTION_FIELD_NUMBER: builtins.int
    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    SUBSTITUTION_OPTION_FIELD_NUMBER: builtins.int
    DYNAMIC_SUBSTITUTIONS_FIELD_NUMBER: builtins.int
    LOG_STREAMING_OPTION_FIELD_NUMBER: builtins.int
    WORKER_POOL_FIELD_NUMBER: builtins.int
    POOL_FIELD_NUMBER: builtins.int
    LOGGING_FIELD_NUMBER: builtins.int
    ENV_FIELD_NUMBER: builtins.int
    SECRET_ENV_FIELD_NUMBER: builtins.int
    VOLUMES_FIELD_NUMBER: builtins.int
    @property
    def source_provenance_hash(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Hash.HashType.ValueType]:
        """Requested hash for SourceProvenance."""
        pass
    requested_verify_option: global___BuildOptions.VerifyOption.ValueType = ...
    """Requested verifiability options."""

    machine_type: global___BuildOptions.MachineType.ValueType = ...
    """Compute Engine machine type on which to run the build."""

    disk_size_gb: builtins.int = ...
    """Requested disk size for the VM that runs the build. Note that this is *NOT*
    "disk free"; some of the space will be used by the operating system and
    build utilities. Also note that this is the minimum disk size that will be
    allocated for the build -- the build may run with a larger disk than
    requested. At present, the maximum disk size is 1000GB; builds that request
    more than the maximum are rejected with an error.
    """

    substitution_option: global___BuildOptions.SubstitutionOption.ValueType = ...
    """Option to specify behavior when there is an error in the substitution
    checks.

    NOTE: this is always set to ALLOW_LOOSE for triggered builds and cannot
    be overridden in the build configuration file.
    """

    dynamic_substitutions: builtins.bool = ...
    """Option to specify whether or not to apply bash style string
    operations to the substitutions.

    NOTE: this is always enabled for triggered builds and cannot be
    overridden in the build configuration file.
    """

    log_streaming_option: global___BuildOptions.LogStreamingOption.ValueType = ...
    """Option to define build log streaming behavior to Google Cloud
    Storage.
    """

    worker_pool: typing.Text = ...
    """This field deprecated; please use `pool.name` instead."""

    @property
    def pool(self) -> global___BuildOptions.PoolOption:
        """Optional. Specification for execution on a `WorkerPool`.

        See [running builds in a private
        pool](https://cloud.google.com/build/docs/private-pools/run-builds-in-private-pool)
        for more information.
        """
        pass
    logging: global___BuildOptions.LoggingMode.ValueType = ...
    """Option to specify the logging mode, which determines if and where build
    logs are stored.
    """

    @property
    def env(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of global environment variable definitions that will exist for all
        build steps in this build. If a variable is defined in both globally and in
        a build step, the variable will use the build step value.

        The elements are of the form "KEY=VALUE" for the environment variable "KEY"
        being given the value "VALUE".
        """
        pass
    @property
    def secret_env(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of global environment variables, which are encrypted using a Cloud
        Key Management Service crypto key. These values must be specified in the
        build's `Secret`. These variables will be available to all build steps
        in this build.
        """
        pass
    @property
    def volumes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Volume]:
        """Global list of volumes to mount for ALL build steps

        Each volume is created as an empty volume prior to starting the build
        process. Upon completion of the build, volumes and their contents are
        discarded. Global volume names and paths cannot conflict with the volumes
        defined a build step.

        Using a global volume in a build with only one step is not valid as
        it is indicative of a build request with an incorrect configuration.
        """
        pass
    def __init__(self,
        *,
        source_provenance_hash : typing.Optional[typing.Iterable[global___Hash.HashType.ValueType]] = ...,
        requested_verify_option : global___BuildOptions.VerifyOption.ValueType = ...,
        machine_type : global___BuildOptions.MachineType.ValueType = ...,
        disk_size_gb : builtins.int = ...,
        substitution_option : global___BuildOptions.SubstitutionOption.ValueType = ...,
        dynamic_substitutions : builtins.bool = ...,
        log_streaming_option : global___BuildOptions.LogStreamingOption.ValueType = ...,
        worker_pool : typing.Text = ...,
        pool : typing.Optional[global___BuildOptions.PoolOption] = ...,
        logging : global___BuildOptions.LoggingMode.ValueType = ...,
        env : typing.Optional[typing.Iterable[typing.Text]] = ...,
        secret_env : typing.Optional[typing.Iterable[typing.Text]] = ...,
        volumes : typing.Optional[typing.Iterable[global___Volume]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["pool",b"pool"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_size_gb",b"disk_size_gb","dynamic_substitutions",b"dynamic_substitutions","env",b"env","log_streaming_option",b"log_streaming_option","logging",b"logging","machine_type",b"machine_type","pool",b"pool","requested_verify_option",b"requested_verify_option","secret_env",b"secret_env","source_provenance_hash",b"source_provenance_hash","substitution_option",b"substitution_option","volumes",b"volumes","worker_pool",b"worker_pool"]) -> None: ...
global___BuildOptions = BuildOptions

class ReceiveTriggerWebhookRequest(google.protobuf.message.Message):
    """ReceiveTriggerWebhookRequest [Experimental] is the request object accepted by
    the ReceiveTriggerWebhook method.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    TRIGGER_FIELD_NUMBER: builtins.int
    SECRET_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the `ReceiveTriggerWebhook` to retrieve.
    Format: `projects/{project}/locations/{location}/triggers/{trigger}`
    """

    @property
    def body(self) -> google.api.httpbody_pb2.HttpBody:
        """HTTP request body."""
        pass
    project_id: typing.Text = ...
    """Project in which the specified trigger lives"""

    trigger: typing.Text = ...
    """Name of the trigger to run the payload against"""

    secret: typing.Text = ...
    """Secret token used for authorization if an OAuth token isn't provided."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        body : typing.Optional[google.api.httpbody_pb2.HttpBody] = ...,
        project_id : typing.Text = ...,
        trigger : typing.Text = ...,
        secret : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["body",b"body"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["body",b"body","name",b"name","project_id",b"project_id","secret",b"secret","trigger",b"trigger"]) -> None: ...
global___ReceiveTriggerWebhookRequest = ReceiveTriggerWebhookRequest

class ReceiveTriggerWebhookResponse(google.protobuf.message.Message):
    """ReceiveTriggerWebhookResponse [Experimental] is the response object for the
    ReceiveTriggerWebhook method.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ReceiveTriggerWebhookResponse = ReceiveTriggerWebhookResponse

class WorkerPool(google.protobuf.message.Message):
    """Configuration for a `WorkerPool`.

    Cloud Build owns and maintains a pool of workers for general use and have no
    access to a project's private network. By default, builds submitted to
    Cloud Build will use a worker from this pool.

    If your build needs access to resources on a private network,
    create and use a `WorkerPool` to run your builds. Private `WorkerPool`s give
    your builds access to any single VPC network that you
    administer, including any on-prem resources connected to that VPC
    network. For an overview of private pools, see
    [Private pools
    overview](https://cloud.google.com/build/docs/private-pools/private-pools-overview).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: WorkerPool.State.ValueType = ...  # 0
        """State of the `WorkerPool` is unknown."""

        CREATING: WorkerPool.State.ValueType = ...  # 1
        """`WorkerPool` is being created."""

        RUNNING: WorkerPool.State.ValueType = ...  # 2
        """`WorkerPool` is running."""

        DELETING: WorkerPool.State.ValueType = ...  # 3
        """`WorkerPool` is being deleted: cancelling builds and draining workers."""

        DELETED: WorkerPool.State.ValueType = ...  # 4
        """`WorkerPool` is deleted."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """State of the `WorkerPool`."""
        pass

    STATE_UNSPECIFIED: WorkerPool.State.ValueType = ...  # 0
    """State of the `WorkerPool` is unknown."""

    CREATING: WorkerPool.State.ValueType = ...  # 1
    """`WorkerPool` is being created."""

    RUNNING: WorkerPool.State.ValueType = ...  # 2
    """`WorkerPool` is running."""

    DELETING: WorkerPool.State.ValueType = ...  # 3
    """`WorkerPool` is being deleted: cancelling builds and draining workers."""

    DELETED: WorkerPool.State.ValueType = ...  # 4
    """`WorkerPool` is deleted."""


    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    DELETE_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    PRIVATE_POOL_V1_CONFIG_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The resource name of the `WorkerPool`, with format
    `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
    The value of `{worker_pool}` is provided by `worker_pool_id` in
    `CreateWorkerPool` request and the value of `{location}` is determined by
    the endpoint accessed.
    """

    display_name: typing.Text = ...
    """A user-specified, human-readable name for the `WorkerPool`. If provided,
    this value must be 1-63 characters.
    """

    uid: typing.Text = ...
    """Output only. A unique identifier for the `WorkerPool`."""

    @property
    def annotations(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User specified annotations. See https://google.aip.dev/128#annotations
        for more details such as format and size limitations.
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time at which the request to create the `WorkerPool` was
        received.
        """
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time at which the request to update the `WorkerPool` was
        received.
        """
        pass
    @property
    def delete_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time at which the request to delete the `WorkerPool` was
        received.
        """
        pass
    state: global___WorkerPool.State.ValueType = ...
    """Output only. `WorkerPool` state."""

    @property
    def private_pool_v1_config(self) -> global___PrivatePoolV1Config:
        """Private Pool using a v1 configuration."""
        pass
    etag: typing.Text = ...
    """Output only. Checksum computed by the server. May be sent on update and
    delete requests to ensure that the client has an up-to-date value before
    proceeding.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        uid : typing.Text = ...,
        annotations : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        delete_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___WorkerPool.State.ValueType = ...,
        private_pool_v1_config : typing.Optional[global___PrivatePoolV1Config] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config","create_time",b"create_time","delete_time",b"delete_time","private_pool_v1_config",b"private_pool_v1_config","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotations",b"annotations","config",b"config","create_time",b"create_time","delete_time",b"delete_time","display_name",b"display_name","etag",b"etag","name",b"name","private_pool_v1_config",b"private_pool_v1_config","state",b"state","uid",b"uid","update_time",b"update_time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["config",b"config"]) -> typing.Optional[typing_extensions.Literal["private_pool_v1_config"]]: ...
global___WorkerPool = WorkerPool

class PrivatePoolV1Config(google.protobuf.message.Message):
    """Configuration for a V1 `PrivatePool`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class WorkerConfig(google.protobuf.message.Message):
        """Defines the configuration to be used for creating workers in
        the pool.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MACHINE_TYPE_FIELD_NUMBER: builtins.int
        DISK_SIZE_GB_FIELD_NUMBER: builtins.int
        machine_type: typing.Text = ...
        """Machine type of a worker, such as `e2-medium`.
        See [Worker pool config
        file](https://cloud.google.com/build/docs/private-pools/worker-pool-config-file-schema).
        If left blank, Cloud Build will use a sensible default.
        """

        disk_size_gb: builtins.int = ...
        """Size of the disk attached to the worker, in GB.
        See [Worker pool config
        file](https://cloud.google.com/build/docs/private-pools/worker-pool-config-file-schema).
        Specify a value of up to 1000. If `0` is specified, Cloud Build will use
        a standard disk size.
        """

        def __init__(self,
            *,
            machine_type : typing.Text = ...,
            disk_size_gb : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["disk_size_gb",b"disk_size_gb","machine_type",b"machine_type"]) -> None: ...

    class NetworkConfig(google.protobuf.message.Message):
        """Defines the network configuration for the pool."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _EgressOption:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _EgressOptionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EgressOption.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            EGRESS_OPTION_UNSPECIFIED: PrivatePoolV1Config.NetworkConfig.EgressOption.ValueType = ...  # 0
            """If set, defaults to PUBLIC_EGRESS."""

            NO_PUBLIC_EGRESS: PrivatePoolV1Config.NetworkConfig.EgressOption.ValueType = ...  # 1
            """If set, workers are created without any public address, which prevents
            network egress to public IPs unless a network proxy is configured.
            """

            PUBLIC_EGRESS: PrivatePoolV1Config.NetworkConfig.EgressOption.ValueType = ...  # 2
            """If set, workers are created with a public address which allows for
            public internet egress.
            """

        class EgressOption(_EgressOption, metaclass=_EgressOptionEnumTypeWrapper):
            """Defines the egress option for the pool."""
            pass

        EGRESS_OPTION_UNSPECIFIED: PrivatePoolV1Config.NetworkConfig.EgressOption.ValueType = ...  # 0
        """If set, defaults to PUBLIC_EGRESS."""

        NO_PUBLIC_EGRESS: PrivatePoolV1Config.NetworkConfig.EgressOption.ValueType = ...  # 1
        """If set, workers are created without any public address, which prevents
        network egress to public IPs unless a network proxy is configured.
        """

        PUBLIC_EGRESS: PrivatePoolV1Config.NetworkConfig.EgressOption.ValueType = ...  # 2
        """If set, workers are created with a public address which allows for
        public internet egress.
        """


        PEERED_NETWORK_FIELD_NUMBER: builtins.int
        EGRESS_OPTION_FIELD_NUMBER: builtins.int
        peered_network: typing.Text = ...
        """Required. Immutable. The network definition that the workers are peered
        to. If this section is left empty, the workers will be peered to
        `WorkerPool.project_id` on the service producer network. Must be in the
        format `projects/{project}/global/networks/{network}`, where `{project}`
        is a project number, such as `12345`, and `{network}` is the name of a
        VPC network in the project. See
        [Understanding network configuration
        options](https://cloud.google.com/build/docs/private-pools/set-up-private-pool-environment)
        """

        egress_option: global___PrivatePoolV1Config.NetworkConfig.EgressOption.ValueType = ...
        """Option to configure network egress for the workers."""

        def __init__(self,
            *,
            peered_network : typing.Text = ...,
            egress_option : global___PrivatePoolV1Config.NetworkConfig.EgressOption.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["egress_option",b"egress_option","peered_network",b"peered_network"]) -> None: ...

    WORKER_CONFIG_FIELD_NUMBER: builtins.int
    NETWORK_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def worker_config(self) -> global___PrivatePoolV1Config.WorkerConfig:
        """Machine configuration for the workers in the pool."""
        pass
    @property
    def network_config(self) -> global___PrivatePoolV1Config.NetworkConfig:
        """Network configuration for the pool."""
        pass
    def __init__(self,
        *,
        worker_config : typing.Optional[global___PrivatePoolV1Config.WorkerConfig] = ...,
        network_config : typing.Optional[global___PrivatePoolV1Config.NetworkConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["network_config",b"network_config","worker_config",b"worker_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_config",b"network_config","worker_config",b"worker_config"]) -> None: ...
global___PrivatePoolV1Config = PrivatePoolV1Config

class CreateWorkerPoolRequest(google.protobuf.message.Message):
    """Request to create a new `WorkerPool`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    WORKER_POOL_FIELD_NUMBER: builtins.int
    WORKER_POOL_ID_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource where this worker pool will be created.
    Format: `projects/{project}/locations/{location}`.
    """

    @property
    def worker_pool(self) -> global___WorkerPool:
        """Required. `WorkerPool` resource to create."""
        pass
    worker_pool_id: typing.Text = ...
    """Required. Immutable. The ID to use for the `WorkerPool`, which will become
    the final component of the resource name.

    This value should be 1-63 characters, and valid characters
    are /[a-z][0-9]-/.
    """

    validate_only: builtins.bool = ...
    """If set, validate the request and preview the response, but do not actually
    post it.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        worker_pool : typing.Optional[global___WorkerPool] = ...,
        worker_pool_id : typing.Text = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["worker_pool",b"worker_pool"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","validate_only",b"validate_only","worker_pool",b"worker_pool","worker_pool_id",b"worker_pool_id"]) -> None: ...
global___CreateWorkerPoolRequest = CreateWorkerPoolRequest

class GetWorkerPoolRequest(google.protobuf.message.Message):
    """Request to get a `WorkerPool` with the specified name."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the `WorkerPool` to retrieve.
    Format: `projects/{project}/locations/{location}/workerPools/{workerPool}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetWorkerPoolRequest = GetWorkerPoolRequest

class DeleteWorkerPoolRequest(google.protobuf.message.Message):
    """Request to delete a `WorkerPool`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    ALLOW_MISSING_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the `WorkerPool` to delete.
    Format:
    `projects/{project}/locations/{workerPool}/workerPools/{workerPool}`.
    """

    etag: typing.Text = ...
    """Optional. If this is provided, it must match the server's etag on the
    workerpool for the request to be processed.
    """

    allow_missing: builtins.bool = ...
    """If set to true, and the `WorkerPool` is not found, the request will succeed
    but no action will be taken on the server.
    """

    validate_only: builtins.bool = ...
    """If set, validate the request and preview the response, but do not actually
    post it.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        etag : typing.Text = ...,
        allow_missing : builtins.bool = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_missing",b"allow_missing","etag",b"etag","name",b"name","validate_only",b"validate_only"]) -> None: ...
global___DeleteWorkerPoolRequest = DeleteWorkerPoolRequest

class UpdateWorkerPoolRequest(google.protobuf.message.Message):
    """Request to update a `WorkerPool`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WORKER_POOL_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    @property
    def worker_pool(self) -> global___WorkerPool:
        """Required. The `WorkerPool` to update.

        The `name` field is used to identify the `WorkerPool` to update.
        Format: `projects/{project}/locations/{location}/workerPools/{workerPool}`.
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """A mask specifying which fields in `worker_pool` to update."""
        pass
    validate_only: builtins.bool = ...
    """If set, validate the request and preview the response, but do not actually
    post it.
    """

    def __init__(self,
        *,
        worker_pool : typing.Optional[global___WorkerPool] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update_mask",b"update_mask","worker_pool",b"worker_pool"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["update_mask",b"update_mask","validate_only",b"validate_only","worker_pool",b"worker_pool"]) -> None: ...
global___UpdateWorkerPoolRequest = UpdateWorkerPoolRequest

class ListWorkerPoolsRequest(google.protobuf.message.Message):
    """Request to list `WorkerPool`s."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent of the collection of `WorkerPools`.
    Format: `projects/{project}/locations/{location}`.
    """

    page_size: builtins.int = ...
    """The maximum number of `WorkerPool`s to return. The service may return
    fewer than this value. If omitted, the server will use a sensible default.
    """

    page_token: typing.Text = ...
    """A page token, received from a previous `ListWorkerPools` call. Provide this
    to retrieve the subsequent page.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListWorkerPoolsRequest = ListWorkerPoolsRequest

class ListWorkerPoolsResponse(google.protobuf.message.Message):
    """Response containing existing `WorkerPools`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WORKER_POOLS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def worker_pools(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WorkerPool]:
        """`WorkerPools` for the specified project."""
        pass
    next_page_token: typing.Text = ...
    """Continuation token used to page through large result sets. Provide this
    value in a subsequent ListWorkerPoolsRequest to return the next page of
    results.
    """

    def __init__(self,
        *,
        worker_pools : typing.Optional[typing.Iterable[global___WorkerPool]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","worker_pools",b"worker_pools"]) -> None: ...
global___ListWorkerPoolsResponse = ListWorkerPoolsResponse

class CreateWorkerPoolOperationMetadata(google.protobuf.message.Message):
    """Metadata for the `CreateWorkerPool` operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WORKER_POOL_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    COMPLETE_TIME_FIELD_NUMBER: builtins.int
    worker_pool: typing.Text = ...
    """The resource name of the `WorkerPool` to create.
    Format:
    `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time the operation was created."""
        pass
    @property
    def complete_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time the operation was completed."""
        pass
    def __init__(self,
        *,
        worker_pool : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        complete_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["complete_time",b"complete_time","create_time",b"create_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["complete_time",b"complete_time","create_time",b"create_time","worker_pool",b"worker_pool"]) -> None: ...
global___CreateWorkerPoolOperationMetadata = CreateWorkerPoolOperationMetadata

class UpdateWorkerPoolOperationMetadata(google.protobuf.message.Message):
    """Metadata for the `UpdateWorkerPool` operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WORKER_POOL_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    COMPLETE_TIME_FIELD_NUMBER: builtins.int
    worker_pool: typing.Text = ...
    """The resource name of the `WorkerPool` being updated.
    Format:
    `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time the operation was created."""
        pass
    @property
    def complete_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time the operation was completed."""
        pass
    def __init__(self,
        *,
        worker_pool : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        complete_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["complete_time",b"complete_time","create_time",b"create_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["complete_time",b"complete_time","create_time",b"create_time","worker_pool",b"worker_pool"]) -> None: ...
global___UpdateWorkerPoolOperationMetadata = UpdateWorkerPoolOperationMetadata

class DeleteWorkerPoolOperationMetadata(google.protobuf.message.Message):
    """Metadata for the `DeleteWorkerPool` operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WORKER_POOL_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    COMPLETE_TIME_FIELD_NUMBER: builtins.int
    worker_pool: typing.Text = ...
    """The resource name of the `WorkerPool` being deleted.
    Format:
    `projects/{project}/locations/{location}/workerPools/{worker_pool}`.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time the operation was created."""
        pass
    @property
    def complete_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time the operation was completed."""
        pass
    def __init__(self,
        *,
        worker_pool : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        complete_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["complete_time",b"complete_time","create_time",b"create_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["complete_time",b"complete_time","create_time",b"create_time","worker_pool",b"worker_pool"]) -> None: ...
global___DeleteWorkerPoolOperationMetadata = DeleteWorkerPoolOperationMetadata
