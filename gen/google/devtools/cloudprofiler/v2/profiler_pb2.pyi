"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _ProfileType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ProfileTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProfileType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    PROFILE_TYPE_UNSPECIFIED: ProfileType.ValueType = ...  # 0
    """Unspecified profile type."""

    CPU: ProfileType.ValueType = ...  # 1
    """Thread CPU time sampling."""

    WALL: ProfileType.ValueType = ...  # 2
    """Wallclock time sampling. More expensive as stops all threads."""

    HEAP: ProfileType.ValueType = ...  # 3
    """In-use heap profile. Represents a snapshot of the allocations that are
    live at the time of the profiling.
    """

    THREADS: ProfileType.ValueType = ...  # 4
    """Single-shot collection of all thread stacks."""

    CONTENTION: ProfileType.ValueType = ...  # 5
    """Synchronization contention profile."""

    PEAK_HEAP: ProfileType.ValueType = ...  # 6
    """Peak heap profile."""

    HEAP_ALLOC: ProfileType.ValueType = ...  # 7
    """Heap allocation profile. It represents the aggregation of all allocations
    made over the duration of the profile. All allocations are included,
    including those that might have been freed by the end of the profiling
    interval. The profile is in particular useful for garbage collecting
    languages to understand which parts of the code create most of the garbage
    collection pressure to see if those can be optimized.
    """

class ProfileType(_ProfileType, metaclass=_ProfileTypeEnumTypeWrapper):
    """ProfileType is type of profiling data.
    NOTE: the enumeration member names are used (in lowercase) as unique string
    identifiers of profile types, so they must not be renamed.
    """
    pass

PROFILE_TYPE_UNSPECIFIED: ProfileType.ValueType = ...  # 0
"""Unspecified profile type."""

CPU: ProfileType.ValueType = ...  # 1
"""Thread CPU time sampling."""

WALL: ProfileType.ValueType = ...  # 2
"""Wallclock time sampling. More expensive as stops all threads."""

HEAP: ProfileType.ValueType = ...  # 3
"""In-use heap profile. Represents a snapshot of the allocations that are
live at the time of the profiling.
"""

THREADS: ProfileType.ValueType = ...  # 4
"""Single-shot collection of all thread stacks."""

CONTENTION: ProfileType.ValueType = ...  # 5
"""Synchronization contention profile."""

PEAK_HEAP: ProfileType.ValueType = ...  # 6
"""Peak heap profile."""

HEAP_ALLOC: ProfileType.ValueType = ...  # 7
"""Heap allocation profile. It represents the aggregation of all allocations
made over the duration of the profile. All allocations are included,
including those that might have been freed by the end of the profiling
interval. The profile is in particular useful for garbage collecting
languages to understand which parts of the code create most of the garbage
collection pressure to see if those can be optimized.
"""

global___ProfileType = ProfileType


class CreateProfileRequest(google.protobuf.message.Message):
    """CreateProfileRequest describes a profile resource online creation request.
    The deployment field must be populated. The profile_type specifies the list
    of profile types supported by the agent. The creation call will hang until a
    profile of one of these types needs to be collected.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    DEPLOYMENT_FIELD_NUMBER: builtins.int
    PROFILE_TYPE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Parent project to create the profile in."""

    @property
    def deployment(self) -> global___Deployment:
        """Deployment details."""
        pass
    @property
    def profile_type(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___ProfileType.ValueType]:
        """One or more profile types that the agent is capable of providing."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        deployment : typing.Optional[global___Deployment] = ...,
        profile_type : typing.Optional[typing.Iterable[global___ProfileType.ValueType]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["deployment",b"deployment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["deployment",b"deployment","parent",b"parent","profile_type",b"profile_type"]) -> None: ...
global___CreateProfileRequest = CreateProfileRequest

class CreateOfflineProfileRequest(google.protobuf.message.Message):
    """CreateOfflineProfileRequest describes a profile resource offline creation
    request. Profile field must be set.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PROFILE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Parent project to create the profile in."""

    @property
    def profile(self) -> global___Profile:
        """Contents of the profile to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        profile : typing.Optional[global___Profile] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["profile",b"profile"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","profile",b"profile"]) -> None: ...
global___CreateOfflineProfileRequest = CreateOfflineProfileRequest

class UpdateProfileRequest(google.protobuf.message.Message):
    """UpdateProfileRequest contains the profile to update."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROFILE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def profile(self) -> global___Profile:
        """Profile to update"""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Field mask used to specify the fields to be overwritten. Currently only
        profile_bytes and labels fields are supported by UpdateProfile, so only
        those fields can be specified in the mask. When no mask is provided, all
        fields are overwritten.
        """
        pass
    def __init__(self,
        *,
        profile : typing.Optional[global___Profile] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["profile",b"profile","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["profile",b"profile","update_mask",b"update_mask"]) -> None: ...
global___UpdateProfileRequest = UpdateProfileRequest

class Profile(google.protobuf.message.Message):
    """Profile resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    PROFILE_TYPE_FIELD_NUMBER: builtins.int
    DEPLOYMENT_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    PROFILE_BYTES_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. Opaque, server-assigned, unique ID for this profile."""

    profile_type: global___ProfileType.ValueType = ...
    """Type of profile.
    For offline mode, this must be specified when creating the profile. For
    online mode it is assigned and returned by the server.
    """

    @property
    def deployment(self) -> global___Deployment:
        """Deployment this profile corresponds to."""
        pass
    @property
    def duration(self) -> google.protobuf.duration_pb2.Duration:
        """Duration of the profiling session.
        Input (for the offline mode) or output (for the online mode).
        The field represents requested profiling duration. It may slightly differ
        from the effective profiling duration, which is recorded in the profile
        data, in case the profiling can't be stopped immediately (e.g. in case
        stopping the profiling is handled asynchronously).
        """
        pass
    profile_bytes: builtins.bytes = ...
    """Input only. Profile bytes, as a gzip compressed serialized proto, the
    format is https://github.com/google/pprof/blob/master/proto/profile.proto.
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Input only. Labels associated to this specific profile. These labels will
        get merged with the deployment labels for the final data set.  See
        documentation on deployment labels for validation rules and limits.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        profile_type : global___ProfileType.ValueType = ...,
        deployment : typing.Optional[global___Deployment] = ...,
        duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        profile_bytes : builtins.bytes = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["deployment",b"deployment","duration",b"duration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["deployment",b"deployment","duration",b"duration","labels",b"labels","name",b"name","profile_bytes",b"profile_bytes","profile_type",b"profile_type"]) -> None: ...
global___Profile = Profile

class Deployment(google.protobuf.message.Message):
    """Deployment contains the deployment identification information."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROJECT_ID_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """Project ID is the ID of a cloud project.
    Validation regex: `^[a-z][-a-z0-9:.]{4,61}[a-z0-9]$`.
    """

    target: typing.Text = ...
    """Target is the service name used to group related deployments:
    * Service name for GAE Flex / Standard.
    * Cluster and container name for GKE.
    * User-specified string for direct GCE profiling (e.g. Java).
    * Job name for Dataflow.
    Validation regex: `^[a-z]([-a-z0-9_.]{0,253}[a-z0-9])?$`.
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels identify the deployment within the user universe and same target.
        Validation regex for label names: `^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$`.
        Value for an individual label must be <= 512 bytes, the total
        size of all label names and values must be <= 1024 bytes.

        Label named "language" can be used to record the programming language of
        the profiled deployment. The standard choices for the value include "java",
        "go", "python", "ruby", "nodejs", "php", "dotnet".

        For deployments running on Google Cloud Platform, "zone" or "region" label
        should be present describing the deployment location. An example of a zone
        is "us-central1-a", an example of a region is "us-central1" or
        "us-central".
        """
        pass
    def __init__(self,
        *,
        project_id : typing.Text = ...,
        target : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["labels",b"labels","project_id",b"project_id","target",b"target"]) -> None: ...
global___Deployment = Deployment
