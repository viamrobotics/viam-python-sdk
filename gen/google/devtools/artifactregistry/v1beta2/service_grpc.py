# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/devtools/artifactregistry/v1beta2/service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.devtools.artifactregistry.v1beta2.file_pb2
import google.devtools.artifactregistry.v1beta2.package_pb2
import google.devtools.artifactregistry.v1beta2.repository_pb2
import google.devtools.artifactregistry.v1beta2.tag_pb2
import google.devtools.artifactregistry.v1beta2.version_pb2
import google.iam.v1.iam_policy_pb2
import google.iam.v1.policy_pb2
import google.longrunning.operations_pb2
import google.protobuf.empty_pb2
import google.devtools.artifactregistry.v1beta2.service_pb2


class ArtifactRegistryBase(abc.ABC):

    @abc.abstractmethod
    async def ListRepositories(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.repository_pb2.ListRepositoriesRequest, google.devtools.artifactregistry.v1beta2.repository_pb2.ListRepositoriesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetRepository(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.repository_pb2.GetRepositoryRequest, google.devtools.artifactregistry.v1beta2.repository_pb2.Repository]') -> None:
        pass

    @abc.abstractmethod
    async def CreateRepository(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.repository_pb2.CreateRepositoryRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateRepository(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.repository_pb2.UpdateRepositoryRequest, google.devtools.artifactregistry.v1beta2.repository_pb2.Repository]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteRepository(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.repository_pb2.DeleteRepositoryRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ListPackages(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.package_pb2.ListPackagesRequest, google.devtools.artifactregistry.v1beta2.package_pb2.ListPackagesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetPackage(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.package_pb2.GetPackageRequest, google.devtools.artifactregistry.v1beta2.package_pb2.Package]') -> None:
        pass

    @abc.abstractmethod
    async def DeletePackage(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.package_pb2.DeletePackageRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ListVersions(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.version_pb2.ListVersionsRequest, google.devtools.artifactregistry.v1beta2.version_pb2.ListVersionsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetVersion(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.version_pb2.GetVersionRequest, google.devtools.artifactregistry.v1beta2.version_pb2.Version]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteVersion(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.version_pb2.DeleteVersionRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ListFiles(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.file_pb2.ListFilesRequest, google.devtools.artifactregistry.v1beta2.file_pb2.ListFilesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetFile(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.file_pb2.GetFileRequest, google.devtools.artifactregistry.v1beta2.file_pb2.File]') -> None:
        pass

    @abc.abstractmethod
    async def ListTags(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.tag_pb2.ListTagsRequest, google.devtools.artifactregistry.v1beta2.tag_pb2.ListTagsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetTag(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.tag_pb2.GetTagRequest, google.devtools.artifactregistry.v1beta2.tag_pb2.Tag]') -> None:
        pass

    @abc.abstractmethod
    async def CreateTag(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.tag_pb2.CreateTagRequest, google.devtools.artifactregistry.v1beta2.tag_pb2.Tag]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateTag(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.tag_pb2.UpdateTagRequest, google.devtools.artifactregistry.v1beta2.tag_pb2.Tag]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteTag(self, stream: 'grpclib.server.Stream[google.devtools.artifactregistry.v1beta2.tag_pb2.DeleteTagRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def SetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.SetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def GetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.GetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def TestIamPermissions(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest, google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListRepositories': grpclib.const.Handler(
                self.ListRepositories,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.repository_pb2.ListRepositoriesRequest,
                google.devtools.artifactregistry.v1beta2.repository_pb2.ListRepositoriesResponse,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetRepository': grpclib.const.Handler(
                self.GetRepository,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.repository_pb2.GetRepositoryRequest,
                google.devtools.artifactregistry.v1beta2.repository_pb2.Repository,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/CreateRepository': grpclib.const.Handler(
                self.CreateRepository,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.repository_pb2.CreateRepositoryRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/UpdateRepository': grpclib.const.Handler(
                self.UpdateRepository,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.repository_pb2.UpdateRepositoryRequest,
                google.devtools.artifactregistry.v1beta2.repository_pb2.Repository,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeleteRepository': grpclib.const.Handler(
                self.DeleteRepository,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.repository_pb2.DeleteRepositoryRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListPackages': grpclib.const.Handler(
                self.ListPackages,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.package_pb2.ListPackagesRequest,
                google.devtools.artifactregistry.v1beta2.package_pb2.ListPackagesResponse,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetPackage': grpclib.const.Handler(
                self.GetPackage,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.package_pb2.GetPackageRequest,
                google.devtools.artifactregistry.v1beta2.package_pb2.Package,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeletePackage': grpclib.const.Handler(
                self.DeletePackage,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.package_pb2.DeletePackageRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListVersions': grpclib.const.Handler(
                self.ListVersions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.version_pb2.ListVersionsRequest,
                google.devtools.artifactregistry.v1beta2.version_pb2.ListVersionsResponse,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetVersion': grpclib.const.Handler(
                self.GetVersion,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.version_pb2.GetVersionRequest,
                google.devtools.artifactregistry.v1beta2.version_pb2.Version,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeleteVersion': grpclib.const.Handler(
                self.DeleteVersion,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.version_pb2.DeleteVersionRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListFiles': grpclib.const.Handler(
                self.ListFiles,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.file_pb2.ListFilesRequest,
                google.devtools.artifactregistry.v1beta2.file_pb2.ListFilesResponse,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetFile': grpclib.const.Handler(
                self.GetFile,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.file_pb2.GetFileRequest,
                google.devtools.artifactregistry.v1beta2.file_pb2.File,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListTags': grpclib.const.Handler(
                self.ListTags,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.tag_pb2.ListTagsRequest,
                google.devtools.artifactregistry.v1beta2.tag_pb2.ListTagsResponse,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetTag': grpclib.const.Handler(
                self.GetTag,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.tag_pb2.GetTagRequest,
                google.devtools.artifactregistry.v1beta2.tag_pb2.Tag,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/CreateTag': grpclib.const.Handler(
                self.CreateTag,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.tag_pb2.CreateTagRequest,
                google.devtools.artifactregistry.v1beta2.tag_pb2.Tag,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/UpdateTag': grpclib.const.Handler(
                self.UpdateTag,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.tag_pb2.UpdateTagRequest,
                google.devtools.artifactregistry.v1beta2.tag_pb2.Tag,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeleteTag': grpclib.const.Handler(
                self.DeleteTag,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.artifactregistry.v1beta2.tag_pb2.DeleteTagRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/SetIamPolicy': grpclib.const.Handler(
                self.SetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetIamPolicy': grpclib.const.Handler(
                self.GetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/TestIamPermissions': grpclib.const.Handler(
                self.TestIamPermissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
            ),
        }


class ArtifactRegistryStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListRepositories = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListRepositories',
            google.devtools.artifactregistry.v1beta2.repository_pb2.ListRepositoriesRequest,
            google.devtools.artifactregistry.v1beta2.repository_pb2.ListRepositoriesResponse,
        )
        self.GetRepository = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetRepository',
            google.devtools.artifactregistry.v1beta2.repository_pb2.GetRepositoryRequest,
            google.devtools.artifactregistry.v1beta2.repository_pb2.Repository,
        )
        self.CreateRepository = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/CreateRepository',
            google.devtools.artifactregistry.v1beta2.repository_pb2.CreateRepositoryRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.UpdateRepository = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/UpdateRepository',
            google.devtools.artifactregistry.v1beta2.repository_pb2.UpdateRepositoryRequest,
            google.devtools.artifactregistry.v1beta2.repository_pb2.Repository,
        )
        self.DeleteRepository = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeleteRepository',
            google.devtools.artifactregistry.v1beta2.repository_pb2.DeleteRepositoryRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ListPackages = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListPackages',
            google.devtools.artifactregistry.v1beta2.package_pb2.ListPackagesRequest,
            google.devtools.artifactregistry.v1beta2.package_pb2.ListPackagesResponse,
        )
        self.GetPackage = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetPackage',
            google.devtools.artifactregistry.v1beta2.package_pb2.GetPackageRequest,
            google.devtools.artifactregistry.v1beta2.package_pb2.Package,
        )
        self.DeletePackage = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeletePackage',
            google.devtools.artifactregistry.v1beta2.package_pb2.DeletePackageRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ListVersions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListVersions',
            google.devtools.artifactregistry.v1beta2.version_pb2.ListVersionsRequest,
            google.devtools.artifactregistry.v1beta2.version_pb2.ListVersionsResponse,
        )
        self.GetVersion = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetVersion',
            google.devtools.artifactregistry.v1beta2.version_pb2.GetVersionRequest,
            google.devtools.artifactregistry.v1beta2.version_pb2.Version,
        )
        self.DeleteVersion = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeleteVersion',
            google.devtools.artifactregistry.v1beta2.version_pb2.DeleteVersionRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ListFiles = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListFiles',
            google.devtools.artifactregistry.v1beta2.file_pb2.ListFilesRequest,
            google.devtools.artifactregistry.v1beta2.file_pb2.ListFilesResponse,
        )
        self.GetFile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetFile',
            google.devtools.artifactregistry.v1beta2.file_pb2.GetFileRequest,
            google.devtools.artifactregistry.v1beta2.file_pb2.File,
        )
        self.ListTags = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/ListTags',
            google.devtools.artifactregistry.v1beta2.tag_pb2.ListTagsRequest,
            google.devtools.artifactregistry.v1beta2.tag_pb2.ListTagsResponse,
        )
        self.GetTag = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetTag',
            google.devtools.artifactregistry.v1beta2.tag_pb2.GetTagRequest,
            google.devtools.artifactregistry.v1beta2.tag_pb2.Tag,
        )
        self.CreateTag = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/CreateTag',
            google.devtools.artifactregistry.v1beta2.tag_pb2.CreateTagRequest,
            google.devtools.artifactregistry.v1beta2.tag_pb2.Tag,
        )
        self.UpdateTag = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/UpdateTag',
            google.devtools.artifactregistry.v1beta2.tag_pb2.UpdateTagRequest,
            google.devtools.artifactregistry.v1beta2.tag_pb2.Tag,
        )
        self.DeleteTag = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/DeleteTag',
            google.devtools.artifactregistry.v1beta2.tag_pb2.DeleteTagRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.SetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/SetIamPolicy',
            google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.GetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/GetIamPolicy',
            google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.TestIamPermissions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.artifactregistry.v1beta2.ArtifactRegistry/TestIamPermissions',
            google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
            google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
        )
