"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Repo(google.protobuf.message.Message):
    """A repository (or repo) is a Git repository storing versioned source content."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    MIRROR_CONFIG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Resource name of the repository, of the form
    `projects/<project>/repos/<repo>`.  The repo name may contain slashes.
    eg, `projects/myproject/repos/name/with/slash`
    """

    size: builtins.int = ...
    """The disk usage of the repo, in bytes. Read-only field. Size is only
    returned by GetRepo.
    """

    url: typing.Text = ...
    """URL to clone the repository from Google Cloud Source Repositories.
    Read-only field.
    """

    @property
    def mirror_config(self) -> global___MirrorConfig:
        """How this repository mirrors a repository managed by another service.
        Read-only field.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        size : builtins.int = ...,
        url : typing.Text = ...,
        mirror_config : typing.Optional[global___MirrorConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["mirror_config",b"mirror_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["mirror_config",b"mirror_config","name",b"name","size",b"size","url",b"url"]) -> None: ...
global___Repo = Repo

class MirrorConfig(google.protobuf.message.Message):
    """Configuration to automatically mirror a repository from another
    hosting service, for example GitHub or BitBucket.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URL_FIELD_NUMBER: builtins.int
    WEBHOOK_ID_FIELD_NUMBER: builtins.int
    DEPLOY_KEY_ID_FIELD_NUMBER: builtins.int
    url: typing.Text = ...
    """URL of the main repository at the other hosting service."""

    webhook_id: typing.Text = ...
    """ID of the webhook listening to updates to trigger mirroring.
    Removing this webhook from the other hosting service will stop
    Google Cloud Source Repositories from receiving notifications,
    and thereby disabling mirroring.
    """

    deploy_key_id: typing.Text = ...
    """ID of the SSH deploy key at the other hosting service.
    Removing this key from the other service would deauthorize
    Google Cloud Source Repositories from mirroring.
    """

    def __init__(self,
        *,
        url : typing.Text = ...,
        webhook_id : typing.Text = ...,
        deploy_key_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["deploy_key_id",b"deploy_key_id","url",b"url","webhook_id",b"webhook_id"]) -> None: ...
global___MirrorConfig = MirrorConfig

class GetRepoRequest(google.protobuf.message.Message):
    """Request for GetRepo."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the requested repository. Values are of the form
    `projects/<project>/repos/<repo>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetRepoRequest = GetRepoRequest

class ListReposRequest(google.protobuf.message.Message):
    """Request for ListRepos."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The project ID whose repos should be listed. Values are of the form
    `projects/<project>`.
    """

    page_size: builtins.int = ...
    """Maximum number of repositories to return; between 1 and 500.
    If not set or zero, defaults to 100 at the server.
    """

    page_token: typing.Text = ...
    """Resume listing repositories where a prior ListReposResponse
    left off. This is an opaque token that must be obtained from
    a recent, prior ListReposResponse's next_page_token field.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListReposRequest = ListReposRequest

class ListReposResponse(google.protobuf.message.Message):
    """Response for ListRepos.  The size is not set in the returned repositories."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REPOS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def repos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Repo]:
        """The listed repos."""
        pass
    next_page_token: typing.Text = ...
    """If non-empty, additional repositories exist within the project. These
    can be retrieved by including this value in the next ListReposRequest's
    page_token field.
    """

    def __init__(self,
        *,
        repos : typing.Optional[typing.Iterable[global___Repo]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","repos",b"repos"]) -> None: ...
global___ListReposResponse = ListReposResponse

class CreateRepoRequest(google.protobuf.message.Message):
    """Request for CreateRepo"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    REPO_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """The project in which to create the repo. Values are of the form
    `projects/<project>`.
    """

    @property
    def repo(self) -> global___Repo:
        """The repo to create.  Only name should be set; setting other fields
        is an error.  The project in the name should match the parent field.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        repo : typing.Optional[global___Repo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["repo",b"repo"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","repo",b"repo"]) -> None: ...
global___CreateRepoRequest = CreateRepoRequest

class DeleteRepoRequest(google.protobuf.message.Message):
    """Request for DeleteRepo."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the repo to delete. Values are of the form
    `projects/<project>/repos/<repo>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteRepoRequest = DeleteRepoRequest
