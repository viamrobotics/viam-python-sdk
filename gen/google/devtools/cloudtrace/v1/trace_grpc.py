# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/devtools/cloudtrace/v1/trace.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.protobuf.empty_pb2
import google.protobuf.timestamp_pb2
import google.api.annotations_pb2
import google.devtools.cloudtrace.v1.trace_pb2


class TraceServiceBase(abc.ABC):

    @abc.abstractmethod
    async def ListTraces(self, stream: 'grpclib.server.Stream[google.devtools.cloudtrace.v1.trace_pb2.ListTracesRequest, google.devtools.cloudtrace.v1.trace_pb2.ListTracesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetTrace(self, stream: 'grpclib.server.Stream[google.devtools.cloudtrace.v1.trace_pb2.GetTraceRequest, google.devtools.cloudtrace.v1.trace_pb2.Trace]') -> None:
        pass

    @abc.abstractmethod
    async def PatchTraces(self, stream: 'grpclib.server.Stream[google.devtools.cloudtrace.v1.trace_pb2.PatchTracesRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.devtools.cloudtrace.v1.TraceService/ListTraces': grpclib.const.Handler(
                self.ListTraces,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.cloudtrace.v1.trace_pb2.ListTracesRequest,
                google.devtools.cloudtrace.v1.trace_pb2.ListTracesResponse,
            ),
            '/google.devtools.cloudtrace.v1.TraceService/GetTrace': grpclib.const.Handler(
                self.GetTrace,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.cloudtrace.v1.trace_pb2.GetTraceRequest,
                google.devtools.cloudtrace.v1.trace_pb2.Trace,
            ),
            '/google.devtools.cloudtrace.v1.TraceService/PatchTraces': grpclib.const.Handler(
                self.PatchTraces,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.devtools.cloudtrace.v1.trace_pb2.PatchTracesRequest,
                google.protobuf.empty_pb2.Empty,
            ),
        }


class TraceServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListTraces = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.cloudtrace.v1.TraceService/ListTraces',
            google.devtools.cloudtrace.v1.trace_pb2.ListTracesRequest,
            google.devtools.cloudtrace.v1.trace_pb2.ListTracesResponse,
        )
        self.GetTrace = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.cloudtrace.v1.TraceService/GetTrace',
            google.devtools.cloudtrace.v1.trace_pb2.GetTraceRequest,
            google.devtools.cloudtrace.v1.trace_pb2.Trace,
        )
        self.PatchTraces = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.devtools.cloudtrace.v1.TraceService/PatchTraces',
            google.devtools.cloudtrace.v1.trace_pb2.PatchTracesRequest,
            google.protobuf.empty_pb2.Empty,
        )
