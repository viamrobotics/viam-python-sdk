# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/firestore/admin/v1beta1/firestore_admin.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.firestore.admin.v1beta1.index_pb2
import google.longrunning.operations_pb2
import google.protobuf.empty_pb2
import google.protobuf.timestamp_pb2
import google.api.client_pb2
import google.firestore.admin.v1beta1.firestore_admin_pb2


class FirestoreAdminBase(abc.ABC):

    @abc.abstractmethod
    async def CreateIndex(self, stream: 'grpclib.server.Stream[google.firestore.admin.v1beta1.firestore_admin_pb2.CreateIndexRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ListIndexes(self, stream: 'grpclib.server.Stream[google.firestore.admin.v1beta1.firestore_admin_pb2.ListIndexesRequest, google.firestore.admin.v1beta1.firestore_admin_pb2.ListIndexesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetIndex(self, stream: 'grpclib.server.Stream[google.firestore.admin.v1beta1.firestore_admin_pb2.GetIndexRequest, google.firestore.admin.v1beta1.index_pb2.Index]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteIndex(self, stream: 'grpclib.server.Stream[google.firestore.admin.v1beta1.firestore_admin_pb2.DeleteIndexRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def ExportDocuments(self, stream: 'grpclib.server.Stream[google.firestore.admin.v1beta1.firestore_admin_pb2.ExportDocumentsRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ImportDocuments(self, stream: 'grpclib.server.Stream[google.firestore.admin.v1beta1.firestore_admin_pb2.ImportDocumentsRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.firestore.admin.v1beta1.FirestoreAdmin/CreateIndex': grpclib.const.Handler(
                self.CreateIndex,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.firestore.admin.v1beta1.firestore_admin_pb2.CreateIndexRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.firestore.admin.v1beta1.FirestoreAdmin/ListIndexes': grpclib.const.Handler(
                self.ListIndexes,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.firestore.admin.v1beta1.firestore_admin_pb2.ListIndexesRequest,
                google.firestore.admin.v1beta1.firestore_admin_pb2.ListIndexesResponse,
            ),
            '/google.firestore.admin.v1beta1.FirestoreAdmin/GetIndex': grpclib.const.Handler(
                self.GetIndex,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.firestore.admin.v1beta1.firestore_admin_pb2.GetIndexRequest,
                google.firestore.admin.v1beta1.index_pb2.Index,
            ),
            '/google.firestore.admin.v1beta1.FirestoreAdmin/DeleteIndex': grpclib.const.Handler(
                self.DeleteIndex,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.firestore.admin.v1beta1.firestore_admin_pb2.DeleteIndexRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.firestore.admin.v1beta1.FirestoreAdmin/ExportDocuments': grpclib.const.Handler(
                self.ExportDocuments,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.firestore.admin.v1beta1.firestore_admin_pb2.ExportDocumentsRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.firestore.admin.v1beta1.FirestoreAdmin/ImportDocuments': grpclib.const.Handler(
                self.ImportDocuments,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.firestore.admin.v1beta1.firestore_admin_pb2.ImportDocumentsRequest,
                google.longrunning.operations_pb2.Operation,
            ),
        }


class FirestoreAdminStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateIndex = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.firestore.admin.v1beta1.FirestoreAdmin/CreateIndex',
            google.firestore.admin.v1beta1.firestore_admin_pb2.CreateIndexRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ListIndexes = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.firestore.admin.v1beta1.FirestoreAdmin/ListIndexes',
            google.firestore.admin.v1beta1.firestore_admin_pb2.ListIndexesRequest,
            google.firestore.admin.v1beta1.firestore_admin_pb2.ListIndexesResponse,
        )
        self.GetIndex = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.firestore.admin.v1beta1.FirestoreAdmin/GetIndex',
            google.firestore.admin.v1beta1.firestore_admin_pb2.GetIndexRequest,
            google.firestore.admin.v1beta1.index_pb2.Index,
        )
        self.DeleteIndex = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.firestore.admin.v1beta1.FirestoreAdmin/DeleteIndex',
            google.firestore.admin.v1beta1.firestore_admin_pb2.DeleteIndexRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.ExportDocuments = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.firestore.admin.v1beta1.FirestoreAdmin/ExportDocuments',
            google.firestore.admin.v1beta1.firestore_admin_pb2.ExportDocumentsRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ImportDocuments = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.firestore.admin.v1beta1.FirestoreAdmin/ImportDocuments',
            google.firestore.admin.v1beta1.firestore_admin_pb2.ImportDocumentsRequest,
            google.longrunning.operations_pb2.Operation,
        )
