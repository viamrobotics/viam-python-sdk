"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import google.type.latlng_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Document(google.protobuf.message.Message):
    """A Firestore document.

    Must not exceed 1 MiB - 4 bytes.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class FieldsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Value: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the document, for example
    `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
    """

    @property
    def fields(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Value]:
        """The document's fields.

        The map keys represent field names.

        A simple field name contains only characters `a` to `z`, `A` to `Z`,
        `0` to `9`, or `_`, and must not start with `0` to `9`. For example,
        `foo_bar_17`.

        Field names matching the regular expression `__.*__` are reserved. Reserved
        field names are forbidden except in certain documented contexts. The map
        keys, represented as UTF-8, must not exceed 1,500 bytes and cannot be
        empty.

        Field paths may be used in other contexts to refer to structured fields
        defined here. For `map_value`, the field path is represented by the simple
        or quoted field names of the containing fields, delimited by `.`. For
        example, the structured field
        `"foo" : { map_value: { "x&y" : { string_value: "hello" }}}` would be
        represented by the field path `foo.x&y`.

        Within a field path, a quoted field name starts and ends with `` ` `` and
        may contain any character. Some characters, including `` ` ``, must be
        escaped using a `\\`. For example, `` `x&y` `` represents `x&y` and
        `` `bak\\`tik` `` represents `` bak`tik ``.
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time at which the document was created.

        This value increases monotonically when a document is deleted then
        recreated. It can also be compared to values from other documents and
        the `read_time` of a query.
        """
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time at which the document was last changed.

        This value is initially set to the `create_time` then increases
        monotonically with each change to the document. It can also be
        compared to values from other documents and the `read_time` of a query.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        fields : typing.Optional[typing.Mapping[typing.Text, global___Value]] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","fields",b"fields","name",b"name","update_time",b"update_time"]) -> None: ...
global___Document = Document

class Value(google.protobuf.message.Message):
    """A message that can hold any of the supported value types."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NULL_VALUE_FIELD_NUMBER: builtins.int
    BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
    INTEGER_VALUE_FIELD_NUMBER: builtins.int
    DOUBLE_VALUE_FIELD_NUMBER: builtins.int
    TIMESTAMP_VALUE_FIELD_NUMBER: builtins.int
    STRING_VALUE_FIELD_NUMBER: builtins.int
    BYTES_VALUE_FIELD_NUMBER: builtins.int
    REFERENCE_VALUE_FIELD_NUMBER: builtins.int
    GEO_POINT_VALUE_FIELD_NUMBER: builtins.int
    ARRAY_VALUE_FIELD_NUMBER: builtins.int
    MAP_VALUE_FIELD_NUMBER: builtins.int
    null_value: google.protobuf.struct_pb2.NullValue.ValueType = ...
    """A null value."""

    boolean_value: builtins.bool = ...
    """A boolean value."""

    integer_value: builtins.int = ...
    """An integer value."""

    double_value: builtins.float = ...
    """A double value."""

    @property
    def timestamp_value(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """A timestamp value.

        Precise only to microseconds. When stored, any additional precision is
        rounded down.
        """
        pass
    string_value: typing.Text = ...
    """A string value.

    The string, represented as UTF-8, must not exceed 1 MiB - 89 bytes.
    Only the first 1,500 bytes of the UTF-8 representation are considered by
    queries.
    """

    bytes_value: builtins.bytes = ...
    """A bytes value.

    Must not exceed 1 MiB - 89 bytes.
    Only the first 1,500 bytes are considered by queries.
    """

    reference_value: typing.Text = ...
    """A reference to a document. For example:
    `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
    """

    @property
    def geo_point_value(self) -> google.type.latlng_pb2.LatLng:
        """A geo point value representing a point on the surface of Earth."""
        pass
    @property
    def array_value(self) -> global___ArrayValue:
        """An array value.

        Cannot directly contain another array value, though can contain an
        map which contains another array.
        """
        pass
    @property
    def map_value(self) -> global___MapValue:
        """A map value."""
        pass
    def __init__(self,
        *,
        null_value : google.protobuf.struct_pb2.NullValue.ValueType = ...,
        boolean_value : builtins.bool = ...,
        integer_value : builtins.int = ...,
        double_value : builtins.float = ...,
        timestamp_value : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        string_value : typing.Text = ...,
        bytes_value : builtins.bytes = ...,
        reference_value : typing.Text = ...,
        geo_point_value : typing.Optional[google.type.latlng_pb2.LatLng] = ...,
        array_value : typing.Optional[global___ArrayValue] = ...,
        map_value : typing.Optional[global___MapValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["array_value",b"array_value","boolean_value",b"boolean_value","bytes_value",b"bytes_value","double_value",b"double_value","geo_point_value",b"geo_point_value","integer_value",b"integer_value","map_value",b"map_value","null_value",b"null_value","reference_value",b"reference_value","string_value",b"string_value","timestamp_value",b"timestamp_value","value_type",b"value_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["array_value",b"array_value","boolean_value",b"boolean_value","bytes_value",b"bytes_value","double_value",b"double_value","geo_point_value",b"geo_point_value","integer_value",b"integer_value","map_value",b"map_value","null_value",b"null_value","reference_value",b"reference_value","string_value",b"string_value","timestamp_value",b"timestamp_value","value_type",b"value_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value_type",b"value_type"]) -> typing.Optional[typing_extensions.Literal["null_value","boolean_value","integer_value","double_value","timestamp_value","string_value","bytes_value","reference_value","geo_point_value","array_value","map_value"]]: ...
global___Value = Value

class ArrayValue(google.protobuf.message.Message):
    """An array value."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Value]:
        """Values in the array."""
        pass
    def __init__(self,
        *,
        values : typing.Optional[typing.Iterable[global___Value]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["values",b"values"]) -> None: ...
global___ArrayValue = ArrayValue

class MapValue(google.protobuf.message.Message):
    """A map value."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class FieldsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Value: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FIELDS_FIELD_NUMBER: builtins.int
    @property
    def fields(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Value]:
        """The map's fields.

        The map keys represent field names. Field names matching the regular
        expression `__.*__` are reserved. Reserved field names are forbidden except
        in certain documented contexts. The map keys, represented as UTF-8, must
        not exceed 1,500 bytes and cannot be empty.
        """
        pass
    def __init__(self,
        *,
        fields : typing.Optional[typing.Mapping[typing.Text, global___Value]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fields",b"fields"]) -> None: ...
global___MapValue = MapValue
