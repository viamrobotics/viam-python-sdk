# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/genomics/v1/datasets.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.iam.v1.iam_policy_pb2
import google.iam.v1.policy_pb2
import google.protobuf.empty_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.timestamp_pb2
import google.genomics.v1.datasets_pb2


class DatasetServiceV1Base(abc.ABC):

    @abc.abstractmethod
    async def ListDatasets(self, stream: 'grpclib.server.Stream[google.genomics.v1.datasets_pb2.ListDatasetsRequest, google.genomics.v1.datasets_pb2.ListDatasetsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateDataset(self, stream: 'grpclib.server.Stream[google.genomics.v1.datasets_pb2.CreateDatasetRequest, google.genomics.v1.datasets_pb2.Dataset]') -> None:
        pass

    @abc.abstractmethod
    async def GetDataset(self, stream: 'grpclib.server.Stream[google.genomics.v1.datasets_pb2.GetDatasetRequest, google.genomics.v1.datasets_pb2.Dataset]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateDataset(self, stream: 'grpclib.server.Stream[google.genomics.v1.datasets_pb2.UpdateDatasetRequest, google.genomics.v1.datasets_pb2.Dataset]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteDataset(self, stream: 'grpclib.server.Stream[google.genomics.v1.datasets_pb2.DeleteDatasetRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def UndeleteDataset(self, stream: 'grpclib.server.Stream[google.genomics.v1.datasets_pb2.UndeleteDatasetRequest, google.genomics.v1.datasets_pb2.Dataset]') -> None:
        pass

    @abc.abstractmethod
    async def SetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.SetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def GetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.GetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def TestIamPermissions(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest, google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.genomics.v1.DatasetServiceV1/ListDatasets': grpclib.const.Handler(
                self.ListDatasets,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.genomics.v1.datasets_pb2.ListDatasetsRequest,
                google.genomics.v1.datasets_pb2.ListDatasetsResponse,
            ),
            '/google.genomics.v1.DatasetServiceV1/CreateDataset': grpclib.const.Handler(
                self.CreateDataset,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.genomics.v1.datasets_pb2.CreateDatasetRequest,
                google.genomics.v1.datasets_pb2.Dataset,
            ),
            '/google.genomics.v1.DatasetServiceV1/GetDataset': grpclib.const.Handler(
                self.GetDataset,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.genomics.v1.datasets_pb2.GetDatasetRequest,
                google.genomics.v1.datasets_pb2.Dataset,
            ),
            '/google.genomics.v1.DatasetServiceV1/UpdateDataset': grpclib.const.Handler(
                self.UpdateDataset,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.genomics.v1.datasets_pb2.UpdateDatasetRequest,
                google.genomics.v1.datasets_pb2.Dataset,
            ),
            '/google.genomics.v1.DatasetServiceV1/DeleteDataset': grpclib.const.Handler(
                self.DeleteDataset,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.genomics.v1.datasets_pb2.DeleteDatasetRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.genomics.v1.DatasetServiceV1/UndeleteDataset': grpclib.const.Handler(
                self.UndeleteDataset,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.genomics.v1.datasets_pb2.UndeleteDatasetRequest,
                google.genomics.v1.datasets_pb2.Dataset,
            ),
            '/google.genomics.v1.DatasetServiceV1/SetIamPolicy': grpclib.const.Handler(
                self.SetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.genomics.v1.DatasetServiceV1/GetIamPolicy': grpclib.const.Handler(
                self.GetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.genomics.v1.DatasetServiceV1/TestIamPermissions': grpclib.const.Handler(
                self.TestIamPermissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
            ),
        }


class DatasetServiceV1Stub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListDatasets = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.genomics.v1.DatasetServiceV1/ListDatasets',
            google.genomics.v1.datasets_pb2.ListDatasetsRequest,
            google.genomics.v1.datasets_pb2.ListDatasetsResponse,
        )
        self.CreateDataset = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.genomics.v1.DatasetServiceV1/CreateDataset',
            google.genomics.v1.datasets_pb2.CreateDatasetRequest,
            google.genomics.v1.datasets_pb2.Dataset,
        )
        self.GetDataset = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.genomics.v1.DatasetServiceV1/GetDataset',
            google.genomics.v1.datasets_pb2.GetDatasetRequest,
            google.genomics.v1.datasets_pb2.Dataset,
        )
        self.UpdateDataset = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.genomics.v1.DatasetServiceV1/UpdateDataset',
            google.genomics.v1.datasets_pb2.UpdateDatasetRequest,
            google.genomics.v1.datasets_pb2.Dataset,
        )
        self.DeleteDataset = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.genomics.v1.DatasetServiceV1/DeleteDataset',
            google.genomics.v1.datasets_pb2.DeleteDatasetRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.UndeleteDataset = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.genomics.v1.DatasetServiceV1/UndeleteDataset',
            google.genomics.v1.datasets_pb2.UndeleteDatasetRequest,
            google.genomics.v1.datasets_pb2.Dataset,
        )
        self.SetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.genomics.v1.DatasetServiceV1/SetIamPolicy',
            google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.GetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.genomics.v1.DatasetServiceV1/GetIamPolicy',
            google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.TestIamPermissions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.genomics.v1.DatasetServiceV1/TestIamPermissions',
            google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
            google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
        )
