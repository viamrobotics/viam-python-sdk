"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Reference(google.protobuf.message.Message):
    """A reference is a canonical assembled DNA sequence, intended to act as a
    reference coordinate space for other genomic annotations. A single reference
    might represent the human chromosome 1 or mitochandrial DNA, for instance. A
    reference belongs to one or more reference sets.

    For more genomics resource definitions, see [Fundamentals of Google
    Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    MD5CHECKSUM_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SOURCE_URI_FIELD_NUMBER: builtins.int
    SOURCE_ACCESSIONS_FIELD_NUMBER: builtins.int
    NCBI_TAXON_ID_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """The server-generated reference ID, unique across all references."""

    length: builtins.int = ...
    """The length of this reference's sequence."""

    md5checksum: typing.Text = ...
    """MD5 of the upper-case sequence excluding all whitespace characters (this
    is equivalent to SQ:M5 in SAM). This value is represented in lower case
    hexadecimal format.
    """

    name: typing.Text = ...
    """The name of this reference, for example `22`."""

    source_uri: typing.Text = ...
    """The URI from which the sequence was obtained. Typically specifies a FASTA
    format file.
    """

    @property
    def source_accessions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
        with a version number, for example `GCF_000001405.26`.
        """
        pass
    ncbi_taxon_id: builtins.int = ...
    """ID from http://www.ncbi.nlm.nih.gov/taxonomy. For example, 9606 for human."""

    def __init__(self,
        *,
        id : typing.Text = ...,
        length : builtins.int = ...,
        md5checksum : typing.Text = ...,
        name : typing.Text = ...,
        source_uri : typing.Text = ...,
        source_accessions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ncbi_taxon_id : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","length",b"length","md5checksum",b"md5checksum","name",b"name","ncbi_taxon_id",b"ncbi_taxon_id","source_accessions",b"source_accessions","source_uri",b"source_uri"]) -> None: ...
global___Reference = Reference

class ReferenceSet(google.protobuf.message.Message):
    """A reference set is a set of references which typically comprise a reference
    assembly for a species, such as `GRCh38` which is representative
    of the human genome. A reference set defines a common coordinate space for
    comparing reference-aligned experimental data. A reference set contains 1 or
    more references.

    For more genomics resource definitions, see [Fundamentals of Google
    Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    REFERENCE_IDS_FIELD_NUMBER: builtins.int
    MD5CHECKSUM_FIELD_NUMBER: builtins.int
    NCBI_TAXON_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ASSEMBLY_ID_FIELD_NUMBER: builtins.int
    SOURCE_URI_FIELD_NUMBER: builtins.int
    SOURCE_ACCESSIONS_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """The server-generated reference set ID, unique across all reference sets."""

    @property
    def reference_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The IDs of the reference objects that are part of this set.
        `Reference.md5checksum` must be unique within this set.
        """
        pass
    md5checksum: typing.Text = ...
    """Order-independent MD5 checksum which identifies this reference set. The
    checksum is computed by sorting all lower case hexidecimal string
    `reference.md5checksum` (for all reference in this set) in
    ascending lexicographic order, concatenating, and taking the MD5 of that
    value. The resulting value is represented in lower case hexadecimal format.
    """

    ncbi_taxon_id: builtins.int = ...
    """ID from http://www.ncbi.nlm.nih.gov/taxonomy (for example, 9606 for human)
    indicating the species which this reference set is intended to model. Note
    that contained references may specify a different `ncbiTaxonId`, as
    assemblies may contain reference sequences which do not belong to the
    modeled species, for example EBV in a human reference genome.
    """

    description: typing.Text = ...
    """Free text description of this reference set."""

    assembly_id: typing.Text = ...
    """Public id of this reference set, such as `GRCh37`."""

    source_uri: typing.Text = ...
    """The URI from which the references were obtained."""

    @property
    def source_accessions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally
        with a version number, for example `NC_000001.11`.
        """
        pass
    def __init__(self,
        *,
        id : typing.Text = ...,
        reference_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        md5checksum : typing.Text = ...,
        ncbi_taxon_id : builtins.int = ...,
        description : typing.Text = ...,
        assembly_id : typing.Text = ...,
        source_uri : typing.Text = ...,
        source_accessions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["assembly_id",b"assembly_id","description",b"description","id",b"id","md5checksum",b"md5checksum","ncbi_taxon_id",b"ncbi_taxon_id","reference_ids",b"reference_ids","source_accessions",b"source_accessions","source_uri",b"source_uri"]) -> None: ...
global___ReferenceSet = ReferenceSet

class SearchReferenceSetsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MD5CHECKSUMS_FIELD_NUMBER: builtins.int
    ACCESSIONS_FIELD_NUMBER: builtins.int
    ASSEMBLY_ID_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    @property
    def md5checksums(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If present, return reference sets for which the
        [md5checksum][google.genomics.v1.ReferenceSet.md5checksum] matches exactly.
        """
        pass
    @property
    def accessions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If present, return reference sets for which a prefix of any of
        [sourceAccessions][google.genomics.v1.ReferenceSet.source_accessions]
        match any of these strings. Accession numbers typically have a main number
        and a version, for example `NC_000001.11`.
        """
        pass
    assembly_id: typing.Text = ...
    """If present, return reference sets for which a substring of their
    `assemblyId` matches this string (case insensitive).
    """

    page_token: typing.Text = ...
    """The continuation token, which is used to page through large result sets.
    To get the next page of results, set this parameter to the value of
    `nextPageToken` from the previous response.
    """

    page_size: builtins.int = ...
    """The maximum number of results to return in a single page. If unspecified,
    defaults to 1024. The maximum value is 4096.
    """

    def __init__(self,
        *,
        md5checksums : typing.Optional[typing.Iterable[typing.Text]] = ...,
        accessions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        assembly_id : typing.Text = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accessions",b"accessions","assembly_id",b"assembly_id","md5checksums",b"md5checksums","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___SearchReferenceSetsRequest = SearchReferenceSetsRequest

class SearchReferenceSetsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REFERENCE_SETS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def reference_sets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ReferenceSet]:
        """The matching references sets."""
        pass
    next_page_token: typing.Text = ...
    """The continuation token, which is used to page through large result sets.
    Provide this value in a subsequent request to return the next page of
    results. This field will be empty if there aren't any additional results.
    """

    def __init__(self,
        *,
        reference_sets : typing.Optional[typing.Iterable[global___ReferenceSet]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","reference_sets",b"reference_sets"]) -> None: ...
global___SearchReferenceSetsResponse = SearchReferenceSetsResponse

class GetReferenceSetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REFERENCE_SET_ID_FIELD_NUMBER: builtins.int
    reference_set_id: typing.Text = ...
    """The ID of the reference set."""

    def __init__(self,
        *,
        reference_set_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["reference_set_id",b"reference_set_id"]) -> None: ...
global___GetReferenceSetRequest = GetReferenceSetRequest

class SearchReferencesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MD5CHECKSUMS_FIELD_NUMBER: builtins.int
    ACCESSIONS_FIELD_NUMBER: builtins.int
    REFERENCE_SET_ID_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    @property
    def md5checksums(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If present, return references for which the
        [md5checksum][google.genomics.v1.Reference.md5checksum] matches exactly.
        """
        pass
    @property
    def accessions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If present, return references for which a prefix of any of
        [sourceAccessions][google.genomics.v1.Reference.source_accessions] match
        any of these strings. Accession numbers typically have a main number and a
        version, for example `GCF_000001405.26`.
        """
        pass
    reference_set_id: typing.Text = ...
    """If present, return only references which belong to this reference set."""

    page_token: typing.Text = ...
    """The continuation token, which is used to page through large result sets.
    To get the next page of results, set this parameter to the value of
    `nextPageToken` from the previous response.
    """

    page_size: builtins.int = ...
    """The maximum number of results to return in a single page. If unspecified,
    defaults to 1024. The maximum value is 4096.
    """

    def __init__(self,
        *,
        md5checksums : typing.Optional[typing.Iterable[typing.Text]] = ...,
        accessions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        reference_set_id : typing.Text = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accessions",b"accessions","md5checksums",b"md5checksums","page_size",b"page_size","page_token",b"page_token","reference_set_id",b"reference_set_id"]) -> None: ...
global___SearchReferencesRequest = SearchReferencesRequest

class SearchReferencesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REFERENCES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def references(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Reference]:
        """The matching references."""
        pass
    next_page_token: typing.Text = ...
    """The continuation token, which is used to page through large result sets.
    Provide this value in a subsequent request to return the next page of
    results. This field will be empty if there aren't any additional results.
    """

    def __init__(self,
        *,
        references : typing.Optional[typing.Iterable[global___Reference]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","references",b"references"]) -> None: ...
global___SearchReferencesResponse = SearchReferencesResponse

class GetReferenceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REFERENCE_ID_FIELD_NUMBER: builtins.int
    reference_id: typing.Text = ...
    """The ID of the reference."""

    def __init__(self,
        *,
        reference_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["reference_id",b"reference_id"]) -> None: ...
global___GetReferenceRequest = GetReferenceRequest

class ListBasesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REFERENCE_ID_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    reference_id: typing.Text = ...
    """The ID of the reference."""

    start: builtins.int = ...
    """The start position (0-based) of this query. Defaults to 0."""

    end: builtins.int = ...
    """The end position (0-based, exclusive) of this query. Defaults to the length
    of this reference.
    """

    page_token: typing.Text = ...
    """The continuation token, which is used to page through large result sets.
    To get the next page of results, set this parameter to the value of
    `nextPageToken` from the previous response.
    """

    page_size: builtins.int = ...
    """The maximum number of bases to return in a single page. If unspecified,
    defaults to 200Kbp (kilo base pairs). The maximum value is 10Mbp (mega base
    pairs).
    """

    def __init__(self,
        *,
        reference_id : typing.Text = ...,
        start : builtins.int = ...,
        end : builtins.int = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end",b"end","page_size",b"page_size","page_token",b"page_token","reference_id",b"reference_id","start",b"start"]) -> None: ...
global___ListBasesRequest = ListBasesRequest

class ListBasesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OFFSET_FIELD_NUMBER: builtins.int
    SEQUENCE_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    offset: builtins.int = ...
    """The offset position (0-based) of the given `sequence` from the
    start of this `Reference`. This value will differ for each page
    in a paginated request.
    """

    sequence: typing.Text = ...
    """A substring of the bases that make up this reference."""

    next_page_token: typing.Text = ...
    """The continuation token, which is used to page through large result sets.
    Provide this value in a subsequent request to return the next page of
    results. This field will be empty if there aren't any additional results.
    """

    def __init__(self,
        *,
        offset : builtins.int = ...,
        sequence : typing.Text = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","offset",b"offset","sequence",b"sequence"]) -> None: ...
global___ListBasesResponse = ListBasesResponse
