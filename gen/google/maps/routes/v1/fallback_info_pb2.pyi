"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _FallbackReason:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _FallbackReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FallbackReason.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    FALLBACK_REASON_UNSPECIFIED: FallbackReason.ValueType = ...  # 0
    """No fallback reason specified."""

    SERVER_ERROR: FallbackReason.ValueType = ...  # 1
    """A server error happened while calculating routes with your preferred
    routing mode, but we were able to return a result calculated by an
    alternative mode.
    """

    LATENCY_EXCEEDED: FallbackReason.ValueType = ...  # 2
    """We were not able to finish the calculation with your preferred routing mode
    on time, but we were able to return a result calculated by an alternative
    mode.
    """

class FallbackReason(_FallbackReason, metaclass=_FallbackReasonEnumTypeWrapper):
    """Reasons for using fallback response."""
    pass

FALLBACK_REASON_UNSPECIFIED: FallbackReason.ValueType = ...  # 0
"""No fallback reason specified."""

SERVER_ERROR: FallbackReason.ValueType = ...  # 1
"""A server error happened while calculating routes with your preferred
routing mode, but we were able to return a result calculated by an
alternative mode.
"""

LATENCY_EXCEEDED: FallbackReason.ValueType = ...  # 2
"""We were not able to finish the calculation with your preferred routing mode
on time, but we were able to return a result calculated by an alternative
mode.
"""

global___FallbackReason = FallbackReason


class _FallbackRoutingMode:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _FallbackRoutingModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FallbackRoutingMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    FALLBACK_ROUTING_MODE_UNSPECIFIED: FallbackRoutingMode.ValueType = ...  # 0
    """Not used."""

    FALLBACK_TRAFFIC_UNAWARE: FallbackRoutingMode.ValueType = ...  # 1
    """Indicates the "TRAFFIC_UNAWARE" routing mode was used to compute the
    response.
    """

    FALLBACK_TRAFFIC_AWARE: FallbackRoutingMode.ValueType = ...  # 2
    """Indicates the "TRAFFIC_AWARE" routing mode was used to compute the
    response.
    """

class FallbackRoutingMode(_FallbackRoutingMode, metaclass=_FallbackRoutingModeEnumTypeWrapper):
    """Actual routing mode used for returned fallback response."""
    pass

FALLBACK_ROUTING_MODE_UNSPECIFIED: FallbackRoutingMode.ValueType = ...  # 0
"""Not used."""

FALLBACK_TRAFFIC_UNAWARE: FallbackRoutingMode.ValueType = ...  # 1
"""Indicates the "TRAFFIC_UNAWARE" routing mode was used to compute the
response.
"""

FALLBACK_TRAFFIC_AWARE: FallbackRoutingMode.ValueType = ...  # 2
"""Indicates the "TRAFFIC_AWARE" routing mode was used to compute the
response.
"""

global___FallbackRoutingMode = FallbackRoutingMode


class FallbackInfo(google.protobuf.message.Message):
    """Information related to how and why a fallback result was used. If this field
    is set, then it means the server used a different routing mode from your
    preferred mode as fallback.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROUTING_MODE_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    routing_mode: global___FallbackRoutingMode.ValueType = ...
    """Routing mode used for the response. If fallback was triggered, the mode
    may be different from routing preference set in the original client
    request.
    """

    reason: global___FallbackReason.ValueType = ...
    """The reason why fallback response was used instead of the original response.
    This field is only populated when the fallback mode is triggered and the
    fallback response is returned.
    """

    def __init__(self,
        *,
        routing_mode : global___FallbackRoutingMode.ValueType = ...,
        reason : global___FallbackReason.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["reason",b"reason","routing_mode",b"routing_mode"]) -> None: ...
global___FallbackInfo = FallbackInfo
