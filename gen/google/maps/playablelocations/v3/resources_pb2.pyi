"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class PlayerReport(google.protobuf.message.Message):
    """A report submitted by a player about a playable location that is considered
    inappropriate for use in the game.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _BadLocationReason:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _BadLocationReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_BadLocationReason.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        BAD_LOCATION_REASON_UNSPECIFIED: PlayerReport.BadLocationReason.ValueType = ...  # 0
        """Unspecified reason. Do not use."""

        OTHER: PlayerReport.BadLocationReason.ValueType = ...  # 1
        """The reason isn't one of the reasons in this enumeration."""

        NOT_PEDESTRIAN_ACCESSIBLE: PlayerReport.BadLocationReason.ValueType = ...  # 2
        """The playable location isn't accessible to pedestrians. For example, if
        it's in the middle of a highway.
        """

        NOT_OPEN_TO_PUBLIC: PlayerReport.BadLocationReason.ValueType = ...  # 4
        """The playable location isn't open to the public. For example, a private
        office building.
        """

        PERMANENTLY_CLOSED: PlayerReport.BadLocationReason.ValueType = ...  # 5
        """The playable location is permanently closed. For example, when a business
        has been shut down.
        """

        TEMPORARILY_INACCESSIBLE: PlayerReport.BadLocationReason.ValueType = ...  # 6
        """The playable location is temporarily inaccessible. For example, when a
        business has closed for renovations.
        """

    class BadLocationReason(_BadLocationReason, metaclass=_BadLocationReasonEnumTypeWrapper):
        """The reason why the playable location is considered bad."""
        pass

    BAD_LOCATION_REASON_UNSPECIFIED: PlayerReport.BadLocationReason.ValueType = ...  # 0
    """Unspecified reason. Do not use."""

    OTHER: PlayerReport.BadLocationReason.ValueType = ...  # 1
    """The reason isn't one of the reasons in this enumeration."""

    NOT_PEDESTRIAN_ACCESSIBLE: PlayerReport.BadLocationReason.ValueType = ...  # 2
    """The playable location isn't accessible to pedestrians. For example, if
    it's in the middle of a highway.
    """

    NOT_OPEN_TO_PUBLIC: PlayerReport.BadLocationReason.ValueType = ...  # 4
    """The playable location isn't open to the public. For example, a private
    office building.
    """

    PERMANENTLY_CLOSED: PlayerReport.BadLocationReason.ValueType = ...  # 5
    """The playable location is permanently closed. For example, when a business
    has been shut down.
    """

    TEMPORARILY_INACCESSIBLE: PlayerReport.BadLocationReason.ValueType = ...  # 6
    """The playable location is temporarily inaccessible. For example, when a
    business has closed for renovations.
    """


    LOCATION_NAME_FIELD_NUMBER: builtins.int
    REASONS_FIELD_NUMBER: builtins.int
    REASON_DETAILS_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    location_name: typing.Text = ...
    """Required. The name of the playable location."""

    @property
    def reasons(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___PlayerReport.BadLocationReason.ValueType]:
        """Required. One or more reasons why this playable location is considered bad."""
        pass
    reason_details: typing.Text = ...
    """Required. A free-form description detailing why the playable location is
    considered bad.
    """

    language_code: typing.Text = ...
    """Language code (in BCP-47 format) indicating the language of the freeform
    description provided in `reason_details`. Examples are "en", "en-US" or
    "ja-Latn". For more information, see
    http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
    """

    def __init__(self,
        *,
        location_name : typing.Text = ...,
        reasons : typing.Optional[typing.Iterable[global___PlayerReport.BadLocationReason.ValueType]] = ...,
        reason_details : typing.Text = ...,
        language_code : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["language_code",b"language_code","location_name",b"location_name","reason_details",b"reason_details","reasons",b"reasons"]) -> None: ...
global___PlayerReport = PlayerReport

class Impression(google.protobuf.message.Message):
    """Encapsulates impression event details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ImpressionType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ImpressionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ImpressionType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        IMPRESSION_TYPE_UNSPECIFIED: Impression.ImpressionType.ValueType = ...  # 0
        """Unspecified type. Do not use."""

        PRESENTED: Impression.ImpressionType.ValueType = ...  # 1
        """The playable location was presented to a player."""

        INTERACTED: Impression.ImpressionType.ValueType = ...  # 2
        """A player interacted with the playable location."""

    class ImpressionType(_ImpressionType, metaclass=_ImpressionTypeEnumTypeWrapper):
        """The type of impression event."""
        pass

    IMPRESSION_TYPE_UNSPECIFIED: Impression.ImpressionType.ValueType = ...  # 0
    """Unspecified type. Do not use."""

    PRESENTED: Impression.ImpressionType.ValueType = ...  # 1
    """The playable location was presented to a player."""

    INTERACTED: Impression.ImpressionType.ValueType = ...  # 2
    """A player interacted with the playable location."""


    LOCATION_NAME_FIELD_NUMBER: builtins.int
    IMPRESSION_TYPE_FIELD_NUMBER: builtins.int
    GAME_OBJECT_TYPE_FIELD_NUMBER: builtins.int
    location_name: typing.Text = ...
    """Required. The name of the playable location."""

    impression_type: global___Impression.ImpressionType.ValueType = ...
    """Required. The type of impression event."""

    game_object_type: builtins.int = ...
    """An arbitrary, developer-defined type identifier for each type of game
    object used in your game.

    Since players interact with differ types of game objects in different ways,
    this field allows you to segregate impression data by type for analysis.

    You should assign a unique `game_object_type` ID to represent a distinct
    type of game object in your game.

    For example, 1=monster location, 2=powerup location.
    """

    def __init__(self,
        *,
        location_name : typing.Text = ...,
        impression_type : global___Impression.ImpressionType.ValueType = ...,
        game_object_type : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["game_object_type",b"game_object_type","impression_type",b"impression_type","location_name",b"location_name"]) -> None: ...
global___Impression = Impression
