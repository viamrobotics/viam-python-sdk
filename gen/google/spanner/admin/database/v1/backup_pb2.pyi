"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.longrunning.operations_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.spanner.admin.database.v1.common_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Backup(google.protobuf.message.Message):
    """A backup of a Cloud Spanner database."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Backup.State.ValueType = ...  # 0
        """Not specified."""

        CREATING: Backup.State.ValueType = ...  # 1
        """The pending backup is still being created. Operations on the
        backup may fail with `FAILED_PRECONDITION` in this state.
        """

        READY: Backup.State.ValueType = ...  # 2
        """The backup is complete and ready for use."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Indicates the current state of the backup."""
        pass

    STATE_UNSPECIFIED: Backup.State.ValueType = ...  # 0
    """Not specified."""

    CREATING: Backup.State.ValueType = ...  # 1
    """The pending backup is still being created. Operations on the
    backup may fail with `FAILED_PRECONDITION` in this state.
    """

    READY: Backup.State.ValueType = ...  # 2
    """The backup is complete and ready for use."""


    DATABASE_FIELD_NUMBER: builtins.int
    VERSION_TIME_FIELD_NUMBER: builtins.int
    EXPIRE_TIME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    SIZE_BYTES_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    REFERENCING_DATABASES_FIELD_NUMBER: builtins.int
    ENCRYPTION_INFO_FIELD_NUMBER: builtins.int
    database: typing.Text = ...
    """Required for the [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup] operation.
    Name of the database from which this backup was
    created. This needs to be in the same instance as the backup.
    Values are of the form
    `projects/<project>/instances/<instance>/databases/<database>`.
    """

    @property
    def version_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The backup will contain an externally consistent copy of the database at
        the timestamp specified by `version_time`. If `version_time` is not
        specified, the system will set `version_time` to the `create_time` of the
        backup.
        """
        pass
    @property
    def expire_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Required for the [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup]
        operation. The expiration time of the backup, with microseconds
        granularity that must be at least 6 hours and at most 366 days
        from the time the CreateBackup request is processed. Once the `expire_time`
        has passed, the backup is eligible to be automatically deleted by Cloud
        Spanner to free the resources used by the backup.
        """
        pass
    name: typing.Text = ...
    """Output only for the [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup] operation.
    Required for the [UpdateBackup][google.spanner.admin.database.v1.DatabaseAdmin.UpdateBackup] operation.

    A globally unique identifier for the backup which cannot be
    changed. Values are of the form
    `projects/<project>/instances/<instance>/backups/[a-z][a-z0-9_\\-]*[a-z0-9]`
    The final segment of the name must be between 2 and 60 characters
    in length.

    The backup is stored in the location(s) specified in the instance
    configuration of the instance containing the backup, identified
    by the prefix of the backup name of the form
    `projects/<project>/instances/<instance>`.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup]
        request is received. If the request does not specify `version_time`, the
        `version_time` of the backup will be equivalent to the `create_time`.
        """
        pass
    size_bytes: builtins.int = ...
    """Output only. Size of the backup in bytes."""

    state: global___Backup.State.ValueType = ...
    """Output only. The current state of the backup."""

    @property
    def referencing_databases(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Output only. The names of the restored databases that reference the backup.
        The database names are of
        the form `projects/<project>/instances/<instance>/databases/<database>`.
        Referencing databases may exist in different instances. The existence of
        any referencing database prevents the backup from being deleted. When a
        restored database from the backup enters the `READY` state, the reference
        to the backup is removed.
        """
        pass
    @property
    def encryption_info(self) -> google.spanner.admin.database.v1.common_pb2.EncryptionInfo:
        """Output only. The encryption information for the backup."""
        pass
    def __init__(self,
        *,
        database : typing.Text = ...,
        version_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        expire_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        size_bytes : builtins.int = ...,
        state : global___Backup.State.ValueType = ...,
        referencing_databases : typing.Optional[typing.Iterable[typing.Text]] = ...,
        encryption_info : typing.Optional[google.spanner.admin.database.v1.common_pb2.EncryptionInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","encryption_info",b"encryption_info","expire_time",b"expire_time","version_time",b"version_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","database",b"database","encryption_info",b"encryption_info","expire_time",b"expire_time","name",b"name","referencing_databases",b"referencing_databases","size_bytes",b"size_bytes","state",b"state","version_time",b"version_time"]) -> None: ...
global___Backup = Backup

class CreateBackupRequest(google.protobuf.message.Message):
    """The request for [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    BACKUP_ID_FIELD_NUMBER: builtins.int
    BACKUP_FIELD_NUMBER: builtins.int
    ENCRYPTION_CONFIG_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the instance in which the backup will be
    created. This must be the same instance that contains the database the
    backup will be created from. The backup will be stored in the
    location(s) specified in the instance configuration of this
    instance. Values are of the form
    `projects/<project>/instances/<instance>`.
    """

    backup_id: typing.Text = ...
    """Required. The id of the backup to be created. The `backup_id` appended to
    `parent` forms the full backup name of the form
    `projects/<project>/instances/<instance>/backups/<backup_id>`.
    """

    @property
    def backup(self) -> global___Backup:
        """Required. The backup to create."""
        pass
    @property
    def encryption_config(self) -> global___CreateBackupEncryptionConfig:
        """Optional. The encryption configuration used to encrypt the backup. If this field is
        not specified, the backup will use the same
        encryption configuration as the database by default, namely
        [encryption_type][google.spanner.admin.database.v1.CreateBackupEncryptionConfig.encryption_type] =
        `USE_DATABASE_ENCRYPTION`.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        backup_id : typing.Text = ...,
        backup : typing.Optional[global___Backup] = ...,
        encryption_config : typing.Optional[global___CreateBackupEncryptionConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["backup",b"backup","encryption_config",b"encryption_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup",b"backup","backup_id",b"backup_id","encryption_config",b"encryption_config","parent",b"parent"]) -> None: ...
global___CreateBackupRequest = CreateBackupRequest

class CreateBackupMetadata(google.protobuf.message.Message):
    """Metadata type for the operation returned by
    [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    PROGRESS_FIELD_NUMBER: builtins.int
    CANCEL_TIME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the backup being created."""

    database: typing.Text = ...
    """The name of the database the backup is created from."""

    @property
    def progress(self) -> google.spanner.admin.database.v1.common_pb2.OperationProgress:
        """The progress of the
        [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup] operation.
        """
        pass
    @property
    def cancel_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which cancellation of this operation was received.
        [Operations.CancelOperation][google.longrunning.Operations.CancelOperation]
        starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not guaranteed.
        Clients can use
        [Operations.GetOperation][google.longrunning.Operations.GetOperation] or
        other methods to check whether the cancellation succeeded or whether the
        operation completed despite cancellation. On successful cancellation,
        the operation is not deleted; instead, it becomes an operation with
        an [Operation.error][google.longrunning.Operation.error] value with a
        [google.rpc.Status.code][google.rpc.Status.code] of 1,
        corresponding to `Code.CANCELLED`.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        database : typing.Text = ...,
        progress : typing.Optional[google.spanner.admin.database.v1.common_pb2.OperationProgress] = ...,
        cancel_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cancel_time",b"cancel_time","progress",b"progress"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cancel_time",b"cancel_time","database",b"database","name",b"name","progress",b"progress"]) -> None: ...
global___CreateBackupMetadata = CreateBackupMetadata

class UpdateBackupRequest(google.protobuf.message.Message):
    """The request for [UpdateBackup][google.spanner.admin.database.v1.DatabaseAdmin.UpdateBackup]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKUP_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def backup(self) -> global___Backup:
        """Required. The backup to update. `backup.name`, and the fields to be updated
        as specified by `update_mask` are required. Other fields are ignored.
        Update is only supported for the following fields:
         * `backup.expire_time`.
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. A mask specifying which fields (e.g. `expire_time`) in the
        Backup resource should be updated. This mask is relative to the Backup
        resource, not to the request message. The field mask must always be
        specified; this prevents any future fields from being erased accidentally
        by clients that do not know about them.
        """
        pass
    def __init__(self,
        *,
        backup : typing.Optional[global___Backup] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["backup",b"backup","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup",b"backup","update_mask",b"update_mask"]) -> None: ...
global___UpdateBackupRequest = UpdateBackupRequest

class GetBackupRequest(google.protobuf.message.Message):
    """The request for [GetBackup][google.spanner.admin.database.v1.DatabaseAdmin.GetBackup]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the backup.
    Values are of the form
    `projects/<project>/instances/<instance>/backups/<backup>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetBackupRequest = GetBackupRequest

class DeleteBackupRequest(google.protobuf.message.Message):
    """The request for [DeleteBackup][google.spanner.admin.database.v1.DatabaseAdmin.DeleteBackup]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the backup to delete.
    Values are of the form
    `projects/<project>/instances/<instance>/backups/<backup>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteBackupRequest = DeleteBackupRequest

class ListBackupsRequest(google.protobuf.message.Message):
    """The request for [ListBackups][google.spanner.admin.database.v1.DatabaseAdmin.ListBackups]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The instance to list backups from.  Values are of the
    form `projects/<project>/instances/<instance>`.
    """

    filter: typing.Text = ...
    """An expression that filters the list of returned backups.

    A filter expression consists of a field name, a comparison operator, and a
    value for filtering.
    The value must be a string, a number, or a boolean. The comparison operator
    must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`.
    Colon `:` is the contains operator. Filter rules are not case sensitive.

    The following fields in the [Backup][google.spanner.admin.database.v1.Backup] are eligible for filtering:

      * `name`
      * `database`
      * `state`
      * `create_time`  (and values are of the format YYYY-MM-DDTHH:MM:SSZ)
      * `expire_time`  (and values are of the format YYYY-MM-DDTHH:MM:SSZ)
      * `version_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ)
      * `size_bytes`

    You can combine multiple expressions by enclosing each expression in
    parentheses. By default, expressions are combined with AND logic, but
    you can specify AND, OR, and NOT logic explicitly.

    Here are a few examples:

      * `name:Howl` - The backup's name contains the string "howl".
      * `database:prod`
             - The database's name contains the string "prod".
      * `state:CREATING` - The backup is pending creation.
      * `state:READY` - The backup is fully created and ready for use.
      * `(name:howl) AND (create_time < \\"2018-03-28T14:50:00Z\\")`
             - The backup name contains the string "howl" and `create_time`
                 of the backup is before 2018-03-28T14:50:00Z.
      * `expire_time < \\"2018-03-28T14:50:00Z\\"`
             - The backup `expire_time` is before 2018-03-28T14:50:00Z.
      * `size_bytes > 10000000000` - The backup's size is greater than 10GB
    """

    page_size: builtins.int = ...
    """Number of backups to be returned in the response. If 0 or
    less, defaults to the server's maximum allowed page size.
    """

    page_token: typing.Text = ...
    """If non-empty, `page_token` should contain a
    [next_page_token][google.spanner.admin.database.v1.ListBackupsResponse.next_page_token] from a
    previous [ListBackupsResponse][google.spanner.admin.database.v1.ListBackupsResponse] to the same `parent` and with the same
    `filter`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListBackupsRequest = ListBackupsRequest

class ListBackupsResponse(google.protobuf.message.Message):
    """The response for [ListBackups][google.spanner.admin.database.v1.DatabaseAdmin.ListBackups]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKUPS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def backups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Backup]:
        """The list of matching backups. Backups returned are ordered by `create_time`
        in descending order, starting from the most recent `create_time`.
        """
        pass
    next_page_token: typing.Text = ...
    """`next_page_token` can be sent in a subsequent
    [ListBackups][google.spanner.admin.database.v1.DatabaseAdmin.ListBackups] call to fetch more
    of the matching backups.
    """

    def __init__(self,
        *,
        backups : typing.Optional[typing.Iterable[global___Backup]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backups",b"backups","next_page_token",b"next_page_token"]) -> None: ...
global___ListBackupsResponse = ListBackupsResponse

class ListBackupOperationsRequest(google.protobuf.message.Message):
    """The request for
    [ListBackupOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListBackupOperations].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The instance of the backup operations. Values are of
    the form `projects/<project>/instances/<instance>`.
    """

    filter: typing.Text = ...
    """An expression that filters the list of returned backup operations.

    A filter expression consists of a field name, a
    comparison operator, and a value for filtering.
    The value must be a string, a number, or a boolean. The comparison operator
    must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`.
    Colon `:` is the contains operator. Filter rules are not case sensitive.

    The following fields in the [operation][google.longrunning.Operation]
    are eligible for filtering:

      * `name` - The name of the long-running operation
      * `done` - False if the operation is in progress, else true.
      * `metadata.@type` - the type of metadata. For example, the type string
         for [CreateBackupMetadata][google.spanner.admin.database.v1.CreateBackupMetadata] is
         `type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata`.
      * `metadata.<field_name>` - any field in metadata.value.
      * `error` - Error associated with the long-running operation.
      * `response.@type` - the type of response.
      * `response.<field_name>` - any field in response.value.

    You can combine multiple expressions by enclosing each expression in
    parentheses. By default, expressions are combined with AND logic, but
    you can specify AND, OR, and NOT logic explicitly.

    Here are a few examples:

      * `done:true` - The operation is complete.
      * `metadata.database:prod` - The database the backup was taken from has
         a name containing the string "prod".
      * `(metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.CreateBackupMetadata) AND` \\
        `(metadata.name:howl) AND` \\
        `(metadata.progress.start_time < \\"2018-03-28T14:50:00Z\\") AND` \\
        `(error:*)` - Returns operations where:
        * The operation's metadata type is [CreateBackupMetadata][google.spanner.admin.database.v1.CreateBackupMetadata].
        * The backup name contains the string "howl".
        * The operation started before 2018-03-28T14:50:00Z.
        * The operation resulted in an error.
    """

    page_size: builtins.int = ...
    """Number of operations to be returned in the response. If 0 or
    less, defaults to the server's maximum allowed page size.
    """

    page_token: typing.Text = ...
    """If non-empty, `page_token` should contain a
    [next_page_token][google.spanner.admin.database.v1.ListBackupOperationsResponse.next_page_token]
    from a previous [ListBackupOperationsResponse][google.spanner.admin.database.v1.ListBackupOperationsResponse] to the
    same `parent` and with the same `filter`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListBackupOperationsRequest = ListBackupOperationsRequest

class ListBackupOperationsResponse(google.protobuf.message.Message):
    """The response for
    [ListBackupOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListBackupOperations].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.longrunning.operations_pb2.Operation]:
        """The list of matching backup [long-running
        operations][google.longrunning.Operation]. Each operation's name will be
        prefixed by the backup's name and the operation's
        [metadata][google.longrunning.Operation.metadata] will be of type
        [CreateBackupMetadata][google.spanner.admin.database.v1.CreateBackupMetadata]. Operations returned include those that are
        pending or have completed/failed/canceled within the last 7 days.
        Operations returned are ordered by
        `operation.metadata.value.progress.start_time` in descending order starting
        from the most recently started operation.
        """
        pass
    next_page_token: typing.Text = ...
    """`next_page_token` can be sent in a subsequent
    [ListBackupOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListBackupOperations]
    call to fetch more of the matching metadata.
    """

    def __init__(self,
        *,
        operations : typing.Optional[typing.Iterable[google.longrunning.operations_pb2.Operation]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","operations",b"operations"]) -> None: ...
global___ListBackupOperationsResponse = ListBackupOperationsResponse

class BackupInfo(google.protobuf.message.Message):
    """Information about a backup."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKUP_FIELD_NUMBER: builtins.int
    VERSION_TIME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    SOURCE_DATABASE_FIELD_NUMBER: builtins.int
    backup: typing.Text = ...
    """Name of the backup."""

    @property
    def version_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The backup contains an externally consistent copy of `source_database` at
        the timestamp specified by `version_time`. If the
        [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup] request did not specify
        `version_time`, the `version_time` of the backup is equivalent to the
        `create_time`.
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the [CreateBackup][google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup] request was
        received.
        """
        pass
    source_database: typing.Text = ...
    """Name of the database the backup was created from."""

    def __init__(self,
        *,
        backup : typing.Text = ...,
        version_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        source_database : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","version_time",b"version_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup",b"backup","create_time",b"create_time","source_database",b"source_database","version_time",b"version_time"]) -> None: ...
global___BackupInfo = BackupInfo

class CreateBackupEncryptionConfig(google.protobuf.message.Message):
    """Encryption configuration for the backup to create."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EncryptionType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EncryptionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EncryptionType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ENCRYPTION_TYPE_UNSPECIFIED: CreateBackupEncryptionConfig.EncryptionType.ValueType = ...  # 0
        """Unspecified. Do not use."""

        USE_DATABASE_ENCRYPTION: CreateBackupEncryptionConfig.EncryptionType.ValueType = ...  # 1
        """Use the same encryption configuration as the database. This is the
        default option when
        [encryption_config][google.spanner.admin.database.v1.CreateBackupEncryptionConfig] is empty.
        For example, if the database is using `Customer_Managed_Encryption`, the
        backup will be using the same Cloud KMS key as the database.
        """

        GOOGLE_DEFAULT_ENCRYPTION: CreateBackupEncryptionConfig.EncryptionType.ValueType = ...  # 2
        """Use Google default encryption."""

        CUSTOMER_MANAGED_ENCRYPTION: CreateBackupEncryptionConfig.EncryptionType.ValueType = ...  # 3
        """Use customer managed encryption. If specified, `kms_key_name`
        must contain a valid Cloud KMS key.
        """

    class EncryptionType(_EncryptionType, metaclass=_EncryptionTypeEnumTypeWrapper):
        """Encryption types for the backup."""
        pass

    ENCRYPTION_TYPE_UNSPECIFIED: CreateBackupEncryptionConfig.EncryptionType.ValueType = ...  # 0
    """Unspecified. Do not use."""

    USE_DATABASE_ENCRYPTION: CreateBackupEncryptionConfig.EncryptionType.ValueType = ...  # 1
    """Use the same encryption configuration as the database. This is the
    default option when
    [encryption_config][google.spanner.admin.database.v1.CreateBackupEncryptionConfig] is empty.
    For example, if the database is using `Customer_Managed_Encryption`, the
    backup will be using the same Cloud KMS key as the database.
    """

    GOOGLE_DEFAULT_ENCRYPTION: CreateBackupEncryptionConfig.EncryptionType.ValueType = ...  # 2
    """Use Google default encryption."""

    CUSTOMER_MANAGED_ENCRYPTION: CreateBackupEncryptionConfig.EncryptionType.ValueType = ...  # 3
    """Use customer managed encryption. If specified, `kms_key_name`
    must contain a valid Cloud KMS key.
    """


    ENCRYPTION_TYPE_FIELD_NUMBER: builtins.int
    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    encryption_type: global___CreateBackupEncryptionConfig.EncryptionType.ValueType = ...
    """Required. The encryption type of the backup."""

    kms_key_name: typing.Text = ...
    """Optional. The Cloud KMS key that will be used to protect the backup.
    This field should be set only when
    [encryption_type][google.spanner.admin.database.v1.CreateBackupEncryptionConfig.encryption_type] is
    `CUSTOMER_MANAGED_ENCRYPTION`. Values are of the form
    `projects/<project>/locations/<location>/keyRings/<key_ring>/cryptoKeys/<kms_key_name>`.
    """

    def __init__(self,
        *,
        encryption_type : global___CreateBackupEncryptionConfig.EncryptionType.ValueType = ...,
        kms_key_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["encryption_type",b"encryption_type","kms_key_name",b"kms_key_name"]) -> None: ...
global___CreateBackupEncryptionConfig = CreateBackupEncryptionConfig
