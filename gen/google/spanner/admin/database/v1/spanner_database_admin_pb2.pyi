"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.longrunning.operations_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.spanner.admin.database.v1.backup_pb2
import google.spanner.admin.database.v1.common_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _RestoreSourceType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _RestoreSourceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RestoreSourceType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TYPE_UNSPECIFIED: RestoreSourceType.ValueType = ...  # 0
    """No restore associated."""

    BACKUP: RestoreSourceType.ValueType = ...  # 1
    """A backup was used as the source of the restore."""

class RestoreSourceType(_RestoreSourceType, metaclass=_RestoreSourceTypeEnumTypeWrapper):
    """Indicates the type of the restore source."""
    pass

TYPE_UNSPECIFIED: RestoreSourceType.ValueType = ...  # 0
"""No restore associated."""

BACKUP: RestoreSourceType.ValueType = ...  # 1
"""A backup was used as the source of the restore."""

global___RestoreSourceType = RestoreSourceType


class RestoreInfo(google.protobuf.message.Message):
    """Information about the database restore."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOURCE_TYPE_FIELD_NUMBER: builtins.int
    BACKUP_INFO_FIELD_NUMBER: builtins.int
    source_type: global___RestoreSourceType.ValueType = ...
    """The type of the restore source."""

    @property
    def backup_info(self) -> google.spanner.admin.database.v1.backup_pb2.BackupInfo:
        """Information about the backup used to restore the database. The backup
        may no longer exist.
        """
        pass
    def __init__(self,
        *,
        source_type : global___RestoreSourceType.ValueType = ...,
        backup_info : typing.Optional[google.spanner.admin.database.v1.backup_pb2.BackupInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["backup_info",b"backup_info","source_info",b"source_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_info",b"backup_info","source_info",b"source_info","source_type",b"source_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["source_info",b"source_info"]) -> typing.Optional[typing_extensions.Literal["backup_info"]]: ...
global___RestoreInfo = RestoreInfo

class Database(google.protobuf.message.Message):
    """A Cloud Spanner database."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Database.State.ValueType = ...  # 0
        """Not specified."""

        CREATING: Database.State.ValueType = ...  # 1
        """The database is still being created. Operations on the database may fail
        with `FAILED_PRECONDITION` in this state.
        """

        READY: Database.State.ValueType = ...  # 2
        """The database is fully created and ready for use."""

        READY_OPTIMIZING: Database.State.ValueType = ...  # 3
        """The database is fully created and ready for use, but is still
        being optimized for performance and cannot handle full load.

        In this state, the database still references the backup
        it was restore from, preventing the backup
        from being deleted. When optimizations are complete, the full performance
        of the database will be restored, and the database will transition to
        `READY` state.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Indicates the current state of the database."""
        pass

    STATE_UNSPECIFIED: Database.State.ValueType = ...  # 0
    """Not specified."""

    CREATING: Database.State.ValueType = ...  # 1
    """The database is still being created. Operations on the database may fail
    with `FAILED_PRECONDITION` in this state.
    """

    READY: Database.State.ValueType = ...  # 2
    """The database is fully created and ready for use."""

    READY_OPTIMIZING: Database.State.ValueType = ...  # 3
    """The database is fully created and ready for use, but is still
    being optimized for performance and cannot handle full load.

    In this state, the database still references the backup
    it was restore from, preventing the backup
    from being deleted. When optimizations are complete, the full performance
    of the database will be restored, and the database will transition to
    `READY` state.
    """


    NAME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    RESTORE_INFO_FIELD_NUMBER: builtins.int
    ENCRYPTION_CONFIG_FIELD_NUMBER: builtins.int
    ENCRYPTION_INFO_FIELD_NUMBER: builtins.int
    VERSION_RETENTION_PERIOD_FIELD_NUMBER: builtins.int
    EARLIEST_VERSION_TIME_FIELD_NUMBER: builtins.int
    DEFAULT_LEADER_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the database. Values are of the form
    `projects/<project>/instances/<instance>/databases/<database>`,
    where `<database>` is as specified in the `CREATE DATABASE`
    statement. This name can be passed to other API methods to
    identify the database.
    """

    state: global___Database.State.ValueType = ...
    """Output only. The current database state."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. If exists, the time at which the database creation started."""
        pass
    @property
    def restore_info(self) -> global___RestoreInfo:
        """Output only. Applicable only for restored databases. Contains information
        about the restore source.
        """
        pass
    @property
    def encryption_config(self) -> google.spanner.admin.database.v1.common_pb2.EncryptionConfig:
        """Output only. For databases that are using customer managed encryption, this
        field contains the encryption configuration for the database.
        For databases that are using Google default or other types of encryption,
        this field is empty.
        """
        pass
    @property
    def encryption_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.spanner.admin.database.v1.common_pb2.EncryptionInfo]:
        """Output only. For databases that are using customer managed encryption, this
        field contains the encryption information for the database, such as
        encryption state and the Cloud KMS key versions that are in use.

        For databases that are using Google default or other types of encryption,
        this field is empty.

        This field is propagated lazily from the backend. There might be a delay
        from when a key version is being used and when it appears in this field.
        """
        pass
    version_retention_period: typing.Text = ...
    """Output only. The period in which Cloud Spanner retains all versions of data
    for the database. This is the same as the value of version_retention_period
    database option set using
    [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl]. Defaults to 1 hour,
    if not set.
    """

    @property
    def earliest_version_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Earliest timestamp at which older versions of the data can be
        read. This value is continuously updated by Cloud Spanner and becomes stale
        the moment it is queried. If you are using this value to recover data, make
        sure to account for the time from the moment when the value is queried to
        the moment when you initiate the recovery.
        """
        pass
    default_leader: typing.Text = ...
    """Output only. The read-write region which contains the database's leader
    replicas.

    This is the same as the value of default_leader
    database option set using DatabaseAdmin.CreateDatabase or
    DatabaseAdmin.UpdateDatabaseDdl. If not explicitly set, this is empty.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        state : global___Database.State.ValueType = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        restore_info : typing.Optional[global___RestoreInfo] = ...,
        encryption_config : typing.Optional[google.spanner.admin.database.v1.common_pb2.EncryptionConfig] = ...,
        encryption_info : typing.Optional[typing.Iterable[google.spanner.admin.database.v1.common_pb2.EncryptionInfo]] = ...,
        version_retention_period : typing.Text = ...,
        earliest_version_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        default_leader : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","earliest_version_time",b"earliest_version_time","encryption_config",b"encryption_config","restore_info",b"restore_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","default_leader",b"default_leader","earliest_version_time",b"earliest_version_time","encryption_config",b"encryption_config","encryption_info",b"encryption_info","name",b"name","restore_info",b"restore_info","state",b"state","version_retention_period",b"version_retention_period"]) -> None: ...
global___Database = Database

class ListDatabasesRequest(google.protobuf.message.Message):
    """The request for [ListDatabases][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabases]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The instance whose databases should be listed.
    Values are of the form `projects/<project>/instances/<instance>`.
    """

    page_size: builtins.int = ...
    """Number of databases to be returned in the response. If 0 or less,
    defaults to the server's maximum allowed page size.
    """

    page_token: typing.Text = ...
    """If non-empty, `page_token` should contain a
    [next_page_token][google.spanner.admin.database.v1.ListDatabasesResponse.next_page_token] from a
    previous [ListDatabasesResponse][google.spanner.admin.database.v1.ListDatabasesResponse].
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListDatabasesRequest = ListDatabasesRequest

class ListDatabasesResponse(google.protobuf.message.Message):
    """The response for [ListDatabases][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabases]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATABASES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def databases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Database]:
        """Databases that matched the request."""
        pass
    next_page_token: typing.Text = ...
    """`next_page_token` can be sent in a subsequent
    [ListDatabases][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabases] call to fetch more
    of the matching databases.
    """

    def __init__(self,
        *,
        databases : typing.Optional[typing.Iterable[global___Database]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["databases",b"databases","next_page_token",b"next_page_token"]) -> None: ...
global___ListDatabasesResponse = ListDatabasesResponse

class CreateDatabaseRequest(google.protobuf.message.Message):
    """The request for [CreateDatabase][google.spanner.admin.database.v1.DatabaseAdmin.CreateDatabase]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    CREATE_STATEMENT_FIELD_NUMBER: builtins.int
    EXTRA_STATEMENTS_FIELD_NUMBER: builtins.int
    ENCRYPTION_CONFIG_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the instance that will serve the new database.
    Values are of the form `projects/<project>/instances/<instance>`.
    """

    create_statement: typing.Text = ...
    """Required. A `CREATE DATABASE` statement, which specifies the ID of the
    new database.  The database ID must conform to the regular expression
    `[a-z][a-z0-9_\\-]*[a-z0-9]` and be between 2 and 30 characters in length.
    If the database ID is a reserved word or if it contains a hyphen, the
    database ID must be enclosed in backticks (`` ` ``).
    """

    @property
    def extra_statements(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. A list of DDL statements to run inside the newly created
        database. Statements can create tables, indexes, etc. These
        statements execute atomically with the creation of the database:
        if there is an error in any statement, the database is not created.
        """
        pass
    @property
    def encryption_config(self) -> google.spanner.admin.database.v1.common_pb2.EncryptionConfig:
        """Optional. The encryption configuration for the database. If this field is not
        specified, Cloud Spanner will encrypt/decrypt all data at rest using
        Google default encryption.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        create_statement : typing.Text = ...,
        extra_statements : typing.Optional[typing.Iterable[typing.Text]] = ...,
        encryption_config : typing.Optional[google.spanner.admin.database.v1.common_pb2.EncryptionConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["encryption_config",b"encryption_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_statement",b"create_statement","encryption_config",b"encryption_config","extra_statements",b"extra_statements","parent",b"parent"]) -> None: ...
global___CreateDatabaseRequest = CreateDatabaseRequest

class CreateDatabaseMetadata(google.protobuf.message.Message):
    """Metadata type for the operation returned by
    [CreateDatabase][google.spanner.admin.database.v1.DatabaseAdmin.CreateDatabase].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATABASE_FIELD_NUMBER: builtins.int
    database: typing.Text = ...
    """The database being created."""

    def __init__(self,
        *,
        database : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["database",b"database"]) -> None: ...
global___CreateDatabaseMetadata = CreateDatabaseMetadata

class GetDatabaseRequest(google.protobuf.message.Message):
    """The request for [GetDatabase][google.spanner.admin.database.v1.DatabaseAdmin.GetDatabase]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the requested database. Values are of the form
    `projects/<project>/instances/<instance>/databases/<database>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetDatabaseRequest = GetDatabaseRequest

class UpdateDatabaseDdlRequest(google.protobuf.message.Message):
    """Enqueues the given DDL statements to be applied, in order but not
    necessarily all at once, to the database schema at some point (or
    points) in the future. The server checks that the statements
    are executable (syntactically valid, name tables that exist, etc.)
    before enqueueing them, but they may still fail upon
    later execution (e.g., if a statement from another batch of
    statements is applied first and it conflicts in some way, or if
    there is some data-related problem like a `NULL` value in a column to
    which `NOT NULL` would be added). If a statement fails, all
    subsequent statements in the batch are automatically cancelled.

    Each batch of statements is assigned a name which can be used with
    the [Operations][google.longrunning.Operations] API to monitor
    progress. See the
    [operation_id][google.spanner.admin.database.v1.UpdateDatabaseDdlRequest.operation_id] field for more
    details.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATABASE_FIELD_NUMBER: builtins.int
    STATEMENTS_FIELD_NUMBER: builtins.int
    OPERATION_ID_FIELD_NUMBER: builtins.int
    database: typing.Text = ...
    """Required. The database to update."""

    @property
    def statements(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. DDL statements to be applied to the database."""
        pass
    operation_id: typing.Text = ...
    """If empty, the new update request is assigned an
    automatically-generated operation ID. Otherwise, `operation_id`
    is used to construct the name of the resulting
    [Operation][google.longrunning.Operation].

    Specifying an explicit operation ID simplifies determining
    whether the statements were executed in the event that the
    [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl] call is replayed,
    or the return value is otherwise lost: the [database][google.spanner.admin.database.v1.UpdateDatabaseDdlRequest.database] and
    `operation_id` fields can be combined to form the
    [name][google.longrunning.Operation.name] of the resulting
    [longrunning.Operation][google.longrunning.Operation]: `<database>/operations/<operation_id>`.

    `operation_id` should be unique within the database, and must be
    a valid identifier: `[a-z][a-z0-9_]*`. Note that
    automatically-generated operation IDs always begin with an
    underscore. If the named operation already exists,
    [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl] returns
    `ALREADY_EXISTS`.
    """

    def __init__(self,
        *,
        database : typing.Text = ...,
        statements : typing.Optional[typing.Iterable[typing.Text]] = ...,
        operation_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["database",b"database","operation_id",b"operation_id","statements",b"statements"]) -> None: ...
global___UpdateDatabaseDdlRequest = UpdateDatabaseDdlRequest

class UpdateDatabaseDdlMetadata(google.protobuf.message.Message):
    """Metadata type for the operation returned by
    [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATABASE_FIELD_NUMBER: builtins.int
    STATEMENTS_FIELD_NUMBER: builtins.int
    COMMIT_TIMESTAMPS_FIELD_NUMBER: builtins.int
    THROTTLED_FIELD_NUMBER: builtins.int
    PROGRESS_FIELD_NUMBER: builtins.int
    database: typing.Text = ...
    """The database being modified."""

    @property
    def statements(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """For an update this list contains all the statements. For an
        individual statement, this list contains only that statement.
        """
        pass
    @property
    def commit_timestamps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.timestamp_pb2.Timestamp]:
        """Reports the commit timestamps of all statements that have
        succeeded so far, where `commit_timestamps[i]` is the commit
        timestamp for the statement `statements[i]`.
        """
        pass
    throttled: builtins.bool = ...
    """Output only. When true, indicates that the operation is throttled e.g
    due to resource constraints. When resources become available the operation
    will resume and this field will be false again.
    """

    @property
    def progress(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.spanner.admin.database.v1.common_pb2.OperationProgress]:
        """The progress of the
        [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl] operations.
        Currently, only index creation statements will have a continuously
        updating progress.
        For non-index creation statements, `progress[i]` will have start time
        and end time populated with commit timestamp of operation,
        as well as a progress of 100% once the operation has completed.
        `progress[i]` is the operation progress for `statements[i]`.
        """
        pass
    def __init__(self,
        *,
        database : typing.Text = ...,
        statements : typing.Optional[typing.Iterable[typing.Text]] = ...,
        commit_timestamps : typing.Optional[typing.Iterable[google.protobuf.timestamp_pb2.Timestamp]] = ...,
        throttled : builtins.bool = ...,
        progress : typing.Optional[typing.Iterable[google.spanner.admin.database.v1.common_pb2.OperationProgress]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit_timestamps",b"commit_timestamps","database",b"database","progress",b"progress","statements",b"statements","throttled",b"throttled"]) -> None: ...
global___UpdateDatabaseDdlMetadata = UpdateDatabaseDdlMetadata

class DropDatabaseRequest(google.protobuf.message.Message):
    """The request for [DropDatabase][google.spanner.admin.database.v1.DatabaseAdmin.DropDatabase]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATABASE_FIELD_NUMBER: builtins.int
    database: typing.Text = ...
    """Required. The database to be dropped."""

    def __init__(self,
        *,
        database : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["database",b"database"]) -> None: ...
global___DropDatabaseRequest = DropDatabaseRequest

class GetDatabaseDdlRequest(google.protobuf.message.Message):
    """The request for [GetDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.GetDatabaseDdl]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATABASE_FIELD_NUMBER: builtins.int
    database: typing.Text = ...
    """Required. The database whose schema we wish to get.
    Values are of the form
    `projects/<project>/instances/<instance>/databases/<database>`
    """

    def __init__(self,
        *,
        database : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["database",b"database"]) -> None: ...
global___GetDatabaseDdlRequest = GetDatabaseDdlRequest

class GetDatabaseDdlResponse(google.protobuf.message.Message):
    """The response for [GetDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.GetDatabaseDdl]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATEMENTS_FIELD_NUMBER: builtins.int
    @property
    def statements(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of formatted DDL statements defining the schema of the database
        specified in the request.
        """
        pass
    def __init__(self,
        *,
        statements : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["statements",b"statements"]) -> None: ...
global___GetDatabaseDdlResponse = GetDatabaseDdlResponse

class ListDatabaseOperationsRequest(google.protobuf.message.Message):
    """The request for
    [ListDatabaseOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabaseOperations].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The instance of the database operations.
    Values are of the form `projects/<project>/instances/<instance>`.
    """

    filter: typing.Text = ...
    """An expression that filters the list of returned operations.

    A filter expression consists of a field name, a
    comparison operator, and a value for filtering.
    The value must be a string, a number, or a boolean. The comparison operator
    must be one of: `<`, `>`, `<=`, `>=`, `!=`, `=`, or `:`.
    Colon `:` is the contains operator. Filter rules are not case sensitive.

    The following fields in the [Operation][google.longrunning.Operation]
    are eligible for filtering:

      * `name` - The name of the long-running operation
      * `done` - False if the operation is in progress, else true.
      * `metadata.@type` - the type of metadata. For example, the type string
         for [RestoreDatabaseMetadata][google.spanner.admin.database.v1.RestoreDatabaseMetadata] is
         `type.googleapis.com/google.spanner.admin.database.v1.RestoreDatabaseMetadata`.
      * `metadata.<field_name>` - any field in metadata.value.
      * `error` - Error associated with the long-running operation.
      * `response.@type` - the type of response.
      * `response.<field_name>` - any field in response.value.

    You can combine multiple expressions by enclosing each expression in
    parentheses. By default, expressions are combined with AND logic. However,
    you can specify AND, OR, and NOT logic explicitly.

    Here are a few examples:

      * `done:true` - The operation is complete.
      * `(metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.RestoreDatabaseMetadata) AND` \\
        `(metadata.source_type:BACKUP) AND` \\
        `(metadata.backup_info.backup:backup_howl) AND` \\
        `(metadata.name:restored_howl) AND` \\
        `(metadata.progress.start_time < \\"2018-03-28T14:50:00Z\\") AND` \\
        `(error:*)` - Return operations where:
        * The operation's metadata type is [RestoreDatabaseMetadata][google.spanner.admin.database.v1.RestoreDatabaseMetadata].
        * The database is restored from a backup.
        * The backup name contains "backup_howl".
        * The restored database's name contains "restored_howl".
        * The operation started before 2018-03-28T14:50:00Z.
        * The operation resulted in an error.
    """

    page_size: builtins.int = ...
    """Number of operations to be returned in the response. If 0 or
    less, defaults to the server's maximum allowed page size.
    """

    page_token: typing.Text = ...
    """If non-empty, `page_token` should contain a
    [next_page_token][google.spanner.admin.database.v1.ListDatabaseOperationsResponse.next_page_token]
    from a previous [ListDatabaseOperationsResponse][google.spanner.admin.database.v1.ListDatabaseOperationsResponse] to the
    same `parent` and with the same `filter`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListDatabaseOperationsRequest = ListDatabaseOperationsRequest

class ListDatabaseOperationsResponse(google.protobuf.message.Message):
    """The response for
    [ListDatabaseOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabaseOperations].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.longrunning.operations_pb2.Operation]:
        """The list of matching database [long-running
        operations][google.longrunning.Operation]. Each operation's name will be
        prefixed by the database's name. The operation's
        [metadata][google.longrunning.Operation.metadata] field type
        `metadata.type_url` describes the type of the metadata.
        """
        pass
    next_page_token: typing.Text = ...
    """`next_page_token` can be sent in a subsequent
    [ListDatabaseOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabaseOperations]
    call to fetch more of the matching metadata.
    """

    def __init__(self,
        *,
        operations : typing.Optional[typing.Iterable[google.longrunning.operations_pb2.Operation]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","operations",b"operations"]) -> None: ...
global___ListDatabaseOperationsResponse = ListDatabaseOperationsResponse

class RestoreDatabaseRequest(google.protobuf.message.Message):
    """The request for
    [RestoreDatabase][google.spanner.admin.database.v1.DatabaseAdmin.RestoreDatabase].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    DATABASE_ID_FIELD_NUMBER: builtins.int
    BACKUP_FIELD_NUMBER: builtins.int
    ENCRYPTION_CONFIG_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the instance in which to create the
    restored database. This instance must be in the same project and
    have the same instance configuration as the instance containing
    the source backup. Values are of the form
    `projects/<project>/instances/<instance>`.
    """

    database_id: typing.Text = ...
    """Required. The id of the database to create and restore to. This
    database must not already exist. The `database_id` appended to
    `parent` forms the full database name of the form
    `projects/<project>/instances/<instance>/databases/<database_id>`.
    """

    backup: typing.Text = ...
    """Name of the backup from which to restore.  Values are of the form
    `projects/<project>/instances/<instance>/backups/<backup>`.
    """

    @property
    def encryption_config(self) -> global___RestoreDatabaseEncryptionConfig:
        """Optional. An encryption configuration describing the encryption type and key
        resources in Cloud KMS used to encrypt/decrypt the database to restore to.
        If this field is not specified, the restored database will use
        the same encryption configuration as the backup by default, namely
        [encryption_type][google.spanner.admin.database.v1.RestoreDatabaseEncryptionConfig.encryption_type] =
        `USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION`.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        database_id : typing.Text = ...,
        backup : typing.Text = ...,
        encryption_config : typing.Optional[global___RestoreDatabaseEncryptionConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["backup",b"backup","encryption_config",b"encryption_config","source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup",b"backup","database_id",b"database_id","encryption_config",b"encryption_config","parent",b"parent","source",b"source"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["source",b"source"]) -> typing.Optional[typing_extensions.Literal["backup"]]: ...
global___RestoreDatabaseRequest = RestoreDatabaseRequest

class RestoreDatabaseEncryptionConfig(google.protobuf.message.Message):
    """Encryption configuration for the restored database."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EncryptionType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EncryptionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EncryptionType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ENCRYPTION_TYPE_UNSPECIFIED: RestoreDatabaseEncryptionConfig.EncryptionType.ValueType = ...  # 0
        """Unspecified. Do not use."""

        USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION: RestoreDatabaseEncryptionConfig.EncryptionType.ValueType = ...  # 1
        """This is the default option when
        [encryption_config][google.spanner.admin.database.v1.RestoreDatabaseEncryptionConfig] is not specified.
        """

        GOOGLE_DEFAULT_ENCRYPTION: RestoreDatabaseEncryptionConfig.EncryptionType.ValueType = ...  # 2
        """Use Google default encryption."""

        CUSTOMER_MANAGED_ENCRYPTION: RestoreDatabaseEncryptionConfig.EncryptionType.ValueType = ...  # 3
        """Use customer managed encryption. If specified, `kms_key_name` must
        must contain a valid Cloud KMS key.
        """

    class EncryptionType(_EncryptionType, metaclass=_EncryptionTypeEnumTypeWrapper):
        """Encryption types for the database to be restored."""
        pass

    ENCRYPTION_TYPE_UNSPECIFIED: RestoreDatabaseEncryptionConfig.EncryptionType.ValueType = ...  # 0
    """Unspecified. Do not use."""

    USE_CONFIG_DEFAULT_OR_BACKUP_ENCRYPTION: RestoreDatabaseEncryptionConfig.EncryptionType.ValueType = ...  # 1
    """This is the default option when
    [encryption_config][google.spanner.admin.database.v1.RestoreDatabaseEncryptionConfig] is not specified.
    """

    GOOGLE_DEFAULT_ENCRYPTION: RestoreDatabaseEncryptionConfig.EncryptionType.ValueType = ...  # 2
    """Use Google default encryption."""

    CUSTOMER_MANAGED_ENCRYPTION: RestoreDatabaseEncryptionConfig.EncryptionType.ValueType = ...  # 3
    """Use customer managed encryption. If specified, `kms_key_name` must
    must contain a valid Cloud KMS key.
    """


    ENCRYPTION_TYPE_FIELD_NUMBER: builtins.int
    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    encryption_type: global___RestoreDatabaseEncryptionConfig.EncryptionType.ValueType = ...
    """Required. The encryption type of the restored database."""

    kms_key_name: typing.Text = ...
    """Optional. The Cloud KMS key that will be used to encrypt/decrypt the restored
    database. This field should be set only when
    [encryption_type][google.spanner.admin.database.v1.RestoreDatabaseEncryptionConfig.encryption_type] is
    `CUSTOMER_MANAGED_ENCRYPTION`. Values are of the form
    `projects/<project>/locations/<location>/keyRings/<key_ring>/cryptoKeys/<kms_key_name>`.
    """

    def __init__(self,
        *,
        encryption_type : global___RestoreDatabaseEncryptionConfig.EncryptionType.ValueType = ...,
        kms_key_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["encryption_type",b"encryption_type","kms_key_name",b"kms_key_name"]) -> None: ...
global___RestoreDatabaseEncryptionConfig = RestoreDatabaseEncryptionConfig

class RestoreDatabaseMetadata(google.protobuf.message.Message):
    """Metadata type for the long-running operation returned by
    [RestoreDatabase][google.spanner.admin.database.v1.DatabaseAdmin.RestoreDatabase].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    SOURCE_TYPE_FIELD_NUMBER: builtins.int
    BACKUP_INFO_FIELD_NUMBER: builtins.int
    PROGRESS_FIELD_NUMBER: builtins.int
    CANCEL_TIME_FIELD_NUMBER: builtins.int
    OPTIMIZE_DATABASE_OPERATION_NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of the database being created and restored to."""

    source_type: global___RestoreSourceType.ValueType = ...
    """The type of the restore source."""

    @property
    def backup_info(self) -> google.spanner.admin.database.v1.backup_pb2.BackupInfo:
        """Information about the backup used to restore the database."""
        pass
    @property
    def progress(self) -> google.spanner.admin.database.v1.common_pb2.OperationProgress:
        """The progress of the
        [RestoreDatabase][google.spanner.admin.database.v1.DatabaseAdmin.RestoreDatabase]
        operation.
        """
        pass
    @property
    def cancel_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which cancellation of this operation was received.
        [Operations.CancelOperation][google.longrunning.Operations.CancelOperation]
        starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not guaranteed.
        Clients can use
        [Operations.GetOperation][google.longrunning.Operations.GetOperation] or
        other methods to check whether the cancellation succeeded or whether the
        operation completed despite cancellation. On successful cancellation,
        the operation is not deleted; instead, it becomes an operation with
        an [Operation.error][google.longrunning.Operation.error] value with a
        [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to `Code.CANCELLED`.
        """
        pass
    optimize_database_operation_name: typing.Text = ...
    """If exists, the name of the long-running operation that will be used to
    track the post-restore optimization process to optimize the performance of
    the restored database, and remove the dependency on the restore source.
    The name is of the form
    `projects/<project>/instances/<instance>/databases/<database>/operations/<operation>`
    where the <database> is the name of database being created and restored to.
    The metadata type of the  long-running operation is
    [OptimizeRestoredDatabaseMetadata][google.spanner.admin.database.v1.OptimizeRestoredDatabaseMetadata]. This long-running operation will be
    automatically created by the system after the RestoreDatabase long-running
    operation completes successfully. This operation will not be created if the
    restore was not successful.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        source_type : global___RestoreSourceType.ValueType = ...,
        backup_info : typing.Optional[google.spanner.admin.database.v1.backup_pb2.BackupInfo] = ...,
        progress : typing.Optional[google.spanner.admin.database.v1.common_pb2.OperationProgress] = ...,
        cancel_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        optimize_database_operation_name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["backup_info",b"backup_info","cancel_time",b"cancel_time","progress",b"progress","source_info",b"source_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_info",b"backup_info","cancel_time",b"cancel_time","name",b"name","optimize_database_operation_name",b"optimize_database_operation_name","progress",b"progress","source_info",b"source_info","source_type",b"source_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["source_info",b"source_info"]) -> typing.Optional[typing_extensions.Literal["backup_info"]]: ...
global___RestoreDatabaseMetadata = RestoreDatabaseMetadata

class OptimizeRestoredDatabaseMetadata(google.protobuf.message.Message):
    """Metadata type for the long-running operation used to track the progress
    of optimizations performed on a newly restored database. This long-running
    operation is automatically created by the system after the successful
    completion of a database restore, and cannot be cancelled.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROGRESS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of the restored database being optimized."""

    @property
    def progress(self) -> google.spanner.admin.database.v1.common_pb2.OperationProgress:
        """The progress of the post-restore optimizations."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        progress : typing.Optional[google.spanner.admin.database.v1.common_pb2.OperationProgress] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["progress",b"progress"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","progress",b"progress"]) -> None: ...
global___OptimizeRestoredDatabaseMetadata = OptimizeRestoredDatabaseMetadata
