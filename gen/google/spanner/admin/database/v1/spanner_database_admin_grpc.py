# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/spanner/admin/database/v1/spanner_database_admin.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.iam.v1.iam_policy_pb2
import google.iam.v1.policy_pb2
import google.longrunning.operations_pb2
import google.protobuf.empty_pb2
import google.protobuf.timestamp_pb2
import google.spanner.admin.database.v1.backup_pb2
import google.spanner.admin.database.v1.common_pb2
import google.spanner.admin.database.v1.spanner_database_admin_pb2


class DatabaseAdminBase(abc.ABC):

    @abc.abstractmethod
    async def ListDatabases(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabasesRequest, google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabasesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateDatabase(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.spanner_database_admin_pb2.CreateDatabaseRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def GetDatabase(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.spanner_database_admin_pb2.GetDatabaseRequest, google.spanner.admin.database.v1.spanner_database_admin_pb2.Database]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateDatabaseDdl(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.spanner_database_admin_pb2.UpdateDatabaseDdlRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DropDatabase(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.spanner_database_admin_pb2.DropDatabaseRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def GetDatabaseDdl(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.spanner_database_admin_pb2.GetDatabaseDdlRequest, google.spanner.admin.database.v1.spanner_database_admin_pb2.GetDatabaseDdlResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.SetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def GetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.GetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def TestIamPermissions(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest, google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateBackup(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.backup_pb2.CreateBackupRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def GetBackup(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.backup_pb2.GetBackupRequest, google.spanner.admin.database.v1.backup_pb2.Backup]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateBackup(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.backup_pb2.UpdateBackupRequest, google.spanner.admin.database.v1.backup_pb2.Backup]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteBackup(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.backup_pb2.DeleteBackupRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def ListBackups(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.backup_pb2.ListBackupsRequest, google.spanner.admin.database.v1.backup_pb2.ListBackupsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def RestoreDatabase(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.spanner_database_admin_pb2.RestoreDatabaseRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def ListDatabaseOperations(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabaseOperationsRequest, google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabaseOperationsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListBackupOperations(self, stream: 'grpclib.server.Stream[google.spanner.admin.database.v1.backup_pb2.ListBackupOperationsRequest, google.spanner.admin.database.v1.backup_pb2.ListBackupOperationsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.spanner.admin.database.v1.DatabaseAdmin/ListDatabases': grpclib.const.Handler(
                self.ListDatabases,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabasesRequest,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabasesResponse,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/CreateDatabase': grpclib.const.Handler(
                self.CreateDatabase,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.CreateDatabaseRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/GetDatabase': grpclib.const.Handler(
                self.GetDatabase,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.GetDatabaseRequest,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.Database,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/UpdateDatabaseDdl': grpclib.const.Handler(
                self.UpdateDatabaseDdl,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.UpdateDatabaseDdlRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/DropDatabase': grpclib.const.Handler(
                self.DropDatabase,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.DropDatabaseRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/GetDatabaseDdl': grpclib.const.Handler(
                self.GetDatabaseDdl,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.GetDatabaseDdlRequest,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.GetDatabaseDdlResponse,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/SetIamPolicy': grpclib.const.Handler(
                self.SetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/GetIamPolicy': grpclib.const.Handler(
                self.GetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/TestIamPermissions': grpclib.const.Handler(
                self.TestIamPermissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/CreateBackup': grpclib.const.Handler(
                self.CreateBackup,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.backup_pb2.CreateBackupRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/GetBackup': grpclib.const.Handler(
                self.GetBackup,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.backup_pb2.GetBackupRequest,
                google.spanner.admin.database.v1.backup_pb2.Backup,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/UpdateBackup': grpclib.const.Handler(
                self.UpdateBackup,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.backup_pb2.UpdateBackupRequest,
                google.spanner.admin.database.v1.backup_pb2.Backup,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/DeleteBackup': grpclib.const.Handler(
                self.DeleteBackup,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.backup_pb2.DeleteBackupRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/ListBackups': grpclib.const.Handler(
                self.ListBackups,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.backup_pb2.ListBackupsRequest,
                google.spanner.admin.database.v1.backup_pb2.ListBackupsResponse,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/RestoreDatabase': grpclib.const.Handler(
                self.RestoreDatabase,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.RestoreDatabaseRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/ListDatabaseOperations': grpclib.const.Handler(
                self.ListDatabaseOperations,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabaseOperationsRequest,
                google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabaseOperationsResponse,
            ),
            '/google.spanner.admin.database.v1.DatabaseAdmin/ListBackupOperations': grpclib.const.Handler(
                self.ListBackupOperations,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.spanner.admin.database.v1.backup_pb2.ListBackupOperationsRequest,
                google.spanner.admin.database.v1.backup_pb2.ListBackupOperationsResponse,
            ),
        }


class DatabaseAdminStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListDatabases = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/ListDatabases',
            google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabasesRequest,
            google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabasesResponse,
        )
        self.CreateDatabase = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/CreateDatabase',
            google.spanner.admin.database.v1.spanner_database_admin_pb2.CreateDatabaseRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.GetDatabase = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/GetDatabase',
            google.spanner.admin.database.v1.spanner_database_admin_pb2.GetDatabaseRequest,
            google.spanner.admin.database.v1.spanner_database_admin_pb2.Database,
        )
        self.UpdateDatabaseDdl = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/UpdateDatabaseDdl',
            google.spanner.admin.database.v1.spanner_database_admin_pb2.UpdateDatabaseDdlRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.DropDatabase = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/DropDatabase',
            google.spanner.admin.database.v1.spanner_database_admin_pb2.DropDatabaseRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.GetDatabaseDdl = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/GetDatabaseDdl',
            google.spanner.admin.database.v1.spanner_database_admin_pb2.GetDatabaseDdlRequest,
            google.spanner.admin.database.v1.spanner_database_admin_pb2.GetDatabaseDdlResponse,
        )
        self.SetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/SetIamPolicy',
            google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.GetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/GetIamPolicy',
            google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.TestIamPermissions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/TestIamPermissions',
            google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
            google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
        )
        self.CreateBackup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/CreateBackup',
            google.spanner.admin.database.v1.backup_pb2.CreateBackupRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.GetBackup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/GetBackup',
            google.spanner.admin.database.v1.backup_pb2.GetBackupRequest,
            google.spanner.admin.database.v1.backup_pb2.Backup,
        )
        self.UpdateBackup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/UpdateBackup',
            google.spanner.admin.database.v1.backup_pb2.UpdateBackupRequest,
            google.spanner.admin.database.v1.backup_pb2.Backup,
        )
        self.DeleteBackup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/DeleteBackup',
            google.spanner.admin.database.v1.backup_pb2.DeleteBackupRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.ListBackups = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/ListBackups',
            google.spanner.admin.database.v1.backup_pb2.ListBackupsRequest,
            google.spanner.admin.database.v1.backup_pb2.ListBackupsResponse,
        )
        self.RestoreDatabase = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/RestoreDatabase',
            google.spanner.admin.database.v1.spanner_database_admin_pb2.RestoreDatabaseRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.ListDatabaseOperations = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/ListDatabaseOperations',
            google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabaseOperationsRequest,
            google.spanner.admin.database.v1.spanner_database_admin_pb2.ListDatabaseOperationsResponse,
        )
        self.ListBackupOperations = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.spanner.admin.database.v1.DatabaseAdmin/ListBackupOperations',
            google.spanner.admin.database.v1.backup_pb2.ListBackupOperationsRequest,
            google.spanner.admin.database.v1.backup_pb2.ListBackupOperationsResponse,
        )
