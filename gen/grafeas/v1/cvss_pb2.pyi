"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CVSSv3(google.protobuf.message.Message):
    """Common Vulnerability Scoring System version 3.
    For details, see https://www.first.org/cvss/specification-document
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AttackVector:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AttackVectorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AttackVector.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ATTACK_VECTOR_UNSPECIFIED: CVSSv3.AttackVector.ValueType = ...  # 0
        ATTACK_VECTOR_NETWORK: CVSSv3.AttackVector.ValueType = ...  # 1
        ATTACK_VECTOR_ADJACENT: CVSSv3.AttackVector.ValueType = ...  # 2
        ATTACK_VECTOR_LOCAL: CVSSv3.AttackVector.ValueType = ...  # 3
        ATTACK_VECTOR_PHYSICAL: CVSSv3.AttackVector.ValueType = ...  # 4
    class AttackVector(_AttackVector, metaclass=_AttackVectorEnumTypeWrapper):
        pass

    ATTACK_VECTOR_UNSPECIFIED: CVSSv3.AttackVector.ValueType = ...  # 0
    ATTACK_VECTOR_NETWORK: CVSSv3.AttackVector.ValueType = ...  # 1
    ATTACK_VECTOR_ADJACENT: CVSSv3.AttackVector.ValueType = ...  # 2
    ATTACK_VECTOR_LOCAL: CVSSv3.AttackVector.ValueType = ...  # 3
    ATTACK_VECTOR_PHYSICAL: CVSSv3.AttackVector.ValueType = ...  # 4

    class _AttackComplexity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AttackComplexityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AttackComplexity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ATTACK_COMPLEXITY_UNSPECIFIED: CVSSv3.AttackComplexity.ValueType = ...  # 0
        ATTACK_COMPLEXITY_LOW: CVSSv3.AttackComplexity.ValueType = ...  # 1
        ATTACK_COMPLEXITY_HIGH: CVSSv3.AttackComplexity.ValueType = ...  # 2
    class AttackComplexity(_AttackComplexity, metaclass=_AttackComplexityEnumTypeWrapper):
        pass

    ATTACK_COMPLEXITY_UNSPECIFIED: CVSSv3.AttackComplexity.ValueType = ...  # 0
    ATTACK_COMPLEXITY_LOW: CVSSv3.AttackComplexity.ValueType = ...  # 1
    ATTACK_COMPLEXITY_HIGH: CVSSv3.AttackComplexity.ValueType = ...  # 2

    class _PrivilegesRequired:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PrivilegesRequiredEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PrivilegesRequired.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PRIVILEGES_REQUIRED_UNSPECIFIED: CVSSv3.PrivilegesRequired.ValueType = ...  # 0
        PRIVILEGES_REQUIRED_NONE: CVSSv3.PrivilegesRequired.ValueType = ...  # 1
        PRIVILEGES_REQUIRED_LOW: CVSSv3.PrivilegesRequired.ValueType = ...  # 2
        PRIVILEGES_REQUIRED_HIGH: CVSSv3.PrivilegesRequired.ValueType = ...  # 3
    class PrivilegesRequired(_PrivilegesRequired, metaclass=_PrivilegesRequiredEnumTypeWrapper):
        pass

    PRIVILEGES_REQUIRED_UNSPECIFIED: CVSSv3.PrivilegesRequired.ValueType = ...  # 0
    PRIVILEGES_REQUIRED_NONE: CVSSv3.PrivilegesRequired.ValueType = ...  # 1
    PRIVILEGES_REQUIRED_LOW: CVSSv3.PrivilegesRequired.ValueType = ...  # 2
    PRIVILEGES_REQUIRED_HIGH: CVSSv3.PrivilegesRequired.ValueType = ...  # 3

    class _UserInteraction:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UserInteractionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UserInteraction.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        USER_INTERACTION_UNSPECIFIED: CVSSv3.UserInteraction.ValueType = ...  # 0
        USER_INTERACTION_NONE: CVSSv3.UserInteraction.ValueType = ...  # 1
        USER_INTERACTION_REQUIRED: CVSSv3.UserInteraction.ValueType = ...  # 2
    class UserInteraction(_UserInteraction, metaclass=_UserInteractionEnumTypeWrapper):
        pass

    USER_INTERACTION_UNSPECIFIED: CVSSv3.UserInteraction.ValueType = ...  # 0
    USER_INTERACTION_NONE: CVSSv3.UserInteraction.ValueType = ...  # 1
    USER_INTERACTION_REQUIRED: CVSSv3.UserInteraction.ValueType = ...  # 2

    class _Scope:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ScopeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Scope.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SCOPE_UNSPECIFIED: CVSSv3.Scope.ValueType = ...  # 0
        SCOPE_UNCHANGED: CVSSv3.Scope.ValueType = ...  # 1
        SCOPE_CHANGED: CVSSv3.Scope.ValueType = ...  # 2
    class Scope(_Scope, metaclass=_ScopeEnumTypeWrapper):
        pass

    SCOPE_UNSPECIFIED: CVSSv3.Scope.ValueType = ...  # 0
    SCOPE_UNCHANGED: CVSSv3.Scope.ValueType = ...  # 1
    SCOPE_CHANGED: CVSSv3.Scope.ValueType = ...  # 2

    class _Impact:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ImpactEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Impact.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        IMPACT_UNSPECIFIED: CVSSv3.Impact.ValueType = ...  # 0
        IMPACT_HIGH: CVSSv3.Impact.ValueType = ...  # 1
        IMPACT_LOW: CVSSv3.Impact.ValueType = ...  # 2
        IMPACT_NONE: CVSSv3.Impact.ValueType = ...  # 3
    class Impact(_Impact, metaclass=_ImpactEnumTypeWrapper):
        pass

    IMPACT_UNSPECIFIED: CVSSv3.Impact.ValueType = ...  # 0
    IMPACT_HIGH: CVSSv3.Impact.ValueType = ...  # 1
    IMPACT_LOW: CVSSv3.Impact.ValueType = ...  # 2
    IMPACT_NONE: CVSSv3.Impact.ValueType = ...  # 3

    BASE_SCORE_FIELD_NUMBER: builtins.int
    EXPLOITABILITY_SCORE_FIELD_NUMBER: builtins.int
    IMPACT_SCORE_FIELD_NUMBER: builtins.int
    ATTACK_VECTOR_FIELD_NUMBER: builtins.int
    ATTACK_COMPLEXITY_FIELD_NUMBER: builtins.int
    PRIVILEGES_REQUIRED_FIELD_NUMBER: builtins.int
    USER_INTERACTION_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    CONFIDENTIALITY_IMPACT_FIELD_NUMBER: builtins.int
    INTEGRITY_IMPACT_FIELD_NUMBER: builtins.int
    AVAILABILITY_IMPACT_FIELD_NUMBER: builtins.int
    base_score: builtins.float = ...
    """The base score is a function of the base metric scores."""

    exploitability_score: builtins.float = ...
    impact_score: builtins.float = ...
    attack_vector: global___CVSSv3.AttackVector.ValueType = ...
    """Base Metrics
    Represents the intrinsic characteristics of a vulnerability that are
    constant over time and across user environments.
    """

    attack_complexity: global___CVSSv3.AttackComplexity.ValueType = ...
    privileges_required: global___CVSSv3.PrivilegesRequired.ValueType = ...
    user_interaction: global___CVSSv3.UserInteraction.ValueType = ...
    scope: global___CVSSv3.Scope.ValueType = ...
    confidentiality_impact: global___CVSSv3.Impact.ValueType = ...
    integrity_impact: global___CVSSv3.Impact.ValueType = ...
    availability_impact: global___CVSSv3.Impact.ValueType = ...
    def __init__(self,
        *,
        base_score : builtins.float = ...,
        exploitability_score : builtins.float = ...,
        impact_score : builtins.float = ...,
        attack_vector : global___CVSSv3.AttackVector.ValueType = ...,
        attack_complexity : global___CVSSv3.AttackComplexity.ValueType = ...,
        privileges_required : global___CVSSv3.PrivilegesRequired.ValueType = ...,
        user_interaction : global___CVSSv3.UserInteraction.ValueType = ...,
        scope : global___CVSSv3.Scope.ValueType = ...,
        confidentiality_impact : global___CVSSv3.Impact.ValueType = ...,
        integrity_impact : global___CVSSv3.Impact.ValueType = ...,
        availability_impact : global___CVSSv3.Impact.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["attack_complexity",b"attack_complexity","attack_vector",b"attack_vector","availability_impact",b"availability_impact","base_score",b"base_score","confidentiality_impact",b"confidentiality_impact","exploitability_score",b"exploitability_score","impact_score",b"impact_score","integrity_impact",b"integrity_impact","privileges_required",b"privileges_required","scope",b"scope","user_interaction",b"user_interaction"]) -> None: ...
global___CVSSv3 = CVSSv3

class CVSS(google.protobuf.message.Message):
    """Common Vulnerability Scoring System.
    For details, see https://www.first.org/cvss/specification-document
    This is a message we will try to use for storing multiple versions of
    CVSS. The intention is that as new versions of CVSS scores get added, we
    will be able to modify this message rather than adding new protos for each
    new version of the score.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AttackVector:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AttackVectorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AttackVector.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ATTACK_VECTOR_UNSPECIFIED: CVSS.AttackVector.ValueType = ...  # 0
        ATTACK_VECTOR_NETWORK: CVSS.AttackVector.ValueType = ...  # 1
        ATTACK_VECTOR_ADJACENT: CVSS.AttackVector.ValueType = ...  # 2
        ATTACK_VECTOR_LOCAL: CVSS.AttackVector.ValueType = ...  # 3
        ATTACK_VECTOR_PHYSICAL: CVSS.AttackVector.ValueType = ...  # 4
    class AttackVector(_AttackVector, metaclass=_AttackVectorEnumTypeWrapper):
        pass

    ATTACK_VECTOR_UNSPECIFIED: CVSS.AttackVector.ValueType = ...  # 0
    ATTACK_VECTOR_NETWORK: CVSS.AttackVector.ValueType = ...  # 1
    ATTACK_VECTOR_ADJACENT: CVSS.AttackVector.ValueType = ...  # 2
    ATTACK_VECTOR_LOCAL: CVSS.AttackVector.ValueType = ...  # 3
    ATTACK_VECTOR_PHYSICAL: CVSS.AttackVector.ValueType = ...  # 4

    class _AttackComplexity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AttackComplexityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AttackComplexity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ATTACK_COMPLEXITY_UNSPECIFIED: CVSS.AttackComplexity.ValueType = ...  # 0
        ATTACK_COMPLEXITY_LOW: CVSS.AttackComplexity.ValueType = ...  # 1
        ATTACK_COMPLEXITY_HIGH: CVSS.AttackComplexity.ValueType = ...  # 2
    class AttackComplexity(_AttackComplexity, metaclass=_AttackComplexityEnumTypeWrapper):
        pass

    ATTACK_COMPLEXITY_UNSPECIFIED: CVSS.AttackComplexity.ValueType = ...  # 0
    ATTACK_COMPLEXITY_LOW: CVSS.AttackComplexity.ValueType = ...  # 1
    ATTACK_COMPLEXITY_HIGH: CVSS.AttackComplexity.ValueType = ...  # 2

    class _Authentication:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AuthenticationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Authentication.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        AUTHENTICATION_UNSPECIFIED: CVSS.Authentication.ValueType = ...  # 0
        AUTHENTICATION_MULTIPLE: CVSS.Authentication.ValueType = ...  # 1
        AUTHENTICATION_SINGLE: CVSS.Authentication.ValueType = ...  # 2
        AUTHENTICATION_NONE: CVSS.Authentication.ValueType = ...  # 3
    class Authentication(_Authentication, metaclass=_AuthenticationEnumTypeWrapper):
        pass

    AUTHENTICATION_UNSPECIFIED: CVSS.Authentication.ValueType = ...  # 0
    AUTHENTICATION_MULTIPLE: CVSS.Authentication.ValueType = ...  # 1
    AUTHENTICATION_SINGLE: CVSS.Authentication.ValueType = ...  # 2
    AUTHENTICATION_NONE: CVSS.Authentication.ValueType = ...  # 3

    class _PrivilegesRequired:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PrivilegesRequiredEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PrivilegesRequired.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PRIVILEGES_REQUIRED_UNSPECIFIED: CVSS.PrivilegesRequired.ValueType = ...  # 0
        PRIVILEGES_REQUIRED_NONE: CVSS.PrivilegesRequired.ValueType = ...  # 1
        PRIVILEGES_REQUIRED_LOW: CVSS.PrivilegesRequired.ValueType = ...  # 2
        PRIVILEGES_REQUIRED_HIGH: CVSS.PrivilegesRequired.ValueType = ...  # 3
    class PrivilegesRequired(_PrivilegesRequired, metaclass=_PrivilegesRequiredEnumTypeWrapper):
        pass

    PRIVILEGES_REQUIRED_UNSPECIFIED: CVSS.PrivilegesRequired.ValueType = ...  # 0
    PRIVILEGES_REQUIRED_NONE: CVSS.PrivilegesRequired.ValueType = ...  # 1
    PRIVILEGES_REQUIRED_LOW: CVSS.PrivilegesRequired.ValueType = ...  # 2
    PRIVILEGES_REQUIRED_HIGH: CVSS.PrivilegesRequired.ValueType = ...  # 3

    class _UserInteraction:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UserInteractionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UserInteraction.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        USER_INTERACTION_UNSPECIFIED: CVSS.UserInteraction.ValueType = ...  # 0
        USER_INTERACTION_NONE: CVSS.UserInteraction.ValueType = ...  # 1
        USER_INTERACTION_REQUIRED: CVSS.UserInteraction.ValueType = ...  # 2
    class UserInteraction(_UserInteraction, metaclass=_UserInteractionEnumTypeWrapper):
        pass

    USER_INTERACTION_UNSPECIFIED: CVSS.UserInteraction.ValueType = ...  # 0
    USER_INTERACTION_NONE: CVSS.UserInteraction.ValueType = ...  # 1
    USER_INTERACTION_REQUIRED: CVSS.UserInteraction.ValueType = ...  # 2

    class _Scope:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ScopeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Scope.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        SCOPE_UNSPECIFIED: CVSS.Scope.ValueType = ...  # 0
        SCOPE_UNCHANGED: CVSS.Scope.ValueType = ...  # 1
        SCOPE_CHANGED: CVSS.Scope.ValueType = ...  # 2
    class Scope(_Scope, metaclass=_ScopeEnumTypeWrapper):
        pass

    SCOPE_UNSPECIFIED: CVSS.Scope.ValueType = ...  # 0
    SCOPE_UNCHANGED: CVSS.Scope.ValueType = ...  # 1
    SCOPE_CHANGED: CVSS.Scope.ValueType = ...  # 2

    class _Impact:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ImpactEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Impact.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        IMPACT_UNSPECIFIED: CVSS.Impact.ValueType = ...  # 0
        IMPACT_HIGH: CVSS.Impact.ValueType = ...  # 1
        IMPACT_LOW: CVSS.Impact.ValueType = ...  # 2
        IMPACT_NONE: CVSS.Impact.ValueType = ...  # 3
    class Impact(_Impact, metaclass=_ImpactEnumTypeWrapper):
        pass

    IMPACT_UNSPECIFIED: CVSS.Impact.ValueType = ...  # 0
    IMPACT_HIGH: CVSS.Impact.ValueType = ...  # 1
    IMPACT_LOW: CVSS.Impact.ValueType = ...  # 2
    IMPACT_NONE: CVSS.Impact.ValueType = ...  # 3

    BASE_SCORE_FIELD_NUMBER: builtins.int
    EXPLOITABILITY_SCORE_FIELD_NUMBER: builtins.int
    IMPACT_SCORE_FIELD_NUMBER: builtins.int
    ATTACK_VECTOR_FIELD_NUMBER: builtins.int
    ATTACK_COMPLEXITY_FIELD_NUMBER: builtins.int
    AUTHENTICATION_FIELD_NUMBER: builtins.int
    PRIVILEGES_REQUIRED_FIELD_NUMBER: builtins.int
    USER_INTERACTION_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    CONFIDENTIALITY_IMPACT_FIELD_NUMBER: builtins.int
    INTEGRITY_IMPACT_FIELD_NUMBER: builtins.int
    AVAILABILITY_IMPACT_FIELD_NUMBER: builtins.int
    base_score: builtins.float = ...
    """The base score is a function of the base metric scores."""

    exploitability_score: builtins.float = ...
    impact_score: builtins.float = ...
    attack_vector: global___CVSS.AttackVector.ValueType = ...
    """Base Metrics
    Represents the intrinsic characteristics of a vulnerability that are
    constant over time and across user environments.
    """

    attack_complexity: global___CVSS.AttackComplexity.ValueType = ...
    authentication: global___CVSS.Authentication.ValueType = ...
    privileges_required: global___CVSS.PrivilegesRequired.ValueType = ...
    user_interaction: global___CVSS.UserInteraction.ValueType = ...
    scope: global___CVSS.Scope.ValueType = ...
    confidentiality_impact: global___CVSS.Impact.ValueType = ...
    integrity_impact: global___CVSS.Impact.ValueType = ...
    availability_impact: global___CVSS.Impact.ValueType = ...
    def __init__(self,
        *,
        base_score : builtins.float = ...,
        exploitability_score : builtins.float = ...,
        impact_score : builtins.float = ...,
        attack_vector : global___CVSS.AttackVector.ValueType = ...,
        attack_complexity : global___CVSS.AttackComplexity.ValueType = ...,
        authentication : global___CVSS.Authentication.ValueType = ...,
        privileges_required : global___CVSS.PrivilegesRequired.ValueType = ...,
        user_interaction : global___CVSS.UserInteraction.ValueType = ...,
        scope : global___CVSS.Scope.ValueType = ...,
        confidentiality_impact : global___CVSS.Impact.ValueType = ...,
        integrity_impact : global___CVSS.Impact.ValueType = ...,
        availability_impact : global___CVSS.Impact.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["attack_complexity",b"attack_complexity","attack_vector",b"attack_vector","authentication",b"authentication","availability_impact",b"availability_impact","base_score",b"base_score","confidentiality_impact",b"confidentiality_impact","exploitability_score",b"exploitability_score","impact_score",b"impact_score","integrity_impact",b"integrity_impact","privileges_required",b"privileges_required","scope",b"scope","user_interaction",b"user_interaction"]) -> None: ...
global___CVSS = CVSS
