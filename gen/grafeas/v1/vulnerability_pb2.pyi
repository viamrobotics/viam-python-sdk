"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import grafeas.v1.common_pb2
import grafeas.v1.cvss_pb2
import grafeas.v1.package_pb2
import grafeas.v1.severity_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class VulnerabilityNote(google.protobuf.message.Message):
    """A security vulnerability that can be found in resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Detail(google.protobuf.message.Message):
        """A detail for a distro and package affected by this vulnerability and its
        associated fix (if one is available).
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SEVERITY_NAME_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        PACKAGE_TYPE_FIELD_NUMBER: builtins.int
        AFFECTED_CPE_URI_FIELD_NUMBER: builtins.int
        AFFECTED_PACKAGE_FIELD_NUMBER: builtins.int
        AFFECTED_VERSION_START_FIELD_NUMBER: builtins.int
        AFFECTED_VERSION_END_FIELD_NUMBER: builtins.int
        FIXED_CPE_URI_FIELD_NUMBER: builtins.int
        FIXED_PACKAGE_FIELD_NUMBER: builtins.int
        FIXED_VERSION_FIELD_NUMBER: builtins.int
        IS_OBSOLETE_FIELD_NUMBER: builtins.int
        SOURCE_UPDATE_TIME_FIELD_NUMBER: builtins.int
        SOURCE_FIELD_NUMBER: builtins.int
        VENDOR_FIELD_NUMBER: builtins.int
        severity_name: typing.Text = ...
        """The distro assigned severity of this vulnerability."""

        description: typing.Text = ...
        """A vendor-specific description of this vulnerability."""

        package_type: typing.Text = ...
        """The type of package; whether native or non native (e.g., ruby gems,
        node.js packages, etc.).
        """

        affected_cpe_uri: typing.Text = ...
        """Required. The [CPE URI](https://cpe.mitre.org/specification/) this
        vulnerability affects.
        """

        affected_package: typing.Text = ...
        """Required. The package this vulnerability affects."""

        @property
        def affected_version_start(self) -> grafeas.v1.package_pb2.Version:
            """The version number at the start of an interval in which this
            vulnerability exists. A vulnerability can affect a package between
            version numbers that are disjoint sets of intervals (example:
            [1.0.0-1.1.0], [2.4.6-2.4.8] and [4.5.6-4.6.8]) each of which will be
            represented in its own Detail. If a specific affected version is provided
            by a vulnerability database, affected_version_start and
            affected_version_end will be the same in that Detail.
            """
            pass
        @property
        def affected_version_end(self) -> grafeas.v1.package_pb2.Version:
            """The version number at the end of an interval in which this vulnerability
            exists. A vulnerability can affect a package between version numbers
            that are disjoint sets of intervals (example: [1.0.0-1.1.0],
            [2.4.6-2.4.8] and [4.5.6-4.6.8]) each of which will be represented in its
            own Detail. If a specific affected version is provided by a vulnerability
            database, affected_version_start and affected_version_end will be the
            same in that Detail.
            """
            pass
        fixed_cpe_uri: typing.Text = ...
        """The distro recommended [CPE URI](https://cpe.mitre.org/specification/)
        to update to that contains a fix for this vulnerability. It is possible
        for this to be different from the affected_cpe_uri.
        """

        fixed_package: typing.Text = ...
        """The distro recommended package to update to that contains a fix for this
        vulnerability. It is possible for this to be different from the
        affected_package.
        """

        @property
        def fixed_version(self) -> grafeas.v1.package_pb2.Version:
            """The distro recommended version to update to that contains a
            fix for this vulnerability. Setting this to VersionKind.MAXIMUM means no
            such version is yet available.
            """
            pass
        is_obsolete: builtins.bool = ...
        """Whether this detail is obsolete. Occurrences are expected not to point to
        obsolete details.
        """

        @property
        def source_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """The time this information was last changed at the source. This is an
            upstream timestamp from the underlying information source - e.g. Ubuntu
            security tracker.
            """
            pass
        source: typing.Text = ...
        """The source from which the information in this Detail was obtained."""

        vendor: typing.Text = ...
        """The name of the vendor of the product."""

        def __init__(self,
            *,
            severity_name : typing.Text = ...,
            description : typing.Text = ...,
            package_type : typing.Text = ...,
            affected_cpe_uri : typing.Text = ...,
            affected_package : typing.Text = ...,
            affected_version_start : typing.Optional[grafeas.v1.package_pb2.Version] = ...,
            affected_version_end : typing.Optional[grafeas.v1.package_pb2.Version] = ...,
            fixed_cpe_uri : typing.Text = ...,
            fixed_package : typing.Text = ...,
            fixed_version : typing.Optional[grafeas.v1.package_pb2.Version] = ...,
            is_obsolete : builtins.bool = ...,
            source_update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            source : typing.Text = ...,
            vendor : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["affected_version_end",b"affected_version_end","affected_version_start",b"affected_version_start","fixed_version",b"fixed_version","source_update_time",b"source_update_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["affected_cpe_uri",b"affected_cpe_uri","affected_package",b"affected_package","affected_version_end",b"affected_version_end","affected_version_start",b"affected_version_start","description",b"description","fixed_cpe_uri",b"fixed_cpe_uri","fixed_package",b"fixed_package","fixed_version",b"fixed_version","is_obsolete",b"is_obsolete","package_type",b"package_type","severity_name",b"severity_name","source",b"source","source_update_time",b"source_update_time","vendor",b"vendor"]) -> None: ...

    class WindowsDetail(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class KnowledgeBase(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            URL_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            """The KB name (generally of the form KB[0-9]+ (e.g., KB123456))."""

            url: typing.Text = ...
            """A link to the KB in the [Windows update catalog]
            (https://www.catalog.update.microsoft.com/).
            """

            def __init__(self,
                *,
                name : typing.Text = ...,
                url : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name",b"name","url",b"url"]) -> None: ...

        CPE_URI_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        DESCRIPTION_FIELD_NUMBER: builtins.int
        FIXING_KBS_FIELD_NUMBER: builtins.int
        cpe_uri: typing.Text = ...
        """Required. The [CPE URI](https://cpe.mitre.org/specification/) this
        vulnerability affects.
        """

        name: typing.Text = ...
        """Required. The name of this vulnerability."""

        description: typing.Text = ...
        """The description of this vulnerability."""

        @property
        def fixing_kbs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VulnerabilityNote.WindowsDetail.KnowledgeBase]:
            """Required. The names of the KBs which have hotfixes to mitigate this
            vulnerability. Note that there may be multiple hotfixes (and thus
            multiple KBs) that mitigate a given vulnerability. Currently any listed
            KBs presence is considered a fix.
            """
            pass
        def __init__(self,
            *,
            cpe_uri : typing.Text = ...,
            name : typing.Text = ...,
            description : typing.Text = ...,
            fixing_kbs : typing.Optional[typing.Iterable[global___VulnerabilityNote.WindowsDetail.KnowledgeBase]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["cpe_uri",b"cpe_uri","description",b"description","fixing_kbs",b"fixing_kbs","name",b"name"]) -> None: ...

    CVSS_SCORE_FIELD_NUMBER: builtins.int
    SEVERITY_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    CVSS_V3_FIELD_NUMBER: builtins.int
    WINDOWS_DETAILS_FIELD_NUMBER: builtins.int
    SOURCE_UPDATE_TIME_FIELD_NUMBER: builtins.int
    cvss_score: builtins.float = ...
    """The CVSS score of this vulnerability. CVSS score is on a scale of 0 - 10
    where 0 indicates low severity and 10 indicates high severity.
    """

    severity: grafeas.v1.severity_pb2.Severity.ValueType = ...
    """The note provider assigned severity of this vulnerability."""

    @property
    def details(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VulnerabilityNote.Detail]:
        """Details of all known distros and packages affected by this vulnerability."""
        pass
    @property
    def cvss_v3(self) -> grafeas.v1.cvss_pb2.CVSSv3:
        """The full description of the CVSSv3 for this vulnerability."""
        pass
    @property
    def windows_details(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VulnerabilityNote.WindowsDetail]:
        """Windows details get their own format because the information format and
        model don't match a normal detail. Specifically Windows updates are done as
        patches, thus Windows vulnerabilities really are a missing package, rather
        than a package being at an incorrect version.
        """
        pass
    @property
    def source_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time this information was last changed at the source. This is an
        upstream timestamp from the underlying information source - e.g. Ubuntu
        security tracker.
        """
        pass
    def __init__(self,
        *,
        cvss_score : builtins.float = ...,
        severity : grafeas.v1.severity_pb2.Severity.ValueType = ...,
        details : typing.Optional[typing.Iterable[global___VulnerabilityNote.Detail]] = ...,
        cvss_v3 : typing.Optional[grafeas.v1.cvss_pb2.CVSSv3] = ...,
        windows_details : typing.Optional[typing.Iterable[global___VulnerabilityNote.WindowsDetail]] = ...,
        source_update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cvss_v3",b"cvss_v3","source_update_time",b"source_update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cvss_score",b"cvss_score","cvss_v3",b"cvss_v3","details",b"details","severity",b"severity","source_update_time",b"source_update_time","windows_details",b"windows_details"]) -> None: ...
global___VulnerabilityNote = VulnerabilityNote

class VulnerabilityOccurrence(google.protobuf.message.Message):
    """An occurrence of a severity vulnerability on a resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PackageIssue(google.protobuf.message.Message):
        """A detail for a distro and package this vulnerability occurrence was found
        in and its associated fix (if one is available).
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        AFFECTED_CPE_URI_FIELD_NUMBER: builtins.int
        AFFECTED_PACKAGE_FIELD_NUMBER: builtins.int
        AFFECTED_VERSION_FIELD_NUMBER: builtins.int
        FIXED_CPE_URI_FIELD_NUMBER: builtins.int
        FIXED_PACKAGE_FIELD_NUMBER: builtins.int
        FIXED_VERSION_FIELD_NUMBER: builtins.int
        FIX_AVAILABLE_FIELD_NUMBER: builtins.int
        PACKAGE_TYPE_FIELD_NUMBER: builtins.int
        EFFECTIVE_SEVERITY_FIELD_NUMBER: builtins.int
        affected_cpe_uri: typing.Text = ...
        """Required. The [CPE URI](https://cpe.mitre.org/specification/) this
        vulnerability was found in.
        """

        affected_package: typing.Text = ...
        """Required. The package this vulnerability was found in."""

        @property
        def affected_version(self) -> grafeas.v1.package_pb2.Version:
            """Required. The version of the package that is installed on the resource
            affected by this vulnerability.
            """
            pass
        fixed_cpe_uri: typing.Text = ...
        """The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
        was fixed in. It is possible for this to be different from the
        affected_cpe_uri.
        """

        fixed_package: typing.Text = ...
        """The package this vulnerability was fixed in. It is possible for this to
        be different from the affected_package.
        """

        @property
        def fixed_version(self) -> grafeas.v1.package_pb2.Version:
            """Required. The version of the package this vulnerability was fixed in.
            Setting this to VersionKind.MAXIMUM means no fix is yet available.
            """
            pass
        fix_available: builtins.bool = ...
        """Output only. Whether a fix is available for this package."""

        package_type: typing.Text = ...
        """The type of package (e.g. OS, MAVEN, GO)."""

        effective_severity: grafeas.v1.severity_pb2.Severity.ValueType = ...
        """The distro or language system assigned severity for this vulnerability
        when that is available and note provider assigned severity when it is not
        available.
        """

        def __init__(self,
            *,
            affected_cpe_uri : typing.Text = ...,
            affected_package : typing.Text = ...,
            affected_version : typing.Optional[grafeas.v1.package_pb2.Version] = ...,
            fixed_cpe_uri : typing.Text = ...,
            fixed_package : typing.Text = ...,
            fixed_version : typing.Optional[grafeas.v1.package_pb2.Version] = ...,
            fix_available : builtins.bool = ...,
            package_type : typing.Text = ...,
            effective_severity : grafeas.v1.severity_pb2.Severity.ValueType = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["affected_version",b"affected_version","fixed_version",b"fixed_version"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["affected_cpe_uri",b"affected_cpe_uri","affected_package",b"affected_package","affected_version",b"affected_version","effective_severity",b"effective_severity","fix_available",b"fix_available","fixed_cpe_uri",b"fixed_cpe_uri","fixed_package",b"fixed_package","fixed_version",b"fixed_version","package_type",b"package_type"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    SEVERITY_FIELD_NUMBER: builtins.int
    CVSS_SCORE_FIELD_NUMBER: builtins.int
    CVSSV3_FIELD_NUMBER: builtins.int
    PACKAGE_ISSUE_FIELD_NUMBER: builtins.int
    SHORT_DESCRIPTION_FIELD_NUMBER: builtins.int
    LONG_DESCRIPTION_FIELD_NUMBER: builtins.int
    RELATED_URLS_FIELD_NUMBER: builtins.int
    EFFECTIVE_SEVERITY_FIELD_NUMBER: builtins.int
    FIX_AVAILABLE_FIELD_NUMBER: builtins.int
    type: typing.Text = ...
    """The type of package; whether native or non native (e.g., ruby gems, node.js
    packages, etc.).
    """

    severity: grafeas.v1.severity_pb2.Severity.ValueType = ...
    """Output only. The note provider assigned severity of this vulnerability."""

    cvss_score: builtins.float = ...
    """Output only. The CVSS score of this vulnerability. CVSS score is on a
    scale of 0 - 10 where 0 indicates low severity and 10 indicates high
    severity.
    """

    @property
    def cvssv3(self) -> grafeas.v1.cvss_pb2.CVSS:
        """The cvss v3 score for the vulnerability."""
        pass
    @property
    def package_issue(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VulnerabilityOccurrence.PackageIssue]:
        """Required. The set of affected locations and their fixes (if available)
        within the associated resource.
        """
        pass
    short_description: typing.Text = ...
    """Output only. A one sentence description of this vulnerability."""

    long_description: typing.Text = ...
    """Output only. A detailed description of this vulnerability."""

    @property
    def related_urls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[grafeas.v1.common_pb2.RelatedUrl]:
        """Output only. URLs related to this vulnerability."""
        pass
    effective_severity: grafeas.v1.severity_pb2.Severity.ValueType = ...
    """The distro assigned severity for this vulnerability when it is available,
    otherwise this is the note provider assigned severity.

    When there are multiple PackageIssues for this vulnerability, they can have
    different effective severities because some might be provided by the distro
    while others are provided by the language ecosystem for a language pack.
    For this reason, it is advised to use the effective severity on the
    PackageIssue level. In the case where multiple PackageIssues have differing
    effective severities, this field should be the highest severity for any of
    the PackageIssues.
    """

    fix_available: builtins.bool = ...
    """Output only. Whether at least one of the affected packages has a fix
    available.
    """

    def __init__(self,
        *,
        type : typing.Text = ...,
        severity : grafeas.v1.severity_pb2.Severity.ValueType = ...,
        cvss_score : builtins.float = ...,
        cvssv3 : typing.Optional[grafeas.v1.cvss_pb2.CVSS] = ...,
        package_issue : typing.Optional[typing.Iterable[global___VulnerabilityOccurrence.PackageIssue]] = ...,
        short_description : typing.Text = ...,
        long_description : typing.Text = ...,
        related_urls : typing.Optional[typing.Iterable[grafeas.v1.common_pb2.RelatedUrl]] = ...,
        effective_severity : grafeas.v1.severity_pb2.Severity.ValueType = ...,
        fix_available : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cvssv3",b"cvssv3"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cvss_score",b"cvss_score","cvssv3",b"cvssv3","effective_severity",b"effective_severity","fix_available",b"fix_available","long_description",b"long_description","package_issue",b"package_issue","related_urls",b"related_urls","severity",b"severity","short_description",b"short_description","type",b"type"]) -> None: ...
global___VulnerabilityOccurrence = VulnerabilityOccurrence
