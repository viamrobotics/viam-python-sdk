# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: grafeas/v1/grafeas.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.protobuf.empty_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.timestamp_pb2
import grafeas.v1.attestation_pb2
import grafeas.v1.build_pb2
import grafeas.v1.common_pb2
import grafeas.v1.compliance_pb2
import grafeas.v1.deployment_pb2
import grafeas.v1.discovery_pb2
import grafeas.v1.dsse_attestation_pb2
import grafeas.v1.image_pb2
import grafeas.v1.package_pb2
import grafeas.v1.upgrade_pb2
import grafeas.v1.vulnerability_pb2
import grafeas.v1.grafeas_pb2


class GrafeasBase(abc.ABC):

    @abc.abstractmethod
    async def GetOccurrence(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.GetOccurrenceRequest, grafeas.v1.grafeas_pb2.Occurrence]') -> None:
        pass

    @abc.abstractmethod
    async def ListOccurrences(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.ListOccurrencesRequest, grafeas.v1.grafeas_pb2.ListOccurrencesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteOccurrence(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.DeleteOccurrenceRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def CreateOccurrence(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.CreateOccurrenceRequest, grafeas.v1.grafeas_pb2.Occurrence]') -> None:
        pass

    @abc.abstractmethod
    async def BatchCreateOccurrences(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.BatchCreateOccurrencesRequest, grafeas.v1.grafeas_pb2.BatchCreateOccurrencesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateOccurrence(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.UpdateOccurrenceRequest, grafeas.v1.grafeas_pb2.Occurrence]') -> None:
        pass

    @abc.abstractmethod
    async def GetOccurrenceNote(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.GetOccurrenceNoteRequest, grafeas.v1.grafeas_pb2.Note]') -> None:
        pass

    @abc.abstractmethod
    async def GetNote(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.GetNoteRequest, grafeas.v1.grafeas_pb2.Note]') -> None:
        pass

    @abc.abstractmethod
    async def ListNotes(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.ListNotesRequest, grafeas.v1.grafeas_pb2.ListNotesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteNote(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.DeleteNoteRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def CreateNote(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.CreateNoteRequest, grafeas.v1.grafeas_pb2.Note]') -> None:
        pass

    @abc.abstractmethod
    async def BatchCreateNotes(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.BatchCreateNotesRequest, grafeas.v1.grafeas_pb2.BatchCreateNotesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateNote(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.UpdateNoteRequest, grafeas.v1.grafeas_pb2.Note]') -> None:
        pass

    @abc.abstractmethod
    async def ListNoteOccurrences(self, stream: 'grpclib.server.Stream[grafeas.v1.grafeas_pb2.ListNoteOccurrencesRequest, grafeas.v1.grafeas_pb2.ListNoteOccurrencesResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/grafeas.v1.Grafeas/GetOccurrence': grpclib.const.Handler(
                self.GetOccurrence,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.GetOccurrenceRequest,
                grafeas.v1.grafeas_pb2.Occurrence,
            ),
            '/grafeas.v1.Grafeas/ListOccurrences': grpclib.const.Handler(
                self.ListOccurrences,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.ListOccurrencesRequest,
                grafeas.v1.grafeas_pb2.ListOccurrencesResponse,
            ),
            '/grafeas.v1.Grafeas/DeleteOccurrence': grpclib.const.Handler(
                self.DeleteOccurrence,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.DeleteOccurrenceRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/grafeas.v1.Grafeas/CreateOccurrence': grpclib.const.Handler(
                self.CreateOccurrence,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.CreateOccurrenceRequest,
                grafeas.v1.grafeas_pb2.Occurrence,
            ),
            '/grafeas.v1.Grafeas/BatchCreateOccurrences': grpclib.const.Handler(
                self.BatchCreateOccurrences,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.BatchCreateOccurrencesRequest,
                grafeas.v1.grafeas_pb2.BatchCreateOccurrencesResponse,
            ),
            '/grafeas.v1.Grafeas/UpdateOccurrence': grpclib.const.Handler(
                self.UpdateOccurrence,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.UpdateOccurrenceRequest,
                grafeas.v1.grafeas_pb2.Occurrence,
            ),
            '/grafeas.v1.Grafeas/GetOccurrenceNote': grpclib.const.Handler(
                self.GetOccurrenceNote,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.GetOccurrenceNoteRequest,
                grafeas.v1.grafeas_pb2.Note,
            ),
            '/grafeas.v1.Grafeas/GetNote': grpclib.const.Handler(
                self.GetNote,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.GetNoteRequest,
                grafeas.v1.grafeas_pb2.Note,
            ),
            '/grafeas.v1.Grafeas/ListNotes': grpclib.const.Handler(
                self.ListNotes,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.ListNotesRequest,
                grafeas.v1.grafeas_pb2.ListNotesResponse,
            ),
            '/grafeas.v1.Grafeas/DeleteNote': grpclib.const.Handler(
                self.DeleteNote,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.DeleteNoteRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/grafeas.v1.Grafeas/CreateNote': grpclib.const.Handler(
                self.CreateNote,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.CreateNoteRequest,
                grafeas.v1.grafeas_pb2.Note,
            ),
            '/grafeas.v1.Grafeas/BatchCreateNotes': grpclib.const.Handler(
                self.BatchCreateNotes,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.BatchCreateNotesRequest,
                grafeas.v1.grafeas_pb2.BatchCreateNotesResponse,
            ),
            '/grafeas.v1.Grafeas/UpdateNote': grpclib.const.Handler(
                self.UpdateNote,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.UpdateNoteRequest,
                grafeas.v1.grafeas_pb2.Note,
            ),
            '/grafeas.v1.Grafeas/ListNoteOccurrences': grpclib.const.Handler(
                self.ListNoteOccurrences,
                grpclib.const.Cardinality.UNARY_UNARY,
                grafeas.v1.grafeas_pb2.ListNoteOccurrencesRequest,
                grafeas.v1.grafeas_pb2.ListNoteOccurrencesResponse,
            ),
        }


class GrafeasStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetOccurrence = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/GetOccurrence',
            grafeas.v1.grafeas_pb2.GetOccurrenceRequest,
            grafeas.v1.grafeas_pb2.Occurrence,
        )
        self.ListOccurrences = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/ListOccurrences',
            grafeas.v1.grafeas_pb2.ListOccurrencesRequest,
            grafeas.v1.grafeas_pb2.ListOccurrencesResponse,
        )
        self.DeleteOccurrence = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/DeleteOccurrence',
            grafeas.v1.grafeas_pb2.DeleteOccurrenceRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.CreateOccurrence = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/CreateOccurrence',
            grafeas.v1.grafeas_pb2.CreateOccurrenceRequest,
            grafeas.v1.grafeas_pb2.Occurrence,
        )
        self.BatchCreateOccurrences = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/BatchCreateOccurrences',
            grafeas.v1.grafeas_pb2.BatchCreateOccurrencesRequest,
            grafeas.v1.grafeas_pb2.BatchCreateOccurrencesResponse,
        )
        self.UpdateOccurrence = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/UpdateOccurrence',
            grafeas.v1.grafeas_pb2.UpdateOccurrenceRequest,
            grafeas.v1.grafeas_pb2.Occurrence,
        )
        self.GetOccurrenceNote = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/GetOccurrenceNote',
            grafeas.v1.grafeas_pb2.GetOccurrenceNoteRequest,
            grafeas.v1.grafeas_pb2.Note,
        )
        self.GetNote = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/GetNote',
            grafeas.v1.grafeas_pb2.GetNoteRequest,
            grafeas.v1.grafeas_pb2.Note,
        )
        self.ListNotes = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/ListNotes',
            grafeas.v1.grafeas_pb2.ListNotesRequest,
            grafeas.v1.grafeas_pb2.ListNotesResponse,
        )
        self.DeleteNote = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/DeleteNote',
            grafeas.v1.grafeas_pb2.DeleteNoteRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.CreateNote = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/CreateNote',
            grafeas.v1.grafeas_pb2.CreateNoteRequest,
            grafeas.v1.grafeas_pb2.Note,
        )
        self.BatchCreateNotes = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/BatchCreateNotes',
            grafeas.v1.grafeas_pb2.BatchCreateNotesRequest,
            grafeas.v1.grafeas_pb2.BatchCreateNotesResponse,
        )
        self.UpdateNote = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/UpdateNote',
            grafeas.v1.grafeas_pb2.UpdateNoteRequest,
            grafeas.v1.grafeas_pb2.Note,
        )
        self.ListNoteOccurrences = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grafeas.v1.Grafeas/ListNoteOccurrences',
            grafeas.v1.grafeas_pb2.ListNoteOccurrencesRequest,
            grafeas.v1.grafeas_pb2.ListNoteOccurrencesResponse,
        )
