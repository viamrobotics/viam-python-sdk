"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _Architecture:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ArchitectureEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Architecture.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    ARCHITECTURE_UNSPECIFIED: Architecture.ValueType = ...  # 0
    """Unknown architecture."""

    X86: Architecture.ValueType = ...  # 1
    """X86 architecture."""

    X64: Architecture.ValueType = ...  # 2
    """X64 architecture."""

class Architecture(_Architecture, metaclass=_ArchitectureEnumTypeWrapper):
    """Instruction set architectures supported by various package managers."""
    pass

ARCHITECTURE_UNSPECIFIED: Architecture.ValueType = ...  # 0
"""Unknown architecture."""

X86: Architecture.ValueType = ...  # 1
"""X86 architecture."""

X64: Architecture.ValueType = ...  # 2
"""X64 architecture."""

global___Architecture = Architecture


class Distribution(google.protobuf.message.Message):
    """This represents a particular channel of distribution for a given package.
    E.g., Debian's jessie-backports dpkg mirror.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CPE_URI_FIELD_NUMBER: builtins.int
    ARCHITECTURE_FIELD_NUMBER: builtins.int
    LATEST_VERSION_FIELD_NUMBER: builtins.int
    MAINTAINER_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    cpe_uri: typing.Text = ...
    """Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/)
    denoting the package manager version distributing a package.
    """

    architecture: global___Architecture.ValueType = ...
    """The CPU architecture for which packages in this distribution channel were
    built.
    """

    @property
    def latest_version(self) -> global___Version:
        """The latest available version of this package in this distribution channel."""
        pass
    maintainer: typing.Text = ...
    """A freeform string denoting the maintainer of this package."""

    url: typing.Text = ...
    """The distribution channel-specific homepage for this package."""

    description: typing.Text = ...
    """The distribution channel-specific description of this package."""

    def __init__(self,
        *,
        cpe_uri : typing.Text = ...,
        architecture : global___Architecture.ValueType = ...,
        latest_version : typing.Optional[global___Version] = ...,
        maintainer : typing.Text = ...,
        url : typing.Text = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["latest_version",b"latest_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["architecture",b"architecture","cpe_uri",b"cpe_uri","description",b"description","latest_version",b"latest_version","maintainer",b"maintainer","url",b"url"]) -> None: ...
global___Distribution = Distribution

class Location(google.protobuf.message.Message):
    """An occurrence of a particular package installation found within a system's
    filesystem. E.g., glibc was found in `/var/lib/dpkg/status`.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CPE_URI_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    cpe_uri: typing.Text = ...
    """Required. The CPE URI in [CPE format](https://cpe.mitre.org/specification/)
    denoting the package manager version distributing a package.
    """

    @property
    def version(self) -> global___Version:
        """The version installed at this location."""
        pass
    path: typing.Text = ...
    """The path from which we gathered that this package/version is installed."""

    def __init__(self,
        *,
        cpe_uri : typing.Text = ...,
        version : typing.Optional[global___Version] = ...,
        path : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["version",b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cpe_uri",b"cpe_uri","path",b"path","version",b"version"]) -> None: ...
global___Location = Location

class PackageNote(google.protobuf.message.Message):
    """This represents a particular package that is distributed over various
    channels. E.g., glibc (aka libc6) is distributed by many, at various
    versions.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DISTRIBUTION_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Immutable. The name of the package."""

    @property
    def distribution(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Distribution]:
        """The various channels by which a package is distributed."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        distribution : typing.Optional[typing.Iterable[global___Distribution]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["distribution",b"distribution","name",b"name"]) -> None: ...
global___PackageNote = PackageNote

class PackageOccurrence(google.protobuf.message.Message):
    """Details on how a particular software package was installed on a system."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The name of the installed package."""

    @property
    def location(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Location]:
        """Required. All of the places within the filesystem versions of this package
        have been found.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        location : typing.Optional[typing.Iterable[global___Location]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["location",b"location","name",b"name"]) -> None: ...
global___PackageOccurrence = PackageOccurrence

class Version(google.protobuf.message.Message):
    """Version contains structured information about the version of a package."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _VersionKind:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _VersionKindEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VersionKind.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        VERSION_KIND_UNSPECIFIED: Version.VersionKind.ValueType = ...  # 0
        """Unknown."""

        NORMAL: Version.VersionKind.ValueType = ...  # 1
        """A standard package version."""

        MINIMUM: Version.VersionKind.ValueType = ...  # 2
        """A special version representing negative infinity."""

        MAXIMUM: Version.VersionKind.ValueType = ...  # 3
        """A special version representing positive infinity."""

    class VersionKind(_VersionKind, metaclass=_VersionKindEnumTypeWrapper):
        """Whether this is an ordinary package version or a sentinel MIN/MAX version."""
        pass

    VERSION_KIND_UNSPECIFIED: Version.VersionKind.ValueType = ...  # 0
    """Unknown."""

    NORMAL: Version.VersionKind.ValueType = ...  # 1
    """A standard package version."""

    MINIMUM: Version.VersionKind.ValueType = ...  # 2
    """A special version representing negative infinity."""

    MAXIMUM: Version.VersionKind.ValueType = ...  # 3
    """A special version representing positive infinity."""


    EPOCH_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REVISION_FIELD_NUMBER: builtins.int
    INCLUSIVE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    FULL_NAME_FIELD_NUMBER: builtins.int
    epoch: builtins.int = ...
    """Used to correct mistakes in the version numbering scheme."""

    name: typing.Text = ...
    """Required only when version kind is NORMAL. The main part of the version
    name.
    """

    revision: typing.Text = ...
    """The iteration of the package build from the above version."""

    inclusive: builtins.bool = ...
    """Whether this version is specifying part of an inclusive range. Grafeas
    does not have the capability to specify version ranges; instead we have
    fields that specify start version and end versions. At times this is
    insufficient - we also need to specify whether the version is included in
    the range or is excluded from the range. This boolean is expected to be set
    to true when the version is included in a range.
    """

    kind: global___Version.VersionKind.ValueType = ...
    """Required. Distinguishes between sentinel MIN/MAX versions and normal
    versions.
    """

    full_name: typing.Text = ...
    """Human readable version string. This string is of the form
    <epoch>:<name>-<revision> and is only set when kind is NORMAL.
    """

    def __init__(self,
        *,
        epoch : builtins.int = ...,
        name : typing.Text = ...,
        revision : typing.Text = ...,
        inclusive : builtins.bool = ...,
        kind : global___Version.VersionKind.ValueType = ...,
        full_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["epoch",b"epoch","full_name",b"full_name","inclusive",b"inclusive","kind",b"kind","name",b"name","revision",b"revision"]) -> None: ...
global___Version = Version
