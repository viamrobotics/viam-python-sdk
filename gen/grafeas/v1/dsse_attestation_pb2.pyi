"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import grafeas.v1.common_pb2
import grafeas.v1.intoto_statement_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class DSSEAttestationNote(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class DSSEHint(google.protobuf.message.Message):
        """This submessage provides human-readable hints about the purpose of the
        authority. Because the name of a note acts as its resource reference, it is
        important to disambiguate the canonical name of the Note (which might be a
        UUID for security purposes) from "readable" names more suitable for debug
        output. Note that these hints should not be used to look up authorities in
        security sensitive contexts, such as when looking up attestations to
        verify.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        HUMAN_READABLE_NAME_FIELD_NUMBER: builtins.int
        human_readable_name: typing.Text = ...
        """Required. The human readable name of this attestation authority, for
        example "cloudbuild-prod".
        """

        def __init__(self,
            *,
            human_readable_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["human_readable_name",b"human_readable_name"]) -> None: ...

    HINT_FIELD_NUMBER: builtins.int
    @property
    def hint(self) -> global___DSSEAttestationNote.DSSEHint:
        """DSSEHint hints at the purpose of the attestation authority."""
        pass
    def __init__(self,
        *,
        hint : typing.Optional[global___DSSEAttestationNote.DSSEHint] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hint",b"hint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hint",b"hint"]) -> None: ...
global___DSSEAttestationNote = DSSEAttestationNote

class DSSEAttestationOccurrence(google.protobuf.message.Message):
    """Deprecated. Prefer to use a regular Occurrence, and populate the
    Envelope at the top level of the Occurrence.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENVELOPE_FIELD_NUMBER: builtins.int
    STATEMENT_FIELD_NUMBER: builtins.int
    @property
    def envelope(self) -> grafeas.v1.common_pb2.Envelope:
        """If doing something security critical, make sure to verify the signatures in
        this metadata.
        """
        pass
    @property
    def statement(self) -> grafeas.v1.intoto_statement_pb2.InTotoStatement: ...
    def __init__(self,
        *,
        envelope : typing.Optional[grafeas.v1.common_pb2.Envelope] = ...,
        statement : typing.Optional[grafeas.v1.intoto_statement_pb2.InTotoStatement] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["decoded_payload",b"decoded_payload","envelope",b"envelope","statement",b"statement"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["decoded_payload",b"decoded_payload","envelope",b"envelope","statement",b"statement"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["decoded_payload",b"decoded_payload"]) -> typing.Optional[typing_extensions.Literal["statement"]]: ...
global___DSSEAttestationOccurrence = DSSEAttestationOccurrence
