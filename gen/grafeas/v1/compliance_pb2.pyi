"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import grafeas.v1.severity_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ComplianceNote(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CisBenchmark(google.protobuf.message.Message):
        """A compliance check that is a CIS benchmark."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PROFILE_LEVEL_FIELD_NUMBER: builtins.int
        SEVERITY_FIELD_NUMBER: builtins.int
        profile_level: builtins.int = ...
        severity: grafeas.v1.severity_pb2.Severity.ValueType = ...
        def __init__(self,
            *,
            profile_level : builtins.int = ...,
            severity : grafeas.v1.severity_pb2.Severity.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["profile_level",b"profile_level","severity",b"severity"]) -> None: ...

    TITLE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    RATIONALE_FIELD_NUMBER: builtins.int
    REMEDIATION_FIELD_NUMBER: builtins.int
    CIS_BENCHMARK_FIELD_NUMBER: builtins.int
    SCAN_INSTRUCTIONS_FIELD_NUMBER: builtins.int
    title: typing.Text = ...
    """The title that identifies this compliance check."""

    description: typing.Text = ...
    """A description about this compliance check."""

    @property
    def version(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComplianceVersion]:
        """The OS and config versions the benchmark applies to."""
        pass
    rationale: typing.Text = ...
    """A rationale for the existence of this compliance check."""

    remediation: typing.Text = ...
    """A description of remediation steps if the compliance check fails."""

    @property
    def cis_benchmark(self) -> global___ComplianceNote.CisBenchmark: ...
    scan_instructions: builtins.bytes = ...
    """Serialized scan instructions with a predefined format."""

    def __init__(self,
        *,
        title : typing.Text = ...,
        description : typing.Text = ...,
        version : typing.Optional[typing.Iterable[global___ComplianceVersion]] = ...,
        rationale : typing.Text = ...,
        remediation : typing.Text = ...,
        cis_benchmark : typing.Optional[global___ComplianceNote.CisBenchmark] = ...,
        scan_instructions : builtins.bytes = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cis_benchmark",b"cis_benchmark","compliance_type",b"compliance_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cis_benchmark",b"cis_benchmark","compliance_type",b"compliance_type","description",b"description","rationale",b"rationale","remediation",b"remediation","scan_instructions",b"scan_instructions","title",b"title","version",b"version"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["compliance_type",b"compliance_type"]) -> typing.Optional[typing_extensions.Literal["cis_benchmark"]]: ...
global___ComplianceNote = ComplianceNote

class ComplianceVersion(google.protobuf.message.Message):
    """Describes the CIS benchmark version that is applicable to a given OS and
    os version.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CPE_URI_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    cpe_uri: typing.Text = ...
    """The CPE URI (https://cpe.mitre.org/specification/) this benchmark is
    applicable to.
    """

    version: typing.Text = ...
    """The version of the benchmark. This is set to the version of the OS-specific
    CIS document the benchmark is defined in.
    """

    def __init__(self,
        *,
        cpe_uri : typing.Text = ...,
        version : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cpe_uri",b"cpe_uri","version",b"version"]) -> None: ...
global___ComplianceVersion = ComplianceVersion

class ComplianceOccurrence(google.protobuf.message.Message):
    """An indication that the compliance checks in the associated ComplianceNote
    were not satisfied for particular resources or a specified reason.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NON_COMPLIANT_FILES_FIELD_NUMBER: builtins.int
    NON_COMPLIANCE_REASON_FIELD_NUMBER: builtins.int
    @property
    def non_compliant_files(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NonCompliantFile]: ...
    non_compliance_reason: typing.Text = ...
    def __init__(self,
        *,
        non_compliant_files : typing.Optional[typing.Iterable[global___NonCompliantFile]] = ...,
        non_compliance_reason : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["non_compliance_reason",b"non_compliance_reason","non_compliant_files",b"non_compliant_files"]) -> None: ...
global___ComplianceOccurrence = ComplianceOccurrence

class NonCompliantFile(google.protobuf.message.Message):
    """Details about files that caused a compliance check to fail."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PATH_FIELD_NUMBER: builtins.int
    DISPLAY_COMMAND_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    path: typing.Text = ...
    """Empty if `display_command` is set."""

    display_command: typing.Text = ...
    """Command to display the non-compliant files."""

    reason: typing.Text = ...
    """Explains why a file is non compliant for a CIS check."""

    def __init__(self,
        *,
        path : typing.Text = ...,
        display_command : typing.Text = ...,
        reason : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["display_command",b"display_command","path",b"path","reason",b"reason"]) -> None: ...
global___NonCompliantFile = NonCompliantFile
