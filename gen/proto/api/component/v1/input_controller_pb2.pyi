"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class InputControllerServiceGetControlsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTROLLER_FIELD_NUMBER: builtins.int
    controller: typing.Text = ...
    """Name of an input controller"""

    def __init__(self,
        *,
        controller : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["controller",b"controller"]) -> None: ...
global___InputControllerServiceGetControlsRequest = InputControllerServiceGetControlsRequest

class InputControllerServiceGetControlsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTROLS_FIELD_NUMBER: builtins.int
    @property
    def controls(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Returns a list of all the controls (buttons and axes) that are
        available to a given Input Controller
        """
        pass
    def __init__(self,
        *,
        controls : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["controls",b"controls"]) -> None: ...
global___InputControllerServiceGetControlsResponse = InputControllerServiceGetControlsResponse

class InputControllerServiceGetEventsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTROLLER_FIELD_NUMBER: builtins.int
    controller: typing.Text = ...
    """Name of an input controller"""

    def __init__(self,
        *,
        controller : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["controller",b"controller"]) -> None: ...
global___InputControllerServiceGetEventsRequest = InputControllerServiceGetEventsRequest

class InputControllerServiceGetEventsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EVENTS_FIELD_NUMBER: builtins.int
    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InputControllerServiceEvent]:
        """Returns a list of the most recent event for each control on a given InputController. Effectively provides the current "state" of all 
        buttons/axes on a given input controller
        """
        pass
    def __init__(self,
        *,
        events : typing.Optional[typing.Iterable[global___InputControllerServiceEvent]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["events",b"events"]) -> None: ...
global___InputControllerServiceGetEventsResponse = InputControllerServiceGetEventsResponse

class InputControllerServiceTriggerEventRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTROLLER_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    controller: typing.Text = ...
    """Name of an input controller"""

    @property
    def event(self) -> global___InputControllerServiceEvent:
        """Digitally assert a given event"""
        pass
    def __init__(self,
        *,
        controller : typing.Text = ...,
        event : typing.Optional[global___InputControllerServiceEvent] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event",b"event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["controller",b"controller","event",b"event"]) -> None: ...
global___InputControllerServiceTriggerEventRequest = InputControllerServiceTriggerEventRequest

class InputControllerServiceTriggerEventResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___InputControllerServiceTriggerEventResponse = InputControllerServiceTriggerEventResponse

class InputControllerServiceEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TIME_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    CONTROL_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of event"""
        pass
    event: typing.Text = ...
    """An event type (eg: ButtonPress, ButtonRelease)"""

    control: typing.Text = ...
    """A control, can be a button (eg: ButtonSouth) or an axis (eg: AbsoluteX)"""

    value: builtins.float = ...
    """0 or 1 for buttons, -1.0 to +1.0 for axes"""

    def __init__(self,
        *,
        time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        event : typing.Text = ...,
        control : typing.Text = ...,
        value : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["control",b"control","event",b"event","time",b"time","value",b"value"]) -> None: ...
global___InputControllerServiceEvent = InputControllerServiceEvent

class InputControllerServiceStreamEventsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Events(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CONTROL_FIELD_NUMBER: builtins.int
        EVENTS_FIELD_NUMBER: builtins.int
        CANCELLED_EVENTS_FIELD_NUMBER: builtins.int
        control: typing.Text = ...
        """Name of a control (button or axis)"""

        @property
        def events(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Specify which event types to recieve events for
            To Do (FA): Right now this can be an empty list, but we should error in this case as opening a stream with no messages is expensive
            """
            pass
        @property
        def cancelled_events(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Specify which event types to stop recieving events for
            This can be an empty list
            """
            pass
        def __init__(self,
            *,
            control : typing.Text = ...,
            events : typing.Optional[typing.Iterable[typing.Text]] = ...,
            cancelled_events : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["cancelled_events",b"cancelled_events","control",b"control","events",b"events"]) -> None: ...

    CONTROLLER_FIELD_NUMBER: builtins.int
    EVENTS_FIELD_NUMBER: builtins.int
    controller: typing.Text = ...
    """Name of an input controller"""

    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InputControllerServiceStreamEventsRequest.Events]:
        """A list of Events"""
        pass
    def __init__(self,
        *,
        controller : typing.Text = ...,
        events : typing.Optional[typing.Iterable[global___InputControllerServiceStreamEventsRequest.Events]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["controller",b"controller","events",b"events"]) -> None: ...
global___InputControllerServiceStreamEventsRequest = InputControllerServiceStreamEventsRequest

class InputControllerServiceStreamEventsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EVENT_FIELD_NUMBER: builtins.int
    @property
    def event(self) -> global___InputControllerServiceEvent:
        """Event for a controller"""
        pass
    def __init__(self,
        *,
        event : typing.Optional[global___InputControllerServiceEvent] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event",b"event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event",b"event"]) -> None: ...
global___InputControllerServiceStreamEventsResponse = InputControllerServiceStreamEventsResponse
