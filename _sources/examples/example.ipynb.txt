{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Example usage\n",
    "\n",
    "The Viam SDK can be used in three ways:\n",
    "1. As a client to connect to a (remote or local) robot\n",
    "2. Integrate custom resources to a robot\n",
    "3. As a client to connect to app.viam.com to upload and retrieve data\n",
    "\n",
    "## Connect as a client\n",
    "\n",
    "To connect to a robot as a client, you should instantiate an instance of a `RobotClient`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "tags": [
     "remove-input"
    ]
   },
   "outputs": [],
   "source": [
    "# Please excuse the boilerplate\n",
    "%autoawait asyncio\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [],
   "source": [
    "from viam import logging\n",
    "from viam.robot.client import RobotClient\n",
    "from viam.rpc.dial import DialOptions\n",
    "\n",
    "async def connect() -> RobotClient:\n",
    "    options = RobotClient.Options(\n",
    "        dial_options=DialOptions(insecure=True, disable_webrtc=True),\n",
    "        log_level=logging.FATAL\n",
    "    )\n",
    "    return await RobotClient.at_address('localhost:9091', options)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can also create a `RobotClient` by providing an existing connection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"arm\"\n",
      "name: \"arm0\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"audio_input\"\n",
      "name: \"audio_input0\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"base\"\n",
      "name: \"base0\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"board\"\n",
      "name: \"board\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"camera\"\n",
      "name: \"camera0\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"gantry\"\n",
      "name: \"gantry0\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"gripper\"\n",
      "name: \"gripper0\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"motor\"\n",
      "name: \"motor0\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"movement_sensor\"\n",
      "name: \"movement_sensor0\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"pose_tracker\"\n",
      "name: \"pose_tracker0\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"sensor\"\n",
      "name: \"sensor0\"\n",
      ", namespace: \"rdk\"\n",
      "type: \"component\"\n",
      "subtype: \"servo\"\n",
      "name: \"servo0\"\n",
      "]\n"
     ]
    }
   ],
   "source": [
    "from viam import logging\n",
    "from viam.robot.client import RobotClient\n",
    "from viam.rpc.dial import DialOptions, dial\n",
    "\n",
    "async def connect_with_channel() -> RobotClient:\n",
    "    async with await dial('localhost:9091', DialOptions(insecure=True, disable_webrtc=True)) as channel:\n",
    "        return await RobotClient.with_channel(channel, RobotClient.Options(refresh_interval=10, log_level=logging.FATAL))\n",
    "\n",
    "robot = await connect_with_channel()\n",
    "print(robot.resource_names)\n",
    "await robot.close()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Once you have a connected `RobotClient`, you can then obtain the robot's components by their name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [],
   "source": [
    "from viam.components.camera import Camera\n",
    "from viam.media.video import CameraMimeType\n",
    "\n",
    "robot = await connect_with_channel()\n",
    "camera = Camera.from_robot(robot, \"camera0\")\n",
    "image = await camera.get_image(CameraMimeType.JPEG)\n",
    "image.save(\"foo.png\")\n",
    "\n",
    "# Don't forget to close the robot when you're done!\n",
    "await robot.close()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "tags": [
     "hide-output",
     "remove-input"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<PIL.PngImagePlugin.PngImageFile image mode=RGB size=642x548>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(image)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can also use the `RobotClient` to make service calls to the connected robot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from viam.services.vision import VisionClient\n",
    "\n",
    "async def vision():\n",
    "    robot = await connect_with_channel()\n",
    "    vision = VisionClient.from_robot(robot)\n",
    "    detections = await vision.get_detections_from_camera(\"camera_1\", \"detector_1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "At the end, don't forget to close the connection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "async def cleanup():\n",
    "    await robot.close()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create custom modules\n",
    "Make a modular resource from an existing resource API. In this document, we will be going over subclassing existing resource APIs. To learn more about creating a new resource API, see the [Viam docs](https://docs.viam.com/extend/modular-resources/#code-your-module), and [complex module example](https://github.com/viamrobotics/viam-python-sdk/tree/main/examples/complex_module).\n",
    "\n",
    "The code below resembles the [simple module example](https://github.com/viamrobotics/viam-python-sdk/tree/main/examples/simple_module), so look there for the final, completed modular resource.\n",
    "\n",
    "The steps required in creating a modular resource and connecting it to a robot are:\n",
    "1. **Subclass a resource and implement desired functions.** This will be your custom resource model.\n",
    "    - For functions that you do not wish to implement, you must at least define them by putting `pass` or `raise NotImplementedError()` in the function.\n",
    "2. **Register a new model.** This will register the new modular resource model into the `Registry`.\n",
    "3. **Create an entry point file.** Create and start the new module.\n",
    "4. **Make the module executable.** This allows `viam-server` to access and execute the module.\n",
    "5. **Configure a modular resource.** Use the new module and instantiate a new resource to a robot!\n",
    "\n",
    "Knowing this, let's implement a custom resource.\n",
    "    \n",
    "### 1. Subclass a resource\n",
    "The SDK provides a wide array of resource APIs to customize. You can browse through the API Reference to see the available resources. Subclass a resource and implement the required functions. You may leave the other methods unimplemented by putting `pass` or `raise NotImplementedError()` in the function.\n",
    "\n",
    "This example uses a `Sensor` as an example.\n",
    "\n",
    "Create a sensor that returns the Wi-Fi signal of a Pi. Start by creating a directory on the Pi named `wifi-sensor`, then create a directory inside the `wifi-sensor` directory named `src`. Then, inside the `src` directory, create a new file named `wifi_sensor.py`.\n",
    "Copy the code below into your `wifi_sensor.py` file:\n",
    "\n",
    "```python\n",
    "# wifi-sensor/src/wifi_sensor.py\n",
    "import asyncio\n",
    "from typing import Any, Dict, Mapping, Optional\n",
    "\n",
    "from viam.components.sensor import Sensor\n",
    "\n",
    "\n",
    "class MySensor(Sensor):\n",
    "    # Subclass the Viam Sensor component and implement the required functions\n",
    "    async def get_readings(self, extra: Optional[Dict[str, Any]] = None, **kwargs) -> Mapping[str, Any]:\n",
    "        with open(\"/proc/net/wireless\") as wifi_stats:\n",
    "            content = wifi_stats.readlines()\n",
    "        wifi_signal = [x for x in content[2].split(\" \") if x != \"\"]\n",
    "        return {\"link\": wifi_signal[2], \"level\": wifi_signal[3], \"noise\": wifi_signal[4]}\n",
    "\n",
    "# Anything below this line is optional and will be replaced later, but may come in handy for debugging and testing.\n",
    "# To use, call `python wifi_sensor.py` in the command line while in the `src` directory.\n",
    "async def main():\n",
    "    wifi=MySensor(name=\"wifi\")\n",
    "    signal = await wifi.get_readings()\n",
    "    print(signal)\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    asyncio.run(main())\n",
    "```\n",
    "\n",
    "You can view more component implementations in the [examples](https://github.com/viamrobotics/python-sdk/blob/main/examples/server/v1/components.py)."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Register the new modular resource\n",
    "Now that we've created the modular resource model, we must register it to the registry.\n",
    "\n",
    "Define a [`Model`](https://docs.viam.com/extend/modular-resources/#models) name and a creator function in the resource. A creator function is a function that can create a resource given a config and map of dependencies.\n",
    "\n",
    "To define a creator function and `Model` in `wifi_sensor.py`, import `ComponentConfig`, `ResourceName`, `ResourceBase`, `Model`, and `ModelFamily` from the relative viam packages. Please note that the import packages also have to be changed to include `Mapping` and `ClassVar` from `typing` and `Self` from `typing_extensions`. The changes can be seen in the example below.\n",
    "\n",
    "In your `wifi_sensor.py`, define a new `MODEL` variable in your `MySensor` class, shown below. Then add a `new()` function that will act as our creator function. We get the name from the config and return the resource. We can also assign class variables based on what the config has. \n",
    "\n",
    "```python\n",
    "# wifi-sensor/src/wifi_sensor.py\n",
    "import asyncio\n",
    "from typing import Any, ClassVar, Dict, Mapping, Optional\n",
    "from typing_extensions import Self\n",
    "\n",
    "from viam.components.sensor import Sensor\n",
    "from viam.operations import run_with_operation\n",
    "from viam.proto.app.robot import ComponentConfig\n",
    "from viam.proto.common import ResourceName\n",
    "from viam.resource.base import ResourceBase\n",
    "from viam.resource.types import Model, ModelFamily\n",
    "\n",
    "class MySensor(Sensor):\n",
    "    # Subclass the Viam Sensor component and implement the required functions\n",
    "    MODEL: ClassVar[Model] = Model(ModelFamily(\"acme\",\"wifi_sensor\"), \"linux\")\n",
    "\n",
    "    @classmethod\n",
    "    def new(cls, config: ComponentConfig, dependencies: Mapping[ResourceName, ResourceBase]) -> Self:\n",
    "        sensor = cls(config.name)\n",
    "        return sensor\n",
    "```\n",
    "\n",
    "After the resource model has a defined model and creator function, the resource model must be registered to the `Registry`. This can be done using [`register_resource_creator()`](https://python.viam.dev/autoapi/viam/resource/registry/index.html#viam.resource.registry.Registry.register_resource_creator) and passing a [`ResourceCreatorRegistration`](https://python.viam.dev/autoapi/viam/resource/registry/index.html#viam.resource.registry.ResourceCreatorRegistration) object with the creator function as a parameter.\n",
    "\n",
    "In the main function of `wifi_sensor.py`, call `Registry.register_resource_creator()` with the subtype of the resource that was subclassed, the model name, and a `ResourceCreatorRegistration` object with the creator function defined in the modular resource. In a more complex module, it makes sense to call the function in an `__init__.py` file in the same folder as the new resource model. See [here](https://github.com/viamrobotics/viam-python-sdk/tree/main/examples/complex_module/src/arm/__init__.py) for an example.\n",
    "\n",
    "```python\n",
    "# wifi-sensor/src/wifi_sensor.py\n",
    "from viam.resource.registry import Registry, ResourceCreatorRegistration\n",
    "from viam.components.sensor import Sensor\n",
    "\n",
    "async def main():\n",
    "    Registry.register_resource_creator(Sensor.SUBTYPE, MySensor.MODEL, ResourceCreatorRegistration(MySensor.new))\n",
    "```\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "### 3. Create an entry point file\n",
    "The module now has to be created and started. In the `wifi_sensor.py` file, update the main function to the following. In a more complex module, it makes sense to create an entirely new entrypoint file. See [here](https://github.com/viamrobotics/viam-python-sdk/tree/main/examples/complex_module/src/main.py) for an example.\n",
    "\n",
    "```python\n",
    "# wifi-sensor/src/wifi_sensor.py\n",
    "import asyncio\n",
    "\n",
    "from viam.module.module import Module\n",
    "from viam.components.sensor import Sensor\n",
    "from viam.resource.registry import Registry, ResourceCreatorRegistration\n",
    "\n",
    "\n",
    "async def main():\n",
    "    \"\"\"This function creates and starts a new module, after adding all desired resource model.\n",
    "    Resource creators must be registered to the resource registry before the module adds the resource model.\n",
    "    \"\"\"\n",
    "    Registry.register_resource_creator(Sensor.SUBTYPE, MySensor.MODEL, ResourceCreatorRegistration(MySensor.new))\n",
    "\n",
    "    module = Module.from_args()\n",
    "    module.add_model_from_registry(Sensor.SUBTYPE, MySensor.MODEL)\n",
    "    await module.start()\n",
    "\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    asyncio.run(main())\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4. Make the module executable\n",
    "To add the module to your robot, you must provide it as an [executable file](https://docs.viam.com/extend/modular-resources/#make-your-module-executable) that [`viam-server` can access](https://docs.viam.com/extend/modular-resources/#make-sure-viam-server-can-access-your-executable).\n",
    "\n",
    "Dependencies for the module (including Viam SDK) have to be installed. In the `wifi-sensor` directory, create a new file called `requirements.txt` that has all your dependencies. For this example, add `viam-sdk` in `requirements.txt`.\n",
    "\n",
    "```\n",
    "# add a version if viam should be pinned to a specific version\n",
    "viam-sdk\n",
    "```\n",
    "\n",
    "One option with the Python SDK is to create a new shell script (`.sh`) that runs your module, which can also be used to install the dependencies. For example, in the `wifi-sensor` directory, add an `run.sh` file:\n",
    "\n",
    "```sh\n",
    "#!/bin/sh\n",
    "cd `dirname $0`\n",
    "\n",
    "# Create a virtual environment to run our code\n",
    "VENV_NAME=\"venv\"\n",
    "PYTHON=\"$VENV_NAME/bin/python\"\n",
    "\n",
    "python3 -m venv $VENV_NAME\n",
    "$PYTHON -m pip install -r requirements.txt -U # remove -U if viam-sdk should not be upgraded whenever possible\n",
    "\n",
    "\n",
    "# Be sure to use `exec` so that termination signals reach the python process,\n",
    "# or handle forwarding termination signals manually\n",
    "exec $PYTHON src/wifi-sensor.py $@\n",
    "```\n",
    "\n",
    "**Please note that a more complex module should be run as a Python module, meaning that the file extension `.py` has to be omitted. See [here](https://github.com/viamrobotics/viam-python-sdk/tree/main/examples/complex_module/run.sh) for an example.** \n",
    "\n",
    "To make this shell script executable, run this in the Terminal:\n",
    "\n",
    "```sudo chmod +x <FILEPATH>/<FILENAME>```\n",
    "\n",
    "`<FILENAME>` would be `run.sh`.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5. Configure a modular resource\n",
    "**NOTE:** *These instructions are for local development. Soon we will launch a `Registry` which will allow users to upload modules to app.viam.com directly. We will update the documentation with instructions on how to do that shortly.*\n",
    "\n",
    "[Configure your new module](https://docs.viam.com/extend/modular-resources/#configure-your-module) on your robot by navigating to the **Config** tab of the robot's page on the Viam app, then click on the **Modules** subtab. Add the name of your module and the executable path. For our example, the path would be `<path-on-your-filesystem>/wifi-sensor/run.sh`.\n",
    "\n",
    "Once you have configured a module as part of your robot configuration, [configure your modular resource](https://docs.viam.com/extend/modular-resources/#configure-your-modular-resource) made available by that module by adding new components or services configured with your modular resources' new type or model. To instantiate a new resource from your module, specify the `type`, `model`, and `name` of your modular resource. This is a JSON example:\n",
    "\n",
    "```json\n",
    "{\n",
    "  \"components\": [\n",
    "    {\n",
    "      \"model\": \"acme:wifi_sensor:linux\",\n",
    "      \"attributes\": {},\n",
    "      \"depends_on\": [],\n",
    "      \"name\": \"my-sensor\",\n",
    "      \"type\": \"sensor\"\n",
    "    }\n",
    "  ],\n",
    "  \"modules\": [\n",
    "    {\n",
    "      \"executable_path\": \"<path-on-your-filesystem>/wifi-sensor/run.sh\",\n",
    "      \"name\": \"wifi_sensor\"\n",
    "    }\n",
    "  ]\n",
    "}\n",
    "```\n"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Custom Modular Arm Example\n",
    "The following is an example of how to implement a custom modular arm. For further instructions, read the detailed `Sensor` example above. Our custom Arm will be extremely simple. Please note that the minimum set of endpoints you need to implement for an arm are `GetKinematics`, `GetJointPositions`, and `MoveToJointPositions`.\n",
    "\n",
    "This arm example contains a minimal kinematics model. For a full model, take a look [here](https://github.com/viamrobotics/viam-python-sdk/blob/main/complex_module/src/arm/my_arm_kinematics.json).\n",
    "\n",
    "Subclassing the `Arm` component and implementing the required functions:\n",
    "```python\n",
    "# modular-arm/src/my_modular_arm.py\n",
    "import asyncio\n",
    "import os\n",
    "from typing import Any, ClassVar, Dict, Mapping, Optional, Tuple\n",
    "from typing_extensions import Self\n",
    "\n",
    "from viam.components.arm import Arm, JointPositions, KinematicsFileFormat, Pose\n",
    "from viam.module.module import Module\n",
    "from viam.operations import run_with_operation\n",
    "from viam.proto.app.robot import ComponentConfig\n",
    "from viam.proto.common import ResourceName\n",
    "from viam.resource.base import ResourceBase\n",
    "from viam.resource.registry import Registry, ResourceCreatorRegistration\n",
    "from viam.resource.types import Model, ModelFamily\n",
    "\n",
    "\n",
    "class MyModularArm(Arm):\n",
    "    # Subclass the Viam Arm component and implement the required functions\n",
    "    MODEL: ClassVar[Model] = Model(ModelFamily(\"acme\", \"demo\"), \"myarm\")\n",
    "\n",
    "    def __init__(self, name: str):\n",
    "        # Starting joint positions\n",
    "        self.joint_positions = JointPositions(values=[0, 0, 0, 0, 0, 0])\n",
    "\n",
    "\n",
    "        # Minimal working kinematics\n",
    "        self.kinematics = json.dumps(\n",
    "            {\n",
    "                \"name\": \"MyArm\",\n",
    "                \"links\": [{\"id\": \"base\", \"parent\": \"world\", \"translation\": {\"x\": 0, \"y\": 0, \"z\": 0}}],\n",
    "                \"joints\": [\n",
    "                    {\"id\": \"waist\", \"type\": \"revolute\", \"parent\": \"base\", \"axis\": {\"x\": 0, \"y\": 0, \"z\": 1}, \"max\": 359, \"min\": -359}\n",
    "                ],\n",
    "            }\n",
    "        ).encode(\"utf-8\")\n",
    "        super().__init__(name)\n",
    "\n",
    "    @classmethod\n",
    "    def new(cls, config: ComponentConfig, dependencies: Mapping[ResourceName, ResourceBase]) -> Self:\n",
    "        arm = cls(config.name)\n",
    "        return arm\n",
    "\n",
    "    async def get_end_position(self, extra: Optional[Dict[str, Any]] = None, **kwargs) -> Pose:\n",
    "        raise NotImplementedError()\n",
    "\n",
    "    async def move_to_position(self, pose: Pose, extra: Optional[Dict[str, Any]] = None, **kwargs):\n",
    "        raise NotImplementedError()\n",
    "\n",
    "    async def get_joint_positions(self, extra: Optional[Dict[str, Any]] = None, **kwargs) -> JointPositions:\n",
    "        return self.joint_positions\n",
    "\n",
    "    @run_with_operation\n",
    "    async def move_to_joint_positions(self, positions: JointPositions, extra: Optional[Dict[str, Any]] = None, **kwargs):\n",
    "        operation = self.get_operation(kwargs)\n",
    "\n",
    "        self.is_stopped = False\n",
    "\n",
    "        # Simulate the length of time it takes for the arm to move to its new joint position\n",
    "        for x in range(10):\n",
    "            await asyncio.sleep(1)\n",
    "\n",
    "            # Check if the operation is cancelled and, if it is, stop the arm's motion\n",
    "            if await operation.is_cancelled():\n",
    "                await self.stop()\n",
    "                break\n",
    "        \n",
    "        self.joint_positions = positions\n",
    "        self.is_stopped = True\n",
    "\n",
    "    async def stop(self, extra: Optional[Dict[str, Any]] = None, **kwargs):\n",
    "        self.is_stopped = True\n",
    "\n",
    "    async def is_moving(self) -> bool:\n",
    "        return not self.is_stopped\n",
    "\n",
    "    async def get_kinematics(self, extra: Optional[Dict[str, Any]] = None, **kwargs) -> Tuple[KinematicsFileFormat.ValueType, bytes]:\n",
    "        return KinematicsFileFormat.KINEMATICS_FILE_FORMAT_SVA, self.kinematics\n",
    "\n",
    "async def main():\n",
    "    \"\"\"This function creates and starts a new module, after adding all desired resource model.\n",
    "    Resource creators must be registered to the resource registry before the module adds the resource model.\n",
    "    \"\"\"\n",
    "    Registry.register_resource_creator(Arm.SUBTYPE, MyModularArm.MODEL, ResourceCreatorRegistration(MyModularArm.new))\n",
    "    module = Module.from_args()\n",
    "    module.add_model_from_registry(Arm.SUBTYPE, MyModularArm.MODEL)\n",
    "    await module.start()\n",
    "\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    asyncio.run(main())\n",
    "```\n",
    "\n",
    "Lastly, make the module executable and configure the module on your robot."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create custom remotes\n",
    "\n",
    "**CAUTION** *[Modular resources](https://python.viam.dev/examples/example.html#create-custom-modules) are the preferred method of creating custom resource implementations for the Python SDK unless you are hosting viam-server on a non-Linux system or have another issue with compilation.*\n",
    "\n",
    "While the main RDK is written in golang, you can create custom components in python and connect them to a robot as a [`remote` component](https://docs.viam.com/extend/custom-components-remotes/). This allows you to extend the functionality of a robot, or even create an entire robot exclusively in python.\n",
    "\n",
    "To create a custom component and connect it to the RDK:\n",
    "1. **Subclass a component and implement desired functions**. This will be your custom component.\n",
    "    - For functions you do not wish to implement, you must at least define them by putting `pass` or `raiseNotImplementedError()` in the function.\n",
    "1. **Create an `rpc.server.Server` instance and register the custom component**. This is the `RPC` server that enables communication with your custom component.\n",
    "1. **Start the `Server` and register the running server as a remote**. Registering this `RPC` server as a remote allows the RDK to communicate with the server.\n",
    "\n",
    "\n",
    "### 1. Subclass a component\n",
    "\n",
    "The SDK provides a wide array of components to customize. You can browse through the API Reference to see all of them, but for now we'll use an `Arm` as an example. Our custom Arm will be extremely simple -- it will only save and return the positions provided to it.\n",
    "\n",
    "Let's start by creating a directory called `my-python-robot`. Inside of that directory, create a file called `my_cool_arm.py`. The contents of `my_cool_arm.py` should be as follows:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "tags": [
     "remove-input"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">pre { line-height: 125%; }\n",
       "td.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\n",
       "span.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\n",
       "td.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n",
       "span.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n",
       ".highlight .hll { background-color: #ffffcc }\n",
       ".highlight { background: #f8f8f8; }\n",
       ".highlight .c { color: #3D7B7B; font-style: italic } /* Comment */\n",
       ".highlight .err { border: 1px solid #FF0000 } /* Error */\n",
       ".highlight .k { color: #008000; font-weight: bold } /* Keyword */\n",
       ".highlight .o { color: #666666 } /* Operator */\n",
       ".highlight .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */\n",
       ".highlight .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */\n",
       ".highlight .cp { color: #9C6500 } /* Comment.Preproc */\n",
       ".highlight .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */\n",
       ".highlight .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */\n",
       ".highlight .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */\n",
       ".highlight .gd { color: #A00000 } /* Generic.Deleted */\n",
       ".highlight .ge { font-style: italic } /* Generic.Emph */\n",
       ".highlight .gr { color: #E40000 } /* Generic.Error */\n",
       ".highlight .gh { color: #000080; font-weight: bold } /* Generic.Heading */\n",
       ".highlight .gi { color: #008400 } /* Generic.Inserted */\n",
       ".highlight .go { color: #717171 } /* Generic.Output */\n",
       ".highlight .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\n",
       ".highlight .gs { font-weight: bold } /* Generic.Strong */\n",
       ".highlight .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\n",
       ".highlight .gt { color: #0044DD } /* Generic.Traceback */\n",
       ".highlight .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\n",
       ".highlight .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\n",
       ".highlight .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\n",
       ".highlight .kp { color: #008000 } /* Keyword.Pseudo */\n",
       ".highlight .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\n",
       ".highlight .kt { color: #B00040 } /* Keyword.Type */\n",
       ".highlight .m { color: #666666 } /* Literal.Number */\n",
       ".highlight .s { color: #BA2121 } /* Literal.String */\n",
       ".highlight .na { color: #687822 } /* Name.Attribute */\n",
       ".highlight .nb { color: #008000 } /* Name.Builtin */\n",
       ".highlight .nc { color: #0000FF; font-weight: bold } /* Name.Class */\n",
       ".highlight .no { color: #880000 } /* Name.Constant */\n",
       ".highlight .nd { color: #AA22FF } /* Name.Decorator */\n",
       ".highlight .ni { color: #717171; font-weight: bold } /* Name.Entity */\n",
       ".highlight .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */\n",
       ".highlight .nf { color: #0000FF } /* Name.Function */\n",
       ".highlight .nl { color: #767600 } /* Name.Label */\n",
       ".highlight .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */\n",
       ".highlight .nt { color: #008000; font-weight: bold } /* Name.Tag */\n",
       ".highlight .nv { color: #19177C } /* Name.Variable */\n",
       ".highlight .ow { color: #AA22FF; font-weight: bold } /* Operator.Word */\n",
       ".highlight .w { color: #bbbbbb } /* Text.Whitespace */\n",
       ".highlight .mb { color: #666666 } /* Literal.Number.Bin */\n",
       ".highlight .mf { color: #666666 } /* Literal.Number.Float */\n",
       ".highlight .mh { color: #666666 } /* Literal.Number.Hex */\n",
       ".highlight .mi { color: #666666 } /* Literal.Number.Integer */\n",
       ".highlight .mo { color: #666666 } /* Literal.Number.Oct */\n",
       ".highlight .sa { color: #BA2121 } /* Literal.String.Affix */\n",
       ".highlight .sb { color: #BA2121 } /* Literal.String.Backtick */\n",
       ".highlight .sc { color: #BA2121 } /* Literal.String.Char */\n",
       ".highlight .dl { color: #BA2121 } /* Literal.String.Delimiter */\n",
       ".highlight .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\n",
       ".highlight .s2 { color: #BA2121 } /* Literal.String.Double */\n",
       ".highlight .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */\n",
       ".highlight .sh { color: #BA2121 } /* Literal.String.Heredoc */\n",
       ".highlight .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */\n",
       ".highlight .sx { color: #008000 } /* Literal.String.Other */\n",
       ".highlight .sr { color: #A45A77 } /* Literal.String.Regex */\n",
       ".highlight .s1 { color: #BA2121 } /* Literal.String.Single */\n",
       ".highlight .ss { color: #19177C } /* Literal.String.Symbol */\n",
       ".highlight .bp { color: #008000 } /* Name.Builtin.Pseudo */\n",
       ".highlight .fm { color: #0000FF } /* Name.Function.Magic */\n",
       ".highlight .vc { color: #19177C } /* Name.Variable.Class */\n",
       ".highlight .vg { color: #19177C } /* Name.Variable.Global */\n",
       ".highlight .vi { color: #19177C } /* Name.Variable.Instance */\n",
       ".highlight .vm { color: #19177C } /* Name.Variable.Magic */\n",
       ".highlight .il { color: #666666 } /* Literal.Number.Integer.Long */</style><div class=\"highlight\"><pre><span></span><span class=\"c1\"># my-python-robot/my_cool_arm.py</span>\n",
       "\n",
       "<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n",
       "<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n",
       "<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span>\n",
       "\n",
       "<span class=\"kn\">from</span> <span class=\"nn\">viam.components.arm</span> <span class=\"kn\">import</span> <span class=\"n\">Arm</span><span class=\"p\">,</span> <span class=\"n\">JointPositions</span><span class=\"p\">,</span> <span class=\"n\">KinematicsFileFormat</span><span class=\"p\">,</span> <span class=\"n\">Pose</span>\n",
       "<span class=\"kn\">from</span> <span class=\"nn\">viam.operations</span> <span class=\"kn\">import</span> <span class=\"n\">run_with_operation</span>\n",
       "\n",
       "\n",
       "<span class=\"k\">class</span> <span class=\"nc\">MyCoolArm</span><span class=\"p\">(</span><span class=\"n\">Arm</span><span class=\"p\">):</span>\n",
       "    <span class=\"c1\"># Subclass the Viam Arm component and implement the required functions</span>\n",
       "\n",
       "    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n",
       "        <span class=\"c1\"># Starting position</span>\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">Pose</span><span class=\"p\">(</span>\n",
       "            <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n",
       "            <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n",
       "            <span class=\"n\">z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n",
       "            <span class=\"n\">o_x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n",
       "            <span class=\"n\">o_y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n",
       "            <span class=\"n\">o_z</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n",
       "            <span class=\"n\">theta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n",
       "        <span class=\"p\">)</span>\n",
       "\n",
       "        <span class=\"c1\"># Starting joint positions</span>\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">joint_positions</span> <span class=\"o\">=</span> <span class=\"n\">JointPositions</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stopped</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n",
       "\n",
       "        <span class=\"c1\"># Minimal working kinematics model</span>\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kinematics</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span>\n",
       "            <span class=\"p\">{</span>\n",
       "                <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MyArm&quot;</span><span class=\"p\">,</span>\n",
       "                <span class=\"s2\">&quot;links&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;base&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;parent&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;world&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;translation&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;y&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;z&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">}}],</span>\n",
       "                <span class=\"s2\">&quot;joints&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n",
       "                    <span class=\"p\">{</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;waist&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;revolute&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;parent&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;base&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;axis&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;y&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;z&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"s2\">&quot;max&quot;</span><span class=\"p\">:</span> <span class=\"mi\">359</span><span class=\"p\">,</span> <span class=\"s2\">&quot;min&quot;</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">359</span><span class=\"p\">}</span>\n",
       "                <span class=\"p\">],</span>\n",
       "            <span class=\"p\">}</span>\n",
       "        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n",
       "        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n",
       "\n",
       "    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get_end_position</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Pose</span><span class=\"p\">:</span>\n",
       "        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span>\n",
       "\n",
       "    <span class=\"nd\">@run_with_operation</span>\n",
       "    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">move_to_position</span><span class=\"p\">(</span>\n",
       "        <span class=\"bp\">self</span><span class=\"p\">,</span>\n",
       "        <span class=\"n\">pose</span><span class=\"p\">:</span> <span class=\"n\">Pose</span><span class=\"p\">,</span>\n",
       "        <span class=\"n\">extra</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n",
       "        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n",
       "    <span class=\"p\">):</span>\n",
       "        <span class=\"n\">operation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_operation</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n",
       "\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stopped</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">pose</span>\n",
       "\n",
       "        <span class=\"c1\"># Simulate the length of time it takes for the arm to move to its new position</span>\n",
       "        <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n",
       "            <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n",
       "\n",
       "            <span class=\"c1\"># Check if the operation is cancelled and, if it is, stop the arm&#39;s motion</span>\n",
       "            <span class=\"k\">if</span> <span class=\"k\">await</span> <span class=\"n\">operation</span><span class=\"o\">.</span><span class=\"n\">is_cancelled</span><span class=\"p\">():</span>\n",
       "                <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n",
       "                <span class=\"k\">break</span>\n",
       "\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stopped</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n",
       "\n",
       "    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get_joint_positions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">JointPositions</span><span class=\"p\">:</span>\n",
       "        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">joint_positions</span>\n",
       "\n",
       "    <span class=\"nd\">@run_with_operation</span>\n",
       "    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">move_to_joint_positions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">positions</span><span class=\"p\">:</span> <span class=\"n\">JointPositions</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n",
       "        <span class=\"n\">operation</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_operation</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n",
       "\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stopped</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">joint_positions</span> <span class=\"o\">=</span> <span class=\"n\">positions</span>\n",
       "\n",
       "        <span class=\"c1\"># Simulate the length of time it takes for the arm to move to its new joint position</span>\n",
       "        <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n",
       "            <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n",
       "\n",
       "            <span class=\"c1\"># Check if the operation is cancelled and, if it is, stop the arm&#39;s motion</span>\n",
       "            <span class=\"k\">if</span> <span class=\"k\">await</span> <span class=\"n\">operation</span><span class=\"o\">.</span><span class=\"n\">is_cancelled</span><span class=\"p\">():</span>\n",
       "                <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n",
       "                <span class=\"k\">break</span>\n",
       "\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stopped</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n",
       "\n",
       "    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">stop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n",
       "        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stopped</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n",
       "\n",
       "    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">is_moving</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n",
       "        <span class=\"k\">return</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_stopped</span>\n",
       "\n",
       "    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get_kinematics</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">KinematicsFileFormat</span><span class=\"o\">.</span><span class=\"n\">ValueType</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">]:</span>\n",
       "        <span class=\"k\">return</span> <span class=\"n\">KinematicsFileFormat</span><span class=\"o\">.</span><span class=\"n\">KINEMATICS_FILE_FORMAT_SVA</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kinematics</span>\n",
       "</pre></div>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from pygments import highlight\n",
    "from pygments.lexers import PythonLexer\n",
    "from pygments.formatters import HtmlFormatter\n",
    "import IPython\n",
    "with open('my_cool_arm.py') as f:\n",
    "    code = f.read()\n",
    "\n",
    "formatter = HtmlFormatter()\n",
    "IPython.display.HTML('<style type=\"text/css\">{}</style>{}'.format(\n",
    "    formatter.get_style_defs('.highlight'),\n",
    "    highlight(code, PythonLexer(), formatter)))"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can view more component implementations in the [examples](https://github.com/viamrobotics/python-sdk/blob/main/examples/server/v1/components.py).\n",
    "\n",
    "This arm example contains a minimal kinematics model. For a full model, take a look [here](https://github.com/viamrobotics/viam-python-sdk/blob/main/complex_module/src/arm/my_arm_kinematics.json)."
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Register the custom component\n",
    "\n",
    "Now that we've created the custom component, we must register it so that it will be visible to any robots connecting to it. This is done by creating an `RPC` server and adding `MyCoolArm` as a connected component. This `RPC` server will receive gRPC requests from the Viam Server or any other connections and forward those requests to your custom component.\n",
    "\n",
    "In the same `my-python-robot` directory, create a new file called `main.py`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/vh/04mycgp163125hlq8k9bkl8w0000gn/T/ipykernel_50114/2037726754.py:15: RuntimeWarning: coroutine 'main' was never awaited\n",
      "  pass\n",
      "RuntimeWarning: Enable tracemalloc to get the object allocation traceback\n"
     ]
    }
   ],
   "source": [
    "# my-python-robot/main.py\n",
    "\n",
    "import asyncio\n",
    "from viam.rpc.server import Server\n",
    "\n",
    "from my_cool_arm import MyCoolArm\n",
    "\n",
    "async def main():\n",
    "    srv = Server([MyCoolArm('my-arm')])\n",
    "    await srv.serve()\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    try:\n",
    "        asyncio.run(main())\n",
    "    except:\n",
    "        pass"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. Start the Server and add it as a Remote\n",
    "\n",
    "Now that we have a server that knows about our custom Arm component, we need to start the server so it can receive gRPC calls. Once it's started, we can then register this server as a remote.\n",
    "\n",
    "```python3\n",
    "# my-python-robot/main.py\n",
    "\n",
    "async def main():\n",
    "  ...\n",
    "  await srv.serve()\n",
    "```\n",
    "**NB**: When you call `srv.serve()`, the default host and port is `localhost:9090`. This can be changed by passing in a `host` and/or `port` parameter to the `serve` function.\n",
    "\n",
    "To use this custom server as part of a larger robot, you’ll want to add it as a `remote` in the config for your main part.\n",
    "```json\n",
    "[\n",
    "    {\n",
    "      \"name\": \"my-cool-python-components\", // The name of the remote, can be anything\n",
    "      \"insecure\": true,                    // Whether this connection should use SSL\n",
    "      \"address\": \"localhost:9090\"          // The location of the remote robot\n",
    "    }\n",
    "  ]\n",
    "```\n",
    "\n",
    "And to ensure that the python server starts up with the rest of the robot, you can add it as a process. \n",
    "```json\n",
    "[\n",
    "  {\n",
    "    \"id\": \"my-python-server-process\",\n",
    "    \"log\": true,\n",
    "    \"name\": \"python\",\n",
    "    \"args\": [\n",
    "      \"/home/pi/my-python-robot/main.py\"\n",
    "    ]\n",
    "  }\n",
    "]\n",
    "```\n",
    "\n",
    "**NB**: The `viam-server` starts as a root process, so you may need to switch users to run the python SDK server.\n",
    "```json\n",
    "[\n",
    "  {\n",
    "    \"id\": \"0\",\n",
    "    \"log\": true,\n",
    "    \"name\": \"sudo\",\n",
    "    \"args\": [\n",
    "      \"-u\",\n",
    "      \"pi\",\n",
    "      \"python\",\n",
    "      \"/home/pi/my-python-robot/main.py\"\n",
    "    ]\n",
    "  }\n",
    "]\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Operations\n",
    "\n",
    "Operations are used by the RDK to keep track of running tasks, and provide a means to query their status and even cancel them. In order for a component to respond appropriately to any Operation requests, we must obtain and listen to the Operation in our method calls.\n",
    "\n",
    "In order to take advantage of operations, you should wrap the component method with the `run_with_operation` decorator from the `viam.operations` package. Each component has a function, `get_operation(kwargs: Mapping[str, Any]) -> Operation`, that will return an Operation that will tell us if the operation is ever cancelled, allowing us to clean up any long running tasks, close connections, etc.\n",
    "\n",
    "It is extremely important that we check the `Operation` status, as this not only prevents any unnecessary resource usage, but also allows us to respond to urgent cancellation requests and stop components' motion."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Connect as a client to app\n",
    "\n",
    "To connect to app as a client and make calls to the data API, you should instantiate an instance of a `ViamClient` and retrieve its `DataClient` member."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "from viam.rpc.dial import DialOptions, Credentials\n",
    "from viam.app.viam_client import ViamClient\n",
    "\n",
    "async def connect() -> ViamClient:\n",
    "    dial_options = DialOptions(\n",
    "        auth_entity='<ADDRESS>',  # The URL of your robot.\n",
    "        credentials=Credentials(\n",
    "            type='robot-location-secret',\n",
    "            payload='<SECRET>'\n",
    "        )\n",
    "    )\n",
    "    return await ViamClient.create_from_dial_options(dial_options)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Once you have a connected `ViamClient`, you can then obtain a `DataClient` as a property."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "tags": [
     "remove-input"
    ]
   },
   "outputs": [],
   "source": [
    "# Hidden.\n",
    "from typing_extensions import Self\n",
    "\n",
    "from grpclib.client import Channel\n",
    "\n",
    "from viam.app.data_client import DataClient\n",
    "from viam.app.app_client import AppClient\n",
    "from viam.rpc.dial import _dial_direct\n",
    "\n",
    "class MockViamClient:\n",
    "    @classmethod\n",
    "    async def create_viam_client(cls) -> Self:\n",
    "        self = cls()\n",
    "        self._channel = await _dial_direct(address=\"localhost:9092\", options=DialOptions(insecure=True))\n",
    "        self.data_client = DataClient(channel=self._channel, metadata={})\n",
    "        self.app_client = AppClient(channel=self._channel, metadata={})\n",
    "        return self\n",
    "    \n",
    "    _channel: Channel\n",
    "    data_client: DataClient\n",
    "    app_client: AppClient\n",
    "\n",
    "    def close(self):\n",
    "        self._channel.close()\n",
    "\n",
    "viam_client = await MockViamClient.create_viam_client()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [],
   "source": [
    "data_client = viam_client.data_client"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This `DataClient` can be used to make method calls that retrieve data from app."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[{'IsPowered': False, 'PowerPct': 0.0, 'Position': 0.0}, {'IsPowered': False, 'PowerPct': 0.0, 'Position': 0.0}, {'IsPowered': False, 'PowerPct': 0.0, 'Position': 0.0}]\n"
     ]
    }
   ],
   "source": [
    "from datetime import datetime\n",
    "\n",
    "left_motor_filter = data_client.create_filter(\n",
    "    component_name=\"left_motor\",\n",
    "    start_time=datetime(2023, 6, 5, 11),\n",
    "    end_time=datetime(2023, 6, 5, 13, 30),\n",
    "    tags=[\"speed_test_run\"]\n",
    ")\n",
    "\n",
    "data = await data_client.tabular_data_by_filter(filter=left_motor_filter)\n",
    "print(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can also use your `DataClient` to upload data to app."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "time_requested_1 = datetime(2023, 6, 5, 11)\n",
    "time_recieved_1 = datetime(2023, 6, 5, 11, 0, 3)\n",
    "\n",
    "await data_client.tabular_data_capture_upload(\n",
    "    part_id=\"<ID>\", # Unique ID of the relevant robot part.\n",
    "    component_type='rdk:component:motor',\n",
    "    component_name='left_motor',\n",
    "    method_name='IsPowered',\n",
    "    method_parameters=None,\n",
    "    tags=[\"tag_1\", \"tag_2\"],\n",
    "    data_request_times=[(time_requested_1, time_recieved_1)],\n",
    "    tabular_data=[{'PowerPCT': 0, 'IsPowered': False}]\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`ViamClient` objects also house an `AppClient`, which can be used to retrieve information about your organization in App or make certain changes to it. The `AppClient` can be obtained in a manner similar to the `DataClient`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "tags": [
     "hide-output"
    ]
   },
   "outputs": [],
   "source": [
    "app_client = viam_client.app_client"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With this `AppClient`, you can access information about entities within your organization. For example, you can list information about all robots under your organization."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "robot-0\n",
      "robot-1\n",
      "robot-2\n",
      "robot-3\n"
     ]
    }
   ],
   "source": [
    "my_organizations = await app_client.list_organizations()\n",
    "MY_ORG_ID = my_organizations[0].id\n",
    "my_locations = await app_client.list_locations()\n",
    "robots = []\n",
    "\n",
    "for location in my_locations:\n",
    "    more_robots = await app_client.list_robots(location_id=location.id)\n",
    "    robots += more_robots\n",
    "    \n",
    "for robot in robots:\n",
    "    print(robot.name)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can also create new robots/robot parts or make updates to robots/robot parts that already already exist, or even delete them!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Create a new robot named \"new_rover\".\n",
    "NEW_ROBOT_ID = await app_client.new_robot(name=\"new_rover\", location_id=my_locations[0].id)\n",
    "\n",
    "# Change the new robot's name to \"rover\" and assign it a new parent location.\n",
    "updated_robot = await app_client.update_robot(robot_id=NEW_ROBOT_ID, name=\"rover\", location_id=\"<LOCATION_ID\")\n",
    "\n",
    "# Delete the new robot.\n",
    "await app_client.delete_robot(robot_id=NEW_ROBOT_ID)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Certain types returned by `AppClient` methods (namely, `RobotPart`, `LogEntry`, and `Fragment` objects) are wrapped in mirror classes that convert proto data into a friendlier, more readable format. Each of these mirrors still allows access to the intial proto type returned by the response as a property."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Function: go.viam.com/rdk/robot/impl.(*resourceManager).updateResources\n",
      "Line: 922.0\n",
      "Defined: True\n",
      "File: /__w/rdk/rdk/robot/impl/resource_manager.go\n",
      "\n",
      "*****PROTO*****\n",
      "\n",
      "fields {\n",
      "  key: \"Line\"\n",
      "  value {\n",
      "    number_value: 922\n",
      "  }\n",
      "}\n",
      "fields {\n",
      "  key: \"Function\"\n",
      "  value {\n",
      "    string_value: \"go.viam.com/rdk/robot/impl.(*resourceManager).updateResources\"\n",
      "  }\n",
      "}\n",
      "fields {\n",
      "  key: \"File\"\n",
      "  value {\n",
      "    string_value: \"/__w/rdk/rdk/robot/impl/resource_manager.go\"\n",
      "  }\n",
      "}\n",
      "fields {\n",
      "  key: \"Defined\"\n",
      "  value {\n",
      "    bool_value: true\n",
      "  }\n",
      "}\n",
      "\n"
     ]
    }
   ],
   "source": [
    "logs = await app_client.get_robot_part_logs(robot_part_id=\"<ID>\", num_log_entries=1)\n",
    "assert logs[0].caller is not None\n",
    "for item in logs[0].caller.items():\n",
    "    print(f\"{item[0]}: {item[1]}\")\n",
    "    \n",
    "print(f\"\\n*****PROTO*****\\n\")\n",
    "print(logs[0].proto.caller)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "At the end, you may close the connection."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "viam_client.close()"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Tags",
  "interpreter": {
   "hash": "bd385fe162c5ca0c84973b7dd5c518456272446b2b64e67c2a69f949ca7a1754"
  },
  "kernelspec": {
   "display_name": "Python 3.10.11 64-bit",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  },
  "vscode": {
   "interpreter": {
    "hash": "3dcf3a0dc186f3f37ed02c43aacb5aba79c21834e2f1b6d3d1f9d9c84c46ec17"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
