viam.app.provisioning_client
============================

.. py:module:: viam.app.provisioning_client


Attributes
----------

.. autoapisummary::

   viam.app.provisioning_client.LOGGER


Classes
-------

.. autoapisummary::

   viam.app.provisioning_client.CloudConfig
   viam.app.provisioning_client.GetNetworkListRequest
   viam.app.provisioning_client.GetNetworkListResponse
   viam.app.provisioning_client.GetSmartMachineStatusRequest
   viam.app.provisioning_client.GetSmartMachineStatusResponse
   viam.app.provisioning_client.NetworkInfo
   viam.app.provisioning_client.ProvisioningServiceStub
   viam.app.provisioning_client.SetNetworkCredentialsRequest
   viam.app.provisioning_client.SetSmartMachineCredentialsRequest
   viam.app.provisioning_client.ProvisioningClient


Module Contents
---------------

.. py:class:: CloudConfig(*, id: str = ..., secret: str = ..., app_address: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   minimal CloudConfig to create /etc/viam.json


   .. py:attribute:: id
      :type:  str

      SmartMachine part id


   .. py:attribute:: secret
      :type:  str

      SmartMachine part secret


   .. py:attribute:: app_address
      :type:  str


.. py:class:: GetNetworkListRequest

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: GetNetworkListResponse(*, networks: collections.abc.Iterable[global___NetworkInfo] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: networks
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkInfo]



.. py:class:: GetSmartMachineStatusRequest

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: GetSmartMachineStatusResponse(*, provisioning_info: global___ProvisioningInfo | None = ..., has_smart_machine_credentials: bool = ..., is_online: bool = ..., latest_connection_attempt: global___NetworkInfo | None = ..., errors: collections.abc.Iterable[str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: has_smart_machine_credentials
      :type:  bool


   .. py:attribute:: is_online
      :type:  bool


   .. py:property:: provisioning_info
      :type: global___ProvisioningInfo



   .. py:property:: latest_connection_attempt
      :type: global___NetworkInfo



   .. py:property:: errors
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



   .. py:method:: HasField(field_name: Literal['latest_connection_attempt', b'latest_connection_attempt', 'provisioning_info', b'provisioning_info']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: NetworkInfo(*, type: str = ..., ssid: str = ..., security: str = ..., signal: int = ..., connected: bool = ..., last_error: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: type
      :type:  str


   .. py:attribute:: ssid
      :type:  str


   .. py:attribute:: security
      :type:  str


   .. py:attribute:: signal
      :type:  int


   .. py:attribute:: connected
      :type:  bool


   .. py:attribute:: last_error
      :type:  str


.. py:class:: ProvisioningServiceStub(channel: grpclib.client.Channel)

.. py:class:: SetNetworkCredentialsRequest(*, type: str = ..., ssid: str = ..., psk: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: type
      :type:  str


   .. py:attribute:: ssid
      :type:  str


   .. py:attribute:: psk
      :type:  str


.. py:class:: SetSmartMachineCredentialsRequest(*, cloud: global___CloudConfig | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: cloud
      :type: global___CloudConfig



   .. py:method:: HasField(field_name: Literal['cloud', b'cloud']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: LOGGER

.. py:class:: ProvisioningClient(channel: grpclib.client.Channel, metadata: Mapping[str, str])

   gRPC client for getting and setting smart machine info.

   Constructor is used by `ViamClient` to instantiate relevant service stubs. Calls to
   `ProvisioningClient` methods should be made through `ViamClient`.

   Establish a connection::

       import asyncio

       from viam.rpc.dial import DialOptions, Credentials
       from viam.app.viam_client import ViamClient


       async def connect() -> ViamClient:
           # Replace "<API-KEY>" (including brackets) with your API key and "<API-KEY-ID>" with your API key ID
           dial_options = DialOptions.with_api_key("<API-KEY>", "<API-KEY-ID>")
           return await ViamClient.create_from_dial_options(dial_options)


       async def main():

           # Make a ViamClient
           viam_client = await connect()
           # Instantiate a ProvisioningClient to run provisioning client API methods on
           provisioning_client = viam_client.provisioning_client

           viam_client.close()

       if __name__ == '__main__':
           asyncio.run(main())



   .. py:method:: get_network_list() -> List[viam.proto.provisioning.NetworkInfo]
      :async:


      Returns list of networks that are visible to the Smart Machine.



   .. py:method:: get_smart_machine_status() -> viam.proto.provisioning.GetSmartMachineStatusResponse
      :async:


      Returns the status of the smart machine.



   .. py:method:: set_network_credentials(network_type: str, ssid: str, psk: str) -> None
      :async:


      Sets the network credentials of the Smart Machine.

      :param network_type: The type of the network.
      :type network_type: str
      :param ssid: The SSID of the network.
      :type ssid: str
      :param psk: The network's passkey.
      :type psk: str



   .. py:method:: set_smart_machine_credentials(cloud_config: Optional[viam.proto.provisioning.CloudConfig] = None) -> None
      :async:



