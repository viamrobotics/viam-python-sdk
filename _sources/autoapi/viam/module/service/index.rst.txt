:py:mod:`viam.module.service`
=============================

.. py:module:: viam.module.service


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.module.service.ModuleRPCService




.. py:class:: ModuleRPCService(module: viam.module.module.Module)

   Bases: :py:obj:`viam.proto.module.ModuleServiceBase`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: AddResource(stream: grpclib.server.Stream[viam.proto.module.AddResourceRequest, viam.proto.module.AddResourceResponse]) -> None
      :async:


   .. py:method:: ReconfigureResource(stream: grpclib.server.Stream[viam.proto.module.ReconfigureResourceRequest, viam.proto.module.ReconfigureResourceResponse]) -> None
      :async:


   .. py:method:: RemoveResource(stream: grpclib.server.Stream[viam.proto.module.RemoveResourceRequest, viam.proto.module.RemoveResourceResponse]) -> None
      :async:


   .. py:method:: Ready(stream: grpclib.server.Stream[viam.proto.module.ReadyRequest, viam.proto.module.ReadyResponse]) -> None
      :async:


   .. py:method:: ValidateConfig(stream: grpclib.server.Stream[viam.proto.module.ValidateConfigRequest, viam.proto.module.ValidateConfigResponse]) -> None
      :async:



