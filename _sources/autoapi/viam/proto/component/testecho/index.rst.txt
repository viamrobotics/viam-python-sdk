:py:mod:`viam.proto.component.testecho`
=======================================

.. py:module:: viam.proto.component.testecho

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.component.testecho.TestEchoServiceBase
   viam.proto.component.testecho.TestEchoServiceStub
   viam.proto.component.testecho.EchoBiDiRequest
   viam.proto.component.testecho.EchoBiDiResponse
   viam.proto.component.testecho.EchoMultipleRequest
   viam.proto.component.testecho.EchoMultipleResponse
   viam.proto.component.testecho.EchoRequest
   viam.proto.component.testecho.EchoResponse
   viam.proto.component.testecho.StopRequest
   viam.proto.component.testecho.StopResponse




.. py:class:: TestEchoServiceBase


   Bases: :py:obj:`abc.ABC`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: Echo(stream: grpclib.server.Stream[component.testecho.v1.testecho_pb2.EchoRequest, component.testecho.v1.testecho_pb2.EchoResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: EchoMultiple(stream: grpclib.server.Stream[component.testecho.v1.testecho_pb2.EchoMultipleRequest, component.testecho.v1.testecho_pb2.EchoMultipleResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: EchoBiDi(stream: grpclib.server.Stream[component.testecho.v1.testecho_pb2.EchoBiDiRequest, component.testecho.v1.testecho_pb2.EchoBiDiResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Stop(stream: grpclib.server.Stream[component.testecho.v1.testecho_pb2.StopRequest, component.testecho.v1.testecho_pb2.StopResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: TestEchoServiceStub(channel: grpclib.client.Channel)



.. py:class:: EchoBiDiRequest(*, name: str = ..., message: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: message
      :type: str

      


.. py:class:: EchoBiDiResponse(*, message: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :type: str

      


.. py:class:: EchoMultipleRequest(*, name: str = ..., message: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: message
      :type: str

      


.. py:class:: EchoMultipleResponse(*, message: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :type: str

      


.. py:class:: EchoRequest(*, name: str = ..., message: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: message
      :type: str

      


.. py:class:: EchoResponse(*, message: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :type: str

      


.. py:class:: StopRequest(*, name: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      


.. py:class:: StopResponse


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


