:py:mod:`viam.proto.component.board`
====================================

.. py:module:: viam.proto.component.board

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.component.board.BoardServiceBase
   viam.proto.component.board.BoardServiceStub
   viam.proto.component.board.UnimplementedBoardServiceBase
   viam.proto.component.board.GetDigitalInterruptValueRequest
   viam.proto.component.board.GetDigitalInterruptValueResponse
   viam.proto.component.board.GetGPIORequest
   viam.proto.component.board.GetGPIOResponse
   viam.proto.component.board.PowerMode
   viam.proto.component.board.PWMFrequencyRequest
   viam.proto.component.board.PWMFrequencyResponse
   viam.proto.component.board.PWMRequest
   viam.proto.component.board.PWMResponse
   viam.proto.component.board.ReadAnalogReaderRequest
   viam.proto.component.board.ReadAnalogReaderResponse
   viam.proto.component.board.SetGPIORequest
   viam.proto.component.board.SetGPIOResponse
   viam.proto.component.board.SetPowerModeRequest
   viam.proto.component.board.SetPowerModeResponse
   viam.proto.component.board.SetPWMFrequencyRequest
   viam.proto.component.board.SetPWMFrequencyResponse
   viam.proto.component.board.SetPWMRequest
   viam.proto.component.board.SetPWMResponse
   viam.proto.component.board.Status
   viam.proto.component.board.StreamTicksRequest
   viam.proto.component.board.StreamTicksResponse
   viam.proto.component.board.WriteAnalogRequest
   viam.proto.component.board.WriteAnalogResponse




.. py:class:: BoardServiceBase


   Bases: :py:obj:`abc.ABC`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: SetGPIO(stream: grpclib.server.Stream[component.board.v1.board_pb2.SetGPIORequest, component.board.v1.board_pb2.SetGPIOResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetGPIO(stream: grpclib.server.Stream[component.board.v1.board_pb2.GetGPIORequest, component.board.v1.board_pb2.GetGPIOResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: PWM(stream: grpclib.server.Stream[component.board.v1.board_pb2.PWMRequest, component.board.v1.board_pb2.PWMResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: SetPWM(stream: grpclib.server.Stream[component.board.v1.board_pb2.SetPWMRequest, component.board.v1.board_pb2.SetPWMResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: PWMFrequency(stream: grpclib.server.Stream[component.board.v1.board_pb2.PWMFrequencyRequest, component.board.v1.board_pb2.PWMFrequencyResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: SetPWMFrequency(stream: grpclib.server.Stream[component.board.v1.board_pb2.SetPWMFrequencyRequest, component.board.v1.board_pb2.SetPWMFrequencyResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ReadAnalogReader(stream: grpclib.server.Stream[component.board.v1.board_pb2.ReadAnalogReaderRequest, component.board.v1.board_pb2.ReadAnalogReaderResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: WriteAnalog(stream: grpclib.server.Stream[component.board.v1.board_pb2.WriteAnalogRequest, component.board.v1.board_pb2.WriteAnalogResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetDigitalInterruptValue(stream: grpclib.server.Stream[component.board.v1.board_pb2.GetDigitalInterruptValueRequest, component.board.v1.board_pb2.GetDigitalInterruptValueResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: StreamTicks(stream: grpclib.server.Stream[component.board.v1.board_pb2.StreamTicksRequest, component.board.v1.board_pb2.StreamTicksResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: SetPowerMode(stream: grpclib.server.Stream[component.board.v1.board_pb2.SetPowerModeRequest, component.board.v1.board_pb2.SetPowerModeResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetGeometries(stream: grpclib.server.Stream[common.v1.common_pb2.GetGeometriesRequest, common.v1.common_pb2.GetGeometriesResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: BoardServiceStub(channel: grpclib.client.Channel)



.. py:class:: UnimplementedBoardServiceBase


   Bases: :py:obj:`BoardServiceBase`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: SetGPIO(stream: grpclib.server.Stream[component.board.v1.board_pb2.SetGPIORequest, component.board.v1.board_pb2.SetGPIOResponse]) -> None
      :async:


   .. py:method:: GetGPIO(stream: grpclib.server.Stream[component.board.v1.board_pb2.GetGPIORequest, component.board.v1.board_pb2.GetGPIOResponse]) -> None
      :async:


   .. py:method:: PWM(stream: grpclib.server.Stream[component.board.v1.board_pb2.PWMRequest, component.board.v1.board_pb2.PWMResponse]) -> None
      :async:


   .. py:method:: SetPWM(stream: grpclib.server.Stream[component.board.v1.board_pb2.SetPWMRequest, component.board.v1.board_pb2.SetPWMResponse]) -> None
      :async:


   .. py:method:: PWMFrequency(stream: grpclib.server.Stream[component.board.v1.board_pb2.PWMFrequencyRequest, component.board.v1.board_pb2.PWMFrequencyResponse]) -> None
      :async:


   .. py:method:: SetPWMFrequency(stream: grpclib.server.Stream[component.board.v1.board_pb2.SetPWMFrequencyRequest, component.board.v1.board_pb2.SetPWMFrequencyResponse]) -> None
      :async:


   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :async:


   .. py:method:: ReadAnalogReader(stream: grpclib.server.Stream[component.board.v1.board_pb2.ReadAnalogReaderRequest, component.board.v1.board_pb2.ReadAnalogReaderResponse]) -> None
      :async:


   .. py:method:: WriteAnalog(stream: grpclib.server.Stream[component.board.v1.board_pb2.WriteAnalogRequest, component.board.v1.board_pb2.WriteAnalogResponse]) -> None
      :async:


   .. py:method:: GetDigitalInterruptValue(stream: grpclib.server.Stream[component.board.v1.board_pb2.GetDigitalInterruptValueRequest, component.board.v1.board_pb2.GetDigitalInterruptValueResponse]) -> None
      :async:


   .. py:method:: StreamTicks(stream: grpclib.server.Stream[component.board.v1.board_pb2.StreamTicksRequest, component.board.v1.board_pb2.StreamTicksResponse]) -> None
      :async:


   .. py:method:: SetPowerMode(stream: grpclib.server.Stream[component.board.v1.board_pb2.SetPowerModeRequest, component.board.v1.board_pb2.SetPowerModeResponse]) -> None
      :async:


   .. py:method:: GetGeometries(stream: grpclib.server.Stream[common.v1.common_pb2.GetGeometriesRequest, common.v1.common_pb2.GetGeometriesResponse]) -> None
      :async:



.. py:class:: GetDigitalInterruptValueRequest(*, board_name: str = ..., digital_interrupt_name: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Digital Interrupt

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: board_name
      :type: str

      

   .. py:attribute:: digital_interrupt_name
      :type: str

      

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetDigitalInterruptValueResponse(*, value: int = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: value
      :type: int

      


.. py:class:: GetGPIORequest(*, name: str = ..., pin: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: pin
      :type: str

      

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetGPIOResponse(*, high: bool = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: high
      :type: bool

      


.. py:class:: PowerMode


   Bases: :py:obj:`_PowerMode`

   Power Management API


.. py:class:: PWMFrequencyRequest(*, name: str = ..., pin: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: pin
      :type: str

      

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: PWMFrequencyResponse(*, frequency_hz: int = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: frequency_hz
      :type: int

      


.. py:class:: PWMRequest(*, name: str = ..., pin: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: pin
      :type: str

      

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: PWMResponse(*, duty_cycle_pct: float = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: duty_cycle_pct
      :type: float

      0-1


.. py:class:: ReadAnalogReaderRequest(*, board_name: str = ..., analog_reader_name: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Analog Reader

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: board_name
      :type: str

      

   .. py:attribute:: analog_reader_name
      :type: str

      

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ReadAnalogReaderResponse(*, value: int = ..., min_range: float = ..., max_range: float = ..., step_size: float = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: value
      :type: int

      

   .. py:attribute:: min_range
      :type: float

      

   .. py:attribute:: max_range
      :type: float

      

   .. py:attribute:: step_size
      :type: float

      


.. py:class:: SetGPIORequest(*, name: str = ..., pin: str = ..., high: bool = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: pin
      :type: str

      

   .. py:attribute:: high
      :type: bool

      

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: SetGPIOResponse


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: SetPowerModeRequest(*, name: str = ..., power_mode: global___PowerMode = ..., duration: google.protobuf.duration_pb2.Duration | None = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: duration
      :type: google.protobuf.duration_pb2.Duration

      Requested duration to stay in `power_mode`

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: name
      :type: str

      name of board

   .. py:attribute:: power_mode
      :type: global___PowerMode

      Requested power mode

   .. py:method:: HasField(field_name: Literal[_duration, b'_duration', duration, b'duration', extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_duration, b'_duration']) -> Literal[duration] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: SetPowerModeResponse


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: SetPWMFrequencyRequest(*, name: str = ..., pin: str = ..., frequency_hz: int = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: pin
      :type: str

      

   .. py:attribute:: frequency_hz
      :type: int

      

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: SetPWMFrequencyResponse


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: SetPWMRequest(*, name: str = ..., pin: str = ..., duty_cycle_pct: float = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: pin
      :type: str

      

   .. py:attribute:: duty_cycle_pct
      :type: float

      0-1

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: SetPWMResponse


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: Status(*, analogs: collections.abc.Mapping[str, int] | None = ..., digital_interrupts: collections.abc.Mapping[str, int] | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:class:: AnalogsEntry(*, key: str = ..., value: int = ...)


      Bases: :py:obj:`google.protobuf.message.Message`

      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:attribute:: key
         :type: str

         

      .. py:attribute:: value
         :type: int

         


   .. py:class:: DigitalInterruptsEntry(*, key: str = ..., value: int = ...)


      Bases: :py:obj:`google.protobuf.message.Message`

      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:attribute:: key
         :type: str

         

      .. py:attribute:: value
         :type: int

         


   .. py:property:: analogs
      :type: google.protobuf.internal.containers.ScalarMap[str, int]


   .. py:property:: digital_interrupts
      :type: google.protobuf.internal.containers.ScalarMap[str, int]



.. py:class:: StreamTicksRequest(*, name: str = ..., pin_names: collections.abc.Iterable[str] | None = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: pin_names
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]

      Name of digital interrupts to recieve ticks from

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: name
      :type: str

      Board name

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: StreamTicksResponse(*, pin_name: str = ..., time: int = ..., high: bool = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: pin_name
      :type: str

      name of interrupt

   .. py:attribute:: time
      :type: int

      Time in nanoseconds of a tick

   .. py:attribute:: high
      :type: bool

      Value high or low of the tick


.. py:class:: WriteAnalogRequest(*, name: str = ..., pin: str = ..., value: int = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Analog Writer

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: pin
      :type: str

      

   .. py:attribute:: value
      :type: int

      

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: WriteAnalogResponse


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


