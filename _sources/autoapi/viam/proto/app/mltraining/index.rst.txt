viam.proto.app.mltraining
=========================

.. py:module:: viam.proto.app.mltraining

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Classes
-------

.. autoapisummary::

   viam.proto.app.mltraining.MLTrainingServiceBase
   viam.proto.app.mltraining.MLTrainingServiceStub
   viam.proto.app.mltraining.UnimplementedMLTrainingServiceBase
   viam.proto.app.mltraining.CancelTrainingJobRequest
   viam.proto.app.mltraining.CancelTrainingJobResponse
   viam.proto.app.mltraining.DeleteCompletedTrainingJobRequest
   viam.proto.app.mltraining.DeleteCompletedTrainingJobResponse
   viam.proto.app.mltraining.GetTrainingJobRequest
   viam.proto.app.mltraining.GetTrainingJobResponse
   viam.proto.app.mltraining.ListTrainingJobsRequest
   viam.proto.app.mltraining.ListTrainingJobsResponse
   viam.proto.app.mltraining.ModelFramework
   viam.proto.app.mltraining.ModelType
   viam.proto.app.mltraining.SubmitCustomTrainingJobRequest
   viam.proto.app.mltraining.SubmitCustomTrainingJobResponse
   viam.proto.app.mltraining.SubmitTrainingJobRequest
   viam.proto.app.mltraining.SubmitTrainingJobResponse
   viam.proto.app.mltraining.TrainingJobMetadata
   viam.proto.app.mltraining.TrainingStatus


Package Contents
----------------

.. py:class:: MLTrainingServiceBase

   Bases: :py:obj:`abc.ABC`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: SubmitTrainingJob(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.SubmitTrainingJobRequest, app.mltraining.v1.ml_training_pb2.SubmitTrainingJobResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: SubmitCustomTrainingJob(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.SubmitCustomTrainingJobRequest, app.mltraining.v1.ml_training_pb2.SubmitCustomTrainingJobResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetTrainingJob(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.GetTrainingJobRequest, app.mltraining.v1.ml_training_pb2.GetTrainingJobResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListTrainingJobs(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.ListTrainingJobsRequest, app.mltraining.v1.ml_training_pb2.ListTrainingJobsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CancelTrainingJob(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.CancelTrainingJobRequest, app.mltraining.v1.ml_training_pb2.CancelTrainingJobResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteCompletedTrainingJob(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.DeleteCompletedTrainingJobRequest, app.mltraining.v1.ml_training_pb2.DeleteCompletedTrainingJobResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]


.. py:class:: MLTrainingServiceStub(channel: grpclib.client.Channel)

.. py:class:: UnimplementedMLTrainingServiceBase

   Bases: :py:obj:`MLTrainingServiceBase`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: SubmitTrainingJob(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.SubmitTrainingJobRequest, app.mltraining.v1.ml_training_pb2.SubmitTrainingJobResponse]) -> None
      :async:



   .. py:method:: SubmitCustomTrainingJob(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.SubmitCustomTrainingJobRequest, app.mltraining.v1.ml_training_pb2.SubmitCustomTrainingJobResponse]) -> None
      :async:



   .. py:method:: GetTrainingJob(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.GetTrainingJobRequest, app.mltraining.v1.ml_training_pb2.GetTrainingJobResponse]) -> None
      :async:



   .. py:method:: ListTrainingJobs(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.ListTrainingJobsRequest, app.mltraining.v1.ml_training_pb2.ListTrainingJobsResponse]) -> None
      :async:



   .. py:method:: CancelTrainingJob(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.CancelTrainingJobRequest, app.mltraining.v1.ml_training_pb2.CancelTrainingJobResponse]) -> None
      :async:



   .. py:method:: DeleteCompletedTrainingJob(stream: grpclib.server.Stream[app.mltraining.v1.ml_training_pb2.DeleteCompletedTrainingJobRequest, app.mltraining.v1.ml_training_pb2.DeleteCompletedTrainingJobResponse]) -> None
      :async:



.. py:class:: CancelTrainingJobRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: CancelTrainingJobResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteCompletedTrainingJobRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: DeleteCompletedTrainingJobResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: GetTrainingJobRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: GetTrainingJobResponse(*, metadata: global___TrainingJobMetadata | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: metadata
      :type: global___TrainingJobMetadata



   .. py:method:: HasField(field_name: Literal['metadata', b'metadata']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ListTrainingJobsRequest(*, organization_id: str = ..., status: global___TrainingStatus = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: status
      :type:  global___TrainingStatus


.. py:class:: ListTrainingJobsResponse(*, jobs: collections.abc.Iterable[global___TrainingJobMetadata] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: jobs
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TrainingJobMetadata]



.. py:class:: ModelFramework

   Bases: :py:obj:`_ModelFramework`


.. py:class:: ModelType

   Bases: :py:obj:`_ModelType`


.. py:class:: SubmitCustomTrainingJobRequest(*, dataset_id: str = ..., registry_item_id: str = ..., registry_item_version: str = ..., organization_id: str = ..., model_name: str = ..., model_version: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: dataset_id
      :type:  str


   .. py:attribute:: registry_item_id
      :type:  str


   .. py:attribute:: registry_item_version
      :type:  str


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: model_name
      :type:  str


   .. py:attribute:: model_version
      :type:  str


.. py:class:: SubmitCustomTrainingJobResponse(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: SubmitTrainingJobRequest(*, dataset_id: str = ..., organization_id: str = ..., model_name: str = ..., model_version: str = ..., model_type: global___ModelType = ..., tags: collections.abc.Iterable[str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: dataset_id
      :type:  str


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: model_name
      :type:  str


   .. py:attribute:: model_version
      :type:  str


   .. py:attribute:: model_type
      :type:  global___ModelType


   .. py:property:: tags
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



.. py:class:: SubmitTrainingJobResponse(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: TrainingJobMetadata(*, request: global___SubmitTrainingJobRequest | None = ..., id: str = ..., dataset_id: str = ..., organization_id: str = ..., model_name: str = ..., model_version: str = ..., model_type: global___ModelType = ..., model_framework: global___ModelFramework = ..., is_custom_job: bool = ..., registry_item_id: str = ..., registry_item_version: str = ..., status: global___TrainingStatus = ..., error_status: google.rpc.status_pb2.Status | None = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., last_modified: google.protobuf.timestamp_pb2.Timestamp | None = ..., training_started: google.protobuf.timestamp_pb2.Timestamp | None = ..., training_ended: google.protobuf.timestamp_pb2.Timestamp | None = ..., synced_model_id: str = ..., tags: collections.abc.Iterable[str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: dataset_id
      :type:  str


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: model_name
      :type:  str


   .. py:attribute:: model_version
      :type:  str


   .. py:attribute:: model_type
      :type:  global___ModelType


   .. py:attribute:: model_framework
      :type:  global___ModelFramework


   .. py:attribute:: is_custom_job
      :type:  bool


   .. py:attribute:: registry_item_id
      :type:  str


   .. py:attribute:: registry_item_version
      :type:  str


   .. py:attribute:: status
      :type:  global___TrainingStatus


   .. py:attribute:: synced_model_id
      :type:  str


   .. py:property:: request
      :type: global___SubmitTrainingJobRequest



   .. py:property:: error_status
      :type: google.rpc.status_pb2.Status



   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: last_modified
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: training_started
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: training_ended
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: tags
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



   .. py:method:: HasField(field_name: Literal['created_on', b'created_on', 'error_status', b'error_status', 'last_modified', b'last_modified', 'request', b'request', 'training_ended', b'training_ended', 'training_started', b'training_started']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: TrainingStatus

   Bases: :py:obj:`_TrainingStatus`


