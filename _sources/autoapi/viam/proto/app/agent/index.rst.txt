:py:mod:`viam.proto.app.agent`
==============================

.. py:module:: viam.proto.app.agent

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.app.agent.AgentAppServiceBase
   viam.proto.app.agent.AgentAppServiceStub
   viam.proto.app.agent.AgentDeviceServiceBase
   viam.proto.app.agent.AgentDeviceServiceStub
   viam.proto.app.agent.AppAgentConfig
   viam.proto.app.agent.AppSubsystemConfig
   viam.proto.app.agent.DeviceAgentConfigRequest
   viam.proto.app.agent.DeviceAgentConfigResponse
   viam.proto.app.agent.DeviceSubsystemConfig
   viam.proto.app.agent.GetAgentConfigRequest
   viam.proto.app.agent.GetAgentConfigResponse
   viam.proto.app.agent.HostInfo
   viam.proto.app.agent.PackageFormat
   viam.proto.app.agent.SubsystemUpdateInfo
   viam.proto.app.agent.UpdateAgentConfigRequest
   viam.proto.app.agent.UpdateAgentConfigResponse




.. py:class:: AgentAppServiceBase


   Bases: :py:obj:`abc.ABC`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: GetAgentConfig(stream: grpclib.server.Stream[app.agent.v1.agent_pb2.GetAgentConfigRequest, app.agent.v1.agent_pb2.GetAgentConfigResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: UpdateAgentConfig(stream: grpclib.server.Stream[app.agent.v1.agent_pb2.UpdateAgentConfigRequest, app.agent.v1.agent_pb2.UpdateAgentConfigResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: AgentAppServiceStub(channel: grpclib.client.Channel)



.. py:class:: AgentDeviceServiceBase


   Bases: :py:obj:`abc.ABC`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: DeviceAgentConfig(stream: grpclib.server.Stream[app.agent.v1.agent_pb2.DeviceAgentConfigRequest, app.agent.v1.agent_pb2.DeviceAgentConfigResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: AgentDeviceServiceStub(channel: grpclib.client.Channel)



.. py:class:: AppAgentConfig(*, subsystem_configs: collections.abc.Mapping[str, global___AppSubsystemConfig] | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:class:: SubsystemConfigsEntry(*, key: str = ..., value: global___AppSubsystemConfig | None = ...)


      Bases: :py:obj:`google.protobuf.message.Message`

      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:property:: value
         :type: global___AppSubsystemConfig


      .. py:attribute:: key
         :type: str

         

      .. py:method:: HasField(field_name: Literal[value, b'value']) -> bool

         Checks if a certain field is set for the message.

         For a oneof group, checks if any field inside is set. Note that if the
         field_name is not defined in the message descriptor, :exc:`ValueError` will
         be raised.

         :param field_name: The name of the field to check for presence.
         :type field_name: str

         :returns: Whether a value has been set for the named field.
         :rtype: bool

         :raises ValueError: if the `field_name` is not a member of this message.



   .. py:property:: subsystem_configs
      :type: google.protobuf.internal.containers.MessageMap[str, global___AppSubsystemConfig]



.. py:class:: AppSubsystemConfig(*, release_channel: str = ..., pin_version: str = ..., pin_url: str = ..., disable_subsystem: bool = ..., attributes: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: attributes
      :type: google.protobuf.struct_pb2.Struct


   .. py:attribute:: release_channel
      :type: str

      

   .. py:attribute:: pin_version
      :type: str

      

   .. py:attribute:: pin_url
      :type: str

      

   .. py:attribute:: disable_subsystem
      :type: bool

      

   .. py:method:: HasField(field_name: Literal[attributes, b'attributes']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: DeviceAgentConfigRequest(*, id: str = ..., host_info: global___HostInfo | None = ..., subsystem_versions: collections.abc.Mapping[str, str] | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Device side

   .. py:class:: SubsystemVersionsEntry(*, key: str = ..., value: str = ...)


      Bases: :py:obj:`google.protobuf.message.Message`

      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:attribute:: key
         :type: str

         

      .. py:attribute:: value
         :type: str

         


   .. py:property:: host_info
      :type: global___HostInfo

      info about the host system

   .. py:property:: subsystem_versions
      :type: google.protobuf.internal.containers.ScalarMap[str, str]

      current subsystems and versions

   .. py:attribute:: id
      :type: str

      robot partID

   .. py:method:: HasField(field_name: Literal[host_info, b'host_info']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: DeviceAgentConfigResponse(*, subsystem_configs: collections.abc.Mapping[str, global___DeviceSubsystemConfig] | None = ..., check_interval: google.protobuf.duration_pb2.Duration | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:class:: SubsystemConfigsEntry(*, key: str = ..., value: global___DeviceSubsystemConfig | None = ...)


      Bases: :py:obj:`google.protobuf.message.Message`

      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.

      .. py:property:: value
         :type: global___DeviceSubsystemConfig


      .. py:attribute:: key
         :type: str

         

      .. py:method:: HasField(field_name: Literal[value, b'value']) -> bool

         Checks if a certain field is set for the message.

         For a oneof group, checks if any field inside is set. Note that if the
         field_name is not defined in the message descriptor, :exc:`ValueError` will
         be raised.

         :param field_name: The name of the field to check for presence.
         :type field_name: str

         :returns: Whether a value has been set for the named field.
         :rtype: bool

         :raises ValueError: if the `field_name` is not a member of this message.



   .. py:property:: subsystem_configs
      :type: google.protobuf.internal.containers.MessageMap[str, global___DeviceSubsystemConfig]

      subsystems to be installed/configured/updated
      note: previously installed subsystems will be removed from the system if removed from this list

   .. py:property:: check_interval
      :type: google.protobuf.duration_pb2.Duration

      how often this request should be repeated

   .. py:method:: HasField(field_name: Literal[check_interval, b'check_interval']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: DeviceSubsystemConfig(*, update_info: global___SubsystemUpdateInfo | None = ..., disable: bool = ..., force_restart: bool = ..., attributes: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: update_info
      :type: global___SubsystemUpdateInfo

      data needed to download/validate the subsystem

   .. py:property:: attributes
      :type: google.protobuf.struct_pb2.Struct

      arbitrary config sections

   .. py:attribute:: disable
      :type: bool

      if this subsystem is disabled and should not be started by the agent

   .. py:attribute:: force_restart
      :type: bool

      force_restart will restart the subsystem, even if no updates are available

   .. py:method:: HasField(field_name: Literal[attributes, b'attributes', update_info, b'update_info']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetAgentConfigRequest(*, id: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   App side

   .. py:attribute:: id
      :type: str

      


.. py:class:: GetAgentConfigResponse(*, agent_config: global___AppAgentConfig | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: agent_config
      :type: global___AppAgentConfig


   .. py:method:: HasField(field_name: Literal[agent_config, b'agent_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: HostInfo(*, platform: str = ..., distro: str = ..., tags: collections.abc.Iterable[str] | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: tags
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]

      additional tags for specific hardware or software that's present and may affect software selection
      ex: "jetson", "rpi4", "systemd", etc.

   .. py:attribute:: platform
      :type: str

      linux/amd64, darwin/arm64

      :type: platform is the docker styled combination of kernel and architecture. Ex

   .. py:attribute:: distro
      :type: str

      22.04, debian:11

      :type: ID and VERSION_ID fields from /etc/os-release, colon seperated. Ex

      :type: ubuntu


.. py:class:: PackageFormat


   Bases: :py:obj:`_PackageFormat`


.. py:class:: SubsystemUpdateInfo(*, filename: str = ..., url: str = ..., version: str = ..., sha256: bytes = ..., format: global___PackageFormat = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: filename
      :type: str

      unpacked filename as it is expected on disk (regardless of url)

   .. py:attribute:: url
      :type: str

      url to download from

   .. py:attribute:: version
      :type: str

      version expected at the url

   .. py:attribute:: sha256
      :type: bytes

      sha256 sum of file as downloaded

   .. py:attribute:: format
      :type: global___PackageFormat

      determines if decompression or executable permissions are needed


.. py:class:: UpdateAgentConfigRequest(*, id: str = ..., agent_config: global___AppAgentConfig | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: agent_config
      :type: global___AppAgentConfig


   .. py:attribute:: id
      :type: str

      

   .. py:method:: HasField(field_name: Literal[agent_config, b'agent_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateAgentConfigResponse(*, agent_config: global___AppAgentConfig | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: agent_config
      :type: global___AppAgentConfig


   .. py:method:: HasField(field_name: Literal[agent_config, b'agent_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



