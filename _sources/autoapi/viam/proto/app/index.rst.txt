viam.proto.app
==============

.. py:module:: viam.proto.app

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Subpackages
-----------

.. toctree::
   :maxdepth: 1

   /autoapi/viam/proto/app/agent/index
   /autoapi/viam/proto/app/cloudslam/index
   /autoapi/viam/proto/app/data/index
   /autoapi/viam/proto/app/datapipelines/index
   /autoapi/viam/proto/app/dataset/index
   /autoapi/viam/proto/app/datasync/index
   /autoapi/viam/proto/app/mlinference/index
   /autoapi/viam/proto/app/mltraining/index
   /autoapi/viam/proto/app/packages/index


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/viam/proto/app/billing/index
   /autoapi/viam/proto/app/end_user/index
   /autoapi/viam/proto/app/robot/index


Classes
-------

.. autoapisummary::

   viam.proto.app.AppServiceBase
   viam.proto.app.AppServiceStub
   viam.proto.app.UnimplementedAppServiceBase
   viam.proto.app.PKCE
   viam.proto.app.AdditionalFragment
   viam.proto.app.AddRoleRequest
   viam.proto.app.AddRoleResponse
   viam.proto.app.APIKey
   viam.proto.app.APIKeyWithAuthorizations
   viam.proto.app.App
   viam.proto.app.AuthenticationType
   viam.proto.app.AuthenticatorInfo
   viam.proto.app.Authorization
   viam.proto.app.AuthorizationDetails
   viam.proto.app.AuthorizedPermissions
   viam.proto.app.BillingAddress
   viam.proto.app.ChangeRoleRequest
   viam.proto.app.ChangeRoleResponse
   viam.proto.app.CheckPermissionsRequest
   viam.proto.app.CheckPermissionsResponse
   viam.proto.app.ClientAuthentication
   viam.proto.app.CreateFragmentRequest
   viam.proto.app.CreateFragmentResponse
   viam.proto.app.CreateKeyFromExistingKeyAuthorizationsRequest
   viam.proto.app.CreateKeyFromExistingKeyAuthorizationsResponse
   viam.proto.app.CreateKeyRequest
   viam.proto.app.CreateKeyResponse
   viam.proto.app.CreateLocationRequest
   viam.proto.app.CreateLocationResponse
   viam.proto.app.CreateLocationSecretRequest
   viam.proto.app.CreateLocationSecretResponse
   viam.proto.app.CreateModuleRequest
   viam.proto.app.CreateModuleResponse
   viam.proto.app.CreateOAuthAppRequest
   viam.proto.app.CreateOAuthAppResponse
   viam.proto.app.CreateOrganizationInviteRequest
   viam.proto.app.CreateOrganizationInviteResponse
   viam.proto.app.CreateOrganizationRequest
   viam.proto.app.CreateOrganizationResponse
   viam.proto.app.CreateRegistryItemRequest
   viam.proto.app.CreateRegistryItemResponse
   viam.proto.app.CreateRobotPartSecretRequest
   viam.proto.app.CreateRobotPartSecretResponse
   viam.proto.app.DeleteFragmentRequest
   viam.proto.app.DeleteFragmentResponse
   viam.proto.app.DeleteFragmentTagRequest
   viam.proto.app.DeleteFragmentTagResponse
   viam.proto.app.DeleteKeyRequest
   viam.proto.app.DeleteKeyResponse
   viam.proto.app.DeleteLocationRequest
   viam.proto.app.DeleteLocationResponse
   viam.proto.app.DeleteLocationSecretRequest
   viam.proto.app.DeleteLocationSecretResponse
   viam.proto.app.DeleteOAuthAppRequest
   viam.proto.app.DeleteOAuthAppResponse
   viam.proto.app.DeleteOrganizationInviteRequest
   viam.proto.app.DeleteOrganizationInviteResponse
   viam.proto.app.DeleteOrganizationMemberRequest
   viam.proto.app.DeleteOrganizationMemberResponse
   viam.proto.app.DeleteOrganizationRequest
   viam.proto.app.DeleteOrganizationResponse
   viam.proto.app.DeleteRegistryItemRequest
   viam.proto.app.DeleteRegistryItemResponse
   viam.proto.app.DeleteRobotPartRequest
   viam.proto.app.DeleteRobotPartResponse
   viam.proto.app.DeleteRobotPartSecretRequest
   viam.proto.app.DeleteRobotPartSecretResponse
   viam.proto.app.DeleteRobotRequest
   viam.proto.app.DeleteRobotResponse
   viam.proto.app.DisableAuthServiceRequest
   viam.proto.app.DisableAuthServiceResponse
   viam.proto.app.DisableBillingServiceRequest
   viam.proto.app.DisableBillingServiceResponse
   viam.proto.app.EnableAuthServiceRequest
   viam.proto.app.EnableAuthServiceResponse
   viam.proto.app.EnableBillingServiceRequest
   viam.proto.app.EnableBillingServiceResponse
   viam.proto.app.EnabledGrant
   viam.proto.app.Fragment
   viam.proto.app.FragmentError
   viam.proto.app.FragmentErrorType
   viam.proto.app.FragmentHistoryEntry
   viam.proto.app.FragmentRevision
   viam.proto.app.FragmentSummary
   viam.proto.app.FragmentTag
   viam.proto.app.FragmentUsage
   viam.proto.app.FragmentVisibility
   viam.proto.app.GetAppContentRequest
   viam.proto.app.GetAppContentResponse
   viam.proto.app.GetBillingServiceConfigRequest
   viam.proto.app.GetBillingServiceConfigResponse
   viam.proto.app.GetFragmentHistoryRequest
   viam.proto.app.GetFragmentHistoryResponse
   viam.proto.app.GetFragmentRequest
   viam.proto.app.GetFragmentResponse
   viam.proto.app.GetFragmentUsageRequest
   viam.proto.app.GetFragmentUsageResponse
   viam.proto.app.GetLocationMetadataRequest
   viam.proto.app.GetLocationMetadataResponse
   viam.proto.app.GetLocationRequest
   viam.proto.app.GetLocationResponse
   viam.proto.app.GetModuleRequest
   viam.proto.app.GetModuleResponse
   viam.proto.app.GetOrganizationMetadataRequest
   viam.proto.app.GetOrganizationMetadataResponse
   viam.proto.app.GetOrganizationNamespaceAvailabilityRequest
   viam.proto.app.GetOrganizationNamespaceAvailabilityResponse
   viam.proto.app.GetOrganizationRequest
   viam.proto.app.GetOrganizationResponse
   viam.proto.app.GetOrganizationsWithAccessToLocationRequest
   viam.proto.app.GetOrganizationsWithAccessToLocationResponse
   viam.proto.app.GetRegistryItemRequest
   viam.proto.app.GetRegistryItemResponse
   viam.proto.app.GetRobotAPIKeysRequest
   viam.proto.app.GetRobotAPIKeysResponse
   viam.proto.app.GetRobotMetadataRequest
   viam.proto.app.GetRobotMetadataResponse
   viam.proto.app.GetRobotPartHistoryRequest
   viam.proto.app.GetRobotPartHistoryResponse
   viam.proto.app.GetRobotPartLogsRequest
   viam.proto.app.GetRobotPartLogsResponse
   viam.proto.app.GetRobotPartMetadataRequest
   viam.proto.app.GetRobotPartMetadataResponse
   viam.proto.app.GetRobotPartRequest
   viam.proto.app.GetRobotPartResponse
   viam.proto.app.GetRobotPartsRequest
   viam.proto.app.GetRobotPartsResponse
   viam.proto.app.GetRobotRequest
   viam.proto.app.GetRobotResponse
   viam.proto.app.GetRoverRentalRobotsRequest
   viam.proto.app.GetRoverRentalRobotsResponse
   viam.proto.app.GetUserIDByEmailRequest
   viam.proto.app.GetUserIDByEmailResponse
   viam.proto.app.ListAuthorizationsRequest
   viam.proto.app.ListAuthorizationsResponse
   viam.proto.app.ListFragmentsRequest
   viam.proto.app.ListFragmentsResponse
   viam.proto.app.ListKeysRequest
   viam.proto.app.ListKeysResponse
   viam.proto.app.ListLocationsRequest
   viam.proto.app.ListLocationsResponse
   viam.proto.app.ListMachineFragmentsRequest
   viam.proto.app.ListMachineFragmentsResponse
   viam.proto.app.ListMachineSummariesRequest
   viam.proto.app.ListMachineSummariesResponse
   viam.proto.app.ListModulesRequest
   viam.proto.app.ListModulesResponse
   viam.proto.app.ListNestedFragmentsRequest
   viam.proto.app.ListNestedFragmentsResponse
   viam.proto.app.ListOAuthAppsRequest
   viam.proto.app.ListOAuthAppsResponse
   viam.proto.app.ListOrganizationMembersRequest
   viam.proto.app.ListOrganizationMembersResponse
   viam.proto.app.ListOrganizationsByUserRequest
   viam.proto.app.ListOrganizationsByUserResponse
   viam.proto.app.ListOrganizationsRequest
   viam.proto.app.ListOrganizationsResponse
   viam.proto.app.ListRegistryItemsRequest
   viam.proto.app.ListRegistryItemsResponse
   viam.proto.app.ListRobotsRequest
   viam.proto.app.ListRobotsResponse
   viam.proto.app.Location
   viam.proto.app.LocationAuth
   viam.proto.app.LocationAuthRequest
   viam.proto.app.LocationAuthResponse
   viam.proto.app.LocationOrganization
   viam.proto.app.LocationSummary
   viam.proto.app.MachineSummary
   viam.proto.app.MarkPartAsMainRequest
   viam.proto.app.MarkPartAsMainResponse
   viam.proto.app.MarkPartForRestartRequest
   viam.proto.app.MarkPartForRestartResponse
   viam.proto.app.MLModelMetadata
   viam.proto.app.MLTrainingMetadata
   viam.proto.app.MLTrainingVersion
   viam.proto.app.Model
   viam.proto.app.Module
   viam.proto.app.ModuleFileInfo
   viam.proto.app.ModuleMetadata
   viam.proto.app.ModuleVersion
   viam.proto.app.NewRobotPartRequest
   viam.proto.app.NewRobotPartResponse
   viam.proto.app.NewRobotRequest
   viam.proto.app.NewRobotResponse
   viam.proto.app.OAuthConfig
   viam.proto.app.Organization
   viam.proto.app.OrganizationGetLogoRequest
   viam.proto.app.OrganizationGetLogoResponse
   viam.proto.app.OrganizationGetSupportEmailRequest
   viam.proto.app.OrganizationGetSupportEmailResponse
   viam.proto.app.OrganizationIdentity
   viam.proto.app.OrganizationInvite
   viam.proto.app.OrganizationMember
   viam.proto.app.OrganizationSetLogoRequest
   viam.proto.app.OrganizationSetLogoResponse
   viam.proto.app.OrganizationSetSupportEmailRequest
   viam.proto.app.OrganizationSetSupportEmailResponse
   viam.proto.app.OrgDetails
   viam.proto.app.PartSummary
   viam.proto.app.ReadOAuthAppRequest
   viam.proto.app.ReadOAuthAppResponse
   viam.proto.app.RegistryItem
   viam.proto.app.RegistryItemStatus
   viam.proto.app.RemoveRoleRequest
   viam.proto.app.RemoveRoleResponse
   viam.proto.app.RenameKeyRequest
   viam.proto.app.RenameKeyResponse
   viam.proto.app.RenameRegistryItemRequest
   viam.proto.app.RenameRegistryItemResponse
   viam.proto.app.ResendOrganizationInviteRequest
   viam.proto.app.ResendOrganizationInviteResponse
   viam.proto.app.ResolvedFragment
   viam.proto.app.Robot
   viam.proto.app.RobotPart
   viam.proto.app.RobotPartHistoryEntry
   viam.proto.app.RotateKeyRequest
   viam.proto.app.RotateKeyResponse
   viam.proto.app.RoverRentalRobot
   viam.proto.app.SearchOrganizationsRequest
   viam.proto.app.SearchOrganizationsResponse
   viam.proto.app.SetFragmentTagRequest
   viam.proto.app.SetFragmentTagResponse
   viam.proto.app.SharedSecret
   viam.proto.app.ShareLocationRequest
   viam.proto.app.ShareLocationResponse
   viam.proto.app.StorageConfig
   viam.proto.app.TailRobotPartLogsRequest
   viam.proto.app.TailRobotPartLogsResponse
   viam.proto.app.TransferRegistryItemRequest
   viam.proto.app.TransferRegistryItemResponse
   viam.proto.app.UnshareLocationRequest
   viam.proto.app.UnshareLocationResponse
   viam.proto.app.UpdateBillingServiceRequest
   viam.proto.app.UpdateBillingServiceResponse
   viam.proto.app.UpdateFragmentRequest
   viam.proto.app.UpdateFragmentResponse
   viam.proto.app.UpdateLocationMetadataRequest
   viam.proto.app.UpdateLocationMetadataResponse
   viam.proto.app.UpdateLocationRequest
   viam.proto.app.UpdateLocationResponse
   viam.proto.app.UpdateMLModelMetadata
   viam.proto.app.UpdateMLTrainingMetadata
   viam.proto.app.UpdateModuleMetadata
   viam.proto.app.UpdateModuleRequest
   viam.proto.app.UpdateModuleResponse
   viam.proto.app.UpdateOAuthAppRequest
   viam.proto.app.UpdateOAuthAppResponse
   viam.proto.app.UpdateOrganizationInviteAuthorizationsRequest
   viam.proto.app.UpdateOrganizationInviteAuthorizationsResponse
   viam.proto.app.UpdateOrganizationMetadataRequest
   viam.proto.app.UpdateOrganizationMetadataResponse
   viam.proto.app.UpdateOrganizationRequest
   viam.proto.app.UpdateOrganizationResponse
   viam.proto.app.UpdateRegistryItemRequest
   viam.proto.app.UpdateRegistryItemResponse
   viam.proto.app.UpdateRobotMetadataRequest
   viam.proto.app.UpdateRobotMetadataResponse
   viam.proto.app.UpdateRobotPartMetadataRequest
   viam.proto.app.UpdateRobotPartMetadataResponse
   viam.proto.app.UpdateRobotPartRequest
   viam.proto.app.UpdateRobotPartResponse
   viam.proto.app.UpdateRobotRequest
   viam.proto.app.UpdateRobotResponse
   viam.proto.app.UploadModuleFileRequest
   viam.proto.app.UploadModuleFileResponse
   viam.proto.app.Uploads
   viam.proto.app.URLValidation
   viam.proto.app.VersionHistory
   viam.proto.app.ViamAgentVersion
   viam.proto.app.ViamServerVersion
   viam.proto.app.Visibility


Package Contents
----------------

.. py:class:: AppServiceBase

   Bases: :py:obj:`abc.ABC`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: GetUserIDByEmail(stream: grpclib.server.Stream[app.v1.app_pb2.GetUserIDByEmailRequest, app.v1.app_pb2.GetUserIDByEmailResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.CreateOrganizationRequest, app.v1.app_pb2.CreateOrganizationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListOrganizations(stream: grpclib.server.Stream[app.v1.app_pb2.ListOrganizationsRequest, app.v1.app_pb2.ListOrganizationsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetOrganizationsWithAccessToLocation(stream: grpclib.server.Stream[app.v1.app_pb2.GetOrganizationsWithAccessToLocationRequest, app.v1.app_pb2.GetOrganizationsWithAccessToLocationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListOrganizationsByUser(stream: grpclib.server.Stream[app.v1.app_pb2.ListOrganizationsByUserRequest, app.v1.app_pb2.ListOrganizationsByUserResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: SearchOrganizations(stream: grpclib.server.Stream[app.v1.app_pb2.SearchOrganizationsRequest, app.v1.app_pb2.SearchOrganizationsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.GetOrganizationRequest, app.v1.app_pb2.GetOrganizationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetOrganizationNamespaceAvailability(stream: grpclib.server.Stream[app.v1.app_pb2.GetOrganizationNamespaceAvailabilityRequest, app.v1.app_pb2.GetOrganizationNamespaceAvailabilityResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateOrganizationRequest, app.v1.app_pb2.UpdateOrganizationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOrganizationRequest, app.v1.app_pb2.DeleteOrganizationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetOrganizationMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.GetOrganizationMetadataRequest, app.v1.app_pb2.GetOrganizationMetadataResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateOrganizationMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateOrganizationMetadataRequest, app.v1.app_pb2.UpdateOrganizationMetadataResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListOrganizationMembers(stream: grpclib.server.Stream[app.v1.app_pb2.ListOrganizationMembersRequest, app.v1.app_pb2.ListOrganizationMembersResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateOrganizationInvite(stream: grpclib.server.Stream[app.v1.app_pb2.CreateOrganizationInviteRequest, app.v1.app_pb2.CreateOrganizationInviteResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateOrganizationInviteAuthorizations(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateOrganizationInviteAuthorizationsRequest, app.v1.app_pb2.UpdateOrganizationInviteAuthorizationsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteOrganizationMember(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOrganizationMemberRequest, app.v1.app_pb2.DeleteOrganizationMemberResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteOrganizationInvite(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOrganizationInviteRequest, app.v1.app_pb2.DeleteOrganizationInviteResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ResendOrganizationInvite(stream: grpclib.server.Stream[app.v1.app_pb2.ResendOrganizationInviteRequest, app.v1.app_pb2.ResendOrganizationInviteResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: EnableBillingService(stream: grpclib.server.Stream[app.v1.app_pb2.EnableBillingServiceRequest, app.v1.app_pb2.EnableBillingServiceResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DisableBillingService(stream: grpclib.server.Stream[app.v1.app_pb2.DisableBillingServiceRequest, app.v1.app_pb2.DisableBillingServiceResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateBillingService(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateBillingServiceRequest, app.v1.app_pb2.UpdateBillingServiceResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetBillingServiceConfig(stream: grpclib.server.Stream[app.v1.app_pb2.GetBillingServiceConfigRequest, app.v1.app_pb2.GetBillingServiceConfigResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: OrganizationSetSupportEmail(stream: grpclib.server.Stream[app.v1.app_pb2.OrganizationSetSupportEmailRequest, app.v1.app_pb2.OrganizationSetSupportEmailResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: OrganizationGetSupportEmail(stream: grpclib.server.Stream[app.v1.app_pb2.OrganizationGetSupportEmailRequest, app.v1.app_pb2.OrganizationGetSupportEmailResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: OrganizationSetLogo(stream: grpclib.server.Stream[app.v1.app_pb2.OrganizationSetLogoRequest, app.v1.app_pb2.OrganizationSetLogoResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: OrganizationGetLogo(stream: grpclib.server.Stream[app.v1.app_pb2.OrganizationGetLogoRequest, app.v1.app_pb2.OrganizationGetLogoResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: EnableAuthService(stream: grpclib.server.Stream[app.v1.app_pb2.EnableAuthServiceRequest, app.v1.app_pb2.EnableAuthServiceResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DisableAuthService(stream: grpclib.server.Stream[app.v1.app_pb2.DisableAuthServiceRequest, app.v1.app_pb2.DisableAuthServiceResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateOAuthApp(stream: grpclib.server.Stream[app.v1.app_pb2.CreateOAuthAppRequest, app.v1.app_pb2.CreateOAuthAppResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ReadOAuthApp(stream: grpclib.server.Stream[app.v1.app_pb2.ReadOAuthAppRequest, app.v1.app_pb2.ReadOAuthAppResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateOAuthApp(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateOAuthAppRequest, app.v1.app_pb2.UpdateOAuthAppResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteOAuthApp(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOAuthAppRequest, app.v1.app_pb2.DeleteOAuthAppResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListOAuthApps(stream: grpclib.server.Stream[app.v1.app_pb2.ListOAuthAppsRequest, app.v1.app_pb2.ListOAuthAppsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateLocation(stream: grpclib.server.Stream[app.v1.app_pb2.CreateLocationRequest, app.v1.app_pb2.CreateLocationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetLocation(stream: grpclib.server.Stream[app.v1.app_pb2.GetLocationRequest, app.v1.app_pb2.GetLocationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateLocation(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateLocationRequest, app.v1.app_pb2.UpdateLocationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteLocation(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteLocationRequest, app.v1.app_pb2.DeleteLocationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetLocationMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.GetLocationMetadataRequest, app.v1.app_pb2.GetLocationMetadataResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateLocationMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateLocationMetadataRequest, app.v1.app_pb2.UpdateLocationMetadataResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListLocations(stream: grpclib.server.Stream[app.v1.app_pb2.ListLocationsRequest, app.v1.app_pb2.ListLocationsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ShareLocation(stream: grpclib.server.Stream[app.v1.app_pb2.ShareLocationRequest, app.v1.app_pb2.ShareLocationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UnshareLocation(stream: grpclib.server.Stream[app.v1.app_pb2.UnshareLocationRequest, app.v1.app_pb2.UnshareLocationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: LocationAuth(stream: grpclib.server.Stream[app.v1.app_pb2.LocationAuthRequest, app.v1.app_pb2.LocationAuthResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateLocationSecret(stream: grpclib.server.Stream[app.v1.app_pb2.CreateLocationSecretRequest, app.v1.app_pb2.CreateLocationSecretResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteLocationSecret(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteLocationSecretRequest, app.v1.app_pb2.DeleteLocationSecretResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetRobot(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotRequest, app.v1.app_pb2.GetRobotResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetRobotMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotMetadataRequest, app.v1.app_pb2.GetRobotMetadataResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateRobotMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRobotMetadataRequest, app.v1.app_pb2.UpdateRobotMetadataResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetRoverRentalRobots(stream: grpclib.server.Stream[app.v1.app_pb2.GetRoverRentalRobotsRequest, app.v1.app_pb2.GetRoverRentalRobotsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetRobotParts(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartsRequest, app.v1.app_pb2.GetRobotPartsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartRequest, app.v1.app_pb2.GetRobotPartResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetRobotPartLogs(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartLogsRequest, app.v1.app_pb2.GetRobotPartLogsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: TailRobotPartLogs(stream: grpclib.server.Stream[app.v1.app_pb2.TailRobotPartLogsRequest, app.v1.app_pb2.TailRobotPartLogsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetRobotPartHistory(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartHistoryRequest, app.v1.app_pb2.GetRobotPartHistoryResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRobotPartRequest, app.v1.app_pb2.UpdateRobotPartResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: NewRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.NewRobotPartRequest, app.v1.app_pb2.NewRobotPartResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRobotPartRequest, app.v1.app_pb2.DeleteRobotPartResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetRobotPartMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartMetadataRequest, app.v1.app_pb2.GetRobotPartMetadataResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateRobotPartMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRobotPartMetadataRequest, app.v1.app_pb2.UpdateRobotPartMetadataResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetRobotAPIKeys(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotAPIKeysRequest, app.v1.app_pb2.GetRobotAPIKeysResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: MarkPartAsMain(stream: grpclib.server.Stream[app.v1.app_pb2.MarkPartAsMainRequest, app.v1.app_pb2.MarkPartAsMainResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: MarkPartForRestart(stream: grpclib.server.Stream[app.v1.app_pb2.MarkPartForRestartRequest, app.v1.app_pb2.MarkPartForRestartResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateRobotPartSecret(stream: grpclib.server.Stream[app.v1.app_pb2.CreateRobotPartSecretRequest, app.v1.app_pb2.CreateRobotPartSecretResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteRobotPartSecret(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRobotPartSecretRequest, app.v1.app_pb2.DeleteRobotPartSecretResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListRobots(stream: grpclib.server.Stream[app.v1.app_pb2.ListRobotsRequest, app.v1.app_pb2.ListRobotsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: NewRobot(stream: grpclib.server.Stream[app.v1.app_pb2.NewRobotRequest, app.v1.app_pb2.NewRobotResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateRobot(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRobotRequest, app.v1.app_pb2.UpdateRobotResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteRobot(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRobotRequest, app.v1.app_pb2.DeleteRobotResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListFragments(stream: grpclib.server.Stream[app.v1.app_pb2.ListFragmentsRequest, app.v1.app_pb2.ListFragmentsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetFragment(stream: grpclib.server.Stream[app.v1.app_pb2.GetFragmentRequest, app.v1.app_pb2.GetFragmentResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateFragment(stream: grpclib.server.Stream[app.v1.app_pb2.CreateFragmentRequest, app.v1.app_pb2.CreateFragmentResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateFragment(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateFragmentRequest, app.v1.app_pb2.UpdateFragmentResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteFragment(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteFragmentRequest, app.v1.app_pb2.DeleteFragmentResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListNestedFragments(stream: grpclib.server.Stream[app.v1.app_pb2.ListNestedFragmentsRequest, app.v1.app_pb2.ListNestedFragmentsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListMachineFragments(stream: grpclib.server.Stream[app.v1.app_pb2.ListMachineFragmentsRequest, app.v1.app_pb2.ListMachineFragmentsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListMachineSummaries(stream: grpclib.server.Stream[app.v1.app_pb2.ListMachineSummariesRequest, app.v1.app_pb2.ListMachineSummariesResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetFragmentHistory(stream: grpclib.server.Stream[app.v1.app_pb2.GetFragmentHistoryRequest, app.v1.app_pb2.GetFragmentHistoryResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetFragmentUsage(stream: grpclib.server.Stream[app.v1.app_pb2.GetFragmentUsageRequest, app.v1.app_pb2.GetFragmentUsageResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: SetFragmentTag(stream: grpclib.server.Stream[app.v1.app_pb2.SetFragmentTagRequest, app.v1.app_pb2.SetFragmentTagResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteFragmentTag(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteFragmentTagRequest, app.v1.app_pb2.DeleteFragmentTagResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: AddRole(stream: grpclib.server.Stream[app.v1.app_pb2.AddRoleRequest, app.v1.app_pb2.AddRoleResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: RemoveRole(stream: grpclib.server.Stream[app.v1.app_pb2.RemoveRoleRequest, app.v1.app_pb2.RemoveRoleResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ChangeRole(stream: grpclib.server.Stream[app.v1.app_pb2.ChangeRoleRequest, app.v1.app_pb2.ChangeRoleResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListAuthorizations(stream: grpclib.server.Stream[app.v1.app_pb2.ListAuthorizationsRequest, app.v1.app_pb2.ListAuthorizationsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CheckPermissions(stream: grpclib.server.Stream[app.v1.app_pb2.CheckPermissionsRequest, app.v1.app_pb2.CheckPermissionsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.GetRegistryItemRequest, app.v1.app_pb2.GetRegistryItemResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.CreateRegistryItemRequest, app.v1.app_pb2.CreateRegistryItemResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRegistryItemRequest, app.v1.app_pb2.UpdateRegistryItemResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListRegistryItems(stream: grpclib.server.Stream[app.v1.app_pb2.ListRegistryItemsRequest, app.v1.app_pb2.ListRegistryItemsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRegistryItemRequest, app.v1.app_pb2.DeleteRegistryItemResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: RenameRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.RenameRegistryItemRequest, app.v1.app_pb2.RenameRegistryItemResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: TransferRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.TransferRegistryItemRequest, app.v1.app_pb2.TransferRegistryItemResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateModule(stream: grpclib.server.Stream[app.v1.app_pb2.CreateModuleRequest, app.v1.app_pb2.CreateModuleResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateModule(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateModuleRequest, app.v1.app_pb2.UpdateModuleResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UploadModuleFile(stream: grpclib.server.Stream[app.v1.app_pb2.UploadModuleFileRequest, app.v1.app_pb2.UploadModuleFileResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetModule(stream: grpclib.server.Stream[app.v1.app_pb2.GetModuleRequest, app.v1.app_pb2.GetModuleResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListModules(stream: grpclib.server.Stream[app.v1.app_pb2.ListModulesRequest, app.v1.app_pb2.ListModulesResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateKey(stream: grpclib.server.Stream[app.v1.app_pb2.CreateKeyRequest, app.v1.app_pb2.CreateKeyResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DeleteKey(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteKeyRequest, app.v1.app_pb2.DeleteKeyResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: ListKeys(stream: grpclib.server.Stream[app.v1.app_pb2.ListKeysRequest, app.v1.app_pb2.ListKeysResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: RenameKey(stream: grpclib.server.Stream[app.v1.app_pb2.RenameKeyRequest, app.v1.app_pb2.RenameKeyResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: RotateKey(stream: grpclib.server.Stream[app.v1.app_pb2.RotateKeyRequest, app.v1.app_pb2.RotateKeyResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: CreateKeyFromExistingKeyAuthorizations(stream: grpclib.server.Stream[app.v1.app_pb2.CreateKeyFromExistingKeyAuthorizationsRequest, app.v1.app_pb2.CreateKeyFromExistingKeyAuthorizationsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetAppContent(stream: grpclib.server.Stream[app.v1.app_pb2.GetAppContentRequest, app.v1.app_pb2.GetAppContentResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]


.. py:class:: AppServiceStub(channel: grpclib.client.Channel)

   .. py:attribute:: GetUserIDByEmail


   .. py:attribute:: CreateOrganization


   .. py:attribute:: ListOrganizations


   .. py:attribute:: GetOrganizationsWithAccessToLocation


   .. py:attribute:: ListOrganizationsByUser


   .. py:attribute:: SearchOrganizations


   .. py:attribute:: GetOrganization


   .. py:attribute:: GetOrganizationNamespaceAvailability


   .. py:attribute:: UpdateOrganization


   .. py:attribute:: DeleteOrganization


   .. py:attribute:: GetOrganizationMetadata


   .. py:attribute:: UpdateOrganizationMetadata


   .. py:attribute:: ListOrganizationMembers


   .. py:attribute:: CreateOrganizationInvite


   .. py:attribute:: UpdateOrganizationInviteAuthorizations


   .. py:attribute:: DeleteOrganizationMember


   .. py:attribute:: DeleteOrganizationInvite


   .. py:attribute:: ResendOrganizationInvite


   .. py:attribute:: EnableBillingService


   .. py:attribute:: DisableBillingService


   .. py:attribute:: UpdateBillingService


   .. py:attribute:: GetBillingServiceConfig


   .. py:attribute:: OrganizationSetSupportEmail


   .. py:attribute:: OrganizationGetSupportEmail


   .. py:attribute:: OrganizationSetLogo


   .. py:attribute:: OrganizationGetLogo


   .. py:attribute:: EnableAuthService


   .. py:attribute:: DisableAuthService


   .. py:attribute:: CreateOAuthApp


   .. py:attribute:: ReadOAuthApp


   .. py:attribute:: UpdateOAuthApp


   .. py:attribute:: DeleteOAuthApp


   .. py:attribute:: ListOAuthApps


   .. py:attribute:: CreateLocation


   .. py:attribute:: GetLocation


   .. py:attribute:: UpdateLocation


   .. py:attribute:: DeleteLocation


   .. py:attribute:: GetLocationMetadata


   .. py:attribute:: UpdateLocationMetadata


   .. py:attribute:: ListLocations


   .. py:attribute:: ShareLocation


   .. py:attribute:: UnshareLocation


   .. py:attribute:: LocationAuth


   .. py:attribute:: CreateLocationSecret


   .. py:attribute:: DeleteLocationSecret


   .. py:attribute:: GetRobot


   .. py:attribute:: GetRobotMetadata


   .. py:attribute:: UpdateRobotMetadata


   .. py:attribute:: GetRoverRentalRobots


   .. py:attribute:: GetRobotParts


   .. py:attribute:: GetRobotPart


   .. py:attribute:: GetRobotPartLogs


   .. py:attribute:: TailRobotPartLogs


   .. py:attribute:: GetRobotPartHistory


   .. py:attribute:: UpdateRobotPart


   .. py:attribute:: NewRobotPart


   .. py:attribute:: DeleteRobotPart


   .. py:attribute:: GetRobotPartMetadata


   .. py:attribute:: UpdateRobotPartMetadata


   .. py:attribute:: GetRobotAPIKeys


   .. py:attribute:: MarkPartAsMain


   .. py:attribute:: MarkPartForRestart


   .. py:attribute:: CreateRobotPartSecret


   .. py:attribute:: DeleteRobotPartSecret


   .. py:attribute:: ListRobots


   .. py:attribute:: NewRobot


   .. py:attribute:: UpdateRobot


   .. py:attribute:: DeleteRobot


   .. py:attribute:: ListFragments


   .. py:attribute:: GetFragment


   .. py:attribute:: CreateFragment


   .. py:attribute:: UpdateFragment


   .. py:attribute:: DeleteFragment


   .. py:attribute:: ListNestedFragments


   .. py:attribute:: ListMachineFragments


   .. py:attribute:: ListMachineSummaries


   .. py:attribute:: GetFragmentHistory


   .. py:attribute:: GetFragmentUsage


   .. py:attribute:: SetFragmentTag


   .. py:attribute:: DeleteFragmentTag


   .. py:attribute:: AddRole


   .. py:attribute:: RemoveRole


   .. py:attribute:: ChangeRole


   .. py:attribute:: ListAuthorizations


   .. py:attribute:: CheckPermissions


   .. py:attribute:: GetRegistryItem


   .. py:attribute:: CreateRegistryItem


   .. py:attribute:: UpdateRegistryItem


   .. py:attribute:: ListRegistryItems


   .. py:attribute:: DeleteRegistryItem


   .. py:attribute:: RenameRegistryItem


   .. py:attribute:: TransferRegistryItem


   .. py:attribute:: CreateModule


   .. py:attribute:: UpdateModule


   .. py:attribute:: UploadModuleFile


   .. py:attribute:: GetModule


   .. py:attribute:: ListModules


   .. py:attribute:: CreateKey


   .. py:attribute:: DeleteKey


   .. py:attribute:: ListKeys


   .. py:attribute:: RenameKey


   .. py:attribute:: RotateKey


   .. py:attribute:: CreateKeyFromExistingKeyAuthorizations


   .. py:attribute:: GetAppContent


.. py:class:: UnimplementedAppServiceBase

   Bases: :py:obj:`AppServiceBase`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: GetUserIDByEmail(stream: grpclib.server.Stream[app.v1.app_pb2.GetUserIDByEmailRequest, app.v1.app_pb2.GetUserIDByEmailResponse]) -> None
      :async:



   .. py:method:: CreateOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.CreateOrganizationRequest, app.v1.app_pb2.CreateOrganizationResponse]) -> None
      :async:



   .. py:method:: ListOrganizations(stream: grpclib.server.Stream[app.v1.app_pb2.ListOrganizationsRequest, app.v1.app_pb2.ListOrganizationsResponse]) -> None
      :async:



   .. py:method:: GetOrganizationsWithAccessToLocation(stream: grpclib.server.Stream[app.v1.app_pb2.GetOrganizationsWithAccessToLocationRequest, app.v1.app_pb2.GetOrganizationsWithAccessToLocationResponse]) -> None
      :async:



   .. py:method:: ListOrganizationsByUser(stream: grpclib.server.Stream[app.v1.app_pb2.ListOrganizationsByUserRequest, app.v1.app_pb2.ListOrganizationsByUserResponse]) -> None
      :async:



   .. py:method:: SearchOrganizations(stream: grpclib.server.Stream[app.v1.app_pb2.SearchOrganizationsRequest, app.v1.app_pb2.SearchOrganizationsResponse]) -> None
      :async:



   .. py:method:: GetOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.GetOrganizationRequest, app.v1.app_pb2.GetOrganizationResponse]) -> None
      :async:



   .. py:method:: GetOrganizationNamespaceAvailability(stream: grpclib.server.Stream[app.v1.app_pb2.GetOrganizationNamespaceAvailabilityRequest, app.v1.app_pb2.GetOrganizationNamespaceAvailabilityResponse]) -> None
      :async:



   .. py:method:: UpdateOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateOrganizationRequest, app.v1.app_pb2.UpdateOrganizationResponse]) -> None
      :async:



   .. py:method:: DeleteOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOrganizationRequest, app.v1.app_pb2.DeleteOrganizationResponse]) -> None
      :async:



   .. py:method:: GetOrganizationMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.GetOrganizationMetadataRequest, app.v1.app_pb2.GetOrganizationMetadataResponse]) -> None
      :async:



   .. py:method:: UpdateOrganizationMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateOrganizationMetadataRequest, app.v1.app_pb2.UpdateOrganizationMetadataResponse]) -> None
      :async:



   .. py:method:: ListOrganizationMembers(stream: grpclib.server.Stream[app.v1.app_pb2.ListOrganizationMembersRequest, app.v1.app_pb2.ListOrganizationMembersResponse]) -> None
      :async:



   .. py:method:: CreateOrganizationInvite(stream: grpclib.server.Stream[app.v1.app_pb2.CreateOrganizationInviteRequest, app.v1.app_pb2.CreateOrganizationInviteResponse]) -> None
      :async:



   .. py:method:: UpdateOrganizationInviteAuthorizations(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateOrganizationInviteAuthorizationsRequest, app.v1.app_pb2.UpdateOrganizationInviteAuthorizationsResponse]) -> None
      :async:



   .. py:method:: DeleteOrganizationMember(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOrganizationMemberRequest, app.v1.app_pb2.DeleteOrganizationMemberResponse]) -> None
      :async:



   .. py:method:: DeleteOrganizationInvite(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOrganizationInviteRequest, app.v1.app_pb2.DeleteOrganizationInviteResponse]) -> None
      :async:



   .. py:method:: ResendOrganizationInvite(stream: grpclib.server.Stream[app.v1.app_pb2.ResendOrganizationInviteRequest, app.v1.app_pb2.ResendOrganizationInviteResponse]) -> None
      :async:



   .. py:method:: EnableBillingService(stream: grpclib.server.Stream[app.v1.app_pb2.EnableBillingServiceRequest, app.v1.app_pb2.EnableBillingServiceResponse]) -> None
      :async:



   .. py:method:: DisableBillingService(stream: grpclib.server.Stream[app.v1.app_pb2.DisableBillingServiceRequest, app.v1.app_pb2.DisableBillingServiceResponse]) -> None
      :async:



   .. py:method:: UpdateBillingService(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateBillingServiceRequest, app.v1.app_pb2.UpdateBillingServiceResponse]) -> None
      :async:



   .. py:method:: GetBillingServiceConfig(stream: grpclib.server.Stream[app.v1.app_pb2.GetBillingServiceConfigRequest, app.v1.app_pb2.GetBillingServiceConfigResponse]) -> None
      :async:



   .. py:method:: OrganizationSetSupportEmail(stream: grpclib.server.Stream[app.v1.app_pb2.OrganizationSetSupportEmailRequest, app.v1.app_pb2.OrganizationSetSupportEmailResponse]) -> None
      :async:



   .. py:method:: OrganizationGetSupportEmail(stream: grpclib.server.Stream[app.v1.app_pb2.OrganizationGetSupportEmailRequest, app.v1.app_pb2.OrganizationGetSupportEmailResponse]) -> None
      :async:



   .. py:method:: OrganizationSetLogo(stream: grpclib.server.Stream[app.v1.app_pb2.OrganizationSetLogoRequest, app.v1.app_pb2.OrganizationSetLogoResponse]) -> None
      :async:



   .. py:method:: OrganizationGetLogo(stream: grpclib.server.Stream[app.v1.app_pb2.OrganizationGetLogoRequest, app.v1.app_pb2.OrganizationGetLogoResponse]) -> None
      :async:



   .. py:method:: EnableAuthService(stream: grpclib.server.Stream[app.v1.app_pb2.EnableAuthServiceRequest, app.v1.app_pb2.EnableAuthServiceResponse]) -> None
      :async:



   .. py:method:: DisableAuthService(stream: grpclib.server.Stream[app.v1.app_pb2.DisableAuthServiceRequest, app.v1.app_pb2.DisableAuthServiceResponse]) -> None
      :async:



   .. py:method:: CreateOAuthApp(stream: grpclib.server.Stream[app.v1.app_pb2.CreateOAuthAppRequest, app.v1.app_pb2.CreateOAuthAppResponse]) -> None
      :async:



   .. py:method:: ReadOAuthApp(stream: grpclib.server.Stream[app.v1.app_pb2.ReadOAuthAppRequest, app.v1.app_pb2.ReadOAuthAppResponse]) -> None
      :async:



   .. py:method:: UpdateOAuthApp(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateOAuthAppRequest, app.v1.app_pb2.UpdateOAuthAppResponse]) -> None
      :async:



   .. py:method:: DeleteOAuthApp(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOAuthAppRequest, app.v1.app_pb2.DeleteOAuthAppResponse]) -> None
      :async:



   .. py:method:: ListOAuthApps(stream: grpclib.server.Stream[app.v1.app_pb2.ListOAuthAppsRequest, app.v1.app_pb2.ListOAuthAppsResponse]) -> None
      :async:



   .. py:method:: CreateLocation(stream: grpclib.server.Stream[app.v1.app_pb2.CreateLocationRequest, app.v1.app_pb2.CreateLocationResponse]) -> None
      :async:



   .. py:method:: GetLocation(stream: grpclib.server.Stream[app.v1.app_pb2.GetLocationRequest, app.v1.app_pb2.GetLocationResponse]) -> None
      :async:



   .. py:method:: UpdateLocation(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateLocationRequest, app.v1.app_pb2.UpdateLocationResponse]) -> None
      :async:



   .. py:method:: DeleteLocation(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteLocationRequest, app.v1.app_pb2.DeleteLocationResponse]) -> None
      :async:



   .. py:method:: GetLocationMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.GetLocationMetadataRequest, app.v1.app_pb2.GetLocationMetadataResponse]) -> None
      :async:



   .. py:method:: UpdateLocationMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateLocationMetadataRequest, app.v1.app_pb2.UpdateLocationMetadataResponse]) -> None
      :async:



   .. py:method:: ListLocations(stream: grpclib.server.Stream[app.v1.app_pb2.ListLocationsRequest, app.v1.app_pb2.ListLocationsResponse]) -> None
      :async:



   .. py:method:: ShareLocation(stream: grpclib.server.Stream[app.v1.app_pb2.ShareLocationRequest, app.v1.app_pb2.ShareLocationResponse]) -> None
      :async:



   .. py:method:: UnshareLocation(stream: grpclib.server.Stream[app.v1.app_pb2.UnshareLocationRequest, app.v1.app_pb2.UnshareLocationResponse]) -> None
      :async:



   .. py:method:: LocationAuth(stream: grpclib.server.Stream[app.v1.app_pb2.LocationAuthRequest, app.v1.app_pb2.LocationAuthResponse]) -> None
      :async:



   .. py:method:: CreateLocationSecret(stream: grpclib.server.Stream[app.v1.app_pb2.CreateLocationSecretRequest, app.v1.app_pb2.CreateLocationSecretResponse]) -> None
      :async:



   .. py:method:: DeleteLocationSecret(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteLocationSecretRequest, app.v1.app_pb2.DeleteLocationSecretResponse]) -> None
      :async:



   .. py:method:: GetRobot(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotRequest, app.v1.app_pb2.GetRobotResponse]) -> None
      :async:



   .. py:method:: GetRobotMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotMetadataRequest, app.v1.app_pb2.GetRobotMetadataResponse]) -> None
      :async:



   .. py:method:: UpdateRobotMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRobotMetadataRequest, app.v1.app_pb2.UpdateRobotMetadataResponse]) -> None
      :async:



   .. py:method:: GetRoverRentalRobots(stream: grpclib.server.Stream[app.v1.app_pb2.GetRoverRentalRobotsRequest, app.v1.app_pb2.GetRoverRentalRobotsResponse]) -> None
      :async:



   .. py:method:: GetRobotParts(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartsRequest, app.v1.app_pb2.GetRobotPartsResponse]) -> None
      :async:



   .. py:method:: GetRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartRequest, app.v1.app_pb2.GetRobotPartResponse]) -> None
      :async:



   .. py:method:: GetRobotPartLogs(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartLogsRequest, app.v1.app_pb2.GetRobotPartLogsResponse]) -> None
      :async:



   .. py:method:: TailRobotPartLogs(stream: grpclib.server.Stream[app.v1.app_pb2.TailRobotPartLogsRequest, app.v1.app_pb2.TailRobotPartLogsResponse]) -> None
      :async:



   .. py:method:: GetRobotPartHistory(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartHistoryRequest, app.v1.app_pb2.GetRobotPartHistoryResponse]) -> None
      :async:



   .. py:method:: UpdateRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRobotPartRequest, app.v1.app_pb2.UpdateRobotPartResponse]) -> None
      :async:



   .. py:method:: NewRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.NewRobotPartRequest, app.v1.app_pb2.NewRobotPartResponse]) -> None
      :async:



   .. py:method:: DeleteRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRobotPartRequest, app.v1.app_pb2.DeleteRobotPartResponse]) -> None
      :async:



   .. py:method:: GetRobotPartMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartMetadataRequest, app.v1.app_pb2.GetRobotPartMetadataResponse]) -> None
      :async:



   .. py:method:: UpdateRobotPartMetadata(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRobotPartMetadataRequest, app.v1.app_pb2.UpdateRobotPartMetadataResponse]) -> None
      :async:



   .. py:method:: GetRobotAPIKeys(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotAPIKeysRequest, app.v1.app_pb2.GetRobotAPIKeysResponse]) -> None
      :async:



   .. py:method:: MarkPartAsMain(stream: grpclib.server.Stream[app.v1.app_pb2.MarkPartAsMainRequest, app.v1.app_pb2.MarkPartAsMainResponse]) -> None
      :async:



   .. py:method:: MarkPartForRestart(stream: grpclib.server.Stream[app.v1.app_pb2.MarkPartForRestartRequest, app.v1.app_pb2.MarkPartForRestartResponse]) -> None
      :async:



   .. py:method:: CreateRobotPartSecret(stream: grpclib.server.Stream[app.v1.app_pb2.CreateRobotPartSecretRequest, app.v1.app_pb2.CreateRobotPartSecretResponse]) -> None
      :async:



   .. py:method:: DeleteRobotPartSecret(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRobotPartSecretRequest, app.v1.app_pb2.DeleteRobotPartSecretResponse]) -> None
      :async:



   .. py:method:: ListRobots(stream: grpclib.server.Stream[app.v1.app_pb2.ListRobotsRequest, app.v1.app_pb2.ListRobotsResponse]) -> None
      :async:



   .. py:method:: NewRobot(stream: grpclib.server.Stream[app.v1.app_pb2.NewRobotRequest, app.v1.app_pb2.NewRobotResponse]) -> None
      :async:



   .. py:method:: UpdateRobot(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRobotRequest, app.v1.app_pb2.UpdateRobotResponse]) -> None
      :async:



   .. py:method:: DeleteRobot(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRobotRequest, app.v1.app_pb2.DeleteRobotResponse]) -> None
      :async:



   .. py:method:: ListFragments(stream: grpclib.server.Stream[app.v1.app_pb2.ListFragmentsRequest, app.v1.app_pb2.ListFragmentsResponse]) -> None
      :async:



   .. py:method:: GetFragment(stream: grpclib.server.Stream[app.v1.app_pb2.GetFragmentRequest, app.v1.app_pb2.GetFragmentResponse]) -> None
      :async:



   .. py:method:: CreateFragment(stream: grpclib.server.Stream[app.v1.app_pb2.CreateFragmentRequest, app.v1.app_pb2.CreateFragmentResponse]) -> None
      :async:



   .. py:method:: UpdateFragment(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateFragmentRequest, app.v1.app_pb2.UpdateFragmentResponse]) -> None
      :async:



   .. py:method:: DeleteFragment(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteFragmentRequest, app.v1.app_pb2.DeleteFragmentResponse]) -> None
      :async:



   .. py:method:: ListNestedFragments(stream: grpclib.server.Stream[app.v1.app_pb2.ListNestedFragmentsRequest, app.v1.app_pb2.ListNestedFragmentsResponse]) -> None
      :async:



   .. py:method:: ListMachineFragments(stream: grpclib.server.Stream[app.v1.app_pb2.ListMachineFragmentsRequest, app.v1.app_pb2.ListMachineFragmentsResponse]) -> None
      :async:



   .. py:method:: ListMachineSummaries(stream: grpclib.server.Stream[app.v1.app_pb2.ListMachineSummariesRequest, app.v1.app_pb2.ListMachineSummariesResponse]) -> None
      :async:



   .. py:method:: GetFragmentHistory(stream: grpclib.server.Stream[app.v1.app_pb2.GetFragmentHistoryRequest, app.v1.app_pb2.GetFragmentHistoryResponse]) -> None
      :async:



   .. py:method:: GetFragmentUsage(stream: grpclib.server.Stream[app.v1.app_pb2.GetFragmentUsageRequest, app.v1.app_pb2.GetFragmentUsageResponse]) -> None
      :async:



   .. py:method:: SetFragmentTag(stream: grpclib.server.Stream[app.v1.app_pb2.SetFragmentTagRequest, app.v1.app_pb2.SetFragmentTagResponse]) -> None
      :async:



   .. py:method:: DeleteFragmentTag(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteFragmentTagRequest, app.v1.app_pb2.DeleteFragmentTagResponse]) -> None
      :async:



   .. py:method:: AddRole(stream: grpclib.server.Stream[app.v1.app_pb2.AddRoleRequest, app.v1.app_pb2.AddRoleResponse]) -> None
      :async:



   .. py:method:: RemoveRole(stream: grpclib.server.Stream[app.v1.app_pb2.RemoveRoleRequest, app.v1.app_pb2.RemoveRoleResponse]) -> None
      :async:



   .. py:method:: ChangeRole(stream: grpclib.server.Stream[app.v1.app_pb2.ChangeRoleRequest, app.v1.app_pb2.ChangeRoleResponse]) -> None
      :async:



   .. py:method:: ListAuthorizations(stream: grpclib.server.Stream[app.v1.app_pb2.ListAuthorizationsRequest, app.v1.app_pb2.ListAuthorizationsResponse]) -> None
      :async:



   .. py:method:: CheckPermissions(stream: grpclib.server.Stream[app.v1.app_pb2.CheckPermissionsRequest, app.v1.app_pb2.CheckPermissionsResponse]) -> None
      :async:



   .. py:method:: GetRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.GetRegistryItemRequest, app.v1.app_pb2.GetRegistryItemResponse]) -> None
      :async:



   .. py:method:: CreateRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.CreateRegistryItemRequest, app.v1.app_pb2.CreateRegistryItemResponse]) -> None
      :async:



   .. py:method:: UpdateRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRegistryItemRequest, app.v1.app_pb2.UpdateRegistryItemResponse]) -> None
      :async:



   .. py:method:: ListRegistryItems(stream: grpclib.server.Stream[app.v1.app_pb2.ListRegistryItemsRequest, app.v1.app_pb2.ListRegistryItemsResponse]) -> None
      :async:



   .. py:method:: DeleteRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRegistryItemRequest, app.v1.app_pb2.DeleteRegistryItemResponse]) -> None
      :async:



   .. py:method:: RenameRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.RenameRegistryItemRequest, app.v1.app_pb2.RenameRegistryItemResponse]) -> None
      :async:



   .. py:method:: TransferRegistryItem(stream: grpclib.server.Stream[app.v1.app_pb2.TransferRegistryItemRequest, app.v1.app_pb2.TransferRegistryItemResponse]) -> None
      :async:



   .. py:method:: CreateModule(stream: grpclib.server.Stream[app.v1.app_pb2.CreateModuleRequest, app.v1.app_pb2.CreateModuleResponse]) -> None
      :async:



   .. py:method:: UpdateModule(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateModuleRequest, app.v1.app_pb2.UpdateModuleResponse]) -> None
      :async:



   .. py:method:: UploadModuleFile(stream: grpclib.server.Stream[app.v1.app_pb2.UploadModuleFileRequest, app.v1.app_pb2.UploadModuleFileResponse]) -> None
      :async:



   .. py:method:: GetModule(stream: grpclib.server.Stream[app.v1.app_pb2.GetModuleRequest, app.v1.app_pb2.GetModuleResponse]) -> None
      :async:



   .. py:method:: ListModules(stream: grpclib.server.Stream[app.v1.app_pb2.ListModulesRequest, app.v1.app_pb2.ListModulesResponse]) -> None
      :async:



   .. py:method:: CreateKey(stream: grpclib.server.Stream[app.v1.app_pb2.CreateKeyRequest, app.v1.app_pb2.CreateKeyResponse]) -> None
      :async:



   .. py:method:: DeleteKey(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteKeyRequest, app.v1.app_pb2.DeleteKeyResponse]) -> None
      :async:



   .. py:method:: ListKeys(stream: grpclib.server.Stream[app.v1.app_pb2.ListKeysRequest, app.v1.app_pb2.ListKeysResponse]) -> None
      :async:



   .. py:method:: RenameKey(stream: grpclib.server.Stream[app.v1.app_pb2.RenameKeyRequest, app.v1.app_pb2.RenameKeyResponse]) -> None
      :async:



   .. py:method:: RotateKey(stream: grpclib.server.Stream[app.v1.app_pb2.RotateKeyRequest, app.v1.app_pb2.RotateKeyResponse]) -> None
      :async:



   .. py:method:: CreateKeyFromExistingKeyAuthorizations(stream: grpclib.server.Stream[app.v1.app_pb2.CreateKeyFromExistingKeyAuthorizationsRequest, app.v1.app_pb2.CreateKeyFromExistingKeyAuthorizationsResponse]) -> None
      :async:



   .. py:method:: GetAppContent(stream: grpclib.server.Stream[app.v1.app_pb2.GetAppContentRequest, app.v1.app_pb2.GetAppContentResponse]) -> None
      :async:



.. py:class:: PKCE

   Bases: :py:obj:`_PKCE`


.. py:class:: AdditionalFragment(*, fragment_id: str = ..., version: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: fragment_id
      :type:  str


   .. py:attribute:: version
      :type:  str


   .. py:method:: HasField(field_name: Literal['_version', b'_version', 'version', b'version']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_version', b'_version']) -> Literal['version'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: AddRoleRequest(*, authorization: global___Authorization | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: authorization
      :type: global___Authorization



   .. py:method:: HasField(field_name: Literal['authorization', b'authorization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: AddRoleResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: APIKey(*, id: str = ..., key: str = ..., name: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: key
      :type:  str


   .. py:attribute:: name
      :type:  str


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:method:: HasField(field_name: Literal['created_on', b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: APIKeyWithAuthorizations(*, api_key: global___APIKey | None = ..., authorizations: collections.abc.Iterable[global___AuthorizationDetails] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: api_key
      :type: global___APIKey



   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizationDetails]



   .. py:method:: HasField(field_name: Literal['api_key', b'api_key']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: App(*, name: str = ..., type: str = ..., entrypoint: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str

      The name of the application


   .. py:attribute:: type
      :type:  str

      The type of the application


   .. py:attribute:: entrypoint
      :type:  str

      The entrypoint of the application


.. py:class:: AuthenticationType

   Bases: :py:obj:`_AuthenticationType`


.. py:class:: AuthenticatorInfo(*, type: global___AuthenticationType = ..., value: str = ..., is_deactivated: bool = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: type
      :type:  global___AuthenticationType


   .. py:attribute:: value
      :type:  str


   .. py:attribute:: is_deactivated
      :type:  bool


.. py:class:: Authorization(*, authorization_type: str = ..., authorization_id: str = ..., resource_type: str = ..., resource_id: str = ..., identity_id: str = ..., organization_id: str = ..., identity_type: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: authorization_type
      :type:  str


   .. py:attribute:: authorization_id
      :type:  str


   .. py:attribute:: resource_type
      :type:  str


   .. py:attribute:: resource_id
      :type:  str


   .. py:attribute:: identity_id
      :type:  str


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: identity_type
      :type:  str


.. py:class:: AuthorizationDetails(*, authorization_type: str = ..., authorization_id: str = ..., resource_type: str = ..., resource_id: str = ..., org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: authorization_type
      :type:  str


   .. py:attribute:: authorization_id
      :type:  str


   .. py:attribute:: resource_type
      :type:  str


   .. py:attribute:: resource_id
      :type:  str


   .. py:attribute:: org_id
      :type:  str


.. py:class:: AuthorizedPermissions(*, resource_type: str = ..., resource_id: str = ..., permissions: collections.abc.Iterable[str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: resource_type
      :type:  str


   .. py:attribute:: resource_id
      :type:  str


   .. py:property:: permissions
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



.. py:class:: BillingAddress(*, address_line_1: str = ..., address_line_2: str | None = ..., city: str = ..., state: str = ..., zipcode: str = ..., country: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Third Party Org Services


   .. py:attribute:: address_line_1
      :type:  str


   .. py:attribute:: address_line_2
      :type:  str


   .. py:attribute:: city
      :type:  str


   .. py:attribute:: state
      :type:  str


   .. py:attribute:: zipcode
      :type:  str


   .. py:attribute:: country
      :type:  str


   .. py:method:: HasField(field_name: Literal['_address_line_2', b'_address_line_2', 'address_line_2', b'address_line_2']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_address_line_2', b'_address_line_2']) -> Literal['address_line_2'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: ChangeRoleRequest(*, old_authorization: global___Authorization | None = ..., new_authorization: global___Authorization | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: old_authorization
      :type: global___Authorization



   .. py:property:: new_authorization
      :type: global___Authorization



   .. py:method:: HasField(field_name: Literal['new_authorization', b'new_authorization', 'old_authorization', b'old_authorization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ChangeRoleResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: CheckPermissionsRequest(*, permissions: collections.abc.Iterable[global___AuthorizedPermissions] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: permissions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizedPermissions]



.. py:class:: CheckPermissionsResponse(*, authorized_permissions: collections.abc.Iterable[global___AuthorizedPermissions] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: authorized_permissions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizedPermissions]



.. py:class:: ClientAuthentication

   Bases: :py:obj:`_ClientAuthentication`


.. py:class:: CreateFragmentRequest(*, name: str = ..., config: google.protobuf.struct_pb2.Struct | None = ..., organization_id: str = ..., visibility: global___FragmentVisibility | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: visibility
      :type:  global___FragmentVisibility


   .. py:property:: config
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['_visibility', b'_visibility', 'config', b'config', 'visibility', b'visibility']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_visibility', b'_visibility']) -> Literal['visibility'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: CreateFragmentResponse(*, fragment: global___Fragment | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: fragment
      :type: global___Fragment



   .. py:method:: HasField(field_name: Literal['fragment', b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateKeyFromExistingKeyAuthorizationsRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: CreateKeyFromExistingKeyAuthorizationsResponse(*, id: str = ..., key: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: key
      :type:  str


.. py:class:: CreateKeyRequest(*, authorizations: collections.abc.Iterable[global___Authorization] | None = ..., name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str


   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorization]



.. py:class:: CreateKeyResponse(*, key: str = ..., id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: key
      :type:  str


   .. py:attribute:: id
      :type:  str


.. py:class:: CreateLocationRequest(*, organization_id: str = ..., name: str = ..., parent_location_id: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str

      Organization ID to create the location under.


   .. py:attribute:: name
      :type:  str

      Name of the location.


   .. py:attribute:: parent_location_id
      :type:  str

      The new parent location to move the location under.


   .. py:method:: HasField(field_name: Literal['_parent_location_id', b'_parent_location_id', 'parent_location_id', b'parent_location_id']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_parent_location_id', b'_parent_location_id']) -> Literal['parent_location_id'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: CreateLocationResponse(*, location: global___Location | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: location
      :type: global___Location

      Location object is returned.


   .. py:method:: HasField(field_name: Literal['location', b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateLocationSecretRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str

      Location ID to create the secret in.


.. py:class:: CreateLocationSecretResponse(*, auth: global___LocationAuth | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: auth
      :type: global___LocationAuth

      Location's auth after updates.


   .. py:method:: HasField(field_name: Literal['auth', b'auth']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateModuleRequest(*, organization_id: str = ..., name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Modules


   .. py:attribute:: organization_id
      :type:  str

      The organization to create the module under


   .. py:attribute:: name
      :type:  str

      The name of the module, which must be unique within your org


.. py:class:: CreateModuleResponse(*, module_id: str = ..., url: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: module_id
      :type:  str

      name where prefix is the module owner's orgid or namespace)

      :type: The id of the module (formatted as prefix


   .. py:attribute:: url
      :type:  str

      The detail page of the module


.. py:class:: CreateOAuthAppRequest(*, org_id: str = ..., client_name: str = ..., oauth_config: global___OAuthConfig | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


   .. py:attribute:: client_name
      :type:  str


   .. py:property:: oauth_config
      :type: global___OAuthConfig



   .. py:method:: HasField(field_name: Literal['oauth_config', b'oauth_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateOAuthAppResponse(*, client_id: str = ..., client_secret: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: client_id
      :type:  str


   .. py:attribute:: client_secret
      :type:  str


.. py:class:: CreateOrganizationInviteRequest(*, organization_id: str = ..., email: str = ..., authorizations: collections.abc.Iterable[global___Authorization] | None = ..., send_email_invite: bool | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: email
      :type:  str


   .. py:attribute:: send_email_invite
      :type:  bool

      Set to true (the default) to send an email to the recipient of an invite. The user must accept the email to be added to the associated authorizations.
      When set to false, the user automatically receives the associated authorization on the next login of the user with the associated email address.


   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorization]



   .. py:method:: HasField(field_name: Literal['_send_email_invite', b'_send_email_invite', 'send_email_invite', b'send_email_invite']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_send_email_invite', b'_send_email_invite']) -> Literal['send_email_invite'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: CreateOrganizationInviteResponse(*, invite: global___OrganizationInvite | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: invite
      :type: global___OrganizationInvite



   .. py:method:: HasField(field_name: Literal['invite', b'invite']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateOrganizationRequest(*, name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str


.. py:class:: CreateOrganizationResponse(*, organization: global___Organization | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: organization
      :type: global___Organization



   .. py:method:: HasField(field_name: Literal['organization', b'organization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateRegistryItemRequest(*, organization_id: str = ..., name: str = ..., type: viam.gen.app.packages.v1.packages_pb2.PackageType.ValueType = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str

      The organization to create the registry item under


   .. py:attribute:: name
      :type:  str

      The name of the registry item, which must be unique within your org


   .. py:attribute:: type
      :type:  viam.gen.app.packages.v1.packages_pb2.PackageType.ValueType

      The type of the item in the registry


.. py:class:: CreateRegistryItemResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: CreateRobotPartSecretRequest(*, part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: part_id
      :type:  str

      Robot Part ID to create the secret in.


.. py:class:: CreateRobotPartSecretResponse(*, part: global___RobotPart | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: part
      :type: global___RobotPart

      Location's auth after updates.


   .. py:method:: HasField(field_name: Literal['part', b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: DeleteFragmentRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: DeleteFragmentResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteFragmentTagRequest(*, fragment_id: str = ..., tag: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: fragment_id
      :type:  str


   .. py:attribute:: tag
      :type:  str


.. py:class:: DeleteFragmentTagResponse(*, tags: collections.abc.Iterable[global___FragmentTag] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: tags
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FragmentTag]



.. py:class:: DeleteKeyRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: DeleteKeyResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteLocationRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str

      Location ID of location to delete.


.. py:class:: DeleteLocationResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteLocationSecretRequest(*, location_id: str = ..., secret_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str


   .. py:attribute:: secret_id
      :type:  str


.. py:class:: DeleteLocationSecretResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteOAuthAppRequest(*, org_id: str = ..., client_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


   .. py:attribute:: client_id
      :type:  str


.. py:class:: DeleteOAuthAppResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteOrganizationInviteRequest(*, organization_id: str = ..., email: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: email
      :type:  str


.. py:class:: DeleteOrganizationInviteResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteOrganizationMemberRequest(*, organization_id: str = ..., user_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: user_id
      :type:  str


.. py:class:: DeleteOrganizationMemberResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteOrganizationRequest(*, organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


.. py:class:: DeleteOrganizationResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteRegistryItemRequest(*, item_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: item_id
      :type:  str

      name where prefix is the owner's orgid or namespace)

      :type: The id of the item (formatted as prefix


.. py:class:: DeleteRegistryItemResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteRobotPartRequest(*, part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: part_id
      :type:  str


.. py:class:: DeleteRobotPartResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteRobotPartSecretRequest(*, part_id: str = ..., secret_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: part_id
      :type:  str


   .. py:attribute:: secret_id
      :type:  str


.. py:class:: DeleteRobotPartSecretResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteRobotRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: DeleteRobotResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DisableAuthServiceRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


.. py:class:: DisableAuthServiceResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DisableBillingServiceRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


.. py:class:: DisableBillingServiceResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: EnableAuthServiceRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


.. py:class:: EnableAuthServiceResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: EnableBillingServiceRequest(*, org_id: str = ..., billing_address: global___BillingAddress | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


   .. py:property:: billing_address
      :type: global___BillingAddress



   .. py:method:: HasField(field_name: Literal['billing_address', b'billing_address']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: EnableBillingServiceResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: EnabledGrant

   Bases: :py:obj:`_EnabledGrant`


.. py:class:: Fragment(*, id: str = ..., name: str = ..., fragment: google.protobuf.struct_pb2.Struct | None = ..., organization_owner: str = ..., public: bool = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., organization_name: str = ..., robot_part_count: int = ..., organization_count: int = ..., only_used_by_owner: bool = ..., visibility: global___FragmentVisibility = ..., last_updated: google.protobuf.timestamp_pb2.Timestamp | None = ..., revision: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: organization_owner
      :type:  str


   .. py:attribute:: public
      :type:  bool


   .. py:attribute:: organization_name
      :type:  str


   .. py:attribute:: robot_part_count
      :type:  int

      number of robot parts using this fragment


   .. py:attribute:: organization_count
      :type:  int

      number of organizations using this fragment


   .. py:attribute:: only_used_by_owner
      :type:  bool

      whether the organization(s) using this fragment is the same as the fragment org


   .. py:attribute:: visibility
      :type:  global___FragmentVisibility

      the visibility of a fragment; public, private or unlisted


   .. py:attribute:: revision
      :type:  str


   .. py:property:: fragment
      :type: google.protobuf.struct_pb2.Struct



   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: last_updated
      :type: google.protobuf.timestamp_pb2.Timestamp

      latest timestamp when fragment was updated


   .. py:method:: HasField(field_name: Literal['created_on', b'created_on', 'fragment', b'fragment', 'last_updated', b'last_updated']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: FragmentError(*, error_type: global___FragmentErrorType = ..., fragment_id: str = ..., detail: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: error_type
      :type:  global___FragmentErrorType


   .. py:attribute:: fragment_id
      :type:  str


   .. py:attribute:: detail
      :type:  str


.. py:class:: FragmentErrorType

   Bases: :py:obj:`_FragmentErrorType`


.. py:class:: FragmentHistoryEntry(*, fragment: str = ..., edited_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., old: global___Fragment | None = ..., edited_by: global___AuthenticatorInfo | None = ..., revision: str = ..., config: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: fragment
      :type:  str


   .. py:attribute:: revision
      :type:  str


   .. py:property:: edited_on
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: old
      :type: global___Fragment



   .. py:property:: edited_by
      :type: global___AuthenticatorInfo



   .. py:property:: config
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['config', b'config', 'edited_by', b'edited_by', 'edited_on', b'edited_on', 'old', b'old']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: FragmentRevision(*, revision: str = ..., created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: revision
      :type:  str


   .. py:property:: created_at
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:method:: HasField(field_name: Literal['created_at', b'created_at']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: FragmentSummary(*, id: str = ..., name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: name
      :type:  str


.. py:class:: FragmentTag(*, tag: str = ..., revision: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: tag
      :type:  str


   .. py:attribute:: revision
      :type:  str


.. py:class:: FragmentUsage(*, fragment_id: str = ..., organizations: int = ..., machines: int = ..., machines_in_current_org: int = ..., version: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Cached fragment usage statistics


   .. py:attribute:: fragment_id
      :type:  str


   .. py:attribute:: organizations
      :type:  int


   .. py:attribute:: machines
      :type:  int


   .. py:attribute:: machines_in_current_org
      :type:  int


   .. py:attribute:: version
      :type:  str

      revision or tag


   .. py:method:: HasField(field_name: Literal['_version', b'_version', 'version', b'version']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_version', b'_version']) -> Literal['version'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: FragmentVisibility

   Bases: :py:obj:`_FragmentVisibility`


.. py:class:: GetAppContentRequest(*, public_namespace: str = ..., name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: public_namespace
      :type:  str


   .. py:attribute:: name
      :type:  str


.. py:class:: GetAppContentResponse(*, blob_path: str = ..., entrypoint: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: blob_path
      :type:  str


   .. py:attribute:: entrypoint
      :type:  str


.. py:class:: GetBillingServiceConfigRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


.. py:class:: GetBillingServiceConfigResponse(*, billing_address: global___BillingAddress | None = ..., support_email: str = ..., logo_url: str = ..., billing_dashboard_url: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: support_email
      :type:  str


   .. py:attribute:: logo_url
      :type:  str


   .. py:attribute:: billing_dashboard_url
      :type:  str


   .. py:property:: billing_address
      :type: global___BillingAddress



   .. py:method:: HasField(field_name: Literal['billing_address', b'billing_address']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetFragmentHistoryRequest(*, id: str = ..., page_token: str | None = ..., page_limit: int | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: page_token
      :type:  str


   .. py:attribute:: page_limit
      :type:  int


   .. py:method:: HasField(field_name: Literal['_page_limit', b'_page_limit', '_page_token', b'_page_token', 'page_limit', b'page_limit', 'page_token', b'page_token']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_page_limit', b'_page_limit']) -> Literal['page_limit'] | None
                  WhichOneof(oneof_group: Literal['_page_token', b'_page_token']) -> Literal['page_token'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: GetFragmentHistoryResponse(*, history: collections.abc.Iterable[global___FragmentHistoryEntry] | None = ..., next_page_token: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: next_page_token
      :type:  str


   .. py:property:: history
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FragmentHistoryEntry]



.. py:class:: GetFragmentRequest(*, id: str = ..., current_organization_id: str = ..., version: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: current_organization_id
      :type:  str


   .. py:attribute:: version
      :type:  str

      revision or tag


   .. py:method:: HasField(field_name: Literal['_version', b'_version', 'version', b'version']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_version', b'_version']) -> Literal['version'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: GetFragmentResponse(*, fragment: global___Fragment | None = ..., fragment_usage: global___FragmentUsage | None = ..., revisions: collections.abc.Iterable[global___FragmentRevision] | None = ..., tags: collections.abc.Iterable[global___FragmentTag] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: fragment
      :type: global___Fragment



   .. py:property:: fragment_usage
      :type: global___FragmentUsage



   .. py:property:: revisions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FragmentRevision]



   .. py:property:: tags
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FragmentTag]



   .. py:method:: HasField(field_name: Literal['fragment', b'fragment', 'fragment_usage', b'fragment_usage']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetFragmentUsageRequest(*, fragment_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: fragment_id
      :type:  str


.. py:class:: GetFragmentUsageResponse(*, version_usages: collections.abc.Iterable[global___FragmentUsage] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: version_usages
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FragmentUsage]



.. py:class:: GetLocationMetadataRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str


.. py:class:: GetLocationMetadataResponse(*, data: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: data
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['data', b'data']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetLocationRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str

      Location ID of location to get.


.. py:class:: GetLocationResponse(*, location: global___Location | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: location
      :type: global___Location

      Location object is returned.


   .. py:method:: HasField(field_name: Literal['location', b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetModuleRequest(*, module_id: str = ..., include_markdown_documentation: bool | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: module_id
      :type:  str

      name where prefix is the module owner's orgid or namespace)

      :type: The id of the module (formatted as prefix


   .. py:attribute:: include_markdown_documentation
      :type:  bool


   .. py:method:: HasField(field_name: Literal['_include_markdown_documentation', b'_include_markdown_documentation', 'include_markdown_documentation', b'include_markdown_documentation']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_include_markdown_documentation', b'_include_markdown_documentation']) -> Literal['include_markdown_documentation'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: GetModuleResponse(*, module: global___Module | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: module
      :type: global___Module

      The module object


   .. py:method:: HasField(field_name: Literal['module', b'module']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetOrganizationMetadataRequest(*, organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


.. py:class:: GetOrganizationMetadataResponse(*, data: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: data
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['data', b'data']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetOrganizationNamespaceAvailabilityRequest(*, public_namespace: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: public_namespace
      :type:  str


.. py:class:: GetOrganizationNamespaceAvailabilityResponse(*, available: bool = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: available
      :type:  bool


.. py:class:: GetOrganizationRequest(*, organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


.. py:class:: GetOrganizationResponse(*, organization: global___Organization | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: organization
      :type: global___Organization



   .. py:method:: HasField(field_name: Literal['organization', b'organization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetOrganizationsWithAccessToLocationRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str


.. py:class:: GetOrganizationsWithAccessToLocationResponse(*, organization_identities: collections.abc.Iterable[global___OrganizationIdentity] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: organization_identities
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrganizationIdentity]



.. py:class:: GetRegistryItemRequest(*, item_id: str = ..., include_markdown_documentation: bool | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: item_id
      :type:  str


   .. py:attribute:: include_markdown_documentation
      :type:  bool


   .. py:method:: HasField(field_name: Literal['_include_markdown_documentation', b'_include_markdown_documentation', 'include_markdown_documentation', b'include_markdown_documentation']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_include_markdown_documentation', b'_include_markdown_documentation']) -> Literal['include_markdown_documentation'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: GetRegistryItemResponse(*, item: global___RegistryItem | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: item
      :type: global___RegistryItem



   .. py:method:: HasField(field_name: Literal['item', b'item']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetRobotAPIKeysRequest(*, robot_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: robot_id
      :type:  str


.. py:class:: GetRobotAPIKeysResponse(*, api_keys: collections.abc.Iterable[global___APIKeyWithAuthorizations] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: api_keys
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___APIKeyWithAuthorizations]



.. py:class:: GetRobotMetadataRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: GetRobotMetadataResponse(*, data: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: data
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['data', b'data']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetRobotPartHistoryRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: GetRobotPartHistoryResponse(*, history: collections.abc.Iterable[global___RobotPartHistoryEntry] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: history
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotPartHistoryEntry]



.. py:class:: GetRobotPartLogsRequest(*, id: str = ..., errors_only: bool = ..., filter: str | None = ..., page_token: str | None = ..., levels: collections.abc.Iterable[str] | None = ..., start: google.protobuf.timestamp_pb2.Timestamp | None = ..., end: google.protobuf.timestamp_pb2.Timestamp | None = ..., limit: int | None = ..., source: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: errors_only
      :type:  bool

      Remove this field

      :type: TODO(https

      :type: //viam.atlassian.net/browse/APP-3877)


   .. py:attribute:: filter
      :type:  str


   .. py:attribute:: page_token
      :type:  str


   .. py:attribute:: limit
      :type:  int


   .. py:attribute:: source
      :type:  str


   .. py:property:: levels
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]

      logs of all levels are returned when the levels field is empty


   .. py:property:: start
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: end
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:method:: HasField(field_name: Literal['_end', b'_end', '_filter', b'_filter', '_limit', b'_limit', '_page_token', b'_page_token', '_source', b'_source', '_start', b'_start', 'end', b'end', 'filter', b'filter', 'limit', b'limit', 'page_token', b'page_token', 'source', b'source', 'start', b'start']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_end', b'_end']) -> Literal['end'] | None
                  WhichOneof(oneof_group: Literal['_filter', b'_filter']) -> Literal['filter'] | None
                  WhichOneof(oneof_group: Literal['_limit', b'_limit']) -> Literal['limit'] | None
                  WhichOneof(oneof_group: Literal['_page_token', b'_page_token']) -> Literal['page_token'] | None
                  WhichOneof(oneof_group: Literal['_source', b'_source']) -> Literal['source'] | None
                  WhichOneof(oneof_group: Literal['_start', b'_start']) -> Literal['start'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: GetRobotPartLogsResponse(*, logs: collections.abc.Iterable[viam.gen.common.v1.common_pb2.LogEntry] | None = ..., next_page_token: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: next_page_token
      :type:  str


   .. py:property:: logs
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[viam.gen.common.v1.common_pb2.LogEntry]



.. py:class:: GetRobotPartMetadataRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: GetRobotPartMetadataResponse(*, data: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: data
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['data', b'data']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetRobotPartRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: GetRobotPartResponse(*, part: global___RobotPart | None = ..., config_json: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: config_json
      :type:  str


   .. py:property:: part
      :type: global___RobotPart



   .. py:method:: HasField(field_name: Literal['part', b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetRobotPartsRequest(*, robot_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: robot_id
      :type:  str


.. py:class:: GetRobotPartsResponse(*, parts: collections.abc.Iterable[global___RobotPart] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: parts
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotPart]



.. py:class:: GetRobotRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: GetRobotResponse(*, robot: global___Robot | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: robot
      :type: global___Robot



   .. py:method:: HasField(field_name: Literal['robot', b'robot']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetRoverRentalRobotsRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


.. py:class:: GetRoverRentalRobotsResponse(*, robots: collections.abc.Iterable[global___RoverRentalRobot] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: robots
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RoverRentalRobot]



.. py:class:: GetUserIDByEmailRequest(*, email: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: email
      :type:  str


.. py:class:: GetUserIDByEmailResponse(*, user_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: user_id
      :type:  str


.. py:class:: ListAuthorizationsRequest(*, organization_id: str = ..., resource_ids: collections.abc.Iterable[str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:property:: resource_ids
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]

      optional filter


.. py:class:: ListAuthorizationsResponse(*, authorizations: collections.abc.Iterable[global___Authorization] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorization]



.. py:class:: ListFragmentsRequest(*, organization_id: str = ..., show_public: bool = ..., fragment_visibility: collections.abc.Iterable[global___FragmentVisibility] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: show_public
      :type:  bool


   .. py:property:: fragment_visibility
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___FragmentVisibility]



.. py:class:: ListFragmentsResponse(*, fragments: collections.abc.Iterable[global___Fragment] | None = ..., fragment_usages: collections.abc.Iterable[global___FragmentUsage] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: fragments
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Fragment]



   .. py:property:: fragment_usages
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FragmentUsage]



.. py:class:: ListKeysRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


.. py:class:: ListKeysResponse(*, api_keys: collections.abc.Iterable[global___APIKeyWithAuthorizations] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: api_keys
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___APIKeyWithAuthorizations]



.. py:class:: ListLocationsRequest(*, organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str

      Organization ID under which to list all locations.


.. py:class:: ListLocationsResponse(*, locations: collections.abc.Iterable[global___Location] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: locations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Location]



.. py:class:: ListMachineFragmentsRequest(*, machine_id: str = ..., additional_fragment_ids: collections.abc.Iterable[str] | None = ..., additional_fragments: collections.abc.Iterable[global___AdditionalFragment] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: machine_id
      :type:  str

      the machine_id used to filter fragments defined in a machine's parts.
      Also returns any fragments nested within the fragments defined in parts.


   .. py:property:: additional_fragment_ids
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]

      Mark this field as deprecated

      :type: TODO(APP-7642)


   .. py:property:: additional_fragments
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AdditionalFragment]

      additional fragments to append to the response. useful when needing to view fragments that will be
      provisionally added to the machine alongside existing fragments.


.. py:class:: ListMachineFragmentsResponse(*, fragments: collections.abc.Iterable[global___Fragment] | None = ..., resolved_fragments: collections.abc.Iterable[global___ResolvedFragment] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: fragments
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Fragment]



   .. py:property:: resolved_fragments
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResolvedFragment]



.. py:class:: ListMachineSummariesRequest(*, organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


.. py:class:: ListMachineSummariesResponse(*, location_summaries: collections.abc.Iterable[global___LocationSummary] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: location_summaries
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocationSummary]



.. py:class:: ListModulesRequest(*, organization_id: str | None = ..., include_markdown_documentation: bool | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str

      The id of the organization to return private modules for.


   .. py:attribute:: include_markdown_documentation
      :type:  bool


   .. py:method:: HasField(field_name: Literal['_include_markdown_documentation', b'_include_markdown_documentation', '_organization_id', b'_organization_id', 'include_markdown_documentation', b'include_markdown_documentation', 'organization_id', b'organization_id']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_include_markdown_documentation', b'_include_markdown_documentation']) -> Literal['include_markdown_documentation'] | None
                  WhichOneof(oneof_group: Literal['_organization_id', b'_organization_id']) -> Literal['organization_id'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: ListModulesResponse(*, modules: collections.abc.Iterable[global___Module] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: modules
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Module]

      A listed of modules. When authenticated, this API will return modules that are private for this org. Public modules are always returned.


.. py:class:: ListNestedFragmentsRequest(*, fragment_id: str | None = ..., additional_fragments: collections.abc.Iterable[global___AdditionalFragment] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: fragment_id
      :type:  str


   .. py:property:: additional_fragments
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AdditionalFragment]



   .. py:method:: HasField(field_name: Literal['_fragment_id', b'_fragment_id', 'fragment_id', b'fragment_id']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_fragment_id', b'_fragment_id']) -> Literal['fragment_id'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: ListNestedFragmentsResponse(*, fragments: collections.abc.Iterable[global___Fragment] | None = ..., resolved_fragments: collections.abc.Iterable[global___ResolvedFragment] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: fragments
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Fragment]



   .. py:property:: resolved_fragments
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResolvedFragment]



.. py:class:: ListOAuthAppsRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


.. py:class:: ListOAuthAppsResponse(*, client_ids: collections.abc.Iterable[str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: client_ids
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



.. py:class:: ListOrganizationMembersRequest(*, organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


.. py:class:: ListOrganizationMembersResponse(*, organization_id: str = ..., members: collections.abc.Iterable[global___OrganizationMember] | None = ..., invites: collections.abc.Iterable[global___OrganizationInvite] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:property:: members
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrganizationMember]



   .. py:property:: invites
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrganizationInvite]



.. py:class:: ListOrganizationsByUserRequest(*, user_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: user_id
      :type:  str


.. py:class:: ListOrganizationsByUserResponse(*, orgs: collections.abc.Iterable[global___OrgDetails] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: orgs
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrgDetails]



.. py:class:: ListOrganizationsRequest

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: ListOrganizationsResponse(*, organizations: collections.abc.Iterable[global___Organization] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: organizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Organization]



.. py:class:: ListRegistryItemsRequest(*, organization_id: str | None = ..., types: collections.abc.Iterable[viam.gen.app.packages.v1.packages_pb2.PackageType.ValueType] | None = ..., visibilities: collections.abc.Iterable[global___Visibility] | None = ..., platforms: collections.abc.Iterable[str] | None = ..., statuses: collections.abc.Iterable[global___RegistryItemStatus] | None = ..., search_term: str | None = ..., page_token: str | None = ..., public_namespaces: collections.abc.Iterable[str] | None = ..., include_markdown_documentation: bool | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str

      The id of the organization to return registry items for.


   .. py:attribute:: search_term
      :type:  str


   .. py:attribute:: page_token
      :type:  str


   .. py:attribute:: include_markdown_documentation
      :type:  bool


   .. py:property:: types
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[viam.gen.app.packages.v1.packages_pb2.PackageType.ValueType]



   .. py:property:: visibilities
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Visibility]



   .. py:property:: platforms
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



   .. py:property:: statuses
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___RegistryItemStatus]



   .. py:property:: public_namespaces
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]

      One or more public namespaces to return results for.


   .. py:method:: HasField(field_name: Literal['_include_markdown_documentation', b'_include_markdown_documentation', '_organization_id', b'_organization_id', '_page_token', b'_page_token', '_search_term', b'_search_term', 'include_markdown_documentation', b'include_markdown_documentation', 'organization_id', b'organization_id', 'page_token', b'page_token', 'search_term', b'search_term']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_include_markdown_documentation', b'_include_markdown_documentation']) -> Literal['include_markdown_documentation'] | None
                  WhichOneof(oneof_group: Literal['_organization_id', b'_organization_id']) -> Literal['organization_id'] | None
                  WhichOneof(oneof_group: Literal['_page_token', b'_page_token']) -> Literal['page_token'] | None
                  WhichOneof(oneof_group: Literal['_search_term', b'_search_term']) -> Literal['search_term'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: ListRegistryItemsResponse(*, items: collections.abc.Iterable[global___RegistryItem] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: items
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RegistryItem]



.. py:class:: ListRobotsRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str


.. py:class:: ListRobotsResponse(*, robots: collections.abc.Iterable[global___Robot] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: robots
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Robot]



.. py:class:: Location(*, id: str = ..., name: str = ..., parent_location_id: str = ..., auth: global___LocationAuth | None = ..., organizations: collections.abc.Iterable[global___LocationOrganization] | None = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., robot_count: int = ..., config: global___StorageConfig | None = ..., primary_org_identity: global___OrganizationIdentity | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str

      Location ID.


   .. py:attribute:: name
      :type:  str

      Location name.


   .. py:attribute:: parent_location_id
      :type:  str

      Location ID of the parent location.


   .. py:attribute:: robot_count
      :type:  int


   .. py:property:: auth
      :type: global___LocationAuth

      Location authentication secrets.


   .. py:property:: organizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocationOrganization]

      Organizations that the location is shared with.


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp

      Location creation timestamp.


   .. py:property:: config
      :type: global___StorageConfig

      Config for how data in this location is stored.


   .. py:property:: primary_org_identity
      :type: global___OrganizationIdentity

      The organization that is the primary owner of the location.


   .. py:method:: HasField(field_name: Literal['_primary_org_identity', b'_primary_org_identity', 'auth', b'auth', 'config', b'config', 'created_on', b'created_on', 'primary_org_identity', b'primary_org_identity']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_primary_org_identity', b'_primary_org_identity']) -> Literal['primary_org_identity'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: LocationAuth(*, secret: str = ..., location_id: str = ..., secrets: collections.abc.Iterable[global___SharedSecret] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: secret
      :type:  str

      use secrets field.

      :type: Deprecated


   .. py:attribute:: location_id
      :type:  str

      Location ID containing this LocationAuth.


   .. py:property:: secrets
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SharedSecret]

      List of secrets used to authenticate to the Location.


.. py:class:: LocationAuthRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str


.. py:class:: LocationAuthResponse(*, auth: global___LocationAuth | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: auth
      :type: global___LocationAuth



   .. py:method:: HasField(field_name: Literal['auth', b'auth']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: LocationOrganization(*, organization_id: str = ..., primary: bool = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str

      Organization ID the location is shared with.


   .. py:attribute:: primary
      :type:  bool

      Whether the organization is the primary owner or not.


.. py:class:: LocationSummary(*, location_id: str = ..., location_name: str = ..., machine_summaries: collections.abc.Iterable[global___MachineSummary] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str


   .. py:attribute:: location_name
      :type:  str


   .. py:property:: machine_summaries
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MachineSummary]



.. py:class:: MachineSummary(*, machine_id: str = ..., machine_name: str = ..., part_summaries: collections.abc.Iterable[global___PartSummary] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: machine_id
      :type:  str


   .. py:attribute:: machine_name
      :type:  str


   .. py:property:: part_summaries
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PartSummary]



.. py:class:: MarkPartAsMainRequest(*, part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: part_id
      :type:  str


.. py:class:: MarkPartAsMainResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: MarkPartForRestartRequest(*, part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: part_id
      :type:  str


.. py:class:: MarkPartForRestartResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: MLModelMetadata(*, versions: collections.abc.Iterable[str] | None = ..., model_type: viam.gen.app.mltraining.v1.ml_training_pb2.ModelType.ValueType = ..., model_framework: viam.gen.app.mltraining.v1.ml_training_pb2.ModelFramework.ValueType = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: model_type
      :type:  viam.gen.app.mltraining.v1.ml_training_pb2.ModelType.ValueType


   .. py:attribute:: model_framework
      :type:  viam.gen.app.mltraining.v1.ml_training_pb2.ModelFramework.ValueType


   .. py:property:: versions
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]

      A list of package versions for a ML model


.. py:class:: MLTrainingMetadata(*, versions: collections.abc.Iterable[global___MLTrainingVersion] | None = ..., model_type: viam.gen.app.mltraining.v1.ml_training_pb2.ModelType.ValueType = ..., model_framework: viam.gen.app.mltraining.v1.ml_training_pb2.ModelFramework.ValueType = ..., draft: bool = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: model_type
      :type:  viam.gen.app.mltraining.v1.ml_training_pb2.ModelType.ValueType


   .. py:attribute:: model_framework
      :type:  viam.gen.app.mltraining.v1.ml_training_pb2.ModelFramework.ValueType


   .. py:attribute:: draft
      :type:  bool


   .. py:property:: versions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MLTrainingVersion]

      A list of package versions for ML training source distribution


.. py:class:: MLTrainingVersion(*, version: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: version
      :type:  str


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:method:: HasField(field_name: Literal['created_on', b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: Model(*, api: str = ..., model: str = ..., markdown_documentation: str | None = ..., description: str | None = ..., supported_hardware: collections.abc.Iterable[str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: api
      :type:  str

      The colon-delimited-triplet of the api implemented by the model


   .. py:attribute:: model
      :type:  str

      The colon-delimited-triplet of the model


   .. py:attribute:: markdown_documentation
      :type:  str

      The markdown content describing the usage of the model


   .. py:attribute:: description
      :type:  str

      A short description of the model that explains its purpose


   .. py:property:: supported_hardware
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]

      A list of supported hardware names


   .. py:method:: HasField(field_name: Literal['_description', b'_description', '_markdown_documentation', b'_markdown_documentation', 'description', b'description', 'markdown_documentation', b'markdown_documentation']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_description', b'_description']) -> Literal['description'] | None
                  WhichOneof(oneof_group: Literal['_markdown_documentation', b'_markdown_documentation']) -> Literal['markdown_documentation'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: Module(*, module_id: str = ..., name: str = ..., visibility: global___Visibility = ..., versions: collections.abc.Iterable[global___VersionHistory] | None = ..., url: str = ..., description: str = ..., models: collections.abc.Iterable[global___Model] | None = ..., total_robot_usage: int = ..., total_organization_usage: int = ..., organization_id: str = ..., entrypoint: str = ..., public_namespace: str = ..., first_run: str | None = ..., markdown_description: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: module_id
      :type:  str

      name where prefix is the module owner's orgid or namespace)

      :type: The id of the module (formatted as prefix


   .. py:attribute:: name
      :type:  str

      The name of the module


   .. py:attribute:: visibility
      :type:  global___Visibility

      The visibility of the module


   .. py:attribute:: url
      :type:  str

      The url to reference for documentation, code, etc.


   .. py:attribute:: description
      :type:  str

      A short description of the module that explains its purpose


   .. py:attribute:: total_robot_usage
      :type:  int

      The total number of robots using this module


   .. py:attribute:: total_organization_usage
      :type:  int

      The total number of organizations using this module


   .. py:attribute:: organization_id
      :type:  str

      The id of the organization that owns the module


   .. py:attribute:: entrypoint
      :type:  str

      The executable to run to start the module program


   .. py:attribute:: public_namespace
      :type:  str

      The public namespace of the organization that owns the module
      This is empty if no public namespace is set


   .. py:attribute:: first_run
      :type:  str

      The path to a setup script that is run before a newly downloaded module starts.


   .. py:attribute:: markdown_description
      :type:  str

      Longer documentation provided in markdown format


   .. py:property:: versions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VersionHistory]

      The versions of the module that are available
      When this is returned from the backend, the versions are sorted in ascending order by the semver version


   .. py:property:: models
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]

      A list of models that are available in the module


   .. py:method:: HasField(field_name: Literal['_first_run', b'_first_run', '_markdown_description', b'_markdown_description', 'first_run', b'first_run', 'markdown_description', b'markdown_description']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_first_run', b'_first_run']) -> Literal['first_run'] | None
                  WhichOneof(oneof_group: Literal['_markdown_description', b'_markdown_description']) -> Literal['markdown_description'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: ModuleFileInfo(*, module_id: str = ..., version: str = ..., platform: str = ..., platform_tags: collections.abc.Iterable[str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: module_id
      :type:  str

      name where prefix is the module owner's orgid or namespace)

      :type: The id of the module (formatted as prefix


   .. py:attribute:: version
      :type:  str

      The semver string that represents the new major/minor/patch version of the module


   .. py:attribute:: platform
      :type:  str

      The platform that the file is built to run on


   .. py:property:: platform_tags
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]

      Platform tag constraints. When a robot requests its config, it uploads a platform and a list of
      platform tags. The platform is checked against `platform` above, and the tags are checked against
      this list.


.. py:class:: ModuleMetadata(*, models: collections.abc.Iterable[global___Model] | None = ..., versions: collections.abc.Iterable[global___ModuleVersion] | None = ..., entrypoint: str = ..., first_run: str | None = ..., markdown_description: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: entrypoint
      :type:  str

      The executable to run to start the module program


   .. py:attribute:: first_run
      :type:  str

      The path to a setup script that is run before a newly downloaded module starts.


   .. py:attribute:: markdown_description
      :type:  str

      markdown content for the entire module


   .. py:property:: models
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]

      A list of models that are available in the module


   .. py:property:: versions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ModuleVersion]

      A list of versions of the module that are available
      When this is returned from the backend, the versions are sorted in ascending order by the semver version


   .. py:method:: HasField(field_name: Literal['_first_run', b'_first_run', '_markdown_description', b'_markdown_description', 'first_run', b'first_run', 'markdown_description', b'markdown_description']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_first_run', b'_first_run']) -> Literal['first_run'] | None
                  WhichOneof(oneof_group: Literal['_markdown_description', b'_markdown_description']) -> Literal['markdown_description'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: ModuleVersion(*, version: str = ..., files: collections.abc.Iterable[global___Uploads] | None = ..., models: collections.abc.Iterable[global___Model] | None = ..., entrypoint: str = ..., first_run: str | None = ..., markdown_description: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: version
      :type:  str

      The semver string that represents the major/minor/patch version of the module


   .. py:attribute:: entrypoint
      :type:  str

      The entrypoint for this version of the module


   .. py:attribute:: first_run
      :type:  str

      The path to a setup script that is run before a newly downloaded module starts.


   .. py:attribute:: markdown_description
      :type:  str

      The markdown documentation for this version of the module


   .. py:property:: files
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Uploads]

      The uploads that are available for this module version


   .. py:property:: models
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]

      The models that this verion of the module provides


   .. py:method:: HasField(field_name: Literal['_first_run', b'_first_run', '_markdown_description', b'_markdown_description', 'first_run', b'first_run', 'markdown_description', b'markdown_description']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_first_run', b'_first_run']) -> Literal['first_run'] | None
                  WhichOneof(oneof_group: Literal['_markdown_description', b'_markdown_description']) -> Literal['markdown_description'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: NewRobotPartRequest(*, robot_id: str = ..., part_name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: robot_id
      :type:  str


   .. py:attribute:: part_name
      :type:  str


.. py:class:: NewRobotPartResponse(*, part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: part_id
      :type:  str


.. py:class:: NewRobotRequest(*, name: str = ..., location: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: location
      :type:  str


.. py:class:: NewRobotResponse(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: OAuthConfig(*, client_authentication: global___ClientAuthentication = ..., pkce: global___PKCE = ..., url_validation: global___URLValidation = ..., origin_uris: collections.abc.Iterable[str] | None = ..., redirect_uris: collections.abc.Iterable[str] | None = ..., logout_uri: str = ..., enabled_grants: collections.abc.Iterable[global___EnabledGrant] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: client_authentication
      :type:  global___ClientAuthentication


   .. py:attribute:: pkce
      :type:  global___PKCE


   .. py:attribute:: url_validation
      :type:  global___URLValidation


   .. py:attribute:: logout_uri
      :type:  str


   .. py:property:: origin_uris
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



   .. py:property:: redirect_uris
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



   .. py:property:: enabled_grants
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___EnabledGrant]



.. py:class:: Organization(*, id: str = ..., name: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., public_namespace: str = ..., default_region: str = ..., cid: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: public_namespace
      :type:  str


   .. py:attribute:: default_region
      :type:  str

      GCS region of the organization. Locations created under this org will have their GCS region set to this by default and packages
      associated with this org will be stored in this region.


   .. py:attribute:: cid
      :type:  str


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:method:: HasField(field_name: Literal['_cid', b'_cid', 'cid', b'cid', 'created_on', b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_cid', b'_cid']) -> Literal['cid'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: OrganizationGetLogoRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


.. py:class:: OrganizationGetLogoResponse(*, url: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: url
      :type:  str


.. py:class:: OrganizationGetSupportEmailRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


.. py:class:: OrganizationGetSupportEmailResponse(*, email: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: email
      :type:  str


.. py:class:: OrganizationIdentity(*, id: str = ..., name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Location

   Used for rendering an organization's information on the frontend (limited
   to id, name, or both).


   .. py:attribute:: id
      :type:  str

      Organization ID.


   .. py:attribute:: name
      :type:  str

      Organization name.


.. py:class:: OrganizationInvite(*, organization_id: str = ..., email: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., authorizations: collections.abc.Iterable[global___Authorization] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: email
      :type:  str


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorization]



   .. py:method:: HasField(field_name: Literal['created_on', b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: OrganizationMember(*, user_id: str = ..., emails: collections.abc.Iterable[str] | None = ..., date_added: google.protobuf.timestamp_pb2.Timestamp | None = ..., last_login: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: user_id
      :type:  str


   .. py:property:: emails
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



   .. py:property:: date_added
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: last_login
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:method:: HasField(field_name: Literal['_last_login', b'_last_login', 'date_added', b'date_added', 'last_login', b'last_login']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_last_login', b'_last_login']) -> Literal['last_login'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: OrganizationSetLogoRequest(*, org_id: str = ..., logo: bytes = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


   .. py:attribute:: logo
      :type:  bytes


.. py:class:: OrganizationSetLogoResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: OrganizationSetSupportEmailRequest(*, org_id: str = ..., email: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


   .. py:attribute:: email
      :type:  str


.. py:class:: OrganizationSetSupportEmailResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: OrgDetails(*, org_id: str = ..., org_name: str = ..., org_cid: str | None = ..., public_namespace: str | None = ..., billing_tier: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


   .. py:attribute:: org_name
      :type:  str


   .. py:attribute:: org_cid
      :type:  str


   .. py:attribute:: public_namespace
      :type:  str


   .. py:attribute:: billing_tier
      :type:  str


   .. py:method:: HasField(field_name: Literal['_billing_tier', b'_billing_tier', '_org_cid', b'_org_cid', '_public_namespace', b'_public_namespace', 'billing_tier', b'billing_tier', 'org_cid', b'org_cid', 'public_namespace', b'public_namespace']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_billing_tier', b'_billing_tier']) -> Literal['billing_tier'] | None
                  WhichOneof(oneof_group: Literal['_org_cid', b'_org_cid']) -> Literal['org_cid'] | None
                  WhichOneof(oneof_group: Literal['_public_namespace', b'_public_namespace']) -> Literal['public_namespace'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: PartSummary(*, part_id: str = ..., part_name: str = ..., last_online: google.protobuf.timestamp_pb2.Timestamp | None = ..., viam_server_version: global___ViamServerVersion | None = ..., viam_agent_version: global___ViamAgentVersion | None = ..., os: str | None = ..., platform: str | None = ..., public_ip_address: str | None = ..., fragments: collections.abc.Iterable[global___FragmentSummary] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: part_id
      :type:  str


   .. py:attribute:: part_name
      :type:  str


   .. py:attribute:: os
      :type:  str


   .. py:attribute:: platform
      :type:  str


   .. py:attribute:: public_ip_address
      :type:  str


   .. py:property:: last_online
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: viam_server_version
      :type: global___ViamServerVersion



   .. py:property:: viam_agent_version
      :type: global___ViamAgentVersion



   .. py:property:: fragments
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FragmentSummary]



   .. py:method:: HasField(field_name: Literal['_last_online', b'_last_online', '_os', b'_os', '_platform', b'_platform', '_public_ip_address', b'_public_ip_address', '_viam_agent_version', b'_viam_agent_version', '_viam_server_version', b'_viam_server_version', 'last_online', b'last_online', 'os', b'os', 'platform', b'platform', 'public_ip_address', b'public_ip_address', 'viam_agent_version', b'viam_agent_version', 'viam_server_version', b'viam_server_version']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_last_online', b'_last_online']) -> Literal['last_online'] | None
                  WhichOneof(oneof_group: Literal['_os', b'_os']) -> Literal['os'] | None
                  WhichOneof(oneof_group: Literal['_platform', b'_platform']) -> Literal['platform'] | None
                  WhichOneof(oneof_group: Literal['_public_ip_address', b'_public_ip_address']) -> Literal['public_ip_address'] | None
                  WhichOneof(oneof_group: Literal['_viam_agent_version', b'_viam_agent_version']) -> Literal['viam_agent_version'] | None
                  WhichOneof(oneof_group: Literal['_viam_server_version', b'_viam_server_version']) -> Literal['viam_server_version'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: ReadOAuthAppRequest(*, org_id: str = ..., client_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


   .. py:attribute:: client_id
      :type:  str


.. py:class:: ReadOAuthAppResponse(*, client_name: str = ..., client_secret: str = ..., oauth_config: global___OAuthConfig | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: client_name
      :type:  str


   .. py:attribute:: client_secret
      :type:  str


   .. py:property:: oauth_config
      :type: global___OAuthConfig



   .. py:method:: HasField(field_name: Literal['oauth_config', b'oauth_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: RegistryItem(*, item_id: str = ..., organization_id: str = ..., public_namespace: str = ..., name: str = ..., type: viam.gen.app.packages.v1.packages_pb2.PackageType.ValueType = ..., visibility: global___Visibility = ..., url: str = ..., description: str = ..., total_robot_usage: int = ..., total_external_robot_usage: int = ..., total_organization_usage: int = ..., total_external_organization_usage: int = ..., module_metadata: global___ModuleMetadata | None = ..., ml_model_metadata: global___MLModelMetadata | None = ..., ml_training_metadata: global___MLTrainingMetadata | None = ..., created_at: google.protobuf.timestamp_pb2.Timestamp | None = ..., updated_at: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: item_id
      :type:  str

      The id of the item, containing either:
      namespace:item_name when a namespace exists on the org.
      org_id:item_name when a namespace does not exist.


   .. py:attribute:: organization_id
      :type:  str

      The id of the organization that owns the item


   .. py:attribute:: public_namespace
      :type:  str

      The public namespace of the organization that owns the module
      This is empty if no public namespace is set


   .. py:attribute:: name
      :type:  str

      The name of the registry item


   .. py:attribute:: type
      :type:  viam.gen.app.packages.v1.packages_pb2.PackageType.ValueType

      The type of the item in the registry


   .. py:attribute:: visibility
      :type:  global___Visibility

      The visibility of the registry item


   .. py:attribute:: url
      :type:  str

      The url to reference for documentation, code, etc.


   .. py:attribute:: description
      :type:  str

      A short description of the item that explains its purpose


   .. py:attribute:: total_robot_usage
      :type:  int

      The total number of robots using this item


   .. py:attribute:: total_external_robot_usage
      :type:  int

      The total number of robots using this item outside of the owning org


   .. py:attribute:: total_organization_usage
      :type:  int

      The total number of organizations using this item


   .. py:attribute:: total_external_organization_usage
      :type:  int

      The total number of organizations using this item outside of the owning org


   .. py:property:: module_metadata
      :type: global___ModuleMetadata



   .. py:property:: ml_model_metadata
      :type: global___MLModelMetadata



   .. py:property:: ml_training_metadata
      :type: global___MLTrainingMetadata



   .. py:property:: created_at
      :type: google.protobuf.timestamp_pb2.Timestamp

      When the item was created


   .. py:property:: updated_at
      :type: google.protobuf.timestamp_pb2.Timestamp

      When the item was last updated, either through an update or upload.


   .. py:method:: HasField(field_name: Literal['created_at', b'created_at', 'metadata', b'metadata', 'ml_model_metadata', b'ml_model_metadata', 'ml_training_metadata', b'ml_training_metadata', 'module_metadata', b'module_metadata', 'updated_at', b'updated_at']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['metadata', b'metadata']) -> Literal['module_metadata', 'ml_model_metadata', 'ml_training_metadata'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: RegistryItemStatus

   Bases: :py:obj:`_RegistryItemStatus`


.. py:class:: RemoveRoleRequest(*, authorization: global___Authorization | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: authorization
      :type: global___Authorization



   .. py:method:: HasField(field_name: Literal['authorization', b'authorization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: RemoveRoleResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: RenameKeyRequest(*, id: str = ..., name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: name
      :type:  str


.. py:class:: RenameKeyResponse(*, id: str = ..., name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: name
      :type:  str


.. py:class:: RenameRegistryItemRequest(*, item_id: str = ..., new_name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: item_id
      :type:  str


   .. py:attribute:: new_name
      :type:  str


.. py:class:: RenameRegistryItemResponse(*, item: global___RegistryItem | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: item
      :type: global___RegistryItem



   .. py:method:: HasField(field_name: Literal['item', b'item']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ResendOrganizationInviteRequest(*, organization_id: str = ..., email: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: email
      :type:  str


.. py:class:: ResendOrganizationInviteResponse(*, invite: global___OrganizationInvite | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: invite
      :type: global___OrganizationInvite



   .. py:method:: HasField(field_name: Literal['invite', b'invite']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ResolvedFragment(*, fragment_id: str = ..., resolved_config: google.protobuf.struct_pb2.Struct | None = ..., error: global___FragmentError | None = ..., revision: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: fragment_id
      :type:  str


   .. py:attribute:: revision
      :type:  str


   .. py:property:: resolved_config
      :type: google.protobuf.struct_pb2.Struct



   .. py:property:: error
      :type: global___FragmentError



   .. py:method:: HasField(field_name: Literal['error', b'error', 'resolved_config', b'resolved_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: Robot(*, id: str = ..., name: str = ..., location: str = ..., last_access: google.protobuf.timestamp_pb2.Timestamp | None = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: location
      :type:  str


   .. py:property:: last_access
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:method:: HasField(field_name: Literal['created_on', b'created_on', 'last_access', b'last_access']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: RobotPart(*, id: str = ..., name: str = ..., dns_name: str = ..., secret: str = ..., robot: str = ..., location_id: str = ..., robot_config: google.protobuf.struct_pb2.Struct | None = ..., last_access: google.protobuf.timestamp_pb2.Timestamp | None = ..., user_supplied_info: google.protobuf.struct_pb2.Struct | None = ..., main_part: bool = ..., fqdn: str = ..., local_fqdn: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., secrets: collections.abc.Iterable[global___SharedSecret] | None = ..., last_updated: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: dns_name
      :type:  str

      dns_name part name used for fqdn and local fqdn. Anytime the Name is updated this should be sanitized and updated as well.


   .. py:attribute:: secret
      :type:  str


   .. py:attribute:: robot
      :type:  str


   .. py:attribute:: location_id
      :type:  str

      Store the location_id to allow for unique indexes across parts and locations. This filed MUST be updated each time the robots location
      changes.


   .. py:attribute:: main_part
      :type:  bool


   .. py:attribute:: fqdn
      :type:  str


   .. py:attribute:: local_fqdn
      :type:  str


   .. py:property:: robot_config
      :type: google.protobuf.struct_pb2.Struct



   .. py:property:: last_access
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: user_supplied_info
      :type: google.protobuf.struct_pb2.Struct



   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: secrets
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SharedSecret]

      List of secrets allowed for authentication.


   .. py:property:: last_updated
      :type: google.protobuf.timestamp_pb2.Timestamp

      latest timestamp when a robot part was updated


   .. py:method:: HasField(field_name: Literal['created_on', b'created_on', 'last_access', b'last_access', 'last_updated', b'last_updated', 'robot_config', b'robot_config', 'user_supplied_info', b'user_supplied_info']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: RobotPartHistoryEntry(*, part: str = ..., robot: str = ..., when: google.protobuf.timestamp_pb2.Timestamp | None = ..., old: global___RobotPart | None = ..., edited_by: global___AuthenticatorInfo | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: part
      :type:  str


   .. py:attribute:: robot
      :type:  str


   .. py:property:: when
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: old
      :type: global___RobotPart



   .. py:property:: edited_by
      :type: global___AuthenticatorInfo



   .. py:method:: HasField(field_name: Literal['edited_by', b'edited_by', 'old', b'old', 'when', b'when']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: RotateKeyRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


.. py:class:: RotateKeyResponse(*, id: str = ..., key: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: key
      :type:  str


.. py:class:: RoverRentalRobot(*, robot_id: str = ..., location_id: str = ..., robot_name: str = ..., robot_main_part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: robot_id
      :type:  str


   .. py:attribute:: location_id
      :type:  str


   .. py:attribute:: robot_name
      :type:  str


   .. py:attribute:: robot_main_part_id
      :type:  str


.. py:class:: SearchOrganizationsRequest(*, org_id: str | None = ..., org_name: str | None = ..., cid: str | None = ..., public_namespace: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


   .. py:attribute:: org_name
      :type:  str


   .. py:attribute:: cid
      :type:  str


   .. py:attribute:: public_namespace
      :type:  str


   .. py:method:: HasField(field_name: Literal['_cid', b'_cid', '_org_id', b'_org_id', '_org_name', b'_org_name', '_public_namespace', b'_public_namespace', 'cid', b'cid', 'org_id', b'org_id', 'org_name', b'org_name', 'public_namespace', b'public_namespace']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_cid', b'_cid']) -> Literal['cid'] | None
                  WhichOneof(oneof_group: Literal['_org_id', b'_org_id']) -> Literal['org_id'] | None
                  WhichOneof(oneof_group: Literal['_org_name', b'_org_name']) -> Literal['org_name'] | None
                  WhichOneof(oneof_group: Literal['_public_namespace', b'_public_namespace']) -> Literal['public_namespace'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: SearchOrganizationsResponse(*, organizations: collections.abc.Iterable[global___OrgDetails] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: organizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrgDetails]



.. py:class:: SetFragmentTagRequest(*, fragment_id: str = ..., tag: str = ..., revision: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: fragment_id
      :type:  str


   .. py:attribute:: tag
      :type:  str


   .. py:attribute:: revision
      :type:  str


.. py:class:: SetFragmentTagResponse(*, tags: collections.abc.Iterable[global___FragmentTag] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: tags
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FragmentTag]



.. py:class:: SharedSecret(*, id: str = ..., secret: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., state: global___SharedSecret = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   SharedSecret is a secret used for LocationAuth and RobotParts.


   .. py:class:: State

      Bases: :py:obj:`_State`



   .. py:attribute:: STATE_UNSPECIFIED
      :type:  SharedSecret


   .. py:attribute:: STATE_ENABLED
      :type:  SharedSecret

      Secret is enabled and can be used in authentication.


   .. py:attribute:: STATE_DISABLED
      :type:  SharedSecret

      Secret is disabled and must not be used to authenticate to rpc.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: secret
      :type:  str

      The payload of the secret. Used during authentication to the rpc framework.


   .. py:attribute:: state
      :type:  global___SharedSecret.State.ValueType

      State of the shared secret. In most cases it should be enabled. We may support
      disabling a specific secret while keeping it in the database.


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp

      Date/time the secret was first created.


   .. py:method:: HasField(field_name: Literal['created_on', b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ShareLocationRequest(*, location_id: str = ..., organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str

      Location ID to be shared.


   .. py:attribute:: organization_id
      :type:  str

      Organization ID to share the location with.


.. py:class:: ShareLocationResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: StorageConfig(*, region: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: region
      :type:  str

      GCS region that data is stored in.


.. py:class:: TailRobotPartLogsRequest(*, id: str = ..., errors_only: bool = ..., filter: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: errors_only
      :type:  bool


   .. py:attribute:: filter
      :type:  str


   .. py:method:: HasField(field_name: Literal['_filter', b'_filter', 'filter', b'filter']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_filter', b'_filter']) -> Literal['filter'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: TailRobotPartLogsResponse(*, logs: collections.abc.Iterable[viam.gen.common.v1.common_pb2.LogEntry] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: logs
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[viam.gen.common.v1.common_pb2.LogEntry]



.. py:class:: TransferRegistryItemRequest(*, item_id: str = ..., new_public_namespace: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: item_id
      :type:  str


   .. py:attribute:: new_public_namespace
      :type:  str


.. py:class:: TransferRegistryItemResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: UnshareLocationRequest(*, location_id: str = ..., organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str

      Location ID to be unshared.


   .. py:attribute:: organization_id
      :type:  str

      Organization ID to unshare the location with.


.. py:class:: UnshareLocationResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: UpdateBillingServiceRequest(*, org_id: str = ..., billing_address: global___BillingAddress | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


   .. py:property:: billing_address
      :type: global___BillingAddress



   .. py:method:: HasField(field_name: Literal['billing_address', b'billing_address']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateBillingServiceResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: UpdateFragmentRequest(*, id: str = ..., name: str = ..., config: google.protobuf.struct_pb2.Struct | None = ..., public: bool | None = ..., visibility: global___FragmentVisibility | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: public
      :type:  bool


   .. py:attribute:: visibility
      :type:  global___FragmentVisibility


   .. py:property:: config
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['_public', b'_public', '_visibility', b'_visibility', 'config', b'config', 'public', b'public', 'visibility', b'visibility']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_public', b'_public']) -> Literal['public'] | None
                  WhichOneof(oneof_group: Literal['_visibility', b'_visibility']) -> Literal['visibility'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UpdateFragmentResponse(*, fragment: global___Fragment | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: fragment
      :type: global___Fragment



   .. py:method:: HasField(field_name: Literal['fragment', b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateLocationMetadataRequest(*, location_id: str = ..., data: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str


   .. py:property:: data
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['data', b'data']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateLocationMetadataResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: UpdateLocationRequest(*, location_id: str = ..., name: str | None = ..., parent_location_id: str | None = ..., region: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: location_id
      :type:  str

      Location ID of location to update.


   .. py:attribute:: name
      :type:  str

      The new name to be updated on location.


   .. py:attribute:: parent_location_id
      :type:  str

      The new parent location to move the location under.


   .. py:attribute:: region
      :type:  str

      The new GCS region to associate the location with.


   .. py:method:: HasField(field_name: Literal['_name', b'_name', '_parent_location_id', b'_parent_location_id', '_region', b'_region', 'name', b'name', 'parent_location_id', b'parent_location_id', 'region', b'region']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_name', b'_name']) -> Literal['name'] | None
                  WhichOneof(oneof_group: Literal['_parent_location_id', b'_parent_location_id']) -> Literal['parent_location_id'] | None
                  WhichOneof(oneof_group: Literal['_region', b'_region']) -> Literal['region'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UpdateLocationResponse(*, location: global___Location | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: location
      :type: global___Location

      Location object is returned.


   .. py:method:: HasField(field_name: Literal['location', b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateMLModelMetadata(*, model_type: viam.gen.app.mltraining.v1.ml_training_pb2.ModelType.ValueType = ..., model_framework: viam.gen.app.mltraining.v1.ml_training_pb2.ModelFramework.ValueType = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: model_type
      :type:  viam.gen.app.mltraining.v1.ml_training_pb2.ModelType.ValueType


   .. py:attribute:: model_framework
      :type:  viam.gen.app.mltraining.v1.ml_training_pb2.ModelFramework.ValueType


.. py:class:: UpdateMLTrainingMetadata(*, model_type: viam.gen.app.mltraining.v1.ml_training_pb2.ModelType.ValueType = ..., model_framework: viam.gen.app.mltraining.v1.ml_training_pb2.ModelFramework.ValueType = ..., draft: bool = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: model_type
      :type:  viam.gen.app.mltraining.v1.ml_training_pb2.ModelType.ValueType


   .. py:attribute:: model_framework
      :type:  viam.gen.app.mltraining.v1.ml_training_pb2.ModelFramework.ValueType


   .. py:attribute:: draft
      :type:  bool


.. py:class:: UpdateModuleMetadata(*, models: collections.abc.Iterable[global___Model] | None = ..., entrypoint: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: entrypoint
      :type:  str

      The executable to run to start the module program


   .. py:property:: models
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]

      A list of models that are available in the module


.. py:class:: UpdateModuleRequest(*, module_id: str = ..., visibility: global___Visibility = ..., url: str = ..., description: str = ..., models: collections.abc.Iterable[global___Model] | None = ..., entrypoint: str = ..., first_run: str | None = ..., apps: collections.abc.Iterable[global___App] | None = ..., markdown_description: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: module_id
      :type:  str

      name where prefix is the module owner's orgid or namespace)

      :type: The id of the module (formatted as prefix


   .. py:attribute:: visibility
      :type:  global___Visibility

      The visibility that should be set for the module


   .. py:attribute:: url
      :type:  str

      The url to reference for documentation, code, etc.


   .. py:attribute:: description
      :type:  str

      A short description of the module that explains its purpose


   .. py:attribute:: entrypoint
      :type:  str

      The executable to run to start the module program


   .. py:attribute:: first_run
      :type:  str

      The path to a setup script that is run before a newly downloaded module starts.


   .. py:attribute:: markdown_description
      :type:  str

      longer documentation provided in markdown format


   .. py:property:: models
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]

      A list of models that are available in the module


   .. py:property:: apps
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___App]

      A list of applications associated with the module


   .. py:method:: HasField(field_name: Literal['_first_run', b'_first_run', '_markdown_description', b'_markdown_description', 'first_run', b'first_run', 'markdown_description', b'markdown_description']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_first_run', b'_first_run']) -> Literal['first_run'] | None
                  WhichOneof(oneof_group: Literal['_markdown_description', b'_markdown_description']) -> Literal['markdown_description'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UpdateModuleResponse(*, url: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: url
      :type:  str

      The detail page of the module


.. py:class:: UpdateOAuthAppRequest(*, org_id: str = ..., client_id: str = ..., client_name: str = ..., oauth_config: global___OAuthConfig | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: org_id
      :type:  str


   .. py:attribute:: client_id
      :type:  str


   .. py:attribute:: client_name
      :type:  str


   .. py:property:: oauth_config
      :type: global___OAuthConfig



   .. py:method:: HasField(field_name: Literal['oauth_config', b'oauth_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateOAuthAppResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: UpdateOrganizationInviteAuthorizationsRequest(*, organization_id: str = ..., email: str = ..., add_authorizations: collections.abc.Iterable[global___Authorization] | None = ..., remove_authorizations: collections.abc.Iterable[global___Authorization] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: email
      :type:  str


   .. py:property:: add_authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorization]



   .. py:property:: remove_authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorization]



.. py:class:: UpdateOrganizationInviteAuthorizationsResponse(*, invite: global___OrganizationInvite | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: invite
      :type: global___OrganizationInvite



   .. py:method:: HasField(field_name: Literal['invite', b'invite']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateOrganizationMetadataRequest(*, organization_id: str = ..., data: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:property:: data
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['data', b'data']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateOrganizationMetadataResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: UpdateOrganizationRequest(*, organization_id: str = ..., name: str | None = ..., public_namespace: str | None = ..., region: str | None = ..., cid: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: organization_id
      :type:  str


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: public_namespace
      :type:  str


   .. py:attribute:: region
      :type:  str

      The new GCS region to associate the org with.


   .. py:attribute:: cid
      :type:  str


   .. py:method:: HasField(field_name: Literal['_cid', b'_cid', '_name', b'_name', '_public_namespace', b'_public_namespace', '_region', b'_region', 'cid', b'cid', 'name', b'name', 'public_namespace', b'public_namespace', 'region', b'region']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_cid', b'_cid']) -> Literal['cid'] | None
                  WhichOneof(oneof_group: Literal['_name', b'_name']) -> Literal['name'] | None
                  WhichOneof(oneof_group: Literal['_public_namespace', b'_public_namespace']) -> Literal['public_namespace'] | None
                  WhichOneof(oneof_group: Literal['_region', b'_region']) -> Literal['region'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UpdateOrganizationResponse(*, organization: global___Organization | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: organization
      :type: global___Organization



   .. py:method:: HasField(field_name: Literal['organization', b'organization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateRegistryItemRequest(*, item_id: str = ..., type: viam.gen.app.packages.v1.packages_pb2.PackageType.ValueType = ..., description: str = ..., visibility: global___Visibility = ..., url: str | None = ..., update_module_metadata: global___UpdateModuleMetadata | None = ..., update_ml_model_metadata: global___UpdateMLModelMetadata | None = ..., update_ml_training_metadata: global___UpdateMLTrainingMetadata | None = ..., markdown_description: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: item_id
      :type:  str


   .. py:attribute:: type
      :type:  viam.gen.app.packages.v1.packages_pb2.PackageType.ValueType


   .. py:attribute:: description
      :type:  str


   .. py:attribute:: visibility
      :type:  global___Visibility


   .. py:attribute:: url
      :type:  str


   .. py:attribute:: markdown_description
      :type:  str


   .. py:property:: update_module_metadata
      :type: global___UpdateModuleMetadata



   .. py:property:: update_ml_model_metadata
      :type: global___UpdateMLModelMetadata



   .. py:property:: update_ml_training_metadata
      :type: global___UpdateMLTrainingMetadata



   .. py:method:: HasField(field_name: Literal['_markdown_description', b'_markdown_description', '_url', b'_url', 'markdown_description', b'markdown_description', 'metadata', b'metadata', 'update_ml_model_metadata', b'update_ml_model_metadata', 'update_ml_training_metadata', b'update_ml_training_metadata', 'update_module_metadata', b'update_module_metadata', 'url', b'url']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_markdown_description', b'_markdown_description']) -> Literal['markdown_description'] | None
                  WhichOneof(oneof_group: Literal['_url', b'_url']) -> Literal['url'] | None
                  WhichOneof(oneof_group: Literal['metadata', b'metadata']) -> Literal['update_module_metadata', 'update_ml_model_metadata', 'update_ml_training_metadata'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UpdateRegistryItemResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: UpdateRobotMetadataRequest(*, id: str = ..., data: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:property:: data
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['data', b'data']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateRobotMetadataResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: UpdateRobotPartMetadataRequest(*, id: str = ..., data: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:property:: data
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['data', b'data']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateRobotPartMetadataResponse

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: UpdateRobotPartRequest(*, id: str = ..., name: str = ..., robot_config: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: name
      :type:  str


   .. py:property:: robot_config
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['robot_config', b'robot_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateRobotPartResponse(*, part: global___RobotPart | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: part
      :type: global___RobotPart



   .. py:method:: HasField(field_name: Literal['part', b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateRobotRequest(*, id: str = ..., name: str = ..., location: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: id
      :type:  str


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: location
      :type:  str


.. py:class:: UpdateRobotResponse(*, robot: global___Robot | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: robot
      :type: global___Robot



   .. py:method:: HasField(field_name: Literal['robot', b'robot']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UploadModuleFileRequest(*, module_file_info: global___ModuleFileInfo | None = ..., file: bytes = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: file
      :type:  bytes

      The file contents to be uploaded


   .. py:property:: module_file_info
      :type: global___ModuleFileInfo

      The information about the module file being uploaded


   .. py:method:: HasField(field_name: Literal['file', b'file', 'module_file', b'module_file', 'module_file_info', b'module_file_info']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['module_file', b'module_file']) -> Literal['module_file_info', 'file'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UploadModuleFileResponse(*, url: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: url
      :type:  str

      The detail page of the module


.. py:class:: Uploads(*, platform: str = ..., uploaded_at: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: platform
      :type:  str

      The OS and architecture the module is built to run on


   .. py:property:: uploaded_at
      :type: google.protobuf.timestamp_pb2.Timestamp

      The time when the file was uploaded


   .. py:method:: HasField(field_name: Literal['uploaded_at', b'uploaded_at']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: URLValidation

   Bases: :py:obj:`_URLValidation`


.. py:class:: VersionHistory(*, version: str = ..., files: collections.abc.Iterable[global___Uploads] | None = ..., models: collections.abc.Iterable[global___Model] | None = ..., entrypoint: str = ..., first_run: str | None = ..., markdown_description: str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: version
      :type:  str

      The semver string that represents the major/minor/patch version of the module


   .. py:attribute:: entrypoint
      :type:  str

      The entrypoint for this version of the module


   .. py:attribute:: first_run
      :type:  str

      The path to a setup script that is run before a newly downloaded module starts.


   .. py:attribute:: markdown_description
      :type:  str

      The markdown documentation for this version of the module


   .. py:property:: files
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Uploads]

      The uploads that are available for this module version


   .. py:property:: models
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]

      The models that this verion of the module provides


   .. py:method:: HasField(field_name: Literal['_first_run', b'_first_run', '_markdown_description', b'_markdown_description', 'first_run', b'first_run', 'markdown_description', b'markdown_description']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['_first_run', b'_first_run']) -> Literal['first_run'] | None
                  WhichOneof(oneof_group: Literal['_markdown_description', b'_markdown_description']) -> Literal['markdown_description'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: ViamAgentVersion(*, major: str = ..., minor: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: major
      :type:  str


   .. py:attribute:: minor
      :type:  str


   .. py:method:: HasField(field_name: Literal['major', b'major', 'minor', b'minor', 'version', b'version']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['version', b'version']) -> Literal['major', 'minor'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: ViamServerVersion(*, major: str = ..., minor: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: major
      :type:  str


   .. py:attribute:: minor
      :type:  str


   .. py:method:: HasField(field_name: Literal['major', b'major', 'minor', b'minor', 'version', b'version']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['version', b'version']) -> Literal['major', 'minor'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: Visibility

   Bases: :py:obj:`_Visibility`


