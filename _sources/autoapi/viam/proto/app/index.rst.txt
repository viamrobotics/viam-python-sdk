:py:mod:`viam.proto.app`
========================

.. py:module:: viam.proto.app

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Subpackages
-----------
.. toctree::
   :titlesonly:
   :maxdepth: 3

   cloudslam/index.rst
   data/index.rst
   datasync/index.rst
   mltraining/index.rst
   packages/index.rst


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   billing/index.rst
   robot/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.app.AppServiceBase
   viam.proto.app.AppServiceStub
   viam.proto.app.AddRoleRequest
   viam.proto.app.AddRoleResponse
   viam.proto.app.Authorization
   viam.proto.app.Authorizations
   viam.proto.app.AuthorizedPermissions
   viam.proto.app.CheckPermissionsRequest
   viam.proto.app.CheckPermissionsResponse
   viam.proto.app.CreateFragmentRequest
   viam.proto.app.CreateFragmentResponse
   viam.proto.app.CreateLocationRequest
   viam.proto.app.CreateLocationResponse
   viam.proto.app.CreateLocationSecretRequest
   viam.proto.app.CreateLocationSecretResponse
   viam.proto.app.CreateModuleRequest
   viam.proto.app.CreateModuleResponse
   viam.proto.app.CreateOrganizationInviteRequest
   viam.proto.app.CreateOrganizationInviteResponse
   viam.proto.app.CreateOrganizationRequest
   viam.proto.app.CreateOrganizationResponse
   viam.proto.app.CreateRobotPartSecretRequest
   viam.proto.app.CreateRobotPartSecretResponse
   viam.proto.app.DeleteFragmentRequest
   viam.proto.app.DeleteFragmentResponse
   viam.proto.app.DeleteLocationRequest
   viam.proto.app.DeleteLocationResponse
   viam.proto.app.DeleteLocationSecretRequest
   viam.proto.app.DeleteLocationSecretResponse
   viam.proto.app.DeleteOrganizationInviteRequest
   viam.proto.app.DeleteOrganizationInviteResponse
   viam.proto.app.DeleteOrganizationMemberRequest
   viam.proto.app.DeleteOrganizationMemberResponse
   viam.proto.app.DeleteOrganizationRequest
   viam.proto.app.DeleteOrganizationResponse
   viam.proto.app.DeleteRobotPartRequest
   viam.proto.app.DeleteRobotPartResponse
   viam.proto.app.DeleteRobotPartSecretRequest
   viam.proto.app.DeleteRobotPartSecretResponse
   viam.proto.app.DeleteRobotRequest
   viam.proto.app.DeleteRobotResponse
   viam.proto.app.Fragment
   viam.proto.app.GetFragmentRequest
   viam.proto.app.GetFragmentResponse
   viam.proto.app.GetLocationRequest
   viam.proto.app.GetLocationResponse
   viam.proto.app.GetModuleRequest
   viam.proto.app.GetModuleResponse
   viam.proto.app.GetOrganizationRequest
   viam.proto.app.GetOrganizationResponse
   viam.proto.app.GetRobotPartHistoryRequest
   viam.proto.app.GetRobotPartHistoryResponse
   viam.proto.app.GetRobotPartLogsRequest
   viam.proto.app.GetRobotPartLogsResponse
   viam.proto.app.GetRobotPartRequest
   viam.proto.app.GetRobotPartResponse
   viam.proto.app.GetRobotPartsRequest
   viam.proto.app.GetRobotPartsResponse
   viam.proto.app.GetRobotRequest
   viam.proto.app.GetRobotResponse
   viam.proto.app.GetRoverRentalRobotsRequest
   viam.proto.app.GetRoverRentalRobotsResponse
   viam.proto.app.GetUserIDByEmailRequest
   viam.proto.app.GetUserIDByEmailResponse
   viam.proto.app.ListAuthorizationsRequest
   viam.proto.app.ListAuthorizationsResponse
   viam.proto.app.ListFragmentsRequest
   viam.proto.app.ListFragmentsResponse
   viam.proto.app.ListLocationsRequest
   viam.proto.app.ListLocationsResponse
   viam.proto.app.ListModulesRequest
   viam.proto.app.ListModulesResponse
   viam.proto.app.ListOrganizationMembersRequest
   viam.proto.app.ListOrganizationMembersResponse
   viam.proto.app.ListOrganizationsByUserRequest
   viam.proto.app.ListOrganizationsByUserResponse
   viam.proto.app.ListOrganizationsRequest
   viam.proto.app.ListOrganizationsResponse
   viam.proto.app.ListRobotsRequest
   viam.proto.app.ListRobotsResponse
   viam.proto.app.Location
   viam.proto.app.LocationAuth
   viam.proto.app.LocationAuthRequest
   viam.proto.app.LocationAuthResponse
   viam.proto.app.LocationOrganization
   viam.proto.app.LogEntry
   viam.proto.app.MarkPartAsMainRequest
   viam.proto.app.MarkPartAsMainResponse
   viam.proto.app.MarkPartForRestartRequest
   viam.proto.app.MarkPartForRestartResponse
   viam.proto.app.Model
   viam.proto.app.Module
   viam.proto.app.ModuleFileInfo
   viam.proto.app.NewRobotPartRequest
   viam.proto.app.NewRobotPartResponse
   viam.proto.app.NewRobotRequest
   viam.proto.app.NewRobotResponse
   viam.proto.app.Organization
   viam.proto.app.OrganizationInvite
   viam.proto.app.OrganizationMember
   viam.proto.app.OrgDetails
   viam.proto.app.RemoveRoleRequest
   viam.proto.app.RemoveRoleResponse
   viam.proto.app.ResendOrganizationInviteRequest
   viam.proto.app.ResendOrganizationInviteResponse
   viam.proto.app.Robot
   viam.proto.app.RobotPart
   viam.proto.app.RobotPartHistoryEntry
   viam.proto.app.RoverRentalRobot
   viam.proto.app.SharedSecret
   viam.proto.app.ShareLocationRequest
   viam.proto.app.ShareLocationResponse
   viam.proto.app.TailRobotPartLogsRequest
   viam.proto.app.TailRobotPartLogsResponse
   viam.proto.app.UnshareLocationRequest
   viam.proto.app.UnshareLocationResponse
   viam.proto.app.UpdateFragmentRequest
   viam.proto.app.UpdateFragmentResponse
   viam.proto.app.UpdateLocationRequest
   viam.proto.app.UpdateLocationResponse
   viam.proto.app.UpdateModuleRequest
   viam.proto.app.UpdateModuleResponse
   viam.proto.app.UpdateOrganizationRequest
   viam.proto.app.UpdateOrganizationResponse
   viam.proto.app.UpdateRobotPartRequest
   viam.proto.app.UpdateRobotPartResponse
   viam.proto.app.UpdateRobotRequest
   viam.proto.app.UpdateRobotResponse
   viam.proto.app.UploadModuleFileRequest
   viam.proto.app.UploadModuleFileResponse
   viam.proto.app.Uploads
   viam.proto.app.VersionHistory
   viam.proto.app.Visibility




.. py:class:: AppServiceBase

   Bases: :py:obj:`abc.ABC`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: GetUserIDByEmail(stream: grpclib.server.Stream[app.v1.app_pb2.GetUserIDByEmailRequest, app.v1.app_pb2.GetUserIDByEmailResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: CreateOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.CreateOrganizationRequest, app.v1.app_pb2.CreateOrganizationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ListOrganizations(stream: grpclib.server.Stream[app.v1.app_pb2.ListOrganizationsRequest, app.v1.app_pb2.ListOrganizationsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ListOrganizationsByUser(stream: grpclib.server.Stream[app.v1.app_pb2.ListOrganizationsByUserRequest, app.v1.app_pb2.ListOrganizationsByUserResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.GetOrganizationRequest, app.v1.app_pb2.GetOrganizationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: UpdateOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateOrganizationRequest, app.v1.app_pb2.UpdateOrganizationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DeleteOrganization(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOrganizationRequest, app.v1.app_pb2.DeleteOrganizationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ListOrganizationMembers(stream: grpclib.server.Stream[app.v1.app_pb2.ListOrganizationMembersRequest, app.v1.app_pb2.ListOrganizationMembersResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: CreateOrganizationInvite(stream: grpclib.server.Stream[app.v1.app_pb2.CreateOrganizationInviteRequest, app.v1.app_pb2.CreateOrganizationInviteResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DeleteOrganizationMember(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOrganizationMemberRequest, app.v1.app_pb2.DeleteOrganizationMemberResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DeleteOrganizationInvite(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteOrganizationInviteRequest, app.v1.app_pb2.DeleteOrganizationInviteResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ResendOrganizationInvite(stream: grpclib.server.Stream[app.v1.app_pb2.ResendOrganizationInviteRequest, app.v1.app_pb2.ResendOrganizationInviteResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: CreateLocation(stream: grpclib.server.Stream[app.v1.app_pb2.CreateLocationRequest, app.v1.app_pb2.CreateLocationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetLocation(stream: grpclib.server.Stream[app.v1.app_pb2.GetLocationRequest, app.v1.app_pb2.GetLocationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: UpdateLocation(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateLocationRequest, app.v1.app_pb2.UpdateLocationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DeleteLocation(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteLocationRequest, app.v1.app_pb2.DeleteLocationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ListLocations(stream: grpclib.server.Stream[app.v1.app_pb2.ListLocationsRequest, app.v1.app_pb2.ListLocationsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ShareLocation(stream: grpclib.server.Stream[app.v1.app_pb2.ShareLocationRequest, app.v1.app_pb2.ShareLocationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: UnshareLocation(stream: grpclib.server.Stream[app.v1.app_pb2.UnshareLocationRequest, app.v1.app_pb2.UnshareLocationResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: LocationAuth(stream: grpclib.server.Stream[app.v1.app_pb2.LocationAuthRequest, app.v1.app_pb2.LocationAuthResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: CreateLocationSecret(stream: grpclib.server.Stream[app.v1.app_pb2.CreateLocationSecretRequest, app.v1.app_pb2.CreateLocationSecretResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DeleteLocationSecret(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteLocationSecretRequest, app.v1.app_pb2.DeleteLocationSecretResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetRobot(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotRequest, app.v1.app_pb2.GetRobotResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetRoverRentalRobots(stream: grpclib.server.Stream[app.v1.app_pb2.GetRoverRentalRobotsRequest, app.v1.app_pb2.GetRoverRentalRobotsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetRobotParts(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartsRequest, app.v1.app_pb2.GetRobotPartsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartRequest, app.v1.app_pb2.GetRobotPartResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetRobotPartLogs(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartLogsRequest, app.v1.app_pb2.GetRobotPartLogsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: TailRobotPartLogs(stream: grpclib.server.Stream[app.v1.app_pb2.TailRobotPartLogsRequest, app.v1.app_pb2.TailRobotPartLogsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetRobotPartHistory(stream: grpclib.server.Stream[app.v1.app_pb2.GetRobotPartHistoryRequest, app.v1.app_pb2.GetRobotPartHistoryResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: UpdateRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRobotPartRequest, app.v1.app_pb2.UpdateRobotPartResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: NewRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.NewRobotPartRequest, app.v1.app_pb2.NewRobotPartResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DeleteRobotPart(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRobotPartRequest, app.v1.app_pb2.DeleteRobotPartResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: MarkPartAsMain(stream: grpclib.server.Stream[app.v1.app_pb2.MarkPartAsMainRequest, app.v1.app_pb2.MarkPartAsMainResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: MarkPartForRestart(stream: grpclib.server.Stream[app.v1.app_pb2.MarkPartForRestartRequest, app.v1.app_pb2.MarkPartForRestartResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: CreateRobotPartSecret(stream: grpclib.server.Stream[app.v1.app_pb2.CreateRobotPartSecretRequest, app.v1.app_pb2.CreateRobotPartSecretResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DeleteRobotPartSecret(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRobotPartSecretRequest, app.v1.app_pb2.DeleteRobotPartSecretResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ListRobots(stream: grpclib.server.Stream[app.v1.app_pb2.ListRobotsRequest, app.v1.app_pb2.ListRobotsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: NewRobot(stream: grpclib.server.Stream[app.v1.app_pb2.NewRobotRequest, app.v1.app_pb2.NewRobotResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: UpdateRobot(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateRobotRequest, app.v1.app_pb2.UpdateRobotResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DeleteRobot(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteRobotRequest, app.v1.app_pb2.DeleteRobotResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ListFragments(stream: grpclib.server.Stream[app.v1.app_pb2.ListFragmentsRequest, app.v1.app_pb2.ListFragmentsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetFragment(stream: grpclib.server.Stream[app.v1.app_pb2.GetFragmentRequest, app.v1.app_pb2.GetFragmentResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: CreateFragment(stream: grpclib.server.Stream[app.v1.app_pb2.CreateFragmentRequest, app.v1.app_pb2.CreateFragmentResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: UpdateFragment(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateFragmentRequest, app.v1.app_pb2.UpdateFragmentResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DeleteFragment(stream: grpclib.server.Stream[app.v1.app_pb2.DeleteFragmentRequest, app.v1.app_pb2.DeleteFragmentResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: AddRole(stream: grpclib.server.Stream[app.v1.app_pb2.AddRoleRequest, app.v1.app_pb2.AddRoleResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: RemoveRole(stream: grpclib.server.Stream[app.v1.app_pb2.RemoveRoleRequest, app.v1.app_pb2.RemoveRoleResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ListAuthorizations(stream: grpclib.server.Stream[app.v1.app_pb2.ListAuthorizationsRequest, app.v1.app_pb2.ListAuthorizationsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: CheckPermissions(stream: grpclib.server.Stream[app.v1.app_pb2.CheckPermissionsRequest, app.v1.app_pb2.CheckPermissionsResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: CreateModule(stream: grpclib.server.Stream[app.v1.app_pb2.CreateModuleRequest, app.v1.app_pb2.CreateModuleResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: UpdateModule(stream: grpclib.server.Stream[app.v1.app_pb2.UpdateModuleRequest, app.v1.app_pb2.UpdateModuleResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: UploadModuleFile(stream: grpclib.server.Stream[app.v1.app_pb2.UploadModuleFileRequest, app.v1.app_pb2.UploadModuleFileResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetModule(stream: grpclib.server.Stream[app.v1.app_pb2.GetModuleRequest, app.v1.app_pb2.GetModuleResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: ListModules(stream: grpclib.server.Stream[app.v1.app_pb2.ListModulesRequest, app.v1.app_pb2.ListModulesResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: AppServiceStub(channel: grpclib.client.Channel)


.. py:class:: AddRoleRequest(*, identity_id: str = ..., role_id: str = ..., resource_type: str = ..., resource_id: str = ..., organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: identity_id
      :type: str

      

   .. py:attribute:: role_id
      :type: str

      

   .. py:attribute:: resource_type
      :type: str

      

   .. py:attribute:: resource_id
      :type: str

      

   .. py:attribute:: organization_id
      :type: str

      


.. py:class:: AddRoleResponse(*, authorization: global___Authorization | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: authorization
      :type: global___Authorization


   .. py:method:: HasField(field_name: Literal[authorization, b'authorization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: Authorization(*, authorization_type: str = ..., authorization_id: str = ..., resource_type: str = ..., resource_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: authorization_type
      :type: str

      

   .. py:attribute:: authorization_id
      :type: str

      

   .. py:attribute:: resource_type
      :type: str

      

   .. py:attribute:: resource_id
      :type: str

      


.. py:class:: Authorizations(*, identity_id: str = ..., authorizations: collections.abc.Iterable[global___Authorization] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorization]


   .. py:attribute:: identity_id
      :type: str

      


.. py:class:: AuthorizedPermissions(*, resource_type: str = ..., resource_id: str = ..., permissions: collections.abc.Iterable[builtins.str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: permissions
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]


   .. py:attribute:: resource_type
      :type: str

      

   .. py:attribute:: resource_id
      :type: str

      


.. py:class:: CheckPermissionsRequest(*, permissions: collections.abc.Iterable[global___AuthorizedPermissions] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: permissions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizedPermissions]



.. py:class:: CheckPermissionsResponse(*, authorized_permissions: collections.abc.Iterable[global___AuthorizedPermissions] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: authorized_permissions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizedPermissions]



.. py:class:: CreateFragmentRequest(*, name: str = ..., config: google.protobuf.struct_pb2.Struct | None = ..., organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: config
      :type: google.protobuf.struct_pb2.Struct


   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: organization_id
      :type: str

      

   .. py:method:: HasField(field_name: Literal[config, b'config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateFragmentResponse(*, fragment: global___Fragment | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: fragment
      :type: global___Fragment


   .. py:method:: HasField(field_name: Literal[fragment, b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateLocationRequest(*, organization_id: str = ..., name: str = ..., parent_location_id: builtins.str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      Organization ID to create the location under.

   .. py:attribute:: name
      :type: str

      Name of the location.

   .. py:attribute:: parent_location_id
      :type: str

      The new parent location to move the location under.

   .. py:method:: HasField(field_name: Literal[_parent_location_id, b'_parent_location_id', parent_location_id, b'parent_location_id']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_parent_location_id, b'_parent_location_id']) -> typing_extensions.Literal['parent_location_id'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: CreateLocationResponse(*, location: global___Location | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: location
      :type: global___Location

      Location object is returned.

   .. py:method:: HasField(field_name: Literal[location, b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateLocationSecretRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID to create the secret in.


.. py:class:: CreateLocationSecretResponse(*, auth: global___LocationAuth | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: auth
      :type: global___LocationAuth

      Location's auth after updates.

   .. py:method:: HasField(field_name: Literal[auth, b'auth']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateModuleRequest(*, public_namespace: str = ..., name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Modules

   .. py:attribute:: public_namespace
      :type: str

      The public namespace that is reserved for your organization

   .. py:attribute:: name
      :type: str

      The name of the module, which must be unique within your org


.. py:class:: CreateModuleResponse(*, module_id: str = ..., url: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: module_id
      :type: str

      The id of the module containing the namespace and name

   .. py:attribute:: url
      :type: str

      The detail page of the module


.. py:class:: CreateOrganizationInviteRequest(*, organization_id: str = ..., email: str = ..., authorizations: collections.abc.Iterable[global___Authorization] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorization]


   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: email
      :type: str

      


.. py:class:: CreateOrganizationInviteResponse(*, invite: global___OrganizationInvite | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: invite
      :type: global___OrganizationInvite


   .. py:method:: HasField(field_name: Literal[invite, b'invite']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateOrganizationRequest(*, name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      


.. py:class:: CreateOrganizationResponse(*, organization: global___Organization | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: organization
      :type: global___Organization


   .. py:method:: HasField(field_name: Literal[organization, b'organization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: CreateRobotPartSecretRequest(*, part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      Robot Part ID to create the secret in.


.. py:class:: CreateRobotPartSecretResponse(*, part: global___RobotPart | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: part
      :type: global___RobotPart

      Location's auth after updates.

   .. py:method:: HasField(field_name: Literal[part, b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: DeleteFragmentRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:class:: DeleteFragmentResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteLocationRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID of location to delete.


.. py:class:: DeleteLocationResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteLocationSecretRequest(*, location_id: str = ..., secret_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      

   .. py:attribute:: secret_id
      :type: str

      


.. py:class:: DeleteLocationSecretResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteOrganizationInviteRequest(*, organization_id: str = ..., email: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: email
      :type: str

      


.. py:class:: DeleteOrganizationInviteResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteOrganizationMemberRequest(*, organization_id: str = ..., user_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: user_id
      :type: str

      


.. py:class:: DeleteOrganizationMemberResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteOrganizationRequest(*, organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      


.. py:class:: DeleteOrganizationResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteRobotPartRequest(*, part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      


.. py:class:: DeleteRobotPartResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteRobotPartSecretRequest(*, part_id: str = ..., secret_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      

   .. py:attribute:: secret_id
      :type: str

      


.. py:class:: DeleteRobotPartSecretResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: DeleteRobotRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:class:: DeleteRobotResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: Fragment(*, id: str = ..., name: str = ..., fragment: google.protobuf.struct_pb2.Struct | None = ..., organization_owner: str = ..., public: bool = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., organization_name: str = ..., robot_part_count: int = ..., organization_count: int = ..., only_used_by_owner: bool = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: fragment
      :type: google.protobuf.struct_pb2.Struct


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: organization_owner
      :type: str

      

   .. py:attribute:: public
      :type: bool

      

   .. py:attribute:: organization_name
      :type: str

      

   .. py:attribute:: robot_part_count
      :type: int

      number of robot parts using this fragment

   .. py:attribute:: organization_count
      :type: int

      number of organizations using this fragment

   .. py:attribute:: only_used_by_owner
      :type: bool

      whether the organization(s) using this fragment is the same as the fragment org

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on', fragment, b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetFragmentRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:class:: GetFragmentResponse(*, fragment: global___Fragment | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: fragment
      :type: global___Fragment


   .. py:method:: HasField(field_name: Literal[fragment, b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetLocationRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID of location to get.


.. py:class:: GetLocationResponse(*, location: global___Location | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: location
      :type: global___Location

      Location object is returned.

   .. py:method:: HasField(field_name: Literal[location, b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetModuleRequest(*, module_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: module_id
      :type: str

      The id of the module, containing the namespace and name


.. py:class:: GetModuleResponse(*, module: global___Module | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: module
      :type: global___Module

      The module object

   .. py:method:: HasField(field_name: Literal[module, b'module']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetOrganizationRequest(*, organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      


.. py:class:: GetOrganizationResponse(*, organization: global___Organization | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: organization
      :type: global___Organization


   .. py:method:: HasField(field_name: Literal[organization, b'organization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetRobotPartHistoryRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:class:: GetRobotPartHistoryResponse(*, history: collections.abc.Iterable[global___RobotPartHistoryEntry] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: history
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotPartHistoryEntry]



.. py:class:: GetRobotPartLogsRequest(*, id: str = ..., errors_only: bool = ..., filter: builtins.str | None = ..., page_token: builtins.str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: errors_only
      :type: bool

      

   .. py:attribute:: filter
      :type: str

      

   .. py:attribute:: page_token
      :type: str

      

   .. py:method:: HasField(field_name: Literal[_filter, b'_filter', _page_token, b'_page_token', filter, b'filter', page_token, b'page_token']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_filter, b'_filter']) -> typing_extensions.Literal['filter'] | None
               WhichOneof(oneof_group: Literal[_page_token, b'_page_token']) -> typing_extensions.Literal['page_token'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: GetRobotPartLogsResponse(*, logs: collections.abc.Iterable[global___LogEntry] | None = ..., next_page_token: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: logs
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogEntry]


   .. py:attribute:: next_page_token
      :type: str

      


.. py:class:: GetRobotPartRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:class:: GetRobotPartResponse(*, part: global___RobotPart | None = ..., config_json: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: part
      :type: global___RobotPart


   .. py:attribute:: config_json
      :type: str

      

   .. py:method:: HasField(field_name: Literal[part, b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetRobotPartsRequest(*, robot_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: robot_id
      :type: str

      


.. py:class:: GetRobotPartsResponse(*, parts: collections.abc.Iterable[global___RobotPart] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: parts
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotPart]



.. py:class:: GetRobotRequest(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:class:: GetRobotResponse(*, robot: global___Robot | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robot
      :type: global___Robot


   .. py:method:: HasField(field_name: Literal[robot, b'robot']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetRoverRentalRobotsRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: org_id
      :type: str

      


.. py:class:: GetRoverRentalRobotsResponse(*, robots: collections.abc.Iterable[global___RoverRentalRobot] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robots
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RoverRentalRobot]



.. py:class:: GetUserIDByEmailRequest(*, email: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: email
      :type: str

      


.. py:class:: GetUserIDByEmailResponse(*, user_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: user_id
      :type: str

      


.. py:class:: ListAuthorizationsRequest(*, resource_type: str = ..., resource_id: str = ..., organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: resource_type
      :type: str

      

   .. py:attribute:: resource_id
      :type: str

      

   .. py:attribute:: organization_id
      :type: str

      


.. py:class:: ListAuthorizationsResponse(*, authorizations: collections.abc.Iterable[global___Authorizations] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorizations]



.. py:class:: ListFragmentsRequest(*, organization_id: str = ..., show_public: bool = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: show_public
      :type: bool

      


.. py:class:: ListFragmentsResponse(*, fragments: collections.abc.Iterable[global___Fragment] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: fragments
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Fragment]



.. py:class:: ListLocationsRequest(*, organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      Organization ID under which to list all locations.


.. py:class:: ListLocationsResponse(*, locations: collections.abc.Iterable[global___Location] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: locations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Location]



.. py:class:: ListModulesRequest(*, organization_id: builtins.str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      The id of the organization to return private modules for.

   .. py:method:: HasField(field_name: Literal[_organization_id, b'_organization_id', organization_id, b'organization_id']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_organization_id, b'_organization_id']) -> typing_extensions.Literal['organization_id'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: ListModulesResponse(*, modules: collections.abc.Iterable[global___Module] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: modules
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Module]

      A listed of modules. When authenticated, this API will return modules that are private for this org. Public modules are always returned.


.. py:class:: ListOrganizationMembersRequest(*, organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      


.. py:class:: ListOrganizationMembersResponse(*, organization_id: str = ..., members: collections.abc.Iterable[global___OrganizationMember] | None = ..., invites: collections.abc.Iterable[global___OrganizationInvite] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: members
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrganizationMember]


   .. py:property:: invites
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrganizationInvite]


   .. py:attribute:: organization_id
      :type: str

      


.. py:class:: ListOrganizationsByUserRequest(*, user_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: user_id
      :type: str

      


.. py:class:: ListOrganizationsByUserResponse(*, orgs: collections.abc.Iterable[global___OrgDetails] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: orgs
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrgDetails]



.. py:class:: ListOrganizationsRequest

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: ListOrganizationsResponse(*, organizations: collections.abc.Iterable[global___Organization] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: organizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Organization]



.. py:class:: ListRobotsRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      


.. py:class:: ListRobotsResponse(*, robots: collections.abc.Iterable[global___Robot] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robots
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Robot]



.. py:class:: Location(*, id: str = ..., name: str = ..., parent_location_id: str = ..., auth: global___LocationAuth | None = ..., organizations: collections.abc.Iterable[global___LocationOrganization] | None = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., robot_count: int = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: auth
      :type: global___LocationAuth

      Location authentication secrets.

   .. py:property:: organizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocationOrganization]

      Organizations that the location is shared with.

   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp

      Location creation timestamp.

   .. py:attribute:: id
      :type: str

      Location ID.

   .. py:attribute:: name
      :type: str

      Location name.

   .. py:attribute:: parent_location_id
      :type: str

      Location ID of the parent location.

   .. py:attribute:: robot_count
      :type: int

      

   .. py:method:: HasField(field_name: Literal[auth, b'auth', created_on, b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: LocationAuth(*, secret: str = ..., location_id: str = ..., secrets: collections.abc.Iterable[global___SharedSecret] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: secrets
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SharedSecret]

      List of secrets used to authenticate to the Location.

   .. py:attribute:: secret
      :type: str

      use secrets field.

      :type: Deprecated

   .. py:attribute:: location_id
      :type: str

      Location ID containing this LocationAuth.


.. py:class:: LocationAuthRequest(*, location_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      


.. py:class:: LocationAuthResponse(*, auth: global___LocationAuth | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: auth
      :type: global___LocationAuth


   .. py:method:: HasField(field_name: Literal[auth, b'auth']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: LocationOrganization(*, organization_id: str = ..., primary: bool = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Location

   .. py:attribute:: organization_id
      :type: str

      Organization ID the location is shared with.

   .. py:attribute:: primary
      :type: bool

      Whether the organization is the primary owner or not.


.. py:class:: LogEntry(*, host: str = ..., level: str = ..., time: google.protobuf.timestamp_pb2.Timestamp | None = ..., logger_name: str = ..., message: str = ..., caller: google.protobuf.struct_pb2.Struct | None = ..., stack: str = ..., fields: collections.abc.Iterable[google.protobuf.struct_pb2.Struct] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: time
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:property:: caller
      :type: google.protobuf.struct_pb2.Struct


   .. py:property:: fields
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.struct_pb2.Struct]


   .. py:attribute:: host
      :type: str

      

   .. py:attribute:: level
      :type: str

      

   .. py:attribute:: logger_name
      :type: str

      

   .. py:attribute:: message
      :type: str

      

   .. py:attribute:: stack
      :type: str

      

   .. py:method:: HasField(field_name: Literal[caller, b'caller', time, b'time']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: MarkPartAsMainRequest(*, part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      


.. py:class:: MarkPartAsMainResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: MarkPartForRestartRequest(*, part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      


.. py:class:: MarkPartForRestartResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: Model(*, api: str = ..., model: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: api
      :type: str

      The colon-delimited-triplet of the api implemented by the model

   .. py:attribute:: model
      :type: str

      The colon-delimited-triplet of the model


.. py:class:: Module(*, module_id: str = ..., organization_id: str = ..., name: str = ..., visibility: global___Visibility = ..., versions: collections.abc.Iterable[global___VersionHistory] | None = ..., url: str = ..., description: str = ..., models: collections.abc.Iterable[global___Model] | None = ..., total_robot_usage: int = ..., total_organization_usage: int = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: versions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VersionHistory]

      The versions of the module that are available

   .. py:property:: models
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]

      A list of models that are available in the module

   .. py:attribute:: module_id
      :type: str

      The id of the module, containing the namespace and name

   .. py:attribute:: organization_id
      :type: str

      The id of the organization that owns the module

   .. py:attribute:: name
      :type: str

      The name of the module

   .. py:attribute:: visibility
      :type: global___Visibility

      The visibility of the module

   .. py:attribute:: url
      :type: str

      The url to reference for documentation, code, etc.

   .. py:attribute:: description
      :type: str

      A short description of the module that explains its purpose

   .. py:attribute:: total_robot_usage
      :type: int

      The total number of robots using this module

   .. py:attribute:: total_organization_usage
      :type: int

      The total number of organizations using this module


.. py:class:: ModuleFileInfo(*, module_id: str = ..., version: str = ..., platform: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: module_id
      :type: str

      The module_id that is being uploaded

   .. py:attribute:: version
      :type: str

      The semver string that represents the new major/minor/patch version of the module

   .. py:attribute:: platform
      :type: str

      The platform that the file is built to run on


.. py:class:: NewRobotPartRequest(*, robot_id: str = ..., part_name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: robot_id
      :type: str

      

   .. py:attribute:: part_name
      :type: str

      


.. py:class:: NewRobotPartResponse(*, part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      


.. py:class:: NewRobotRequest(*, name: str = ..., location: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: location
      :type: str

      


.. py:class:: NewRobotResponse(*, id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:class:: Organization(*, id: str = ..., name: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., public_namespace: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: public_namespace
      :type: str

      

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: OrganizationInvite(*, organization_id: str = ..., email: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., robot_count: int = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: email
      :type: str

      

   .. py:attribute:: robot_count
      :type: int

      

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: OrganizationMember(*, user_id: str = ..., emails: collections.abc.Iterable[builtins.str] | None = ..., date_added: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: emails
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]


   .. py:property:: date_added
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: user_id
      :type: str

      

   .. py:method:: HasField(field_name: Literal[date_added, b'date_added']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: OrgDetails(*, org_id: str = ..., org_name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: org_id
      :type: str

      

   .. py:attribute:: org_name
      :type: str

      


.. py:class:: RemoveRoleRequest(*, identity_id: str = ..., role_id: str = ..., resource_type: str = ..., resource_id: str = ..., organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: identity_id
      :type: str

      

   .. py:attribute:: role_id
      :type: str

      

   .. py:attribute:: resource_type
      :type: str

      

   .. py:attribute:: resource_id
      :type: str

      

   .. py:attribute:: organization_id
      :type: str

      


.. py:class:: RemoveRoleResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: ResendOrganizationInviteRequest(*, organization_id: str = ..., email: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: email
      :type: str

      


.. py:class:: ResendOrganizationInviteResponse(*, invite: global___OrganizationInvite | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: invite
      :type: global___OrganizationInvite


   .. py:method:: HasField(field_name: Literal[invite, b'invite']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: Robot(*, id: str = ..., name: str = ..., location: str = ..., last_access: google.protobuf.timestamp_pb2.Timestamp | None = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: last_access
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: location
      :type: str

      

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on', last_access, b'last_access']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: RobotPart(*, id: str = ..., name: str = ..., dns_name: str = ..., secret: str = ..., robot: str = ..., location_id: str = ..., robot_config: google.protobuf.struct_pb2.Struct | None = ..., last_access: google.protobuf.timestamp_pb2.Timestamp | None = ..., user_supplied_info: google.protobuf.struct_pb2.Struct | None = ..., main_part: bool = ..., fqdn: str = ..., local_fqdn: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., secrets: collections.abc.Iterable[global___SharedSecret] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robot_config
      :type: google.protobuf.struct_pb2.Struct


   .. py:property:: last_access
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:property:: user_supplied_info
      :type: google.protobuf.struct_pb2.Struct


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:property:: secrets
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SharedSecret]

      List of secrets allowed for authentication.

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: dns_name
      :type: str

      dns_name part name used for fqdn and local fqdn. Anytime the Name is updated this should be sanitized and updated as well.

   .. py:attribute:: secret
      :type: str

      

   .. py:attribute:: robot
      :type: str

      

   .. py:attribute:: location_id
      :type: str

      Store the location_id to allow for unique indexes across parts and locations. This filed MUST be updated each time the robots location
      changes.

   .. py:attribute:: main_part
      :type: bool

      

   .. py:attribute:: fqdn
      :type: str

      

   .. py:attribute:: local_fqdn
      :type: str

      

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on', last_access, b'last_access', robot_config, b'robot_config', user_supplied_info, b'user_supplied_info']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: RobotPartHistoryEntry(*, part: str = ..., robot: str = ..., when: google.protobuf.timestamp_pb2.Timestamp | None = ..., old: global___RobotPart | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: when
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:property:: old
      :type: global___RobotPart


   .. py:attribute:: part
      :type: str

      

   .. py:attribute:: robot
      :type: str

      

   .. py:method:: HasField(field_name: Literal[old, b'old', when, b'when']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: RoverRentalRobot(*, robot_id: str = ..., location_id: str = ..., robot_name: str = ..., robot_main_part_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: robot_id
      :type: str

      

   .. py:attribute:: location_id
      :type: str

      

   .. py:attribute:: robot_name
      :type: str

      

   .. py:attribute:: robot_main_part_id
      :type: str

      


.. py:class:: SharedSecret(*, id: str = ..., secret: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., state: global___SharedSecret = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   SharedSecret is a secret used for LocationAuth and RobotParts.

   .. py:class:: State

      Bases: :py:obj:`SharedSecret._State`


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp

      Date/time the secret was first created.

   .. py:attribute:: STATE_UNSPECIFIED
      :type: SharedSecret

      

   .. py:attribute:: STATE_ENABLED
      :type: SharedSecret

      Secret is enabled and can be used in authentication.

   .. py:attribute:: STATE_DISABLED
      :type: SharedSecret

      Secret is disabled and must not be used to authenticate to rpc.

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: secret
      :type: str

      The payload of the secret. Used during authentication to the rpc framework.

   .. py:attribute:: state
      :type: global___SharedSecret.State.ValueType

      State of the shared secret. In most cases it should be enabled. We may support
      disabling a specific secret while keeping it in the database.

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ShareLocationRequest(*, location_id: str = ..., organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID to be shared.

   .. py:attribute:: organization_id
      :type: str

      Organization ID to share the location with.


.. py:class:: ShareLocationResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: TailRobotPartLogsRequest(*, id: str = ..., errors_only: bool = ..., filter: builtins.str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: errors_only
      :type: bool

      

   .. py:attribute:: filter
      :type: str

      

   .. py:method:: HasField(field_name: Literal[_filter, b'_filter', filter, b'filter']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_filter, b'_filter']) -> typing_extensions.Literal['filter'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: TailRobotPartLogsResponse(*, logs: collections.abc.Iterable[global___LogEntry] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: logs
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogEntry]



.. py:class:: UnshareLocationRequest(*, location_id: str = ..., organization_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID to be unshared.

   .. py:attribute:: organization_id
      :type: str

      Organization ID to unshare the location with.


.. py:class:: UnshareLocationResponse

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:class:: UpdateFragmentRequest(*, id: str = ..., name: str = ..., config: google.protobuf.struct_pb2.Struct | None = ..., public: builtins.bool | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: config
      :type: google.protobuf.struct_pb2.Struct


   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: public
      :type: bool

      

   .. py:method:: HasField(field_name: Literal[_public, b'_public', config, b'config', public, b'public']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_public, b'_public']) -> typing_extensions.Literal['public'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UpdateFragmentResponse(*, fragment: global___Fragment | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: fragment
      :type: global___Fragment


   .. py:method:: HasField(field_name: Literal[fragment, b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateLocationRequest(*, location_id: str = ..., name: builtins.str | None = ..., parent_location_id: builtins.str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID of location to update.

   .. py:attribute:: name
      :type: str

      The new to be updated on location.

   .. py:attribute:: parent_location_id
      :type: str

      The new parent location to move the location under.

   .. py:method:: HasField(field_name: Literal[_name, b'_name', _parent_location_id, b'_parent_location_id', name, b'name', parent_location_id, b'parent_location_id']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_name, b'_name']) -> typing_extensions.Literal['name'] | None
               WhichOneof(oneof_group: Literal[_parent_location_id, b'_parent_location_id']) -> typing_extensions.Literal['parent_location_id'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UpdateLocationResponse(*, location: global___Location | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: location
      :type: global___Location

      Location object is returned.

   .. py:method:: HasField(field_name: Literal[location, b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateModuleRequest(*, module_id: str = ..., visibility: global___Visibility = ..., url: str = ..., description: str = ..., models: collections.abc.Iterable[global___Model] | None = ..., entrypoint: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: models
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]

      A list of models that are available in the module

   .. py:attribute:: module_id
      :type: str

      The id of the module being updated, containing the namespace and name

   .. py:attribute:: visibility
      :type: global___Visibility

      The visibility that should be set for the module

   .. py:attribute:: url
      :type: str

      The url to reference for documentation, code, etc.

   .. py:attribute:: description
      :type: str

      A short description of the module that explains its purpose

   .. py:attribute:: entrypoint
      :type: str

      The executable to run to start the module program


.. py:class:: UpdateModuleResponse(*, url: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: url
      :type: str

      The detail page of the module


.. py:class:: UpdateOrganizationRequest(*, organization_id: str = ..., name: str = ..., public_namespace: builtins.str | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: public_namespace
      :type: str

      

   .. py:method:: HasField(field_name: Literal[_public_namespace, b'_public_namespace', public_namespace, b'public_namespace']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_public_namespace, b'_public_namespace']) -> typing_extensions.Literal['public_namespace'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UpdateOrganizationResponse(*, organization: global___Organization | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: organization
      :type: global___Organization


   .. py:method:: HasField(field_name: Literal[organization, b'organization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateRobotPartRequest(*, id: str = ..., name: str = ..., robot_config: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robot_config
      :type: google.protobuf.struct_pb2.Struct


   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:method:: HasField(field_name: Literal[robot_config, b'robot_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateRobotPartResponse(*, part: global___RobotPart | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: part
      :type: global___RobotPart


   .. py:method:: HasField(field_name: Literal[part, b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UpdateRobotRequest(*, id: str = ..., name: str = ..., location: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: location
      :type: str

      


.. py:class:: UpdateRobotResponse(*, robot: global___Robot | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robot
      :type: global___Robot


   .. py:method:: HasField(field_name: Literal[robot, b'robot']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UploadModuleFileRequest(*, module_file_info: global___ModuleFileInfo | None = ..., file: bytes = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: module_file_info
      :type: global___ModuleFileInfo

      The information about the module file being uploaded

   .. py:attribute:: file
      :type: bytes

      The file contents to be uploaded

   .. py:method:: HasField(field_name: Literal[file, b'file', module_file, b'module_file', module_file_info, b'module_file_info']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[module_file, b'module_file']) -> typing_extensions.Literal['module_file_info', 'file'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UploadModuleFileResponse(*, url: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: url
      :type: str

      The detail page of the module


.. py:class:: Uploads(*, platform: str = ..., uploaded_at: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: uploaded_at
      :type: google.protobuf.timestamp_pb2.Timestamp

      The time when the file was uploaded

   .. py:attribute:: platform
      :type: str

      The OS and architecture the module is built to run on

   .. py:method:: HasField(field_name: Literal[uploaded_at, b'uploaded_at']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: VersionHistory(*, version: str = ..., files: collections.abc.Iterable[global___Uploads] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: files
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Uploads]

      The uploads that are available for this module version

   .. py:attribute:: version
      :type: str

      The semver string that represents the major/minor/patch version of the module


.. py:class:: Visibility

   Bases: :py:obj:`_Visibility`


