:py:mod:`viam.proto.app.model`
==============================

.. py:module:: viam.proto.app.model

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.app.model.ModelServiceBase
   viam.proto.app.model.ModelServiceStub
   viam.proto.app.model.DeleteRequest
   viam.proto.app.model.DeleteResponse
   viam.proto.app.model.DeployRequest
   viam.proto.app.model.DeployResponse
   viam.proto.app.model.File
   viam.proto.app.model.FileData
   viam.proto.app.model.InfoRequest
   viam.proto.app.model.InfoResponse
   viam.proto.app.model.Model
   viam.proto.app.model.Status
   viam.proto.app.model.SyncedModel
   viam.proto.app.model.UploadMetadata
   viam.proto.app.model.UploadRequest
   viam.proto.app.model.UploadResponse




.. py:class:: ModelServiceBase

   Bases: :py:obj:`abc.ABC`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: Upload(stream: grpclib.server.Stream[app.model.v1.model_pb2.UploadRequest, app.model.v1.model_pb2.UploadResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Delete(stream: grpclib.server.Stream[app.model.v1.model_pb2.DeleteRequest, app.model.v1.model_pb2.DeleteResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Deploy(stream: grpclib.server.Stream[app.model.v1.model_pb2.DeployRequest, app.model.v1.model_pb2.DeployResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Info(stream: grpclib.server.Stream[app.model.v1.model_pb2.InfoRequest, app.model.v1.model_pb2.InfoResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: ModelServiceStub(channel: grpclib.client.Channel)


.. py:class:: DeleteRequest(*, org_id: str = ..., model_name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: org_id
      :type: str

      

   .. py:attribute:: model_name
      :type: str

      


.. py:class:: DeleteResponse(*, message: str = ..., status: global___Status = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :type: str

      

   .. py:attribute:: status
      :type: global___Status

      


.. py:class:: DeployRequest(*, org_id: str = ..., model_name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: org_id
      :type: str

      

   .. py:attribute:: model_name
      :type: str

      


.. py:class:: DeployResponse(*, message: str = ..., status: global___Status = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :type: str

      

   .. py:attribute:: status
      :type: global___Status

      


.. py:class:: File(*, name: str = ..., size_bytes: int = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: size_bytes
      :type: int

      


.. py:class:: FileData(*, data: bytes = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: data
      :type: bytes

      


.. py:class:: InfoRequest(*, org_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: org_id
      :type: str

      


.. py:class:: InfoResponse(*, model: collections.abc.Iterable[global___Model] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: model
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Model]



.. py:class:: Model(*, name: str = ..., size_bytes: int = ..., files: collections.abc.Iterable[global___File] | None = ..., time_created: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: files
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___File]


   .. py:property:: time_created
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: size_bytes
      :type: int

      

   .. py:method:: HasField(field_name: Literal[time_created, b'time_created']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: Status

   Bases: :py:obj:`_Status`


.. py:class:: SyncedModel(*, org_id: str = ..., model_name: str = ..., associated_dataset: str = ..., files: collections.abc.Iterable[global___File] | None = ..., size_bytes: int = ..., blob_path: str = ..., sync_time: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: files
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___File]


   .. py:property:: sync_time
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: org_id
      :type: str

      

   .. py:attribute:: model_name
      :type: str

      

   .. py:attribute:: associated_dataset
      :type: str

      

   .. py:attribute:: size_bytes
      :type: int

      

   .. py:attribute:: blob_path
      :type: str

      

   .. py:method:: HasField(field_name: Literal[sync_time, b'sync_time']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: UploadMetadata(*, org_id: str = ..., model_name: str = ..., associated_dataset: str = ..., files: collections.abc.Iterable[global___File] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: files
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___File]


   .. py:attribute:: org_id
      :type: str

      

   .. py:attribute:: model_name
      :type: str

      

   .. py:attribute:: associated_dataset
      :type: str

      Determine the format of the associated dataset. Update when it's decided
      whether it should be by ID or name.

      :type: TODO


.. py:class:: UploadRequest(*, metadata: global___UploadMetadata | None = ..., file_contents: global___FileData | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: metadata
      :type: global___UploadMetadata


   .. py:property:: file_contents
      :type: global___FileData


   .. py:method:: HasField(field_name: Literal[file_contents, b'file_contents', metadata, b'metadata', upload_packet, b'upload_packet']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[upload_packet, b'upload_packet']) -> typing_extensions.Literal['metadata', 'file_contents'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: UploadResponse(*, message: str = ..., status: global___Status = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: message
      :type: str

      

   .. py:attribute:: status
      :type: global___Status

      


