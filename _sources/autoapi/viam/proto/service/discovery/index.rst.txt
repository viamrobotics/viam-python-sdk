viam.proto.service.discovery
============================

.. py:module:: viam.proto.service.discovery

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Classes
-------

.. autoapisummary::

   viam.proto.service.discovery.DiscoveryServiceBase
   viam.proto.service.discovery.DiscoveryServiceStub
   viam.proto.service.discovery.UnimplementedDiscoveryServiceBase
   viam.proto.service.discovery.DiscoverResourcesRequest
   viam.proto.service.discovery.DiscoverResourcesResponse


Package Contents
----------------

.. py:class:: DiscoveryServiceBase

   Bases: :py:obj:`abc.ABC`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: DiscoverResources(stream: grpclib.server.Stream[service.discovery.v1.discovery_pb2.DiscoverResourcesRequest, service.discovery.v1.discovery_pb2.DiscoverResourcesResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]


.. py:class:: DiscoveryServiceStub(channel: grpclib.client.Channel)

   .. py:attribute:: DiscoverResources


   .. py:attribute:: DoCommand


.. py:class:: UnimplementedDiscoveryServiceBase

   Bases: :py:obj:`DiscoveryServiceBase`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: DiscoverResources(stream: grpclib.server.Stream[service.discovery.v1.discovery_pb2.DiscoverResourcesRequest, service.discovery.v1.discovery_pb2.DiscoverResourcesResponse]) -> None
      :async:



   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :async:



.. py:class:: DiscoverResourcesRequest(*, name: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str

      name of the discover service


   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method


   .. py:method:: HasField(field_name: Literal['extra', b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: DiscoverResourcesResponse(*, discoveries: collections.abc.Iterable[viam.gen.app.v1.robot_pb2.ComponentConfig] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: discoveries
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[viam.gen.app.v1.robot_pb2.ComponentConfig]

      list of ComponentConfigs that describe the components found by a discover service.


