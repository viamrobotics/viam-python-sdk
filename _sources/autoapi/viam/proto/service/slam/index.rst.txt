:py:mod:`viam.proto.service.slam`
=================================

.. py:module:: viam.proto.service.slam

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.proto.service.slam.SLAMServiceBase
   viam.proto.service.slam.SLAMServiceStub
   viam.proto.service.slam.GetInternalStateRequest
   viam.proto.service.slam.GetInternalStateResponse
   viam.proto.service.slam.GetInternalStateStreamRequest
   viam.proto.service.slam.GetInternalStateStreamResponse
   viam.proto.service.slam.GetPointCloudMapRequest
   viam.proto.service.slam.GetPointCloudMapResponse
   viam.proto.service.slam.GetPointCloudMapStreamRequest
   viam.proto.service.slam.GetPointCloudMapStreamResponse
   viam.proto.service.slam.GetPositionNewRequest
   viam.proto.service.slam.GetPositionNewResponse
   viam.proto.service.slam.GetPositionRequest
   viam.proto.service.slam.GetPositionResponse




.. py:class:: SLAMServiceBase



   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: GetPosition(stream: grpclib.server.Stream[service.slam.v1.slam_pb2.GetPositionRequest, service.slam.v1.slam_pb2.GetPositionResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetPointCloudMap(stream: grpclib.server.Stream[service.slam.v1.slam_pb2.GetPointCloudMapRequest, service.slam.v1.slam_pb2.GetPointCloudMapResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetInternalState(stream: grpclib.server.Stream[service.slam.v1.slam_pb2.GetInternalStateRequest, service.slam.v1.slam_pb2.GetInternalStateResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetPositionNew(stream: grpclib.server.Stream[service.slam.v1.slam_pb2.GetPositionNewRequest, service.slam.v1.slam_pb2.GetPositionNewResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetPointCloudMapStream(stream: grpclib.server.Stream[service.slam.v1.slam_pb2.GetPointCloudMapStreamRequest, service.slam.v1.slam_pb2.GetPointCloudMapStreamResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: GetInternalStateStream(stream: grpclib.server.Stream[service.slam.v1.slam_pb2.GetInternalStateStreamRequest, service.slam.v1.slam_pb2.GetInternalStateStreamResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: SLAMServiceStub(channel: grpclib.client.Channel)


.. py:class:: GetInternalStateRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of slam service


.. py:class:: GetInternalStateResponse(*, internal_state_chunk: bytes = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: internal_state_chunk
      :type: bytes

      Chunk of the internal state of the SLAM algorithm required to continue
      mapping/localization


.. py:class:: GetInternalStateStreamRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of slam service


.. py:class:: GetInternalStateStreamResponse(*, internal_state_chunk: bytes = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: internal_state_chunk
      :type: bytes

      Chunk of the internal state of the SLAM algorithm required to continue
      mapping/localization


.. py:class:: GetPointCloudMapRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of slam service


.. py:class:: GetPointCloudMapResponse(*, point_cloud_pcd_chunk: bytes = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: point_cloud_pcd_chunk
      :type: bytes

      One chunk of the PointCloud.
      For a given GetPointCloudMap request, concatenating all
      GetPointCloudMapResponse.point_cloud_pcd_chunk values in the
      order received result in the complete pointcloud in standard PCD
      format.
      https://pointclouds.org/documentation/tutorials/pcd_file_format.html


.. py:class:: GetPointCloudMapStreamRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of slam service


.. py:class:: GetPointCloudMapStreamResponse(*, point_cloud_pcd_chunk: bytes = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: point_cloud_pcd_chunk
      :type: bytes

      One chunk of the PointCloud.
      For a given GetPointCloudMapStream request,
      concatinating all
      GetPointCloudMapStreamResponse.point_cloud_pcd_chunk
      values in the order received result in
      the complete pointcloud in standard PCD format.
      https://pointclouds.org/documentation/tutorials/pcd_file_format.html


.. py:class:: GetPositionNewRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of slam service


.. py:class:: GetPositionNewResponse(*, pose: common.v1.common_pb2.Pose | None = ..., component_reference: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: pose
      :type: viam.gen.common.v1.common_pb2.Pose

      Current position of the specified component in the SLAM Map

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional information in the response

   .. py:attribute:: component_reference
      :type: str

      This is usually the name of the camera that is in the SLAM config

   .. py:method:: HasField(field_name: Literal[extra, b'extra', pose, b'pose']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetPositionRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of slam service


.. py:class:: GetPositionResponse(*, pose: common.v1.common_pb2.Pose | None = ..., component_reference: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: pose
      :type: viam.gen.common.v1.common_pb2.Pose

      Current position of the specified component in the SLAM Map

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional information in the response

   .. py:attribute:: component_reference
      :type: str

      This is usually the name of the camera that is in the SLAM config

   .. py:method:: HasField(field_name: Literal[extra, b'extra', pose, b'pose']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



