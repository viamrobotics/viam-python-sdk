viam.proto.service.worldstatestore
==================================

.. py:module:: viam.proto.service.worldstatestore

.. autoapi-nested-parse::

   @generated by Viam.
   Do not edit manually!



Classes
-------

.. autoapisummary::

   viam.proto.service.worldstatestore.UnimplementedWorldStateStoreServiceBase
   viam.proto.service.worldstatestore.WorldStateStoreServiceBase
   viam.proto.service.worldstatestore.WorldStateStoreServiceStub
   viam.proto.service.worldstatestore.GetTransformRequest
   viam.proto.service.worldstatestore.GetTransformResponse
   viam.proto.service.worldstatestore.ListUUIDsRequest
   viam.proto.service.worldstatestore.ListUUIDsResponse
   viam.proto.service.worldstatestore.StreamTransformChangesRequest
   viam.proto.service.worldstatestore.StreamTransformChangesResponse
   viam.proto.service.worldstatestore.TransformChangeType


Package Contents
----------------

.. py:class:: UnimplementedWorldStateStoreServiceBase

   Bases: :py:obj:`WorldStateStoreServiceBase`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: ListUUIDs(stream: grpclib.server.Stream[service.worldstatestore.v1.world_state_store_pb2.ListUUIDsRequest, service.worldstatestore.v1.world_state_store_pb2.ListUUIDsResponse]) -> None
      :async:



   .. py:method:: GetTransform(stream: grpclib.server.Stream[service.worldstatestore.v1.world_state_store_pb2.GetTransformRequest, service.worldstatestore.v1.world_state_store_pb2.GetTransformResponse]) -> None
      :async:



   .. py:method:: StreamTransformChanges(stream: grpclib.server.Stream[service.worldstatestore.v1.world_state_store_pb2.StreamTransformChangesRequest, service.worldstatestore.v1.world_state_store_pb2.StreamTransformChangesResponse]) -> None
      :async:



   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :async:



.. py:class:: WorldStateStoreServiceBase

   Bases: :py:obj:`abc.ABC`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: ListUUIDs(stream: grpclib.server.Stream[service.worldstatestore.v1.world_state_store_pb2.ListUUIDsRequest, service.worldstatestore.v1.world_state_store_pb2.ListUUIDsResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetTransform(stream: grpclib.server.Stream[service.worldstatestore.v1.world_state_store_pb2.GetTransformRequest, service.worldstatestore.v1.world_state_store_pb2.GetTransformResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: StreamTransformChanges(stream: grpclib.server.Stream[service.worldstatestore.v1.world_state_store_pb2.StreamTransformChangesRequest, service.worldstatestore.v1.world_state_store_pb2.StreamTransformChangesResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]


.. py:class:: WorldStateStoreServiceStub(channel: grpclib.client.Channel)

   .. py:attribute:: ListUUIDs


   .. py:attribute:: GetTransform


   .. py:attribute:: StreamTransformChanges


   .. py:attribute:: DoCommand


.. py:class:: GetTransformRequest(*, name: str = ..., uuid: bytes = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str

      Name of the world object store service


   .. py:attribute:: uuid
      :type:  bytes


   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method


   .. py:method:: HasField(field_name: Literal['extra', b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetTransformResponse(*, transform: viam.gen.common.v1.common_pb2.Transform | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: transform
      :type: viam.gen.common.v1.common_pb2.Transform



   .. py:method:: HasField(field_name: Literal['transform', b'transform']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ListUUIDsRequest(*, name: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str

      Name of the world object store service


   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method


   .. py:method:: HasField(field_name: Literal['extra', b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: ListUUIDsResponse(*, uuids: collections.abc.Iterable[bytes] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: uuids
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[bytes]



.. py:class:: StreamTransformChangesRequest(*, name: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str

      Name of the world object store service


   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method


   .. py:method:: HasField(field_name: Literal['extra', b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: StreamTransformChangesResponse(*, change_type: global___TransformChangeType = ..., transform: viam.gen.common.v1.common_pb2.Transform | None = ..., updated_fields: google.protobuf.field_mask_pb2.FieldMask | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: change_type
      :type:  global___TransformChangeType


   .. py:property:: transform
      :type: viam.gen.common.v1.common_pb2.Transform



   .. py:property:: updated_fields
      :type: google.protobuf.field_mask_pb2.FieldMask

      The field mask of the transform that has changed, if any. For added transforms, this will be empty. For updated
      transforms, this will be the fields that have changed. For removed transforms, this will be the transform's UUID
      path.


   .. py:method:: HasField(field_name: Literal['transform', b'transform', 'updated_fields', b'updated_fields']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: TransformChangeType

   Bases: :py:obj:`_TransformChangeType`


