viam.media.audio
================

.. py:module:: viam.media.audio


Attributes
----------

.. autoapisummary::

   viam.media.audio.AudioReader
   viam.media.audio.AudioStream


Classes
-------

.. autoapisummary::

   viam.media.audio.AudioChunk
   viam.media.audio.AudioChunkInfo
   viam.media.audio.Stream
   viam.media.audio.StreamReader
   viam.media.audio.Audio


Module Contents
---------------

.. py:class:: AudioChunk(*, data: bytes = ..., length: int = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: data
      :type:  bytes

      Data is PCM data that is organized according to the sample format
      along with its possible interleaving. Data in each format is
      Little Endian.


   .. py:attribute:: length
      :type:  int

      Length is the number of samples


.. py:class:: AudioChunkInfo(*, sample_format: global___SampleFormat = ..., channels: int = ..., sampling_rate: int = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: sample_format
      :type:  global___SampleFormat

      Actual sample encoding format of the response


   .. py:attribute:: channels
      :type:  int


   .. py:attribute:: sampling_rate
      :type:  int


.. py:class:: Stream

   Bases: :py:obj:`Protocol`\ [\ :py:obj:`StreamType`\ ]


   .. py:method:: next() -> StreamType
      :async:



   .. py:method:: __aiter__() -> collections.abc.AsyncIterator


   .. py:method:: __anext__() -> StreamType
      :async:



.. py:class:: StreamReader

   Bases: :py:obj:`Protocol`\ [\ :py:obj:`StreamType`\ ]


   .. py:method:: read() -> StreamType
      :async:



.. py:class:: Audio

   A block of audio data containing information about the block and the audio data


   .. py:attribute:: info
      :type:  viam.proto.component.audioinput.AudioChunkInfo


   .. py:attribute:: chunk
      :type:  viam.proto.component.audioinput.AudioChunk


.. py:data:: AudioReader

.. py:data:: AudioStream

