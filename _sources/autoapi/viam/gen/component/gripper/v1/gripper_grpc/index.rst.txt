viam.gen.component.gripper.v1.gripper_grpc
==========================================

.. py:module:: viam.gen.component.gripper.v1.gripper_grpc


Classes
-------

.. autoapisummary::

   viam.gen.component.gripper.v1.gripper_grpc.GripperServiceBase
   viam.gen.component.gripper.v1.gripper_grpc.UnimplementedGripperServiceBase
   viam.gen.component.gripper.v1.gripper_grpc.GripperServiceStub


Module Contents
---------------

.. py:class:: GripperServiceBase

   Bases: :py:obj:`abc.ABC`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: Open(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.OpenRequest, component.gripper.v1.gripper_pb2.OpenResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: Grab(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.GrabRequest, component.gripper.v1.gripper_pb2.GrabResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: Stop(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.StopRequest, component.gripper.v1.gripper_pb2.StopResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: IsMoving(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.IsMovingRequest, component.gripper.v1.gripper_pb2.IsMovingResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetGeometries(stream: grpclib.server.Stream[common.v1.common_pb2.GetGeometriesRequest, common.v1.common_pb2.GetGeometriesResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]


.. py:class:: UnimplementedGripperServiceBase

   Bases: :py:obj:`GripperServiceBase`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: Open(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.OpenRequest, component.gripper.v1.gripper_pb2.OpenResponse]) -> None
      :async:



   .. py:method:: Grab(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.GrabRequest, component.gripper.v1.gripper_pb2.GrabResponse]) -> None
      :async:



   .. py:method:: Stop(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.StopRequest, component.gripper.v1.gripper_pb2.StopResponse]) -> None
      :async:



   .. py:method:: IsMoving(stream: grpclib.server.Stream[component.gripper.v1.gripper_pb2.IsMovingRequest, component.gripper.v1.gripper_pb2.IsMovingResponse]) -> None
      :async:



   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :async:



   .. py:method:: GetGeometries(stream: grpclib.server.Stream[common.v1.common_pb2.GetGeometriesRequest, common.v1.common_pb2.GetGeometriesResponse]) -> None
      :async:



.. py:class:: GripperServiceStub(channel: grpclib.client.Channel)

