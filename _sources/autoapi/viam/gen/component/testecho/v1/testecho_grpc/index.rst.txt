:py:mod:`viam.gen.component.testecho.v1.testecho_grpc`
======================================================

.. py:module:: viam.gen.component.testecho.v1.testecho_grpc


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.gen.component.testecho.v1.testecho_grpc.TestEchoServiceBase
   viam.gen.component.testecho.v1.testecho_grpc.TestEchoServiceStub




.. py:class:: TestEchoServiceBase

   Bases: :py:obj:`abc.ABC`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: Echo(stream: grpclib.server.Stream[component.testecho.v1.testecho_pb2.EchoRequest, component.testecho.v1.testecho_pb2.EchoResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: EchoMultiple(stream: grpclib.server.Stream[component.testecho.v1.testecho_pb2.EchoMultipleRequest, component.testecho.v1.testecho_pb2.EchoMultipleResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: EchoBiDi(stream: grpclib.server.Stream[component.testecho.v1.testecho_pb2.EchoBiDiRequest, component.testecho.v1.testecho_pb2.EchoBiDiResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Stop(stream: grpclib.server.Stream[component.testecho.v1.testecho_pb2.StopRequest, component.testecho.v1.testecho_pb2.StopResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: TestEchoServiceStub(channel: grpclib.client.Channel)


