:py:mod:`viam.gen.app.model.v1.model_grpc`
==========================================

.. py:module:: viam.gen.app.model.v1.model_grpc


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.gen.app.model.v1.model_grpc.ModelServiceBase
   viam.gen.app.model.v1.model_grpc.ModelServiceStub




.. py:class:: ModelServiceBase

   Bases: :py:obj:`abc.ABC`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: Upload(stream: grpclib.server.Stream[app.model.v1.model_pb2.UploadRequest, app.model.v1.model_pb2.UploadResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Delete(stream: grpclib.server.Stream[app.model.v1.model_pb2.DeleteRequest, app.model.v1.model_pb2.DeleteResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Deploy(stream: grpclib.server.Stream[app.model.v1.model_pb2.DeployRequest, app.model.v1.model_pb2.DeployResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: Info(stream: grpclib.server.Stream[app.model.v1.model_pb2.InfoRequest, app.model.v1.model_pb2.InfoResponse]) -> None
      :abstractmethod:
      :async:


   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]



.. py:class:: ModelServiceStub(channel: grpclib.client.Channel)


