viam.gen.app.v1.end_user_grpc
=============================

.. py:module:: viam.gen.app.v1.end_user_grpc


Classes
-------

.. autoapisummary::

   viam.gen.app.v1.end_user_grpc.EndUserServiceBase
   viam.gen.app.v1.end_user_grpc.UnimplementedEndUserServiceBase
   viam.gen.app.v1.end_user_grpc.EndUserServiceStub


Module Contents
---------------

.. py:class:: EndUserServiceBase

   Bases: :py:obj:`abc.ABC`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: IsLegalAccepted(stream: grpclib.server.Stream[app.v1.end_user_pb2.IsLegalAcceptedRequest, app.v1.end_user_pb2.IsLegalAcceptedResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: AcceptLegal(stream: grpclib.server.Stream[app.v1.end_user_pb2.AcceptLegalRequest, app.v1.end_user_pb2.AcceptLegalResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: RegisterAuthApplication(stream: grpclib.server.Stream[app.v1.end_user_pb2.RegisterAuthApplicationRequest, app.v1.end_user_pb2.RegisterAuthApplicationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: UpdateAuthApplication(stream: grpclib.server.Stream[app.v1.end_user_pb2.UpdateAuthApplicationRequest, app.v1.end_user_pb2.UpdateAuthApplicationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: GetAuthApplication(stream: grpclib.server.Stream[app.v1.end_user_pb2.GetAuthApplicationRequest, app.v1.end_user_pb2.GetAuthApplicationResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]


.. py:class:: UnimplementedEndUserServiceBase

   Bases: :py:obj:`EndUserServiceBase`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: IsLegalAccepted(stream: grpclib.server.Stream[app.v1.end_user_pb2.IsLegalAcceptedRequest, app.v1.end_user_pb2.IsLegalAcceptedResponse]) -> None
      :async:



   .. py:method:: AcceptLegal(stream: grpclib.server.Stream[app.v1.end_user_pb2.AcceptLegalRequest, app.v1.end_user_pb2.AcceptLegalResponse]) -> None
      :async:



   .. py:method:: RegisterAuthApplication(stream: grpclib.server.Stream[app.v1.end_user_pb2.RegisterAuthApplicationRequest, app.v1.end_user_pb2.RegisterAuthApplicationResponse]) -> None
      :async:



   .. py:method:: UpdateAuthApplication(stream: grpclib.server.Stream[app.v1.end_user_pb2.UpdateAuthApplicationRequest, app.v1.end_user_pb2.UpdateAuthApplicationResponse]) -> None
      :async:



   .. py:method:: GetAuthApplication(stream: grpclib.server.Stream[app.v1.end_user_pb2.GetAuthApplicationRequest, app.v1.end_user_pb2.GetAuthApplicationResponse]) -> None
      :async:



.. py:class:: EndUserServiceStub(channel: grpclib.client.Channel)

   .. py:attribute:: IsLegalAccepted


   .. py:attribute:: AcceptLegal


   .. py:attribute:: RegisterAuthApplication


   .. py:attribute:: UpdateAuthApplication


   .. py:attribute:: GetAuthApplication


