viam.gen.app.v1.robot_grpc
==========================

.. py:module:: viam.gen.app.v1.robot_grpc


Classes
-------

.. autoapisummary::

   viam.gen.app.v1.robot_grpc.RobotServiceBase
   viam.gen.app.v1.robot_grpc.UnimplementedRobotServiceBase
   viam.gen.app.v1.robot_grpc.RobotServiceStub


Module Contents
---------------

.. py:class:: RobotServiceBase

   Bases: :py:obj:`abc.ABC`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: Config(stream: grpclib.server.Stream[app.v1.robot_pb2.ConfigRequest, app.v1.robot_pb2.ConfigResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: Certificate(stream: grpclib.server.Stream[app.v1.robot_pb2.CertificateRequest, app.v1.robot_pb2.CertificateResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: Log(stream: grpclib.server.Stream[app.v1.robot_pb2.LogRequest, app.v1.robot_pb2.LogResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: NeedsRestart(stream: grpclib.server.Stream[app.v1.robot_pb2.NeedsRestartRequest, app.v1.robot_pb2.NeedsRestartResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]


.. py:class:: UnimplementedRobotServiceBase

   Bases: :py:obj:`RobotServiceBase`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: Config(stream: grpclib.server.Stream[app.v1.robot_pb2.ConfigRequest, app.v1.robot_pb2.ConfigResponse]) -> None
      :async:



   .. py:method:: Certificate(stream: grpclib.server.Stream[app.v1.robot_pb2.CertificateRequest, app.v1.robot_pb2.CertificateResponse]) -> None
      :async:



   .. py:method:: Log(stream: grpclib.server.Stream[app.v1.robot_pb2.LogRequest, app.v1.robot_pb2.LogResponse]) -> None
      :async:



   .. py:method:: NeedsRestart(stream: grpclib.server.Stream[app.v1.robot_pb2.NeedsRestartRequest, app.v1.robot_pb2.NeedsRestartResponse]) -> None
      :async:



.. py:class:: RobotServiceStub(channel: grpclib.client.Channel)

   .. py:attribute:: Config


   .. py:attribute:: Certificate


   .. py:attribute:: Log


   .. py:attribute:: NeedsRestart


