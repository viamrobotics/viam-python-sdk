:py:mod:`viam.gen.app.v1.app_pb2`
=================================

.. py:module:: viam.gen.app.v1.app_pb2

.. autoapi-nested-parse::

   @generated by mypy-protobuf.  Do not edit manually!
   isort:skip_file



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.gen.app.v1.app_pb2.Robot
   viam.gen.app.v1.app_pb2.RobotPart
   viam.gen.app.v1.app_pb2.RobotPartHistoryEntry
   viam.gen.app.v1.app_pb2.ListOrganizationsRequest
   viam.gen.app.v1.app_pb2.Organization
   viam.gen.app.v1.app_pb2.OrganizationMember
   viam.gen.app.v1.app_pb2.ListOrganizationsResponse
   viam.gen.app.v1.app_pb2.OrganizationInvite
   viam.gen.app.v1.app_pb2.CreateOrganizationRequest
   viam.gen.app.v1.app_pb2.CreateOrganizationResponse
   viam.gen.app.v1.app_pb2.GetOrganizationRequest
   viam.gen.app.v1.app_pb2.GetOrganizationResponse
   viam.gen.app.v1.app_pb2.UpdateOrganizationRequest
   viam.gen.app.v1.app_pb2.UpdateOrganizationResponse
   viam.gen.app.v1.app_pb2.DeleteOrganizationRequest
   viam.gen.app.v1.app_pb2.DeleteOrganizationResponse
   viam.gen.app.v1.app_pb2.ListOrganizationMembersRequest
   viam.gen.app.v1.app_pb2.ListOrganizationMembersResponse
   viam.gen.app.v1.app_pb2.CreateOrganizationInviteRequest
   viam.gen.app.v1.app_pb2.CreateOrganizationInviteResponse
   viam.gen.app.v1.app_pb2.DeleteOrganizationInviteRequest
   viam.gen.app.v1.app_pb2.DeleteOrganizationInviteResponse
   viam.gen.app.v1.app_pb2.ResendOrganizationInviteRequest
   viam.gen.app.v1.app_pb2.ResendOrganizationInviteResponse
   viam.gen.app.v1.app_pb2.DeleteOrganizationMemberRequest
   viam.gen.app.v1.app_pb2.DeleteOrganizationMemberResponse
   viam.gen.app.v1.app_pb2.LocationOrganization
   viam.gen.app.v1.app_pb2.LocationAuth
   viam.gen.app.v1.app_pb2.Location
   viam.gen.app.v1.app_pb2.SharedSecret
   viam.gen.app.v1.app_pb2.CreateLocationRequest
   viam.gen.app.v1.app_pb2.CreateLocationResponse
   viam.gen.app.v1.app_pb2.GetLocationRequest
   viam.gen.app.v1.app_pb2.GetLocationResponse
   viam.gen.app.v1.app_pb2.UpdateLocationRequest
   viam.gen.app.v1.app_pb2.UpdateLocationResponse
   viam.gen.app.v1.app_pb2.DeleteLocationRequest
   viam.gen.app.v1.app_pb2.DeleteLocationResponse
   viam.gen.app.v1.app_pb2.ListLocationsRequest
   viam.gen.app.v1.app_pb2.ShareLocationRequest
   viam.gen.app.v1.app_pb2.ShareLocationResponse
   viam.gen.app.v1.app_pb2.UnshareLocationRequest
   viam.gen.app.v1.app_pb2.UnshareLocationResponse
   viam.gen.app.v1.app_pb2.ListLocationsResponse
   viam.gen.app.v1.app_pb2.CreateLocationSecretRequest
   viam.gen.app.v1.app_pb2.CreateLocationSecretResponse
   viam.gen.app.v1.app_pb2.DeleteLocationSecretRequest
   viam.gen.app.v1.app_pb2.DeleteLocationSecretResponse
   viam.gen.app.v1.app_pb2.LocationAuthRequest
   viam.gen.app.v1.app_pb2.LocationAuthResponse
   viam.gen.app.v1.app_pb2.GetRobotRequest
   viam.gen.app.v1.app_pb2.GetRoverRentalRobotsRequest
   viam.gen.app.v1.app_pb2.RoverRentalRobot
   viam.gen.app.v1.app_pb2.GetRoverRentalRobotsResponse
   viam.gen.app.v1.app_pb2.GetRobotResponse
   viam.gen.app.v1.app_pb2.GetRobotPartsRequest
   viam.gen.app.v1.app_pb2.GetRobotPartsResponse
   viam.gen.app.v1.app_pb2.GetRobotPartRequest
   viam.gen.app.v1.app_pb2.GetRobotPartResponse
   viam.gen.app.v1.app_pb2.GetRobotPartLogsRequest
   viam.gen.app.v1.app_pb2.LogEntry
   viam.gen.app.v1.app_pb2.GetRobotPartLogsResponse
   viam.gen.app.v1.app_pb2.TailRobotPartLogsRequest
   viam.gen.app.v1.app_pb2.TailRobotPartLogsResponse
   viam.gen.app.v1.app_pb2.GetRobotPartHistoryRequest
   viam.gen.app.v1.app_pb2.GetRobotPartHistoryResponse
   viam.gen.app.v1.app_pb2.UpdateRobotPartRequest
   viam.gen.app.v1.app_pb2.UpdateRobotPartResponse
   viam.gen.app.v1.app_pb2.NewRobotPartRequest
   viam.gen.app.v1.app_pb2.NewRobotPartResponse
   viam.gen.app.v1.app_pb2.DeleteRobotPartRequest
   viam.gen.app.v1.app_pb2.DeleteRobotPartResponse
   viam.gen.app.v1.app_pb2.Fragment
   viam.gen.app.v1.app_pb2.ListFragmentsRequest
   viam.gen.app.v1.app_pb2.ListFragmentsResponse
   viam.gen.app.v1.app_pb2.GetFragmentRequest
   viam.gen.app.v1.app_pb2.GetFragmentResponse
   viam.gen.app.v1.app_pb2.CreateFragmentRequest
   viam.gen.app.v1.app_pb2.CreateFragmentResponse
   viam.gen.app.v1.app_pb2.UpdateFragmentRequest
   viam.gen.app.v1.app_pb2.UpdateFragmentResponse
   viam.gen.app.v1.app_pb2.DeleteFragmentRequest
   viam.gen.app.v1.app_pb2.DeleteFragmentResponse
   viam.gen.app.v1.app_pb2.ListRobotsRequest
   viam.gen.app.v1.app_pb2.ListRobotsResponse
   viam.gen.app.v1.app_pb2.NewRobotRequest
   viam.gen.app.v1.app_pb2.NewRobotResponse
   viam.gen.app.v1.app_pb2.UpdateRobotRequest
   viam.gen.app.v1.app_pb2.UpdateRobotResponse
   viam.gen.app.v1.app_pb2.DeleteRobotRequest
   viam.gen.app.v1.app_pb2.DeleteRobotResponse
   viam.gen.app.v1.app_pb2.MarkPartAsMainRequest
   viam.gen.app.v1.app_pb2.MarkPartAsMainResponse
   viam.gen.app.v1.app_pb2.MarkPartForRestartRequest
   viam.gen.app.v1.app_pb2.MarkPartForRestartResponse
   viam.gen.app.v1.app_pb2.CreateRobotPartSecretRequest
   viam.gen.app.v1.app_pb2.CreateRobotPartSecretResponse
   viam.gen.app.v1.app_pb2.DeleteRobotPartSecretRequest
   viam.gen.app.v1.app_pb2.DeleteRobotPartSecretResponse
   viam.gen.app.v1.app_pb2.Authorization
   viam.gen.app.v1.app_pb2.AddRoleRequest
   viam.gen.app.v1.app_pb2.AddRoleResponse
   viam.gen.app.v1.app_pb2.RemoveRoleRequest
   viam.gen.app.v1.app_pb2.RemoveRoleResponse
   viam.gen.app.v1.app_pb2.ListAuthorizationsRequest
   viam.gen.app.v1.app_pb2.Authorizations
   viam.gen.app.v1.app_pb2.ListAuthorizationsResponse
   viam.gen.app.v1.app_pb2.CheckPermissionsRequest
   viam.gen.app.v1.app_pb2.AuthorizedPermissions
   viam.gen.app.v1.app_pb2.CheckPermissionsResponse




Attributes
~~~~~~~~~~

.. autoapisummary::

   viam.gen.app.v1.app_pb2.DESCRIPTOR
   viam.gen.app.v1.app_pb2.global___Robot
   viam.gen.app.v1.app_pb2.global___RobotPart
   viam.gen.app.v1.app_pb2.global___RobotPartHistoryEntry
   viam.gen.app.v1.app_pb2.global___ListOrganizationsRequest
   viam.gen.app.v1.app_pb2.global___Organization
   viam.gen.app.v1.app_pb2.global___OrganizationMember
   viam.gen.app.v1.app_pb2.global___ListOrganizationsResponse
   viam.gen.app.v1.app_pb2.global___OrganizationInvite
   viam.gen.app.v1.app_pb2.global___CreateOrganizationRequest
   viam.gen.app.v1.app_pb2.global___CreateOrganizationResponse
   viam.gen.app.v1.app_pb2.global___GetOrganizationRequest
   viam.gen.app.v1.app_pb2.global___GetOrganizationResponse
   viam.gen.app.v1.app_pb2.global___UpdateOrganizationRequest
   viam.gen.app.v1.app_pb2.global___UpdateOrganizationResponse
   viam.gen.app.v1.app_pb2.global___DeleteOrganizationRequest
   viam.gen.app.v1.app_pb2.global___DeleteOrganizationResponse
   viam.gen.app.v1.app_pb2.global___ListOrganizationMembersRequest
   viam.gen.app.v1.app_pb2.global___ListOrganizationMembersResponse
   viam.gen.app.v1.app_pb2.global___CreateOrganizationInviteRequest
   viam.gen.app.v1.app_pb2.global___CreateOrganizationInviteResponse
   viam.gen.app.v1.app_pb2.global___DeleteOrganizationInviteRequest
   viam.gen.app.v1.app_pb2.global___DeleteOrganizationInviteResponse
   viam.gen.app.v1.app_pb2.global___ResendOrganizationInviteRequest
   viam.gen.app.v1.app_pb2.global___ResendOrganizationInviteResponse
   viam.gen.app.v1.app_pb2.global___DeleteOrganizationMemberRequest
   viam.gen.app.v1.app_pb2.global___DeleteOrganizationMemberResponse
   viam.gen.app.v1.app_pb2.global___LocationOrganization
   viam.gen.app.v1.app_pb2.global___LocationAuth
   viam.gen.app.v1.app_pb2.global___Location
   viam.gen.app.v1.app_pb2.global___SharedSecret
   viam.gen.app.v1.app_pb2.global___CreateLocationRequest
   viam.gen.app.v1.app_pb2.global___CreateLocationResponse
   viam.gen.app.v1.app_pb2.global___GetLocationRequest
   viam.gen.app.v1.app_pb2.global___GetLocationResponse
   viam.gen.app.v1.app_pb2.global___UpdateLocationRequest
   viam.gen.app.v1.app_pb2.global___UpdateLocationResponse
   viam.gen.app.v1.app_pb2.global___DeleteLocationRequest
   viam.gen.app.v1.app_pb2.global___DeleteLocationResponse
   viam.gen.app.v1.app_pb2.global___ListLocationsRequest
   viam.gen.app.v1.app_pb2.global___ShareLocationRequest
   viam.gen.app.v1.app_pb2.global___ShareLocationResponse
   viam.gen.app.v1.app_pb2.global___UnshareLocationRequest
   viam.gen.app.v1.app_pb2.global___UnshareLocationResponse
   viam.gen.app.v1.app_pb2.global___ListLocationsResponse
   viam.gen.app.v1.app_pb2.global___CreateLocationSecretRequest
   viam.gen.app.v1.app_pb2.global___CreateLocationSecretResponse
   viam.gen.app.v1.app_pb2.global___DeleteLocationSecretRequest
   viam.gen.app.v1.app_pb2.global___DeleteLocationSecretResponse
   viam.gen.app.v1.app_pb2.global___LocationAuthRequest
   viam.gen.app.v1.app_pb2.global___LocationAuthResponse
   viam.gen.app.v1.app_pb2.global___GetRobotRequest
   viam.gen.app.v1.app_pb2.global___GetRoverRentalRobotsRequest
   viam.gen.app.v1.app_pb2.global___RoverRentalRobot
   viam.gen.app.v1.app_pb2.global___GetRoverRentalRobotsResponse
   viam.gen.app.v1.app_pb2.global___GetRobotResponse
   viam.gen.app.v1.app_pb2.global___GetRobotPartsRequest
   viam.gen.app.v1.app_pb2.global___GetRobotPartsResponse
   viam.gen.app.v1.app_pb2.global___GetRobotPartRequest
   viam.gen.app.v1.app_pb2.global___GetRobotPartResponse
   viam.gen.app.v1.app_pb2.global___GetRobotPartLogsRequest
   viam.gen.app.v1.app_pb2.global___LogEntry
   viam.gen.app.v1.app_pb2.global___GetRobotPartLogsResponse
   viam.gen.app.v1.app_pb2.global___TailRobotPartLogsRequest
   viam.gen.app.v1.app_pb2.global___TailRobotPartLogsResponse
   viam.gen.app.v1.app_pb2.global___GetRobotPartHistoryRequest
   viam.gen.app.v1.app_pb2.global___GetRobotPartHistoryResponse
   viam.gen.app.v1.app_pb2.global___UpdateRobotPartRequest
   viam.gen.app.v1.app_pb2.global___UpdateRobotPartResponse
   viam.gen.app.v1.app_pb2.global___NewRobotPartRequest
   viam.gen.app.v1.app_pb2.global___NewRobotPartResponse
   viam.gen.app.v1.app_pb2.global___DeleteRobotPartRequest
   viam.gen.app.v1.app_pb2.global___DeleteRobotPartResponse
   viam.gen.app.v1.app_pb2.global___Fragment
   viam.gen.app.v1.app_pb2.global___ListFragmentsRequest
   viam.gen.app.v1.app_pb2.global___ListFragmentsResponse
   viam.gen.app.v1.app_pb2.global___GetFragmentRequest
   viam.gen.app.v1.app_pb2.global___GetFragmentResponse
   viam.gen.app.v1.app_pb2.global___CreateFragmentRequest
   viam.gen.app.v1.app_pb2.global___CreateFragmentResponse
   viam.gen.app.v1.app_pb2.global___UpdateFragmentRequest
   viam.gen.app.v1.app_pb2.global___UpdateFragmentResponse
   viam.gen.app.v1.app_pb2.global___DeleteFragmentRequest
   viam.gen.app.v1.app_pb2.global___DeleteFragmentResponse
   viam.gen.app.v1.app_pb2.global___ListRobotsRequest
   viam.gen.app.v1.app_pb2.global___ListRobotsResponse
   viam.gen.app.v1.app_pb2.global___NewRobotRequest
   viam.gen.app.v1.app_pb2.global___NewRobotResponse
   viam.gen.app.v1.app_pb2.global___UpdateRobotRequest
   viam.gen.app.v1.app_pb2.global___UpdateRobotResponse
   viam.gen.app.v1.app_pb2.global___DeleteRobotRequest
   viam.gen.app.v1.app_pb2.global___DeleteRobotResponse
   viam.gen.app.v1.app_pb2.global___MarkPartAsMainRequest
   viam.gen.app.v1.app_pb2.global___MarkPartAsMainResponse
   viam.gen.app.v1.app_pb2.global___MarkPartForRestartRequest
   viam.gen.app.v1.app_pb2.global___MarkPartForRestartResponse
   viam.gen.app.v1.app_pb2.global___CreateRobotPartSecretRequest
   viam.gen.app.v1.app_pb2.global___CreateRobotPartSecretResponse
   viam.gen.app.v1.app_pb2.global___DeleteRobotPartSecretRequest
   viam.gen.app.v1.app_pb2.global___DeleteRobotPartSecretResponse
   viam.gen.app.v1.app_pb2.global___Authorization
   viam.gen.app.v1.app_pb2.global___AddRoleRequest
   viam.gen.app.v1.app_pb2.global___AddRoleResponse
   viam.gen.app.v1.app_pb2.global___RemoveRoleRequest
   viam.gen.app.v1.app_pb2.global___RemoveRoleResponse
   viam.gen.app.v1.app_pb2.global___ListAuthorizationsRequest
   viam.gen.app.v1.app_pb2.global___Authorizations
   viam.gen.app.v1.app_pb2.global___ListAuthorizationsResponse
   viam.gen.app.v1.app_pb2.global___CheckPermissionsRequest
   viam.gen.app.v1.app_pb2.global___AuthorizedPermissions
   viam.gen.app.v1.app_pb2.global___CheckPermissionsResponse


.. py:data:: DESCRIPTOR
   :type: google.protobuf.descriptor.FileDescriptor

   

.. py:class:: Robot(*, id: str = ..., name: str = ..., location: str = ..., last_access: google.protobuf.timestamp_pb2.Timestamp | None = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: last_access
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: location
      :type: str

      

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on', last_access, b'last_access']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___Robot

   

.. py:class:: RobotPart(*, id: str = ..., name: str = ..., dns_name: str = ..., secret: str = ..., robot: str = ..., location_id: str = ..., robot_config: google.protobuf.struct_pb2.Struct | None = ..., last_access: google.protobuf.timestamp_pb2.Timestamp | None = ..., user_supplied_info: google.protobuf.struct_pb2.Struct | None = ..., main_part: bool = ..., fqdn: str = ..., local_fqdn: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., secrets: collections.abc.Iterable[global___SharedSecret] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robot_config
      :type: google.protobuf.struct_pb2.Struct


   .. py:property:: last_access
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:property:: user_supplied_info
      :type: google.protobuf.struct_pb2.Struct


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:property:: secrets
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SharedSecret]

      List of secrets allowed for authentication.

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: dns_name
      :type: str

      dns_name part name used for fqdn and local fqdn. Anytime the Name is updated this should be sanitized and updated as well.

   .. py:attribute:: secret
      :type: str

      

   .. py:attribute:: robot
      :type: str

      

   .. py:attribute:: location_id
      :type: str

      Store the location_id to allow for unique indexes across parts and locations. This filed MUST be updated each time the robots location
      changes.

   .. py:attribute:: main_part
      :type: bool

      

   .. py:attribute:: fqdn
      :type: str

      

   .. py:attribute:: local_fqdn
      :type: str

      

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on', last_access, b'last_access', robot_config, b'robot_config', user_supplied_info, b'user_supplied_info']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___RobotPart

   

.. py:class:: RobotPartHistoryEntry(*, part: str = ..., robot: str = ..., when: google.protobuf.timestamp_pb2.Timestamp | None = ..., old: global___RobotPart | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: when
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:property:: old
      :type: global___RobotPart


   .. py:attribute:: part
      :type: str

      

   .. py:attribute:: robot
      :type: str

      

   .. py:method:: HasField(field_name: Literal[old, b'old', when, b'when']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___RobotPartHistoryEntry

   

.. py:class:: ListOrganizationsRequest



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___ListOrganizationsRequest

   

.. py:class:: Organization(*, id: str = ..., name: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___Organization

   

.. py:class:: OrganizationMember(*, user_id: str = ..., emails: collections.abc.Iterable[builtins.str] | None = ..., date_added: google.protobuf.timestamp_pb2.Timestamp | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: emails
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]


   .. py:property:: date_added
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: user_id
      :type: str

      

   .. py:method:: HasField(field_name: Literal[date_added, b'date_added']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___OrganizationMember

   

.. py:class:: ListOrganizationsResponse(*, organizations: collections.abc.Iterable[global___Organization] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: organizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Organization]



.. py:data:: global___ListOrganizationsResponse

   

.. py:class:: OrganizationInvite(*, organization_id: str = ..., email: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., robot_count: int = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: email
      :type: str

      

   .. py:attribute:: robot_count
      :type: int

      

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___OrganizationInvite

   

.. py:class:: CreateOrganizationRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      


.. py:data:: global___CreateOrganizationRequest

   

.. py:class:: CreateOrganizationResponse(*, organization: global___Organization | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: organization
      :type: global___Organization


   .. py:method:: HasField(field_name: Literal[organization, b'organization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___CreateOrganizationResponse

   

.. py:class:: GetOrganizationRequest(*, organization_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      


.. py:data:: global___GetOrganizationRequest

   

.. py:class:: GetOrganizationResponse(*, organization: global___Organization | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: organization
      :type: global___Organization


   .. py:method:: HasField(field_name: Literal[organization, b'organization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___GetOrganizationResponse

   

.. py:class:: UpdateOrganizationRequest(*, organization_id: str = ..., name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: name
      :type: str

      


.. py:data:: global___UpdateOrganizationRequest

   

.. py:class:: UpdateOrganizationResponse(*, organization: global___Organization | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: organization
      :type: global___Organization


   .. py:method:: HasField(field_name: Literal[organization, b'organization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___UpdateOrganizationResponse

   

.. py:class:: DeleteOrganizationRequest(*, organization_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      


.. py:data:: global___DeleteOrganizationRequest

   

.. py:class:: DeleteOrganizationResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteOrganizationResponse

   

.. py:class:: ListOrganizationMembersRequest(*, organization_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      


.. py:data:: global___ListOrganizationMembersRequest

   

.. py:class:: ListOrganizationMembersResponse(*, organization_id: str = ..., members: collections.abc.Iterable[global___OrganizationMember] | None = ..., invites: collections.abc.Iterable[global___OrganizationInvite] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: members
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrganizationMember]


   .. py:property:: invites
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OrganizationInvite]


   .. py:attribute:: organization_id
      :type: str

      


.. py:data:: global___ListOrganizationMembersResponse

   

.. py:class:: CreateOrganizationInviteRequest(*, organization_id: str = ..., email: str = ..., authorizations: collections.abc.Iterable[global___Authorization] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorization]


   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: email
      :type: str

      


.. py:data:: global___CreateOrganizationInviteRequest

   

.. py:class:: CreateOrganizationInviteResponse(*, invite: global___OrganizationInvite | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: invite
      :type: global___OrganizationInvite


   .. py:method:: HasField(field_name: Literal[invite, b'invite']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___CreateOrganizationInviteResponse

   

.. py:class:: DeleteOrganizationInviteRequest(*, organization_id: str = ..., email: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: email
      :type: str

      


.. py:data:: global___DeleteOrganizationInviteRequest

   

.. py:class:: DeleteOrganizationInviteResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteOrganizationInviteResponse

   

.. py:class:: ResendOrganizationInviteRequest(*, organization_id: str = ..., email: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: email
      :type: str

      


.. py:data:: global___ResendOrganizationInviteRequest

   

.. py:class:: ResendOrganizationInviteResponse(*, invite: global___OrganizationInvite | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: invite
      :type: global___OrganizationInvite


   .. py:method:: HasField(field_name: Literal[invite, b'invite']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___ResendOrganizationInviteResponse

   

.. py:class:: DeleteOrganizationMemberRequest(*, organization_id: str = ..., user_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: user_id
      :type: str

      


.. py:data:: global___DeleteOrganizationMemberRequest

   

.. py:class:: DeleteOrganizationMemberResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteOrganizationMemberResponse

   

.. py:class:: LocationOrganization(*, organization_id: str = ..., primary: bool = ...)



   Location

   .. py:attribute:: organization_id
      :type: str

      Organization ID the location is shared with.

   .. py:attribute:: primary
      :type: bool

      Whether the organization is the primary owner or not.


.. py:data:: global___LocationOrganization

   

.. py:class:: LocationAuth(*, secret: str = ..., location_id: str = ..., secrets: collections.abc.Iterable[global___SharedSecret] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: secrets
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SharedSecret]

      List of secrets used to authenticate to the Location.

   .. py:attribute:: secret
      :type: str

      use secrets field.

      :type: Deprecated

   .. py:attribute:: location_id
      :type: str

      Location ID containing this LocationAuth.


.. py:data:: global___LocationAuth

   

.. py:class:: Location(*, id: str = ..., name: str = ..., parent_location_id: str = ..., auth: global___LocationAuth | None = ..., organizations: collections.abc.Iterable[global___LocationOrganization] | None = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., robot_count: int = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: auth
      :type: global___LocationAuth

      Location authentication secrets.

   .. py:property:: organizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocationOrganization]

      Organizations that the location is shared with.

   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp

      Location creation timestamp.

   .. py:attribute:: id
      :type: str

      Location ID.

   .. py:attribute:: name
      :type: str

      Location name.

   .. py:attribute:: parent_location_id
      :type: str

      Location ID of the parent location.

   .. py:attribute:: robot_count
      :type: int

      

   .. py:method:: HasField(field_name: Literal[auth, b'auth', created_on, b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___Location

   

.. py:class:: SharedSecret(*, id: str = ..., secret: str = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., state: global___SharedSecret = ...)



   SharedSecret is a secret used for LocationAuth and RobotParts.

   .. py:class:: State




   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp

      Date/time the secret was first created.

   .. py:attribute:: STATE_UNSPECIFIED
      :type: SharedSecret

      

   .. py:attribute:: STATE_ENABLED
      :type: SharedSecret

      Secret is enabled and can be used in authentication.

   .. py:attribute:: STATE_DISABLED
      :type: SharedSecret

      Secret is disabled and must not be used to authenticate to rpc.

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: secret
      :type: str

      The payload of the secret. Used during authentication to the rpc framework.

   .. py:attribute:: state
      :type: global___SharedSecret.State.ValueType

      State of the shared secret. In most cases it should be enabled. We may support
      disabling a specific secret while keeping it in the database.

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___SharedSecret

   

.. py:class:: CreateLocationRequest(*, organization_id: str = ..., name: str = ..., parent_location_id: builtins.str | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      Organization ID to create the location under.

   .. py:attribute:: name
      :type: str

      Name of the location.

   .. py:attribute:: parent_location_id
      :type: str

      The new parent location to move the location under.

   .. py:method:: HasField(field_name: Literal[_parent_location_id, b'_parent_location_id', parent_location_id, b'parent_location_id']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_parent_location_id, b'_parent_location_id']) -> typing_extensions.Literal['parent_location_id'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:data:: global___CreateLocationRequest

   

.. py:class:: CreateLocationResponse(*, location: global___Location | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: location
      :type: global___Location

      Location object is returned.

   .. py:method:: HasField(field_name: Literal[location, b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___CreateLocationResponse

   

.. py:class:: GetLocationRequest(*, location_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID of location to get.


.. py:data:: global___GetLocationRequest

   

.. py:class:: GetLocationResponse(*, location: global___Location | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: location
      :type: global___Location

      Location object is returned.

   .. py:method:: HasField(field_name: Literal[location, b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___GetLocationResponse

   

.. py:class:: UpdateLocationRequest(*, location_id: str = ..., name: builtins.str | None = ..., parent_location_id: builtins.str | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID of location to update.

   .. py:attribute:: name
      :type: str

      The new to be updated on location.

   .. py:attribute:: parent_location_id
      :type: str

      The new parent location to move the location under.

   .. py:method:: HasField(field_name: Literal[_name, b'_name', _parent_location_id, b'_parent_location_id', name, b'name', parent_location_id, b'parent_location_id']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_name, b'_name']) -> typing_extensions.Literal['name'] | None
               WhichOneof(oneof_group: Literal[_parent_location_id, b'_parent_location_id']) -> typing_extensions.Literal['parent_location_id'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:data:: global___UpdateLocationRequest

   

.. py:class:: UpdateLocationResponse(*, location: global___Location | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: location
      :type: global___Location

      Location object is returned.

   .. py:method:: HasField(field_name: Literal[location, b'location']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___UpdateLocationResponse

   

.. py:class:: DeleteLocationRequest(*, location_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID of location to delete.


.. py:data:: global___DeleteLocationRequest

   

.. py:class:: DeleteLocationResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteLocationResponse

   

.. py:class:: ListLocationsRequest(*, organization_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      Organization ID under which to list all locations.


.. py:data:: global___ListLocationsRequest

   

.. py:class:: ShareLocationRequest(*, location_id: str = ..., organization_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID to be shared.

   .. py:attribute:: organization_id
      :type: str

      Organization ID to share the location with.


.. py:data:: global___ShareLocationRequest

   

.. py:class:: ShareLocationResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___ShareLocationResponse

   

.. py:class:: UnshareLocationRequest(*, location_id: str = ..., organization_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID to be unshared.

   .. py:attribute:: organization_id
      :type: str

      Organization ID to unshare the location with.


.. py:data:: global___UnshareLocationRequest

   

.. py:class:: UnshareLocationResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___UnshareLocationResponse

   

.. py:class:: ListLocationsResponse(*, locations: collections.abc.Iterable[global___Location] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: locations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Location]



.. py:data:: global___ListLocationsResponse

   

.. py:class:: CreateLocationSecretRequest(*, location_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      Location ID to create the secret in.


.. py:data:: global___CreateLocationSecretRequest

   

.. py:class:: CreateLocationSecretResponse(*, auth: global___LocationAuth | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: auth
      :type: global___LocationAuth

      Location's auth after updates.

   .. py:method:: HasField(field_name: Literal[auth, b'auth']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___CreateLocationSecretResponse

   

.. py:class:: DeleteLocationSecretRequest(*, location_id: str = ..., secret_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      

   .. py:attribute:: secret_id
      :type: str

      


.. py:data:: global___DeleteLocationSecretRequest

   

.. py:class:: DeleteLocationSecretResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteLocationSecretResponse

   

.. py:class:: LocationAuthRequest(*, location_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      


.. py:data:: global___LocationAuthRequest

   

.. py:class:: LocationAuthResponse(*, auth: global___LocationAuth | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: auth
      :type: global___LocationAuth


   .. py:method:: HasField(field_name: Literal[auth, b'auth']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___LocationAuthResponse

   

.. py:class:: GetRobotRequest(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:data:: global___GetRobotRequest

   

.. py:class:: GetRoverRentalRobotsRequest(*, org_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: org_id
      :type: str

      


.. py:data:: global___GetRoverRentalRobotsRequest

   

.. py:class:: RoverRentalRobot(*, robot_id: str = ..., location_id: str = ..., robot_name: str = ..., robot_main_part_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: robot_id
      :type: str

      

   .. py:attribute:: location_id
      :type: str

      

   .. py:attribute:: robot_name
      :type: str

      

   .. py:attribute:: robot_main_part_id
      :type: str

      


.. py:data:: global___RoverRentalRobot

   

.. py:class:: GetRoverRentalRobotsResponse(*, robots: collections.abc.Iterable[global___RoverRentalRobot] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robots
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RoverRentalRobot]



.. py:data:: global___GetRoverRentalRobotsResponse

   

.. py:class:: GetRobotResponse(*, robot: global___Robot | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robot
      :type: global___Robot


   .. py:method:: HasField(field_name: Literal[robot, b'robot']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___GetRobotResponse

   

.. py:class:: GetRobotPartsRequest(*, robot_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: robot_id
      :type: str

      


.. py:data:: global___GetRobotPartsRequest

   

.. py:class:: GetRobotPartsResponse(*, parts: collections.abc.Iterable[global___RobotPart] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: parts
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotPart]



.. py:data:: global___GetRobotPartsResponse

   

.. py:class:: GetRobotPartRequest(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:data:: global___GetRobotPartRequest

   

.. py:class:: GetRobotPartResponse(*, part: global___RobotPart | None = ..., config_json: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: part
      :type: global___RobotPart


   .. py:attribute:: config_json
      :type: str

      

   .. py:method:: HasField(field_name: Literal[part, b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___GetRobotPartResponse

   

.. py:class:: GetRobotPartLogsRequest(*, id: str = ..., errors_only: bool = ..., filter: builtins.str | None = ..., page_token: builtins.str | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: errors_only
      :type: bool

      

   .. py:attribute:: filter
      :type: str

      

   .. py:attribute:: page_token
      :type: str

      

   .. py:method:: HasField(field_name: Literal[_filter, b'_filter', _page_token, b'_page_token', filter, b'filter', page_token, b'page_token']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_filter, b'_filter']) -> typing_extensions.Literal['filter'] | None
               WhichOneof(oneof_group: Literal[_page_token, b'_page_token']) -> typing_extensions.Literal['page_token'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:data:: global___GetRobotPartLogsRequest

   

.. py:class:: LogEntry(*, host: str = ..., level: str = ..., time: google.protobuf.timestamp_pb2.Timestamp | None = ..., logger_name: str = ..., message: str = ..., caller: google.protobuf.struct_pb2.Struct | None = ..., stack: str = ..., fields: collections.abc.Iterable[google.protobuf.struct_pb2.Struct] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: time
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:property:: caller
      :type: google.protobuf.struct_pb2.Struct


   .. py:property:: fields
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.struct_pb2.Struct]


   .. py:attribute:: host
      :type: str

      

   .. py:attribute:: level
      :type: str

      

   .. py:attribute:: logger_name
      :type: str

      

   .. py:attribute:: message
      :type: str

      

   .. py:attribute:: stack
      :type: str

      

   .. py:method:: HasField(field_name: Literal[caller, b'caller', time, b'time']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___LogEntry

   

.. py:class:: GetRobotPartLogsResponse(*, logs: collections.abc.Iterable[global___LogEntry] | None = ..., next_page_token: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: logs
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogEntry]


   .. py:attribute:: next_page_token
      :type: str

      


.. py:data:: global___GetRobotPartLogsResponse

   

.. py:class:: TailRobotPartLogsRequest(*, id: str = ..., errors_only: bool = ..., filter: builtins.str | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: errors_only
      :type: bool

      

   .. py:attribute:: filter
      :type: str

      

   .. py:method:: HasField(field_name: Literal[_filter, b'_filter', filter, b'filter']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_filter, b'_filter']) -> typing_extensions.Literal['filter'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:data:: global___TailRobotPartLogsRequest

   

.. py:class:: TailRobotPartLogsResponse(*, logs: collections.abc.Iterable[global___LogEntry] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: logs
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogEntry]



.. py:data:: global___TailRobotPartLogsResponse

   

.. py:class:: GetRobotPartHistoryRequest(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:data:: global___GetRobotPartHistoryRequest

   

.. py:class:: GetRobotPartHistoryResponse(*, history: collections.abc.Iterable[global___RobotPartHistoryEntry] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: history
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RobotPartHistoryEntry]



.. py:data:: global___GetRobotPartHistoryResponse

   

.. py:class:: UpdateRobotPartRequest(*, id: str = ..., name: str = ..., robot_config: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robot_config
      :type: google.protobuf.struct_pb2.Struct


   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:method:: HasField(field_name: Literal[robot_config, b'robot_config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___UpdateRobotPartRequest

   

.. py:class:: UpdateRobotPartResponse(*, part: global___RobotPart | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: part
      :type: global___RobotPart


   .. py:method:: HasField(field_name: Literal[part, b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___UpdateRobotPartResponse

   

.. py:class:: NewRobotPartRequest(*, robot_id: str = ..., part_name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: robot_id
      :type: str

      

   .. py:attribute:: part_name
      :type: str

      


.. py:data:: global___NewRobotPartRequest

   

.. py:class:: NewRobotPartResponse(*, part_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      


.. py:data:: global___NewRobotPartResponse

   

.. py:class:: DeleteRobotPartRequest(*, part_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      


.. py:data:: global___DeleteRobotPartRequest

   

.. py:class:: DeleteRobotPartResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteRobotPartResponse

   

.. py:class:: Fragment(*, id: str = ..., name: str = ..., fragment: google.protobuf.struct_pb2.Struct | None = ..., organization_owner: str = ..., public: bool = ..., created_on: google.protobuf.timestamp_pb2.Timestamp | None = ..., organization_name: str = ..., readonly: bool = ..., robot_part_count: int = ..., organization_count: int = ..., only_used_by_owner: bool = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: fragment
      :type: google.protobuf.struct_pb2.Struct


   .. py:property:: created_on
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: organization_owner
      :type: str

      

   .. py:attribute:: public
      :type: bool

      

   .. py:attribute:: organization_name
      :type: str

      

   .. py:attribute:: readonly
      :type: bool

      

   .. py:attribute:: robot_part_count
      :type: int

      number of robot parts using this fragment

   .. py:attribute:: organization_count
      :type: int

      number of organizations using this fragment

   .. py:attribute:: only_used_by_owner
      :type: bool

      whether the organization(s) using this fragment is the same as the fragment org

   .. py:method:: HasField(field_name: Literal[created_on, b'created_on', fragment, b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___Fragment

   

.. py:class:: ListFragmentsRequest(*, organization_id: str = ..., show_public: bool = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: organization_id
      :type: str

      

   .. py:attribute:: show_public
      :type: bool

      


.. py:data:: global___ListFragmentsRequest

   

.. py:class:: ListFragmentsResponse(*, fragments: collections.abc.Iterable[global___Fragment] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: fragments
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Fragment]



.. py:data:: global___ListFragmentsResponse

   

.. py:class:: GetFragmentRequest(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:data:: global___GetFragmentRequest

   

.. py:class:: GetFragmentResponse(*, fragment: global___Fragment | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: fragment
      :type: global___Fragment


   .. py:method:: HasField(field_name: Literal[fragment, b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___GetFragmentResponse

   

.. py:class:: CreateFragmentRequest(*, name: str = ..., config: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: config
      :type: google.protobuf.struct_pb2.Struct


   .. py:attribute:: name
      :type: str

      

   .. py:method:: HasField(field_name: Literal[config, b'config']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___CreateFragmentRequest

   

.. py:class:: CreateFragmentResponse(*, fragment: global___Fragment | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: fragment
      :type: global___Fragment


   .. py:method:: HasField(field_name: Literal[fragment, b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___CreateFragmentResponse

   

.. py:class:: UpdateFragmentRequest(*, id: str = ..., name: str = ..., config: google.protobuf.struct_pb2.Struct | None = ..., public: builtins.bool | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: config
      :type: google.protobuf.struct_pb2.Struct


   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: public
      :type: bool

      

   .. py:method:: HasField(field_name: Literal[_public, b'_public', config, b'config', public, b'public']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[_public, b'_public']) -> typing_extensions.Literal['public'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:data:: global___UpdateFragmentRequest

   

.. py:class:: UpdateFragmentResponse(*, fragment: global___Fragment | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: fragment
      :type: global___Fragment


   .. py:method:: HasField(field_name: Literal[fragment, b'fragment']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___UpdateFragmentResponse

   

.. py:class:: DeleteFragmentRequest(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:data:: global___DeleteFragmentRequest

   

.. py:class:: DeleteFragmentResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteFragmentResponse

   

.. py:class:: ListRobotsRequest(*, location_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: location_id
      :type: str

      


.. py:data:: global___ListRobotsRequest

   

.. py:class:: ListRobotsResponse(*, robots: collections.abc.Iterable[global___Robot] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robots
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Robot]



.. py:data:: global___ListRobotsResponse

   

.. py:class:: NewRobotRequest(*, name: str = ..., location: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: location
      :type: str

      


.. py:data:: global___NewRobotRequest

   

.. py:class:: NewRobotResponse(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:data:: global___NewRobotResponse

   

.. py:class:: UpdateRobotRequest(*, id: str = ..., name: str = ..., location: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      

   .. py:attribute:: name
      :type: str

      

   .. py:attribute:: location
      :type: str

      


.. py:data:: global___UpdateRobotRequest

   

.. py:class:: UpdateRobotResponse(*, robot: global___Robot | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: robot
      :type: global___Robot


   .. py:method:: HasField(field_name: Literal[robot, b'robot']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___UpdateRobotResponse

   

.. py:class:: DeleteRobotRequest(*, id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: id
      :type: str

      


.. py:data:: global___DeleteRobotRequest

   

.. py:class:: DeleteRobotResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteRobotResponse

   

.. py:class:: MarkPartAsMainRequest(*, part_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      


.. py:data:: global___MarkPartAsMainRequest

   

.. py:class:: MarkPartAsMainResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___MarkPartAsMainResponse

   

.. py:class:: MarkPartForRestartRequest(*, part_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      


.. py:data:: global___MarkPartForRestartRequest

   

.. py:class:: MarkPartForRestartResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___MarkPartForRestartResponse

   

.. py:class:: CreateRobotPartSecretRequest(*, part_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      Robot Part ID to create the secret in.


.. py:data:: global___CreateRobotPartSecretRequest

   

.. py:class:: CreateRobotPartSecretResponse(*, part: global___RobotPart | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: part
      :type: global___RobotPart

      Location's auth after updates.

   .. py:method:: HasField(field_name: Literal[part, b'part']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___CreateRobotPartSecretResponse

   

.. py:class:: DeleteRobotPartSecretRequest(*, part_id: str = ..., secret_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: part_id
      :type: str

      

   .. py:attribute:: secret_id
      :type: str

      


.. py:data:: global___DeleteRobotPartSecretRequest

   

.. py:class:: DeleteRobotPartSecretResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___DeleteRobotPartSecretResponse

   

.. py:class:: Authorization(*, authorization_type: str = ..., authorization_id: str = ..., resource_type: str = ..., resource_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: authorization_type
      :type: str

      

   .. py:attribute:: authorization_id
      :type: str

      

   .. py:attribute:: resource_type
      :type: str

      

   .. py:attribute:: resource_id
      :type: str

      


.. py:data:: global___Authorization

   

.. py:class:: AddRoleRequest(*, identity_id: str = ..., role_id: str = ..., resource_type: str = ..., resource_id: str = ..., organization_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: identity_id
      :type: str

      

   .. py:attribute:: role_id
      :type: str

      

   .. py:attribute:: resource_type
      :type: str

      

   .. py:attribute:: resource_id
      :type: str

      

   .. py:attribute:: organization_id
      :type: str

      


.. py:data:: global___AddRoleRequest

   

.. py:class:: AddRoleResponse(*, authorization: global___Authorization | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: authorization
      :type: global___Authorization


   .. py:method:: HasField(field_name: Literal[authorization, b'authorization']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___AddRoleResponse

   

.. py:class:: RemoveRoleRequest(*, identity_id: str = ..., role_id: str = ..., resource_type: str = ..., resource_id: str = ..., organization_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: identity_id
      :type: str

      

   .. py:attribute:: role_id
      :type: str

      

   .. py:attribute:: resource_type
      :type: str

      

   .. py:attribute:: resource_id
      :type: str

      

   .. py:attribute:: organization_id
      :type: str

      


.. py:data:: global___RemoveRoleRequest

   

.. py:class:: RemoveRoleResponse



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


.. py:data:: global___RemoveRoleResponse

   

.. py:class:: ListAuthorizationsRequest(*, resource_type: str = ..., resource_id: str = ..., organization_id: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: resource_type
      :type: str

      

   .. py:attribute:: resource_id
      :type: str

      

   .. py:attribute:: organization_id
      :type: str

      


.. py:data:: global___ListAuthorizationsRequest

   

.. py:class:: Authorizations(*, identity_id: str = ..., authorizations: collections.abc.Iterable[global___Authorization] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorization]


   .. py:attribute:: identity_id
      :type: str

      


.. py:data:: global___Authorizations

   

.. py:class:: ListAuthorizationsResponse(*, authorizations: collections.abc.Iterable[global___Authorizations] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: authorizations
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Authorizations]



.. py:data:: global___ListAuthorizationsResponse

   

.. py:class:: CheckPermissionsRequest(*, permissions: collections.abc.Iterable[global___AuthorizedPermissions] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: permissions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizedPermissions]



.. py:data:: global___CheckPermissionsRequest

   

.. py:class:: AuthorizedPermissions(*, resource_id: str = ..., permissions: collections.abc.Iterable[builtins.str] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: permissions
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]


   .. py:attribute:: resource_id
      :type: str

      


.. py:data:: global___AuthorizedPermissions

   

.. py:class:: CheckPermissionsResponse(*, authorized_permissions: collections.abc.Iterable[global___AuthorizedPermissions] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: authorized_permissions
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizedPermissions]



.. py:data:: global___CheckPermissionsResponse

   

