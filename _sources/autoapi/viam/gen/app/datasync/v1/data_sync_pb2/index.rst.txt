viam.gen.app.datasync.v1.data_sync_pb2
======================================

.. py:module:: viam.gen.app.datasync.v1.data_sync_pb2

.. autoapi-nested-parse::

   @generated by mypy-protobuf.  Do not edit manually!
   isort:skip_file



Attributes
----------

.. autoapisummary::

   viam.gen.app.datasync.v1.data_sync_pb2.DESCRIPTOR
   viam.gen.app.datasync.v1.data_sync_pb2.MIME_TYPE_UNSPECIFIED
   viam.gen.app.datasync.v1.data_sync_pb2.MIME_TYPE_IMAGE_JPEG
   viam.gen.app.datasync.v1.data_sync_pb2.MIME_TYPE_IMAGE_PNG
   viam.gen.app.datasync.v1.data_sync_pb2.MIME_TYPE_APPLICATION_PCD
   viam.gen.app.datasync.v1.data_sync_pb2.global___MimeType
   viam.gen.app.datasync.v1.data_sync_pb2.DATA_TYPE_UNSPECIFIED
   viam.gen.app.datasync.v1.data_sync_pb2.DATA_TYPE_BINARY_SENSOR
   viam.gen.app.datasync.v1.data_sync_pb2.DATA_TYPE_TABULAR_SENSOR
   viam.gen.app.datasync.v1.data_sync_pb2.DATA_TYPE_FILE
   viam.gen.app.datasync.v1.data_sync_pb2.global___DataType
   viam.gen.app.datasync.v1.data_sync_pb2.global___DataCaptureUploadRequest
   viam.gen.app.datasync.v1.data_sync_pb2.global___DataCaptureUploadResponse
   viam.gen.app.datasync.v1.data_sync_pb2.global___FileUploadRequest
   viam.gen.app.datasync.v1.data_sync_pb2.global___FileUploadResponse
   viam.gen.app.datasync.v1.data_sync_pb2.global___StreamingDataCaptureUploadRequest
   viam.gen.app.datasync.v1.data_sync_pb2.global___StreamingDataCaptureUploadResponse
   viam.gen.app.datasync.v1.data_sync_pb2.global___SensorMetadata
   viam.gen.app.datasync.v1.data_sync_pb2.global___SensorData
   viam.gen.app.datasync.v1.data_sync_pb2.global___FileData
   viam.gen.app.datasync.v1.data_sync_pb2.global___UploadMetadata
   viam.gen.app.datasync.v1.data_sync_pb2.global___CaptureInterval
   viam.gen.app.datasync.v1.data_sync_pb2.global___DataCaptureMetadata
   viam.gen.app.datasync.v1.data_sync_pb2.global___DataCaptureUploadMetadata


Classes
-------

.. autoapisummary::

   viam.gen.app.datasync.v1.data_sync_pb2.MimeType
   viam.gen.app.datasync.v1.data_sync_pb2.DataType
   viam.gen.app.datasync.v1.data_sync_pb2.DataCaptureUploadRequest
   viam.gen.app.datasync.v1.data_sync_pb2.DataCaptureUploadResponse
   viam.gen.app.datasync.v1.data_sync_pb2.FileUploadRequest
   viam.gen.app.datasync.v1.data_sync_pb2.FileUploadResponse
   viam.gen.app.datasync.v1.data_sync_pb2.StreamingDataCaptureUploadRequest
   viam.gen.app.datasync.v1.data_sync_pb2.StreamingDataCaptureUploadResponse
   viam.gen.app.datasync.v1.data_sync_pb2.SensorMetadata
   viam.gen.app.datasync.v1.data_sync_pb2.SensorData
   viam.gen.app.datasync.v1.data_sync_pb2.FileData
   viam.gen.app.datasync.v1.data_sync_pb2.UploadMetadata
   viam.gen.app.datasync.v1.data_sync_pb2.CaptureInterval
   viam.gen.app.datasync.v1.data_sync_pb2.DataCaptureMetadata
   viam.gen.app.datasync.v1.data_sync_pb2.DataCaptureUploadMetadata


Module Contents
---------------

.. py:data:: DESCRIPTOR
   :type:  google.protobuf.descriptor.FileDescriptor

.. py:class:: MimeType

   Bases: :py:obj:`_MimeType`


.. py:data:: MIME_TYPE_UNSPECIFIED
   :type:  MimeType

.. py:data:: MIME_TYPE_IMAGE_JPEG
   :type:  MimeType

.. py:data:: MIME_TYPE_IMAGE_PNG
   :type:  MimeType

.. py:data:: MIME_TYPE_APPLICATION_PCD
   :type:  MimeType

.. py:data:: global___MimeType

.. py:class:: DataType

   Bases: :py:obj:`_DataType`


   DataType specifies the type of data uploaded.


.. py:data:: DATA_TYPE_UNSPECIFIED
   :type:  DataType

.. py:data:: DATA_TYPE_BINARY_SENSOR
   :type:  DataType

.. py:data:: DATA_TYPE_TABULAR_SENSOR
   :type:  DataType

.. py:data:: DATA_TYPE_FILE
   :type:  DataType

.. py:data:: global___DataType

.. py:class:: DataCaptureUploadRequest(*, metadata: global___UploadMetadata | None = ..., sensor_contents: collections.abc.Iterable[global___SensorData] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   DataCaptureUploadRequest requests to upload the contents and metadata for tabular data.


   .. py:property:: metadata
      :type: global___UploadMetadata



   .. py:property:: sensor_contents
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SensorData]



   .. py:method:: HasField(field_name: Literal['metadata', b'metadata']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___DataCaptureUploadRequest

.. py:class:: DataCaptureUploadResponse(*, file_id: str = ..., binary_data_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   DataCaptureUploadResponse returns the file id of the uploaded contents and metadata for tabular data.


   .. py:attribute:: file_id
      :type:  str


   .. py:attribute:: binary_data_id
      :type:  str


.. py:data:: global___DataCaptureUploadResponse

.. py:class:: FileUploadRequest(*, metadata: global___UploadMetadata | None = ..., file_contents: global___FileData | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   FileUploadRequest requests to upload the contents and metadata for binary (image + file) data.
   The first packet must be the UploadMetadata associated with the binary data.


   .. py:property:: metadata
      :type: global___UploadMetadata



   .. py:property:: file_contents
      :type: global___FileData



   .. py:method:: HasField(field_name: Literal['file_contents', b'file_contents', 'metadata', b'metadata', 'upload_packet', b'upload_packet']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['upload_packet', b'upload_packet']) -> Literal['metadata', 'file_contents'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:data:: global___FileUploadRequest

.. py:class:: FileUploadResponse(*, file_id: str = ..., binary_data_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   FileUploadResponse returns the file id of the uploaded contents and metadata for binary (image + file) data.


   .. py:attribute:: file_id
      :type:  str


   .. py:attribute:: binary_data_id
      :type:  str


.. py:data:: global___FileUploadResponse

.. py:class:: StreamingDataCaptureUploadRequest(*, metadata: global___DataCaptureUploadMetadata | None = ..., data: bytes = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   StreamingDataCaptureUploadRequest requests to upload the contents and metadata for streaming binary (image + file) data.
   The first packet must be the DataCaptureUploadMetadata associated with the data.


   .. py:attribute:: data
      :type:  bytes


   .. py:property:: metadata
      :type: global___DataCaptureUploadMetadata



   .. py:method:: HasField(field_name: Literal['data', b'data', 'metadata', b'metadata', 'upload_packet', b'upload_packet']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['upload_packet', b'upload_packet']) -> Literal['metadata', 'data'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:data:: global___StreamingDataCaptureUploadRequest

.. py:class:: StreamingDataCaptureUploadResponse(*, file_id: str = ..., binary_data_id: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   StreamingDataCaptureUploadResponse returns the file id of the uploaded contents and metadata for streaming binary (image + file) data.


   .. py:attribute:: file_id
      :type:  str


   .. py:attribute:: binary_data_id
      :type:  str


.. py:data:: global___StreamingDataCaptureUploadResponse

.. py:class:: SensorMetadata(*, time_requested: google.protobuf.timestamp_pb2.Timestamp | None = ..., time_received: google.protobuf.timestamp_pb2.Timestamp | None = ..., mime_type: global___MimeType = ..., annotations: viam.gen.app.data.v1.data_pb2.Annotations | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   SensorMetadata contains the time the sensor data was requested and was
   received.


   .. py:attribute:: mime_type
      :type:  global___MimeType


   .. py:property:: time_requested
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: time_received
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: annotations
      :type: viam.gen.app.data.v1.data_pb2.Annotations



   .. py:method:: HasField(field_name: Literal['annotations', b'annotations', 'time_received', b'time_received', 'time_requested', b'time_requested']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___SensorMetadata

.. py:class:: SensorData(*, metadata: global___SensorMetadata | None = ..., struct: google.protobuf.struct_pb2.Struct | None = ..., binary: bytes = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   SensorData contains the contents and metadata for tabular data.


   .. py:attribute:: binary
      :type:  bytes


   .. py:property:: metadata
      :type: global___SensorMetadata



   .. py:property:: struct
      :type: google.protobuf.struct_pb2.Struct



   .. py:method:: HasField(field_name: Literal['binary', b'binary', 'data', b'data', 'metadata', b'metadata', 'struct', b'struct']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



   .. py:method:: WhichOneof(oneof_group: Literal['data', b'data']) -> Literal['struct', 'binary'] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:data:: global___SensorData

.. py:class:: FileData(*, data: bytes = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   FileData contains the contents of binary (image + file) data.


   .. py:attribute:: data
      :type:  bytes


.. py:data:: global___FileData

.. py:class:: UploadMetadata(*, part_id: str = ..., component_type: str = ..., component_name: str = ..., method_name: str = ..., type: global___DataType = ..., file_name: str = ..., method_parameters: collections.abc.Mapping[str, google.protobuf.any_pb2.Any] | None = ..., file_extension: str = ..., tags: collections.abc.Iterable[str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   UploadMetadata contains the metadata for binary (image + file) data.


   .. py:class:: MethodParametersEntry(*, key: str = ..., value: google.protobuf.any_pb2.Any | None = ...)

      Bases: :py:obj:`google.protobuf.message.Message`


      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.


      .. py:attribute:: key
         :type:  str


      .. py:property:: value
         :type: google.protobuf.any_pb2.Any



      .. py:method:: HasField(field_name: Literal['value', b'value']) -> bool

         Checks if a certain field is set for the message.

         For a oneof group, checks if any field inside is set. Note that if the
         field_name is not defined in the message descriptor, :exc:`ValueError` will
         be raised.

         :param field_name: The name of the field to check for presence.
         :type field_name: str

         :returns: Whether a value has been set for the named field.
         :rtype: bool

         :raises ValueError: if the `field_name` is not a member of this message.




   .. py:attribute:: part_id
      :type:  str


   .. py:attribute:: component_type
      :type:  str


   .. py:attribute:: component_name
      :type:  str


   .. py:attribute:: method_name
      :type:  str


   .. py:attribute:: type
      :type:  global___DataType


   .. py:attribute:: file_name
      :type:  str


   .. py:attribute:: file_extension
      :type:  str


   .. py:property:: method_parameters
      :type: google.protobuf.internal.containers.MessageMap[str, google.protobuf.any_pb2.Any]



   .. py:property:: tags
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



.. py:data:: global___UploadMetadata

.. py:class:: CaptureInterval(*, start: google.protobuf.timestamp_pb2.Timestamp | None = ..., end: google.protobuf.timestamp_pb2.Timestamp | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   CaptureInterval specifies the start and end times of the data capture.


   .. py:property:: start
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:property:: end
      :type: google.protobuf.timestamp_pb2.Timestamp



   .. py:method:: HasField(field_name: Literal['end', b'end', 'start', b'start']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___CaptureInterval

.. py:class:: DataCaptureMetadata(*, component_type: str = ..., component_name: str = ..., method_name: str = ..., type: global___DataType = ..., method_parameters: collections.abc.Mapping[str, google.protobuf.any_pb2.Any] | None = ..., file_extension: str = ..., tags: collections.abc.Iterable[str] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   DataCaptureMetadata contains the metadata for data captured by collectors.


   .. py:class:: MethodParametersEntry(*, key: str = ..., value: google.protobuf.any_pb2.Any | None = ...)

      Bases: :py:obj:`google.protobuf.message.Message`


      Abstract base class for protocol messages.

      Protocol message classes are almost always generated by the protocol
      compiler.  These generated types subclass Message and implement the methods
      shown below.


      .. py:attribute:: key
         :type:  str


      .. py:property:: value
         :type: google.protobuf.any_pb2.Any



      .. py:method:: HasField(field_name: Literal['value', b'value']) -> bool

         Checks if a certain field is set for the message.

         For a oneof group, checks if any field inside is set. Note that if the
         field_name is not defined in the message descriptor, :exc:`ValueError` will
         be raised.

         :param field_name: The name of the field to check for presence.
         :type field_name: str

         :returns: Whether a value has been set for the named field.
         :rtype: bool

         :raises ValueError: if the `field_name` is not a member of this message.




   .. py:attribute:: component_type
      :type:  str


   .. py:attribute:: component_name
      :type:  str


   .. py:attribute:: method_name
      :type:  str


   .. py:attribute:: type
      :type:  global___DataType


   .. py:attribute:: file_extension
      :type:  str


   .. py:property:: method_parameters
      :type: google.protobuf.internal.containers.MessageMap[str, google.protobuf.any_pb2.Any]



   .. py:property:: tags
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



.. py:data:: global___DataCaptureMetadata

.. py:class:: DataCaptureUploadMetadata(*, upload_metadata: global___UploadMetadata | None = ..., sensor_metadata: global___SensorMetadata | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   DataCaptureUploadMetadata contains the metadata for streaming binary (image + file) data.


   .. py:property:: upload_metadata
      :type: global___UploadMetadata



   .. py:property:: sensor_metadata
      :type: global___SensorMetadata



   .. py:method:: HasField(field_name: Literal['sensor_metadata', b'sensor_metadata', 'upload_metadata', b'upload_metadata']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___DataCaptureUploadMetadata

