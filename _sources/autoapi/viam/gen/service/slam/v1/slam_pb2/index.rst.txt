:py:mod:`viam.gen.service.slam.v1.slam_pb2`
===========================================

.. py:module:: viam.gen.service.slam.v1.slam_pb2

.. autoapi-nested-parse::

   @generated by mypy-protobuf.  Do not edit manually!
   isort:skip_file



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.gen.service.slam.v1.slam_pb2.MappingMode
   viam.gen.service.slam.v1.slam_pb2.GetPositionRequest
   viam.gen.service.slam.v1.slam_pb2.GetPositionResponse
   viam.gen.service.slam.v1.slam_pb2.GetPointCloudMapRequest
   viam.gen.service.slam.v1.slam_pb2.GetPointCloudMapResponse
   viam.gen.service.slam.v1.slam_pb2.GetInternalStateRequest
   viam.gen.service.slam.v1.slam_pb2.GetInternalStateResponse
   viam.gen.service.slam.v1.slam_pb2.GetLatestMapInfoRequest
   viam.gen.service.slam.v1.slam_pb2.GetLatestMapInfoResponse
   viam.gen.service.slam.v1.slam_pb2.GetPropertiesRequest
   viam.gen.service.slam.v1.slam_pb2.GetPropertiesResponse




Attributes
~~~~~~~~~~

.. autoapisummary::

   viam.gen.service.slam.v1.slam_pb2.DESCRIPTOR
   viam.gen.service.slam.v1.slam_pb2.MAPPING_MODE_UNSPECIFIED
   viam.gen.service.slam.v1.slam_pb2.MAPPING_MODE_CREATE_NEW_MAP
   viam.gen.service.slam.v1.slam_pb2.MAPPING_MODE_LOCALIZE_ONLY
   viam.gen.service.slam.v1.slam_pb2.MAPPING_MODE_UPDATE_EXISTING_MAP
   viam.gen.service.slam.v1.slam_pb2.global___MappingMode
   viam.gen.service.slam.v1.slam_pb2.global___GetPositionRequest
   viam.gen.service.slam.v1.slam_pb2.global___GetPositionResponse
   viam.gen.service.slam.v1.slam_pb2.global___GetPointCloudMapRequest
   viam.gen.service.slam.v1.slam_pb2.global___GetPointCloudMapResponse
   viam.gen.service.slam.v1.slam_pb2.global___GetInternalStateRequest
   viam.gen.service.slam.v1.slam_pb2.global___GetInternalStateResponse
   viam.gen.service.slam.v1.slam_pb2.global___GetLatestMapInfoRequest
   viam.gen.service.slam.v1.slam_pb2.global___GetLatestMapInfoResponse
   viam.gen.service.slam.v1.slam_pb2.global___GetPropertiesRequest
   viam.gen.service.slam.v1.slam_pb2.global___GetPropertiesResponse


.. py:data:: DESCRIPTOR
   :type: google.protobuf.descriptor.FileDescriptor

   

.. py:class:: MappingMode


   Bases: :py:obj:`_MappingMode`

   MappingMode represnts the various form of mapping and localizing SLAM can perform.
   These include, creating a new map, localizing on an existiing map and updating an
   exisiting map.


.. py:data:: MAPPING_MODE_UNSPECIFIED
   :type: MappingMode

   

.. py:data:: MAPPING_MODE_CREATE_NEW_MAP
   :type: MappingMode

   

.. py:data:: MAPPING_MODE_LOCALIZE_ONLY
   :type: MappingMode

   

.. py:data:: MAPPING_MODE_UPDATE_EXISTING_MAP
   :type: MappingMode

   

.. py:data:: global___MappingMode

   

.. py:class:: GetPositionRequest(*, name: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of slam service


.. py:data:: global___GetPositionRequest

   

.. py:class:: GetPositionResponse(*, pose: viam.gen.common.v1.common_pb2.Pose | None = ..., component_reference: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: pose
      :type: viam.gen.common.v1.common_pb2.Pose

      Current position of the specified component in the SLAM Map

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional information in the response

   .. py:attribute:: component_reference
      :type: str

      This is usually the name of the camera that is in the SLAM config

   .. py:method:: HasField(field_name: Literal[extra, b'extra', pose, b'pose']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___GetPositionResponse

   

.. py:class:: GetPointCloudMapRequest(*, name: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of slam service


.. py:data:: global___GetPointCloudMapRequest

   

.. py:class:: GetPointCloudMapResponse(*, point_cloud_pcd_chunk: bytes = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: point_cloud_pcd_chunk
      :type: bytes

      One chunk of the PointCloud.
      For a given GetPointCloudMap request, concatenating all
      GetPointCloudMapResponse.point_cloud_pcd_chunk values in the
      order received result in the complete pointcloud in standard PCD
      format where XY is the ground plane and positive Z is up, following
      the Right Hand Rule.

      Read more about the pointcloud format here:
      https://pointclouds.org/documentation/tutorials/pcd_file_format.html

      Viam expects pointcloud data with fields "x y z" or "x y z rgb", and for
      this to be specified in the pointcloud header in the FIELDS entry. If color
      data is included in the pointcloud, Viam's services assume that the color
      value encodes a confidence score for that data point. Viam expects the
      confidence score to be encoded in the blue parameter of the RGB value, on a
      scale from 1-100.

      Pointclouds are little endian encoded.


.. py:data:: global___GetPointCloudMapResponse

   

.. py:class:: GetInternalStateRequest(*, name: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of slam service


.. py:data:: global___GetInternalStateRequest

   

.. py:class:: GetInternalStateResponse(*, internal_state_chunk: bytes = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: internal_state_chunk
      :type: bytes

      Chunk of the internal state of the SLAM algorithm required to continue
      mapping/localization


.. py:data:: global___GetInternalStateResponse

   

.. py:class:: GetLatestMapInfoRequest(*, name: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of the SLAM algo


.. py:data:: global___GetLatestMapInfoRequest

   

.. py:class:: GetLatestMapInfoResponse(*, last_map_update: google.protobuf.timestamp_pb2.Timestamp | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: last_map_update
      :type: google.protobuf.timestamp_pb2.Timestamp


   .. py:method:: HasField(field_name: Literal[last_map_update, b'last_map_update']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___GetLatestMapInfoResponse

   

.. py:class:: GetPropertiesRequest(*, name: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      Name of the slam service


.. py:data:: global___GetPropertiesRequest

   

.. py:class:: GetPropertiesResponse(*, cloud_slam: bool = ..., mapping_mode: global___MappingMode = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Returns properties information for the named slam service

   .. py:attribute:: cloud_slam
      :type: bool

      

   .. py:attribute:: mapping_mode
      :type: global___MappingMode

      


.. py:data:: global___GetPropertiesResponse

   

