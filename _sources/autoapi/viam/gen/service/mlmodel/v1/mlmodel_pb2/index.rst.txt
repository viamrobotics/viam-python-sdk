:py:mod:`viam.gen.service.mlmodel.v1.mlmodel_pb2`
=================================================

.. py:module:: viam.gen.service.mlmodel.v1.mlmodel_pb2

.. autoapi-nested-parse::

   @generated by mypy-protobuf.  Do not edit manually!
   isort:skip_file



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.gen.service.mlmodel.v1.mlmodel_pb2.LabelType
   viam.gen.service.mlmodel.v1.mlmodel_pb2.InferRequest
   viam.gen.service.mlmodel.v1.mlmodel_pb2.InferResponse
   viam.gen.service.mlmodel.v1.mlmodel_pb2.MetadataRequest
   viam.gen.service.mlmodel.v1.mlmodel_pb2.MetadataResponse
   viam.gen.service.mlmodel.v1.mlmodel_pb2.Metadata
   viam.gen.service.mlmodel.v1.mlmodel_pb2.TensorInfo
   viam.gen.service.mlmodel.v1.mlmodel_pb2.File




Attributes
~~~~~~~~~~

.. autoapisummary::

   viam.gen.service.mlmodel.v1.mlmodel_pb2.DESCRIPTOR
   viam.gen.service.mlmodel.v1.mlmodel_pb2.LABEL_TYPE_UNSPECIFIED
   viam.gen.service.mlmodel.v1.mlmodel_pb2.LABEL_TYPE_TENSOR_VALUE
   viam.gen.service.mlmodel.v1.mlmodel_pb2.LABEL_TYPE_TENSOR_AXIS
   viam.gen.service.mlmodel.v1.mlmodel_pb2.global___LabelType
   viam.gen.service.mlmodel.v1.mlmodel_pb2.global___InferRequest
   viam.gen.service.mlmodel.v1.mlmodel_pb2.global___InferResponse
   viam.gen.service.mlmodel.v1.mlmodel_pb2.global___MetadataRequest
   viam.gen.service.mlmodel.v1.mlmodel_pb2.global___MetadataResponse
   viam.gen.service.mlmodel.v1.mlmodel_pb2.global___Metadata
   viam.gen.service.mlmodel.v1.mlmodel_pb2.global___TensorInfo
   viam.gen.service.mlmodel.v1.mlmodel_pb2.global___File


.. py:data:: DESCRIPTOR
   :type: google.protobuf.descriptor.FileDescriptor

   

.. py:class:: LabelType




.. py:data:: LABEL_TYPE_UNSPECIFIED
   :type: LabelType

   

.. py:data:: LABEL_TYPE_TENSOR_VALUE
   :type: LabelType

   the value of the arrays/tensor is the label index

.. py:data:: LABEL_TYPE_TENSOR_AXIS
   :type: LabelType

   the position of the tensor value in the axis is the label index

.. py:data:: global___LabelType

   

.. py:class:: InferRequest(*, name: str = ..., input_data: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: input_data
      :type: google.protobuf.struct_pb2.Struct

      this is a struct of input arrays/tensors as specified in the metadata

   .. py:attribute:: name
      :type: str

      name of the model service

   .. py:method:: HasField(field_name: Literal[input_data, b'input_data']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___InferRequest

   

.. py:class:: InferResponse(*, output_data: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: output_data
      :type: google.protobuf.struct_pb2.Struct

      this is a struct of output arrays/tensors as specified in the metadata

   .. py:method:: HasField(field_name: Literal[output_data, b'output_data']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___InferResponse

   

.. py:class:: MetadataRequest(*, name: str = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      name of the model service


.. py:data:: global___MetadataRequest

   

.. py:class:: MetadataResponse(*, metadata: global___Metadata | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: metadata
      :type: global___Metadata

      this is the metadata associated with the ML model

   .. py:method:: HasField(field_name: Literal[metadata, b'metadata']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___MetadataResponse

   

.. py:class:: Metadata(*, name: str = ..., type: str = ..., description: str = ..., input_info: collections.abc.Iterable[global___TensorInfo] | None = ..., output_info: collections.abc.Iterable[global___TensorInfo] | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: input_info
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TensorInfo]

      the necessary input arrays/tensors for an inference, order matters

   .. py:property:: output_info
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TensorInfo]

      the output arrays/tensors of the model, order matters

   .. py:attribute:: name
      :type: str

      name of the model

   .. py:attribute:: type
      :type: str

      type of model e.g. object_detector, text_classifier

   .. py:attribute:: description
      :type: str

      description of the model


.. py:data:: global___Metadata

   

.. py:class:: TensorInfo(*, name: str = ..., description: str = ..., data_type: str = ..., shape: collections.abc.Iterable[builtins.int] | None = ..., associated_files: collections.abc.Iterable[global___File] | None = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: shape
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[int]

      shape of the array/tensor (-1 for unknown)

   .. py:property:: associated_files
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___File]

      files associated with the array/tensor, like for category labels

   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      anything else you want to say

   .. py:attribute:: name
      :type: str

      name of the data in the array/tensor

   .. py:attribute:: description
      :type: str

      description of the data in the array/tensor

   .. py:attribute:: data_type
      :type: str

      data type of the array/tensor, e.g. float32, float64, uint8

   .. py:method:: HasField(field_name: Literal[extra, b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:data:: global___TensorInfo

   

.. py:class:: File(*, name: str = ..., description: str = ..., label_type: global___LabelType = ...)



   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: name
      :type: str

      name of the file, with file extension

   .. py:attribute:: description
      :type: str

      description of what the file contains

   .. py:attribute:: label_type
      :type: global___LabelType

      How to associate the arrays/tensors to the labels in the file


.. py:data:: global___File

   

