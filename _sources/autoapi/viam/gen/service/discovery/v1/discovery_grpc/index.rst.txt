viam.gen.service.discovery.v1.discovery_grpc
============================================

.. py:module:: viam.gen.service.discovery.v1.discovery_grpc


Classes
-------

.. autoapisummary::

   viam.gen.service.discovery.v1.discovery_grpc.DiscoveryServiceBase
   viam.gen.service.discovery.v1.discovery_grpc.UnimplementedDiscoveryServiceBase
   viam.gen.service.discovery.v1.discovery_grpc.DiscoveryServiceStub


Module Contents
---------------

.. py:class:: DiscoveryServiceBase

   Bases: :py:obj:`abc.ABC`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: DiscoverResources(stream: grpclib.server.Stream[service.discovery.v1.discovery_pb2.DiscoverResourcesRequest, service.discovery.v1.discovery_pb2.DiscoverResourcesResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :abstractmethod:

      :async:



   .. py:method:: __mapping__() -> Dict[str, grpclib.const.Handler]


.. py:class:: UnimplementedDiscoveryServiceBase

   Bases: :py:obj:`DiscoveryServiceBase`


   Helper class that provides a standard way to create an ABC using
   inheritance.


   .. py:method:: DiscoverResources(stream: grpclib.server.Stream[service.discovery.v1.discovery_pb2.DiscoverResourcesRequest, service.discovery.v1.discovery_pb2.DiscoverResourcesResponse]) -> None
      :async:



   .. py:method:: DoCommand(stream: grpclib.server.Stream[common.v1.common_pb2.DoCommandRequest, common.v1.common_pb2.DoCommandResponse]) -> None
      :async:



.. py:class:: DiscoveryServiceStub(channel: grpclib.client.Channel)

   .. py:attribute:: DiscoverResources


   .. py:attribute:: DoCommand


