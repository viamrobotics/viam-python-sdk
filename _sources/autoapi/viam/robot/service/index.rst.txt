:py:mod:`viam.robot.service`
============================

.. py:module:: viam.robot.service


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.robot.service.RobotService




Attributes
~~~~~~~~~~

.. autoapisummary::

   viam.robot.service.LOGGER


.. py:data:: LOGGER

   

.. py:class:: RobotService(manager: viam.resource.manager.ResourceManager)


   Bases: :py:obj:`viam.proto.robot.UnimplementedRobotServiceBase`, :py:obj:`viam.resource.rpc_service_base.ResourceRPCServiceBase`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: ResourceNames(stream: grpclib.server.Stream[viam.proto.robot.ResourceNamesRequest, viam.proto.robot.ResourceNamesResponse]) -> None
      :async:


   .. py:method:: GetStatus(stream: grpclib.server.Stream[viam.proto.robot.GetStatusRequest, viam.proto.robot.GetStatusResponse]) -> None
      :async:


   .. py:method:: StreamStatus(stream: grpclib.server.Stream[viam.proto.robot.StreamStatusRequest, viam.proto.robot.StreamStatusResponse]) -> None
      :async:


   .. py:method:: StopAll(stream: grpclib.server.Stream[viam.proto.robot.StopAllRequest, viam.proto.robot.StopAllResponse]) -> None
      :async:



