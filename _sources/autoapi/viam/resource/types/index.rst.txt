viam.resource.types
===================

.. py:module:: viam.resource.types


Attributes
----------

.. autoapisummary::

   viam.resource.types.RESOURCE_NAMESPACE_RDK
   viam.resource.types.RESOURCE_TYPE_COMPONENT
   viam.resource.types.RESOURCE_TYPE_SERVICE
   viam.resource.types.ResourceCreator
   viam.resource.types.Validator


Classes
-------

.. autoapisummary::

   viam.resource.types.ComponentConfig
   viam.resource.types.GetGeometriesRequest
   viam.resource.types.GetGeometriesResponse
   viam.resource.types.ResourceName
   viam.resource.types.Subtype
   viam.resource.types.ModelFamily
   viam.resource.types.Model
   viam.resource.types.SupportsGetGeometries


Functions
---------

.. autoapisummary::

   viam.resource.types.resource_name_from_string


Module Contents
---------------

.. py:class:: ComponentConfig(*, name: str = ..., namespace: str = ..., type: str = ..., model: str = ..., frame: global___Frame | None = ..., depends_on: collections.abc.Iterable[str] | None = ..., service_configs: collections.abc.Iterable[global___ResourceLevelServiceConfig] | None = ..., attributes: google.protobuf.struct_pb2.Struct | None = ..., api: str = ..., log_configuration: global___LogConfiguration | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str


   .. py:attribute:: namespace
      :type:  str

      deprecated; use api


   .. py:attribute:: type
      :type:  str

      deprecated; use api


   .. py:attribute:: model
      :type:  str


   .. py:attribute:: api
      :type:  str


   .. py:property:: frame
      :type: global___Frame



   .. py:property:: depends_on
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[str]



   .. py:property:: service_configs
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourceLevelServiceConfig]



   .. py:property:: attributes
      :type: google.protobuf.struct_pb2.Struct



   .. py:property:: log_configuration
      :type: global___LogConfiguration



   .. py:method:: HasField(field_name: Literal['attributes', b'attributes', 'frame', b'frame', 'log_configuration', b'log_configuration']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetGeometriesRequest(*, name: str = ..., extra: google.protobuf.struct_pb2.Struct | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: name
      :type:  str

      The component name


   .. py:property:: extra
      :type: google.protobuf.struct_pb2.Struct

      Additional arguments to the method


   .. py:method:: HasField(field_name: Literal['extra', b'extra']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.



.. py:class:: GetGeometriesResponse(*, geometries: collections.abc.Iterable[global___Geometry] | None = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:property:: geometries
      :type: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Geometry]

      All geometries associated with the component, in their current configuration, in the frame of that component.


.. py:class:: ResourceName(*, namespace: str = ..., type: str = ..., subtype: str = ..., name: str = ...)

   Bases: :py:obj:`google.protobuf.message.Message`


   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.


   .. py:attribute:: namespace
      :type:  str


   .. py:attribute:: type
      :type:  str


   .. py:attribute:: subtype
      :type:  str


   .. py:attribute:: name
      :type:  str


.. py:data:: RESOURCE_NAMESPACE_RDK
   :value: 'rdk'


.. py:data:: RESOURCE_TYPE_COMPONENT
   :value: 'component'


.. py:data:: RESOURCE_TYPE_SERVICE
   :value: 'service'


.. py:class:: Subtype(namespace: str, resource_type: str, resource_subtype: str)

   Represents a known component/service (resource) API


   .. py:attribute:: namespace
      :type:  str

      The namespace of the resource


   .. py:attribute:: resource_type
      :type:  str

      The type of the resource, e.g. `component` or `service`


   .. py:attribute:: resource_subtype
      :type:  str

      The subtype of the resource e.g. `servo`, `arm`, `vision`


   .. py:method:: __str__() -> str

      Return str(self).



   .. py:method:: __repr__() -> str

      Return repr(self).



   .. py:method:: __hash__() -> int

      Return hash(self).



   .. py:method:: __eq__(other: object) -> bool

      Return self==value.



   .. py:method:: from_resource_name(resource_name: viam.proto.common.ResourceName) -> typing_extensions.Self
      :classmethod:


      Convert a ```ResourceName``` into a ```Subtype```

      :param resource_name: The ResourceName to convert
      :type resource_name: viam.proto.common.ResourceName

      :returns: A new Subtype
      :rtype: Self



   .. py:method:: from_string(string: str) -> typing_extensions.Self
      :classmethod:


      Create a ```Subtype``` from its string representation (namespace:resource_type:resource_subtype)

      :param string: The Subtype as a string
      :type string: str

      :raises ValueError: Raised if the string does not represent a valid Subtype

      :returns: A new Subtype
      :rtype: Self



.. py:class:: ModelFamily(namespace: str, family: str)

   Represents a family of related models


   .. py:attribute:: namespace
      :type:  str

      The namespace of the model family


   .. py:attribute:: family
      :type:  str

      The family name


   .. py:attribute:: DEFAULT_FAMILY_NAME
      :type:  ClassVar[str]
      :value: 'builtin'



   .. py:attribute:: DEFAULT
      :type:  ClassVar[ModelFamily]


   .. py:method:: __str__() -> str

      Return str(self).



   .. py:method:: __repr__() -> str

      Return repr(self).



   .. py:method:: __hash__() -> int

      Return hash(self).



   .. py:method:: __eq__(other: object) -> bool

      Return self==value.



.. py:class:: Model(model_family: ModelFamily, name: str)

   Represents a specific model within a family of models


   .. py:attribute:: model_family
      :type:  ModelFamily

      The family to which this model belongs


   .. py:attribute:: name
      :type:  str

      The name of the model


   .. py:method:: __str__() -> str

      Return str(self).



   .. py:method:: __repr__() -> str

      Return repr(self).



   .. py:method:: __hash__() -> int

      Return hash(self).



   .. py:method:: __eq__(other: object) -> bool

      Return self==value.



   .. py:method:: from_string(model: str, *, ignore_errors=False) -> typing_extensions.Self
      :classmethod:


      Create a ```Model``` from its string representation (namespace:family:name).

      :param model: The Model as a string
      :type model: str
      :param ignore_errors: If namespace or family are not found in the string, default to empty string
                            rather than raise an exception. Defaults to False.
      :type ignore_errors: bool, optional

      :raises ValueError: Raised if the provided string is not a valid Model

      :returns: The Model
      :rtype: Self



.. py:function:: resource_name_from_string(string: str) -> viam.proto.common.ResourceName

   Create a ResourceName from its string representation (namespace:resource_type:resource_subtype/<optional_remote:>name)

   :param string: The ResourceName as a string
   :type string: str

   :raises ValueError: Raised if the provided string is not a valid ResourceName

   :returns: The new ResourceName
   :rtype: viam.proto.common.ResourceName


.. py:data:: ResourceCreator
   :type:  TypeAlias
   :value: Callable[[ComponentConfig, Mapping[ResourceName, 'ResourceBase']], 'ResourceBase']


.. py:data:: Validator
   :type:  TypeAlias
   :value: Callable[[ComponentConfig], Sequence[str]]


.. py:class:: SupportsGetGeometries

   Bases: :py:obj:`Protocol`


   The SupportsGetGeometries protocol defines the requirements for a resource to call get_geometries.


   .. py:method:: GetGeometries(request: viam.proto.common.GetGeometriesRequest, *, timeout: Optional[float] = None) -> viam.proto.common.GetGeometriesResponse
      :async:



