:py:mod:`viam.components.movement_sensor`
=========================================

.. py:module:: viam.components.movement_sensor


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   client/index.rst
   movement_sensor/index.rst
   service/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.components.movement_sensor.GeoPoint
   viam.components.movement_sensor.Orientation
   viam.components.movement_sensor.Vector3




.. py:class:: GeoPoint(*, latitude: float = ..., longitude: float = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: latitude
      :type: float

      

   .. py:attribute:: longitude
      :type: float

      


.. py:class:: Orientation(*, o_x: float = ..., o_y: float = ..., o_z: float = ..., theta: float = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: o_x
      :type: float

      x component of a vector defining axis of rotation

   .. py:attribute:: o_y
      :type: float

      y component of a vector defining axis of rotation

   .. py:attribute:: o_z
      :type: float

      z component of a vector defining axis of rotation

   .. py:attribute:: theta
      :type: float

      degrees


.. py:class:: Vector3(*, x: float = ..., y: float = ..., z: float = ...)

   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:attribute:: x
      :type: float

      

   .. py:attribute:: y
      :type: float

      

   .. py:attribute:: z
      :type: float

      


