:py:mod:`viam.components.arm.service`
=====================================

.. py:module:: viam.components.arm.service


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.components.arm.service.ArmService




.. py:class:: ArmService(manager: viam.resource.manager.ResourceManager)

   Bases: :py:obj:`viam.proto.component.arm.ArmServiceBase`, :py:obj:`viam.resource.rpc_service_base.ResourceRPCServiceBase`\ [\ :py:obj:`viam.components.arm.arm.Arm`\ ]

   gRPC Service for an Arm

   .. py:attribute:: RESOURCE_TYPE

      

   .. py:method:: GetEndPosition(stream: grpclib.server.Stream[viam.proto.component.arm.GetEndPositionRequest, viam.proto.component.arm.GetEndPositionResponse]) -> None
      :async:


   .. py:method:: MoveToPosition(stream: grpclib.server.Stream[viam.proto.component.arm.MoveToPositionRequest, viam.proto.component.arm.MoveToPositionResponse]) -> None
      :async:


   .. py:method:: GetJointPositions(stream: grpclib.server.Stream[viam.proto.component.arm.GetJointPositionsRequest, viam.proto.component.arm.GetJointPositionsResponse]) -> None
      :async:


   .. py:method:: MoveToJointPositions(stream: grpclib.server.Stream[viam.proto.component.arm.MoveToJointPositionsRequest, viam.proto.component.arm.MoveToJointPositionsResponse]) -> None
      :async:


   .. py:method:: Stop(stream: grpclib.server.Stream[viam.proto.component.arm.StopRequest, viam.proto.component.arm.StopResponse]) -> None
      :async:


   .. py:method:: IsMoving(stream: grpclib.server.Stream[viam.proto.component.arm.IsMovingRequest, viam.proto.component.arm.IsMovingResponse]) -> None
      :async:


   .. py:method:: DoCommand(stream: grpclib.server.Stream[viam.proto.common.DoCommandRequest, viam.proto.common.DoCommandResponse]) -> None
      :async:



