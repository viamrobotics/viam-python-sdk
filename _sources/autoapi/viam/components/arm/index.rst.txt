:py:mod:`viam.components.arm`
=============================

.. py:module:: viam.components.arm


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   arm/index.rst
   client/index.rst
   service/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   viam.components.arm.Geometry
   viam.components.arm.KinematicsFileFormat
   viam.components.arm.Pose
   viam.components.arm.JointPositions




.. py:class:: Geometry(*, center: global___Pose | None = ..., sphere: global___Sphere | None = ..., box: global___RectangularPrism | None = ..., capsule: global___Capsule | None = ..., label: str = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Geometry contains the dimensions of a given geometry and the pose of its center. The geometry is one of either a sphere or a box.

   .. py:property:: center
      :type: global___Pose

      Pose of a geometries center point

   .. py:property:: sphere
      :type: global___Sphere


   .. py:property:: box
      :type: global___RectangularPrism


   .. py:property:: capsule
      :type: global___Capsule


   .. py:attribute:: label
      :type: str

      Label of the geometry. If none supplied, will be an empty string.

   .. py:method:: HasField(field_name: Literal[box, b'box', capsule, b'capsule', center, b'center', geometry_type, b'geometry_type', sphere, b'sphere']) -> bool

      Checks if a certain field is set for the message.

      For a oneof group, checks if any field inside is set. Note that if the
      field_name is not defined in the message descriptor, :exc:`ValueError` will
      be raised.

      :param field_name: The name of the field to check for presence.
      :type field_name: str

      :returns: Whether a value has been set for the named field.
      :rtype: bool

      :raises ValueError: if the `field_name` is not a member of this message.


   .. py:method:: WhichOneof(oneof_group: Literal[geometry_type, b'geometry_type']) -> Literal[sphere, box, capsule] | None

      Returns the name of the field that is set inside a oneof group.

      If no field is set, returns None.

      :param oneof_group: the name of the oneof group to check.
      :type oneof_group: str

      :returns: The name of the group that is set, or None.
      :rtype: str or None

      :raises ValueError: no group with the given name exists



.. py:class:: KinematicsFileFormat


   Bases: :py:obj:`_KinematicsFileFormat`


.. py:class:: Pose(*, x: float = ..., y: float = ..., z: float = ..., o_x: float = ..., o_y: float = ..., o_z: float = ..., theta: float = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Pose is a combination of location and orientation.
   Location is expressed as distance which is represented by x , y, z coordinates. Orientation is expressed as an orientation vector which
   is represented by o_x, o_y, o_z and theta. The o_x, o_y, o_z coordinates represent the point on the cartesian unit sphere that the end of
   the arm is pointing to (with the origin as reference). That unit vector forms an axis around which theta rotates. This means that
   incrementing / decrementing theta will perform an inline rotation of the end effector.
   Theta is defined as rotation between two planes: the first being defined by the origin, the point (0,0,1), and the rx, ry, rz point, and the
   second being defined by the origin, the rx, ry, rz point and the local Z axis. Therefore, if theta is kept at zero as the north/south pole
   is circled, the Roll will correct itself to remain in-line.

   .. py:attribute:: x
      :type: float

      millimeters from the origin

   .. py:attribute:: y
      :type: float

      millimeters from the origin

   .. py:attribute:: z
      :type: float

      millimeters from the origin

   .. py:attribute:: o_x
      :type: float

      z component of a vector defining axis of rotation

   .. py:attribute:: o_y
      :type: float

      x component of a vector defining axis of rotation

   .. py:attribute:: o_z
      :type: float

      y component of a vector defining axis of rotation

   .. py:attribute:: theta
      :type: float

      degrees


.. py:class:: JointPositions(*, values: collections.abc.Iterable[float] | None = ...)


   Bases: :py:obj:`google.protobuf.message.Message`

   Abstract base class for protocol messages.

   Protocol message classes are almost always generated by the protocol
   compiler.  These generated types subclass Message and implement the methods
   shown below.

   .. py:property:: values
      :type: google.protobuf.internal.containers.RepeatedScalarFieldContainer[float]

      A list of joint positions. Rotations values are in degrees, translational values in mm.
      The numbers are ordered spatially from the base toward the end effector
      This is used in GetJointPositionsResponse and MoveToJointPositionsRequest


