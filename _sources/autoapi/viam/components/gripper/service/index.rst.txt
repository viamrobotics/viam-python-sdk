viam.components.gripper.service
===============================

.. py:module:: viam.components.gripper.service


Classes
-------

.. autoapisummary::

   viam.components.gripper.service.GripperRPCService


Module Contents
---------------

.. py:class:: GripperRPCService(manager: viam.resource.manager.ResourceManager)

   Bases: :py:obj:`viam.proto.component.gripper.GripperServiceBase`, :py:obj:`viam.resource.rpc_service_base.ResourceRPCServiceBase`\ [\ :py:obj:`viam.components.gripper.gripper.Gripper`\ ]


   gRPC Service for a Gripper


   .. py:attribute:: RESOURCE_TYPE


   .. py:method:: Open(stream: grpclib.server.Stream[viam.proto.component.gripper.OpenRequest, viam.proto.component.gripper.OpenResponse]) -> None
      :async:



   .. py:method:: Grab(stream: grpclib.server.Stream[viam.proto.component.gripper.GrabRequest, viam.proto.component.gripper.GrabResponse]) -> None
      :async:



   .. py:method:: Stop(stream: grpclib.server.Stream[viam.proto.component.gripper.StopRequest, viam.proto.component.gripper.StopResponse]) -> None
      :async:



   .. py:method:: IsMoving(stream: grpclib.server.Stream[viam.proto.component.gripper.IsMovingRequest, viam.proto.component.gripper.IsMovingResponse]) -> None
      :async:



   .. py:method:: DoCommand(stream: grpclib.server.Stream[viam.proto.common.DoCommandRequest, viam.proto.common.DoCommandResponse]) -> None
      :async:



   .. py:method:: GetGeometries(stream: grpclib.server.Stream[viam.proto.common.GetGeometriesRequest, viam.proto.common.GetGeometriesResponse]) -> None
      :async:



   .. py:method:: GetKinematics(stream: grpclib.server.Stream[viam.proto.common.GetKinematicsRequest, viam.proto.common.GetKinematicsResponse]) -> None
      :async:



