:py:mod:`viam.components.resource_manager`
==========================================

.. py:module:: viam.components.resource_manager


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.components.resource_manager.ResourceManager




Attributes
~~~~~~~~~~

.. autoapisummary::

   viam.components.resource_manager.ResourceType


.. py:data:: ResourceType

   

.. py:class:: ResourceManager(components: List[viam.components.component_base.ComponentBase] = [])

   Registry containing all components registered to this server.

   .. py:attribute:: components
      :type: Dict[viam.proto.common.ResourceName, viam.components.component_base.ComponentBase]

      

   .. py:method:: register(component: viam.components.component_base.ComponentBase)

      Register a new component with the registry.
      Components may not have the same name.
      If a component is remote and the short name is unique, save a short name version.

      :raises DuplicateComponentError: Error if attempting to register component
          with the name of an existing component

      :param component: The component to register
      :type component: ComponentBase


   .. py:method:: get_component(of_type: Type[ResourceType], name: viam.proto.common.ResourceName) -> ResourceType

      Return a component from the registry.
      If a unique short name version is given, return a remote component with the name.

      :param of_type: The type of the component
      :type of_type: Type[ResourceType]
      :param name: The name of the component
      :type name: str

      :raises ComponentNotFoundError: Error if component with the given type
          and name does not exist in the registry

      :returns: The component
      :rtype: ResourceType


   .. py:method:: remove_component(name: viam.proto.common.ResourceName)

      Remove the component with the specified ```ResourceName```.

      :param name: The ResourceName of the component
      :type name: ResourceName



