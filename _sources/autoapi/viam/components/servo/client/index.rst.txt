:py:mod:`viam.components.servo.client`
======================================

.. py:module:: viam.components.servo.client


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   viam.components.servo.client.ServoClient




.. py:class:: ServoClient(name: str, channel: grpclib.client.Channel)



   gRPC client for the Servo component.

   .. py:method:: get_position(*, extra: Optional[Mapping[str, Any]] = None, timeout: Optional[float] = None) -> int
      :async:

      Get the current angle (degrees) of the servo.

      :returns: The current angle of the servo in degrees.
      :rtype: int


   .. py:method:: move(angle: int, *, extra: Optional[Mapping[str, Any]] = None, timeout: Optional[float] = None)
      :async:

      Move the servo to the provided angle.

      :param angle: The desired angle of the servo in degrees.
      :type angle: int


   .. py:method:: stop(*, extra: Optional[Mapping[str, Any]] = None, timeout: Optional[float] = None)
      :async:

      Stop the servo. It is assumed that the servo stops immediately.


   .. py:method:: is_moving(*, extra: Optional[Dict[str, Any]] = None, timeout: Optional[float] = None) -> bool
      :async:

      Get if the servo is currently moving.

      :returns: Whether the servo is moving.
      :rtype: bool


   .. py:method:: do_command(command: Mapping[str, viam.utils.ValueTypes], *, timeout: Optional[float] = None) -> Mapping[str, viam.utils.ValueTypes]
      :async:

      Send/Receive arbitrary commands

      :param command: The command to execute
      :type command: Mapping[str, ValueTypes]

      :raises NotImplementedError: Raised if the component does not support arbitrary commands

      :returns: Result of the executed command
      :rtype: Mapping[str, ValueTypes]



