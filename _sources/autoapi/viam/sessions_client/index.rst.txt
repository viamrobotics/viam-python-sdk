viam.sessions_client
====================

.. py:module:: viam.sessions_client


Attributes
----------

.. autoapisummary::

   viam.sessions_client.LOGGER
   viam.sessions_client.SESSION_METADATA_KEY


Classes
-------

.. autoapisummary::

   viam.sessions_client.SessionsClient


Module Contents
---------------

.. py:data:: LOGGER

.. py:data:: SESSION_METADATA_KEY
   :value: 'viam-sid'


.. py:class:: SessionsClient(channel: grpclib.client.Channel, direct_dial_address: str, dial_options: Optional[viam.rpc.dial.DialOptions], *, disabled: bool = False, robot_addr: Optional[str] = None)

   A Session allows a client to express that it is actively connected and
   supports stopping actuating components when it's not.


   .. py:attribute:: channel
      :type:  grpclib.client.Channel


   .. py:attribute:: client
      :type:  viam.proto.robot.RobotServiceStub


   .. py:method:: reset()


   .. py:property:: metadata
      :type: grpclib.metadata._MetadataLike



