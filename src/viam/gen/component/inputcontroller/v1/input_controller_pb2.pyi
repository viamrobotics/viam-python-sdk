"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import sys
if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class GetControlsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONTROLLER_FIELD_NUMBER: builtins.int
    EXTRA_FIELD_NUMBER: builtins.int
    controller: builtins.str
    'Name of an input controller'

    @property
    def extra(self) -> google.protobuf.struct_pb2.Struct:
        """Additional arguments to the method"""

    def __init__(self, *, controller: builtins.str=..., extra: google.protobuf.struct_pb2.Struct | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['extra', b'extra']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['controller', b'controller', 'extra', b'extra']) -> None:
        ...
global___GetControlsRequest = GetControlsRequest

@typing_extensions.final
class GetControlsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONTROLS_FIELD_NUMBER: builtins.int

    @property
    def controls(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Returns a list of all the controls (buttons and axes) that are
        available to a given Input Controller
        """

    def __init__(self, *, controls: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['controls', b'controls']) -> None:
        ...
global___GetControlsResponse = GetControlsResponse

@typing_extensions.final
class GetEventsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONTROLLER_FIELD_NUMBER: builtins.int
    EXTRA_FIELD_NUMBER: builtins.int
    controller: builtins.str
    'Name of an input controller'

    @property
    def extra(self) -> google.protobuf.struct_pb2.Struct:
        """Additional arguments to the method"""

    def __init__(self, *, controller: builtins.str=..., extra: google.protobuf.struct_pb2.Struct | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['extra', b'extra']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['controller', b'controller', 'extra', b'extra']) -> None:
        ...
global___GetEventsRequest = GetEventsRequest

@typing_extensions.final
class GetEventsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EVENTS_FIELD_NUMBER: builtins.int

    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Event]:
        """Returns a list of the most recent event for each control on a given InputController. Effectively provides the current "state" of all
        buttons/axes on a given input controller
        """

    def __init__(self, *, events: collections.abc.Iterable[global___Event] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['events', b'events']) -> None:
        ...
global___GetEventsResponse = GetEventsResponse

@typing_extensions.final
class TriggerEventRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONTROLLER_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    EXTRA_FIELD_NUMBER: builtins.int
    controller: builtins.str
    'Name of an input controller'

    @property
    def event(self) -> global___Event:
        """Digitally assert a given event"""

    @property
    def extra(self) -> google.protobuf.struct_pb2.Struct:
        """Additional arguments to the method"""

    def __init__(self, *, controller: builtins.str=..., event: global___Event | None=..., extra: google.protobuf.struct_pb2.Struct | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['event', b'event', 'extra', b'extra']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['controller', b'controller', 'event', b'event', 'extra', b'extra']) -> None:
        ...
global___TriggerEventRequest = TriggerEventRequest

@typing_extensions.final
class TriggerEventResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___TriggerEventResponse = TriggerEventResponse

@typing_extensions.final
class Event(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIME_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    CONTROL_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int

    @property
    def time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of event"""
    event: builtins.str
    'An event type (eg: ButtonPress, ButtonRelease)'
    control: builtins.str
    'A control, can be a button (eg: ButtonSouth) or an axis (eg: AbsoluteX)'
    value: builtins.float
    '0 or 1 for buttons, -1.0 to +1.0 for axes'

    def __init__(self, *, time: google.protobuf.timestamp_pb2.Timestamp | None=..., event: builtins.str=..., control: builtins.str=..., value: builtins.float=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['time', b'time']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['control', b'control', 'event', b'event', 'time', b'time', 'value', b'value']) -> None:
        ...
global___Event = Event

@typing_extensions.final
class StreamEventsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Events(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        CONTROL_FIELD_NUMBER: builtins.int
        EVENTS_FIELD_NUMBER: builtins.int
        CANCELLED_EVENTS_FIELD_NUMBER: builtins.int
        control: builtins.str
        'Name of a control (button or axis)'

        @property
        def events(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
            """Specify which event types to recieve events for"""

        @property
        def cancelled_events(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
            """Specify which event types to stop recieving events for
            This can be an empty list
            """

        def __init__(self, *, control: builtins.str=..., events: collections.abc.Iterable[builtins.str] | None=..., cancelled_events: collections.abc.Iterable[builtins.str] | None=...) -> None:
            ...

        def ClearField(self, field_name: typing_extensions.Literal['cancelled_events', b'cancelled_events', 'control', b'control', 'events', b'events']) -> None:
            ...
    CONTROLLER_FIELD_NUMBER: builtins.int
    EVENTS_FIELD_NUMBER: builtins.int
    EXTRA_FIELD_NUMBER: builtins.int
    controller: builtins.str
    'Name of an input controller'

    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StreamEventsRequest.Events]:
        """A list of Events"""

    @property
    def extra(self) -> google.protobuf.struct_pb2.Struct:
        """Additional arguments to the method"""

    def __init__(self, *, controller: builtins.str=..., events: collections.abc.Iterable[global___StreamEventsRequest.Events] | None=..., extra: google.protobuf.struct_pb2.Struct | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['extra', b'extra']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['controller', b'controller', 'events', b'events', 'extra', b'extra']) -> None:
        ...
global___StreamEventsRequest = StreamEventsRequest

@typing_extensions.final
class StreamEventsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EVENT_FIELD_NUMBER: builtins.int

    @property
    def event(self) -> global___Event:
        """Event for a controller"""

    def __init__(self, *, event: global___Event | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['event', b'event']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['event', b'event']) -> None:
        ...
global___StreamEventsResponse = StreamEventsResponse

@typing_extensions.final
class Status(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EVENTS_FIELD_NUMBER: builtins.int

    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Event]:
        ...

    def __init__(self, *, events: collections.abc.Iterable[global___Event] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['events', b'events']) -> None:
        ...
global___Status = Status