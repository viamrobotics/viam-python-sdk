"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
from .... import common
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.struct_pb2
import typing
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetAudioRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    DURATION_SECONDS_FIELD_NUMBER: builtins.int
    CODEC_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    PREVIOUS_TIMESTAMP_NANOSECONDS_FIELD_NUMBER: builtins.int
    EXTRA_FIELD_NUMBER: builtins.int
    name: builtins.str
    duration_seconds: builtins.float
    'Desired duration of audio stream\n    If not set or set to 0, the stream is infinite\n    '
    codec: builtins.str
    'Requested audio codec for the response (e.g., "mp3", "pcm16")'
    request_id: builtins.str
    "To match a request to it's responses"
    previous_timestamp_nanoseconds: builtins.int
    'Timestamp of the previous audio chunk, in nanoseconds, used for resuming and continuity.'

    @property
    def extra(self) -> google.protobuf.struct_pb2.Struct:
        ...

    def __init__(self, *, name: builtins.str=..., duration_seconds: builtins.float=..., codec: builtins.str=..., request_id: builtins.str=..., previous_timestamp_nanoseconds: builtins.int=..., extra: google.protobuf.struct_pb2.Struct | None=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['extra', b'extra']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['codec', b'codec', 'duration_seconds', b'duration_seconds', 'extra', b'extra', 'name', b'name', 'previous_timestamp_nanoseconds', b'previous_timestamp_nanoseconds', 'request_id', b'request_id']) -> None:
        ...
global___GetAudioRequest = GetAudioRequest

@typing.final
class GetAudioResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    AUDIO_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    request_id: builtins.str

    @property
    def audio(self) -> global___AudioChunk:
        ...

    def __init__(self, *, audio: global___AudioChunk | None=..., request_id: builtins.str=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['audio', b'audio']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['audio', b'audio', 'request_id', b'request_id']) -> None:
        ...
global___GetAudioResponse = GetAudioResponse

@typing.final
class AudioChunk(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    AUDIO_DATA_FIELD_NUMBER: builtins.int
    AUDIO_INFO_FIELD_NUMBER: builtins.int
    START_TIMESTAMP_NANOSECONDS_FIELD_NUMBER: builtins.int
    END_TIMESTAMP_NANOSECONDS_FIELD_NUMBER: builtins.int
    SEQUENCE_FIELD_NUMBER: builtins.int
    audio_data: builtins.bytes
    'Audio data for this chunk, encoded according to the requested codec.'
    start_timestamp_nanoseconds: builtins.int
    end_timestamp_nanoseconds: builtins.int
    sequence: builtins.int
    'Sequential chunk number'

    @property
    def audio_info(self) -> common.v1.common_pb2.AudioInfo:
        """Info about the audio stream for this chunk"""

    def __init__(self, *, audio_data: builtins.bytes=..., audio_info: common.v1.common_pb2.AudioInfo | None=..., start_timestamp_nanoseconds: builtins.int=..., end_timestamp_nanoseconds: builtins.int=..., sequence: builtins.int=...) -> None:
        ...

    def HasField(self, field_name: typing.Literal['audio_info', b'audio_info']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing.Literal['audio_data', b'audio_data', 'audio_info', b'audio_info', 'end_timestamp_nanoseconds', b'end_timestamp_nanoseconds', 'sequence', b'sequence', 'start_timestamp_nanoseconds', b'start_timestamp_nanoseconds']) -> None:
        ...
global___AudioChunk = AudioChunk