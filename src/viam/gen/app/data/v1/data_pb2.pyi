"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import sys
import typing
if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Order:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OrderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Order.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ORDER_UNSPECIFIED: _Order.ValueType
    ORDER_DESCENDING: _Order.ValueType
    ORDER_ASCENDING: _Order.ValueType

class Order(_Order, metaclass=_OrderEnumTypeWrapper):
    """Order specifies the order in which data is returned."""
ORDER_UNSPECIFIED: Order.ValueType
ORDER_DESCENDING: Order.ValueType
ORDER_ASCENDING: Order.ValueType
global___Order = Order

class _TagsFilterType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _TagsFilterTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TagsFilterType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    TAGS_FILTER_TYPE_UNSPECIFIED: _TagsFilterType.ValueType
    TAGS_FILTER_TYPE_MATCH_BY_OR: _TagsFilterType.ValueType
    'TAGS_FILTER_TYPE_MATCH_BY_OR specifies documents matched (using logical OR) on the tags field in the TagsFilter'
    TAGS_FILTER_TYPE_TAGGED: _TagsFilterType.ValueType
    'TAGS_FILTER_TYPE_TAGGED specifies that all tagged documents should be returned'
    TAGS_FILTER_TYPE_UNTAGGED: _TagsFilterType.ValueType
    'TAGS_FILTER_TYPE_UNTAGGED specifes that all untagged documents should be returned'

class TagsFilterType(_TagsFilterType, metaclass=_TagsFilterTypeEnumTypeWrapper):
    """TagsFilterType specifies how data can be filtered based on tags"""
TAGS_FILTER_TYPE_UNSPECIFIED: TagsFilterType.ValueType
TAGS_FILTER_TYPE_MATCH_BY_OR: TagsFilterType.ValueType
'TAGS_FILTER_TYPE_MATCH_BY_OR specifies documents matched (using logical OR) on the tags field in the TagsFilter'
TAGS_FILTER_TYPE_TAGGED: TagsFilterType.ValueType
'TAGS_FILTER_TYPE_TAGGED specifies that all tagged documents should be returned'
TAGS_FILTER_TYPE_UNTAGGED: TagsFilterType.ValueType
'TAGS_FILTER_TYPE_UNTAGGED specifes that all untagged documents should be returned'
global___TagsFilterType = TagsFilterType

@typing_extensions.final
class DataRequest(google.protobuf.message.Message):
    """DataRequest encapsulates the filter for the data, a limit on the maximum results returned,
    a last string associated with the last returned document, and the sorting order by time.
    last is returned in the responses TabularDataByFilterResponse and BinaryDataByFilterResponse
    from the API calls TabularDataByFilter and BinaryDataByFilter, respectively.
    We can then use the last string from the previous API calls in the subsequent request
    to get the next set of ordered documents.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTER_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    LAST_FIELD_NUMBER: builtins.int
    SORT_ORDER_FIELD_NUMBER: builtins.int

    @property
    def filter(self) -> global___Filter:
        ...
    limit: builtins.int
    last: builtins.str
    sort_order: global___Order.ValueType

    def __init__(self, *, filter: global___Filter | None=..., limit: builtins.int=..., last: builtins.str=..., sort_order: global___Order.ValueType=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['filter', b'filter', 'last', b'last', 'limit', b'limit', 'sort_order', b'sort_order']) -> None:
        ...
global___DataRequest = DataRequest

@typing_extensions.final
class Filter(google.protobuf.message.Message):
    """Filter defines the fields over which we can filter data using a logic AND.
    For example, if component_type and robot_id are specified, only data from that `robot_id` of
    type `component_type` is returned. However, we logical OR over the specified tags and bounding
    box labels, such that if component_type, robot_id, tagA, tagB are specified,
    we return data from that `robot_id` of type `component_type` with `tagA` or `tagB`.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    COMPONENT_NAME_FIELD_NUMBER: builtins.int
    COMPONENT_TYPE_FIELD_NUMBER: builtins.int
    METHOD_FIELD_NUMBER: builtins.int
    ROBOT_NAME_FIELD_NUMBER: builtins.int
    ROBOT_ID_FIELD_NUMBER: builtins.int
    PART_NAME_FIELD_NUMBER: builtins.int
    PART_ID_FIELD_NUMBER: builtins.int
    LOCATION_IDS_FIELD_NUMBER: builtins.int
    ORGANIZATION_IDS_FIELD_NUMBER: builtins.int
    MIME_TYPE_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    TAGS_FILTER_FIELD_NUMBER: builtins.int
    BBOX_LABELS_FIELD_NUMBER: builtins.int
    component_name: builtins.str
    component_type: builtins.str
    method: builtins.str
    robot_name: builtins.str
    robot_id: builtins.str
    part_name: builtins.str
    part_id: builtins.str

    @property
    def location_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    @property
    def organization_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    @property
    def mime_type(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    @property
    def interval(self) -> global___CaptureInterval:
        ...

    @property
    def tags_filter(self) -> global___TagsFilter:
        ...

    @property
    def bbox_labels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """bbox_labels are used to match documents with the specified bounding box labels (using logical OR)"""

    def __init__(self, *, component_name: builtins.str=..., component_type: builtins.str=..., method: builtins.str=..., robot_name: builtins.str=..., robot_id: builtins.str=..., part_name: builtins.str=..., part_id: builtins.str=..., location_ids: collections.abc.Iterable[builtins.str] | None=..., organization_ids: collections.abc.Iterable[builtins.str] | None=..., mime_type: collections.abc.Iterable[builtins.str] | None=..., interval: global___CaptureInterval | None=..., tags_filter: global___TagsFilter | None=..., bbox_labels: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['interval', b'interval', 'tags_filter', b'tags_filter']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['bbox_labels', b'bbox_labels', 'component_name', b'component_name', 'component_type', b'component_type', 'interval', b'interval', 'location_ids', b'location_ids', 'method', b'method', 'mime_type', b'mime_type', 'organization_ids', b'organization_ids', 'part_id', b'part_id', 'part_name', b'part_name', 'robot_id', b'robot_id', 'robot_name', b'robot_name', 'tags_filter', b'tags_filter']) -> None:
        ...
global___Filter = Filter

@typing_extensions.final
class TagsFilter(google.protobuf.message.Message):
    """TagsFilter defines the type of filtering and, if applicable, over which tags to perform a logical OR."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    type: global___TagsFilterType.ValueType

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Tags are used to match documents if `type` is UNSPECIFIED or MATCH_BY_OR"""

    def __init__(self, *, type: global___TagsFilterType.ValueType=..., tags: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['tags', b'tags', 'type', b'type']) -> None:
        ...
global___TagsFilter = TagsFilter

@typing_extensions.final
class CaptureMetadata(google.protobuf.message.Message):
    """CaptureMetadata contains information on the settings used for the data capture"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class MethodParametersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str

        @property
        def value(self) -> google.protobuf.any_pb2.Any:
            ...

        def __init__(self, *, key: builtins.str=..., value: google.protobuf.any_pb2.Any | None=...) -> None:
            ...

        def HasField(self, field_name: typing_extensions.Literal['value', b'value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing_extensions.Literal['key', b'key', 'value', b'value']) -> None:
            ...
    ORGANIZATION_ID_FIELD_NUMBER: builtins.int
    LOCATION_ID_FIELD_NUMBER: builtins.int
    ROBOT_NAME_FIELD_NUMBER: builtins.int
    ROBOT_ID_FIELD_NUMBER: builtins.int
    PART_NAME_FIELD_NUMBER: builtins.int
    PART_ID_FIELD_NUMBER: builtins.int
    COMPONENT_TYPE_FIELD_NUMBER: builtins.int
    COMPONENT_NAME_FIELD_NUMBER: builtins.int
    METHOD_NAME_FIELD_NUMBER: builtins.int
    METHOD_PARAMETERS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    MIME_TYPE_FIELD_NUMBER: builtins.int
    organization_id: builtins.str
    location_id: builtins.str
    robot_name: builtins.str
    robot_id: builtins.str
    part_name: builtins.str
    part_id: builtins.str
    component_type: builtins.str
    component_name: builtins.str
    method_name: builtins.str

    @property
    def method_parameters(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.any_pb2.Any]:
        ...

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...
    mime_type: builtins.str

    def __init__(self, *, organization_id: builtins.str=..., location_id: builtins.str=..., robot_name: builtins.str=..., robot_id: builtins.str=..., part_name: builtins.str=..., part_id: builtins.str=..., component_type: builtins.str=..., component_name: builtins.str=..., method_name: builtins.str=..., method_parameters: collections.abc.Mapping[builtins.str, google.protobuf.any_pb2.Any] | None=..., tags: collections.abc.Iterable[builtins.str] | None=..., mime_type: builtins.str=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['component_name', b'component_name', 'component_type', b'component_type', 'location_id', b'location_id', 'method_name', b'method_name', 'method_parameters', b'method_parameters', 'mime_type', b'mime_type', 'organization_id', b'organization_id', 'part_id', b'part_id', 'part_name', b'part_name', 'robot_id', b'robot_id', 'robot_name', b'robot_name', 'tags', b'tags']) -> None:
        ...
global___CaptureMetadata = CaptureMetadata

@typing_extensions.final
class CaptureInterval(google.protobuf.message.Message):
    """CaptureInterval describes the start and end time of the capture in this file"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int

    @property
    def start(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def end(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    def __init__(self, *, start: google.protobuf.timestamp_pb2.Timestamp | None=..., end: google.protobuf.timestamp_pb2.Timestamp | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['end', b'end', 'start', b'start']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['end', b'end', 'start', b'start']) -> None:
        ...
global___CaptureInterval = CaptureInterval

@typing_extensions.final
class TabularDataByFilterRequest(google.protobuf.message.Message):
    """TabularDataByFilterRequest requests tabular data based on filter values"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_REQUEST_FIELD_NUMBER: builtins.int
    COUNT_ONLY_FIELD_NUMBER: builtins.int

    @property
    def data_request(self) -> global___DataRequest:
        ...
    count_only: builtins.bool

    def __init__(self, *, data_request: global___DataRequest | None=..., count_only: builtins.bool=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['data_request', b'data_request']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['count_only', b'count_only', 'data_request', b'data_request']) -> None:
        ...
global___TabularDataByFilterRequest = TabularDataByFilterRequest

@typing_extensions.final
class TabularDataByFilterResponse(google.protobuf.message.Message):
    """TabularDataByFilterResponse provides the data and metadata of tabular data"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    LAST_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_BYTES_FIELD_NUMBER: builtins.int

    @property
    def metadata(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CaptureMetadata]:
        ...

    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TabularData]:
        ...
    count: builtins.int
    last: builtins.str
    total_size_bytes: builtins.int

    def __init__(self, *, metadata: collections.abc.Iterable[global___CaptureMetadata] | None=..., data: collections.abc.Iterable[global___TabularData] | None=..., count: builtins.int=..., last: builtins.str=..., total_size_bytes: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['count', b'count', 'data', b'data', 'last', b'last', 'metadata', b'metadata', 'total_size_bytes', b'total_size_bytes']) -> None:
        ...
global___TabularDataByFilterResponse = TabularDataByFilterResponse

@typing_extensions.final
class TabularData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    METADATA_INDEX_FIELD_NUMBER: builtins.int
    TIME_REQUESTED_FIELD_NUMBER: builtins.int
    TIME_RECEIVED_FIELD_NUMBER: builtins.int

    @property
    def data(self) -> google.protobuf.struct_pb2.Struct:
        ...
    metadata_index: builtins.int

    @property
    def time_requested(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def time_received(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    def __init__(self, *, data: google.protobuf.struct_pb2.Struct | None=..., metadata_index: builtins.int=..., time_requested: google.protobuf.timestamp_pb2.Timestamp | None=..., time_received: google.protobuf.timestamp_pb2.Timestamp | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['data', b'data', 'time_received', b'time_received', 'time_requested', b'time_requested']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['data', b'data', 'metadata_index', b'metadata_index', 'time_received', b'time_received', 'time_requested', b'time_requested']) -> None:
        ...
global___TabularData = TabularData

@typing_extensions.final
class BinaryData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BINARY_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    binary: builtins.bytes

    @property
    def metadata(self) -> global___BinaryMetadata:
        ...

    def __init__(self, *, binary: builtins.bytes=..., metadata: global___BinaryMetadata | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['metadata', b'metadata']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['binary', b'binary', 'metadata', b'metadata']) -> None:
        ...
global___BinaryData = BinaryData

@typing_extensions.final
class BinaryDataByFilterRequest(google.protobuf.message.Message):
    """BinaryDataByFilterRequest requests the data and metadata of binary (image + file) data when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_REQUEST_FIELD_NUMBER: builtins.int
    INCLUDE_BINARY_FIELD_NUMBER: builtins.int
    COUNT_ONLY_FIELD_NUMBER: builtins.int

    @property
    def data_request(self) -> global___DataRequest:
        ...
    include_binary: builtins.bool
    count_only: builtins.bool

    def __init__(self, *, data_request: global___DataRequest | None=..., include_binary: builtins.bool=..., count_only: builtins.bool=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['data_request', b'data_request']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['count_only', b'count_only', 'data_request', b'data_request', 'include_binary', b'include_binary']) -> None:
        ...
global___BinaryDataByFilterRequest = BinaryDataByFilterRequest

@typing_extensions.final
class BinaryDataByFilterResponse(google.protobuf.message.Message):
    """BinaryDataByFilterResponse provides the data and metadata of binary (image + file) data when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    LAST_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_BYTES_FIELD_NUMBER: builtins.int

    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BinaryData]:
        ...
    count: builtins.int
    last: builtins.str
    total_size_bytes: builtins.int

    def __init__(self, *, data: collections.abc.Iterable[global___BinaryData] | None=..., count: builtins.int=..., last: builtins.str=..., total_size_bytes: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['count', b'count', 'data', b'data', 'last', b'last', 'total_size_bytes', b'total_size_bytes']) -> None:
        ...
global___BinaryDataByFilterResponse = BinaryDataByFilterResponse

@typing_extensions.final
class BinaryID(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILE_ID_FIELD_NUMBER: builtins.int
    ORGANIZATION_ID_FIELD_NUMBER: builtins.int
    LOCATION_ID_FIELD_NUMBER: builtins.int
    file_id: builtins.str
    organization_id: builtins.str
    location_id: builtins.str

    def __init__(self, *, file_id: builtins.str=..., organization_id: builtins.str=..., location_id: builtins.str=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['file_id', b'file_id', 'location_id', b'location_id', 'organization_id', b'organization_id']) -> None:
        ...
global___BinaryID = BinaryID

@typing_extensions.final
class BinaryDataByIDsRequest(google.protobuf.message.Message):
    """BinaryDataByFilterRequest requests the data and metadata of binary (image + file) data by binary ids"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INCLUDE_BINARY_FIELD_NUMBER: builtins.int
    BINARY_IDS_FIELD_NUMBER: builtins.int
    include_binary: builtins.bool

    @property
    def binary_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BinaryID]:
        ...

    def __init__(self, *, include_binary: builtins.bool=..., binary_ids: collections.abc.Iterable[global___BinaryID] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['binary_ids', b'binary_ids', 'include_binary', b'include_binary']) -> None:
        ...
global___BinaryDataByIDsRequest = BinaryDataByIDsRequest

@typing_extensions.final
class BinaryDataByIDsResponse(google.protobuf.message.Message):
    """BinaryDataByIDsResponse provides the data and metadata of binary (image + file) data when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int

    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BinaryData]:
        ...
    count: builtins.int

    def __init__(self, *, data: collections.abc.Iterable[global___BinaryData] | None=..., count: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['count', b'count', 'data', b'data']) -> None:
        ...
global___BinaryDataByIDsResponse = BinaryDataByIDsResponse

@typing_extensions.final
class BoundingBox(google.protobuf.message.Message):
    """BoundingBox represents a labeled bounding box on an image.
    x and y values are normalized ratios between 0 and 1.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    X_MIN_NORMALIZED_FIELD_NUMBER: builtins.int
    Y_MIN_NORMALIZED_FIELD_NUMBER: builtins.int
    X_MAX_NORMALIZED_FIELD_NUMBER: builtins.int
    Y_MAX_NORMALIZED_FIELD_NUMBER: builtins.int
    id: builtins.str
    label: builtins.str
    x_min_normalized: builtins.float
    y_min_normalized: builtins.float
    x_max_normalized: builtins.float
    y_max_normalized: builtins.float

    def __init__(self, *, id: builtins.str=..., label: builtins.str=..., x_min_normalized: builtins.float=..., y_min_normalized: builtins.float=..., x_max_normalized: builtins.float=..., y_max_normalized: builtins.float=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['id', b'id', 'label', b'label', 'x_max_normalized', b'x_max_normalized', 'x_min_normalized', b'x_min_normalized', 'y_max_normalized', b'y_max_normalized', 'y_min_normalized', b'y_min_normalized']) -> None:
        ...
global___BoundingBox = BoundingBox

@typing_extensions.final
class Annotations(google.protobuf.message.Message):
    """Annotations are data annotations used for machine learning."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BBOXES_FIELD_NUMBER: builtins.int

    @property
    def bboxes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BoundingBox]:
        ...

    def __init__(self, *, bboxes: collections.abc.Iterable[global___BoundingBox] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['bboxes', b'bboxes']) -> None:
        ...
global___Annotations = Annotations

@typing_extensions.final
class BinaryMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    CAPTURE_METADATA_FIELD_NUMBER: builtins.int
    TIME_REQUESTED_FIELD_NUMBER: builtins.int
    TIME_RECEIVED_FIELD_NUMBER: builtins.int
    FILE_NAME_FIELD_NUMBER: builtins.int
    FILE_EXT_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    id: builtins.str

    @property
    def capture_metadata(self) -> global___CaptureMetadata:
        ...

    @property
    def time_requested(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def time_received(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...
    file_name: builtins.str
    file_ext: builtins.str
    uri: builtins.str

    @property
    def annotations(self) -> global___Annotations:
        ...

    def __init__(self, *, id: builtins.str=..., capture_metadata: global___CaptureMetadata | None=..., time_requested: google.protobuf.timestamp_pb2.Timestamp | None=..., time_received: google.protobuf.timestamp_pb2.Timestamp | None=..., file_name: builtins.str=..., file_ext: builtins.str=..., uri: builtins.str=..., annotations: global___Annotations | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['annotations', b'annotations', 'capture_metadata', b'capture_metadata', 'time_received', b'time_received', 'time_requested', b'time_requested']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['annotations', b'annotations', 'capture_metadata', b'capture_metadata', 'file_ext', b'file_ext', 'file_name', b'file_name', 'id', b'id', 'time_received', b'time_received', 'time_requested', b'time_requested', 'uri', b'uri']) -> None:
        ...
global___BinaryMetadata = BinaryMetadata

@typing_extensions.final
class DeleteTabularDataByFilterRequest(google.protobuf.message.Message):
    """DeleteTabularDataByFilterRequest deletes the data and metadata of tabular data when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTER_FIELD_NUMBER: builtins.int

    @property
    def filter(self) -> global___Filter:
        ...

    def __init__(self, *, filter: global___Filter | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> None:
        ...
global___DeleteTabularDataByFilterRequest = DeleteTabularDataByFilterRequest

@typing_extensions.final
class DeleteTabularDataByFilterResponse(google.protobuf.message.Message):
    """DeleteBinaryDataByFilterResponse returns the number of tabular datapoints deleted when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DELETED_COUNT_FIELD_NUMBER: builtins.int
    deleted_count: builtins.int

    def __init__(self, *, deleted_count: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['deleted_count', b'deleted_count']) -> None:
        ...
global___DeleteTabularDataByFilterResponse = DeleteTabularDataByFilterResponse

@typing_extensions.final
class DeleteBinaryDataByFilterRequest(google.protobuf.message.Message):
    """DeleteBinaryDataByFilterRequest deletes the data and metadata of binary data when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTER_FIELD_NUMBER: builtins.int

    @property
    def filter(self) -> global___Filter:
        ...

    def __init__(self, *, filter: global___Filter | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> None:
        ...
global___DeleteBinaryDataByFilterRequest = DeleteBinaryDataByFilterRequest

@typing_extensions.final
class DeleteBinaryDataByFilterResponse(google.protobuf.message.Message):
    """DeleteBinaryDataByFilterResponse returns the number of binary files deleted when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DELETED_COUNT_FIELD_NUMBER: builtins.int
    deleted_count: builtins.int

    def __init__(self, *, deleted_count: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['deleted_count', b'deleted_count']) -> None:
        ...
global___DeleteBinaryDataByFilterResponse = DeleteBinaryDataByFilterResponse

@typing_extensions.final
class DeleteBinaryDataByIDsRequest(google.protobuf.message.Message):
    """DeleteBinaryDataByIDsRequest deletes the data and metadata of binary data when binary ids are provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BINARY_IDS_FIELD_NUMBER: builtins.int

    @property
    def binary_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BinaryID]:
        ...

    def __init__(self, *, binary_ids: collections.abc.Iterable[global___BinaryID] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['binary_ids', b'binary_ids']) -> None:
        ...
global___DeleteBinaryDataByIDsRequest = DeleteBinaryDataByIDsRequest

@typing_extensions.final
class DeleteBinaryDataByIDsResponse(google.protobuf.message.Message):
    """DeleteBinaryDataByIDsResponse returns the number of binary files deleted when binary ids are provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DELETED_COUNT_FIELD_NUMBER: builtins.int
    deleted_count: builtins.int

    def __init__(self, *, deleted_count: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['deleted_count', b'deleted_count']) -> None:
        ...
global___DeleteBinaryDataByIDsResponse = DeleteBinaryDataByIDsResponse

@typing_extensions.final
class AddTagsToBinaryDataByIDsRequest(google.protobuf.message.Message):
    """AddTagsToBinaryDataByIDsRequest requests adding all specified tags to each of the files when binary ids are provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BINARY_IDS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int

    @property
    def binary_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BinaryID]:
        ...

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    def __init__(self, *, binary_ids: collections.abc.Iterable[global___BinaryID] | None=..., tags: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['binary_ids', b'binary_ids', 'tags', b'tags']) -> None:
        ...
global___AddTagsToBinaryDataByIDsRequest = AddTagsToBinaryDataByIDsRequest

@typing_extensions.final
class AddTagsToBinaryDataByIDsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___AddTagsToBinaryDataByIDsResponse = AddTagsToBinaryDataByIDsResponse

@typing_extensions.final
class AddTagsToBinaryDataByFilterRequest(google.protobuf.message.Message):
    """AddTagsToBinaryDataByFilterRequest requests adding all specified tags to each of the files when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTER_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int

    @property
    def filter(self) -> global___Filter:
        ...

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    def __init__(self, *, filter: global___Filter | None=..., tags: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['filter', b'filter', 'tags', b'tags']) -> None:
        ...
global___AddTagsToBinaryDataByFilterRequest = AddTagsToBinaryDataByFilterRequest

@typing_extensions.final
class AddTagsToBinaryDataByFilterResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___AddTagsToBinaryDataByFilterResponse = AddTagsToBinaryDataByFilterResponse

@typing_extensions.final
class RemoveTagsFromBinaryDataByIDsRequest(google.protobuf.message.Message):
    """RemoveTagsFromBinaryDataByIDsRequest requests removing the given tags value from each file when binary ids are provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BINARY_IDS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int

    @property
    def binary_ids(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BinaryID]:
        ...

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    def __init__(self, *, binary_ids: collections.abc.Iterable[global___BinaryID] | None=..., tags: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['binary_ids', b'binary_ids', 'tags', b'tags']) -> None:
        ...
global___RemoveTagsFromBinaryDataByIDsRequest = RemoveTagsFromBinaryDataByIDsRequest

@typing_extensions.final
class RemoveTagsFromBinaryDataByIDsResponse(google.protobuf.message.Message):
    """RemoveTagsFromBinaryDataByIDsResponse returns the number of binary files which had tags removed"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DELETED_COUNT_FIELD_NUMBER: builtins.int
    deleted_count: builtins.int

    def __init__(self, *, deleted_count: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['deleted_count', b'deleted_count']) -> None:
        ...
global___RemoveTagsFromBinaryDataByIDsResponse = RemoveTagsFromBinaryDataByIDsResponse

@typing_extensions.final
class RemoveTagsFromBinaryDataByFilterRequest(google.protobuf.message.Message):
    """RemoveTagsFromBinaryDataByFilterRequest requests removing the given tags value from each file when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTER_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int

    @property
    def filter(self) -> global___Filter:
        ...

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    def __init__(self, *, filter: global___Filter | None=..., tags: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['filter', b'filter', 'tags', b'tags']) -> None:
        ...
global___RemoveTagsFromBinaryDataByFilterRequest = RemoveTagsFromBinaryDataByFilterRequest

@typing_extensions.final
class RemoveTagsFromBinaryDataByFilterResponse(google.protobuf.message.Message):
    """RemoveTagsFromBinaryDataByFilterResponse returns the number of binary files which had tags removed"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DELETED_COUNT_FIELD_NUMBER: builtins.int
    deleted_count: builtins.int

    def __init__(self, *, deleted_count: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['deleted_count', b'deleted_count']) -> None:
        ...
global___RemoveTagsFromBinaryDataByFilterResponse = RemoveTagsFromBinaryDataByFilterResponse

@typing_extensions.final
class TagsByFilterRequest(google.protobuf.message.Message):
    """TagsByFilterRequest requests the unique tags from data based on given filter"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTER_FIELD_NUMBER: builtins.int

    @property
    def filter(self) -> global___Filter:
        ...

    def __init__(self, *, filter: global___Filter | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> None:
        ...
global___TagsByFilterRequest = TagsByFilterRequest

@typing_extensions.final
class TagsByFilterResponse(google.protobuf.message.Message):
    """TagsByFilterResponse returns the unique tags from data based on given filter"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TAGS_FIELD_NUMBER: builtins.int

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    def __init__(self, *, tags: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['tags', b'tags']) -> None:
        ...
global___TagsByFilterResponse = TagsByFilterResponse

@typing_extensions.final
class AddBoundingBoxToImageByIDRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BINARY_ID_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    X_MIN_NORMALIZED_FIELD_NUMBER: builtins.int
    Y_MIN_NORMALIZED_FIELD_NUMBER: builtins.int
    X_MAX_NORMALIZED_FIELD_NUMBER: builtins.int
    Y_MAX_NORMALIZED_FIELD_NUMBER: builtins.int

    @property
    def binary_id(self) -> global___BinaryID:
        ...
    label: builtins.str
    x_min_normalized: builtins.float
    y_min_normalized: builtins.float
    x_max_normalized: builtins.float
    y_max_normalized: builtins.float

    def __init__(self, *, binary_id: global___BinaryID | None=..., label: builtins.str=..., x_min_normalized: builtins.float=..., y_min_normalized: builtins.float=..., x_max_normalized: builtins.float=..., y_max_normalized: builtins.float=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['binary_id', b'binary_id']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['binary_id', b'binary_id', 'label', b'label', 'x_max_normalized', b'x_max_normalized', 'x_min_normalized', b'x_min_normalized', 'y_max_normalized', b'y_max_normalized', 'y_min_normalized', b'y_min_normalized']) -> None:
        ...
global___AddBoundingBoxToImageByIDRequest = AddBoundingBoxToImageByIDRequest

@typing_extensions.final
class AddBoundingBoxToImageByIDResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BBOX_ID_FIELD_NUMBER: builtins.int
    bbox_id: builtins.str

    def __init__(self, *, bbox_id: builtins.str=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['bbox_id', b'bbox_id']) -> None:
        ...
global___AddBoundingBoxToImageByIDResponse = AddBoundingBoxToImageByIDResponse

@typing_extensions.final
class RemoveBoundingBoxFromImageByIDRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BINARY_ID_FIELD_NUMBER: builtins.int
    BBOX_ID_FIELD_NUMBER: builtins.int

    @property
    def binary_id(self) -> global___BinaryID:
        ...
    bbox_id: builtins.str

    def __init__(self, *, binary_id: global___BinaryID | None=..., bbox_id: builtins.str=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['binary_id', b'binary_id']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['bbox_id', b'bbox_id', 'binary_id', b'binary_id']) -> None:
        ...
global___RemoveBoundingBoxFromImageByIDRequest = RemoveBoundingBoxFromImageByIDRequest

@typing_extensions.final
class RemoveBoundingBoxFromImageByIDResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___RemoveBoundingBoxFromImageByIDResponse = RemoveBoundingBoxFromImageByIDResponse

@typing_extensions.final
class BoundingBoxLabelsByFilterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTER_FIELD_NUMBER: builtins.int

    @property
    def filter(self) -> global___Filter:
        ...

    def __init__(self, *, filter: global___Filter | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> None:
        ...
global___BoundingBoxLabelsByFilterRequest = BoundingBoxLabelsByFilterRequest

@typing_extensions.final
class BoundingBoxLabelsByFilterResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LABELS_FIELD_NUMBER: builtins.int

    @property
    def labels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    def __init__(self, *, labels: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['labels', b'labels']) -> None:
        ...
global___BoundingBoxLabelsByFilterResponse = BoundingBoxLabelsByFilterResponse