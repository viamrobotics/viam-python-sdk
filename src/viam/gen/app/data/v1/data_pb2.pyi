"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import sys
if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class DataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILTER_FIELD_NUMBER: builtins.int
    SKIP_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int

    @property
    def filter(self) -> global___Filter:
        ...
    skip: builtins.int
    limit: builtins.int

    def __init__(self, *, filter: global___Filter | None=..., skip: builtins.int=..., limit: builtins.int=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['filter', b'filter']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['filter', b'filter', 'limit', b'limit', 'skip', b'skip']) -> None:
        ...
global___DataRequest = DataRequest

class Filter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    COMPONENT_NAME_FIELD_NUMBER: builtins.int
    COMPONENT_TYPE_FIELD_NUMBER: builtins.int
    COMPONENT_MODEL_FIELD_NUMBER: builtins.int
    METHOD_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    ROBOT_NAME_FIELD_NUMBER: builtins.int
    ROBOT_ID_FIELD_NUMBER: builtins.int
    PART_NAME_FIELD_NUMBER: builtins.int
    PART_ID_FIELD_NUMBER: builtins.int
    LOCATION_ID_FIELD_NUMBER: builtins.int
    ORG_IDS_FIELD_NUMBER: builtins.int
    MIME_TYPE_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    component_name: builtins.str
    component_type: builtins.str
    component_model: builtins.str
    method: builtins.str

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...
    robot_name: builtins.str
    robot_id: builtins.str
    part_name: builtins.str
    part_id: builtins.str
    location_id: builtins.str

    @property
    def org_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    @property
    def mime_type(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    @property
    def interval(self) -> global___CaptureInterval:
        ...

    def __init__(self, *, component_name: builtins.str=..., component_type: builtins.str=..., component_model: builtins.str=..., method: builtins.str=..., tags: collections.abc.Iterable[builtins.str] | None=..., robot_name: builtins.str=..., robot_id: builtins.str=..., part_name: builtins.str=..., part_id: builtins.str=..., location_id: builtins.str=..., org_ids: collections.abc.Iterable[builtins.str] | None=..., mime_type: collections.abc.Iterable[builtins.str] | None=..., interval: global___CaptureInterval | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['interval', b'interval']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['component_model', b'component_model', 'component_name', b'component_name', 'component_type', b'component_type', 'interval', b'interval', 'location_id', b'location_id', 'method', b'method', 'mime_type', b'mime_type', 'org_ids', b'org_ids', 'part_id', b'part_id', 'part_name', b'part_name', 'robot_id', b'robot_id', 'robot_name', b'robot_name', 'tags', b'tags']) -> None:
        ...
global___Filter = Filter

class CaptureMetadata(google.protobuf.message.Message):
    """CaptureMetadata contains information on the settings used for the data capture"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class MethodParametersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str

        @property
        def value(self) -> google.protobuf.any_pb2.Any:
            ...

        def __init__(self, *, key: builtins.str=..., value: google.protobuf.any_pb2.Any | None=...) -> None:
            ...

        def HasField(self, field_name: typing_extensions.Literal['value', b'value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing_extensions.Literal['key', b'key', 'value', b'value']) -> None:
            ...
    ORG_ID_FIELD_NUMBER: builtins.int
    LOCATION_ID_FIELD_NUMBER: builtins.int
    ROBOT_NAME_FIELD_NUMBER: builtins.int
    ROBOT_ID_FIELD_NUMBER: builtins.int
    PART_NAME_FIELD_NUMBER: builtins.int
    PART_ID_FIELD_NUMBER: builtins.int
    COMPONENT_TYPE_FIELD_NUMBER: builtins.int
    COMPONENT_MODEL_FIELD_NUMBER: builtins.int
    COMPONENT_NAME_FIELD_NUMBER: builtins.int
    METHOD_NAME_FIELD_NUMBER: builtins.int
    METHOD_PARAMETERS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    MIME_TYPE_FIELD_NUMBER: builtins.int
    org_id: builtins.str
    location_id: builtins.str
    robot_name: builtins.str
    robot_id: builtins.str
    part_name: builtins.str
    part_id: builtins.str
    component_type: builtins.str
    component_model: builtins.str
    component_name: builtins.str
    method_name: builtins.str

    @property
    def method_parameters(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.any_pb2.Any]:
        ...

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...
    mime_type: builtins.str

    def __init__(self, *, org_id: builtins.str=..., location_id: builtins.str=..., robot_name: builtins.str=..., robot_id: builtins.str=..., part_name: builtins.str=..., part_id: builtins.str=..., component_type: builtins.str=..., component_model: builtins.str=..., component_name: builtins.str=..., method_name: builtins.str=..., method_parameters: collections.abc.Mapping[builtins.str, google.protobuf.any_pb2.Any] | None=..., tags: collections.abc.Iterable[builtins.str] | None=..., mime_type: builtins.str=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['component_model', b'component_model', 'component_name', b'component_name', 'component_type', b'component_type', 'location_id', b'location_id', 'method_name', b'method_name', 'method_parameters', b'method_parameters', 'mime_type', b'mime_type', 'org_id', b'org_id', 'part_id', b'part_id', 'part_name', b'part_name', 'robot_id', b'robot_id', 'robot_name', b'robot_name', 'tags', b'tags']) -> None:
        ...
global___CaptureMetadata = CaptureMetadata

class CaptureInterval(google.protobuf.message.Message):
    """CaptureInterval describes the start and end time of the capture in this file"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int

    @property
    def start(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def end(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    def __init__(self, *, start: google.protobuf.timestamp_pb2.Timestamp | None=..., end: google.protobuf.timestamp_pb2.Timestamp | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['end', b'end', 'start', b'start']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['end', b'end', 'start', b'start']) -> None:
        ...
global___CaptureInterval = CaptureInterval

class TabularDataByFilterRequest(google.protobuf.message.Message):
    """TabularDataByFilterRequest requests tabular data based on filter values"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_REQUEST_FIELD_NUMBER: builtins.int
    COUNT_ONLY_FIELD_NUMBER: builtins.int

    @property
    def data_request(self) -> global___DataRequest:
        ...
    count_only: builtins.bool

    def __init__(self, *, data_request: global___DataRequest | None=..., count_only: builtins.bool=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['data_request', b'data_request']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['count_only', b'count_only', 'data_request', b'data_request']) -> None:
        ...
global___TabularDataByFilterRequest = TabularDataByFilterRequest

class TabularDataByFilterResponse(google.protobuf.message.Message):
    """TabularDataByFilterResponse provides the data and metadata of tabular data"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    METADATA_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int

    @property
    def metadata(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CaptureMetadata]:
        ...

    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TabularData]:
        ...
    count: builtins.int

    def __init__(self, *, metadata: collections.abc.Iterable[global___CaptureMetadata] | None=..., data: collections.abc.Iterable[global___TabularData] | None=..., count: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['count', b'count', 'data', b'data', 'metadata', b'metadata']) -> None:
        ...
global___TabularDataByFilterResponse = TabularDataByFilterResponse

class TabularData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    METADATA_INDEX_FIELD_NUMBER: builtins.int
    TIME_REQUESTED_FIELD_NUMBER: builtins.int
    TIME_RECEIVED_FIELD_NUMBER: builtins.int

    @property
    def data(self) -> google.protobuf.struct_pb2.Struct:
        ...
    metadata_index: builtins.int

    @property
    def time_requested(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def time_received(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    def __init__(self, *, data: google.protobuf.struct_pb2.Struct | None=..., metadata_index: builtins.int=..., time_requested: google.protobuf.timestamp_pb2.Timestamp | None=..., time_received: google.protobuf.timestamp_pb2.Timestamp | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['data', b'data', 'time_received', b'time_received', 'time_requested', b'time_requested']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['data', b'data', 'metadata_index', b'metadata_index', 'time_received', b'time_received', 'time_requested', b'time_requested']) -> None:
        ...
global___TabularData = TabularData

class BinaryData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BINARY_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    binary: builtins.bytes

    @property
    def metadata(self) -> global___BinaryMetadata:
        ...

    def __init__(self, *, binary: builtins.bytes=..., metadata: global___BinaryMetadata | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['metadata', b'metadata']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['binary', b'binary', 'metadata', b'metadata']) -> None:
        ...
global___BinaryData = BinaryData

class BinaryDataByFilterRequest(google.protobuf.message.Message):
    """BinaryDataByFilterRequest requests the data and metadata of binary (image + file) data when by filter"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_REQUEST_FIELD_NUMBER: builtins.int
    INCLUDE_BINARY_FIELD_NUMBER: builtins.int
    COUNT_ONLY_FIELD_NUMBER: builtins.int

    @property
    def data_request(self) -> global___DataRequest:
        ...
    include_binary: builtins.bool
    count_only: builtins.bool

    def __init__(self, *, data_request: global___DataRequest | None=..., include_binary: builtins.bool=..., count_only: builtins.bool=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['data_request', b'data_request']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['count_only', b'count_only', 'data_request', b'data_request', 'include_binary', b'include_binary']) -> None:
        ...
global___BinaryDataByFilterRequest = BinaryDataByFilterRequest

class BinaryDataByFilterResponse(google.protobuf.message.Message):
    """BinaryDataByFilterResponse provides the data and metadata of binary (image + file) data when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int

    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BinaryData]:
        ...
    count: builtins.int

    def __init__(self, *, data: collections.abc.Iterable[global___BinaryData] | None=..., count: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['count', b'count', 'data', b'data']) -> None:
        ...
global___BinaryDataByFilterResponse = BinaryDataByFilterResponse

class BinaryDataByIDsRequest(google.protobuf.message.Message):
    """BinaryDataByFilterRequest requests the data and metadata of binary (image + file) data by file ids"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FILE_IDS_FIELD_NUMBER: builtins.int
    INCLUDE_BINARY_FIELD_NUMBER: builtins.int

    @property
    def file_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...
    include_binary: builtins.bool
    'by default'

    def __init__(self, *, file_ids: collections.abc.Iterable[builtins.str] | None=..., include_binary: builtins.bool=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['file_ids', b'file_ids', 'include_binary', b'include_binary']) -> None:
        ...
global___BinaryDataByIDsRequest = BinaryDataByIDsRequest

class BinaryDataByIDsResponse(google.protobuf.message.Message):
    """BinaryDataByIDsResponse provides the data and metadata of binary (image + file) data when a filter is provided"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATA_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int

    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BinaryData]:
        ...
    count: builtins.int

    def __init__(self, *, data: collections.abc.Iterable[global___BinaryData] | None=..., count: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['count', b'count', 'data', b'data']) -> None:
        ...
global___BinaryDataByIDsResponse = BinaryDataByIDsResponse

class BinaryMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    CAPTURE_METADATA_FIELD_NUMBER: builtins.int
    TIME_REQUESTED_FIELD_NUMBER: builtins.int
    TIME_RECEIVED_FIELD_NUMBER: builtins.int
    FILE_NAME_FIELD_NUMBER: builtins.int
    FILE_EXT_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    id: builtins.str

    @property
    def capture_metadata(self) -> global___CaptureMetadata:
        ...

    @property
    def time_requested(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...

    @property
    def time_received(self) -> google.protobuf.timestamp_pb2.Timestamp:
        ...
    file_name: builtins.str
    file_ext: builtins.str
    uri: builtins.str

    def __init__(self, *, id: builtins.str=..., capture_metadata: global___CaptureMetadata | None=..., time_requested: google.protobuf.timestamp_pb2.Timestamp | None=..., time_received: google.protobuf.timestamp_pb2.Timestamp | None=..., file_name: builtins.str=..., file_ext: builtins.str=..., uri: builtins.str=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['capture_metadata', b'capture_metadata', 'time_received', b'time_received', 'time_requested', b'time_requested']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['capture_metadata', b'capture_metadata', 'file_ext', b'file_ext', 'file_name', b'file_name', 'id', b'id', 'time_received', b'time_received', 'time_requested', b'time_requested', 'uri', b'uri']) -> None:
        ...
global___BinaryMetadata = BinaryMetadata