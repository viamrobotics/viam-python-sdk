"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import sys
import typing
if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _LabelType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _LabelTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LabelType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    LABEL_TYPE_UNSPECIFIED: _LabelType.ValueType
    LABEL_TYPE_TENSOR_VALUE: _LabelType.ValueType
    'the value of the arrays/tensor is the label index'
    LABEL_TYPE_TENSOR_AXIS: _LabelType.ValueType
    'the position of the tensor value in the axis is the label index'

class LabelType(_LabelType, metaclass=_LabelTypeEnumTypeWrapper):
    ...
LABEL_TYPE_UNSPECIFIED: LabelType.ValueType
LABEL_TYPE_TENSOR_VALUE: LabelType.ValueType
'the value of the arrays/tensor is the label index'
LABEL_TYPE_TENSOR_AXIS: LabelType.ValueType
'the position of the tensor value in the axis is the label index'
global___LabelType = LabelType

@typing_extensions.final
class InferRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    INPUT_DATA_FIELD_NUMBER: builtins.int
    name: builtins.str
    'name of the model service'

    @property
    def input_data(self) -> google.protobuf.struct_pb2.Struct:
        """this is a struct of input arrays/tensors as specified in the metadata"""

    def __init__(self, *, name: builtins.str=..., input_data: google.protobuf.struct_pb2.Struct | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['input_data', b'input_data']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['input_data', b'input_data', 'name', b'name']) -> None:
        ...
global___InferRequest = InferRequest

@typing_extensions.final
class InferResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OUTPUT_DATA_FIELD_NUMBER: builtins.int

    @property
    def output_data(self) -> google.protobuf.struct_pb2.Struct:
        """this is a struct of output arrays/tensors as specified in the metadata"""

    def __init__(self, *, output_data: google.protobuf.struct_pb2.Struct | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['output_data', b'output_data']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['output_data', b'output_data']) -> None:
        ...
global___InferResponse = InferResponse

@typing_extensions.final
class MetadataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    'name of the model service'

    def __init__(self, *, name: builtins.str=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['name', b'name']) -> None:
        ...
global___MetadataRequest = MetadataRequest

@typing_extensions.final
class MetadataResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    METADATA_FIELD_NUMBER: builtins.int

    @property
    def metadata(self) -> global___Metadata:
        """this is the metadata associated with the ML model"""

    def __init__(self, *, metadata: global___Metadata | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['metadata', b'metadata']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['metadata', b'metadata']) -> None:
        ...
global___MetadataResponse = MetadataResponse

@typing_extensions.final
class Metadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    INPUT_INFO_FIELD_NUMBER: builtins.int
    OUTPUT_INFO_FIELD_NUMBER: builtins.int
    name: builtins.str
    'name of the model'
    type: builtins.str
    'type of model e.g. object_detector, text_classifier'
    description: builtins.str
    'description of the model'

    @property
    def input_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TensorInfo]:
        """the necessary input arrays/tensors for an inference, order matters"""

    @property
    def output_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TensorInfo]:
        """the output arrays/tensors of the model, order matters"""

    def __init__(self, *, name: builtins.str=..., type: builtins.str=..., description: builtins.str=..., input_info: collections.abc.Iterable[global___TensorInfo] | None=..., output_info: collections.abc.Iterable[global___TensorInfo] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['description', b'description', 'input_info', b'input_info', 'name', b'name', 'output_info', b'output_info', 'type', b'type']) -> None:
        ...
global___Metadata = Metadata

@typing_extensions.final
class TensorInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DATA_TYPE_FIELD_NUMBER: builtins.int
    SHAPE_FIELD_NUMBER: builtins.int
    ASSOCIATED_FILES_FIELD_NUMBER: builtins.int
    EXTRA_FIELD_NUMBER: builtins.int
    name: builtins.str
    'name of the data in the array/tensor'
    description: builtins.str
    'description of the data in the array/tensor'
    data_type: builtins.str
    'data type of the array/tensor, e.g. float32, float64, uint8'

    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """shape of the array/tensor (-1 for unknown)"""

    @property
    def associated_files(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___File]:
        """files associated with the array/tensor, like for category labels"""

    @property
    def extra(self) -> google.protobuf.struct_pb2.Struct:
        """anything else you want to say"""

    def __init__(self, *, name: builtins.str=..., description: builtins.str=..., data_type: builtins.str=..., shape: collections.abc.Iterable[builtins.int] | None=..., associated_files: collections.abc.Iterable[global___File] | None=..., extra: google.protobuf.struct_pb2.Struct | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['extra', b'extra']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['associated_files', b'associated_files', 'data_type', b'data_type', 'description', b'description', 'extra', b'extra', 'name', b'name', 'shape', b'shape']) -> None:
        ...
global___TensorInfo = TensorInfo

@typing_extensions.final
class File(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABEL_TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    'name of the file, with file extension'
    description: builtins.str
    'description of what the file contains'
    label_type: global___LabelType.ValueType
    'How to associate the arrays/tensors to the labels in the file'

    def __init__(self, *, name: builtins.str=..., description: builtins.str=..., label_type: global___LabelType.ValueType=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['description', b'description', 'label_type', b'label_type', 'name', b'name']) -> None:
        ...
global___File = File