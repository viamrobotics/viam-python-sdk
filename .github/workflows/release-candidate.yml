name: Release Candidate

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The type of version bump. All versions will have `rc*` appended. Use `prerelease` to bump the `rc` version only. Use `-s` for no change.'
        type: choice
        required: true
        default: '-s'
        options:
        - major
        - minor
        - patch
        - prerelease
        - '-s'

jobs:
  prepare:
    if: github.repository_owner == 'viamrobotics'
    runs-on: [self-hosted, x64]
    container:
      image: ghcr.io/viamrobotics/canon:amd64
    outputs:
      rc_version: ${{ steps.bump_version.outputs.rc_version }}
      version: ${{ steps.bump_version.outputs.version }}
    steps:
      - name: Output Event
        run: echo "${{ toJSON(github.event) }}"

      - name: Check if organization member
        id: is_organization_member
        uses: jamessingleton/is-organization-member@1.0.1
        with:
          organization: viamrobotics
          username: ${{ github.actor }}
          token:  ${{ secrets.GITHUB_TOKEN }}

      - name: Cancelling - user not part of organization
        uses: andymckay/cancel-action@0.2
        if: |
          steps.is_organization_member.outputs.result == 'false'

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install Package
        run: poetry install

      - name: Clean Format Test
        run: make clean better_imports format test

      - name: Bump Version
        id: bump_version
        run: |
          if [[ $(poetry version) == *"rc"* ]]; then
            poetry version prerelease
          else
            poetry version "$(poetry version ${{ inputs.version }} -s --dry-run)"rc1
          fi
          echo "SDK_RC_VERSION=$(poetry version -s)" >> $GITHUB_ENV
          echo "SDK_VERSION=$(poetry version ${{ inputs.version }} -s --dry-run)" >> $GITHUB_ENV
          echo "rc_version=$(poetry version -s)" >> $GITHUB_OUTPUT
          echo "version=$(poetry version ${{ inputs.version }} -s --dry-run)" >> $GITHUB_OUTPUT

      - name: Check if release exists
        uses: cardinalby/git-get-release-action@1.2.4
        id: release_exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseName: v${{ env.RC_SDK_VERSION }}
          doNotFailIfNotFound: 'true'

      - name: Cancelling - release already exists
        uses: andymckay/cancel-action@0.2
        if: |
          steps.release_exists.outputs.id != ''

      - name: Add + Commit + Open PR
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Bump version to ${{ env.RC_SDK_VERSION }}
          branch: rc-${{ env.SDK_VERSION }}
          delete-branch: false
          base: main
          title: rc-${{ env.SDK_VERSION }}
          body: This is an auto-generated PR to merge the rc branch back into main upon successful release.

  build:
    needs: prepare
    if: github.repository_owner == 'viamrobotics'
    runs-on: [self-hosted, x64]
    container:
      image: ghcr.io/viamrobotics/canon:amd64
    strategy:
      matrix:
        include:
          - arch: macosx_x86_64
            ext: dylib
            whl: macosx_10_16_x86_64
          - arch: macosx_arm64
            ext: dylib
            whl: macosx_11_0_arm64
          - arch: linux_aarch64
            ext: so
            whl: manylinux2014_aarch64
          - arch: linux_x86_64
            ext: so
            whl: manylinux2014_x86_64
          - arch: linux_armv6l
            ext: so
            whl: linux_armv6l
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: rc-${{ needs.prepare.outputs.version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Download binary
        run: curl -sL -o src/viam/rpc/libviam_rust_utils.${{ matrix.ext }} https://github.com/viamrobotics/rust-utils/releases/latest/download/libviam_rust_utils-${{ matrix.arch }}.${{ matrix.ext }}

      - name: Build
        run: poetry build -f wheel

      - name: Rename
        run: mv dist/viam_sdk-$(poetry run python -c "import viam; print(viam.__version__)")-py3-none-any.whl dist/viam_sdk-$(poetry run python -c "import viam; print(viam.__version__)")-py3-none-${{ matrix.whl }}.whl

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  release:
    needs: [prepare, build]
    if: github.repository_owner == 'viamrobotics'
    runs-on: [self-hosted, x64]
    container:
      image: ghcr.io/viamrobotics/canon:amd64

    steps:
      - uses: actions/download-artifact@v3

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.prepare.outputs.rc_version }}
          files: dist/*
          draft: false
          prerelease: true
          fail_on_unmatched_files: true
          target_commitish: rc-${{ needs.prepare.outputs.version }}
