name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The type of version bump. Select "-s" for no version change. See https://python-poetry.org/docs/cli/#version'
        type: choice
        required: true
        default: '-s'
        options:
        - major
        - minor
        - patch
        - premajor
        - preminor
        - prepatch
        - prerelease
        - '-s'

jobs:
  prepare:
    if: github.repository_owner == 'viamrobotics' && github.ref == 'refs/heads/main' && contains(fromJson('["njooma"]'), github.actor)
    runs-on: [self-hosted, x64]
    container:
      image: ghcr.io/viamrobotics/canon:amd64
    outputs:
      sha: ${{ steps.commit.outputs.commit_long_sha }}
      version: ${{ steps.bump_version.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Clean Format Test
        run: make clean better_imports format test

      - name: Bump Version
        id: bump_version
        run: |
          poetry version ${{ inputs.version }}
          echo "SDK_VERSION=$(poetry version -s)" >> $GITHUB_ENV
          echo "::set-output name=version::$(poetry version -s)"

      - name: Commit + Push
        id: commit
        uses: EndBug/add-and-commit@v9.0.0
        with:
          default_author: github_actions
          message: Bumping version to v${{ env.SDK_VERSION }} [skip ci]

  build:
    needs: prepare
    if: github.repository_owner == 'viamrobotics' && github.ref == 'refs/heads/main'
    runs-on: [self-hosted, x64]
    container:
      image: ghcr.io/viamrobotics/canon:amd64
    strategy:
      matrix:
        include:
          - arch: macosx_x86_64
            ext: dylib
            whl: macosx_11_0_x86_64
          - arch: macosx_arm64
            ext: dylib
            whl: macosx_11_0_arm64
          - arch: linux_aarch64
            ext: so
            whl: manylinux2014_aarch64
          - arch: linux_x86_64
            ext: so
            whl: manylinux2014_x86_64
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.prepare.outputs.sha }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Download binary
        run: curl -sL -o src/viam/rpc/libviam.${{ matrix.ext }} https://github.com/viamrobotics/viam-rust-sdk/releases/latest/download/libviam-${{ matrix.arch }}.${{ matrix.ext }}

      - name: Build
        run: poetry build -f wheel

      - name: Rename
        run: mv dist/viam_sdk-$(poetry run python -c "import viam; print(viam.__version__)")-py3-none-any.whl dist/viam_sdk-$(poetry run python -c "import viam; print(viam.__version__)")-py3-none-${{ matrix.whl }}.whl

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  release:
    needs: [prepare, build]
    if: github.repository_owner == 'viamrobotics' && github.ref == 'refs/heads/main'
    runs-on: [self-hosted, x64]
    container:
      image: ghcr.io/viamrobotics/canon:amd64

    steps:
      - uses: actions/download-artifact@v3

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.prepare.outputs.version }}
          files: dist/*
          draft: true
          prerelease: ${{ contains(inputs.version, 'pre') }}
          fail_on_unmatched_files: true
