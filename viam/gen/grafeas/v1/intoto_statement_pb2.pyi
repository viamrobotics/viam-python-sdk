"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import grafeas.v1.intoto_provenance_pb2
import grafeas.v1.slsa_provenance_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class InTotoStatement(google.protobuf.message.Message):
    """Spec defined at
    https://github.com/in-toto/attestation/tree/main/spec#statement The
    serialized InTotoStatement will be stored as Envelope.payload.
    Envelope.payloadType is always "application/vnd.in-toto+json".
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    SUBJECT_FIELD_NUMBER: builtins.int
    PREDICATE_TYPE_FIELD_NUMBER: builtins.int
    PROVENANCE_FIELD_NUMBER: builtins.int
    SLSA_PROVENANCE_FIELD_NUMBER: builtins.int
    type: typing.Text = ...
    """Always `https://in-toto.io/Statement/v0.1`."""

    @property
    def subject(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Subject]: ...
    predicate_type: typing.Text = ...
    """`https://slsa.dev/provenance/v0.1` for SlsaProvenance."""

    @property
    def provenance(self) -> grafeas.v1.intoto_provenance_pb2.InTotoProvenance: ...
    @property
    def slsa_provenance(self) -> grafeas.v1.slsa_provenance_pb2.SlsaProvenance: ...
    def __init__(self,
        *,
        type : typing.Text = ...,
        subject : typing.Optional[typing.Iterable[global___Subject]] = ...,
        predicate_type : typing.Text = ...,
        provenance : typing.Optional[grafeas.v1.intoto_provenance_pb2.InTotoProvenance] = ...,
        slsa_provenance : typing.Optional[grafeas.v1.slsa_provenance_pb2.SlsaProvenance] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["predicate",b"predicate","provenance",b"provenance","slsa_provenance",b"slsa_provenance"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["predicate",b"predicate","predicate_type",b"predicate_type","provenance",b"provenance","slsa_provenance",b"slsa_provenance","subject",b"subject","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["predicate",b"predicate"]) -> typing.Optional[typing_extensions.Literal["provenance","slsa_provenance"]]: ...
global___InTotoStatement = InTotoStatement

class Subject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class DigestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DIGEST_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    @property
    def digest(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """`"<ALGORITHM>": "<HEX_VALUE>"`
        Algorithms can be e.g. sha256, sha512
        See
        https://github.com/in-toto/attestation/blob/main/spec/field_types.md#DigestSet
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        digest : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["digest",b"digest","name",b"name"]) -> None: ...
global___Subject = Subject
