"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class GenerateAccessTokenRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DELEGATES_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    LIFETIME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of the service account for which the credentials
    are requested, in the following format:
    `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard
    character is required; replacing it with a project ID is invalid.
    """

    @property
    def delegates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The sequence of service accounts in a delegation chain. Each service
        account must be granted the `roles/iam.serviceAccountTokenCreator` role
        on its next service account in the chain. The last service account in the
        chain must be granted the `roles/iam.serviceAccountTokenCreator` role
        on the service account that is specified in the `name` field of the
        request.

        The delegates must have the following format:
        `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard
        character is required; replacing it with a project ID is invalid.
        """
        pass
    @property
    def scope(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. Code to identify the scopes to be included in the OAuth 2.0 access token.
        See https://developers.google.com/identity/protocols/googlescopes for more
        information.
        At least one value required.
        """
        pass
    @property
    def lifetime(self) -> google.protobuf.duration_pb2.Duration:
        """The desired lifetime duration of the access token in seconds.
        Must be set to a value less than or equal to 3600 (1 hour). If a value is
        not specified, the token's lifetime will be set to a default value of one
        hour.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        delegates : typing.Optional[typing.Iterable[typing.Text]] = ...,
        scope : typing.Optional[typing.Iterable[typing.Text]] = ...,
        lifetime : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["lifetime",b"lifetime"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["delegates",b"delegates","lifetime",b"lifetime","name",b"name","scope",b"scope"]) -> None: ...
global___GenerateAccessTokenRequest = GenerateAccessTokenRequest

class GenerateAccessTokenResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    EXPIRE_TIME_FIELD_NUMBER: builtins.int
    access_token: typing.Text = ...
    """The OAuth 2.0 access token."""

    @property
    def expire_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Token expiration time.
        The expiration time is always set.
        """
        pass
    def __init__(self,
        *,
        access_token : typing.Text = ...,
        expire_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["expire_time",b"expire_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_token",b"access_token","expire_time",b"expire_time"]) -> None: ...
global___GenerateAccessTokenResponse = GenerateAccessTokenResponse

class SignBlobRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DELEGATES_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of the service account for which the credentials
    are requested, in the following format:
    `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard
    character is required; replacing it with a project ID is invalid.
    """

    @property
    def delegates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The sequence of service accounts in a delegation chain. Each service
        account must be granted the `roles/iam.serviceAccountTokenCreator` role
        on its next service account in the chain. The last service account in the
        chain must be granted the `roles/iam.serviceAccountTokenCreator` role
        on the service account that is specified in the `name` field of the
        request.

        The delegates must have the following format:
        `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard
        character is required; replacing it with a project ID is invalid.
        """
        pass
    payload: builtins.bytes = ...
    """Required. The bytes to sign."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        delegates : typing.Optional[typing.Iterable[typing.Text]] = ...,
        payload : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["delegates",b"delegates","name",b"name","payload",b"payload"]) -> None: ...
global___SignBlobRequest = SignBlobRequest

class SignBlobResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_ID_FIELD_NUMBER: builtins.int
    SIGNED_BLOB_FIELD_NUMBER: builtins.int
    key_id: typing.Text = ...
    """The ID of the key used to sign the blob."""

    signed_blob: builtins.bytes = ...
    """The signed blob."""

    def __init__(self,
        *,
        key_id : typing.Text = ...,
        signed_blob : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_id",b"key_id","signed_blob",b"signed_blob"]) -> None: ...
global___SignBlobResponse = SignBlobResponse

class SignJwtRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DELEGATES_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of the service account for which the credentials
    are requested, in the following format:
    `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard
    character is required; replacing it with a project ID is invalid.
    """

    @property
    def delegates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The sequence of service accounts in a delegation chain. Each service
        account must be granted the `roles/iam.serviceAccountTokenCreator` role
        on its next service account in the chain. The last service account in the
        chain must be granted the `roles/iam.serviceAccountTokenCreator` role
        on the service account that is specified in the `name` field of the
        request.

        The delegates must have the following format:
        `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard
        character is required; replacing it with a project ID is invalid.
        """
        pass
    payload: typing.Text = ...
    """Required. The JWT payload to sign: a JSON object that contains a JWT Claims Set."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        delegates : typing.Optional[typing.Iterable[typing.Text]] = ...,
        payload : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["delegates",b"delegates","name",b"name","payload",b"payload"]) -> None: ...
global___SignJwtRequest = SignJwtRequest

class SignJwtResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_ID_FIELD_NUMBER: builtins.int
    SIGNED_JWT_FIELD_NUMBER: builtins.int
    key_id: typing.Text = ...
    """The ID of the key used to sign the JWT."""

    signed_jwt: typing.Text = ...
    """The signed JWT."""

    def __init__(self,
        *,
        key_id : typing.Text = ...,
        signed_jwt : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key_id",b"key_id","signed_jwt",b"signed_jwt"]) -> None: ...
global___SignJwtResponse = SignJwtResponse

class GenerateIdTokenRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DELEGATES_FIELD_NUMBER: builtins.int
    AUDIENCE_FIELD_NUMBER: builtins.int
    INCLUDE_EMAIL_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of the service account for which the credentials
    are requested, in the following format:
    `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard
    character is required; replacing it with a project ID is invalid.
    """

    @property
    def delegates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The sequence of service accounts in a delegation chain. Each service
        account must be granted the `roles/iam.serviceAccountTokenCreator` role
        on its next service account in the chain. The last service account in the
        chain must be granted the `roles/iam.serviceAccountTokenCreator` role
        on the service account that is specified in the `name` field of the
        request.

        The delegates must have the following format:
        `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard
        character is required; replacing it with a project ID is invalid.
        """
        pass
    audience: typing.Text = ...
    """Required. The audience for the token, such as the API or account that this token
    grants access to.
    """

    include_email: builtins.bool = ...
    """Include the service account email in the token. If set to `true`, the
    token will contain `email` and `email_verified` claims.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        delegates : typing.Optional[typing.Iterable[typing.Text]] = ...,
        audience : typing.Text = ...,
        include_email : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["audience",b"audience","delegates",b"delegates","include_email",b"include_email","name",b"name"]) -> None: ...
global___GenerateIdTokenRequest = GenerateIdTokenRequest

class GenerateIdTokenResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOKEN_FIELD_NUMBER: builtins.int
    token: typing.Text = ...
    """The OpenId Connect ID token."""

    def __init__(self,
        *,
        token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["token",b"token"]) -> None: ...
global___GenerateIdTokenResponse = GenerateIdTokenResponse
