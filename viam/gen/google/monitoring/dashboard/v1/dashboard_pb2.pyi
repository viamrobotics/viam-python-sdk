"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.monitoring.dashboard.v1.layouts_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Dashboard(google.protobuf.message.Message):
    """A Google Stackdriver dashboard. Dashboards define the content and layout
    of pages in the Stackdriver web application.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    GRID_LAYOUT_FIELD_NUMBER: builtins.int
    MOSAIC_LAYOUT_FIELD_NUMBER: builtins.int
    ROW_LAYOUT_FIELD_NUMBER: builtins.int
    COLUMN_LAYOUT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Immutable. The resource name of the dashboard."""

    display_name: typing.Text = ...
    """Required. The mutable, human-readable name."""

    etag: typing.Text = ...
    """`etag` is used for optimistic concurrency control as a way to help
    prevent simultaneous updates of a policy from overwriting each other.
    An `etag` is returned in the response to `GetDashboard`, and
    users are expected to put that etag in the request to `UpdateDashboard` to
    ensure that their change will be applied to the same version of the
    Dashboard configuration. The field should not be passed during
    dashboard creation.
    """

    @property
    def grid_layout(self) -> google.monitoring.dashboard.v1.layouts_pb2.GridLayout:
        """Content is arranged with a basic layout that re-flows a simple list of
        informational elements like widgets or tiles.
        """
        pass
    @property
    def mosaic_layout(self) -> google.monitoring.dashboard.v1.layouts_pb2.MosaicLayout:
        """The content is arranged as a grid of tiles, with each content widget
        occupying one or more grid blocks.
        """
        pass
    @property
    def row_layout(self) -> google.monitoring.dashboard.v1.layouts_pb2.RowLayout:
        """The content is divided into equally spaced rows and the widgets are
        arranged horizontally.
        """
        pass
    @property
    def column_layout(self) -> google.monitoring.dashboard.v1.layouts_pb2.ColumnLayout:
        """The content is divided into equally spaced columns and the widgets are
        arranged vertically.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        etag : typing.Text = ...,
        grid_layout : typing.Optional[google.monitoring.dashboard.v1.layouts_pb2.GridLayout] = ...,
        mosaic_layout : typing.Optional[google.monitoring.dashboard.v1.layouts_pb2.MosaicLayout] = ...,
        row_layout : typing.Optional[google.monitoring.dashboard.v1.layouts_pb2.RowLayout] = ...,
        column_layout : typing.Optional[google.monitoring.dashboard.v1.layouts_pb2.ColumnLayout] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["column_layout",b"column_layout","grid_layout",b"grid_layout","layout",b"layout","mosaic_layout",b"mosaic_layout","row_layout",b"row_layout"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["column_layout",b"column_layout","display_name",b"display_name","etag",b"etag","grid_layout",b"grid_layout","layout",b"layout","mosaic_layout",b"mosaic_layout","name",b"name","row_layout",b"row_layout"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["layout",b"layout"]) -> typing.Optional[typing_extensions.Literal["grid_layout","mosaic_layout","row_layout","column_layout"]]: ...
global___Dashboard = Dashboard
