"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.monitoring.v3.alert_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CreateAlertPolicyRequest(google.protobuf.message.Message):
    """The protocol for the `CreateAlertPolicy` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ALERT_POLICY_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The [project](https://cloud.google.com/monitoring/api/v3#project_name) in
    which to create the alerting policy. The format is:

        projects/[PROJECT_ID_OR_NUMBER]

    Note that this field names the parent container in which the alerting
    policy will be written, not the name of the created policy. |name| must be
    a host project of a workspace, otherwise INVALID_ARGUMENT error will
    return. The alerting policy that is returned will have a name that contains
    a normalized representation of this name as a prefix but adds a suffix of
    the form `/alertPolicies/[ALERT_POLICY_ID]`, identifying the policy in the
    container.
    """

    @property
    def alert_policy(self) -> google.monitoring.v3.alert_pb2.AlertPolicy:
        """Required. The requested alerting policy. You should omit the `name` field in this
        policy. The name will be returned in the new policy, including
        a new `[ALERT_POLICY_ID]` value.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        alert_policy : typing.Optional[google.monitoring.v3.alert_pb2.AlertPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["alert_policy",b"alert_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["alert_policy",b"alert_policy","name",b"name"]) -> None: ...
global___CreateAlertPolicyRequest = CreateAlertPolicyRequest

class GetAlertPolicyRequest(google.protobuf.message.Message):
    """The protocol for the `GetAlertPolicy` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The alerting policy to retrieve. The format is:

        projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetAlertPolicyRequest = GetAlertPolicyRequest

class ListAlertPoliciesRequest(google.protobuf.message.Message):
    """The protocol for the `ListAlertPolicies` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The [project](https://cloud.google.com/monitoring/api/v3#project_name)
    whose alert policies are to be listed. The format is:

        projects/[PROJECT_ID_OR_NUMBER]

    Note that this field names the parent container in which the alerting
    policies to be listed are stored. To retrieve a single alerting policy
    by name, use the
    [GetAlertPolicy][google.monitoring.v3.AlertPolicyService.GetAlertPolicy]
    operation, instead.
    """

    filter: typing.Text = ...
    """If provided, this field specifies the criteria that must be met by
    alert policies to be included in the response.

    For more details, see [sorting and
    filtering](https://cloud.google.com/monitoring/api/v3/sorting-and-filtering).
    """

    order_by: typing.Text = ...
    """A comma-separated list of fields by which to sort the result. Supports
    the same set of field references as the `filter` field. Entries can be
    prefixed with a minus sign to sort by the field in descending order.

    For more details, see [sorting and
    filtering](https://cloud.google.com/monitoring/api/v3/sorting-and-filtering).
    """

    page_size: builtins.int = ...
    """The maximum number of results to return in a single response."""

    page_token: typing.Text = ...
    """If this field is not empty then it must contain the `nextPageToken` value
    returned by a previous call to this method.  Using this field causes the
    method to return more results from the previous method call.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","name",b"name","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListAlertPoliciesRequest = ListAlertPoliciesRequest

class ListAlertPoliciesResponse(google.protobuf.message.Message):
    """The protocol for the `ListAlertPolicies` response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ALERT_POLICIES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_FIELD_NUMBER: builtins.int
    @property
    def alert_policies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.monitoring.v3.alert_pb2.AlertPolicy]:
        """The returned alert policies."""
        pass
    next_page_token: typing.Text = ...
    """If there might be more results than were returned, then this field is set
    to a non-empty value. To see the additional results,
    use that value as `page_token` in the next call to this method.
    """

    total_size: builtins.int = ...
    """The total number of alert policies in all pages. This number is only an
    estimate, and may change in subsequent pages. https://aip.dev/158
    """

    def __init__(self,
        *,
        alert_policies : typing.Optional[typing.Iterable[google.monitoring.v3.alert_pb2.AlertPolicy]] = ...,
        next_page_token : typing.Text = ...,
        total_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alert_policies",b"alert_policies","next_page_token",b"next_page_token","total_size",b"total_size"]) -> None: ...
global___ListAlertPoliciesResponse = ListAlertPoliciesResponse

class UpdateAlertPolicyRequest(google.protobuf.message.Message):
    """The protocol for the `UpdateAlertPolicy` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    ALERT_POLICY_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. A list of alerting policy field names. If this field is not
        empty, each listed field in the existing alerting policy is set to the
        value of the corresponding field in the supplied policy (`alert_policy`),
        or to the field's default value if the field is not in the supplied
        alerting policy.  Fields not listed retain their previous value.

        Examples of valid field masks include `display_name`, `documentation`,
        `documentation.content`, `documentation.mime_type`, `user_labels`,
        `user_label.nameofkey`, `enabled`, `conditions`, `combiner`, etc.

        If this field is empty, then the supplied alerting policy replaces the
        existing policy. It is the same as deleting the existing policy and
        adding the supplied policy, except for the following:

        +   The new policy will have the same `[ALERT_POLICY_ID]` as the former
            policy. This gives you continuity with the former policy in your
            notifications and incidents.
        +   Conditions in the new policy will keep their former `[CONDITION_ID]` if
            the supplied condition includes the `name` field with that
            `[CONDITION_ID]`. If the supplied condition omits the `name` field,
            then a new `[CONDITION_ID]` is created.
        """
        pass
    @property
    def alert_policy(self) -> google.monitoring.v3.alert_pb2.AlertPolicy:
        """Required. The updated alerting policy or the updated values for the
        fields listed in `update_mask`.
        If `update_mask` is not empty, any fields in this policy that are
        not in `update_mask` are ignored.
        """
        pass
    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        alert_policy : typing.Optional[google.monitoring.v3.alert_pb2.AlertPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["alert_policy",b"alert_policy","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["alert_policy",b"alert_policy","update_mask",b"update_mask"]) -> None: ...
global___UpdateAlertPolicyRequest = UpdateAlertPolicyRequest

class DeleteAlertPolicyRequest(google.protobuf.message.Message):
    """The protocol for the `DeleteAlertPolicy` request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The alerting policy to delete. The format is:

        projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]

    For more information, see [AlertPolicy][google.monitoring.v3.AlertPolicy].
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteAlertPolicyRequest = DeleteAlertPolicyRequest
