# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/streetview/publish/v1/streetview_publish.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.longrunning.operations_pb2
import google.protobuf.empty_pb2
import google.streetview.publish.v1.resources_pb2
import google.streetview.publish.v1.rpcmessages_pb2
import google.streetview.publish.v1.streetview_publish_pb2


class StreetViewPublishServiceBase(abc.ABC):

    @abc.abstractmethod
    async def StartUpload(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, google.streetview.publish.v1.resources_pb2.UploadRef]') -> None:
        pass

    @abc.abstractmethod
    async def CreatePhoto(self, stream: 'grpclib.server.Stream[google.streetview.publish.v1.rpcmessages_pb2.CreatePhotoRequest, google.streetview.publish.v1.resources_pb2.Photo]') -> None:
        pass

    @abc.abstractmethod
    async def GetPhoto(self, stream: 'grpclib.server.Stream[google.streetview.publish.v1.rpcmessages_pb2.GetPhotoRequest, google.streetview.publish.v1.resources_pb2.Photo]') -> None:
        pass

    @abc.abstractmethod
    async def BatchGetPhotos(self, stream: 'grpclib.server.Stream[google.streetview.publish.v1.rpcmessages_pb2.BatchGetPhotosRequest, google.streetview.publish.v1.rpcmessages_pb2.BatchGetPhotosResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListPhotos(self, stream: 'grpclib.server.Stream[google.streetview.publish.v1.rpcmessages_pb2.ListPhotosRequest, google.streetview.publish.v1.rpcmessages_pb2.ListPhotosResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdatePhoto(self, stream: 'grpclib.server.Stream[google.streetview.publish.v1.rpcmessages_pb2.UpdatePhotoRequest, google.streetview.publish.v1.resources_pb2.Photo]') -> None:
        pass

    @abc.abstractmethod
    async def BatchUpdatePhotos(self, stream: 'grpclib.server.Stream[google.streetview.publish.v1.rpcmessages_pb2.BatchUpdatePhotosRequest, google.streetview.publish.v1.rpcmessages_pb2.BatchUpdatePhotosResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeletePhoto(self, stream: 'grpclib.server.Stream[google.streetview.publish.v1.rpcmessages_pb2.DeletePhotoRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def BatchDeletePhotos(self, stream: 'grpclib.server.Stream[google.streetview.publish.v1.rpcmessages_pb2.BatchDeletePhotosRequest, google.streetview.publish.v1.rpcmessages_pb2.BatchDeletePhotosResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.streetview.publish.v1.StreetViewPublishService/StartUpload': grpclib.const.Handler(
                self.StartUpload,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.protobuf.empty_pb2.Empty,
                google.streetview.publish.v1.resources_pb2.UploadRef,
            ),
            '/google.streetview.publish.v1.StreetViewPublishService/CreatePhoto': grpclib.const.Handler(
                self.CreatePhoto,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.streetview.publish.v1.rpcmessages_pb2.CreatePhotoRequest,
                google.streetview.publish.v1.resources_pb2.Photo,
            ),
            '/google.streetview.publish.v1.StreetViewPublishService/GetPhoto': grpclib.const.Handler(
                self.GetPhoto,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.streetview.publish.v1.rpcmessages_pb2.GetPhotoRequest,
                google.streetview.publish.v1.resources_pb2.Photo,
            ),
            '/google.streetview.publish.v1.StreetViewPublishService/BatchGetPhotos': grpclib.const.Handler(
                self.BatchGetPhotos,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.streetview.publish.v1.rpcmessages_pb2.BatchGetPhotosRequest,
                google.streetview.publish.v1.rpcmessages_pb2.BatchGetPhotosResponse,
            ),
            '/google.streetview.publish.v1.StreetViewPublishService/ListPhotos': grpclib.const.Handler(
                self.ListPhotos,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.streetview.publish.v1.rpcmessages_pb2.ListPhotosRequest,
                google.streetview.publish.v1.rpcmessages_pb2.ListPhotosResponse,
            ),
            '/google.streetview.publish.v1.StreetViewPublishService/UpdatePhoto': grpclib.const.Handler(
                self.UpdatePhoto,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.streetview.publish.v1.rpcmessages_pb2.UpdatePhotoRequest,
                google.streetview.publish.v1.resources_pb2.Photo,
            ),
            '/google.streetview.publish.v1.StreetViewPublishService/BatchUpdatePhotos': grpclib.const.Handler(
                self.BatchUpdatePhotos,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.streetview.publish.v1.rpcmessages_pb2.BatchUpdatePhotosRequest,
                google.streetview.publish.v1.rpcmessages_pb2.BatchUpdatePhotosResponse,
            ),
            '/google.streetview.publish.v1.StreetViewPublishService/DeletePhoto': grpclib.const.Handler(
                self.DeletePhoto,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.streetview.publish.v1.rpcmessages_pb2.DeletePhotoRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.streetview.publish.v1.StreetViewPublishService/BatchDeletePhotos': grpclib.const.Handler(
                self.BatchDeletePhotos,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.streetview.publish.v1.rpcmessages_pb2.BatchDeletePhotosRequest,
                google.streetview.publish.v1.rpcmessages_pb2.BatchDeletePhotosResponse,
            ),
        }


class StreetViewPublishServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.StartUpload = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.streetview.publish.v1.StreetViewPublishService/StartUpload',
            google.protobuf.empty_pb2.Empty,
            google.streetview.publish.v1.resources_pb2.UploadRef,
        )
        self.CreatePhoto = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.streetview.publish.v1.StreetViewPublishService/CreatePhoto',
            google.streetview.publish.v1.rpcmessages_pb2.CreatePhotoRequest,
            google.streetview.publish.v1.resources_pb2.Photo,
        )
        self.GetPhoto = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.streetview.publish.v1.StreetViewPublishService/GetPhoto',
            google.streetview.publish.v1.rpcmessages_pb2.GetPhotoRequest,
            google.streetview.publish.v1.resources_pb2.Photo,
        )
        self.BatchGetPhotos = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.streetview.publish.v1.StreetViewPublishService/BatchGetPhotos',
            google.streetview.publish.v1.rpcmessages_pb2.BatchGetPhotosRequest,
            google.streetview.publish.v1.rpcmessages_pb2.BatchGetPhotosResponse,
        )
        self.ListPhotos = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.streetview.publish.v1.StreetViewPublishService/ListPhotos',
            google.streetview.publish.v1.rpcmessages_pb2.ListPhotosRequest,
            google.streetview.publish.v1.rpcmessages_pb2.ListPhotosResponse,
        )
        self.UpdatePhoto = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.streetview.publish.v1.StreetViewPublishService/UpdatePhoto',
            google.streetview.publish.v1.rpcmessages_pb2.UpdatePhotoRequest,
            google.streetview.publish.v1.resources_pb2.Photo,
        )
        self.BatchUpdatePhotos = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.streetview.publish.v1.StreetViewPublishService/BatchUpdatePhotos',
            google.streetview.publish.v1.rpcmessages_pb2.BatchUpdatePhotosRequest,
            google.streetview.publish.v1.rpcmessages_pb2.BatchUpdatePhotosResponse,
        )
        self.DeletePhoto = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.streetview.publish.v1.StreetViewPublishService/DeletePhoto',
            google.streetview.publish.v1.rpcmessages_pb2.DeletePhotoRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.BatchDeletePhotos = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.streetview.publish.v1.StreetViewPublishService/BatchDeletePhotos',
            google.streetview.publish.v1.rpcmessages_pb2.BatchDeletePhotosRequest,
            google.streetview.publish.v1.rpcmessages_pb2.BatchDeletePhotosResponse,
        )
