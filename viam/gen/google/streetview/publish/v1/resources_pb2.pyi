"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.type.latlng_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class UploadRef(google.protobuf.message.Message):
    """Upload reference for media files."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPLOAD_URL_FIELD_NUMBER: builtins.int
    upload_url: typing.Text = ...
    """An upload reference should be unique for each user. It follows
    the form:
    "https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}"
    """

    def __init__(self,
        *,
        upload_url : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["file_source",b"file_source","upload_url",b"upload_url"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_source",b"file_source","upload_url",b"upload_url"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["file_source",b"file_source"]) -> typing.Optional[typing_extensions.Literal["upload_url"]]: ...
global___UploadRef = UploadRef

class PhotoId(google.protobuf.message.Message):
    """Identifier for a [Photo][google.streetview.publish.v1.Photo]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """A unique identifier for a photo."""

    def __init__(self,
        *,
        id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id"]) -> None: ...
global___PhotoId = PhotoId

class Level(google.protobuf.message.Message):
    """Level information containing level number and its corresponding name."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NUMBER_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    number: builtins.float = ...
    """Optional. Floor number, used for ordering. 0 indicates the ground level, 1 indicates
    the first level above ground level, -1 indicates the first level under
    ground level. Non-integer values are OK.
    """

    name: typing.Text = ...
    """Required. A name assigned to this Level, restricted to 3 characters.
    Consider how the elevator buttons would be labeled for this level if there
    was an elevator.
    """

    def __init__(self,
        *,
        number : builtins.float = ...,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","number",b"number"]) -> None: ...
global___Level = Level

class Pose(google.protobuf.message.Message):
    """Raw pose measurement for an entity."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAT_LNG_PAIR_FIELD_NUMBER: builtins.int
    ALTITUDE_FIELD_NUMBER: builtins.int
    HEADING_FIELD_NUMBER: builtins.int
    PITCH_FIELD_NUMBER: builtins.int
    ROLL_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    ACCURACY_METERS_FIELD_NUMBER: builtins.int
    @property
    def lat_lng_pair(self) -> google.type.latlng_pb2.LatLng:
        """Latitude and longitude pair of the pose, as explained here:
        https://cloud.google.com/datastore/docs/reference/rest/Shared.Types/LatLng
        When creating a [Photo][google.streetview.publish.v1.Photo], if the
        latitude and longitude pair are not provided, the geolocation from the
        exif header is used. A latitude and longitude pair not provided in the
        photo or exif header causes the photo process to fail.
        """
        pass
    altitude: builtins.float = ...
    """Altitude of the pose in meters above WGS84 ellipsoid.
    NaN indicates an unmeasured quantity.
    """

    heading: builtins.float = ...
    """The following pose parameters pertain to the center of the photo. They
    match https://developers.google.com/streetview/spherical-metadata.
    Compass heading, measured at the center of the photo in degrees clockwise
    from North. Value must be >=0 and <360. NaN indicates an unmeasured
    quantity.
    """

    pitch: builtins.float = ...
    """Pitch, measured at the center of the photo in degrees. Value must be >=-90
    and <= 90. A value of -90 means looking directly down, and a value of 90
    means looking directly up.
    NaN indicates an unmeasured quantity.
    """

    roll: builtins.float = ...
    """Roll, measured in degrees. Value must be >= 0 and <360. A value of 0
    means level with the horizon.
    NaN indicates an unmeasured quantity.
    """

    @property
    def level(self) -> global___Level:
        """Level (the floor in a building) used to configure vertical navigation."""
        pass
    accuracy_meters: builtins.float = ...
    """The estimated horizontal accuracy of this pose in meters with 68%
    confidence (one standard deviation). For example, on Android, this value is
    available from this method:
    https://developer.android.com/reference/android/location/Location#getAccuracy().
    Other platforms have different methods of obtaining similar accuracy
    estimations.
    """

    def __init__(self,
        *,
        lat_lng_pair : typing.Optional[google.type.latlng_pb2.LatLng] = ...,
        altitude : builtins.float = ...,
        heading : builtins.float = ...,
        pitch : builtins.float = ...,
        roll : builtins.float = ...,
        level : typing.Optional[global___Level] = ...,
        accuracy_meters : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["lat_lng_pair",b"lat_lng_pair","level",b"level"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["accuracy_meters",b"accuracy_meters","altitude",b"altitude","heading",b"heading","lat_lng_pair",b"lat_lng_pair","level",b"level","pitch",b"pitch","roll",b"roll"]) -> None: ...
global___Pose = Pose

class Place(google.protobuf.message.Message):
    """Place metadata for an entity."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PLACE_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    place_id: typing.Text = ...
    """Place identifier, as described in
    https://developers.google.com/places/place-id.
    """

    name: typing.Text = ...
    """Output only. The name of the place, localized to the language_code."""

    language_code: typing.Text = ...
    """Output only. The language_code that the name is localized with. This should
    be the language_code specified in the request, but may be a fallback.
    """

    def __init__(self,
        *,
        place_id : typing.Text = ...,
        name : typing.Text = ...,
        language_code : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["language_code",b"language_code","name",b"name","place_id",b"place_id"]) -> None: ...
global___Place = Place

class Connection(google.protobuf.message.Message):
    """A connection is the link from a source photo to a destination photo."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    @property
    def target(self) -> global___PhotoId:
        """Required. The destination of the connection from the containing photo to
        another photo.
        """
        pass
    def __init__(self,
        *,
        target : typing.Optional[global___PhotoId] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["target",b"target"]) -> None: ...
global___Connection = Connection

class Photo(google.protobuf.message.Message):
    """Photo is used to store 360 photos along with photo metadata."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _TransferStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TransferStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TransferStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TRANSFER_STATUS_UNKNOWN: Photo.TransferStatus.ValueType = ...  # 0
        """The status of this transfer is unspecified."""

        NEVER_TRANSFERRED: Photo.TransferStatus.ValueType = ...  # 1
        """This photo has never been in a transfer."""

        PENDING: Photo.TransferStatus.ValueType = ...  # 2
        """This photo transfer has been initiated, but the receiver has not yet
        responded.
        """

        COMPLETED: Photo.TransferStatus.ValueType = ...  # 3
        """The photo transfer has been completed, and this photo has been
        transferred to the recipient.
        """

        REJECTED: Photo.TransferStatus.ValueType = ...  # 4
        """The recipient rejected this photo transfer."""

        EXPIRED: Photo.TransferStatus.ValueType = ...  # 5
        """The photo transfer expired before the recipient took any action."""

        CANCELLED: Photo.TransferStatus.ValueType = ...  # 6
        """The sender cancelled this photo transfer."""

        RECEIVED_VIA_TRANSFER: Photo.TransferStatus.ValueType = ...  # 7
        """The recipient owns this photo due to a rights transfer."""

    class TransferStatus(_TransferStatus, metaclass=_TransferStatusEnumTypeWrapper):
        """Status of rights transfer."""
        pass

    TRANSFER_STATUS_UNKNOWN: Photo.TransferStatus.ValueType = ...  # 0
    """The status of this transfer is unspecified."""

    NEVER_TRANSFERRED: Photo.TransferStatus.ValueType = ...  # 1
    """This photo has never been in a transfer."""

    PENDING: Photo.TransferStatus.ValueType = ...  # 2
    """This photo transfer has been initiated, but the receiver has not yet
    responded.
    """

    COMPLETED: Photo.TransferStatus.ValueType = ...  # 3
    """The photo transfer has been completed, and this photo has been
    transferred to the recipient.
    """

    REJECTED: Photo.TransferStatus.ValueType = ...  # 4
    """The recipient rejected this photo transfer."""

    EXPIRED: Photo.TransferStatus.ValueType = ...  # 5
    """The photo transfer expired before the recipient took any action."""

    CANCELLED: Photo.TransferStatus.ValueType = ...  # 6
    """The sender cancelled this photo transfer."""

    RECEIVED_VIA_TRANSFER: Photo.TransferStatus.ValueType = ...  # 7
    """The recipient owns this photo due to a rights transfer."""


    class _MapsPublishStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MapsPublishStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MapsPublishStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED_MAPS_PUBLISH_STATUS: Photo.MapsPublishStatus.ValueType = ...  # 0
        """The status of the photo is unknown."""

        PUBLISHED: Photo.MapsPublishStatus.ValueType = ...  # 1
        """The photo is published to the public through Google Maps."""

        REJECTED_UNKNOWN: Photo.MapsPublishStatus.ValueType = ...  # 2
        """The photo has been rejected for an unknown reason."""

    class MapsPublishStatus(_MapsPublishStatus, metaclass=_MapsPublishStatusEnumTypeWrapper):
        """Publication status of the photo in Google Maps."""
        pass

    UNSPECIFIED_MAPS_PUBLISH_STATUS: Photo.MapsPublishStatus.ValueType = ...  # 0
    """The status of the photo is unknown."""

    PUBLISHED: Photo.MapsPublishStatus.ValueType = ...  # 1
    """The photo is published to the public through Google Maps."""

    REJECTED_UNKNOWN: Photo.MapsPublishStatus.ValueType = ...  # 2
    """The photo has been rejected for an unknown reason."""


    PHOTO_ID_FIELD_NUMBER: builtins.int
    UPLOAD_REFERENCE_FIELD_NUMBER: builtins.int
    DOWNLOAD_URL_FIELD_NUMBER: builtins.int
    THUMBNAIL_URL_FIELD_NUMBER: builtins.int
    SHARE_LINK_FIELD_NUMBER: builtins.int
    POSE_FIELD_NUMBER: builtins.int
    CONNECTIONS_FIELD_NUMBER: builtins.int
    CAPTURE_TIME_FIELD_NUMBER: builtins.int
    UPLOAD_TIME_FIELD_NUMBER: builtins.int
    PLACES_FIELD_NUMBER: builtins.int
    VIEW_COUNT_FIELD_NUMBER: builtins.int
    TRANSFER_STATUS_FIELD_NUMBER: builtins.int
    MAPS_PUBLISH_STATUS_FIELD_NUMBER: builtins.int
    @property
    def photo_id(self) -> global___PhotoId:
        """Required. Output only. Required when updating a photo. Output only when creating a photo.
        Identifier for the photo, which is unique among all photos in
        Google.
        """
        pass
    @property
    def upload_reference(self) -> global___UploadRef:
        """Input only. Required when creating a photo. Input only. The resource URL where the
        photo bytes are uploaded to.
        """
        pass
    download_url: typing.Text = ...
    """Output only. The download URL for the photo bytes. This field is set only
    when
    [GetPhotoRequest.view][google.streetview.publish.v1.GetPhotoRequest.view]
    is set to
    [PhotoView.INCLUDE_DOWNLOAD_URL][google.streetview.publish.v1.PhotoView.INCLUDE_DOWNLOAD_URL].
    """

    thumbnail_url: typing.Text = ...
    """Output only. The thumbnail URL for showing a preview of the given photo."""

    share_link: typing.Text = ...
    """Output only. The share link for the photo."""

    @property
    def pose(self) -> global___Pose:
        """Optional. Pose of the photo."""
        pass
    @property
    def connections(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Connection]:
        """Optional. Connections to other photos. A connection represents the link from this
        photo to another photo.
        """
        pass
    @property
    def capture_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Optional. Absolute time when the photo was captured.
        When the photo has no exif timestamp, this is used to set a timestamp in
        the photo metadata.
        """
        pass
    @property
    def upload_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time when the image was uploaded."""
        pass
    @property
    def places(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Place]:
        """Optional. Places where this photo belongs."""
        pass
    view_count: builtins.int = ...
    """Output only. View count of the photo."""

    transfer_status: global___Photo.TransferStatus.ValueType = ...
    """Output only. Status of rights transfer on this photo."""

    maps_publish_status: global___Photo.MapsPublishStatus.ValueType = ...
    """Output only. Status in Google Maps, whether this photo was published or rejected."""

    def __init__(self,
        *,
        photo_id : typing.Optional[global___PhotoId] = ...,
        upload_reference : typing.Optional[global___UploadRef] = ...,
        download_url : typing.Text = ...,
        thumbnail_url : typing.Text = ...,
        share_link : typing.Text = ...,
        pose : typing.Optional[global___Pose] = ...,
        connections : typing.Optional[typing.Iterable[global___Connection]] = ...,
        capture_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        upload_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        places : typing.Optional[typing.Iterable[global___Place]] = ...,
        view_count : builtins.int = ...,
        transfer_status : global___Photo.TransferStatus.ValueType = ...,
        maps_publish_status : global___Photo.MapsPublishStatus.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["capture_time",b"capture_time","photo_id",b"photo_id","pose",b"pose","upload_reference",b"upload_reference","upload_time",b"upload_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["capture_time",b"capture_time","connections",b"connections","download_url",b"download_url","maps_publish_status",b"maps_publish_status","photo_id",b"photo_id","places",b"places","pose",b"pose","share_link",b"share_link","thumbnail_url",b"thumbnail_url","transfer_status",b"transfer_status","upload_reference",b"upload_reference","upload_time",b"upload_time","view_count",b"view_count"]) -> None: ...
global___Photo = Photo
