"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.devtools.resultstore.v2.file_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class FileSet(google.protobuf.message.Message):
    """This resource represents a set of Files and other (nested) FileSets.
    A FileSet is a node in the graph, and the file_sets field represents the
    outgoing edges. A resource may reference various nodes in the graph to
    represent the transitive closure of all files from those nodes.
    The FileSets must form a directed acyclic graph. The Upload API is unable to
    enforce that the graph is acyclic at write time, and if cycles are written,
    it may cause issues at read time.

    A FileSet may be referenced by other resources in conjunction with Files.

    Clients should prefer using Files directly under resources. Clients should
    not use FileSets unless their usecase requires a directed acyclic graph of
    Files.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Id(google.protobuf.message.Message):
        """The resource ID components that identify the FileSet."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        INVOCATION_ID_FIELD_NUMBER: builtins.int
        FILE_SET_ID_FIELD_NUMBER: builtins.int
        invocation_id: typing.Text = ...
        """The Invocation ID."""

        file_set_id: typing.Text = ...
        """The FileSet ID."""

        def __init__(self,
            *,
            invocation_id : typing.Text = ...,
            file_set_id : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["file_set_id",b"file_set_id","invocation_id",b"invocation_id"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    FILE_SETS_FIELD_NUMBER: builtins.int
    FILES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The format of this FileSet resource name must be:
    invocations/${INVOCATION_ID}/fileSets/${url_encode(FILE_SET_ID)}
    """

    @property
    def id(self) -> global___FileSet.Id:
        """The resource ID components that identify the file set. They must match the
        resource name after proper encoding.
        """
        pass
    @property
    def file_sets(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of names of other file sets that are referenced from this one.
        Each name must point to a file set under the same invocation. The name
        format must be: invocations/${INVOCATION_ID}/fileSets/${FILE_SET_ID}
        """
        pass
    @property
    def files(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.devtools.resultstore.v2.file_pb2.File]:
        """Files that are contained within this file set.
        The uid field in the file should be unique for the Invocation.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Optional[global___FileSet.Id] = ...,
        file_sets : typing.Optional[typing.Iterable[typing.Text]] = ...,
        files : typing.Optional[typing.Iterable[google.devtools.resultstore.v2.file_pb2.File]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id",b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["file_sets",b"file_sets","files",b"files","id",b"id","name",b"name"]) -> None: ...
global___FileSet = FileSet
