"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.devtools.resultstore.v2.common_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class LineCoverageSummary(google.protobuf.message.Message):
    """Summary of line coverage"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTRUMENTED_LINE_COUNT_FIELD_NUMBER: builtins.int
    EXECUTED_LINE_COUNT_FIELD_NUMBER: builtins.int
    instrumented_line_count: builtins.int = ...
    """Number of lines instrumented for coverage."""

    executed_line_count: builtins.int = ...
    """Number of instrumented lines that were executed by the test."""

    def __init__(self,
        *,
        instrumented_line_count : builtins.int = ...,
        executed_line_count : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["executed_line_count",b"executed_line_count","instrumented_line_count",b"instrumented_line_count"]) -> None: ...
global___LineCoverageSummary = LineCoverageSummary

class BranchCoverageSummary(google.protobuf.message.Message):
    """Summary of branch coverage
    A branch may be:
     * not executed.  Counted only in total.
     * executed but not taken.  Appears in total and executed.
     * executed and taken.  Appears in all three fields.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOTAL_BRANCH_COUNT_FIELD_NUMBER: builtins.int
    EXECUTED_BRANCH_COUNT_FIELD_NUMBER: builtins.int
    TAKEN_BRANCH_COUNT_FIELD_NUMBER: builtins.int
    total_branch_count: builtins.int = ...
    """The number of branches present in the file."""

    executed_branch_count: builtins.int = ...
    """The number of branches executed out of the total branches present.
    A branch is executed when its condition is evaluated.
    This is <= total_branch_count as not all branches are executed.
    """

    taken_branch_count: builtins.int = ...
    """The number of branches taken out of the total branches executed.
    A branch is taken when its condition is satisfied.
    This is <= executed_branch_count as not all executed branches are taken.
    """

    def __init__(self,
        *,
        total_branch_count : builtins.int = ...,
        executed_branch_count : builtins.int = ...,
        taken_branch_count : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["executed_branch_count",b"executed_branch_count","taken_branch_count",b"taken_branch_count","total_branch_count",b"total_branch_count"]) -> None: ...
global___BranchCoverageSummary = BranchCoverageSummary

class LanguageCoverageSummary(google.protobuf.message.Message):
    """Summary of coverage in each language"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LANGUAGE_FIELD_NUMBER: builtins.int
    LINE_SUMMARY_FIELD_NUMBER: builtins.int
    BRANCH_SUMMARY_FIELD_NUMBER: builtins.int
    language: google.devtools.resultstore.v2.common_pb2.Language.ValueType = ...
    """This summary is for all files written in this programming language."""

    @property
    def line_summary(self) -> global___LineCoverageSummary:
        """Summary of lines covered vs instrumented."""
        pass
    @property
    def branch_summary(self) -> global___BranchCoverageSummary:
        """Summary of branch coverage."""
        pass
    def __init__(self,
        *,
        language : google.devtools.resultstore.v2.common_pb2.Language.ValueType = ...,
        line_summary : typing.Optional[global___LineCoverageSummary] = ...,
        branch_summary : typing.Optional[global___BranchCoverageSummary] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["branch_summary",b"branch_summary","line_summary",b"line_summary"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["branch_summary",b"branch_summary","language",b"language","line_summary",b"line_summary"]) -> None: ...
global___LanguageCoverageSummary = LanguageCoverageSummary
