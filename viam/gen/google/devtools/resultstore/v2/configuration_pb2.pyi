"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.devtools.resultstore.v2.common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Configuration(google.protobuf.message.Message):
    """Represents a configuration within an Invocation associated with one or more
    ConfiguredTargets. It captures the environment and other settings that
    were used.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Id(google.protobuf.message.Message):
        """The resource ID components that identify the Configuration."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        INVOCATION_ID_FIELD_NUMBER: builtins.int
        CONFIGURATION_ID_FIELD_NUMBER: builtins.int
        invocation_id: typing.Text = ...
        """The Invocation ID."""

        configuration_id: typing.Text = ...
        """The Configuration ID."""

        def __init__(self,
            *,
            invocation_id : typing.Text = ...,
            configuration_id : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["configuration_id",b"configuration_id","invocation_id",b"invocation_id"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    STATUS_ATTRIBUTES_FIELD_NUMBER: builtins.int
    CONFIGURATION_ATTRIBUTES_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The format of this Configuration resource name must be:
    invocations/${INVOCATION_ID}/configs/${url_encode(CONFIG_ID)}
    The configuration ID of "default" should be preferred for the default
    configuration in a single-config invocation.
    """

    @property
    def id(self) -> global___Configuration.Id:
        """The resource ID components that identify the Configuration. They must match
        the resource name after proper encoding.
        """
        pass
    @property
    def status_attributes(self) -> google.devtools.resultstore.v2.common_pb2.StatusAttributes:
        """The aggregate status for this configuration."""
        pass
    @property
    def configuration_attributes(self) -> global___ConfigurationAttributes:
        """Attributes that apply only to this configuration."""
        pass
    @property
    def properties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.devtools.resultstore.v2.common_pb2.Property]:
        """Arbitrary name-value pairs.
        This is implemented as a multi-map. Multiple properties are allowed with
        the same key. Properties will be returned in lexicographical order by key.
        """
        pass
    display_name: typing.Text = ...
    """A human-readable name for Configuration for UIs.
    It is recommended that this name be unique.
    If omitted, UIs should default to configuration_id.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Optional[global___Configuration.Id] = ...,
        status_attributes : typing.Optional[google.devtools.resultstore.v2.common_pb2.StatusAttributes] = ...,
        configuration_attributes : typing.Optional[global___ConfigurationAttributes] = ...,
        properties : typing.Optional[typing.Iterable[google.devtools.resultstore.v2.common_pb2.Property]] = ...,
        display_name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["configuration_attributes",b"configuration_attributes","id",b"id","status_attributes",b"status_attributes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["configuration_attributes",b"configuration_attributes","display_name",b"display_name","id",b"id","name",b"name","properties",b"properties","status_attributes",b"status_attributes"]) -> None: ...
global___Configuration = Configuration

class ConfigurationAttributes(google.protobuf.message.Message):
    """Attributes that apply only to the configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CPU_FIELD_NUMBER: builtins.int
    cpu: typing.Text = ...
    """The type of cpu. (e.g. "x86", "powerpc")"""

    def __init__(self,
        *,
        cpu : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cpu",b"cpu"]) -> None: ...
global___ConfigurationAttributes = ConfigurationAttributes
