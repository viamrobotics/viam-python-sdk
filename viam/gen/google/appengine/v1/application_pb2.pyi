"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Application(google.protobuf.message.Message):
    """An Application resource contains the top-level configuration of an App
    Engine application.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ServingStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ServingStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ServingStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: Application.ServingStatus.ValueType = ...  # 0
        """Serving status is unspecified."""

        SERVING: Application.ServingStatus.ValueType = ...  # 1
        """Application is serving."""

        USER_DISABLED: Application.ServingStatus.ValueType = ...  # 2
        """Application has been disabled by the user."""

        SYSTEM_DISABLED: Application.ServingStatus.ValueType = ...  # 3
        """Application has been disabled by the system."""

    class ServingStatus(_ServingStatus, metaclass=_ServingStatusEnumTypeWrapper):
        pass

    UNSPECIFIED: Application.ServingStatus.ValueType = ...  # 0
    """Serving status is unspecified."""

    SERVING: Application.ServingStatus.ValueType = ...  # 1
    """Application is serving."""

    USER_DISABLED: Application.ServingStatus.ValueType = ...  # 2
    """Application has been disabled by the user."""

    SYSTEM_DISABLED: Application.ServingStatus.ValueType = ...  # 3
    """Application has been disabled by the system."""


    class _DatabaseType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DatabaseTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DatabaseType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DATABASE_TYPE_UNSPECIFIED: Application.DatabaseType.ValueType = ...  # 0
        """Database type is unspecified."""

        CLOUD_DATASTORE: Application.DatabaseType.ValueType = ...  # 1
        """Cloud Datastore"""

        CLOUD_FIRESTORE: Application.DatabaseType.ValueType = ...  # 2
        """Cloud Firestore Native"""

        CLOUD_DATASTORE_COMPATIBILITY: Application.DatabaseType.ValueType = ...  # 3
        """Cloud Firestore in Datastore Mode"""

    class DatabaseType(_DatabaseType, metaclass=_DatabaseTypeEnumTypeWrapper):
        pass

    DATABASE_TYPE_UNSPECIFIED: Application.DatabaseType.ValueType = ...  # 0
    """Database type is unspecified."""

    CLOUD_DATASTORE: Application.DatabaseType.ValueType = ...  # 1
    """Cloud Datastore"""

    CLOUD_FIRESTORE: Application.DatabaseType.ValueType = ...  # 2
    """Cloud Firestore Native"""

    CLOUD_DATASTORE_COMPATIBILITY: Application.DatabaseType.ValueType = ...  # 3
    """Cloud Firestore in Datastore Mode"""


    class IdentityAwareProxy(google.protobuf.message.Message):
        """Identity-Aware Proxy"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ENABLED_FIELD_NUMBER: builtins.int
        OAUTH2_CLIENT_ID_FIELD_NUMBER: builtins.int
        OAUTH2_CLIENT_SECRET_FIELD_NUMBER: builtins.int
        OAUTH2_CLIENT_SECRET_SHA256_FIELD_NUMBER: builtins.int
        enabled: builtins.bool = ...
        """Whether the serving infrastructure will authenticate and
        authorize all incoming requests.

        If true, the `oauth2_client_id` and `oauth2_client_secret`
        fields must be non-empty.
        """

        oauth2_client_id: typing.Text = ...
        """OAuth2 client ID to use for the authentication flow."""

        oauth2_client_secret: typing.Text = ...
        """OAuth2 client secret to use for the authentication flow.

        For security reasons, this value cannot be retrieved via the API.
        Instead, the SHA-256 hash of the value is returned in the
        `oauth2_client_secret_sha256` field.

        @InputOnly
        """

        oauth2_client_secret_sha256: typing.Text = ...
        """Hex-encoded SHA-256 hash of the client secret.

        @OutputOnly
        """

        def __init__(self,
            *,
            enabled : builtins.bool = ...,
            oauth2_client_id : typing.Text = ...,
            oauth2_client_secret : typing.Text = ...,
            oauth2_client_secret_sha256 : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","oauth2_client_id",b"oauth2_client_id","oauth2_client_secret",b"oauth2_client_secret","oauth2_client_secret_sha256",b"oauth2_client_secret_sha256"]) -> None: ...

    class FeatureSettings(google.protobuf.message.Message):
        """The feature specific settings to be used in the application. These define
        behaviors that are user configurable.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SPLIT_HEALTH_CHECKS_FIELD_NUMBER: builtins.int
        USE_CONTAINER_OPTIMIZED_OS_FIELD_NUMBER: builtins.int
        split_health_checks: builtins.bool = ...
        """Boolean value indicating if split health checks should be used instead
        of the legacy health checks. At an app.yaml level, this means defaulting
        to 'readiness_check' and 'liveness_check' values instead of
        'health_check' ones. Once the legacy 'health_check' behavior is
        deprecated, and this value is always true, this setting can
        be removed.
        """

        use_container_optimized_os: builtins.bool = ...
        """If true, use [Container-Optimized OS](https://cloud.google.com/container-optimized-os/)
        base image for VMs, rather than a base Debian image.
        """

        def __init__(self,
            *,
            split_health_checks : builtins.bool = ...,
            use_container_optimized_os : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["split_health_checks",b"split_health_checks","use_container_optimized_os",b"use_container_optimized_os"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    DISPATCH_RULES_FIELD_NUMBER: builtins.int
    AUTH_DOMAIN_FIELD_NUMBER: builtins.int
    LOCATION_ID_FIELD_NUMBER: builtins.int
    CODE_BUCKET_FIELD_NUMBER: builtins.int
    DEFAULT_COOKIE_EXPIRATION_FIELD_NUMBER: builtins.int
    SERVING_STATUS_FIELD_NUMBER: builtins.int
    DEFAULT_HOSTNAME_FIELD_NUMBER: builtins.int
    DEFAULT_BUCKET_FIELD_NUMBER: builtins.int
    IAP_FIELD_NUMBER: builtins.int
    GCR_DOMAIN_FIELD_NUMBER: builtins.int
    DATABASE_TYPE_FIELD_NUMBER: builtins.int
    FEATURE_SETTINGS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Full path to the Application resource in the API.
    Example: `apps/myapp`.

    @OutputOnly
    """

    id: typing.Text = ...
    """Identifier of the Application resource. This identifier is equivalent
    to the project ID of the Google Cloud Platform project where you want to
    deploy your application.
    Example: `myapp`.
    """

    @property
    def dispatch_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UrlDispatchRule]:
        """HTTP path dispatch rules for requests to the application that do not
        explicitly target a service or version. Rules are order-dependent.
        Up to 20 dispatch rules can be supported.
        """
        pass
    auth_domain: typing.Text = ...
    """Google Apps authentication domain that controls which users can access
    this application.

    Defaults to open access for any Google Account.
    """

    location_id: typing.Text = ...
    """Location from which this application runs. Application instances
    run out of the data centers in the specified location, which is also where
    all of the application's end user content is stored.

    Defaults to `us-central`.

    View the list of
    [supported locations](https://cloud.google.com/appengine/docs/locations).
    """

    code_bucket: typing.Text = ...
    """Google Cloud Storage bucket that can be used for storing files
    associated with this application. This bucket is associated with the
    application and can be used by the gcloud deployment commands.

    @OutputOnly
    """

    @property
    def default_cookie_expiration(self) -> google.protobuf.duration_pb2.Duration:
        """Cookie expiration policy for this application."""
        pass
    serving_status: global___Application.ServingStatus.ValueType = ...
    """Serving status of this application."""

    default_hostname: typing.Text = ...
    """Hostname used to reach this application, as resolved by App Engine.

    @OutputOnly
    """

    default_bucket: typing.Text = ...
    """Google Cloud Storage bucket that can be used by this application to store
    content.

    @OutputOnly
    """

    @property
    def iap(self) -> global___Application.IdentityAwareProxy: ...
    gcr_domain: typing.Text = ...
    """The Google Container Registry domain used for storing managed build docker
    images for this application.
    """

    database_type: global___Application.DatabaseType.ValueType = ...
    """The type of the Cloud Firestore or Cloud Datastore database associated with
    this application.
    """

    @property
    def feature_settings(self) -> global___Application.FeatureSettings:
        """The feature specific settings to be used in the application."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Text = ...,
        dispatch_rules : typing.Optional[typing.Iterable[global___UrlDispatchRule]] = ...,
        auth_domain : typing.Text = ...,
        location_id : typing.Text = ...,
        code_bucket : typing.Text = ...,
        default_cookie_expiration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        serving_status : global___Application.ServingStatus.ValueType = ...,
        default_hostname : typing.Text = ...,
        default_bucket : typing.Text = ...,
        iap : typing.Optional[global___Application.IdentityAwareProxy] = ...,
        gcr_domain : typing.Text = ...,
        database_type : global___Application.DatabaseType.ValueType = ...,
        feature_settings : typing.Optional[global___Application.FeatureSettings] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_cookie_expiration",b"default_cookie_expiration","feature_settings",b"feature_settings","iap",b"iap"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_domain",b"auth_domain","code_bucket",b"code_bucket","database_type",b"database_type","default_bucket",b"default_bucket","default_cookie_expiration",b"default_cookie_expiration","default_hostname",b"default_hostname","dispatch_rules",b"dispatch_rules","feature_settings",b"feature_settings","gcr_domain",b"gcr_domain","iap",b"iap","id",b"id","location_id",b"location_id","name",b"name","serving_status",b"serving_status"]) -> None: ...
global___Application = Application

class UrlDispatchRule(google.protobuf.message.Message):
    """Rules to match an HTTP request and dispatch that request to a service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DOMAIN_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    domain: typing.Text = ...
    """Domain name to match against. The wildcard "`*`" is supported if
    specified before a period: "`*.`".

    Defaults to matching all domains: "`*`".
    """

    path: typing.Text = ...
    """Pathname within the host. Must start with a "`/`". A
    single "`*`" can be included at the end of the path.

    The sum of the lengths of the domain and path may not
    exceed 100 characters.
    """

    service: typing.Text = ...
    """Resource ID of a service in this application that should
    serve the matched request. The service must already
    exist. Example: `default`.
    """

    def __init__(self,
        *,
        domain : typing.Text = ...,
        path : typing.Text = ...,
        service : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["domain",b"domain","path",b"path","service",b"service"]) -> None: ...
global___UrlDispatchRule = UrlDispatchRule
