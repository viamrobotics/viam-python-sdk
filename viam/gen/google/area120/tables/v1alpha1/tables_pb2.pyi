"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _View:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ViewEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_View.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    VIEW_UNSPECIFIED: View.ValueType = ...  # 0
    """Defaults to user entered text."""

    COLUMN_ID_VIEW: View.ValueType = ...  # 1
    """Uses internally generated column id to identify values."""

class View(_View, metaclass=_ViewEnumTypeWrapper):
    """Column identifier used for the values in the row."""
    pass

VIEW_UNSPECIFIED: View.ValueType = ...  # 0
"""Defaults to user entered text."""

COLUMN_ID_VIEW: View.ValueType = ...  # 1
"""Uses internally generated column id to identify values."""

global___View = View


class GetTableRequest(google.protobuf.message.Message):
    """Request message for TablesService.GetTable."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the table to retrieve.
    Format: tables/{table}
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetTableRequest = GetTableRequest

class ListTablesRequest(google.protobuf.message.Message):
    """Request message for TablesService.ListTables."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    page_size: builtins.int = ...
    """The maximum number of tables to return. The service may return fewer than
    this value.

    If unspecified, at most 20 tables are returned. The maximum value is 100;
    values above 100 are coerced to 100.
    """

    page_token: typing.Text = ...
    """A page token, received from a previous `ListTables` call.
    Provide this to retrieve the subsequent page.

    When paginating, all other parameters provided to `ListTables` must match
    the call that provided the page token.
    """

    def __init__(self,
        *,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListTablesRequest = ListTablesRequest

class ListTablesResponse(google.protobuf.message.Message):
    """Response message for TablesService.ListTables."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TABLES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def tables(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Table]:
        """The list of tables."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is empty, there are no subsequent pages.
    """

    def __init__(self,
        *,
        tables : typing.Optional[typing.Iterable[global___Table]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","tables",b"tables"]) -> None: ...
global___ListTablesResponse = ListTablesResponse

class GetWorkspaceRequest(google.protobuf.message.Message):
    """Request message for TablesService.GetWorkspace."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the workspace to retrieve.
    Format: workspaces/{workspace}
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetWorkspaceRequest = GetWorkspaceRequest

class ListWorkspacesRequest(google.protobuf.message.Message):
    """Request message for TablesService.ListWorkspaces."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    page_size: builtins.int = ...
    """The maximum number of workspaces to return. The service may return fewer
    than this value.

    If unspecified, at most 10 workspaces are returned. The maximum value is
    25; values above 25 are coerced to 25.
    """

    page_token: typing.Text = ...
    """A page token, received from a previous `ListWorkspaces` call.
    Provide this to retrieve the subsequent page.

    When paginating, all other parameters provided to `ListWorkspaces` must
    match the call that provided the page token.
    """

    def __init__(self,
        *,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token"]) -> None: ...
global___ListWorkspacesRequest = ListWorkspacesRequest

class ListWorkspacesResponse(google.protobuf.message.Message):
    """Response message for TablesService.ListWorkspaces."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WORKSPACES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def workspaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Workspace]:
        """The list of workspaces."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is empty, there are no subsequent pages.
    """

    def __init__(self,
        *,
        workspaces : typing.Optional[typing.Iterable[global___Workspace]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","workspaces",b"workspaces"]) -> None: ...
global___ListWorkspacesResponse = ListWorkspacesResponse

class GetRowRequest(google.protobuf.message.Message):
    """Request message for TablesService.GetRow."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the row to retrieve.
    Format: tables/{table}/rows/{row}
    """

    view: global___View.ValueType = ...
    """Optional. Column key to use for values in the row.
    Defaults to user entered name.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        view : global___View.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","view",b"view"]) -> None: ...
global___GetRowRequest = GetRowRequest

class ListRowsRequest(google.protobuf.message.Message):
    """Request message for TablesService.ListRows."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent table.
    Format: tables/{table}
    """

    page_size: builtins.int = ...
    """The maximum number of rows to return. The service may return fewer than
    this value.

    If unspecified, at most 50 rows are returned. The maximum value is 1,000;
    values above 1,000 are coerced to 1,000.
    """

    page_token: typing.Text = ...
    """A page token, received from a previous `ListRows` call.
    Provide this to retrieve the subsequent page.

    When paginating, all other parameters provided to `ListRows` must match
    the call that provided the page token.
    """

    view: global___View.ValueType = ...
    """Optional. Column key to use for values in the row.
    Defaults to user entered name.
    """

    filter: typing.Text = ...
    """Optional. Raw text query to search for in rows of the table.
    Special characters must be escaped. Logical operators and field specific
    filtering not supported.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        view : global___View.ValueType = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent","view",b"view"]) -> None: ...
global___ListRowsRequest = ListRowsRequest

class ListRowsResponse(google.protobuf.message.Message):
    """Response message for TablesService.ListRows."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROWS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def rows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Row]:
        """The rows from the specified table."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is empty, there are no subsequent pages.
    """

    def __init__(self,
        *,
        rows : typing.Optional[typing.Iterable[global___Row]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","rows",b"rows"]) -> None: ...
global___ListRowsResponse = ListRowsResponse

class CreateRowRequest(google.protobuf.message.Message):
    """Request message for TablesService.CreateRow."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    ROW_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent table where this row will be created.
    Format: tables/{table}
    """

    @property
    def row(self) -> global___Row:
        """Required. The row to create."""
        pass
    view: global___View.ValueType = ...
    """Optional. Column key to use for values in the row.
    Defaults to user entered name.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        row : typing.Optional[global___Row] = ...,
        view : global___View.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["row",b"row"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","row",b"row","view",b"view"]) -> None: ...
global___CreateRowRequest = CreateRowRequest

class BatchCreateRowsRequest(google.protobuf.message.Message):
    """Request message for TablesService.BatchCreateRows."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    REQUESTS_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent table where the rows will be created.
    Format: tables/{table}
    """

    @property
    def requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CreateRowRequest]:
        """Required. The request message specifying the rows to create.

        A maximum of 500 rows can be created in a single batch.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        requests : typing.Optional[typing.Iterable[global___CreateRowRequest]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","requests",b"requests"]) -> None: ...
global___BatchCreateRowsRequest = BatchCreateRowsRequest

class BatchCreateRowsResponse(google.protobuf.message.Message):
    """Response message for TablesService.BatchCreateRows."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROWS_FIELD_NUMBER: builtins.int
    @property
    def rows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Row]:
        """The created rows."""
        pass
    def __init__(self,
        *,
        rows : typing.Optional[typing.Iterable[global___Row]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["rows",b"rows"]) -> None: ...
global___BatchCreateRowsResponse = BatchCreateRowsResponse

class UpdateRowRequest(google.protobuf.message.Message):
    """Request message for TablesService.UpdateRow."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROW_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    @property
    def row(self) -> global___Row:
        """Required. The row to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to update."""
        pass
    view: global___View.ValueType = ...
    """Optional. Column key to use for values in the row.
    Defaults to user entered name.
    """

    def __init__(self,
        *,
        row : typing.Optional[global___Row] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        view : global___View.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["row",b"row","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["row",b"row","update_mask",b"update_mask","view",b"view"]) -> None: ...
global___UpdateRowRequest = UpdateRowRequest

class BatchUpdateRowsRequest(google.protobuf.message.Message):
    """Request message for TablesService.BatchUpdateRows."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    REQUESTS_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent table shared by all rows being updated.
    Format: tables/{table}
    """

    @property
    def requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UpdateRowRequest]:
        """Required. The request messages specifying the rows to update.

        A maximum of 500 rows can be modified in a single batch.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        requests : typing.Optional[typing.Iterable[global___UpdateRowRequest]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","requests",b"requests"]) -> None: ...
global___BatchUpdateRowsRequest = BatchUpdateRowsRequest

class BatchUpdateRowsResponse(google.protobuf.message.Message):
    """Response message for TablesService.BatchUpdateRows."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROWS_FIELD_NUMBER: builtins.int
    @property
    def rows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Row]:
        """The updated rows."""
        pass
    def __init__(self,
        *,
        rows : typing.Optional[typing.Iterable[global___Row]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["rows",b"rows"]) -> None: ...
global___BatchUpdateRowsResponse = BatchUpdateRowsResponse

class DeleteRowRequest(google.protobuf.message.Message):
    """Request message for TablesService.DeleteRow"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the row to delete.
    Format: tables/{table}/rows/{row}
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteRowRequest = DeleteRowRequest

class BatchDeleteRowsRequest(google.protobuf.message.Message):
    """Request message for TablesService.BatchDeleteRows"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    NAMES_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent table shared by all rows being deleted.
    Format: tables/{table}
    """

    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. The names of the rows to delete. All rows must belong to the parent table
        or else the entire batch will fail. A maximum of 500 rows can be deleted
        in a batch.
        Format: tables/{table}/rows/{row}
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["names",b"names","parent",b"parent"]) -> None: ...
global___BatchDeleteRowsRequest = BatchDeleteRowsRequest

class Table(google.protobuf.message.Message):
    """A single table."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    COLUMNS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the table.
    Table names have the form `tables/{table}`.
    """

    display_name: typing.Text = ...
    """The human readable title of the table."""

    @property
    def columns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ColumnDescription]:
        """List of columns in this table.
        Order of columns matches the display order.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        columns : typing.Optional[typing.Iterable[global___ColumnDescription]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["columns",b"columns","display_name",b"display_name","name",b"name"]) -> None: ...
global___Table = Table

class ColumnDescription(google.protobuf.message.Message):
    """Details on a column in the table."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DATA_TYPE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    RELATIONSHIP_DETAILS_FIELD_NUMBER: builtins.int
    LOOKUP_DETAILS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """column name"""

    data_type: typing.Text = ...
    """Data type of the column
    Supported types are auto_id, boolean, boolean_list, creator,
    create_timestamp, date, dropdown, location, integer,
    integer_list, number, number_list, person, person_list, tags, check_list,
    text, text_list, update_timestamp, updater, relationship,
    file_attachment_list.
    These types directly map to the column types supported on Tables website.
    """

    id: typing.Text = ...
    """Internal id for a column."""

    @property
    def labels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LabeledItem]:
        """Optional. Range of labeled values for the column.
        Some columns like tags and drop-downs limit the values to a set of
        possible values. We return the range of values in such cases to help
        clients implement better user data validation.
        """
        pass
    @property
    def relationship_details(self) -> global___RelationshipDetails:
        """Optional. Additional details about a relationship column. Specified when data_type
        is relationship.
        """
        pass
    @property
    def lookup_details(self) -> global___LookupDetails:
        """Optional. Indicates that this is a lookup column whose value is derived from the
        relationship column specified in the details. Lookup columns can not be
        updated directly. To change the value you must update the associated
        relationship column.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        data_type : typing.Text = ...,
        id : typing.Text = ...,
        labels : typing.Optional[typing.Iterable[global___LabeledItem]] = ...,
        relationship_details : typing.Optional[global___RelationshipDetails] = ...,
        lookup_details : typing.Optional[global___LookupDetails] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["lookup_details",b"lookup_details","relationship_details",b"relationship_details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_type",b"data_type","id",b"id","labels",b"labels","lookup_details",b"lookup_details","name",b"name","relationship_details",b"relationship_details"]) -> None: ...
global___ColumnDescription = ColumnDescription

class LabeledItem(google.protobuf.message.Message):
    """A single item in a labeled column."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Display string as entered by user."""

    id: typing.Text = ...
    """Internal id associated with the item."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id",b"id","name",b"name"]) -> None: ...
global___LabeledItem = LabeledItem

class RelationshipDetails(google.protobuf.message.Message):
    """Details about a relationship column."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LINKED_TABLE_FIELD_NUMBER: builtins.int
    linked_table: typing.Text = ...
    """The name of the table this relationship is linked to."""

    def __init__(self,
        *,
        linked_table : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["linked_table",b"linked_table"]) -> None: ...
global___RelationshipDetails = RelationshipDetails

class LookupDetails(google.protobuf.message.Message):
    """Details about a lookup column whose value comes from the associated
    relationship.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RELATIONSHIP_COLUMN_FIELD_NUMBER: builtins.int
    RELATIONSHIP_COLUMN_ID_FIELD_NUMBER: builtins.int
    relationship_column: typing.Text = ...
    """The name of the relationship column associated with the lookup."""

    relationship_column_id: typing.Text = ...
    """The id of the relationship column."""

    def __init__(self,
        *,
        relationship_column : typing.Text = ...,
        relationship_column_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["relationship_column",b"relationship_column","relationship_column_id",b"relationship_column_id"]) -> None: ...
global___LookupDetails = LookupDetails

class Row(google.protobuf.message.Message):
    """A single row in a table."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> google.protobuf.struct_pb2.Value: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[google.protobuf.struct_pb2.Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the row.
    Row names have the form `tables/{table}/rows/{row}`.
    The name is ignored when creating a row.
    """

    @property
    def values(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.protobuf.struct_pb2.Value]:
        """The values of the row. This is a map of column key to value.
        Key is user entered name(default) or the internal column id based on
        the view in the request.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        values : typing.Optional[typing.Mapping[typing.Text, google.protobuf.struct_pb2.Value]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","values",b"values"]) -> None: ...
global___Row = Row

class Workspace(google.protobuf.message.Message):
    """A single workspace."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    TABLES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the workspace.
    Workspace names have the form `workspaces/{workspace}`.
    """

    display_name: typing.Text = ...
    """The human readable title of the workspace."""

    @property
    def tables(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Table]:
        """The list of tables in the workspace."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        tables : typing.Optional[typing.Iterable[global___Table]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["display_name",b"display_name","name",b"name","tables",b"tables"]) -> None: ...
global___Workspace = Workspace
