"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _LifecycleState:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _LifecycleStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LifecycleState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    LIFECYCLE_STATE_UNSPECIFIED: LifecycleState.ValueType = ...  # 0
    """Unspecified state.  This is only used/useful for distinguishing
    unset values.
    """

    ACTIVE: LifecycleState.ValueType = ...  # 1
    """The normal and active state."""

    DELETE_REQUESTED: LifecycleState.ValueType = ...  # 2
    """The bucket has been marked for deletion by the user."""

class LifecycleState(_LifecycleState, metaclass=_LifecycleStateEnumTypeWrapper):
    """LogBucket lifecycle states."""
    pass

LIFECYCLE_STATE_UNSPECIFIED: LifecycleState.ValueType = ...  # 0
"""Unspecified state.  This is only used/useful for distinguishing
unset values.
"""

ACTIVE: LifecycleState.ValueType = ...  # 1
"""The normal and active state."""

DELETE_REQUESTED: LifecycleState.ValueType = ...  # 2
"""The bucket has been marked for deletion by the user."""

global___LifecycleState = LifecycleState


class LogBucket(google.protobuf.message.Message):
    """Describes a repository of logs."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    RETENTION_DAYS_FIELD_NUMBER: builtins.int
    LOCKED_FIELD_NUMBER: builtins.int
    LIFECYCLE_STATE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the bucket.
    For example:
    "projects/my-project-id/locations/my-location/buckets/my-bucket-id The
    supported locations are:
      "global"

    For the location of `global` it is unspecified where logs are actually
    stored.
    Once a bucket has been created, the location can not be changed.
    """

    description: typing.Text = ...
    """Describes this bucket."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The creation timestamp of the bucket. This is not set for any of the
        default buckets.
        """
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The last update timestamp of the bucket."""
        pass
    retention_days: builtins.int = ...
    """Logs will be retained by default for this amount of time, after which they
    will automatically be deleted. The minimum retention period is 1 day.
    If this value is set to zero at bucket creation time, the default time of
    30 days will be used.
    """

    locked: builtins.bool = ...
    """Whether the bucket has been locked.
    The retention period on a locked bucket may not be changed.
    Locked buckets may only be deleted if they are empty.
    """

    lifecycle_state: global___LifecycleState.ValueType = ...
    """Output only. The bucket lifecycle state."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        retention_days : builtins.int = ...,
        locked : builtins.bool = ...,
        lifecycle_state : global___LifecycleState.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","lifecycle_state",b"lifecycle_state","locked",b"locked","name",b"name","retention_days",b"retention_days","update_time",b"update_time"]) -> None: ...
global___LogBucket = LogBucket

class LogView(google.protobuf.message.Message):
    """Describes a view over logs in a bucket."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the view.
    For example
    "projects/my-project-id/locations/my-location/buckets/my-bucket-id/views/my-view
    """

    description: typing.Text = ...
    """Describes this view."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The creation timestamp of the view."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The last update timestamp of the view."""
        pass
    filter: typing.Text = ...
    """Filter that restricts which log entries in a bucket are visible in this
    view. Filters are restricted to be a logical AND of ==/!= of any of the
    following:
      originating project/folder/organization/billing account.
      resource type
      log id
    Example: SOURCE("projects/myproject") AND resource.type = "gce_instance"
                AND LOG_ID("stdout")
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","filter",b"filter","name",b"name","update_time",b"update_time"]) -> None: ...
global___LogView = LogView

class LogSink(google.protobuf.message.Message):
    """Describes a sink used to export log entries to one of the following
    destinations in any project: a Cloud Storage bucket, a BigQuery dataset, or a
    Cloud Pub/Sub topic. A logs filter controls which log entries are exported.
    The sink must be created within a project, organization, billing account, or
    folder.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _VersionFormat:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _VersionFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VersionFormat.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        VERSION_FORMAT_UNSPECIFIED: LogSink.VersionFormat.ValueType = ...  # 0
        """An unspecified format version that will default to V2."""

        V2: LogSink.VersionFormat.ValueType = ...  # 1
        """`LogEntry` version 2 format."""

        V1: LogSink.VersionFormat.ValueType = ...  # 2
        """`LogEntry` version 1 format."""

    class VersionFormat(_VersionFormat, metaclass=_VersionFormatEnumTypeWrapper):
        """Deprecated. This is unused."""
        pass

    VERSION_FORMAT_UNSPECIFIED: LogSink.VersionFormat.ValueType = ...  # 0
    """An unspecified format version that will default to V2."""

    V2: LogSink.VersionFormat.ValueType = ...  # 1
    """`LogEntry` version 2 format."""

    V1: LogSink.VersionFormat.ValueType = ...  # 2
    """`LogEntry` version 1 format."""


    NAME_FIELD_NUMBER: builtins.int
    DESTINATION_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    EXCLUSIONS_FIELD_NUMBER: builtins.int
    OUTPUT_VERSION_FORMAT_FIELD_NUMBER: builtins.int
    WRITER_IDENTITY_FIELD_NUMBER: builtins.int
    INCLUDE_CHILDREN_FIELD_NUMBER: builtins.int
    BIGQUERY_OPTIONS_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The client-assigned sink identifier, unique within the project. Example:
    `"my-syslog-errors-to-pubsub"`. Sink identifiers are limited to 100
    characters and can include only the following characters: upper and
    lower-case alphanumeric characters, underscores, hyphens, and periods.
    First character has to be alphanumeric.
    """

    destination: typing.Text = ...
    """Required. The export destination:

        "storage.googleapis.com/[GCS_BUCKET]"
        "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
        "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]"

    The sink's `writer_identity`, set when the sink is created, must
    have permission to write to the destination or else the log
    entries are not exported. For more information, see
    [Exporting Logs with
    Sinks](https://cloud.google.com/logging/docs/api/tasks/exporting-logs).
    """

    filter: typing.Text = ...
    """Optional. An [advanced logs
    filter](https://cloud.google.com/logging/docs/view/advanced-queries). The
    only exported log entries are those that are in the resource owning the
    sink and that match the filter. For example:

        logName="projects/[PROJECT_ID]/logs/[LOG_ID]" AND severity>=ERROR
    """

    description: typing.Text = ...
    """Optional. A description of this sink.
    The maximum length of the description is 8000 characters.
    """

    disabled: builtins.bool = ...
    """Optional. If set to True, then this sink is disabled and it does not
    export any log entries.
    """

    @property
    def exclusions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogExclusion]:
        """Optional. Log entries that match any of the exclusion filters will not be exported.
        If a log entry is matched by both `filter` and one of `exclusion_filters`
        it will not be exported.
        """
        pass
    output_version_format: global___LogSink.VersionFormat.ValueType = ...
    """Deprecated. This field is unused."""

    writer_identity: typing.Text = ...
    """Output only. An IAM identity&mdash;a service account or group&mdash;under which Logging
    writes the exported log entries to the sink's destination. This field is
    set by [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink] and
    [sinks.update][google.logging.v2.ConfigServiceV2.UpdateSink] based on the
    value of `unique_writer_identity` in those methods.

    Until you grant this identity write-access to the destination, log entry
    exports from this sink will fail. For more information,
    see [Granting Access for a
    Resource](https://cloud.google.com/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource).
    Consult the destination service's documentation to determine the
    appropriate IAM roles to assign to the identity.
    """

    include_children: builtins.bool = ...
    """Optional. This field applies only to sinks owned by organizations and
    folders. If the field is false, the default, only the logs owned by the
    sink's parent resource are available for export. If the field is true, then
    logs from all the projects, folders, and billing accounts contained in the
    sink's parent resource are also available for export. Whether a particular
    log entry from the children is exported depends on the sink's filter
    expression. For example, if this field is true, then the filter
    `resource.type=gce_instance` would export all Compute Engine VM instance
    log entries from all projects in the sink's parent. To only export entries
    from certain child projects, filter on the project part of the log name:

        logName:("projects/test-project1/" OR "projects/test-project2/") AND
        resource.type=gce_instance
    """

    @property
    def bigquery_options(self) -> global___BigQueryOptions:
        """Optional. Options that affect sinks exporting data to BigQuery."""
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The creation timestamp of the sink.

        This field may not be present for older sinks.
        """
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The last update timestamp of the sink.

        This field may not be present for older sinks.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        destination : typing.Text = ...,
        filter : typing.Text = ...,
        description : typing.Text = ...,
        disabled : builtins.bool = ...,
        exclusions : typing.Optional[typing.Iterable[global___LogExclusion]] = ...,
        output_version_format : global___LogSink.VersionFormat.ValueType = ...,
        writer_identity : typing.Text = ...,
        include_children : builtins.bool = ...,
        bigquery_options : typing.Optional[global___BigQueryOptions] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bigquery_options",b"bigquery_options","create_time",b"create_time","options",b"options","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bigquery_options",b"bigquery_options","create_time",b"create_time","description",b"description","destination",b"destination","disabled",b"disabled","exclusions",b"exclusions","filter",b"filter","include_children",b"include_children","name",b"name","options",b"options","output_version_format",b"output_version_format","update_time",b"update_time","writer_identity",b"writer_identity"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["options",b"options"]) -> typing.Optional[typing_extensions.Literal["bigquery_options"]]: ...
global___LogSink = LogSink

class BigQueryOptions(google.protobuf.message.Message):
    """Options that change functionality of a sink exporting data to BigQuery."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USE_PARTITIONED_TABLES_FIELD_NUMBER: builtins.int
    USES_TIMESTAMP_COLUMN_PARTITIONING_FIELD_NUMBER: builtins.int
    use_partitioned_tables: builtins.bool = ...
    """Optional. Whether to use [BigQuery's partition
    tables](https://cloud.google.com/bigquery/docs/partitioned-tables). By
    default, Logging creates dated tables based on the log entries' timestamps,
    e.g. syslog_20170523. With partitioned tables the date suffix is no longer
    present and [special query
    syntax](https://cloud.google.com/bigquery/docs/querying-partitioned-tables)
    has to be used instead. In both cases, tables are sharded based on UTC
    timezone.
    """

    uses_timestamp_column_partitioning: builtins.bool = ...
    """Output only. True if new timestamp column based partitioning is in use,
    false if legacy ingestion-time partitioning is in use.
    All new sinks will have this field set true and will use timestamp column
    based partitioning. If use_partitioned_tables is false, this value has no
    meaning and will be false. Legacy sinks using partitioned tables will have
    this field set to false.
    """

    def __init__(self,
        *,
        use_partitioned_tables : builtins.bool = ...,
        uses_timestamp_column_partitioning : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["use_partitioned_tables",b"use_partitioned_tables","uses_timestamp_column_partitioning",b"uses_timestamp_column_partitioning"]) -> None: ...
global___BigQueryOptions = BigQueryOptions

class ListBucketsRequest(google.protobuf.message.Message):
    """The parameters to `ListBuckets`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource whose buckets are to be listed:

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
        "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
        "folders/[FOLDER_ID]/locations/[LOCATION_ID]"

    Note: The locations portion of the resource must be specified, but
    supplying the character `-` in place of [LOCATION_ID] will return all
    buckets.
    """

    page_token: typing.Text = ...
    """Optional. If present, then retrieve the next batch of results from the
    preceding call to this method. `pageToken` must be the value of
    `nextPageToken` from the previous response. The values of other method
    parameters should be identical to those in the previous call.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of results to return from this request.
    Non-positive values are ignored. The presence of `nextPageToken` in the
    response indicates that more results might be available.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListBucketsRequest = ListBucketsRequest

class ListBucketsResponse(google.protobuf.message.Message):
    """The response from ListBuckets."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUCKETS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def buckets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogBucket]:
        """A list of buckets."""
        pass
    next_page_token: typing.Text = ...
    """If there might be more results than appear in this response, then
    `nextPageToken` is included. To get the next set of results, call the same
    method again using the value of `nextPageToken` as `pageToken`.
    """

    def __init__(self,
        *,
        buckets : typing.Optional[typing.Iterable[global___LogBucket]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["buckets",b"buckets","next_page_token",b"next_page_token"]) -> None: ...
global___ListBucketsResponse = ListBucketsResponse

class CreateBucketRequest(google.protobuf.message.Message):
    """The parameters to `CreateBucket`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    BUCKET_ID_FIELD_NUMBER: builtins.int
    BUCKET_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The resource in which to create the bucket:

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]"

    Example: `"projects/my-logging-project/locations/global"`
    """

    bucket_id: typing.Text = ...
    """Required. A client-assigned identifier such as `"my-bucket"`. Identifiers are
    limited to 100 characters and can include only letters, digits,
    underscores, hyphens, and periods.
    """

    @property
    def bucket(self) -> global___LogBucket:
        """Required. The new bucket. The region specified in the new bucket must be compliant
        with any Location Restriction Org Policy. The name field in the bucket is
        ignored.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        bucket_id : typing.Text = ...,
        bucket : typing.Optional[global___LogBucket] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bucket",b"bucket"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket",b"bucket","bucket_id",b"bucket_id","parent",b"parent"]) -> None: ...
global___CreateBucketRequest = CreateBucketRequest

class UpdateBucketRequest(google.protobuf.message.Message):
    """The parameters to `UpdateBucket`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    BUCKET_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The full resource name of the bucket to update.

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"

    Example:
    `"projects/my-project-id/locations/my-location/buckets/my-bucket-id"`. Also
    requires permission "resourcemanager.projects.updateLiens" to set the
    locked property
    """

    @property
    def bucket(self) -> global___LogBucket:
        """Required. The updated bucket."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. Field mask that specifies the fields in `bucket` that need an update. A
        bucket field will be overwritten if, and only if, it is in the update
        mask. `name` and output only fields cannot be updated.

        For a detailed `FieldMask` definition, see
        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask

        Example: `updateMask=retention_days`.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        bucket : typing.Optional[global___LogBucket] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bucket",b"bucket","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket",b"bucket","name",b"name","update_mask",b"update_mask"]) -> None: ...
global___UpdateBucketRequest = UpdateBucketRequest

class GetBucketRequest(google.protobuf.message.Message):
    """The parameters to `GetBucket`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of the bucket:

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"

    Example:
    `"projects/my-project-id/locations/my-location/buckets/my-bucket-id"`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetBucketRequest = GetBucketRequest

class DeleteBucketRequest(google.protobuf.message.Message):
    """The parameters to `DeleteBucket`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The full resource name of the bucket to delete.

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"

    Example:
    `"projects/my-project-id/locations/my-location/buckets/my-bucket-id"`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteBucketRequest = DeleteBucketRequest

class UndeleteBucketRequest(google.protobuf.message.Message):
    """The parameters to `UndeleteBucket`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The full resource name of the bucket to undelete.

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
        "folders/[FOLDER_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"

    Example:
    `"projects/my-project-id/locations/my-location/buckets/my-bucket-id"`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___UndeleteBucketRequest = UndeleteBucketRequest

class ListViewsRequest(google.protobuf.message.Message):
    """The parameters to `ListViews`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The bucket whose views are to be listed:

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
    """

    page_token: typing.Text = ...
    """Optional. If present, then retrieve the next batch of results from the
    preceding call to this method. `pageToken` must be the value of
    `nextPageToken` from the previous response. The values of other method
    parameters should be identical to those in the previous call.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of results to return from this request.
    Non-positive values are ignored. The presence of `nextPageToken` in the
    response indicates that more results might be available.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListViewsRequest = ListViewsRequest

class ListViewsResponse(google.protobuf.message.Message):
    """The response from ListViews."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VIEWS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def views(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogView]:
        """A list of views."""
        pass
    next_page_token: typing.Text = ...
    """If there might be more results than appear in this response, then
    `nextPageToken` is included. To get the next set of results, call the same
    method again using the value of `nextPageToken` as `pageToken`.
    """

    def __init__(self,
        *,
        views : typing.Optional[typing.Iterable[global___LogView]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","views",b"views"]) -> None: ...
global___ListViewsResponse = ListViewsResponse

class CreateViewRequest(google.protobuf.message.Message):
    """The parameters to `CreateView`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    VIEW_ID_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The bucket in which to create the view

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"

    Example:
    `"projects/my-logging-project/locations/my-location/buckets/my-bucket"`
    """

    view_id: typing.Text = ...
    """Required. The id to use for this view."""

    @property
    def view(self) -> global___LogView:
        """Required. The new view."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        view_id : typing.Text = ...,
        view : typing.Optional[global___LogView] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["view",b"view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","view",b"view","view_id",b"view_id"]) -> None: ...
global___CreateViewRequest = CreateViewRequest

class UpdateViewRequest(google.protobuf.message.Message):
    """The parameters to `UpdateView`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The full resource name of the view to update

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"

    Example:
      `"projects/my-project-id/locations/my-location/buckets/my-bucket-id/views/my-view-id"`.
    """

    @property
    def view(self) -> global___LogView:
        """Required. The updated view."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. Field mask that specifies the fields in `view` that need
        an update. A field will be overwritten if, and only if, it is
        in the update mask. `name` and output only fields cannot be updated.

        For a detailed `FieldMask` definition, see
        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask

        Example: `updateMask=filter`.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        view : typing.Optional[global___LogView] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update_mask",b"update_mask","view",b"view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","update_mask",b"update_mask","view",b"view"]) -> None: ...
global___UpdateViewRequest = UpdateViewRequest

class GetViewRequest(google.protobuf.message.Message):
    """The parameters to `GetView`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of the policy:

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"

    Example:
    `"projects/my-project-id/locations/my-location/buckets/my-bucket-id/views/my-view-id"`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetViewRequest = GetViewRequest

class DeleteViewRequest(google.protobuf.message.Message):
    """The parameters to `DeleteView`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The full resource name of the view to delete:

        "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]/views/[VIEW_ID]"

    Example:
       `"projects/my-project-id/locations/my-location/buckets/my-bucket-id/views/my-view-id"`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteViewRequest = DeleteViewRequest

class ListSinksRequest(google.protobuf.message.Message):
    """The parameters to `ListSinks`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource whose sinks are to be listed:

        "projects/[PROJECT_ID]"
        "organizations/[ORGANIZATION_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]"
        "folders/[FOLDER_ID]"
    """

    page_token: typing.Text = ...
    """Optional. If present, then retrieve the next batch of results from the
    preceding call to this method. `pageToken` must be the value of
    `nextPageToken` from the previous response. The values of other method
    parameters should be identical to those in the previous call.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of results to return from this request.
    Non-positive values are ignored. The presence of `nextPageToken` in the
    response indicates that more results might be available.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListSinksRequest = ListSinksRequest

class ListSinksResponse(google.protobuf.message.Message):
    """Result returned from `ListSinks`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SINKS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def sinks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogSink]:
        """A list of sinks."""
        pass
    next_page_token: typing.Text = ...
    """If there might be more results than appear in this response, then
    `nextPageToken` is included. To get the next set of results, call the same
    method again using the value of `nextPageToken` as `pageToken`.
    """

    def __init__(self,
        *,
        sinks : typing.Optional[typing.Iterable[global___LogSink]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","sinks",b"sinks"]) -> None: ...
global___ListSinksResponse = ListSinksResponse

class GetSinkRequest(google.protobuf.message.Message):
    """The parameters to `GetSink`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SINK_NAME_FIELD_NUMBER: builtins.int
    sink_name: typing.Text = ...
    """Required. The resource name of the sink:

        "projects/[PROJECT_ID]/sinks/[SINK_ID]"
        "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
        "folders/[FOLDER_ID]/sinks/[SINK_ID]"

    Example: `"projects/my-project-id/sinks/my-sink-id"`.
    """

    def __init__(self,
        *,
        sink_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sink_name",b"sink_name"]) -> None: ...
global___GetSinkRequest = GetSinkRequest

class CreateSinkRequest(google.protobuf.message.Message):
    """The parameters to `CreateSink`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    SINK_FIELD_NUMBER: builtins.int
    UNIQUE_WRITER_IDENTITY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The resource in which to create the sink:

        "projects/[PROJECT_ID]"
        "organizations/[ORGANIZATION_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]"
        "folders/[FOLDER_ID]"

    Examples: `"projects/my-logging-project"`, `"organizations/123456789"`.
    """

    @property
    def sink(self) -> global___LogSink:
        """Required. The new sink, whose `name` parameter is a sink identifier that
        is not already in use.
        """
        pass
    unique_writer_identity: builtins.bool = ...
    """Optional. Determines the kind of IAM identity returned as `writer_identity`
    in the new sink. If this value is omitted or set to false, and if the
    sink's parent is a project, then the value returned as `writer_identity` is
    the same group or service account used by Logging before the addition of
    writer identities to this API. The sink's destination must be in the same
    project as the sink itself.

    If this field is set to true, or if the sink is owned by a non-project
    resource such as an organization, then the value of `writer_identity` will
    be a unique service account used only for exports from the new sink. For
    more information, see `writer_identity` in [LogSink][google.logging.v2.LogSink].
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        sink : typing.Optional[global___LogSink] = ...,
        unique_writer_identity : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sink",b"sink"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","sink",b"sink","unique_writer_identity",b"unique_writer_identity"]) -> None: ...
global___CreateSinkRequest = CreateSinkRequest

class UpdateSinkRequest(google.protobuf.message.Message):
    """The parameters to `UpdateSink`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SINK_NAME_FIELD_NUMBER: builtins.int
    SINK_FIELD_NUMBER: builtins.int
    UNIQUE_WRITER_IDENTITY_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    sink_name: typing.Text = ...
    """Required. The full resource name of the sink to update, including the parent
    resource and the sink identifier:

        "projects/[PROJECT_ID]/sinks/[SINK_ID]"
        "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
        "folders/[FOLDER_ID]/sinks/[SINK_ID]"

    Example: `"projects/my-project-id/sinks/my-sink-id"`.
    """

    @property
    def sink(self) -> global___LogSink:
        """Required. The updated sink, whose name is the same identifier that appears as part
        of `sink_name`.
        """
        pass
    unique_writer_identity: builtins.bool = ...
    """Optional. See [sinks.create][google.logging.v2.ConfigServiceV2.CreateSink]
    for a description of this field. When updating a sink, the effect of this
    field on the value of `writer_identity` in the updated sink depends on both
    the old and new values of this field:

    +   If the old and new values of this field are both false or both true,
        then there is no change to the sink's `writer_identity`.
    +   If the old value is false and the new value is true, then
        `writer_identity` is changed to a unique service account.
    +   It is an error if the old value is true and the new value is
        set to false or defaulted to false.
    """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. Field mask that specifies the fields in `sink` that need
        an update. A sink field will be overwritten if, and only if, it is
        in the update mask. `name` and output only fields cannot be updated.

        An empty updateMask is temporarily treated as using the following mask
        for backwards compatibility purposes:
          destination,filter,includeChildren
        At some point in the future, behavior will be removed and specifying an
        empty updateMask will be an error.

        For a detailed `FieldMask` definition, see
        https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask

        Example: `updateMask=filter`.
        """
        pass
    def __init__(self,
        *,
        sink_name : typing.Text = ...,
        sink : typing.Optional[global___LogSink] = ...,
        unique_writer_identity : builtins.bool = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sink",b"sink","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["sink",b"sink","sink_name",b"sink_name","unique_writer_identity",b"unique_writer_identity","update_mask",b"update_mask"]) -> None: ...
global___UpdateSinkRequest = UpdateSinkRequest

class DeleteSinkRequest(google.protobuf.message.Message):
    """The parameters to `DeleteSink`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SINK_NAME_FIELD_NUMBER: builtins.int
    sink_name: typing.Text = ...
    """Required. The full resource name of the sink to delete, including the parent
    resource and the sink identifier:

        "projects/[PROJECT_ID]/sinks/[SINK_ID]"
        "organizations/[ORGANIZATION_ID]/sinks/[SINK_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/sinks/[SINK_ID]"
        "folders/[FOLDER_ID]/sinks/[SINK_ID]"

    Example: `"projects/my-project-id/sinks/my-sink-id"`.
    """

    def __init__(self,
        *,
        sink_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sink_name",b"sink_name"]) -> None: ...
global___DeleteSinkRequest = DeleteSinkRequest

class LogExclusion(google.protobuf.message.Message):
    """Specifies a set of log entries that are not to be stored in
    Logging. If your GCP resource receives a large volume of logs, you can
    use exclusions to reduce your chargeable logs. Exclusions are
    processed after log sinks, so you can export log entries before they are
    excluded. Note that organization-level and folder-level exclusions don't
    apply to child resources, and that you can't exclude audit log entries.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. A client-assigned identifier, such as `"load-balancer-exclusion"`.
    Identifiers are limited to 100 characters and can include only letters,
    digits, underscores, hyphens, and periods. First character has to be
    alphanumeric.
    """

    description: typing.Text = ...
    """Optional. A description of this exclusion."""

    filter: typing.Text = ...
    """Required. An [advanced logs
    filter](https://cloud.google.com/logging/docs/view/advanced-queries) that
    matches the log entries to be excluded. By using the [sample
    function](https://cloud.google.com/logging/docs/view/advanced-queries#sample),
    you can exclude less than 100% of the matching log entries.
    For example, the following query matches 99% of low-severity log
    entries from Google Cloud Storage buckets:

    `"resource.type=gcs_bucket severity<ERROR sample(insertId, 0.99)"`
    """

    disabled: builtins.bool = ...
    """Optional. If set to True, then this exclusion is disabled and it does not
    exclude any log entries. You can [update an
    exclusion][google.logging.v2.ConfigServiceV2.UpdateExclusion] to change the
    value of this field.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The creation timestamp of the exclusion.

        This field may not be present for older exclusions.
        """
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The last update timestamp of the exclusion.

        This field may not be present for older exclusions.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        filter : typing.Text = ...,
        disabled : builtins.bool = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","disabled",b"disabled","filter",b"filter","name",b"name","update_time",b"update_time"]) -> None: ...
global___LogExclusion = LogExclusion

class ListExclusionsRequest(google.protobuf.message.Message):
    """The parameters to `ListExclusions`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource whose exclusions are to be listed.

        "projects/[PROJECT_ID]"
        "organizations/[ORGANIZATION_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]"
        "folders/[FOLDER_ID]"
    """

    page_token: typing.Text = ...
    """Optional. If present, then retrieve the next batch of results from the
    preceding call to this method. `pageToken` must be the value of
    `nextPageToken` from the previous response. The values of other method
    parameters should be identical to those in the previous call.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of results to return from this request.
    Non-positive values are ignored. The presence of `nextPageToken` in the
    response indicates that more results might be available.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListExclusionsRequest = ListExclusionsRequest

class ListExclusionsResponse(google.protobuf.message.Message):
    """Result returned from `ListExclusions`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXCLUSIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def exclusions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogExclusion]:
        """A list of exclusions."""
        pass
    next_page_token: typing.Text = ...
    """If there might be more results than appear in this response, then
    `nextPageToken` is included. To get the next set of results, call the same
    method again using the value of `nextPageToken` as `pageToken`.
    """

    def __init__(self,
        *,
        exclusions : typing.Optional[typing.Iterable[global___LogExclusion]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["exclusions",b"exclusions","next_page_token",b"next_page_token"]) -> None: ...
global___ListExclusionsResponse = ListExclusionsResponse

class GetExclusionRequest(google.protobuf.message.Message):
    """The parameters to `GetExclusion`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of an existing exclusion:

        "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
        "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
        "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]"

    Example: `"projects/my-project-id/exclusions/my-exclusion-id"`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetExclusionRequest = GetExclusionRequest

class CreateExclusionRequest(google.protobuf.message.Message):
    """The parameters to `CreateExclusion`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    EXCLUSION_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource in which to create the exclusion:

        "projects/[PROJECT_ID]"
        "organizations/[ORGANIZATION_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]"
        "folders/[FOLDER_ID]"

    Examples: `"projects/my-logging-project"`, `"organizations/123456789"`.
    """

    @property
    def exclusion(self) -> global___LogExclusion:
        """Required. The new exclusion, whose `name` parameter is an exclusion name
        that is not already used in the parent resource.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        exclusion : typing.Optional[global___LogExclusion] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["exclusion",b"exclusion"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["exclusion",b"exclusion","parent",b"parent"]) -> None: ...
global___CreateExclusionRequest = CreateExclusionRequest

class UpdateExclusionRequest(google.protobuf.message.Message):
    """The parameters to `UpdateExclusion`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    EXCLUSION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of the exclusion to update:

        "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
        "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
        "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]"

    Example: `"projects/my-project-id/exclusions/my-exclusion-id"`.
    """

    @property
    def exclusion(self) -> global___LogExclusion:
        """Required. New values for the existing exclusion. Only the fields specified in
        `update_mask` are relevant.
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. A non-empty list of fields to change in the existing exclusion. New values
        for the fields are taken from the corresponding fields in the
        [LogExclusion][google.logging.v2.LogExclusion] included in this request. Fields not mentioned in
        `update_mask` are not changed and are ignored in the request.

        For example, to change the filter and description of an exclusion,
        specify an `update_mask` of `"filter,description"`.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        exclusion : typing.Optional[global___LogExclusion] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["exclusion",b"exclusion","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["exclusion",b"exclusion","name",b"name","update_mask",b"update_mask"]) -> None: ...
global___UpdateExclusionRequest = UpdateExclusionRequest

class DeleteExclusionRequest(google.protobuf.message.Message):
    """The parameters to `DeleteExclusion`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name of an existing exclusion to delete:

        "projects/[PROJECT_ID]/exclusions/[EXCLUSION_ID]"
        "organizations/[ORGANIZATION_ID]/exclusions/[EXCLUSION_ID]"
        "billingAccounts/[BILLING_ACCOUNT_ID]/exclusions/[EXCLUSION_ID]"
        "folders/[FOLDER_ID]/exclusions/[EXCLUSION_ID]"

    Example: `"projects/my-project-id/exclusions/my-exclusion-id"`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteExclusionRequest = DeleteExclusionRequest

class GetCmekSettingsRequest(google.protobuf.message.Message):
    """The parameters to
    [GetCmekSettings][google.logging.v2.ConfigServiceV2.GetCmekSettings].

    See [Enabling CMEK for Logs
    Router](https://cloud.google.com/logging/docs/routing/managed-encryption) for
    more information.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource for which to retrieve CMEK settings.

        "projects/[PROJECT_ID]/cmekSettings"
        "organizations/[ORGANIZATION_ID]/cmekSettings"
        "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
        "folders/[FOLDER_ID]/cmekSettings"

    Example: `"organizations/12345/cmekSettings"`.

    Note: CMEK for the Logs Router can currently only be configured for GCP
    organizations. Once configured, it applies to all projects and folders in
    the GCP organization.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetCmekSettingsRequest = GetCmekSettingsRequest

class UpdateCmekSettingsRequest(google.protobuf.message.Message):
    """The parameters to
    [UpdateCmekSettings][google.logging.v2.ConfigServiceV2.UpdateCmekSettings].

    See [Enabling CMEK for Logs
    Router](https://cloud.google.com/logging/docs/routing/managed-encryption) for
    more information.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    CMEK_SETTINGS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The resource name for the CMEK settings to update.

        "projects/[PROJECT_ID]/cmekSettings"
        "organizations/[ORGANIZATION_ID]/cmekSettings"
        "billingAccounts/[BILLING_ACCOUNT_ID]/cmekSettings"
        "folders/[FOLDER_ID]/cmekSettings"

    Example: `"organizations/12345/cmekSettings"`.

    Note: CMEK for the Logs Router can currently only be configured for GCP
    organizations. Once configured, it applies to all projects and folders in
    the GCP organization.
    """

    @property
    def cmek_settings(self) -> global___CmekSettings:
        """Required. The CMEK settings to update.

        See [Enabling CMEK for Logs
        Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
        for more information.
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. Field mask identifying which fields from `cmek_settings` should
        be updated. A field will be overwritten if and only if it is in the update
        mask. Output only fields cannot be updated.

        See [FieldMask][google.protobuf.FieldMask] for more information.

        Example: `"updateMask=kmsKeyName"`
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        cmek_settings : typing.Optional[global___CmekSettings] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cmek_settings",b"cmek_settings","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cmek_settings",b"cmek_settings","name",b"name","update_mask",b"update_mask"]) -> None: ...
global___UpdateCmekSettingsRequest = UpdateCmekSettingsRequest

class CmekSettings(google.protobuf.message.Message):
    """Describes the customer-managed encryption key (CMEK) settings associated with
    a project, folder, organization, billing account, or flexible resource.

    Note: CMEK for the Logs Router can currently only be configured for GCP
    organizations. Once configured, it applies to all projects and folders in the
    GCP organization.

    See [Enabling CMEK for Logs
    Router](https://cloud.google.com/logging/docs/routing/managed-encryption) for
    more information.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The resource name of the CMEK settings."""

    kms_key_name: typing.Text = ...
    """The resource name for the configured Cloud KMS key.

    KMS key name format:
        "projects/[PROJECT_ID]/locations/[LOCATION]/keyRings/[KEYRING]/cryptoKeys/[KEY]"

    For example:
        `"projects/my-project-id/locations/my-region/keyRings/key-ring-name/cryptoKeys/key-name"`



    To enable CMEK for the Logs Router, set this field to a valid
    `kms_key_name` for which the associated service account has the required
    `roles/cloudkms.cryptoKeyEncrypterDecrypter` role assigned for the key.

    The Cloud KMS key used by the Log Router can be updated by changing the
    `kms_key_name` to a new valid key name. Encryption operations that are in
    progress will be completed with the key that was in use when they started.
    Decryption operations will be completed using the key that was used at the
    time of encryption unless access to that key has been revoked.

    To disable CMEK for the Logs Router, set this field to an empty string.

    See [Enabling CMEK for Logs
    Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
    for more information.
    """

    service_account_id: typing.Text = ...
    """Output only. The service account that will be used by the Logs Router to access your
    Cloud KMS key.

    Before enabling CMEK for Logs Router, you must first assign the role
    `roles/cloudkms.cryptoKeyEncrypterDecrypter` to the service account that
    the Logs Router will use to access your Cloud KMS key. Use
    [GetCmekSettings][google.logging.v2.ConfigServiceV2.GetCmekSettings] to
    obtain the service account ID.

    See [Enabling CMEK for Logs
    Router](https://cloud.google.com/logging/docs/routing/managed-encryption)
    for more information.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        kms_key_name : typing.Text = ...,
        service_account_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kms_key_name",b"kms_key_name","name",b"name","service_account_id",b"service_account_id"]) -> None: ...
global___CmekSettings = CmekSettings
