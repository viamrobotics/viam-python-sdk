"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Cluster(google.protobuf.message.Message):
    """Cluster resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CERTIFICATE_FIELD_NUMBER: builtins.int
    SERVICE_ENDPOINT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the cluster. The format of cluster is:
    projects/<projectid>/locations/<locationid>/clusters/<clusterid>.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time at which this cluster was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time at which this cluster was updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels with user-defined metadata."""
        pass
    certificate: typing.Text = ...
    """Output only. The certificate for creating the secure connection between the
    client and the AI Streams data plane.
    """

    service_endpoint: typing.Text = ...
    """Output only. The endpoint of the data plane cluster."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        certificate : typing.Text = ...,
        service_endpoint : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["certificate",b"certificate","create_time",b"create_time","labels",b"labels","name",b"name","service_endpoint",b"service_endpoint","update_time",b"update_time"]) -> None: ...
global___Cluster = Cluster

class ListClustersRequest(google.protobuf.message.Message):
    """Request message for 'ListClusters'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent that owns the collection of Clusters."""

    page_size: builtins.int = ...
    """Maximum number of Clusters to return."""

    page_token: typing.Text = ...
    """Page token received from a previous `ListClusters` call. Provide this to
    retrieve the subsequent page. When paginating, all other parameters
    provided to `ListClusters` must match the call that provided the page
    token.
    """

    filter: typing.Text = ...
    """Filter request."""

    order_by: typing.Text = ...
    """Order by fields for the result."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListClustersRequest = ListClustersRequest

class ListClustersResponse(google.protobuf.message.Message):
    """Response message from 'ListClusters'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLUSTERS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def clusters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Cluster]:
        """List of clusters."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        clusters : typing.Optional[typing.Iterable[global___Cluster]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["clusters",b"clusters","next_page_token",b"next_page_token","unreachable",b"unreachable"]) -> None: ...
global___ListClustersResponse = ListClustersResponse

class GetClusterRequest(google.protobuf.message.Message):
    """Request message for 'GetCluster'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the Cluster resource to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetClusterRequest = GetClusterRequest

class CreateClusterRequest(google.protobuf.message.Message):
    """Request message for 'CreateCluster'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    CLUSTER_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent that owns the collection of Clusters."""

    cluster_id: typing.Text = ...
    """Required. The cluster identifier."""

    @property
    def cluster(self) -> global___Cluster:
        """Required. The cluster resource to create."""
        pass
    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique
    request ID so that if you must retry your request, the server will know to
    ignore the request if it has already been completed. The server will
    guarantee that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        cluster_id : typing.Text = ...,
        cluster : typing.Optional[global___Cluster] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cluster",b"cluster"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster",b"cluster","cluster_id",b"cluster_id","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateClusterRequest = CreateClusterRequest

class UpdateClusterRequest(google.protobuf.message.Message):
    """Request message for 'UpdateCluster'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    CLUSTER_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. Field mask is used to specify the fields to be overwritten in the
        Cluster resource by the update.
        The fields specified in the update_mask are relative to the resource, not
        the full request. A field will be overwritten if it is in the mask. If the
        user does not provide a mask then all fields will be overwritten.
        """
        pass
    @property
    def cluster(self) -> global___Cluster:
        """Required. The Cluster resource to update."""
        pass
    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique
    request ID so that if you must retry your request, the server will know to
    ignore the request if it has already been completed. The server will
    guarantee that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        cluster : typing.Optional[global___Cluster] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cluster",b"cluster","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster",b"cluster","request_id",b"request_id","update_mask",b"update_mask"]) -> None: ...
global___UpdateClusterRequest = UpdateClusterRequest

class DeleteClusterRequest(google.protobuf.message.Message):
    """Request message for 'DeleteCluster'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of cluster to delete."""

    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique
    request ID so that if you must retry your request, the server will know to
    ignore the request if it has already been completed. The server will
    guarantee that for at least 60 minutes after the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteClusterRequest = DeleteClusterRequest

class Stream(google.protobuf.message.Message):
    """Stream resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the stream. The format for the full name is:
    projects/<projectid>/location/<locationid>/clusters/<clusterid>/streams/<streamid>.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time at which this Stream was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time at which this Stream was updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The labels of the stream."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","labels",b"labels","name",b"name","update_time",b"update_time"]) -> None: ...
global___Stream = Stream

class ListStreamsRequest(google.protobuf.message.Message):
    """Request message for 'ListStreams'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent that owns the collection of the Streams."""

    page_size: builtins.int = ...
    """Maximum number of Streams to return."""

    page_token: typing.Text = ...
    """Page token received from a previous `ListStreams` call. Provide this to
    retrieve the subsequent page. When paginating, all other parameters
    provided to `ListClusters` must match the call that provided the page
    token.
    """

    filter: typing.Text = ...
    """Filter request."""

    order_by: typing.Text = ...
    """Order by fields for the result."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListStreamsRequest = ListStreamsRequest

class ListStreamsResponse(google.protobuf.message.Message):
    """Response message from 'ListStreams'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STREAMS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def streams(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Stream]:
        """List of the streams."""
        pass
    next_page_token: typing.Text = ...
    """A token, which can be sent as `page_token` to retrieve the next page.
    If this field is omitted, there are no subsequent pages.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        streams : typing.Optional[typing.Iterable[global___Stream]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","streams",b"streams","unreachable",b"unreachable"]) -> None: ...
global___ListStreamsResponse = ListStreamsResponse

class GetStreamRequest(google.protobuf.message.Message):
    """Request message for 'GetStream'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the stream."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetStreamRequest = GetStreamRequest

class CreateStreamRequest(google.protobuf.message.Message):
    """Request message for 'CreateStream'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    STREAM_ID_FIELD_NUMBER: builtins.int
    STREAM_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent that owns the collection of streams."""

    stream_id: typing.Text = ...
    """Required. The stream identifier."""

    @property
    def stream(self) -> global___Stream:
        """Required. The stream to create."""
        pass
    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique
    request ID so that if you must retry your request, the server will know to
    ignore the request if it has already been completed. The server will
    guarantee that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and t
    he request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        stream_id : typing.Text = ...,
        stream : typing.Optional[global___Stream] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["stream",b"stream"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","request_id",b"request_id","stream",b"stream","stream_id",b"stream_id"]) -> None: ...
global___CreateStreamRequest = CreateStreamRequest

class UpdateStreamRequest(google.protobuf.message.Message):
    """Request message for 'UpdateStream'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    STREAM_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. Field mask is used to specify the fields to be overwritten in the
        Stream resource by the update.
        The fields specified in the update_mask are relative to the resource, not
        the full request. A field will be overwritten if it is in the mask. If the
        user does not provide a mask then all fields will be overwritten.
        """
        pass
    @property
    def stream(self) -> global___Stream:
        """Required. The stream resource to update."""
        pass
    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique
    request ID so that if you must retry your request, the server will know to
    ignore the request if it has already been completed. The server will
    guarantee that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and t
    he request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        stream : typing.Optional[global___Stream] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["stream",b"stream","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_id",b"request_id","stream",b"stream","update_mask",b"update_mask"]) -> None: ...
global___UpdateStreamRequest = UpdateStreamRequest

class DeleteStreamRequest(google.protobuf.message.Message):
    """Request message for 'DeleteStream'."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the stream."""

    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique
    request ID so that if you must retry your request, the server will know to
    ignore the request if it has already been completed. The server will
    guarantee that for at least 60 minutes after the first request.

    For example, consider a situation where you make an initial request and t
    he request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteStreamRequest = DeleteStreamRequest

class OperationMetadata(google.protobuf.message.Message):
    """Represents the metadata of the long-running operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    VERB_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    REQUESTED_CANCELLATION_FIELD_NUMBER: builtins.int
    API_VERSION_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    target: typing.Text = ...
    """Output only. Server-defined resource path for the target of the operation."""

    verb: typing.Text = ...
    """Output only. Name of the verb executed by the operation."""

    status_message: typing.Text = ...
    """Output only. Human-readable status of the operation, if any."""

    requested_cancellation: builtins.bool = ...
    """Output only. Identifies whether the user has requested cancellation
    of the operation. Operations that have successfully been cancelled
    have [Operation.error][] value with a
    [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    `Code.CANCELLED`.
    """

    api_version: typing.Text = ...
    """Output only. API version used to start the operation."""

    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        target : typing.Text = ...,
        verb : typing.Text = ...,
        status_message : typing.Text = ...,
        requested_cancellation : builtins.bool = ...,
        api_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version",b"api_version","create_time",b"create_time","end_time",b"end_time","requested_cancellation",b"requested_cancellation","status_message",b"status_message","target",b"target","verb",b"verb"]) -> None: ...
global___OperationMetadata = OperationMetadata
