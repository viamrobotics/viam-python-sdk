"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class InsightTypeConfig(google.protobuf.message.Message):
    """Configuration for an InsightType."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    INSIGHT_TYPE_GENERATION_CONFIG_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    REVISION_ID_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of insight type config.
    Eg,
    projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/config
    """

    @property
    def insight_type_generation_config(self) -> global___InsightTypeGenerationConfig:
        """InsightTypeGenerationConfig which configures the generation of
        insights for this insight type.
        """
        pass
    etag: typing.Text = ...
    """Fingerprint of the InsightTypeConfig. Provides optimistic locking when
    updating.
    """

    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Last time when the config was updated."""
        pass
    revision_id: typing.Text = ...
    """Output only. Immutable. The revision ID of the config.
    A new revision is committed whenever the config is changed in any way.
    The format is an 8-character hexadecimal string.
    """

    @property
    def annotations(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Allows clients to store small amounts of arbitrary data. Annotations must
        follow the Kubernetes syntax.
        The total size of all keys and values combined is limited to 256k.
        Key can have 2 segments: prefix (optional) and name (required),
        separated by a slash (/).
        Prefix must be a DNS subdomain.
        Name must be 63 characters or less, begin and end with alphanumerics,
        with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.
        """
        pass
    display_name: typing.Text = ...
    """A user-settable field to provide a human-readable name to be used in user
    interfaces.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        insight_type_generation_config : typing.Optional[global___InsightTypeGenerationConfig] = ...,
        etag : typing.Text = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        revision_id : typing.Text = ...,
        annotations : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        display_name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["insight_type_generation_config",b"insight_type_generation_config","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotations",b"annotations","display_name",b"display_name","etag",b"etag","insight_type_generation_config",b"insight_type_generation_config","name",b"name","revision_id",b"revision_id","update_time",b"update_time"]) -> None: ...
global___InsightTypeConfig = InsightTypeConfig

class InsightTypeGenerationConfig(google.protobuf.message.Message):
    """A configuration to customize the generation of insights.
    Eg, customizing the lookback period considered when generating a
    insight.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARAMS_FIELD_NUMBER: builtins.int
    @property
    def params(self) -> google.protobuf.struct_pb2.Struct:
        """Parameters for this InsightTypeGenerationConfig. These configs can be used
        by or are applied to all subtypes.
        """
        pass
    def __init__(self,
        *,
        params : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["params",b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["params",b"params"]) -> None: ...
global___InsightTypeGenerationConfig = InsightTypeGenerationConfig
