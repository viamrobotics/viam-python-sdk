"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.recommender.v1beta1.insight_pb2
import google.cloud.recommender.v1beta1.insight_type_config_pb2
import google.cloud.recommender.v1beta1.recommendation_pb2
import google.cloud.recommender.v1beta1.recommender_config_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ListInsightsRequest(google.protobuf.message.Message):
    """Request for the `ListInsights` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The container resource on which to execute the request.
    Acceptable formats:

    * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]`

    * `projects/[PROJECT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]`

    * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]`

    * `folders/[FOLDER_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]`

    * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]`

    LOCATION here refers to GCP Locations:
    https://cloud.google.com/about/locations/
    INSIGHT_TYPE_ID refers to supported insight types:
    https://cloud.google.com/recommender/docs/insights/insight-types.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of results to return from this request.  Non-positive
    values are ignored. If not specified, the server will determine the number
    of results to return.
    """

    page_token: typing.Text = ...
    """Optional. If present, retrieves the next batch of results from the preceding call to
    this method. `page_token` must be the value of `next_page_token` from the
    previous response. The values of other method parameters must be identical
    to those in the previous call.
    """

    filter: typing.Text = ...
    """Optional. Filter expression to restrict the insights returned. Supported
    filter fields:

    * `stateInfo.state`

    * `insightSubtype`

    * `severity`

    Examples:

    * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED`

    * `insightSubtype = PERMISSIONS_USAGE`

    * `severity = CRITICAL OR severity = HIGH`

    * `stateInfo.state = ACTIVE AND (severity = CRITICAL OR severity = HIGH)`

    (These expressions are based on the filter language described at
    https://google.aip.dev/160)
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListInsightsRequest = ListInsightsRequest

class ListInsightsResponse(google.protobuf.message.Message):
    """Response to the `ListInsights` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSIGHTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def insights(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.recommender.v1beta1.insight_pb2.Insight]:
        """The set of insights for the `parent` resource."""
        pass
    next_page_token: typing.Text = ...
    """A token that can be used to request the next page of results. This field is
    empty if there are no additional results.
    """

    def __init__(self,
        *,
        insights : typing.Optional[typing.Iterable[google.cloud.recommender.v1beta1.insight_pb2.Insight]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["insights",b"insights","next_page_token",b"next_page_token"]) -> None: ...
global___ListInsightsResponse = ListInsightsResponse

class GetInsightRequest(google.protobuf.message.Message):
    """Request to the `GetInsight` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the insight."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetInsightRequest = GetInsightRequest

class MarkInsightAcceptedRequest(google.protobuf.message.Message):
    """Request for the `MarkInsightAccepted` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class StateMetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    STATE_METADATA_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the insight."""

    @property
    def state_metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional. State properties user wish to include with this state.  Full replace of the
        current state_metadata.
        """
        pass
    etag: typing.Text = ...
    """Required. Fingerprint of the Insight. Provides optimistic locking."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        state_metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["etag",b"etag","name",b"name","state_metadata",b"state_metadata"]) -> None: ...
global___MarkInsightAcceptedRequest = MarkInsightAcceptedRequest

class ListRecommendationsRequest(google.protobuf.message.Message):
    """Request for the `ListRecommendations` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The container resource on which to execute the request.
    Acceptable formats:

    * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]`

    * `projects/[PROJECT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]`

    * `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]`

    * `folders/[FOLDER_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]`

    * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]`

    LOCATION here refers to GCP Locations:
    https://cloud.google.com/about/locations/
    RECOMMENDER_ID refers to supported recommenders:
    https://cloud.google.com/recommender/docs/recommenders.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of results to return from this request.  Non-positive
    values are ignored. If not specified, the server will determine the number
    of results to return.
    """

    page_token: typing.Text = ...
    """Optional. If present, retrieves the next batch of results from the preceding call to
    this method. `page_token` must be the value of `next_page_token` from the
    previous response. The values of other method parameters must be identical
    to those in the previous call.
    """

    filter: typing.Text = ...
    """Filter expression to restrict the recommendations returned. Supported
    filter fields:

    * `state_info.state`

    * `recommenderSubtype`

    * `priority`

    Examples:

    * `stateInfo.state = ACTIVE OR stateInfo.state = DISMISSED`

    * `recommenderSubtype = REMOVE_ROLE OR recommenderSubtype = REPLACE_ROLE`

    * `priority = P1 OR priority = P2`

    * `stateInfo.state = ACTIVE AND (priority = P1 OR priority = P2)`

    (These expressions are based on the filter language described at
    https://google.aip.dev/160)
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListRecommendationsRequest = ListRecommendationsRequest

class ListRecommendationsResponse(google.protobuf.message.Message):
    """Response to the `ListRecommendations` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RECOMMENDATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def recommendations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.recommender.v1beta1.recommendation_pb2.Recommendation]:
        """The set of recommendations for the `parent` resource."""
        pass
    next_page_token: typing.Text = ...
    """A token that can be used to request the next page of results. This field is
    empty if there are no additional results.
    """

    def __init__(self,
        *,
        recommendations : typing.Optional[typing.Iterable[google.cloud.recommender.v1beta1.recommendation_pb2.Recommendation]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","recommendations",b"recommendations"]) -> None: ...
global___ListRecommendationsResponse = ListRecommendationsResponse

class GetRecommendationRequest(google.protobuf.message.Message):
    """Request to the `GetRecommendation` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the recommendation."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetRecommendationRequest = GetRecommendationRequest

class MarkRecommendationClaimedRequest(google.protobuf.message.Message):
    """Request for the `MarkRecommendationClaimed` Method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class StateMetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    STATE_METADATA_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the recommendation."""

    @property
    def state_metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """State properties to include with this state. Overwrites any existing
        `state_metadata`.
        Keys must match the regex `/^[a-z0-9][a-z0-9_.-]{0,62}$/`.
        Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.
        """
        pass
    etag: typing.Text = ...
    """Required. Fingerprint of the Recommendation. Provides optimistic locking."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        state_metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["etag",b"etag","name",b"name","state_metadata",b"state_metadata"]) -> None: ...
global___MarkRecommendationClaimedRequest = MarkRecommendationClaimedRequest

class MarkRecommendationSucceededRequest(google.protobuf.message.Message):
    """Request for the `MarkRecommendationSucceeded` Method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class StateMetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    STATE_METADATA_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the recommendation."""

    @property
    def state_metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """State properties to include with this state. Overwrites any existing
        `state_metadata`.
        Keys must match the regex `/^[a-z0-9][a-z0-9_.-]{0,62}$/`.
        Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.
        """
        pass
    etag: typing.Text = ...
    """Required. Fingerprint of the Recommendation. Provides optimistic locking."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        state_metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["etag",b"etag","name",b"name","state_metadata",b"state_metadata"]) -> None: ...
global___MarkRecommendationSucceededRequest = MarkRecommendationSucceededRequest

class MarkRecommendationFailedRequest(google.protobuf.message.Message):
    """Request for the `MarkRecommendationFailed` Method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class StateMetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    STATE_METADATA_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the recommendation."""

    @property
    def state_metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """State properties to include with this state. Overwrites any existing
        `state_metadata`.
        Keys must match the regex `/^[a-z0-9][a-z0-9_.-]{0,62}$/`.
        Values must match the regex `/^[a-zA-Z0-9_./-]{0,255}$/`.
        """
        pass
    etag: typing.Text = ...
    """Required. Fingerprint of the Recommendation. Provides optimistic locking."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        state_metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["etag",b"etag","name",b"name","state_metadata",b"state_metadata"]) -> None: ...
global___MarkRecommendationFailedRequest = MarkRecommendationFailedRequest

class GetRecommenderConfigRequest(google.protobuf.message.Message):
    """Request for the GetRecommenderConfig` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the Recommendation Config to get.

    Acceptable formats:

    * `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config`

    * `projects/[PROJECT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config`

    * `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/config`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetRecommenderConfigRequest = GetRecommenderConfigRequest

class UpdateRecommenderConfigRequest(google.protobuf.message.Message):
    """Request for the `UpdateRecommenderConfig` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RECOMMENDER_CONFIG_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    @property
    def recommender_config(self) -> google.cloud.recommender.v1beta1.recommender_config_pb2.RecommenderConfig:
        """Required. The RecommenderConfig to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated."""
        pass
    validate_only: builtins.bool = ...
    """If true, validate the request and preview the change, but do not actually
    update it.
    """

    def __init__(self,
        *,
        recommender_config : typing.Optional[google.cloud.recommender.v1beta1.recommender_config_pb2.RecommenderConfig] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["recommender_config",b"recommender_config","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["recommender_config",b"recommender_config","update_mask",b"update_mask","validate_only",b"validate_only"]) -> None: ...
global___UpdateRecommenderConfigRequest = UpdateRecommenderConfigRequest

class GetInsightTypeConfigRequest(google.protobuf.message.Message):
    """Request for the GetInsightTypeConfig` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the InsightTypeConfig to get.

    Acceptable formats:

    * `projects/[PROJECT_NUMBER]/locations/global/recommenders/[INSIGHT_TYPE_ID]/config`

    * `projects/[PROJECT_ID]/locations/global/recommenders/[INSIGHT_TYPE_ID]/config`

    * `organizations/[ORGANIZATION_ID]/locations/global/recommenders/[INSIGHT_TYPE_ID]/config`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetInsightTypeConfigRequest = GetInsightTypeConfigRequest

class UpdateInsightTypeConfigRequest(google.protobuf.message.Message):
    """Request for the `UpdateInsightTypeConfig` method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSIGHT_TYPE_CONFIG_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    @property
    def insight_type_config(self) -> google.cloud.recommender.v1beta1.insight_type_config_pb2.InsightTypeConfig:
        """Required. The InsightTypeConfig to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The list of fields to be updated."""
        pass
    validate_only: builtins.bool = ...
    """If true, validate the request and preview the change, but do not actually
    update it.
    """

    def __init__(self,
        *,
        insight_type_config : typing.Optional[google.cloud.recommender.v1beta1.insight_type_config_pb2.InsightTypeConfig] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["insight_type_config",b"insight_type_config","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["insight_type_config",b"insight_type_config","update_mask",b"update_mask","validate_only",b"validate_only"]) -> None: ...
global___UpdateInsightTypeConfigRequest = UpdateInsightTypeConfigRequest
