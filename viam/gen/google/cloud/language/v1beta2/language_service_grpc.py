# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/language/v1beta2/language_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.protobuf.timestamp_pb2
import google.cloud.language.v1beta2.language_service_pb2


class LanguageServiceBase(abc.ABC):

    @abc.abstractmethod
    async def AnalyzeSentiment(self, stream: 'grpclib.server.Stream[google.cloud.language.v1beta2.language_service_pb2.AnalyzeSentimentRequest, google.cloud.language.v1beta2.language_service_pb2.AnalyzeSentimentResponse]') -> None:
        pass

    @abc.abstractmethod
    async def AnalyzeEntities(self, stream: 'grpclib.server.Stream[google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitiesRequest, google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitiesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def AnalyzeEntitySentiment(self, stream: 'grpclib.server.Stream[google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitySentimentRequest, google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitySentimentResponse]') -> None:
        pass

    @abc.abstractmethod
    async def AnalyzeSyntax(self, stream: 'grpclib.server.Stream[google.cloud.language.v1beta2.language_service_pb2.AnalyzeSyntaxRequest, google.cloud.language.v1beta2.language_service_pb2.AnalyzeSyntaxResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ClassifyText(self, stream: 'grpclib.server.Stream[google.cloud.language.v1beta2.language_service_pb2.ClassifyTextRequest, google.cloud.language.v1beta2.language_service_pb2.ClassifyTextResponse]') -> None:
        pass

    @abc.abstractmethod
    async def AnnotateText(self, stream: 'grpclib.server.Stream[google.cloud.language.v1beta2.language_service_pb2.AnnotateTextRequest, google.cloud.language.v1beta2.language_service_pb2.AnnotateTextResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.language.v1beta2.LanguageService/AnalyzeSentiment': grpclib.const.Handler(
                self.AnalyzeSentiment,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.language.v1beta2.language_service_pb2.AnalyzeSentimentRequest,
                google.cloud.language.v1beta2.language_service_pb2.AnalyzeSentimentResponse,
            ),
            '/google.cloud.language.v1beta2.LanguageService/AnalyzeEntities': grpclib.const.Handler(
                self.AnalyzeEntities,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitiesRequest,
                google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitiesResponse,
            ),
            '/google.cloud.language.v1beta2.LanguageService/AnalyzeEntitySentiment': grpclib.const.Handler(
                self.AnalyzeEntitySentiment,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitySentimentRequest,
                google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitySentimentResponse,
            ),
            '/google.cloud.language.v1beta2.LanguageService/AnalyzeSyntax': grpclib.const.Handler(
                self.AnalyzeSyntax,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.language.v1beta2.language_service_pb2.AnalyzeSyntaxRequest,
                google.cloud.language.v1beta2.language_service_pb2.AnalyzeSyntaxResponse,
            ),
            '/google.cloud.language.v1beta2.LanguageService/ClassifyText': grpclib.const.Handler(
                self.ClassifyText,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.language.v1beta2.language_service_pb2.ClassifyTextRequest,
                google.cloud.language.v1beta2.language_service_pb2.ClassifyTextResponse,
            ),
            '/google.cloud.language.v1beta2.LanguageService/AnnotateText': grpclib.const.Handler(
                self.AnnotateText,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.language.v1beta2.language_service_pb2.AnnotateTextRequest,
                google.cloud.language.v1beta2.language_service_pb2.AnnotateTextResponse,
            ),
        }


class LanguageServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.AnalyzeSentiment = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.language.v1beta2.LanguageService/AnalyzeSentiment',
            google.cloud.language.v1beta2.language_service_pb2.AnalyzeSentimentRequest,
            google.cloud.language.v1beta2.language_service_pb2.AnalyzeSentimentResponse,
        )
        self.AnalyzeEntities = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.language.v1beta2.LanguageService/AnalyzeEntities',
            google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitiesRequest,
            google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitiesResponse,
        )
        self.AnalyzeEntitySentiment = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.language.v1beta2.LanguageService/AnalyzeEntitySentiment',
            google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitySentimentRequest,
            google.cloud.language.v1beta2.language_service_pb2.AnalyzeEntitySentimentResponse,
        )
        self.AnalyzeSyntax = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.language.v1beta2.LanguageService/AnalyzeSyntax',
            google.cloud.language.v1beta2.language_service_pb2.AnalyzeSyntaxRequest,
            google.cloud.language.v1beta2.language_service_pb2.AnalyzeSyntaxResponse,
        )
        self.ClassifyText = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.language.v1beta2.LanguageService/ClassifyText',
            google.cloud.language.v1beta2.language_service_pb2.ClassifyTextRequest,
            google.cloud.language.v1beta2.language_service_pb2.ClassifyTextResponse,
        )
        self.AnnotateText = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.language.v1beta2.LanguageService/AnnotateText',
            google.cloud.language.v1beta2.language_service_pb2.AnnotateTextRequest,
            google.cloud.language.v1beta2.language_service_pb2.AnnotateTextResponse,
        )
