"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.type.date_pb2
import google.type.money_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _CalendarPeriod:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _CalendarPeriodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CalendarPeriod.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    CALENDAR_PERIOD_UNSPECIFIED: CalendarPeriod.ValueType = ...  # 0
    MONTH: CalendarPeriod.ValueType = ...  # 1
    """A month. Month starts on the first day of each month, such as January 1,
    February 1, March 1, and so on.
    """

    QUARTER: CalendarPeriod.ValueType = ...  # 2
    """A quarter. Quarters start on dates January 1, April 1, July 1, and October
    1 of each year.
    """

    YEAR: CalendarPeriod.ValueType = ...  # 3
    """A year. Year starts on January 1."""

class CalendarPeriod(_CalendarPeriod, metaclass=_CalendarPeriodEnumTypeWrapper):
    """A `CalendarPeriod` represents the abstract concept of a time period that
    has a canonical start. Grammatically, "the start of the current
    `CalendarPeriod`". All calendar times begin at 12 AM US and Canadian
    Pacific Time (UTC-8).
    """
    pass

CALENDAR_PERIOD_UNSPECIFIED: CalendarPeriod.ValueType = ...  # 0
MONTH: CalendarPeriod.ValueType = ...  # 1
"""A month. Month starts on the first day of each month, such as January 1,
February 1, March 1, and so on.
"""

QUARTER: CalendarPeriod.ValueType = ...  # 2
"""A quarter. Quarters start on dates January 1, April 1, July 1, and October
1 of each year.
"""

YEAR: CalendarPeriod.ValueType = ...  # 3
"""A year. Year starts on January 1."""

global___CalendarPeriod = CalendarPeriod


class Budget(google.protobuf.message.Message):
    """A budget is a plan that describes what you expect to spend on Cloud
    projects, plus the rules to execute as spend is tracked against that plan,
    (for example, send an alert when 90% of the target spend is met).
    The budget time period is configurable, with options such as month (default),
    quarter, year, or custom time period.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    BUDGET_FILTER_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    THRESHOLD_RULES_FIELD_NUMBER: builtins.int
    ALL_UPDATES_RULE_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. Resource name of the budget.
    The resource name implies the scope of a budget. Values are of the form
    `billingAccounts/{billingAccountId}/budgets/{budgetId}`.
    """

    display_name: typing.Text = ...
    """User data for display name in UI.
    Validation: <= 60 chars.
    """

    @property
    def budget_filter(self) -> global___Filter:
        """Optional. Filters that define which resources are used to compute the
        actual spend against the budget amount, such as projects, services, and the
        budget's time period, as well as other filters.
        """
        pass
    @property
    def amount(self) -> global___BudgetAmount:
        """Required. Budgeted amount."""
        pass
    @property
    def threshold_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ThresholdRule]:
        """Optional. Rules that trigger alerts (notifications of thresholds
        being crossed) when spend exceeds the specified percentages of the budget.
        """
        pass
    @property
    def all_updates_rule(self) -> global___AllUpdatesRule:
        """Optional. Rules to apply to notifications sent based on budget spend and
        thresholds.
        """
        pass
    etag: typing.Text = ...
    """Optional. Etag to validate that the object is unchanged for a
    read-modify-write operation.
    An empty etag will cause an update to overwrite other changes.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        budget_filter : typing.Optional[global___Filter] = ...,
        amount : typing.Optional[global___BudgetAmount] = ...,
        threshold_rules : typing.Optional[typing.Iterable[global___ThresholdRule]] = ...,
        all_updates_rule : typing.Optional[global___AllUpdatesRule] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["all_updates_rule",b"all_updates_rule","amount",b"amount","budget_filter",b"budget_filter"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["all_updates_rule",b"all_updates_rule","amount",b"amount","budget_filter",b"budget_filter","display_name",b"display_name","etag",b"etag","name",b"name","threshold_rules",b"threshold_rules"]) -> None: ...
global___Budget = Budget

class BudgetAmount(google.protobuf.message.Message):
    """The budgeted amount for each usage period."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SPECIFIED_AMOUNT_FIELD_NUMBER: builtins.int
    LAST_PERIOD_AMOUNT_FIELD_NUMBER: builtins.int
    @property
    def specified_amount(self) -> google.type.money_pb2.Money:
        """A specified amount to use as the budget.
        `currency_code` is optional. If specified when creating a budget, it must
        match the currency of the billing account. If specified when updating a
        budget, it must match the currency_code of the existing budget.
        The `currency_code` is provided on output.
        """
        pass
    @property
    def last_period_amount(self) -> global___LastPeriodAmount:
        """Use the last period's actual spend as the budget for the present period.
        LastPeriodAmount can only be set when the budget's time period is a
        [Filter.calendar_period][google.cloud.billing.budgets.v1beta1.Filter.calendar_period].
        It cannot be set in combination with
        [Filter.custom_period][google.cloud.billing.budgets.v1beta1.Filter.custom_period].
        """
        pass
    def __init__(self,
        *,
        specified_amount : typing.Optional[google.type.money_pb2.Money] = ...,
        last_period_amount : typing.Optional[global___LastPeriodAmount] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["budget_amount",b"budget_amount","last_period_amount",b"last_period_amount","specified_amount",b"specified_amount"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["budget_amount",b"budget_amount","last_period_amount",b"last_period_amount","specified_amount",b"specified_amount"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["budget_amount",b"budget_amount"]) -> typing.Optional[typing_extensions.Literal["specified_amount","last_period_amount"]]: ...
global___BudgetAmount = BudgetAmount

class LastPeriodAmount(google.protobuf.message.Message):
    """Describes a budget amount targeted to the last
    [Filter.calendar_period][google.cloud.billing.budgets.v1beta1.Filter.calendar_period]
    spend. At this time, the amount is automatically 100% of the last calendar
    period's spend; that is, there are no other options yet.
    Future configuration options will be described here (for example, configuring
    a percentage of last period's spend).
    LastPeriodAmount cannot be set for a budget configured with
    a
    [Filter.custom_period][google.cloud.billing.budgets.v1beta1.Filter.custom_period].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___LastPeriodAmount = LastPeriodAmount

class ThresholdRule(google.protobuf.message.Message):
    """ThresholdRule contains a definition of a threshold which triggers
    an alert (a notification of a threshold being crossed) to be sent when
    spend goes above the specified amount.
    Alerts are automatically e-mailed to users with the Billing Account
    Administrator role or the Billing Account User role.
    The thresholds here have no effect on notifications sent to anything
    configured under `Budget.all_updates_rule`.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Basis:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _BasisEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Basis.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        BASIS_UNSPECIFIED: ThresholdRule.Basis.ValueType = ...  # 0
        """Unspecified threshold basis."""

        CURRENT_SPEND: ThresholdRule.Basis.ValueType = ...  # 1
        """Use current spend as the basis for comparison against the threshold."""

        FORECASTED_SPEND: ThresholdRule.Basis.ValueType = ...  # 2
        """Use forecasted spend for the period as the basis for comparison against
        the threshold.
        FORECASTED_SPEND can only be set when the budget's time period is a
        [Filter.calendar_period][google.cloud.billing.budgets.v1beta1.Filter.calendar_period].
        It cannot be set in combination with
        [Filter.custom_period][google.cloud.billing.budgets.v1beta1.Filter.custom_period].
        """

    class Basis(_Basis, metaclass=_BasisEnumTypeWrapper):
        """The type of basis used to determine if spend has passed the threshold."""
        pass

    BASIS_UNSPECIFIED: ThresholdRule.Basis.ValueType = ...  # 0
    """Unspecified threshold basis."""

    CURRENT_SPEND: ThresholdRule.Basis.ValueType = ...  # 1
    """Use current spend as the basis for comparison against the threshold."""

    FORECASTED_SPEND: ThresholdRule.Basis.ValueType = ...  # 2
    """Use forecasted spend for the period as the basis for comparison against
    the threshold.
    FORECASTED_SPEND can only be set when the budget's time period is a
    [Filter.calendar_period][google.cloud.billing.budgets.v1beta1.Filter.calendar_period].
    It cannot be set in combination with
    [Filter.custom_period][google.cloud.billing.budgets.v1beta1.Filter.custom_period].
    """


    THRESHOLD_PERCENT_FIELD_NUMBER: builtins.int
    SPEND_BASIS_FIELD_NUMBER: builtins.int
    threshold_percent: builtins.float = ...
    """Required. Send an alert when this threshold is exceeded.
    This is a 1.0-based percentage, so 0.5 = 50%.
    Validation: non-negative number.
    """

    spend_basis: global___ThresholdRule.Basis.ValueType = ...
    """Optional. The type of basis used to determine if spend has passed the
    threshold. Behavior defaults to CURRENT_SPEND if not set.
    """

    def __init__(self,
        *,
        threshold_percent : builtins.float = ...,
        spend_basis : global___ThresholdRule.Basis.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["spend_basis",b"spend_basis","threshold_percent",b"threshold_percent"]) -> None: ...
global___ThresholdRule = ThresholdRule

class AllUpdatesRule(google.protobuf.message.Message):
    """AllUpdatesRule defines notifications that are sent based on budget spend
    and thresholds.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PUBSUB_TOPIC_FIELD_NUMBER: builtins.int
    SCHEMA_VERSION_FIELD_NUMBER: builtins.int
    MONITORING_NOTIFICATION_CHANNELS_FIELD_NUMBER: builtins.int
    DISABLE_DEFAULT_IAM_RECIPIENTS_FIELD_NUMBER: builtins.int
    pubsub_topic: typing.Text = ...
    """Optional. The name of the Pub/Sub topic where budget related messages will
    be published, in the form `projects/{project_id}/topics/{topic_id}`.
    Updates are sent at regular intervals to the topic. The topic needs to be
    created before the budget is created; see
    https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications
    for more details.
    Caller is expected to have
    `pubsub.topics.setIamPolicy` permission on the topic when it's set for a
    budget, otherwise, the API call will fail with PERMISSION_DENIED. See
    https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#permissions_required_for_this_task
    for more details on Pub/Sub roles and permissions.
    """

    schema_version: typing.Text = ...
    """Optional. Required when
    [AllUpdatesRule.pubsub_topic][google.cloud.billing.budgets.v1beta1.AllUpdatesRule.pubsub_topic]
    is set. The schema version of the notification sent to
    [AllUpdatesRule.pubsub_topic][google.cloud.billing.budgets.v1beta1.AllUpdatesRule.pubsub_topic].
    Only "1.0" is accepted. It represents the JSON schema as defined in
    https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format.
    """

    @property
    def monitoring_notification_channels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Targets to send notifications to when a threshold is exceeded.
        This is in addition to default recipients who have billing account IAM
        roles. The value is the full REST resource name of a monitoring
        notification channel with the form
        `projects/{project_id}/notificationChannels/{channel_id}`. A maximum of 5
        channels are allowed. See
        https://cloud.google.com/billing/docs/how-to/budgets-notification-recipients
        for more details.
        """
        pass
    disable_default_iam_recipients: builtins.bool = ...
    """Optional. When set to true, disables default notifications sent when a
    threshold is exceeded. Default notifications are sent to those with Billing
    Account Administrator and Billing Account User IAM roles for the target
    account.
    """

    def __init__(self,
        *,
        pubsub_topic : typing.Text = ...,
        schema_version : typing.Text = ...,
        monitoring_notification_channels : typing.Optional[typing.Iterable[typing.Text]] = ...,
        disable_default_iam_recipients : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disable_default_iam_recipients",b"disable_default_iam_recipients","monitoring_notification_channels",b"monitoring_notification_channels","pubsub_topic",b"pubsub_topic","schema_version",b"schema_version"]) -> None: ...
global___AllUpdatesRule = AllUpdatesRule

class Filter(google.protobuf.message.Message):
    """A filter for a budget, limiting the scope of the cost to calculate."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CreditTypesTreatment:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CreditTypesTreatmentEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CreditTypesTreatment.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CREDIT_TYPES_TREATMENT_UNSPECIFIED: Filter.CreditTypesTreatment.ValueType = ...  # 0
        INCLUDE_ALL_CREDITS: Filter.CreditTypesTreatment.ValueType = ...  # 1
        """All types of credit are subtracted from the gross cost to determine the
        spend for threshold calculations.
        """

        EXCLUDE_ALL_CREDITS: Filter.CreditTypesTreatment.ValueType = ...  # 2
        """All types of credit are added to the net cost to determine the spend for
        threshold calculations.
        """

        INCLUDE_SPECIFIED_CREDITS: Filter.CreditTypesTreatment.ValueType = ...  # 3
        """[Credit
        types](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type)
        specified in the credit_types field are subtracted from the
        gross cost to determine the spend for threshold calculations.
        """

    class CreditTypesTreatment(_CreditTypesTreatment, metaclass=_CreditTypesTreatmentEnumTypeWrapper):
        """Specifies how credits are applied when determining the spend for
        threshold calculations. Budgets track the total cost minus any applicable
        selected credits.
        [See the documentation for a list of credit
        types](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type).
        """
        pass

    CREDIT_TYPES_TREATMENT_UNSPECIFIED: Filter.CreditTypesTreatment.ValueType = ...  # 0
    INCLUDE_ALL_CREDITS: Filter.CreditTypesTreatment.ValueType = ...  # 1
    """All types of credit are subtracted from the gross cost to determine the
    spend for threshold calculations.
    """

    EXCLUDE_ALL_CREDITS: Filter.CreditTypesTreatment.ValueType = ...  # 2
    """All types of credit are added to the net cost to determine the spend for
    threshold calculations.
    """

    INCLUDE_SPECIFIED_CREDITS: Filter.CreditTypesTreatment.ValueType = ...  # 3
    """[Credit
    types](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type)
    specified in the credit_types field are subtracted from the
    gross cost to determine the spend for threshold calculations.
    """


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> google.protobuf.struct_pb2.ListValue: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[google.protobuf.struct_pb2.ListValue] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROJECTS_FIELD_NUMBER: builtins.int
    CREDIT_TYPES_FIELD_NUMBER: builtins.int
    CREDIT_TYPES_TREATMENT_FIELD_NUMBER: builtins.int
    SERVICES_FIELD_NUMBER: builtins.int
    SUBACCOUNTS_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    CALENDAR_PERIOD_FIELD_NUMBER: builtins.int
    CUSTOM_PERIOD_FIELD_NUMBER: builtins.int
    @property
    def projects(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. A set of projects of the form `projects/{project}`,
        specifying that usage from only this set of projects should be
        included in the budget. If omitted, the report will include all usage for
        the billing account, regardless of which project the usage occurred on.
        Only zero or one project can be specified currently.
        """
        pass
    @property
    def credit_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. If
        [Filter.credit_types_treatment][google.cloud.billing.budgets.v1beta1.Filter.credit_types_treatment]
        is INCLUDE_SPECIFIED_CREDITS, this is a list of credit types to be
        subtracted from gross cost to determine the spend for threshold
        calculations. See [a list of acceptable credit type
        values](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type).

        If
        [Filter.credit_types_treatment][google.cloud.billing.budgets.v1beta1.Filter.credit_types_treatment]
        is **not** INCLUDE_SPECIFIED_CREDITS, this field must be empty.
        """
        pass
    credit_types_treatment: global___Filter.CreditTypesTreatment.ValueType = ...
    """Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`."""

    @property
    def services(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. A set of services of the form `services/{service_id}`,
        specifying that usage from only this set of services should be
        included in the budget. If omitted, the report will include usage for
        all the services.
        The service names are available through the Catalog API:
        https://cloud.google.com/billing/v1/how-tos/catalog-api.
        """
        pass
    @property
    def subaccounts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. A set of subaccounts of the form `billingAccounts/{account_id}`,
        specifying that usage from only this set of subaccounts should be included
        in the budget. If a subaccount is set to the name of the parent account,
        usage from the parent account will be included. If omitted, the
        report will include usage from the parent account and all
        subaccounts, if they exist.
        """
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.protobuf.struct_pb2.ListValue]:
        """Optional. A single label and value pair specifying that usage from only
        this set of labeled resources should be included in the budget. Currently,
        multiple entries or multiple values per entry are not allowed. If omitted,
        the report will include all labeled and unlabeled usage.
        """
        pass
    calendar_period: global___CalendarPeriod.ValueType = ...
    """Optional. Specifies to track usage for recurring calendar period.
    For example, assume that CalendarPeriod.QUARTER is set. The budget will
    track usage from April 1 to June 30, when the current calendar month is
    April, May, June. After that, it will track usage from July 1 to
    September 30 when the current calendar month is July, August, September,
    so on.
    """

    @property
    def custom_period(self) -> global___CustomPeriod:
        """Optional. Specifies to track usage from any start date (required) to any
        end date (optional). This time period is static, it does not recur.
        """
        pass
    def __init__(self,
        *,
        projects : typing.Optional[typing.Iterable[typing.Text]] = ...,
        credit_types : typing.Optional[typing.Iterable[typing.Text]] = ...,
        credit_types_treatment : global___Filter.CreditTypesTreatment.ValueType = ...,
        services : typing.Optional[typing.Iterable[typing.Text]] = ...,
        subaccounts : typing.Optional[typing.Iterable[typing.Text]] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, google.protobuf.struct_pb2.ListValue]] = ...,
        calendar_period : global___CalendarPeriod.ValueType = ...,
        custom_period : typing.Optional[global___CustomPeriod] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["calendar_period",b"calendar_period","custom_period",b"custom_period","usage_period",b"usage_period"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["calendar_period",b"calendar_period","credit_types",b"credit_types","credit_types_treatment",b"credit_types_treatment","custom_period",b"custom_period","labels",b"labels","projects",b"projects","services",b"services","subaccounts",b"subaccounts","usage_period",b"usage_period"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["usage_period",b"usage_period"]) -> typing.Optional[typing_extensions.Literal["calendar_period","custom_period"]]: ...
global___Filter = Filter

class CustomPeriod(google.protobuf.message.Message):
    """All date times begin at 12 AM US and Canadian Pacific Time (UTC-8)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_DATE_FIELD_NUMBER: builtins.int
    END_DATE_FIELD_NUMBER: builtins.int
    @property
    def start_date(self) -> google.type.date_pb2.Date:
        """Required. The start date must be after January 1, 2017."""
        pass
    @property
    def end_date(self) -> google.type.date_pb2.Date:
        """Optional. The end date of the time period. Budgets with elapsed end date
        won't be processed. If unset, specifies to track all usage incurred since
        the start_date.
        """
        pass
    def __init__(self,
        *,
        start_date : typing.Optional[google.type.date_pb2.Date] = ...,
        end_date : typing.Optional[google.type.date_pb2.Date] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_date",b"end_date","start_date",b"start_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_date",b"end_date","start_date",b"start_date"]) -> None: ...
global___CustomPeriod = CustomPeriod
