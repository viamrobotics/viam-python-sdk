"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.rpc.context.attribute_context_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AuditLog(google.protobuf.message.Message):
    """Common audit log format for Google Cloud Platform API operations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_NAME_FIELD_NUMBER: builtins.int
    METHOD_NAME_FIELD_NUMBER: builtins.int
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    RESOURCE_LOCATION_FIELD_NUMBER: builtins.int
    RESOURCE_ORIGINAL_STATE_FIELD_NUMBER: builtins.int
    NUM_RESPONSE_ITEMS_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    AUTHENTICATION_INFO_FIELD_NUMBER: builtins.int
    AUTHORIZATION_INFO_FIELD_NUMBER: builtins.int
    REQUEST_METADATA_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    SERVICE_DATA_FIELD_NUMBER: builtins.int
    service_name: typing.Text = ...
    """The name of the API service performing the operation. For example,
    `"compute.googleapis.com"`.
    """

    method_name: typing.Text = ...
    """The name of the service method or operation.
    For API calls, this should be the name of the API method.
    For example,

        "google.cloud.bigquery.v2.TableService.InsertTable"
        "google.logging.v2.ConfigServiceV2.CreateSink"
    """

    resource_name: typing.Text = ...
    """The resource or collection that is the target of the operation.
    The name is a scheme-less URI, not including the API service name.
    For example:

        "projects/PROJECT_ID/zones/us-central1-a/instances"
        "projects/PROJECT_ID/datasets/DATASET_ID"
    """

    @property
    def resource_location(self) -> global___ResourceLocation:
        """The resource location information."""
        pass
    @property
    def resource_original_state(self) -> google.protobuf.struct_pb2.Struct:
        """The resource's original state before mutation. Present only for
        operations which have successfully modified the targeted resource(s).
        In general, this field should contain all changed fields, except those
        that are already been included in `request`, `response`, `metadata` or
        `service_data` fields.
        When the JSON object represented here has a proto equivalent,
        the proto name will be indicated in the `@type` property.
        """
        pass
    num_response_items: builtins.int = ...
    """The number of items returned from a List or Query API method,
    if applicable.
    """

    @property
    def status(self) -> google.rpc.status_pb2.Status:
        """The status of the overall operation."""
        pass
    @property
    def authentication_info(self) -> global___AuthenticationInfo:
        """Authentication information."""
        pass
    @property
    def authorization_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizationInfo]:
        """Authorization information. If there are multiple
        resources or permissions involved, then there is
        one AuthorizationInfo element for each {resource, permission} tuple.
        """
        pass
    @property
    def request_metadata(self) -> global___RequestMetadata:
        """Metadata about the operation."""
        pass
    @property
    def request(self) -> google.protobuf.struct_pb2.Struct:
        """The operation request. This may not include all request parameters,
        such as those that are too large, privacy-sensitive, or duplicated
        elsewhere in the log record.
        It should never include user-generated data, such as file contents.
        When the JSON object represented here has a proto equivalent, the proto
        name will be indicated in the `@type` property.
        """
        pass
    @property
    def response(self) -> google.protobuf.struct_pb2.Struct:
        """The operation response. This may not include all response elements,
        such as those that are too large, privacy-sensitive, or duplicated
        elsewhere in the log record.
        It should never include user-generated data, such as file contents.
        When the JSON object represented here has a proto equivalent, the proto
        name will be indicated in the `@type` property.
        """
        pass
    @property
    def metadata(self) -> google.protobuf.struct_pb2.Struct:
        """Other service-specific data about the request, response, and other
        information associated with the current audited event.
        """
        pass
    @property
    def service_data(self) -> google.protobuf.any_pb2.Any:
        """Deprecated. Use the `metadata` field instead.
        Other service-specific data about the request, response, and other
        activities.
        """
        pass
    def __init__(self,
        *,
        service_name : typing.Text = ...,
        method_name : typing.Text = ...,
        resource_name : typing.Text = ...,
        resource_location : typing.Optional[global___ResourceLocation] = ...,
        resource_original_state : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        num_response_items : builtins.int = ...,
        status : typing.Optional[google.rpc.status_pb2.Status] = ...,
        authentication_info : typing.Optional[global___AuthenticationInfo] = ...,
        authorization_info : typing.Optional[typing.Iterable[global___AuthorizationInfo]] = ...,
        request_metadata : typing.Optional[global___RequestMetadata] = ...,
        request : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        response : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        metadata : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        service_data : typing.Optional[google.protobuf.any_pb2.Any] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["authentication_info",b"authentication_info","metadata",b"metadata","request",b"request","request_metadata",b"request_metadata","resource_location",b"resource_location","resource_original_state",b"resource_original_state","response",b"response","service_data",b"service_data","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authentication_info",b"authentication_info","authorization_info",b"authorization_info","metadata",b"metadata","method_name",b"method_name","num_response_items",b"num_response_items","request",b"request","request_metadata",b"request_metadata","resource_location",b"resource_location","resource_name",b"resource_name","resource_original_state",b"resource_original_state","response",b"response","service_data",b"service_data","service_name",b"service_name","status",b"status"]) -> None: ...
global___AuditLog = AuditLog

class AuthenticationInfo(google.protobuf.message.Message):
    """Authentication information for the operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRINCIPAL_EMAIL_FIELD_NUMBER: builtins.int
    AUTHORITY_SELECTOR_FIELD_NUMBER: builtins.int
    THIRD_PARTY_PRINCIPAL_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_KEY_NAME_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_DELEGATION_INFO_FIELD_NUMBER: builtins.int
    PRINCIPAL_SUBJECT_FIELD_NUMBER: builtins.int
    principal_email: typing.Text = ...
    """The email address of the authenticated user (or service account on behalf
    of third party principal) making the request. For third party identity
    callers, the `principal_subject` field is populated instead of this field.
    For privacy reasons, the principal email address is sometimes redacted.
    For more information, see
    https://cloud.google.com/logging/docs/audit#user-id.
    """

    authority_selector: typing.Text = ...
    """The authority selector specified by the requestor, if any.
    It is not guaranteed that the principal was allowed to use this authority.
    """

    @property
    def third_party_principal(self) -> google.protobuf.struct_pb2.Struct:
        """The third party identification (if any) of the authenticated user making
        the request.
        When the JSON object represented here has a proto equivalent, the proto
        name will be indicated in the `@type` property.
        """
        pass
    service_account_key_name: typing.Text = ...
    """The name of the service account key used to create or exchange
    credentials for authenticating the service account making the request.
    This is a scheme-less URI full resource name. For example:

    "//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}"
    """

    @property
    def service_account_delegation_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServiceAccountDelegationInfo]:
        """Identity delegation history of an authenticated service account that makes
        the request. It contains information on the real authorities that try to
        access GCP resources by delegating on a service account. When multiple
        authorities present, they are guaranteed to be sorted based on the original
        ordering of the identity delegation events.
        """
        pass
    principal_subject: typing.Text = ...
    """String representation of identity of requesting party.
    Populated for both first and third party identities.
    """

    def __init__(self,
        *,
        principal_email : typing.Text = ...,
        authority_selector : typing.Text = ...,
        third_party_principal : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        service_account_key_name : typing.Text = ...,
        service_account_delegation_info : typing.Optional[typing.Iterable[global___ServiceAccountDelegationInfo]] = ...,
        principal_subject : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["third_party_principal",b"third_party_principal"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authority_selector",b"authority_selector","principal_email",b"principal_email","principal_subject",b"principal_subject","service_account_delegation_info",b"service_account_delegation_info","service_account_key_name",b"service_account_key_name","third_party_principal",b"third_party_principal"]) -> None: ...
global___AuthenticationInfo = AuthenticationInfo

class AuthorizationInfo(google.protobuf.message.Message):
    """Authorization information for the operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    PERMISSION_FIELD_NUMBER: builtins.int
    GRANTED_FIELD_NUMBER: builtins.int
    RESOURCE_ATTRIBUTES_FIELD_NUMBER: builtins.int
    resource: typing.Text = ...
    """The resource being accessed, as a REST-style or cloud resource string.
    For example:

        bigquery.googleapis.com/projects/PROJECTID/datasets/DATASETID
    or
        projects/PROJECTID/datasets/DATASETID
    """

    permission: typing.Text = ...
    """The required IAM permission."""

    granted: builtins.bool = ...
    """Whether or not authorization for `resource` and `permission`
    was granted.
    """

    @property
    def resource_attributes(self) -> google.rpc.context.attribute_context_pb2.AttributeContext.Resource:
        """Resource attributes used in IAM condition evaluation. This field contains
        resource attributes like resource type and resource name.

        To get the whole view of the attributes used in IAM
        condition evaluation, the user must also look into
        `AuditLog.request_metadata.request_attributes`.
        """
        pass
    def __init__(self,
        *,
        resource : typing.Text = ...,
        permission : typing.Text = ...,
        granted : builtins.bool = ...,
        resource_attributes : typing.Optional[google.rpc.context.attribute_context_pb2.AttributeContext.Resource] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_attributes",b"resource_attributes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["granted",b"granted","permission",b"permission","resource",b"resource","resource_attributes",b"resource_attributes"]) -> None: ...
global___AuthorizationInfo = AuthorizationInfo

class RequestMetadata(google.protobuf.message.Message):
    """Metadata about the request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CALLER_IP_FIELD_NUMBER: builtins.int
    CALLER_SUPPLIED_USER_AGENT_FIELD_NUMBER: builtins.int
    CALLER_NETWORK_FIELD_NUMBER: builtins.int
    REQUEST_ATTRIBUTES_FIELD_NUMBER: builtins.int
    DESTINATION_ATTRIBUTES_FIELD_NUMBER: builtins.int
    caller_ip: typing.Text = ...
    """The IP address of the caller.
    For caller from internet, this will be public IPv4 or IPv6 address.
    For caller from a Compute Engine VM with external IP address, this
    will be the VM's external IP address. For caller from a Compute
    Engine VM without external IP address, if the VM is in the same
    organization (or project) as the accessed resource, `caller_ip` will
    be the VM's internal IPv4 address, otherwise the `caller_ip` will be
    redacted to "gce-internal-ip".
    See https://cloud.google.com/compute/docs/vpc/ for more information.
    """

    caller_supplied_user_agent: typing.Text = ...
    """The user agent of the caller.
    This information is not authenticated and should be treated accordingly.
    For example:

    +   `google-api-python-client/1.4.0`:
        The request was made by the Google API client for Python.
    +   `Cloud SDK Command Line Tool apitools-client/1.0 gcloud/0.9.62`:
        The request was made by the Google Cloud SDK CLI (gcloud).
    +   `AppEngine-Google; (+http://code.google.com/appengine; appid:
    s~my-project`:
        The request was made from the `my-project` App Engine app.
    """

    caller_network: typing.Text = ...
    """The network of the caller.
    Set only if the network host project is part of the same GCP organization
    (or project) as the accessed resource.
    See https://cloud.google.com/compute/docs/vpc/ for more information.
    This is a scheme-less URI full resource name. For example:

        "//compute.googleapis.com/projects/PROJECT_ID/global/networks/NETWORK_ID"
    """

    @property
    def request_attributes(self) -> google.rpc.context.attribute_context_pb2.AttributeContext.Request:
        """Request attributes used in IAM condition evaluation. This field contains
        request attributes like request time and access levels associated with
        the request.


        To get the whole view of the attributes used in IAM
        condition evaluation, the user must also look into
        `AuditLog.authentication_info.resource_attributes`.
        """
        pass
    @property
    def destination_attributes(self) -> google.rpc.context.attribute_context_pb2.AttributeContext.Peer:
        """The destination of a network activity, such as accepting a TCP connection.
        In a multi hop network activity, the destination represents the receiver of
        the last hop. Only two fields are used in this message, Peer.port and
        Peer.ip. These fields are optionally populated by those services utilizing
        the IAM condition feature.
        """
        pass
    def __init__(self,
        *,
        caller_ip : typing.Text = ...,
        caller_supplied_user_agent : typing.Text = ...,
        caller_network : typing.Text = ...,
        request_attributes : typing.Optional[google.rpc.context.attribute_context_pb2.AttributeContext.Request] = ...,
        destination_attributes : typing.Optional[google.rpc.context.attribute_context_pb2.AttributeContext.Peer] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination_attributes",b"destination_attributes","request_attributes",b"request_attributes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["caller_ip",b"caller_ip","caller_network",b"caller_network","caller_supplied_user_agent",b"caller_supplied_user_agent","destination_attributes",b"destination_attributes","request_attributes",b"request_attributes"]) -> None: ...
global___RequestMetadata = RequestMetadata

class ResourceLocation(google.protobuf.message.Message):
    """Location information about a resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CURRENT_LOCATIONS_FIELD_NUMBER: builtins.int
    ORIGINAL_LOCATIONS_FIELD_NUMBER: builtins.int
    @property
    def current_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The locations of a resource after the execution of the operation.
        Requests to create or delete a location based resource must populate
        the 'current_locations' field and not the 'original_locations' field.
        For example:

            "europe-west1-a"
            "us-east1"
            "nam3"
        """
        pass
    @property
    def original_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The locations of a resource prior to the execution of the operation.
        Requests that mutate the resource's location must populate both the
        'original_locations' as well as the 'current_locations' fields.
        For example:

            "europe-west1-a"
            "us-east1"
            "nam3"
        """
        pass
    def __init__(self,
        *,
        current_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        original_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_locations",b"current_locations","original_locations",b"original_locations"]) -> None: ...
global___ResourceLocation = ResourceLocation

class ServiceAccountDelegationInfo(google.protobuf.message.Message):
    """Identity delegation history of an authenticated service account."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class FirstPartyPrincipal(google.protobuf.message.Message):
        """First party identity principal."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PRINCIPAL_EMAIL_FIELD_NUMBER: builtins.int
        SERVICE_METADATA_FIELD_NUMBER: builtins.int
        principal_email: typing.Text = ...
        """The email address of a Google account."""

        @property
        def service_metadata(self) -> google.protobuf.struct_pb2.Struct:
            """Metadata about the service that uses the service account."""
            pass
        def __init__(self,
            *,
            principal_email : typing.Text = ...,
            service_metadata : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["service_metadata",b"service_metadata"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["principal_email",b"principal_email","service_metadata",b"service_metadata"]) -> None: ...

    class ThirdPartyPrincipal(google.protobuf.message.Message):
        """Third party identity principal."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        THIRD_PARTY_CLAIMS_FIELD_NUMBER: builtins.int
        @property
        def third_party_claims(self) -> google.protobuf.struct_pb2.Struct:
            """Metadata about third party identity."""
            pass
        def __init__(self,
            *,
            third_party_claims : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["third_party_claims",b"third_party_claims"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["third_party_claims",b"third_party_claims"]) -> None: ...

    PRINCIPAL_SUBJECT_FIELD_NUMBER: builtins.int
    FIRST_PARTY_PRINCIPAL_FIELD_NUMBER: builtins.int
    THIRD_PARTY_PRINCIPAL_FIELD_NUMBER: builtins.int
    principal_subject: typing.Text = ...
    """A string representing the principal_subject associated with the identity.
    For most identities, the format will be
    `principal://iam.googleapis.com/{identity pool name}/subject/{subject)`
    except for some GKE identities (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD)
    that are still in the legacy format `serviceAccount:{identity pool
    name}[{subject}]`
    """

    @property
    def first_party_principal(self) -> global___ServiceAccountDelegationInfo.FirstPartyPrincipal:
        """First party (Google) identity as the real authority."""
        pass
    @property
    def third_party_principal(self) -> global___ServiceAccountDelegationInfo.ThirdPartyPrincipal:
        """Third party identity as the real authority."""
        pass
    def __init__(self,
        *,
        principal_subject : typing.Text = ...,
        first_party_principal : typing.Optional[global___ServiceAccountDelegationInfo.FirstPartyPrincipal] = ...,
        third_party_principal : typing.Optional[global___ServiceAccountDelegationInfo.ThirdPartyPrincipal] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Authority",b"Authority","first_party_principal",b"first_party_principal","third_party_principal",b"third_party_principal"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Authority",b"Authority","first_party_principal",b"first_party_principal","principal_subject",b"principal_subject","third_party_principal",b"third_party_principal"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Authority",b"Authority"]) -> typing.Optional[typing_extensions.Literal["first_party_principal","third_party_principal"]]: ...
global___ServiceAccountDelegationInfo = ServiceAccountDelegationInfo
