# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/bigquery/storage/v1beta1/storage.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.cloud.bigquery.storage.v1beta1.arrow_pb2
import google.cloud.bigquery.storage.v1beta1.avro_pb2
import google.cloud.bigquery.storage.v1beta1.read_options_pb2
import google.cloud.bigquery.storage.v1beta1.table_reference_pb2
import google.protobuf.empty_pb2
import google.protobuf.timestamp_pb2
import google.cloud.bigquery.storage.v1beta1.storage_pb2


class BigQueryStorageBase(abc.ABC):

    @abc.abstractmethod
    async def CreateReadSession(self, stream: 'grpclib.server.Stream[google.cloud.bigquery.storage.v1beta1.storage_pb2.CreateReadSessionRequest, google.cloud.bigquery.storage.v1beta1.storage_pb2.ReadSession]') -> None:
        pass

    @abc.abstractmethod
    async def ReadRows(self, stream: 'grpclib.server.Stream[google.cloud.bigquery.storage.v1beta1.storage_pb2.ReadRowsRequest, google.cloud.bigquery.storage.v1beta1.storage_pb2.ReadRowsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def BatchCreateReadSessionStreams(self, stream: 'grpclib.server.Stream[google.cloud.bigquery.storage.v1beta1.storage_pb2.BatchCreateReadSessionStreamsRequest, google.cloud.bigquery.storage.v1beta1.storage_pb2.BatchCreateReadSessionStreamsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def FinalizeStream(self, stream: 'grpclib.server.Stream[google.cloud.bigquery.storage.v1beta1.storage_pb2.FinalizeStreamRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def SplitReadStream(self, stream: 'grpclib.server.Stream[google.cloud.bigquery.storage.v1beta1.storage_pb2.SplitReadStreamRequest, google.cloud.bigquery.storage.v1beta1.storage_pb2.SplitReadStreamResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.bigquery.storage.v1beta1.BigQueryStorage/CreateReadSession': grpclib.const.Handler(
                self.CreateReadSession,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.bigquery.storage.v1beta1.storage_pb2.CreateReadSessionRequest,
                google.cloud.bigquery.storage.v1beta1.storage_pb2.ReadSession,
            ),
            '/google.cloud.bigquery.storage.v1beta1.BigQueryStorage/ReadRows': grpclib.const.Handler(
                self.ReadRows,
                grpclib.const.Cardinality.UNARY_STREAM,
                google.cloud.bigquery.storage.v1beta1.storage_pb2.ReadRowsRequest,
                google.cloud.bigquery.storage.v1beta1.storage_pb2.ReadRowsResponse,
            ),
            '/google.cloud.bigquery.storage.v1beta1.BigQueryStorage/BatchCreateReadSessionStreams': grpclib.const.Handler(
                self.BatchCreateReadSessionStreams,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.bigquery.storage.v1beta1.storage_pb2.BatchCreateReadSessionStreamsRequest,
                google.cloud.bigquery.storage.v1beta1.storage_pb2.BatchCreateReadSessionStreamsResponse,
            ),
            '/google.cloud.bigquery.storage.v1beta1.BigQueryStorage/FinalizeStream': grpclib.const.Handler(
                self.FinalizeStream,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.bigquery.storage.v1beta1.storage_pb2.FinalizeStreamRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.cloud.bigquery.storage.v1beta1.BigQueryStorage/SplitReadStream': grpclib.const.Handler(
                self.SplitReadStream,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.bigquery.storage.v1beta1.storage_pb2.SplitReadStreamRequest,
                google.cloud.bigquery.storage.v1beta1.storage_pb2.SplitReadStreamResponse,
            ),
        }


class BigQueryStorageStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateReadSession = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.bigquery.storage.v1beta1.BigQueryStorage/CreateReadSession',
            google.cloud.bigquery.storage.v1beta1.storage_pb2.CreateReadSessionRequest,
            google.cloud.bigquery.storage.v1beta1.storage_pb2.ReadSession,
        )
        self.ReadRows = grpclib.client.UnaryStreamMethod(
            channel,
            '/google.cloud.bigquery.storage.v1beta1.BigQueryStorage/ReadRows',
            google.cloud.bigquery.storage.v1beta1.storage_pb2.ReadRowsRequest,
            google.cloud.bigquery.storage.v1beta1.storage_pb2.ReadRowsResponse,
        )
        self.BatchCreateReadSessionStreams = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.bigquery.storage.v1beta1.BigQueryStorage/BatchCreateReadSessionStreams',
            google.cloud.bigquery.storage.v1beta1.storage_pb2.BatchCreateReadSessionStreamsRequest,
            google.cloud.bigquery.storage.v1beta1.storage_pb2.BatchCreateReadSessionStreamsResponse,
        )
        self.FinalizeStream = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.bigquery.storage.v1beta1.BigQueryStorage/FinalizeStream',
            google.cloud.bigquery.storage.v1beta1.storage_pb2.FinalizeStreamRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.SplitReadStream = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.bigquery.storage.v1beta1.BigQueryStorage/SplitReadStream',
            google.cloud.bigquery.storage.v1beta1.storage_pb2.SplitReadStreamRequest,
            google.cloud.bigquery.storage.v1beta1.storage_pb2.SplitReadStreamResponse,
        )
