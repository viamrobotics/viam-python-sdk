"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.iam.v1.iam_policy_pb2
import google.iam.v1.policy_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AuditData(google.protobuf.message.Message):
    """BigQuery request and response messages for audit log.
    Note: `Table.schema` has been deprecated in favor of `Table.schemaJson`.
    `Table.schema` may continue to be present in your logs during this
    transition.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TABLE_INSERT_REQUEST_FIELD_NUMBER: builtins.int
    TABLE_UPDATE_REQUEST_FIELD_NUMBER: builtins.int
    DATASET_LIST_REQUEST_FIELD_NUMBER: builtins.int
    DATASET_INSERT_REQUEST_FIELD_NUMBER: builtins.int
    DATASET_UPDATE_REQUEST_FIELD_NUMBER: builtins.int
    JOB_INSERT_REQUEST_FIELD_NUMBER: builtins.int
    JOB_QUERY_REQUEST_FIELD_NUMBER: builtins.int
    JOB_GET_QUERY_RESULTS_REQUEST_FIELD_NUMBER: builtins.int
    TABLE_DATA_LIST_REQUEST_FIELD_NUMBER: builtins.int
    SET_IAM_POLICY_REQUEST_FIELD_NUMBER: builtins.int
    TABLE_INSERT_RESPONSE_FIELD_NUMBER: builtins.int
    TABLE_UPDATE_RESPONSE_FIELD_NUMBER: builtins.int
    DATASET_INSERT_RESPONSE_FIELD_NUMBER: builtins.int
    DATASET_UPDATE_RESPONSE_FIELD_NUMBER: builtins.int
    JOB_INSERT_RESPONSE_FIELD_NUMBER: builtins.int
    JOB_QUERY_RESPONSE_FIELD_NUMBER: builtins.int
    JOB_GET_QUERY_RESULTS_RESPONSE_FIELD_NUMBER: builtins.int
    JOB_QUERY_DONE_RESPONSE_FIELD_NUMBER: builtins.int
    POLICY_RESPONSE_FIELD_NUMBER: builtins.int
    JOB_COMPLETED_EVENT_FIELD_NUMBER: builtins.int
    TABLE_DATA_READ_EVENTS_FIELD_NUMBER: builtins.int
    @property
    def table_insert_request(self) -> global___TableInsertRequest:
        """Table insert request."""
        pass
    @property
    def table_update_request(self) -> global___TableUpdateRequest:
        """Table update request."""
        pass
    @property
    def dataset_list_request(self) -> global___DatasetListRequest:
        """Dataset list request."""
        pass
    @property
    def dataset_insert_request(self) -> global___DatasetInsertRequest:
        """Dataset insert request."""
        pass
    @property
    def dataset_update_request(self) -> global___DatasetUpdateRequest:
        """Dataset update request."""
        pass
    @property
    def job_insert_request(self) -> global___JobInsertRequest:
        """Job insert request."""
        pass
    @property
    def job_query_request(self) -> global___JobQueryRequest:
        """Job query request."""
        pass
    @property
    def job_get_query_results_request(self) -> global___JobGetQueryResultsRequest:
        """Job get query results request."""
        pass
    @property
    def table_data_list_request(self) -> global___TableDataListRequest:
        """Table data-list request."""
        pass
    @property
    def set_iam_policy_request(self) -> google.iam.v1.iam_policy_pb2.SetIamPolicyRequest:
        """Iam policy request."""
        pass
    @property
    def table_insert_response(self) -> global___TableInsertResponse:
        """Table insert response."""
        pass
    @property
    def table_update_response(self) -> global___TableUpdateResponse:
        """Table update response."""
        pass
    @property
    def dataset_insert_response(self) -> global___DatasetInsertResponse:
        """Dataset insert response."""
        pass
    @property
    def dataset_update_response(self) -> global___DatasetUpdateResponse:
        """Dataset update response."""
        pass
    @property
    def job_insert_response(self) -> global___JobInsertResponse:
        """Job insert response."""
        pass
    @property
    def job_query_response(self) -> global___JobQueryResponse:
        """Job query response."""
        pass
    @property
    def job_get_query_results_response(self) -> global___JobGetQueryResultsResponse:
        """Job get query results response."""
        pass
    @property
    def job_query_done_response(self) -> global___JobQueryDoneResponse:
        """Deprecated: Job query-done response. Use this information for usage
        analysis.
        """
        pass
    @property
    def policy_response(self) -> google.iam.v1.policy_pb2.Policy:
        """Iam Policy."""
        pass
    @property
    def job_completed_event(self) -> global___JobCompletedEvent:
        """A job completion event."""
        pass
    @property
    def table_data_read_events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TableDataReadEvent]:
        """Information about the table access events."""
        pass
    def __init__(self,
        *,
        table_insert_request : typing.Optional[global___TableInsertRequest] = ...,
        table_update_request : typing.Optional[global___TableUpdateRequest] = ...,
        dataset_list_request : typing.Optional[global___DatasetListRequest] = ...,
        dataset_insert_request : typing.Optional[global___DatasetInsertRequest] = ...,
        dataset_update_request : typing.Optional[global___DatasetUpdateRequest] = ...,
        job_insert_request : typing.Optional[global___JobInsertRequest] = ...,
        job_query_request : typing.Optional[global___JobQueryRequest] = ...,
        job_get_query_results_request : typing.Optional[global___JobGetQueryResultsRequest] = ...,
        table_data_list_request : typing.Optional[global___TableDataListRequest] = ...,
        set_iam_policy_request : typing.Optional[google.iam.v1.iam_policy_pb2.SetIamPolicyRequest] = ...,
        table_insert_response : typing.Optional[global___TableInsertResponse] = ...,
        table_update_response : typing.Optional[global___TableUpdateResponse] = ...,
        dataset_insert_response : typing.Optional[global___DatasetInsertResponse] = ...,
        dataset_update_response : typing.Optional[global___DatasetUpdateResponse] = ...,
        job_insert_response : typing.Optional[global___JobInsertResponse] = ...,
        job_query_response : typing.Optional[global___JobQueryResponse] = ...,
        job_get_query_results_response : typing.Optional[global___JobGetQueryResultsResponse] = ...,
        job_query_done_response : typing.Optional[global___JobQueryDoneResponse] = ...,
        policy_response : typing.Optional[google.iam.v1.policy_pb2.Policy] = ...,
        job_completed_event : typing.Optional[global___JobCompletedEvent] = ...,
        table_data_read_events : typing.Optional[typing.Iterable[global___TableDataReadEvent]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset_insert_request",b"dataset_insert_request","dataset_insert_response",b"dataset_insert_response","dataset_list_request",b"dataset_list_request","dataset_update_request",b"dataset_update_request","dataset_update_response",b"dataset_update_response","job_completed_event",b"job_completed_event","job_get_query_results_request",b"job_get_query_results_request","job_get_query_results_response",b"job_get_query_results_response","job_insert_request",b"job_insert_request","job_insert_response",b"job_insert_response","job_query_done_response",b"job_query_done_response","job_query_request",b"job_query_request","job_query_response",b"job_query_response","policy_response",b"policy_response","request",b"request","response",b"response","set_iam_policy_request",b"set_iam_policy_request","table_data_list_request",b"table_data_list_request","table_insert_request",b"table_insert_request","table_insert_response",b"table_insert_response","table_update_request",b"table_update_request","table_update_response",b"table_update_response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_insert_request",b"dataset_insert_request","dataset_insert_response",b"dataset_insert_response","dataset_list_request",b"dataset_list_request","dataset_update_request",b"dataset_update_request","dataset_update_response",b"dataset_update_response","job_completed_event",b"job_completed_event","job_get_query_results_request",b"job_get_query_results_request","job_get_query_results_response",b"job_get_query_results_response","job_insert_request",b"job_insert_request","job_insert_response",b"job_insert_response","job_query_done_response",b"job_query_done_response","job_query_request",b"job_query_request","job_query_response",b"job_query_response","policy_response",b"policy_response","request",b"request","response",b"response","set_iam_policy_request",b"set_iam_policy_request","table_data_list_request",b"table_data_list_request","table_data_read_events",b"table_data_read_events","table_insert_request",b"table_insert_request","table_insert_response",b"table_insert_response","table_update_request",b"table_update_request","table_update_response",b"table_update_response"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["request",b"request"]) -> typing.Optional[typing_extensions.Literal["table_insert_request","table_update_request","dataset_list_request","dataset_insert_request","dataset_update_request","job_insert_request","job_query_request","job_get_query_results_request","table_data_list_request","set_iam_policy_request"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["response",b"response"]) -> typing.Optional[typing_extensions.Literal["table_insert_response","table_update_response","dataset_insert_response","dataset_update_response","job_insert_response","job_query_response","job_get_query_results_response","job_query_done_response","policy_response"]]: ...
global___AuditData = AuditData

class TableInsertRequest(google.protobuf.message.Message):
    """Table insert request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Table:
        """The new table."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Table] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> None: ...
global___TableInsertRequest = TableInsertRequest

class TableUpdateRequest(google.protobuf.message.Message):
    """Table update request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Table:
        """The table to be updated."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Table] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> None: ...
global___TableUpdateRequest = TableUpdateRequest

class TableInsertResponse(google.protobuf.message.Message):
    """Table insert response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Table:
        """Final state of the inserted table."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Table] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> None: ...
global___TableInsertResponse = TableInsertResponse

class TableUpdateResponse(google.protobuf.message.Message):
    """Table update response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Table:
        """Final state of the updated table."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Table] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> None: ...
global___TableUpdateResponse = TableUpdateResponse

class DatasetListRequest(google.protobuf.message.Message):
    """Dataset list request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LIST_ALL_FIELD_NUMBER: builtins.int
    list_all: builtins.bool = ...
    """Whether to list all datasets, including hidden ones."""

    def __init__(self,
        *,
        list_all : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["list_all",b"list_all"]) -> None: ...
global___DatasetListRequest = DatasetListRequest

class DatasetInsertRequest(google.protobuf.message.Message):
    """Dataset insert request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Dataset:
        """The dataset to be inserted."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Dataset] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> None: ...
global___DatasetInsertRequest = DatasetInsertRequest

class DatasetInsertResponse(google.protobuf.message.Message):
    """Dataset insert response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Dataset:
        """Final state of the inserted dataset."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Dataset] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> None: ...
global___DatasetInsertResponse = DatasetInsertResponse

class DatasetUpdateRequest(google.protobuf.message.Message):
    """Dataset update request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Dataset:
        """The dataset to be updated."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Dataset] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> None: ...
global___DatasetUpdateRequest = DatasetUpdateRequest

class DatasetUpdateResponse(google.protobuf.message.Message):
    """Dataset update response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Dataset:
        """Final state of the updated dataset."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Dataset] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> None: ...
global___DatasetUpdateResponse = DatasetUpdateResponse

class JobInsertRequest(google.protobuf.message.Message):
    """Job insert request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Job:
        """Job insert request."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Job] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> None: ...
global___JobInsertRequest = JobInsertRequest

class JobInsertResponse(google.protobuf.message.Message):
    """Job insert response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Job:
        """Job insert response."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Job] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> None: ...
global___JobInsertResponse = JobInsertResponse

class JobQueryRequest(google.protobuf.message.Message):
    """Job query request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    QUERY_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    DEFAULT_DATASET_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    DRY_RUN_FIELD_NUMBER: builtins.int
    query: typing.Text = ...
    """The query."""

    max_results: builtins.int = ...
    """The maximum number of results."""

    @property
    def default_dataset(self) -> global___DatasetName:
        """The default dataset for tables that do not have a dataset specified."""
        pass
    project_id: typing.Text = ...
    """Project that the query should be charged to."""

    dry_run: builtins.bool = ...
    """If true, don't actually run the job. Just check that it would run."""

    def __init__(self,
        *,
        query : typing.Text = ...,
        max_results : builtins.int = ...,
        default_dataset : typing.Optional[global___DatasetName] = ...,
        project_id : typing.Text = ...,
        dry_run : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_dataset",b"default_dataset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["default_dataset",b"default_dataset","dry_run",b"dry_run","max_results",b"max_results","project_id",b"project_id","query",b"query"]) -> None: ...
global___JobQueryRequest = JobQueryRequest

class JobQueryResponse(google.protobuf.message.Message):
    """Job query response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOTAL_RESULTS_FIELD_NUMBER: builtins.int
    JOB_FIELD_NUMBER: builtins.int
    total_results: builtins.int = ...
    """The total number of rows in the full query result set."""

    @property
    def job(self) -> global___Job:
        """Information about the queried job."""
        pass
    def __init__(self,
        *,
        total_results : builtins.int = ...,
        job : typing.Optional[global___Job] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["job",b"job"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["job",b"job","total_results",b"total_results"]) -> None: ...
global___JobQueryResponse = JobQueryResponse

class JobGetQueryResultsRequest(google.protobuf.message.Message):
    """Job getQueryResults request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    START_ROW_FIELD_NUMBER: builtins.int
    max_results: builtins.int = ...
    """Maximum number of results to return."""

    start_row: builtins.int = ...
    """Zero-based row number at which to start."""

    def __init__(self,
        *,
        max_results : builtins.int = ...,
        start_row : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_results",b"max_results","start_row",b"start_row"]) -> None: ...
global___JobGetQueryResultsRequest = JobGetQueryResultsRequest

class JobGetQueryResultsResponse(google.protobuf.message.Message):
    """Job getQueryResults response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOTAL_RESULTS_FIELD_NUMBER: builtins.int
    JOB_FIELD_NUMBER: builtins.int
    total_results: builtins.int = ...
    """Total number of results in query results."""

    @property
    def job(self) -> global___Job:
        """The job that was created to run the query.
        It completed if `job.status.state` is `DONE`.
        It failed if `job.status.errorResult` is also present.
        """
        pass
    def __init__(self,
        *,
        total_results : builtins.int = ...,
        job : typing.Optional[global___Job] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["job",b"job"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["job",b"job","total_results",b"total_results"]) -> None: ...
global___JobGetQueryResultsResponse = JobGetQueryResultsResponse

class JobQueryDoneResponse(google.protobuf.message.Message):
    """Job getQueryDone response."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    JOB_FIELD_NUMBER: builtins.int
    @property
    def job(self) -> global___Job:
        """The job and status information.
        The job completed if `job.status.state` is `DONE`.
        """
        pass
    def __init__(self,
        *,
        job : typing.Optional[global___Job] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["job",b"job"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["job",b"job"]) -> None: ...
global___JobQueryDoneResponse = JobQueryDoneResponse

class JobCompletedEvent(google.protobuf.message.Message):
    """Query job completed event."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EVENT_NAME_FIELD_NUMBER: builtins.int
    JOB_FIELD_NUMBER: builtins.int
    event_name: typing.Text = ...
    """Name of the event."""

    @property
    def job(self) -> global___Job:
        """Job information."""
        pass
    def __init__(self,
        *,
        event_name : typing.Text = ...,
        job : typing.Optional[global___Job] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["job",b"job"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event_name",b"event_name","job",b"job"]) -> None: ...
global___JobCompletedEvent = JobCompletedEvent

class TableDataReadEvent(google.protobuf.message.Message):
    """Table data read event. Only present for tables, not views, and is only
    included in the log record for the project that owns the table.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TABLE_NAME_FIELD_NUMBER: builtins.int
    REFERENCED_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def table_name(self) -> global___TableName:
        """Name of the accessed table."""
        pass
    @property
    def referenced_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of referenced fields. This information is not included by default.
        To enable this in the logs, please contact BigQuery support or open a bug
        in the BigQuery issue tracker.
        """
        pass
    def __init__(self,
        *,
        table_name : typing.Optional[global___TableName] = ...,
        referenced_fields : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["table_name",b"table_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["referenced_fields",b"referenced_fields","table_name",b"table_name"]) -> None: ...
global___TableDataReadEvent = TableDataReadEvent

class TableDataListRequest(google.protobuf.message.Message):
    """Table data-list request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_ROW_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    start_row: builtins.int = ...
    """Starting row offset."""

    max_results: builtins.int = ...
    """Maximum number of results to return."""

    def __init__(self,
        *,
        start_row : builtins.int = ...,
        max_results : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_results",b"max_results","start_row",b"start_row"]) -> None: ...
global___TableDataListRequest = TableDataListRequest

class Table(google.protobuf.message.Message):
    """Describes a BigQuery table.
    See the [Table](/bigquery/docs/reference/v2/tables) API resource
    for more details on individual fields.
    Note: `Table.schema` has been deprecated in favor of `Table.schemaJson`.
    `Table.schema` may continue to be present in your logs during this
    transition.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TABLE_NAME_FIELD_NUMBER: builtins.int
    INFO_FIELD_NUMBER: builtins.int
    SCHEMA_JSON_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    EXPIRE_TIME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    TRUNCATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    ENCRYPTION_FIELD_NUMBER: builtins.int
    @property
    def table_name(self) -> global___TableName:
        """The name of the table."""
        pass
    @property
    def info(self) -> global___TableInfo:
        """User-provided metadata for the table."""
        pass
    schema_json: typing.Text = ...
    """A JSON representation of the table's schema."""

    @property
    def view(self) -> global___TableViewDefinition:
        """If present, this is a virtual table defined by a SQL query."""
        pass
    @property
    def expire_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The expiration date for the table, after which the table
        is deleted and the storage reclaimed.
        If not present, the table persists indefinitely.
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the table was created."""
        pass
    @property
    def truncate_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the table was last truncated
        by an operation with a `writeDisposition` of `WRITE_TRUNCATE`.
        """
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the table was last modified."""
        pass
    @property
    def encryption(self) -> global___EncryptionInfo:
        """The table encryption information. Set when non-default encryption is used."""
        pass
    def __init__(self,
        *,
        table_name : typing.Optional[global___TableName] = ...,
        info : typing.Optional[global___TableInfo] = ...,
        schema_json : typing.Text = ...,
        view : typing.Optional[global___TableViewDefinition] = ...,
        expire_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        truncate_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        encryption : typing.Optional[global___EncryptionInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","encryption",b"encryption","expire_time",b"expire_time","info",b"info","table_name",b"table_name","truncate_time",b"truncate_time","update_time",b"update_time","view",b"view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","encryption",b"encryption","expire_time",b"expire_time","info",b"info","schema_json",b"schema_json","table_name",b"table_name","truncate_time",b"truncate_time","update_time",b"update_time","view",b"view"]) -> None: ...
global___Table = Table

class TableInfo(google.protobuf.message.Message):
    """User-provided metadata for a table."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FRIENDLY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    friendly_name: typing.Text = ...
    """A short name for the table, such as`"Analytics Data - Jan 2011"`."""

    description: typing.Text = ...
    """A long description, perhaps several paragraphs,
    describing the table contents in detail.
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels provided for the table."""
        pass
    def __init__(self,
        *,
        friendly_name : typing.Text = ...,
        description : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","friendly_name",b"friendly_name","labels",b"labels"]) -> None: ...
global___TableInfo = TableInfo

class TableViewDefinition(google.protobuf.message.Message):
    """Describes a virtual table defined by a SQL query."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    QUERY_FIELD_NUMBER: builtins.int
    query: typing.Text = ...
    """SQL query defining the view."""

    def __init__(self,
        *,
        query : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["query",b"query"]) -> None: ...
global___TableViewDefinition = TableViewDefinition

class Dataset(google.protobuf.message.Message):
    """BigQuery dataset information.
    See the [Dataset](/bigquery/docs/reference/v2/datasets) API resource
    for more details on individual fields.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATASET_NAME_FIELD_NUMBER: builtins.int
    INFO_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    ACL_FIELD_NUMBER: builtins.int
    DEFAULT_TABLE_EXPIRE_DURATION_FIELD_NUMBER: builtins.int
    @property
    def dataset_name(self) -> global___DatasetName:
        """The name of the dataset."""
        pass
    @property
    def info(self) -> global___DatasetInfo:
        """User-provided metadata for the dataset."""
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the dataset was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time the dataset was last modified."""
        pass
    @property
    def acl(self) -> global___BigQueryAcl:
        """The access control list for the dataset."""
        pass
    @property
    def default_table_expire_duration(self) -> google.protobuf.duration_pb2.Duration:
        """If this field is present, each table that does not specify an
        expiration time is assigned an expiration time by adding this
        duration to the table's `createTime`.  If this field is empty,
        there is no default table expiration time.
        """
        pass
    def __init__(self,
        *,
        dataset_name : typing.Optional[global___DatasetName] = ...,
        info : typing.Optional[global___DatasetInfo] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        acl : typing.Optional[global___BigQueryAcl] = ...,
        default_table_expire_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["acl",b"acl","create_time",b"create_time","dataset_name",b"dataset_name","default_table_expire_duration",b"default_table_expire_duration","info",b"info","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["acl",b"acl","create_time",b"create_time","dataset_name",b"dataset_name","default_table_expire_duration",b"default_table_expire_duration","info",b"info","update_time",b"update_time"]) -> None: ...
global___Dataset = Dataset

class DatasetInfo(google.protobuf.message.Message):
    """User-provided metadata for a dataset."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    FRIENDLY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    friendly_name: typing.Text = ...
    """A short name for the dataset, such as`"Analytics Data 2011"`."""

    description: typing.Text = ...
    """A long description, perhaps several paragraphs,
    describing the dataset contents in detail.
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels provided for the dataset."""
        pass
    def __init__(self,
        *,
        friendly_name : typing.Text = ...,
        description : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","friendly_name",b"friendly_name","labels",b"labels"]) -> None: ...
global___DatasetInfo = DatasetInfo

class BigQueryAcl(google.protobuf.message.Message):
    """An access control list."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Entry(google.protobuf.message.Message):
        """Access control entry."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ROLE_FIELD_NUMBER: builtins.int
        GROUP_EMAIL_FIELD_NUMBER: builtins.int
        USER_EMAIL_FIELD_NUMBER: builtins.int
        DOMAIN_FIELD_NUMBER: builtins.int
        SPECIAL_GROUP_FIELD_NUMBER: builtins.int
        VIEW_NAME_FIELD_NUMBER: builtins.int
        role: typing.Text = ...
        """The granted role, which can be `READER`, `WRITER`, or `OWNER`."""

        group_email: typing.Text = ...
        """Grants access to a group identified by an email address."""

        user_email: typing.Text = ...
        """Grants access to a user identified by an email address."""

        domain: typing.Text = ...
        """Grants access to all members of a domain."""

        special_group: typing.Text = ...
        """Grants access to special groups. Valid groups are `PROJECT_OWNERS`,
        `PROJECT_READERS`, `PROJECT_WRITERS` and `ALL_AUTHENTICATED_USERS`.
        """

        @property
        def view_name(self) -> global___TableName:
            """Grants access to a BigQuery View."""
            pass
        def __init__(self,
            *,
            role : typing.Text = ...,
            group_email : typing.Text = ...,
            user_email : typing.Text = ...,
            domain : typing.Text = ...,
            special_group : typing.Text = ...,
            view_name : typing.Optional[global___TableName] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["view_name",b"view_name"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["domain",b"domain","group_email",b"group_email","role",b"role","special_group",b"special_group","user_email",b"user_email","view_name",b"view_name"]) -> None: ...

    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BigQueryAcl.Entry]:
        """Access control entry list."""
        pass
    def __init__(self,
        *,
        entries : typing.Optional[typing.Iterable[global___BigQueryAcl.Entry]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries",b"entries"]) -> None: ...
global___BigQueryAcl = BigQueryAcl

class Job(google.protobuf.message.Message):
    """Describes a job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    JOB_NAME_FIELD_NUMBER: builtins.int
    JOB_CONFIGURATION_FIELD_NUMBER: builtins.int
    JOB_STATUS_FIELD_NUMBER: builtins.int
    JOB_STATISTICS_FIELD_NUMBER: builtins.int
    @property
    def job_name(self) -> global___JobName:
        """Job name."""
        pass
    @property
    def job_configuration(self) -> global___JobConfiguration:
        """Job configuration."""
        pass
    @property
    def job_status(self) -> global___JobStatus:
        """Job status."""
        pass
    @property
    def job_statistics(self) -> global___JobStatistics:
        """Job statistics."""
        pass
    def __init__(self,
        *,
        job_name : typing.Optional[global___JobName] = ...,
        job_configuration : typing.Optional[global___JobConfiguration] = ...,
        job_status : typing.Optional[global___JobStatus] = ...,
        job_statistics : typing.Optional[global___JobStatistics] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["job_configuration",b"job_configuration","job_name",b"job_name","job_statistics",b"job_statistics","job_status",b"job_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["job_configuration",b"job_configuration","job_name",b"job_name","job_statistics",b"job_statistics","job_status",b"job_status"]) -> None: ...
global___Job = Job

class JobConfiguration(google.protobuf.message.Message):
    """Job configuration information.
    See the [Jobs](/bigquery/docs/reference/v2/jobs) API resource
    for more details on individual fields.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Query(google.protobuf.message.Message):
        """Describes a query job, which executes a SQL-like query."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        QUERY_FIELD_NUMBER: builtins.int
        DESTINATION_TABLE_FIELD_NUMBER: builtins.int
        CREATE_DISPOSITION_FIELD_NUMBER: builtins.int
        WRITE_DISPOSITION_FIELD_NUMBER: builtins.int
        DEFAULT_DATASET_FIELD_NUMBER: builtins.int
        TABLE_DEFINITIONS_FIELD_NUMBER: builtins.int
        QUERY_PRIORITY_FIELD_NUMBER: builtins.int
        DESTINATION_TABLE_ENCRYPTION_FIELD_NUMBER: builtins.int
        STATEMENT_TYPE_FIELD_NUMBER: builtins.int
        query: typing.Text = ...
        """The SQL query to run."""

        @property
        def destination_table(self) -> global___TableName:
            """The table where results are written."""
            pass
        create_disposition: typing.Text = ...
        """Describes when a job is allowed to create a table:
        `CREATE_IF_NEEDED`, `CREATE_NEVER`.
        """

        write_disposition: typing.Text = ...
        """Describes how writes affect existing tables:
        `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
        """

        @property
        def default_dataset(self) -> global___DatasetName:
            """If a table name is specified without a dataset in a query,
            this dataset will be added to table name.
            """
            pass
        @property
        def table_definitions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TableDefinition]:
            """Describes data sources outside BigQuery, if needed."""
            pass
        query_priority: typing.Text = ...
        """Describes the priority given to the query:
        `QUERY_INTERACTIVE` or `QUERY_BATCH`.
        """

        @property
        def destination_table_encryption(self) -> global___EncryptionInfo:
            """Result table encryption information. Set when non-default encryption is
            used.
            """
            pass
        statement_type: typing.Text = ...
        """Type of the statement (e.g. SELECT, INSERT, CREATE_TABLE, CREATE_MODEL..)"""

        def __init__(self,
            *,
            query : typing.Text = ...,
            destination_table : typing.Optional[global___TableName] = ...,
            create_disposition : typing.Text = ...,
            write_disposition : typing.Text = ...,
            default_dataset : typing.Optional[global___DatasetName] = ...,
            table_definitions : typing.Optional[typing.Iterable[global___TableDefinition]] = ...,
            query_priority : typing.Text = ...,
            destination_table_encryption : typing.Optional[global___EncryptionInfo] = ...,
            statement_type : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["default_dataset",b"default_dataset","destination_table",b"destination_table","destination_table_encryption",b"destination_table_encryption"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["create_disposition",b"create_disposition","default_dataset",b"default_dataset","destination_table",b"destination_table","destination_table_encryption",b"destination_table_encryption","query",b"query","query_priority",b"query_priority","statement_type",b"statement_type","table_definitions",b"table_definitions","write_disposition",b"write_disposition"]) -> None: ...

    class Load(google.protobuf.message.Message):
        """Describes a load job, which loads data from an external source via
        the  import pipeline.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SOURCE_URIS_FIELD_NUMBER: builtins.int
        SCHEMA_JSON_FIELD_NUMBER: builtins.int
        DESTINATION_TABLE_FIELD_NUMBER: builtins.int
        CREATE_DISPOSITION_FIELD_NUMBER: builtins.int
        WRITE_DISPOSITION_FIELD_NUMBER: builtins.int
        DESTINATION_TABLE_ENCRYPTION_FIELD_NUMBER: builtins.int
        @property
        def source_uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """URIs for the data to be imported. Only Google Cloud Storage URIs are
            supported.
            """
            pass
        schema_json: typing.Text = ...
        """The table schema in JSON format representation of a TableSchema."""

        @property
        def destination_table(self) -> global___TableName:
            """The table where the imported data is written."""
            pass
        create_disposition: typing.Text = ...
        """Describes when a job is allowed to create a table:
        `CREATE_IF_NEEDED`, `CREATE_NEVER`.
        """

        write_disposition: typing.Text = ...
        """Describes how writes affect existing tables:
        `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
        """

        @property
        def destination_table_encryption(self) -> global___EncryptionInfo:
            """Result table encryption information. Set when non-default encryption is
            used.
            """
            pass
        def __init__(self,
            *,
            source_uris : typing.Optional[typing.Iterable[typing.Text]] = ...,
            schema_json : typing.Text = ...,
            destination_table : typing.Optional[global___TableName] = ...,
            create_disposition : typing.Text = ...,
            write_disposition : typing.Text = ...,
            destination_table_encryption : typing.Optional[global___EncryptionInfo] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["destination_table",b"destination_table","destination_table_encryption",b"destination_table_encryption"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["create_disposition",b"create_disposition","destination_table",b"destination_table","destination_table_encryption",b"destination_table_encryption","schema_json",b"schema_json","source_uris",b"source_uris","write_disposition",b"write_disposition"]) -> None: ...

    class Extract(google.protobuf.message.Message):
        """Describes an extract job, which exports data to an external source
        via the  export pipeline.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DESTINATION_URIS_FIELD_NUMBER: builtins.int
        SOURCE_TABLE_FIELD_NUMBER: builtins.int
        @property
        def destination_uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Google Cloud Storage URIs where extracted data should be written."""
            pass
        @property
        def source_table(self) -> global___TableName:
            """The source table."""
            pass
        def __init__(self,
            *,
            destination_uris : typing.Optional[typing.Iterable[typing.Text]] = ...,
            source_table : typing.Optional[global___TableName] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["source_table",b"source_table"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["destination_uris",b"destination_uris","source_table",b"source_table"]) -> None: ...

    class TableCopy(google.protobuf.message.Message):
        """Describes a copy job, which copies an existing table to another table."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SOURCE_TABLES_FIELD_NUMBER: builtins.int
        DESTINATION_TABLE_FIELD_NUMBER: builtins.int
        CREATE_DISPOSITION_FIELD_NUMBER: builtins.int
        WRITE_DISPOSITION_FIELD_NUMBER: builtins.int
        DESTINATION_TABLE_ENCRYPTION_FIELD_NUMBER: builtins.int
        @property
        def source_tables(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TableName]:
            """Source tables."""
            pass
        @property
        def destination_table(self) -> global___TableName:
            """Destination table."""
            pass
        create_disposition: typing.Text = ...
        """Describes when a job is allowed to create a table:
        `CREATE_IF_NEEDED`, `CREATE_NEVER`.
        """

        write_disposition: typing.Text = ...
        """Describes how writes affect existing tables:
        `WRITE_TRUNCATE`, `WRITE_APPEND`, `WRITE_EMPTY`.
        """

        @property
        def destination_table_encryption(self) -> global___EncryptionInfo:
            """Result table encryption information. Set when non-default encryption is
            used.
            """
            pass
        def __init__(self,
            *,
            source_tables : typing.Optional[typing.Iterable[global___TableName]] = ...,
            destination_table : typing.Optional[global___TableName] = ...,
            create_disposition : typing.Text = ...,
            write_disposition : typing.Text = ...,
            destination_table_encryption : typing.Optional[global___EncryptionInfo] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["destination_table",b"destination_table","destination_table_encryption",b"destination_table_encryption"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["create_disposition",b"create_disposition","destination_table",b"destination_table","destination_table_encryption",b"destination_table_encryption","source_tables",b"source_tables","write_disposition",b"write_disposition"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    QUERY_FIELD_NUMBER: builtins.int
    LOAD_FIELD_NUMBER: builtins.int
    EXTRACT_FIELD_NUMBER: builtins.int
    TABLE_COPY_FIELD_NUMBER: builtins.int
    DRY_RUN_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    @property
    def query(self) -> global___JobConfiguration.Query:
        """Query job information."""
        pass
    @property
    def load(self) -> global___JobConfiguration.Load:
        """Load job information."""
        pass
    @property
    def extract(self) -> global___JobConfiguration.Extract:
        """Extract job information."""
        pass
    @property
    def table_copy(self) -> global___JobConfiguration.TableCopy:
        """TableCopy job information."""
        pass
    dry_run: builtins.bool = ...
    """If true, don't actually run the job. Just check that it would run."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels provided for the job."""
        pass
    def __init__(self,
        *,
        query : typing.Optional[global___JobConfiguration.Query] = ...,
        load : typing.Optional[global___JobConfiguration.Load] = ...,
        extract : typing.Optional[global___JobConfiguration.Extract] = ...,
        table_copy : typing.Optional[global___JobConfiguration.TableCopy] = ...,
        dry_run : builtins.bool = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["configuration",b"configuration","extract",b"extract","load",b"load","query",b"query","table_copy",b"table_copy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["configuration",b"configuration","dry_run",b"dry_run","extract",b"extract","labels",b"labels","load",b"load","query",b"query","table_copy",b"table_copy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["configuration",b"configuration"]) -> typing.Optional[typing_extensions.Literal["query","load","extract","table_copy"]]: ...
global___JobConfiguration = JobConfiguration

class TableDefinition(google.protobuf.message.Message):
    """Describes an external data source used in a query."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    SOURCE_URIS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of the table, used in queries."""

    @property
    def source_uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Google Cloud Storage URIs for the data to be imported."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        source_uris : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","source_uris",b"source_uris"]) -> None: ...
global___TableDefinition = TableDefinition

class JobStatus(google.protobuf.message.Message):
    """Running state of a job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    ADDITIONAL_ERRORS_FIELD_NUMBER: builtins.int
    state: typing.Text = ...
    """State of a job: `PENDING`, `RUNNING`, or `DONE`."""

    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """If the job did not complete successfully, this field describes why."""
        pass
    @property
    def additional_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.rpc.status_pb2.Status]:
        """Errors encountered during the running of the job. Do not necessarily mean
        that the job has completed or was unsuccessful.
        """
        pass
    def __init__(self,
        *,
        state : typing.Text = ...,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        additional_errors : typing.Optional[typing.Iterable[google.rpc.status_pb2.Status]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_errors",b"additional_errors","error",b"error","state",b"state"]) -> None: ...
global___JobStatus = JobStatus

class JobStatistics(google.protobuf.message.Message):
    """Job statistics that may change after a job starts."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ReservationResourceUsage(google.protobuf.message.Message):
        """Job resource usage breakdown by reservation."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_FIELD_NUMBER: builtins.int
        SLOT_MS_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """Reservation name or "unreserved" for on-demand resources usage."""

        slot_ms: builtins.int = ...
        """Total slot milliseconds used by the reservation for a particular job."""

        def __init__(self,
            *,
            name : typing.Text = ...,
            slot_ms : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name",b"name","slot_ms",b"slot_ms"]) -> None: ...

    CREATE_TIME_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TOTAL_PROCESSED_BYTES_FIELD_NUMBER: builtins.int
    TOTAL_BILLED_BYTES_FIELD_NUMBER: builtins.int
    BILLING_TIER_FIELD_NUMBER: builtins.int
    TOTAL_SLOT_MS_FIELD_NUMBER: builtins.int
    RESERVATION_USAGE_FIELD_NUMBER: builtins.int
    REFERENCED_TABLES_FIELD_NUMBER: builtins.int
    TOTAL_TABLES_PROCESSED_FIELD_NUMBER: builtins.int
    REFERENCED_VIEWS_FIELD_NUMBER: builtins.int
    TOTAL_VIEWS_PROCESSED_FIELD_NUMBER: builtins.int
    QUERY_OUTPUT_ROW_COUNT_FIELD_NUMBER: builtins.int
    TOTAL_LOAD_OUTPUT_BYTES_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when the job was created."""
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when the job started."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when the job ended."""
        pass
    total_processed_bytes: builtins.int = ...
    """Total bytes processed for a job."""

    total_billed_bytes: builtins.int = ...
    """Processed bytes, adjusted by the job's CPU usage."""

    billing_tier: builtins.int = ...
    """The tier assigned by CPU-based billing."""

    total_slot_ms: builtins.int = ...
    """The total number of slot-ms consumed by the query job."""

    @property
    def reservation_usage(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___JobStatistics.ReservationResourceUsage]:
        """Reservation usage."""
        pass
    @property
    def referenced_tables(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TableName]:
        """The first N tables accessed by the query job. Older queries that
        reference a large number of tables may not have all of their
        tables in this list. You can use the total_tables_processed count to
        know how many total tables were read in the query. For new queries,
        there is currently no limit.
        """
        pass
    total_tables_processed: builtins.int = ...
    """Total number of unique tables referenced in the query."""

    @property
    def referenced_views(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TableName]:
        """The first N views accessed by the query job. Older queries that
        reference a large number of views may not have all of their
        views in this list. You can use the total_tables_processed count to
        know how many total tables were read in the query. For new queries,
        there is currently no limit.
        """
        pass
    total_views_processed: builtins.int = ...
    """Total number of unique views referenced in the query."""

    query_output_row_count: builtins.int = ...
    """Number of output rows produced by the query job."""

    total_load_output_bytes: builtins.int = ...
    """Total bytes loaded for an import job."""

    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        total_processed_bytes : builtins.int = ...,
        total_billed_bytes : builtins.int = ...,
        billing_tier : builtins.int = ...,
        total_slot_ms : builtins.int = ...,
        reservation_usage : typing.Optional[typing.Iterable[global___JobStatistics.ReservationResourceUsage]] = ...,
        referenced_tables : typing.Optional[typing.Iterable[global___TableName]] = ...,
        total_tables_processed : builtins.int = ...,
        referenced_views : typing.Optional[typing.Iterable[global___TableName]] = ...,
        total_views_processed : builtins.int = ...,
        query_output_row_count : builtins.int = ...,
        total_load_output_bytes : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["billing_tier",b"billing_tier","create_time",b"create_time","end_time",b"end_time","query_output_row_count",b"query_output_row_count","referenced_tables",b"referenced_tables","referenced_views",b"referenced_views","reservation_usage",b"reservation_usage","start_time",b"start_time","total_billed_bytes",b"total_billed_bytes","total_load_output_bytes",b"total_load_output_bytes","total_processed_bytes",b"total_processed_bytes","total_slot_ms",b"total_slot_ms","total_tables_processed",b"total_tables_processed","total_views_processed",b"total_views_processed"]) -> None: ...
global___JobStatistics = JobStatistics

class DatasetName(google.protobuf.message.Message):
    """The fully-qualified name for a dataset."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """The project ID."""

    dataset_id: typing.Text = ...
    """The dataset ID within the project."""

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        dataset_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id",b"dataset_id","project_id",b"project_id"]) -> None: ...
global___DatasetName = DatasetName

class TableName(google.protobuf.message.Message):
    """The fully-qualified name for a table."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    TABLE_ID_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """The project ID."""

    dataset_id: typing.Text = ...
    """The dataset ID within the project."""

    table_id: typing.Text = ...
    """The table ID of the table within the dataset."""

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        dataset_id : typing.Text = ...,
        table_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_id",b"dataset_id","project_id",b"project_id","table_id",b"table_id"]) -> None: ...
global___TableName = TableName

class JobName(google.protobuf.message.Message):
    """The fully-qualified name for a job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_ID_FIELD_NUMBER: builtins.int
    JOB_ID_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    project_id: typing.Text = ...
    """The project ID."""

    job_id: typing.Text = ...
    """The job ID within the project."""

    location: typing.Text = ...
    """The job location."""

    def __init__(self,
        *,
        project_id : typing.Text = ...,
        job_id : typing.Text = ...,
        location : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["job_id",b"job_id","location",b"location","project_id",b"project_id"]) -> None: ...
global___JobName = JobName

class EncryptionInfo(google.protobuf.message.Message):
    """Describes encryption properties for a table or a job"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    kms_key_name: typing.Text = ...
    """unique identifier for cloud kms key"""

    def __init__(self,
        *,
        kms_key_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["kms_key_name",b"kms_key_name"]) -> None: ...
global___EncryptionInfo = EncryptionInfo
