"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CreateConnectionRequest(google.protobuf.message.Message):
    """The request for [ConnectionService.CreateConnection][google.cloud.bigquery.connection.v1beta1.ConnectionService.CreateConnection]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    CONNECTION_ID_FIELD_NUMBER: builtins.int
    CONNECTION_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Parent resource name.
    Must be in the format `projects/{project_id}/locations/{location_id}`
    """

    connection_id: typing.Text = ...
    """Optional. Connection id that should be assigned to the created connection."""

    @property
    def connection(self) -> global___Connection:
        """Required. Connection to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        connection_id : typing.Text = ...,
        connection : typing.Optional[global___Connection] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["connection",b"connection"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connection",b"connection","connection_id",b"connection_id","parent",b"parent"]) -> None: ...
global___CreateConnectionRequest = CreateConnectionRequest

class GetConnectionRequest(google.protobuf.message.Message):
    """The request for [ConnectionService.GetConnection][google.cloud.bigquery.connection.v1beta1.ConnectionService.GetConnection]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the requested connection, for example:
    `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetConnectionRequest = GetConnectionRequest

class ListConnectionsRequest(google.protobuf.message.Message):
    """The request for [ConnectionService.ListConnections][google.cloud.bigquery.connection.v1beta1.ConnectionService.ListConnections]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Parent resource name.
    Must be in the form: `projects/{project_id}/locations/{location_id}`
    """

    @property
    def max_results(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """Required. Maximum number of results per page."""
        pass
    page_token: typing.Text = ...
    """Page token."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        max_results : typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["max_results",b"max_results"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_results",b"max_results","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListConnectionsRequest = ListConnectionsRequest

class ListConnectionsResponse(google.protobuf.message.Message):
    """The response for [ConnectionService.ListConnections][google.cloud.bigquery.connection.v1beta1.ConnectionService.ListConnections]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    CONNECTIONS_FIELD_NUMBER: builtins.int
    next_page_token: typing.Text = ...
    """Next page token."""

    @property
    def connections(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Connection]:
        """List of connections."""
        pass
    def __init__(self,
        *,
        next_page_token : typing.Text = ...,
        connections : typing.Optional[typing.Iterable[global___Connection]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["connections",b"connections","next_page_token",b"next_page_token"]) -> None: ...
global___ListConnectionsResponse = ListConnectionsResponse

class UpdateConnectionRequest(google.protobuf.message.Message):
    """The request for [ConnectionService.UpdateConnection][google.cloud.bigquery.connection.v1beta1.ConnectionService.UpdateConnection]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    CONNECTION_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the connection to update, for example:
    `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
    """

    @property
    def connection(self) -> global___Connection:
        """Required. Connection containing the updated fields."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. Update mask for the connection fields to be updated."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        connection : typing.Optional[global___Connection] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["connection",b"connection","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["connection",b"connection","name",b"name","update_mask",b"update_mask"]) -> None: ...
global___UpdateConnectionRequest = UpdateConnectionRequest

class UpdateConnectionCredentialRequest(google.protobuf.message.Message):
    """The request for [ConnectionService.UpdateConnectionCredential][google.cloud.bigquery.connection.v1beta1.ConnectionService.UpdateConnectionCredential]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    CREDENTIAL_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the connection, for example:
    `projects/{project_id}/locations/{location_id}/connections/{connection_id}/credential`
    """

    @property
    def credential(self) -> global___ConnectionCredential:
        """Required. Credential to use with the connection."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        credential : typing.Optional[global___ConnectionCredential] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["credential",b"credential"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["credential",b"credential","name",b"name"]) -> None: ...
global___UpdateConnectionCredentialRequest = UpdateConnectionCredentialRequest

class DeleteConnectionRequest(google.protobuf.message.Message):
    """The request for [ConnectionService.DeleteConnectionRequest][]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the deleted connection, for example:
    `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteConnectionRequest = DeleteConnectionRequest

class Connection(google.protobuf.message.Message):
    """Configuration parameters to establish connection with an external data
    source, except the credential attributes.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    FRIENDLY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CLOUD_SQL_FIELD_NUMBER: builtins.int
    CREATION_TIME_FIELD_NUMBER: builtins.int
    LAST_MODIFIED_TIME_FIELD_NUMBER: builtins.int
    HAS_CREDENTIAL_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the connection in the form of:
    `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
    """

    friendly_name: typing.Text = ...
    """User provided display name for the connection."""

    description: typing.Text = ...
    """User provided description."""

    @property
    def cloud_sql(self) -> global___CloudSqlProperties:
        """Cloud SQL properties."""
        pass
    creation_time: builtins.int = ...
    """Output only. The creation timestamp of the connection."""

    last_modified_time: builtins.int = ...
    """Output only. The last update timestamp of the connection."""

    has_credential: builtins.bool = ...
    """Output only. True, if credential is configured for this connection."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        friendly_name : typing.Text = ...,
        description : typing.Text = ...,
        cloud_sql : typing.Optional[global___CloudSqlProperties] = ...,
        creation_time : builtins.int = ...,
        last_modified_time : builtins.int = ...,
        has_credential : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cloud_sql",b"cloud_sql","properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cloud_sql",b"cloud_sql","creation_time",b"creation_time","description",b"description","friendly_name",b"friendly_name","has_credential",b"has_credential","last_modified_time",b"last_modified_time","name",b"name","properties",b"properties"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["properties",b"properties"]) -> typing.Optional[typing_extensions.Literal["cloud_sql"]]: ...
global___Connection = Connection

class ConnectionCredential(google.protobuf.message.Message):
    """Credential to use with a connection."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLOUD_SQL_FIELD_NUMBER: builtins.int
    @property
    def cloud_sql(self) -> global___CloudSqlCredential:
        """Credential for Cloud SQL database."""
        pass
    def __init__(self,
        *,
        cloud_sql : typing.Optional[global___CloudSqlCredential] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cloud_sql",b"cloud_sql","credential",b"credential"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cloud_sql",b"cloud_sql","credential",b"credential"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["credential",b"credential"]) -> typing.Optional[typing_extensions.Literal["cloud_sql"]]: ...
global___ConnectionCredential = ConnectionCredential

class CloudSqlProperties(google.protobuf.message.Message):
    """Connection properties specific to the Cloud SQL."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DatabaseType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DatabaseTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DatabaseType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DATABASE_TYPE_UNSPECIFIED: CloudSqlProperties.DatabaseType.ValueType = ...  # 0
        """Unspecified database type."""

        POSTGRES: CloudSqlProperties.DatabaseType.ValueType = ...  # 1
        """Cloud SQL for PostgreSQL."""

        MYSQL: CloudSqlProperties.DatabaseType.ValueType = ...  # 2
        """Cloud SQL for MySQL."""

    class DatabaseType(_DatabaseType, metaclass=_DatabaseTypeEnumTypeWrapper):
        """Supported Cloud SQL database types."""
        pass

    DATABASE_TYPE_UNSPECIFIED: CloudSqlProperties.DatabaseType.ValueType = ...  # 0
    """Unspecified database type."""

    POSTGRES: CloudSqlProperties.DatabaseType.ValueType = ...  # 1
    """Cloud SQL for PostgreSQL."""

    MYSQL: CloudSqlProperties.DatabaseType.ValueType = ...  # 2
    """Cloud SQL for MySQL."""


    INSTANCE_ID_FIELD_NUMBER: builtins.int
    DATABASE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CREDENTIAL_FIELD_NUMBER: builtins.int
    instance_id: typing.Text = ...
    """Cloud SQL instance ID in the form `project:location:instance`."""

    database: typing.Text = ...
    """Database name."""

    type: global___CloudSqlProperties.DatabaseType.ValueType = ...
    """Type of the Cloud SQL database."""

    @property
    def credential(self) -> global___CloudSqlCredential:
        """Input only. Cloud SQL credential."""
        pass
    def __init__(self,
        *,
        instance_id : typing.Text = ...,
        database : typing.Text = ...,
        type : global___CloudSqlProperties.DatabaseType.ValueType = ...,
        credential : typing.Optional[global___CloudSqlCredential] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["credential",b"credential"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["credential",b"credential","database",b"database","instance_id",b"instance_id","type",b"type"]) -> None: ...
global___CloudSqlProperties = CloudSqlProperties

class CloudSqlCredential(google.protobuf.message.Message):
    """Credential info for the Cloud SQL."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    username: typing.Text = ...
    """The username for the credential."""

    password: typing.Text = ...
    """The password for the credential."""

    def __init__(self,
        *,
        username : typing.Text = ...,
        password : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["password",b"password","username",b"username"]) -> None: ...
global___CloudSqlCredential = CloudSqlCredential
