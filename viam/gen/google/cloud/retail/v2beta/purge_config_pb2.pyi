"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class PurgeMetadata(google.protobuf.message.Message):
    """Metadata related to the progress of the Purge operation.
    This will be returned by the google.longrunning.Operation.metadata field.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___PurgeMetadata = PurgeMetadata

class PurgeUserEventsRequest(google.protobuf.message.Message):
    """Request message for PurgeUserEvents method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The resource name of the catalog under which the events are
    created. The format is
    `projects/${projectId}/locations/global/catalogs/${catalogId}`
    """

    filter: typing.Text = ...
    """Required. The filter string to specify the events to be deleted with a
    length limit of 5,000 characters. Empty string filter is not allowed. The
    eligible fields for filtering are:

    * `eventType`: Double quoted
    [UserEvent.event_type][google.cloud.retail.v2beta.UserEvent.event_type]
    string.
    * `eventTime`: in ISO 8601 "zulu" format.
    * `visitorId`: Double quoted string. Specifying this will delete all
      events associated with a visitor.
    * `userId`: Double quoted string. Specifying this will delete all events
      associated with a user.

    Examples:

    * Deleting all events in a time range:
      `eventTime > "2012-04-23T18:25:43.511Z"
      eventTime < "2012-04-23T18:30:43.511Z"`
    * Deleting specific eventType in time range:
      `eventTime > "2012-04-23T18:25:43.511Z" eventType = "detail-page-view"`
    * Deleting all events for a specific visitor:
      `visitorId = "visitor1024"`

    The filtering fields are assumed to have an implicit AND.
    """

    force: builtins.bool = ...
    """Actually perform the purge.
    If `force` is set to false, the method will return the expected purge count
    without deleting any user events.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        force : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","force",b"force","parent",b"parent"]) -> None: ...
global___PurgeUserEventsRequest = PurgeUserEventsRequest

class PurgeUserEventsResponse(google.protobuf.message.Message):
    """Response of the PurgeUserEventsRequest. If the long running operation is
    successfully done, then this message is returned by the
    google.longrunning.Operations.response field.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PURGED_EVENTS_COUNT_FIELD_NUMBER: builtins.int
    purged_events_count: builtins.int = ...
    """The total count of events purged as a result of the operation."""

    def __init__(self,
        *,
        purged_events_count : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["purged_events_count",b"purged_events_count"]) -> None: ...
global___PurgeUserEventsResponse = PurgeUserEventsResponse
