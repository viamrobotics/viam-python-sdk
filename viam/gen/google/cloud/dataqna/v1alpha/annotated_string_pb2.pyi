"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AnnotatedString(google.protobuf.message.Message):
    """Describes string annotation from both semantic and formatting perspectives.
    Example:

    User Query:

      top countries by population in Africa

      0   4         14 17         28 31    37

    Table Data:

    + "country" - dimension
    + "population" - metric
    + "Africa" - value in the "continent" column

    text_formatted = `"top countries by population in Africa"`

    html_formatted =
      `"top <b>countries</b> by <b>population</b> in <i>Africa</i>"`

    ```
    markups = [
      {DIMENSION, 4, 12}, // 'countries'
      {METRIC, 17, 26}, // 'population'
      {FILTER, 31, 36}  // 'Africa'
    ]
    ```

    Note that html formattings for 'DIMENSION' and 'METRIC' are the same, while
    semantic markups are different.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SemanticMarkupType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SemanticMarkupTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SemanticMarkupType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        MARKUP_TYPE_UNSPECIFIED: AnnotatedString.SemanticMarkupType.ValueType = ...  # 0
        """No markup type was specified."""

        METRIC: AnnotatedString.SemanticMarkupType.ValueType = ...  # 1
        """Markup for a substring denoting a metric."""

        DIMENSION: AnnotatedString.SemanticMarkupType.ValueType = ...  # 2
        """Markup for a substring denoting a dimension."""

        FILTER: AnnotatedString.SemanticMarkupType.ValueType = ...  # 3
        """Markup for a substring denoting a filter."""

        UNUSED: AnnotatedString.SemanticMarkupType.ValueType = ...  # 4
        """Markup for an unused substring."""

        BLOCKED: AnnotatedString.SemanticMarkupType.ValueType = ...  # 5
        """Markup for a substring containing blocked phrases."""

        ROW: AnnotatedString.SemanticMarkupType.ValueType = ...  # 6
        """Markup for a substring that contains terms for row."""

    class SemanticMarkupType(_SemanticMarkupType, metaclass=_SemanticMarkupTypeEnumTypeWrapper):
        """Semantic markup types."""
        pass

    MARKUP_TYPE_UNSPECIFIED: AnnotatedString.SemanticMarkupType.ValueType = ...  # 0
    """No markup type was specified."""

    METRIC: AnnotatedString.SemanticMarkupType.ValueType = ...  # 1
    """Markup for a substring denoting a metric."""

    DIMENSION: AnnotatedString.SemanticMarkupType.ValueType = ...  # 2
    """Markup for a substring denoting a dimension."""

    FILTER: AnnotatedString.SemanticMarkupType.ValueType = ...  # 3
    """Markup for a substring denoting a filter."""

    UNUSED: AnnotatedString.SemanticMarkupType.ValueType = ...  # 4
    """Markup for an unused substring."""

    BLOCKED: AnnotatedString.SemanticMarkupType.ValueType = ...  # 5
    """Markup for a substring containing blocked phrases."""

    ROW: AnnotatedString.SemanticMarkupType.ValueType = ...  # 6
    """Markup for a substring that contains terms for row."""


    class SemanticMarkup(google.protobuf.message.Message):
        """Semantic markup denotes a substring (by index and length) with markup
        information.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TYPE_FIELD_NUMBER: builtins.int
        START_CHAR_INDEX_FIELD_NUMBER: builtins.int
        LENGTH_FIELD_NUMBER: builtins.int
        type: global___AnnotatedString.SemanticMarkupType.ValueType = ...
        """The semantic type of the markup substring."""

        start_char_index: builtins.int = ...
        """Unicode character index of the query."""

        length: builtins.int = ...
        """The length (number of unicode characters) of the markup substring."""

        def __init__(self,
            *,
            type : global___AnnotatedString.SemanticMarkupType.ValueType = ...,
            start_char_index : builtins.int = ...,
            length : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["length",b"length","start_char_index",b"start_char_index","type",b"type"]) -> None: ...

    TEXT_FORMATTED_FIELD_NUMBER: builtins.int
    HTML_FORMATTED_FIELD_NUMBER: builtins.int
    MARKUPS_FIELD_NUMBER: builtins.int
    text_formatted: typing.Text = ...
    """Text version of the string."""

    html_formatted: typing.Text = ...
    """HTML version of the string annotation."""

    @property
    def markups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AnnotatedString.SemanticMarkup]:
        """Semantic version of the string annotation."""
        pass
    def __init__(self,
        *,
        text_formatted : typing.Text = ...,
        html_formatted : typing.Text = ...,
        markups : typing.Optional[typing.Iterable[global___AnnotatedString.SemanticMarkup]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["html_formatted",b"html_formatted","markups",b"markups","text_formatted",b"text_formatted"]) -> None: ...
global___AnnotatedString = AnnotatedString
