"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _State:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    STATE_UNSPECIFIED: State.ValueType = ...  # 0
    """No state information available"""

    CREATING: State.ValueType = ...  # 1
    """The resource's create operation is in progress"""

    ACTIVE: State.ValueType = ...  # 2
    """The resource is active"""

    DELETING: State.ValueType = ...  # 3
    """The resource's Delete operation is in progress"""

class State(_State, metaclass=_StateEnumTypeWrapper):
    """The State enum represents the lifecycle of a Network Connectivity Center
    resource.
    """
    pass

STATE_UNSPECIFIED: State.ValueType = ...  # 0
"""No state information available"""

CREATING: State.ValueType = ...  # 1
"""The resource's create operation is in progress"""

ACTIVE: State.ValueType = ...  # 2
"""The resource is active"""

DELETING: State.ValueType = ...  # 3
"""The resource's Delete operation is in progress"""

global___State = State


class Hub(google.protobuf.message.Message):
    """Network Connectivity Center is a hub-and-spoke abstraction for
    network connectivity management in Google Cloud. It reduces
    operational complexity through a simple, centralized connectivity management
    model. Following is the resource message of a hub.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    SPOKES_FIELD_NUMBER: builtins.int
    UNIQUE_ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Immutable. The name of a Hub resource."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when the Hub was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when the Hub was updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User-defined labels."""
        pass
    description: typing.Text = ...
    """Short description of the hub resource."""

    @property
    def spokes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Output only. A list of the URIs of all attached spokes"""
        pass
    unique_id: typing.Text = ...
    """Output only. Google-generated UUID for this resource. This is unique across all Hub
    resources. If a Hub resource is deleted and another with the same name is
    created, it gets a different unique_id.
    """

    state: global___State.ValueType = ...
    """Output only. The current lifecycle state of this Hub."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        description : typing.Text = ...,
        spokes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        unique_id : typing.Text = ...,
        state : global___State.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","labels",b"labels","name",b"name","spokes",b"spokes","state",b"state","unique_id",b"unique_id","update_time",b"update_time"]) -> None: ...
global___Hub = Hub

class Spoke(google.protobuf.message.Message):
    """A Spoke is an  abstraction of a network attachment being attached
    to a Hub. A Spoke can be underlying a VPN tunnel, a
    VLAN (interconnect) attachment, a Router appliance, etc.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    HUB_FIELD_NUMBER: builtins.int
    LINKED_VPN_TUNNELS_FIELD_NUMBER: builtins.int
    LINKED_INTERCONNECT_ATTACHMENTS_FIELD_NUMBER: builtins.int
    LINKED_ROUTER_APPLIANCE_INSTANCES_FIELD_NUMBER: builtins.int
    UNIQUE_ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Immutable. The name of a Spoke resource."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the Spoke was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the Spoke was updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User-defined labels."""
        pass
    description: typing.Text = ...
    """Short description of the spoke resource"""

    hub: typing.Text = ...
    """The resource URL of the hub resource that the spoke is attached to"""

    @property
    def linked_vpn_tunnels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URIs of linked VPN tunnel resources"""
        pass
    @property
    def linked_interconnect_attachments(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URIs of linked interconnect attachment resources"""
        pass
    @property
    def linked_router_appliance_instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterApplianceInstance]:
        """The URIs of linked Router appliance resources"""
        pass
    unique_id: typing.Text = ...
    """Output only. Google-generated UUID for this resource. This is unique across all Spoke
    resources. If a Spoke resource is deleted and another with the same name is
    created, it gets a different unique_id.
    """

    state: global___State.ValueType = ...
    """Output only. The current lifecycle state of this Hub."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        description : typing.Text = ...,
        hub : typing.Text = ...,
        linked_vpn_tunnels : typing.Optional[typing.Iterable[typing.Text]] = ...,
        linked_interconnect_attachments : typing.Optional[typing.Iterable[typing.Text]] = ...,
        linked_router_appliance_instances : typing.Optional[typing.Iterable[global___RouterApplianceInstance]] = ...,
        unique_id : typing.Text = ...,
        state : global___State.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","hub",b"hub","labels",b"labels","linked_interconnect_attachments",b"linked_interconnect_attachments","linked_router_appliance_instances",b"linked_router_appliance_instances","linked_vpn_tunnels",b"linked_vpn_tunnels","name",b"name","state",b"state","unique_id",b"unique_id","update_time",b"update_time"]) -> None: ...
global___Spoke = Spoke

class ListHubsRequest(google.protobuf.message.Message):
    """Request for [HubService.ListHubs][google.cloud.networkconnectivity.v1alpha1.HubService.ListHubs] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource's name."""

    page_size: builtins.int = ...
    """The maximum number of results per page that should be returned."""

    page_token: typing.Text = ...
    """The page token."""

    filter: typing.Text = ...
    """A filter expression that filters the results listed in the response."""

    order_by: typing.Text = ...
    """Sort the results by a certain order."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListHubsRequest = ListHubsRequest

class ListHubsResponse(google.protobuf.message.Message):
    """Response for [HubService.ListHubs][google.cloud.networkconnectivity.v1alpha1.HubService.ListHubs] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HUBS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def hubs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Hub]:
        """Hubs to be returned."""
        pass
    next_page_token: typing.Text = ...
    """The next pagination token in the List response. It should be used as
    page_token for the following request. An empty value means no more result.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        hubs : typing.Optional[typing.Iterable[global___Hub]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hubs",b"hubs","next_page_token",b"next_page_token","unreachable",b"unreachable"]) -> None: ...
global___ListHubsResponse = ListHubsResponse

class GetHubRequest(google.protobuf.message.Message):
    """Request for [HubService.GetHub][google.cloud.networkconnectivity.v1alpha1.HubService.GetHub] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the Hub resource to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetHubRequest = GetHubRequest

class CreateHubRequest(google.protobuf.message.Message):
    """Request for [HubService.CreateHub][google.cloud.networkconnectivity.v1alpha1.HubService.CreateHub] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    HUB_ID_FIELD_NUMBER: builtins.int
    HUB_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource's name of the Hub."""

    hub_id: typing.Text = ...
    """Optional. Unique id for the Hub to create."""

    @property
    def hub(self) -> global___Hub:
        """Required. Initial values for a new Hub."""
        pass
    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and t
    he request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        hub_id : typing.Text = ...,
        hub : typing.Optional[global___Hub] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hub",b"hub"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hub",b"hub","hub_id",b"hub_id","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateHubRequest = CreateHubRequest

class UpdateHubRequest(google.protobuf.message.Message):
    """Request for [HubService.UpdateHub][google.cloud.networkconnectivity.v1alpha1.HubService.UpdateHub] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    HUB_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. Field mask is used to specify the fields to be overwritten in the
        Hub resource by the update.
        The fields specified in the update_mask are relative to the resource, not
        the full request. A field will be overwritten if it is in the mask. If the
        user does not provide a mask then all fields will be overwritten.
        """
        pass
    @property
    def hub(self) -> global___Hub:
        """Required. The state that the Hub should be in after the update."""
        pass
    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and t
    he request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        hub : typing.Optional[global___Hub] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hub",b"hub","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hub",b"hub","request_id",b"request_id","update_mask",b"update_mask"]) -> None: ...
global___UpdateHubRequest = UpdateHubRequest

class DeleteHubRequest(google.protobuf.message.Message):
    """The request for [HubService.DeleteHub][google.cloud.networkconnectivity.v1alpha1.HubService.DeleteHub]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the Hub to delete."""

    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes after the first request.

    For example, consider a situation where you make an initial request and t
    he request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteHubRequest = DeleteHubRequest

class ListSpokesRequest(google.protobuf.message.Message):
    """The request for [HubService.ListSpokes][google.cloud.networkconnectivity.v1alpha1.HubService.ListSpokes]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent's resource name."""

    page_size: builtins.int = ...
    """The maximum number of results per page that should be returned."""

    page_token: typing.Text = ...
    """The page token."""

    filter: typing.Text = ...
    """A filter expression that filters the results listed in the response."""

    order_by: typing.Text = ...
    """Sort the results by a certain order."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListSpokesRequest = ListSpokesRequest

class ListSpokesResponse(google.protobuf.message.Message):
    """The response for [HubService.ListSpokes][google.cloud.networkconnectivity.v1alpha1.HubService.ListSpokes]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SPOKES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def spokes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Spoke]:
        """Spokes to be returned."""
        pass
    next_page_token: typing.Text = ...
    """The next pagination token in the List response. It should be used as
    page_token for the following request. An empty value means no more result.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        spokes : typing.Optional[typing.Iterable[global___Spoke]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","spokes",b"spokes","unreachable",b"unreachable"]) -> None: ...
global___ListSpokesResponse = ListSpokesResponse

class GetSpokeRequest(google.protobuf.message.Message):
    """The request for [HubService.GetSpoke][google.cloud.networkconnectivity.v1alpha1.HubService.GetSpoke]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of Spoke resource."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetSpokeRequest = GetSpokeRequest

class CreateSpokeRequest(google.protobuf.message.Message):
    """The request for [HubService.CreateSpoke][google.cloud.networkconnectivity.v1alpha1.HubService.CreateSpoke]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    SPOKE_ID_FIELD_NUMBER: builtins.int
    SPOKE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent's resource name of the Spoke."""

    spoke_id: typing.Text = ...
    """Optional. Unique id for the Spoke to create."""

    @property
    def spoke(self) -> global___Spoke:
        """Required. Initial values for a new Hub."""
        pass
    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and t
    he request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        spoke_id : typing.Text = ...,
        spoke : typing.Optional[global___Spoke] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["spoke",b"spoke"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","request_id",b"request_id","spoke",b"spoke","spoke_id",b"spoke_id"]) -> None: ...
global___CreateSpokeRequest = CreateSpokeRequest

class UpdateSpokeRequest(google.protobuf.message.Message):
    """Request for [HubService.UpdateSpoke][google.cloud.networkconnectivity.v1alpha1.HubService.UpdateSpoke] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    SPOKE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. Field mask is used to specify the fields to be overwritten in the
        Spoke resource by the update.
        The fields specified in the update_mask are relative to the resource, not
        the full request. A field will be overwritten if it is in the mask. If the
        user does not provide a mask then all fields will be overwritten.
        """
        pass
    @property
    def spoke(self) -> global___Spoke:
        """Required. The state that the Spoke should be in after the update."""
        pass
    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and t
    he request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        spoke : typing.Optional[global___Spoke] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["spoke",b"spoke","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_id",b"request_id","spoke",b"spoke","update_mask",b"update_mask"]) -> None: ...
global___UpdateSpokeRequest = UpdateSpokeRequest

class DeleteSpokeRequest(google.protobuf.message.Message):
    """The request for [HubService.DeleteSpoke][google.cloud.networkconnectivity.v1alpha1.HubService.DeleteSpoke]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the Spoke to delete."""

    request_id: typing.Text = ...
    """Optional. An optional request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes after the first request.

    For example, consider a situation where you make an initial request and t
    he request times out. If you make the request again with the same request
    ID, the server can check if original operation with the same request ID
    was received, and if so, will ignore the second request. This prevents
    clients from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteSpokeRequest = DeleteSpokeRequest

class RouterApplianceInstance(google.protobuf.message.Message):
    """RouterAppliance represents a Router appliance which is specified by a VM URI
    and a NIC address.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VIRTUAL_MACHINE_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_FIELD_NUMBER: builtins.int
    virtual_machine: typing.Text = ...
    """The URI of the virtual machine resource"""

    ip_address: typing.Text = ...
    """The IP address of the network interface to use for peering."""

    network_interface: typing.Text = ...
    def __init__(self,
        *,
        virtual_machine : typing.Text = ...,
        ip_address : typing.Text = ...,
        network_interface : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ip_address",b"ip_address","network_interface",b"network_interface","virtual_machine",b"virtual_machine"]) -> None: ...
global___RouterApplianceInstance = RouterApplianceInstance
