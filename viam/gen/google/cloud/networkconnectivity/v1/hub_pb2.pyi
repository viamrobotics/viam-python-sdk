"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _State:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    STATE_UNSPECIFIED: State.ValueType = ...  # 0
    """No state information available"""

    CREATING: State.ValueType = ...  # 1
    """The resource's create operation is in progress"""

    ACTIVE: State.ValueType = ...  # 2
    """The resource is active"""

    DELETING: State.ValueType = ...  # 3
    """The resource's Delete operation is in progress"""

class State(_State, metaclass=_StateEnumTypeWrapper):
    """The State enum represents the lifecycle stage of a Network Connectivity
    Center resource.
    """
    pass

STATE_UNSPECIFIED: State.ValueType = ...  # 0
"""No state information available"""

CREATING: State.ValueType = ...  # 1
"""The resource's create operation is in progress"""

ACTIVE: State.ValueType = ...  # 2
"""The resource is active"""

DELETING: State.ValueType = ...  # 3
"""The resource's Delete operation is in progress"""

global___State = State


class Hub(google.protobuf.message.Message):
    """A hub is a collection of spokes. A single hub can contain spokes from
    multiple regions. However, all of a hub's spokes must be associated with
    resources that reside in the same VPC network.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    UNIQUE_ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    ROUTING_VPCS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Immutable. The name of the hub. Hub names must be unique. They use the
    following form:
        `projects/{project_number}/locations/global/hubs/{hub_id}`
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the hub was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the hub was last updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional labels in key:value format. For more information about labels, see
        [Requirements for
        labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
        """
        pass
    description: typing.Text = ...
    """An optional description of the hub."""

    unique_id: typing.Text = ...
    """Output only. The Google-generated UUID for the hub. This value is unique across all hub
    resources. If a hub is deleted and another with the same name is created,
    the new hub is assigned a different unique_id.
    """

    state: global___State.ValueType = ...
    """Output only. The current lifecycle state of this hub."""

    @property
    def routing_vpcs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RoutingVPC]:
        """The VPC network associated with this hub's spokes. All of the VPN tunnels,
        VLAN attachments, and router appliance instances referenced by this hub's
        spokes must belong to this VPC network.

        This field is read-only. Network Connectivity Center automatically
        populates it based on the set of spokes attached to the hub.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        description : typing.Text = ...,
        unique_id : typing.Text = ...,
        state : global___State.ValueType = ...,
        routing_vpcs : typing.Optional[typing.Iterable[global___RoutingVPC]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","labels",b"labels","name",b"name","routing_vpcs",b"routing_vpcs","state",b"state","unique_id",b"unique_id","update_time",b"update_time"]) -> None: ...
global___Hub = Hub

class RoutingVPC(google.protobuf.message.Message):
    """RoutingVPC contains information about the VPC network that is associated with
    a hub's spokes.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URI_FIELD_NUMBER: builtins.int
    uri: typing.Text = ...
    """The URI of the VPC network."""

    def __init__(self,
        *,
        uri : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...
global___RoutingVPC = RoutingVPC

class Spoke(google.protobuf.message.Message):
    """A spoke represents a connection between your Google Cloud network resources
    and a non-Google-Cloud network.

    When you create a spoke, you associate it with a hub. You must also identify
    a value for exactly one of the following fields:

    * linked_vpn_tunnels
    * linked_interconnect_attachments
    * linked_router_appliance_instances
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    HUB_FIELD_NUMBER: builtins.int
    LINKED_VPN_TUNNELS_FIELD_NUMBER: builtins.int
    LINKED_INTERCONNECT_ATTACHMENTS_FIELD_NUMBER: builtins.int
    LINKED_ROUTER_APPLIANCE_INSTANCES_FIELD_NUMBER: builtins.int
    UNIQUE_ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Immutable. The name of the spoke. Spoke names must be unique. They use the
    following form:
        `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the spoke was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the spoke was last updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional labels in key:value format. For more information about labels, see
        [Requirements for
        labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
        """
        pass
    description: typing.Text = ...
    """An optional description of the spoke."""

    hub: typing.Text = ...
    """Immutable. The name of the hub that this spoke is attached to."""

    @property
    def linked_vpn_tunnels(self) -> global___LinkedVpnTunnels:
        """VPN tunnels that are associated with the spoke."""
        pass
    @property
    def linked_interconnect_attachments(self) -> global___LinkedInterconnectAttachments:
        """VLAN attachments that are associated with the spoke."""
        pass
    @property
    def linked_router_appliance_instances(self) -> global___LinkedRouterApplianceInstances:
        """Router appliance instances that are associated with the spoke."""
        pass
    unique_id: typing.Text = ...
    """Output only. The Google-generated UUID for the spoke. This value is unique across all
    spoke resources. If a spoke is deleted and another with the same name is
    created, the new spoke is assigned a different unique_id.
    """

    state: global___State.ValueType = ...
    """Output only. The current lifecycle state of this spoke."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        description : typing.Text = ...,
        hub : typing.Text = ...,
        linked_vpn_tunnels : typing.Optional[global___LinkedVpnTunnels] = ...,
        linked_interconnect_attachments : typing.Optional[global___LinkedInterconnectAttachments] = ...,
        linked_router_appliance_instances : typing.Optional[global___LinkedRouterApplianceInstances] = ...,
        unique_id : typing.Text = ...,
        state : global___State.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","linked_interconnect_attachments",b"linked_interconnect_attachments","linked_router_appliance_instances",b"linked_router_appliance_instances","linked_vpn_tunnels",b"linked_vpn_tunnels","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","hub",b"hub","labels",b"labels","linked_interconnect_attachments",b"linked_interconnect_attachments","linked_router_appliance_instances",b"linked_router_appliance_instances","linked_vpn_tunnels",b"linked_vpn_tunnels","name",b"name","state",b"state","unique_id",b"unique_id","update_time",b"update_time"]) -> None: ...
global___Spoke = Spoke

class ListHubsRequest(google.protobuf.message.Message):
    """Request for [HubService.ListHubs][google.cloud.networkconnectivity.v1.HubService.ListHubs] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource's name."""

    page_size: builtins.int = ...
    """The maximum number of results per page that should be returned."""

    page_token: typing.Text = ...
    """The page token."""

    filter: typing.Text = ...
    """An expression that filters the results listed in the response."""

    order_by: typing.Text = ...
    """Sort the results by a certain order."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListHubsRequest = ListHubsRequest

class ListHubsResponse(google.protobuf.message.Message):
    """Response for [HubService.ListHubs][google.cloud.networkconnectivity.v1.HubService.ListHubs] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HUBS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def hubs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Hub]:
        """The requested hubs."""
        pass
    next_page_token: typing.Text = ...
    """The next pagination token in the List response. It should be used as
    page_token for the following request. An empty value means no more result.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        hubs : typing.Optional[typing.Iterable[global___Hub]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hubs",b"hubs","next_page_token",b"next_page_token","unreachable",b"unreachable"]) -> None: ...
global___ListHubsResponse = ListHubsResponse

class GetHubRequest(google.protobuf.message.Message):
    """Request for [HubService.GetHub][google.cloud.networkconnectivity.v1.HubService.GetHub] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the hub resource to get."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetHubRequest = GetHubRequest

class CreateHubRequest(google.protobuf.message.Message):
    """Request for [HubService.CreateHub][google.cloud.networkconnectivity.v1.HubService.CreateHub] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    HUB_ID_FIELD_NUMBER: builtins.int
    HUB_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource."""

    hub_id: typing.Text = ...
    """Required. A unique identifier for the hub."""

    @property
    def hub(self) -> global___Hub:
        """Required. The initial values for a new hub."""
        pass
    request_id: typing.Text = ...
    """Optional. A unique request ID (optional). If you specify this ID, you can use it
    in cases when you need to retry your request. When you need to retry, this
    ID lets the server know that it can ignore the request if it has already
    been completed. The server guarantees that for at least 60 minutes after
    the first request.

    For example, consider a situation where you make an initial request and
    the request times out. If you make the request again with the same request
    ID, the server can check to see whether the original operation
    was received. If it was, the server ignores the second request. This
    behavior prevents clients from mistakenly creating duplicate commitments.

    The request ID must be a valid UUID, with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        hub_id : typing.Text = ...,
        hub : typing.Optional[global___Hub] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hub",b"hub"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hub",b"hub","hub_id",b"hub_id","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateHubRequest = CreateHubRequest

class UpdateHubRequest(google.protobuf.message.Message):
    """Request for [HubService.UpdateHub][google.cloud.networkconnectivity.v1.HubService.UpdateHub] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    HUB_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. In the case of an update to an existing hub, field mask is used to specify
        the fields to be overwritten. The fields specified in the update_mask are
        relative to the resource, not the full request. A field is overwritten if
        it is in the mask. If the user does not provide a mask, then all fields are
        overwritten.
        """
        pass
    @property
    def hub(self) -> global___Hub:
        """Required. The state that the hub should be in after the update."""
        pass
    request_id: typing.Text = ...
    """Optional. A unique request ID (optional). If you specify this ID, you can use it
    in cases when you need to retry your request. When you need to retry, this
    ID lets the server know that it can ignore the request if it has already
    been completed. The server guarantees that for at least 60 minutes after
    the first request.

    For example, consider a situation where you make an initial request and
    the request times out. If you make the request again with the same request
    ID, the server can check to see whether the original operation
    was received. If it was, the server ignores the second request. This
    behavior prevents clients from mistakenly creating duplicate commitments.

    The request ID must be a valid UUID, with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        hub : typing.Optional[global___Hub] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hub",b"hub","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["hub",b"hub","request_id",b"request_id","update_mask",b"update_mask"]) -> None: ...
global___UpdateHubRequest = UpdateHubRequest

class DeleteHubRequest(google.protobuf.message.Message):
    """The request for [HubService.DeleteHub][google.cloud.networkconnectivity.v1.HubService.DeleteHub]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the hub to delete."""

    request_id: typing.Text = ...
    """Optional. A unique request ID (optional). If you specify this ID, you can use it
    in cases when you need to retry your request. When you need to retry, this
    ID lets the server know that it can ignore the request if it has already
    been completed. The server guarantees that for at least 60 minutes after
    the first request.

    For example, consider a situation where you make an initial request and
    the request times out. If you make the request again with the same request
    ID, the server can check to see whether the original operation
    was received. If it was, the server ignores the second request. This
    behavior prevents clients from mistakenly creating duplicate commitments.

    The request ID must be a valid UUID, with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteHubRequest = DeleteHubRequest

class ListSpokesRequest(google.protobuf.message.Message):
    """The request for [HubService.ListSpokes][google.cloud.networkconnectivity.v1.HubService.ListSpokes]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource."""

    page_size: builtins.int = ...
    """The maximum number of results per page that should be returned."""

    page_token: typing.Text = ...
    """The page token."""

    filter: typing.Text = ...
    """An expression that filters the results listed in the response."""

    order_by: typing.Text = ...
    """Sort the results by a certain order."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListSpokesRequest = ListSpokesRequest

class ListSpokesResponse(google.protobuf.message.Message):
    """The response for [HubService.ListSpokes][google.cloud.networkconnectivity.v1.HubService.ListSpokes]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SPOKES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def spokes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Spoke]:
        """The requested spokes."""
        pass
    next_page_token: typing.Text = ...
    """The next pagination token in the List response. It should be used as
    page_token for the following request. An empty value means no more result.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        spokes : typing.Optional[typing.Iterable[global___Spoke]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","spokes",b"spokes","unreachable",b"unreachable"]) -> None: ...
global___ListSpokesResponse = ListSpokesResponse

class GetSpokeRequest(google.protobuf.message.Message):
    """The request for [HubService.GetSpoke][google.cloud.networkconnectivity.v1.HubService.GetSpoke]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the spoke resource."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetSpokeRequest = GetSpokeRequest

class CreateSpokeRequest(google.protobuf.message.Message):
    """The request for [HubService.CreateSpoke][google.cloud.networkconnectivity.v1.HubService.CreateSpoke]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    SPOKE_ID_FIELD_NUMBER: builtins.int
    SPOKE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource."""

    spoke_id: typing.Text = ...
    """Required. Unique id for the spoke to create."""

    @property
    def spoke(self) -> global___Spoke:
        """Required. The initial values for a new spoke."""
        pass
    request_id: typing.Text = ...
    """Optional. A unique request ID (optional). If you specify this ID, you can use it
    in cases when you need to retry your request. When you need to retry, this
    ID lets the server know that it can ignore the request if it has already
    been completed. The server guarantees that for at least 60 minutes after
    the first request.

    For example, consider a situation where you make an initial request and
    the request times out. If you make the request again with the same request
    ID, the server can check to see whether the original operation
    was received. If it was, the server ignores the second request. This
    behavior prevents clients from mistakenly creating duplicate commitments.

    The request ID must be a valid UUID, with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        spoke_id : typing.Text = ...,
        spoke : typing.Optional[global___Spoke] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["spoke",b"spoke"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","request_id",b"request_id","spoke",b"spoke","spoke_id",b"spoke_id"]) -> None: ...
global___CreateSpokeRequest = CreateSpokeRequest

class UpdateSpokeRequest(google.protobuf.message.Message):
    """Request for [HubService.UpdateSpoke][google.cloud.networkconnectivity.v1.HubService.UpdateSpoke] method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    SPOKE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. In the case of an update to an existing spoke, field mask is used to
        specify the fields to be overwritten. The fields specified in the
        update_mask are relative to the resource, not the full request. A field is
        overwritten if it is in the mask. If the user does not provide a mask, then
        all fields are overwritten.
        """
        pass
    @property
    def spoke(self) -> global___Spoke:
        """Required. The state that the spoke should be in after the update."""
        pass
    request_id: typing.Text = ...
    """Optional. A unique request ID (optional). If you specify this ID, you can use it
    in cases when you need to retry your request. When you need to retry, this
    ID lets the server know that it can ignore the request if it has already
    been completed. The server guarantees that for at least 60 minutes after
    the first request.

    For example, consider a situation where you make an initial request and
    the request times out. If you make the request again with the same request
    ID, the server can check to see whether the original operation
    was received. If it was, the server ignores the second request. This
    behavior prevents clients from mistakenly creating duplicate commitments.

    The request ID must be a valid UUID, with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        spoke : typing.Optional[global___Spoke] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["spoke",b"spoke","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_id",b"request_id","spoke",b"spoke","update_mask",b"update_mask"]) -> None: ...
global___UpdateSpokeRequest = UpdateSpokeRequest

class DeleteSpokeRequest(google.protobuf.message.Message):
    """The request for [HubService.DeleteSpoke][google.cloud.networkconnectivity.v1.HubService.DeleteSpoke]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the spoke to delete."""

    request_id: typing.Text = ...
    """Optional. A unique request ID (optional). If you specify this ID, you can use it
    in cases when you need to retry your request. When you need to retry, this
    ID lets the server know that it can ignore the request if it has already
    been completed. The server guarantees that for at least 60 minutes after
    the first request.

    For example, consider a situation where you make an initial request and
    the request times out. If you make the request again with the same request
    ID, the server can check to see whether the original operation
    was received. If it was, the server ignores the second request. This
    behavior prevents clients from mistakenly creating duplicate commitments.

    The request ID must be a valid UUID, with the exception that zero UUID is
    not supported (00000000-0000-0000-0000-000000000000).
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteSpokeRequest = DeleteSpokeRequest

class LinkedVpnTunnels(google.protobuf.message.Message):
    """A collection of Cloud VPN tunnel resources. These resources should be
    redundant HA VPN tunnels that all advertise the same prefixes to Google
    Cloud. Alternatively, in a passive/active configuration, all tunnels
    should be capable of advertising the same prefixes.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URIS_FIELD_NUMBER: builtins.int
    SITE_TO_SITE_DATA_TRANSFER_FIELD_NUMBER: builtins.int
    @property
    def uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URIs of linked VPN tunnel resources."""
        pass
    site_to_site_data_transfer: builtins.bool = ...
    """A value that controls whether site-to-site data transfer is enabled for
    these resources. This field is set to false by default, but you must set it
    to true. Note that data transfer is available only in supported locations.
    """

    def __init__(self,
        *,
        uris : typing.Optional[typing.Iterable[typing.Text]] = ...,
        site_to_site_data_transfer : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["site_to_site_data_transfer",b"site_to_site_data_transfer","uris",b"uris"]) -> None: ...
global___LinkedVpnTunnels = LinkedVpnTunnels

class LinkedInterconnectAttachments(google.protobuf.message.Message):
    """A collection of VLAN attachment resources. These resources should
    be redundant attachments that all advertise the same prefixes to Google
    Cloud. Alternatively, in active/passive configurations, all attachments
    should be capable of advertising the same prefixes.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URIS_FIELD_NUMBER: builtins.int
    SITE_TO_SITE_DATA_TRANSFER_FIELD_NUMBER: builtins.int
    @property
    def uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URIs of linked interconnect attachment resources"""
        pass
    site_to_site_data_transfer: builtins.bool = ...
    """A value that controls whether site-to-site data transfer is enabled for
    these resources. This field is set to false by default, but you must set it
    to true. Note that data transfer is available only in supported locations.
    """

    def __init__(self,
        *,
        uris : typing.Optional[typing.Iterable[typing.Text]] = ...,
        site_to_site_data_transfer : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["site_to_site_data_transfer",b"site_to_site_data_transfer","uris",b"uris"]) -> None: ...
global___LinkedInterconnectAttachments = LinkedInterconnectAttachments

class LinkedRouterApplianceInstances(google.protobuf.message.Message):
    """A collection of router appliance instances. If you have multiple router
    appliance instances connected to the same site, they should all be attached
    to the same spoke.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    SITE_TO_SITE_DATA_TRANSFER_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterApplianceInstance]:
        """The list of router appliance instances."""
        pass
    site_to_site_data_transfer: builtins.bool = ...
    """A value that controls whether site-to-site data transfer is enabled for
    these resources. This field is set to false by default, but you must set it
    to true. Note that data transfer is available only in supported locations.
    """

    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[global___RouterApplianceInstance]] = ...,
        site_to_site_data_transfer : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances","site_to_site_data_transfer",b"site_to_site_data_transfer"]) -> None: ...
global___LinkedRouterApplianceInstances = LinkedRouterApplianceInstances

class RouterApplianceInstance(google.protobuf.message.Message):
    """A router appliance instance is a Compute Engine virtual machine (VM) instance
    that acts as a BGP speaker. A router appliance instance is specified by the
    URI of the VM and the internal IP address of one of the VM's network
    interfaces.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VIRTUAL_MACHINE_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    virtual_machine: typing.Text = ...
    """The URI of the VM."""

    ip_address: typing.Text = ...
    """The IP address on the VM to use for peering."""

    def __init__(self,
        *,
        virtual_machine : typing.Text = ...,
        ip_address : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ip_address",b"ip_address","virtual_machine",b"virtual_machine"]) -> None: ...
global___RouterApplianceInstance = RouterApplianceInstance
