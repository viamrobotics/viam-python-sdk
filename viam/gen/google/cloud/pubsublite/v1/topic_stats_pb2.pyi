"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.pubsublite.v1.common_pb2
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ComputeMessageStatsRequest(google.protobuf.message.Message):
    """Compute statistics about a range of messages in a given topic and partition."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOPIC_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    START_CURSOR_FIELD_NUMBER: builtins.int
    END_CURSOR_FIELD_NUMBER: builtins.int
    topic: typing.Text = ...
    """Required. The topic for which we should compute message stats."""

    partition: builtins.int = ...
    """Required. The partition for which we should compute message stats."""

    @property
    def start_cursor(self) -> google.cloud.pubsublite.v1.common_pb2.Cursor:
        """The inclusive start of the range."""
        pass
    @property
    def end_cursor(self) -> google.cloud.pubsublite.v1.common_pb2.Cursor:
        """The exclusive end of the range. The range is empty if end_cursor <=
        start_cursor. Specifying a start_cursor before the first message and an
        end_cursor after the last message will retrieve all messages.
        """
        pass
    def __init__(self,
        *,
        topic : typing.Text = ...,
        partition : builtins.int = ...,
        start_cursor : typing.Optional[google.cloud.pubsublite.v1.common_pb2.Cursor] = ...,
        end_cursor : typing.Optional[google.cloud.pubsublite.v1.common_pb2.Cursor] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_cursor",b"end_cursor","start_cursor",b"start_cursor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_cursor",b"end_cursor","partition",b"partition","start_cursor",b"start_cursor","topic",b"topic"]) -> None: ...
global___ComputeMessageStatsRequest = ComputeMessageStatsRequest

class ComputeMessageStatsResponse(google.protobuf.message.Message):
    """Response containing stats for messages in the requested topic and partition."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MESSAGE_COUNT_FIELD_NUMBER: builtins.int
    MESSAGE_BYTES_FIELD_NUMBER: builtins.int
    MINIMUM_PUBLISH_TIME_FIELD_NUMBER: builtins.int
    MINIMUM_EVENT_TIME_FIELD_NUMBER: builtins.int
    message_count: builtins.int = ...
    """The count of messages."""

    message_bytes: builtins.int = ...
    """The number of quota bytes accounted to these messages."""

    @property
    def minimum_publish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The minimum publish timestamp across these messages. Note that publish
        timestamps within a partition are not guaranteed to be non-decreasing. The
        timestamp will be unset if there are no messages.
        """
        pass
    @property
    def minimum_event_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The minimum event timestamp across these messages. For the purposes of this
        computation, if a message does not have an event time, we use the publish
        time. The timestamp will be unset if there are no messages.
        """
        pass
    def __init__(self,
        *,
        message_count : builtins.int = ...,
        message_bytes : builtins.int = ...,
        minimum_publish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        minimum_event_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["minimum_event_time",b"minimum_event_time","minimum_publish_time",b"minimum_publish_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message_bytes",b"message_bytes","message_count",b"message_count","minimum_event_time",b"minimum_event_time","minimum_publish_time",b"minimum_publish_time"]) -> None: ...
global___ComputeMessageStatsResponse = ComputeMessageStatsResponse

class ComputeHeadCursorRequest(google.protobuf.message.Message):
    """Compute the current head cursor for a partition."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOPIC_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    topic: typing.Text = ...
    """Required. The topic for which we should compute the head cursor."""

    partition: builtins.int = ...
    """Required. The partition for which we should compute the head cursor."""

    def __init__(self,
        *,
        topic : typing.Text = ...,
        partition : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["partition",b"partition","topic",b"topic"]) -> None: ...
global___ComputeHeadCursorRequest = ComputeHeadCursorRequest

class ComputeHeadCursorResponse(google.protobuf.message.Message):
    """Response containing the head cursor for the requested topic and partition."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEAD_CURSOR_FIELD_NUMBER: builtins.int
    @property
    def head_cursor(self) -> google.cloud.pubsublite.v1.common_pb2.Cursor:
        """The head cursor."""
        pass
    def __init__(self,
        *,
        head_cursor : typing.Optional[google.cloud.pubsublite.v1.common_pb2.Cursor] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["head_cursor",b"head_cursor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["head_cursor",b"head_cursor"]) -> None: ...
global___ComputeHeadCursorResponse = ComputeHeadCursorResponse

class ComputeTimeCursorRequest(google.protobuf.message.Message):
    """Compute the corresponding cursor for a publish or event time in a topic
    partition.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOPIC_FIELD_NUMBER: builtins.int
    PARTITION_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    topic: typing.Text = ...
    """Required. The topic for which we should compute the cursor."""

    partition: builtins.int = ...
    """Required. The partition for which we should compute the cursor."""

    @property
    def target(self) -> google.cloud.pubsublite.v1.common_pb2.TimeTarget:
        """Required. The target publish or event time. Specifying a future time will return an
        unset cursor.
        """
        pass
    def __init__(self,
        *,
        topic : typing.Text = ...,
        partition : builtins.int = ...,
        target : typing.Optional[google.cloud.pubsublite.v1.common_pb2.TimeTarget] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["partition",b"partition","target",b"target","topic",b"topic"]) -> None: ...
global___ComputeTimeCursorRequest = ComputeTimeCursorRequest

class ComputeTimeCursorResponse(google.protobuf.message.Message):
    """Response containing the cursor corresponding to a publish or event time in a
    topic partition.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CURSOR_FIELD_NUMBER: builtins.int
    @property
    def cursor(self) -> google.cloud.pubsublite.v1.common_pb2.Cursor:
        """If present, the cursor references the first message with time greater than
        or equal to the specified target time. If such a message cannot be found,
        the cursor will be unset (i.e. `cursor` is not present).
        """
        pass
    def __init__(self,
        *,
        cursor : typing.Optional[google.cloud.pubsublite.v1.common_pb2.Cursor] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cursor",b"cursor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cursor",b"cursor"]) -> None: ...
global___ComputeTimeCursorResponse = ComputeTimeCursorResponse
