"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AttributeValues(google.protobuf.message.Message):
    """The values associated with a key of an attribute."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]:
        """The list of values associated with a key."""
        pass
    def __init__(self,
        *,
        values : typing.Optional[typing.Iterable[builtins.bytes]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["values",b"values"]) -> None: ...
global___AttributeValues = AttributeValues

class PubSubMessage(google.protobuf.message.Message):
    """A message that is published by publishers and delivered to subscribers."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___AttributeValues: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___AttributeValues] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    KEY_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    EVENT_TIME_FIELD_NUMBER: builtins.int
    key: builtins.bytes = ...
    """The key used for routing messages to partitions or for compaction (e.g.,
    keep the last N messages per key). If the key is empty, the message is
    routed to an arbitrary partition.
    """

    data: builtins.bytes = ...
    """The payload of the message."""

    @property
    def attributes(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___AttributeValues]:
        """Optional attributes that can be used for message metadata/headers."""
        pass
    @property
    def event_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """An optional, user-specified event time."""
        pass
    def __init__(self,
        *,
        key : builtins.bytes = ...,
        data : builtins.bytes = ...,
        attributes : typing.Optional[typing.Mapping[typing.Text, global___AttributeValues]] = ...,
        event_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event_time",b"event_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attributes",b"attributes","data",b"data","event_time",b"event_time","key",b"key"]) -> None: ...
global___PubSubMessage = PubSubMessage

class Cursor(google.protobuf.message.Message):
    """A cursor that describes the position of a message within a topic partition."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OFFSET_FIELD_NUMBER: builtins.int
    offset: builtins.int = ...
    """The offset of a message within a topic partition. Must be greater than or
    equal 0.
    """

    def __init__(self,
        *,
        offset : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["offset",b"offset"]) -> None: ...
global___Cursor = Cursor

class SequencedMessage(google.protobuf.message.Message):
    """A message that has been stored and sequenced by the Pub/Sub Lite system."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CURSOR_FIELD_NUMBER: builtins.int
    PUBLISH_TIME_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    SIZE_BYTES_FIELD_NUMBER: builtins.int
    @property
    def cursor(self) -> global___Cursor:
        """The position of a message within the partition where it is stored."""
        pass
    @property
    def publish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the message was received by the server when it was first
        published.
        """
        pass
    @property
    def message(self) -> global___PubSubMessage:
        """The user message."""
        pass
    size_bytes: builtins.int = ...
    """The size in bytes of this message for flow control and quota purposes."""

    def __init__(self,
        *,
        cursor : typing.Optional[global___Cursor] = ...,
        publish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        message : typing.Optional[global___PubSubMessage] = ...,
        size_bytes : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cursor",b"cursor","message",b"message","publish_time",b"publish_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cursor",b"cursor","message",b"message","publish_time",b"publish_time","size_bytes",b"size_bytes"]) -> None: ...
global___SequencedMessage = SequencedMessage

class Reservation(google.protobuf.message.Message):
    """Metadata about a reservation resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    THROUGHPUT_CAPACITY_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the reservation.
    Structured like:
    projects/{project_number}/locations/{location}/reservations/{reservation_id}
    """

    throughput_capacity: builtins.int = ...
    """The reserved throughput capacity. Every unit of throughput capacity is
    equivalent to 1 MiB/s of published messages or 2 MiB/s of subscribed
    messages.

    Any topics which are declared as using capacity from a Reservation will
    consume resources from this reservation instead of being charged
    individually.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        throughput_capacity : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","throughput_capacity",b"throughput_capacity"]) -> None: ...
global___Reservation = Reservation

class Topic(google.protobuf.message.Message):
    """Metadata about a topic resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PartitionConfig(google.protobuf.message.Message):
        """The settings for a topic's partitions."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Capacity(google.protobuf.message.Message):
            """The throughput capacity configuration for each partition."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            PUBLISH_MIB_PER_SEC_FIELD_NUMBER: builtins.int
            SUBSCRIBE_MIB_PER_SEC_FIELD_NUMBER: builtins.int
            publish_mib_per_sec: builtins.int = ...
            """Publish throughput capacity per partition in MiB/s.
            Must be >= 4 and <= 16.
            """

            subscribe_mib_per_sec: builtins.int = ...
            """Subscribe throughput capacity per partition in MiB/s.
            Must be >= 4 and <= 32.
            """

            def __init__(self,
                *,
                publish_mib_per_sec : builtins.int = ...,
                subscribe_mib_per_sec : builtins.int = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["publish_mib_per_sec",b"publish_mib_per_sec","subscribe_mib_per_sec",b"subscribe_mib_per_sec"]) -> None: ...

        COUNT_FIELD_NUMBER: builtins.int
        SCALE_FIELD_NUMBER: builtins.int
        CAPACITY_FIELD_NUMBER: builtins.int
        count: builtins.int = ...
        """The number of partitions in the topic. Must be at least 1.

        Once a topic has been created the number of partitions can be increased
        but not decreased. Message ordering is not guaranteed across a topic
        resize. For more information see
        https://cloud.google.com/pubsub/lite/docs/topics#scaling_capacity
        """

        scale: builtins.int = ...
        """DEPRECATED: Use capacity instead which can express a superset of
        configurations.

        Every partition in the topic is allocated throughput equivalent to
        `scale` times the standard partition throughput (4 MiB/s). This is also
        reflected in the cost of this topic; a topic with `scale` of 2 and
        count of 10 is charged for 20 partitions. This value must be in the
        range [1,4].
        """

        @property
        def capacity(self) -> global___Topic.PartitionConfig.Capacity:
            """The capacity configuration."""
            pass
        def __init__(self,
            *,
            count : builtins.int = ...,
            scale : builtins.int = ...,
            capacity : typing.Optional[global___Topic.PartitionConfig.Capacity] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["capacity",b"capacity","dimension",b"dimension","scale",b"scale"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["capacity",b"capacity","count",b"count","dimension",b"dimension","scale",b"scale"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["dimension",b"dimension"]) -> typing.Optional[typing_extensions.Literal["scale","capacity"]]: ...

    class RetentionConfig(google.protobuf.message.Message):
        """The settings for a topic's message retention."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PER_PARTITION_BYTES_FIELD_NUMBER: builtins.int
        PERIOD_FIELD_NUMBER: builtins.int
        per_partition_bytes: builtins.int = ...
        """The provisioned storage, in bytes, per partition. If the number of bytes
        stored in any of the topic's partitions grows beyond this value, older
        messages will be dropped to make room for newer ones, regardless of the
        value of `period`.
        """

        @property
        def period(self) -> google.protobuf.duration_pb2.Duration:
            """How long a published message is retained. If unset, messages will be
            retained as long as the bytes retained for each partition is below
            `per_partition_bytes`.
            """
            pass
        def __init__(self,
            *,
            per_partition_bytes : builtins.int = ...,
            period : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["period",b"period"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["per_partition_bytes",b"per_partition_bytes","period",b"period"]) -> None: ...

    class ReservationConfig(google.protobuf.message.Message):
        """The settings for this topic's Reservation usage."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        THROUGHPUT_RESERVATION_FIELD_NUMBER: builtins.int
        throughput_reservation: typing.Text = ...
        """The Reservation to use for this topic's throughput capacity.
        Structured like:
        projects/{project_number}/locations/{location}/reservations/{reservation_id}
        """

        def __init__(self,
            *,
            throughput_reservation : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["throughput_reservation",b"throughput_reservation"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    PARTITION_CONFIG_FIELD_NUMBER: builtins.int
    RETENTION_CONFIG_FIELD_NUMBER: builtins.int
    RESERVATION_CONFIG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the topic.
    Structured like:
    projects/{project_number}/locations/{location}/topics/{topic_id}
    """

    @property
    def partition_config(self) -> global___Topic.PartitionConfig:
        """The settings for this topic's partitions."""
        pass
    @property
    def retention_config(self) -> global___Topic.RetentionConfig:
        """The settings for this topic's message retention."""
        pass
    @property
    def reservation_config(self) -> global___Topic.ReservationConfig:
        """The settings for this topic's Reservation usage."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        partition_config : typing.Optional[global___Topic.PartitionConfig] = ...,
        retention_config : typing.Optional[global___Topic.RetentionConfig] = ...,
        reservation_config : typing.Optional[global___Topic.ReservationConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["partition_config",b"partition_config","reservation_config",b"reservation_config","retention_config",b"retention_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","partition_config",b"partition_config","reservation_config",b"reservation_config","retention_config",b"retention_config"]) -> None: ...
global___Topic = Topic

class Subscription(google.protobuf.message.Message):
    """Metadata about a subscription resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class DeliveryConfig(google.protobuf.message.Message):
        """The settings for a subscription's message delivery."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _DeliveryRequirement:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _DeliveryRequirementEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DeliveryRequirement.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            DELIVERY_REQUIREMENT_UNSPECIFIED: Subscription.DeliveryConfig.DeliveryRequirement.ValueType = ...  # 0
            """Default value. This value is unused."""

            DELIVER_IMMEDIATELY: Subscription.DeliveryConfig.DeliveryRequirement.ValueType = ...  # 1
            """The server does not wait for a published message to be successfully
            written to storage before delivering it to subscribers.
            """

            DELIVER_AFTER_STORED: Subscription.DeliveryConfig.DeliveryRequirement.ValueType = ...  # 2
            """The server will not deliver a published message to subscribers until
            the message has been successfully written to storage. This will result
            in higher end-to-end latency, but consistent delivery.
            """

        class DeliveryRequirement(_DeliveryRequirement, metaclass=_DeliveryRequirementEnumTypeWrapper):
            """When this subscription should send messages to subscribers relative to
            messages persistence in storage. For details, see [Creating Lite
            subscriptions](https://cloud.google.com/pubsub/lite/docs/subscriptions#creating_lite_subscriptions).
            """
            pass

        DELIVERY_REQUIREMENT_UNSPECIFIED: Subscription.DeliveryConfig.DeliveryRequirement.ValueType = ...  # 0
        """Default value. This value is unused."""

        DELIVER_IMMEDIATELY: Subscription.DeliveryConfig.DeliveryRequirement.ValueType = ...  # 1
        """The server does not wait for a published message to be successfully
        written to storage before delivering it to subscribers.
        """

        DELIVER_AFTER_STORED: Subscription.DeliveryConfig.DeliveryRequirement.ValueType = ...  # 2
        """The server will not deliver a published message to subscribers until
        the message has been successfully written to storage. This will result
        in higher end-to-end latency, but consistent delivery.
        """


        DELIVERY_REQUIREMENT_FIELD_NUMBER: builtins.int
        delivery_requirement: global___Subscription.DeliveryConfig.DeliveryRequirement.ValueType = ...
        """The DeliveryRequirement for this subscription."""

        def __init__(self,
            *,
            delivery_requirement : global___Subscription.DeliveryConfig.DeliveryRequirement.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["delivery_requirement",b"delivery_requirement"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    TOPIC_FIELD_NUMBER: builtins.int
    DELIVERY_CONFIG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the subscription.
    Structured like:
    projects/{project_number}/locations/{location}/subscriptions/{subscription_id}
    """

    topic: typing.Text = ...
    """The name of the topic this subscription is attached to.
    Structured like:
    projects/{project_number}/locations/{location}/topics/{topic_id}
    """

    @property
    def delivery_config(self) -> global___Subscription.DeliveryConfig:
        """The settings for this subscription's message delivery."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        topic : typing.Text = ...,
        delivery_config : typing.Optional[global___Subscription.DeliveryConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["delivery_config",b"delivery_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["delivery_config",b"delivery_config","name",b"name","topic",b"topic"]) -> None: ...
global___Subscription = Subscription

class TimeTarget(google.protobuf.message.Message):
    """A target publish or event time. Can be used for seeking to or retrieving the
    corresponding cursor.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PUBLISH_TIME_FIELD_NUMBER: builtins.int
    EVENT_TIME_FIELD_NUMBER: builtins.int
    @property
    def publish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Request the cursor of the first message with publish time greater than or
        equal to `publish_time`. All messages thereafter are guaranteed to have
        publish times >= `publish_time`.
        """
        pass
    @property
    def event_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Request the cursor of the first message with event time greater than or
        equal to `event_time`. If messages are missing an event time, the publish
        time is used as a fallback. As event times are user supplied, subsequent
        messages may have event times less than `event_time` and should be
        filtered by the client, if necessary.
        """
        pass
    def __init__(self,
        *,
        publish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        event_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event_time",b"event_time","publish_time",b"publish_time","time",b"time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event_time",b"event_time","publish_time",b"publish_time","time",b"time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["time",b"time"]) -> typing.Optional[typing_extensions.Literal["publish_time","event_time"]]: ...
global___TimeTarget = TimeTarget
