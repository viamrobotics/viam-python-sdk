"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.orgpolicy.v1.orgpolicy_pb2
import google.cloud.osconfig.v1.inventory_pb2
import google.iam.v1.policy_pb2
import google.identity.accesscontextmanager.v1.access_level_pb2
import google.identity.accesscontextmanager.v1.access_policy_pb2
import google.identity.accesscontextmanager.v1.service_perimeter_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import google.rpc.code_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TemporalAsset(google.protobuf.message.Message):
    """An asset in Google Cloud and its temporal metadata, including the time window
    when it was observed and its status during that window.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PriorAssetState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PriorAssetStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PriorAssetState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PRIOR_ASSET_STATE_UNSPECIFIED: TemporalAsset.PriorAssetState.ValueType = ...  # 0
        """prior_asset is not applicable for the current asset."""

        PRESENT: TemporalAsset.PriorAssetState.ValueType = ...  # 1
        """prior_asset is populated correctly."""

        INVALID: TemporalAsset.PriorAssetState.ValueType = ...  # 2
        """Failed to set prior_asset."""

        DOES_NOT_EXIST: TemporalAsset.PriorAssetState.ValueType = ...  # 3
        """Current asset is the first known state."""

        DELETED: TemporalAsset.PriorAssetState.ValueType = ...  # 4
        """prior_asset is a deletion."""

    class PriorAssetState(_PriorAssetState, metaclass=_PriorAssetStateEnumTypeWrapper):
        """State of prior asset."""
        pass

    PRIOR_ASSET_STATE_UNSPECIFIED: TemporalAsset.PriorAssetState.ValueType = ...  # 0
    """prior_asset is not applicable for the current asset."""

    PRESENT: TemporalAsset.PriorAssetState.ValueType = ...  # 1
    """prior_asset is populated correctly."""

    INVALID: TemporalAsset.PriorAssetState.ValueType = ...  # 2
    """Failed to set prior_asset."""

    DOES_NOT_EXIST: TemporalAsset.PriorAssetState.ValueType = ...  # 3
    """Current asset is the first known state."""

    DELETED: TemporalAsset.PriorAssetState.ValueType = ...  # 4
    """prior_asset is a deletion."""


    WINDOW_FIELD_NUMBER: builtins.int
    DELETED_FIELD_NUMBER: builtins.int
    ASSET_FIELD_NUMBER: builtins.int
    PRIOR_ASSET_STATE_FIELD_NUMBER: builtins.int
    PRIOR_ASSET_FIELD_NUMBER: builtins.int
    @property
    def window(self) -> global___TimeWindow:
        """The time window when the asset data and state was observed."""
        pass
    deleted: builtins.bool = ...
    """Whether the asset has been deleted or not."""

    @property
    def asset(self) -> global___Asset:
        """An asset in Google Cloud."""
        pass
    prior_asset_state: global___TemporalAsset.PriorAssetState.ValueType = ...
    """State of prior_asset."""

    @property
    def prior_asset(self) -> global___Asset:
        """Prior copy of the asset. Populated if prior_asset_state is PRESENT.
        Currently this is only set for responses in Real-Time Feed.
        """
        pass
    def __init__(self,
        *,
        window : typing.Optional[global___TimeWindow] = ...,
        deleted : builtins.bool = ...,
        asset : typing.Optional[global___Asset] = ...,
        prior_asset_state : global___TemporalAsset.PriorAssetState.ValueType = ...,
        prior_asset : typing.Optional[global___Asset] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset",b"asset","prior_asset",b"prior_asset","window",b"window"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset",b"asset","deleted",b"deleted","prior_asset",b"prior_asset","prior_asset_state",b"prior_asset_state","window",b"window"]) -> None: ...
global___TemporalAsset = TemporalAsset

class TimeWindow(google.protobuf.message.Message):
    """A time window specified by its `start_time` and `end_time`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Start time of the time window (exclusive)."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """End time of the time window (inclusive). If not specified, the current
        timestamp is used instead.
        """
        pass
    def __init__(self,
        *,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> None: ...
global___TimeWindow = TimeWindow

class Asset(google.protobuf.message.Message):
    """An asset in Google Cloud. An asset can be any resource in the Google Cloud
    [resource
    hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy),
    a resource outside the Google Cloud resource hierarchy (such as Google
    Kubernetes Engine clusters and objects), or a policy (e.g. Cloud IAM policy),
    or a relationship (e.g. an INSTANCE_TO_INSTANCEGROUP relationship).
    See [Supported asset
    types](https://cloud.google.com/asset-inventory/docs/supported-asset-types)
    for more information.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    IAM_POLICY_FIELD_NUMBER: builtins.int
    ORG_POLICY_FIELD_NUMBER: builtins.int
    ACCESS_POLICY_FIELD_NUMBER: builtins.int
    ACCESS_LEVEL_FIELD_NUMBER: builtins.int
    SERVICE_PERIMETER_FIELD_NUMBER: builtins.int
    OS_INVENTORY_FIELD_NUMBER: builtins.int
    RELATED_ASSETS_FIELD_NUMBER: builtins.int
    ANCESTORS_FIELD_NUMBER: builtins.int
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The last update timestamp of an asset. update_time is updated when
        create/update/delete operation is performed.
        """
        pass
    name: typing.Text = ...
    """The full name of the asset. Example:
    `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`

    See [Resource
    names](https://cloud.google.com/apis/design/resource_names#full_resource_name)
    for more information.
    """

    asset_type: typing.Text = ...
    """The type of the asset. Example: `compute.googleapis.com/Disk`

    See [Supported asset
    types](https://cloud.google.com/asset-inventory/docs/supported-asset-types)
    for more information.
    """

    @property
    def resource(self) -> global___Resource:
        """A representation of the resource."""
        pass
    @property
    def iam_policy(self) -> google.iam.v1.policy_pb2.Policy:
        """A representation of the Cloud IAM policy set on a Google Cloud resource.
        There can be a maximum of one Cloud IAM policy set on any given resource.
        In addition, Cloud IAM policies inherit their granted access scope from any
        policies set on parent resources in the resource hierarchy. Therefore, the
        effectively policy is the union of both the policy set on this resource
        and each policy set on all of the resource's ancestry resource levels in
        the hierarchy. See
        [this topic](https://cloud.google.com/iam/docs/policies#inheritance) for
        more information.
        """
        pass
    @property
    def org_policy(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.orgpolicy.v1.orgpolicy_pb2.Policy]:
        """A representation of an [organization
        policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy).
        There can be more than one organization policy with different constraints
        set on a given resource.
        """
        pass
    @property
    def access_policy(self) -> google.identity.accesscontextmanager.v1.access_policy_pb2.AccessPolicy:
        """Please also refer to the [access policy user
        guide](https://cloud.google.com/access-context-manager/docs/overview#access-policies).
        """
        pass
    @property
    def access_level(self) -> google.identity.accesscontextmanager.v1.access_level_pb2.AccessLevel:
        """Please also refer to the [access level user
        guide](https://cloud.google.com/access-context-manager/docs/overview#access-levels).
        """
        pass
    @property
    def service_perimeter(self) -> google.identity.accesscontextmanager.v1.service_perimeter_pb2.ServicePerimeter:
        """Please also refer to the [service perimeter user
        guide](https://cloud.google.com/vpc-service-controls/docs/overview).
        """
        pass
    @property
    def os_inventory(self) -> google.cloud.osconfig.v1.inventory_pb2.Inventory:
        """A representation of runtime OS Inventory information. See [this
        topic](https://cloud.google.com/compute/docs/instances/os-inventory-management)
        for more information.
        """
        pass
    @property
    def related_assets(self) -> global___RelatedAssets:
        """The related assets of the asset of one relationship type.
        One asset only represents one type of relationship.
        """
        pass
    @property
    def ancestors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The ancestry path of an asset in Google Cloud [resource
        hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy),
        represented as a list of relative resource names. An ancestry path starts
        with the closest ancestor in the hierarchy and ends at root. If the asset
        is a project, folder, or organization, the ancestry path starts from the
        asset itself.

        Example: `["projects/123456789", "folders/5432", "organizations/1234"]`
        """
        pass
    def __init__(self,
        *,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        name : typing.Text = ...,
        asset_type : typing.Text = ...,
        resource : typing.Optional[global___Resource] = ...,
        iam_policy : typing.Optional[google.iam.v1.policy_pb2.Policy] = ...,
        org_policy : typing.Optional[typing.Iterable[google.cloud.orgpolicy.v1.orgpolicy_pb2.Policy]] = ...,
        access_policy : typing.Optional[google.identity.accesscontextmanager.v1.access_policy_pb2.AccessPolicy] = ...,
        access_level : typing.Optional[google.identity.accesscontextmanager.v1.access_level_pb2.AccessLevel] = ...,
        service_perimeter : typing.Optional[google.identity.accesscontextmanager.v1.service_perimeter_pb2.ServicePerimeter] = ...,
        os_inventory : typing.Optional[google.cloud.osconfig.v1.inventory_pb2.Inventory] = ...,
        related_assets : typing.Optional[global___RelatedAssets] = ...,
        ancestors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["access_context_policy",b"access_context_policy","access_level",b"access_level","access_policy",b"access_policy","iam_policy",b"iam_policy","os_inventory",b"os_inventory","related_assets",b"related_assets","resource",b"resource","service_perimeter",b"service_perimeter","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_context_policy",b"access_context_policy","access_level",b"access_level","access_policy",b"access_policy","ancestors",b"ancestors","asset_type",b"asset_type","iam_policy",b"iam_policy","name",b"name","org_policy",b"org_policy","os_inventory",b"os_inventory","related_assets",b"related_assets","resource",b"resource","service_perimeter",b"service_perimeter","update_time",b"update_time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["access_context_policy",b"access_context_policy"]) -> typing.Optional[typing_extensions.Literal["access_policy","access_level","service_perimeter"]]: ...
global___Asset = Asset

class Resource(google.protobuf.message.Message):
    """A representation of a Google Cloud resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VERSION_FIELD_NUMBER: builtins.int
    DISCOVERY_DOCUMENT_URI_FIELD_NUMBER: builtins.int
    DISCOVERY_NAME_FIELD_NUMBER: builtins.int
    RESOURCE_URL_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    version: typing.Text = ...
    """The API version. Example: `v1`"""

    discovery_document_uri: typing.Text = ...
    """The URL of the discovery document containing the resource's JSON schema.
    Example:
    `https://www.googleapis.com/discovery/v1/apis/compute/v1/rest`

    This value is unspecified for resources that do not have an API based on a
    discovery document, such as Cloud Bigtable.
    """

    discovery_name: typing.Text = ...
    """The JSON schema name listed in the discovery document. Example:
    `Project`

    This value is unspecified for resources that do not have an API based on a
    discovery document, such as Cloud Bigtable.
    """

    resource_url: typing.Text = ...
    """The REST URL for accessing the resource. An HTTP `GET` request using this
    URL returns the resource itself. Example:
    `https://cloudresourcemanager.googleapis.com/v1/projects/my-project-123`

    This value is unspecified for resources without a REST API.
    """

    parent: typing.Text = ...
    """The full name of the immediate parent of this resource. See
    [Resource
    Names](https://cloud.google.com/apis/design/resource_names#full_resource_name)
    for more information.

    For Google Cloud assets, this value is the parent resource defined in the
    [Cloud IAM policy
    hierarchy](https://cloud.google.com/iam/docs/overview#policy_hierarchy).
    Example:
    `//cloudresourcemanager.googleapis.com/projects/my_project_123`

    For third-party assets, this field may be set differently.
    """

    @property
    def data(self) -> google.protobuf.struct_pb2.Struct:
        """The content of the resource, in which some sensitive fields are removed
        and may not be present.
        """
        pass
    location: typing.Text = ...
    """The location of the resource in Google Cloud, such as its zone and region.
    For more information, see https://cloud.google.com/about/locations/.
    """

    def __init__(self,
        *,
        version : typing.Text = ...,
        discovery_document_uri : typing.Text = ...,
        discovery_name : typing.Text = ...,
        resource_url : typing.Text = ...,
        parent : typing.Text = ...,
        data : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        location : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data",b"data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data","discovery_document_uri",b"discovery_document_uri","discovery_name",b"discovery_name","location",b"location","parent",b"parent","resource_url",b"resource_url","version",b"version"]) -> None: ...
global___Resource = Resource

class RelatedAssets(google.protobuf.message.Message):
    """The detailed related assets with the `relationship_type`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RELATIONSHIP_ATTRIBUTES_FIELD_NUMBER: builtins.int
    ASSETS_FIELD_NUMBER: builtins.int
    @property
    def relationship_attributes(self) -> global___RelationshipAttributes:
        """The detailed relationship attributes."""
        pass
    @property
    def assets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RelatedAsset]:
        """The peer resources of the relationship."""
        pass
    def __init__(self,
        *,
        relationship_attributes : typing.Optional[global___RelationshipAttributes] = ...,
        assets : typing.Optional[typing.Iterable[global___RelatedAsset]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["relationship_attributes",b"relationship_attributes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["assets",b"assets","relationship_attributes",b"relationship_attributes"]) -> None: ...
global___RelatedAssets = RelatedAssets

class RelationshipAttributes(google.protobuf.message.Message):
    """The relationship attributes which include  `type`, `source_resource_type`,
    `target_resource_type` and `action`.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    SOURCE_RESOURCE_TYPE_FIELD_NUMBER: builtins.int
    TARGET_RESOURCE_TYPE_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    type: typing.Text = ...
    """The unique identifier of the relationship type. Example:
    `INSTANCE_TO_INSTANCEGROUP`
    """

    source_resource_type: typing.Text = ...
    """The source asset type. Example: `compute.googleapis.com/Instance`"""

    target_resource_type: typing.Text = ...
    """The target asset type. Example: `compute.googleapis.com/Disk`"""

    action: typing.Text = ...
    """The detail of the relationship, e.g. `contains`, `attaches`"""

    def __init__(self,
        *,
        type : typing.Text = ...,
        source_resource_type : typing.Text = ...,
        target_resource_type : typing.Text = ...,
        action : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","source_resource_type",b"source_resource_type","target_resource_type",b"target_resource_type","type",b"type"]) -> None: ...
global___RelationshipAttributes = RelationshipAttributes

class RelatedAsset(google.protobuf.message.Message):
    """An asset identify in Google Cloud which contains its name, type and
    ancestors. An asset can be any resource in the Google Cloud [resource
    hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy),
    a resource outside the Google Cloud resource hierarchy (such as Google
    Kubernetes Engine clusters and objects), or a policy (e.g. Cloud IAM policy).
    See [Supported asset
    types](https://cloud.google.com/asset-inventory/docs/supported-asset-types)
    for more information.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ASSET_FIELD_NUMBER: builtins.int
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    ANCESTORS_FIELD_NUMBER: builtins.int
    asset: typing.Text = ...
    """The full name of the asset. Example:
    `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`

    See [Resource
    names](https://cloud.google.com/apis/design/resource_names#full_resource_name)
    for more information.
    """

    asset_type: typing.Text = ...
    """The type of the asset. Example: `compute.googleapis.com/Disk`

    See [Supported asset
    types](https://cloud.google.com/asset-inventory/docs/supported-asset-types)
    for more information.
    """

    @property
    def ancestors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The ancestors of an asset in Google Cloud [resource
        hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy),
        represented as a list of relative resource names. An ancestry path starts
        with the closest ancestor in the hierarchy and ends at root.

        Example: `["projects/123456789", "folders/5432", "organizations/1234"]`
        """
        pass
    def __init__(self,
        *,
        asset : typing.Text = ...,
        asset_type : typing.Text = ...,
        ancestors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ancestors",b"ancestors","asset",b"asset","asset_type",b"asset_type"]) -> None: ...
global___RelatedAsset = RelatedAsset

class ResourceSearchResult(google.protobuf.message.Message):
    """A result of Resource Search, containing information of a cloud resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class RelationshipsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___RelatedResources: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___RelatedResources] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    FOLDERS_FIELD_NUMBER: builtins.int
    ORGANIZATION_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    NETWORK_TAGS_FIELD_NUMBER: builtins.int
    KMS_KEY_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    ADDITIONAL_ATTRIBUTES_FIELD_NUMBER: builtins.int
    PARENT_FULL_RESOURCE_NAME_FIELD_NUMBER: builtins.int
    VERSIONED_RESOURCES_FIELD_NUMBER: builtins.int
    ATTACHED_RESOURCES_FIELD_NUMBER: builtins.int
    RELATIONSHIPS_FIELD_NUMBER: builtins.int
    PARENT_ASSET_TYPE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The full resource name of this resource. Example:
    `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.
    See [Cloud Asset Inventory Resource Name
    Format](https://cloud.google.com/asset-inventory/docs/resource-name-format)
    for more information.

    To search against the `name`:

    * use a field query. Example: `name:instance1`
    * use a free text query. Example: `instance1`
    """

    asset_type: typing.Text = ...
    """The type of this resource. Example: `compute.googleapis.com/Disk`.

    To search against the `asset_type`:

    * specify the `asset_type` field in your search request.
    """

    project: typing.Text = ...
    """The project that this resource belongs to, in the form of
    projects/{PROJECT_NUMBER}. This field is available when the resource
    belongs to a project.

    To search against `project`:

    * use a field query. Example: `project:12345`
    * use a free text query. Example: `12345`
    * specify the `scope` field as this project in your search request.
    """

    @property
    def folders(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The folder(s) that this resource belongs to, in the form of
        folders/{FOLDER_NUMBER}. This field is available when the resource
        belongs to one or more folders.

        To search against `folders`:

        * use a field query. Example: `folders:(123 OR 456)`
        * use a free text query. Example: `123`
        * specify the `scope` field as this folder in your search request.
        """
        pass
    organization: typing.Text = ...
    """The organization that this resource belongs to, in the form of
    organizations/{ORGANIZATION_NUMBER}. This field is available when the
    resource belongs to an organization.

    To search against `organization`:

    * use a field query. Example: `organization:123`
    * use a free text query. Example: `123`
    * specify the `scope` field as this organization in your search request.
    """

    display_name: typing.Text = ...
    """The display name of this resource. This field is available only when the
    resource's proto contains it.

    To search against the `display_name`:

    * use a field query. Example: `displayName:"My Instance"`
    * use a free text query. Example: `"My Instance"`
    """

    description: typing.Text = ...
    """One or more paragraphs of text description of this resource. Maximum length
    could be up to 1M bytes. This field is available only when the resource's
    proto contains it.

    To search against the `description`:

    * use a field query. Example: `description:"important instance"`
    * use a free text query. Example: `"important instance"`
    """

    location: typing.Text = ...
    """Location can be `global`, regional like `us-east1`, or zonal like
    `us-west1-b`. This field is available only when the resource's proto
    contains it.

    To search against the `location`:

    * use a field query. Example: `location:us-west*`
    * use a free text query. Example: `us-west*`
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels associated with this resource. See [Labelling and grouping GCP
        resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources)
        for more information. This field is available only when the resource's
        proto contains it.

        To search against the `labels`:

        * use a field query:
            - query on any label's key or value. Example: `labels:prod`
            - query by a given label. Example: `labels.env:prod`
            - query by a given label's existence. Example: `labels.env:*`
        * use a free text query. Example: `prod`
        """
        pass
    @property
    def network_tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Network tags associated with this resource. Like labels, network tags are a
        type of annotations used to group GCP resources. See [Labelling GCP
        resources](https://cloud.google.com/blog/products/gcp/labelling-and-grouping-your-google-cloud-platform-resources)
        for more information. This field is available only when the resource's
        proto contains it.

        To search against the `network_tags`:

        * use a field query. Example: `networkTags:internal`
        * use a free text query. Example: `internal`
        """
        pass
    kms_key: typing.Text = ...
    """The Cloud KMS
    [CryptoKey](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys?hl=en)
    name or
    [CryptoKeyVersion](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions?hl=en)
    name. This field is available only when the resource's proto contains it.

    To search against the `kms_key`:

    * use a field query. Example: `kmsKey:key`
    * use a free text query. Example: `key`
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The create timestamp of this resource, at which the resource was created.
        The granularity is in seconds. Timestamp.nanos will always be 0. This field
        is available only when the resource's proto contains it.

        To search against `create_time`:

        * use a field query.
            - value in seconds since unix epoch. Example: `createTime > 1609459200`
            - value in date string. Example: `createTime > 2021-01-01`
            - value in date-time string (must be quoted). Example: `createTime >
            "2021-01-01T00:00:00"`
        """
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The last update timestamp of this resource, at which the resource was last
        modified or deleted. The granularity is in seconds. Timestamp.nanos will
        always be 0. This field is available only when the resource's proto
        contains it.

        To search against `update_time`:

        * use a field query.
            - value in seconds since unix epoch. Example: `updateTime < 1609459200`
            - value in date string. Example: `updateTime < 2021-01-01`
            - value in date-time string (must be quoted). Example: `updateTime <
            "2021-01-01T00:00:00"`
        """
        pass
    state: typing.Text = ...
    """The state of this resource. Different resources types have different state
    definitions that are mapped from various fields of different resource
    types. This field is available only when the resource's proto contains it.

    Example:
    If the resource is an instance provided by Compute Engine,
    its state will include PROVISIONING, STAGING, RUNNING, STOPPING,
    SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. See `status` definition
    in [API
    Reference](https://cloud.google.com/compute/docs/reference/rest/v1/instances).
    If the resource is a project provided by Cloud Resource Manager, its state
    will include LIFECYCLE_STATE_UNSPECIFIED, ACTIVE, DELETE_REQUESTED and
    DELETE_IN_PROGRESS. See `lifecycleState` definition in [API
    Reference](https://cloud.google.com/resource-manager/reference/rest/v1/projects).

    To search against the `state`:

    * use a field query. Example: `state:RUNNING`
    * use a free text query. Example: `RUNNING`
    """

    @property
    def additional_attributes(self) -> google.protobuf.struct_pb2.Struct:
        """The additional searchable attributes of this resource. The attributes may
        vary from one resource type to another. Examples: `projectId` for Project,
        `dnsName` for DNS ManagedZone. This field contains a subset of the resource
        metadata fields that are returned by the List or Get APIs provided by the
        corresponding GCP service (e.g., Compute Engine). see [API references and
        supported searchable
        attributes](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types)
        to see which fields are included.

        You can search values of these fields through free text search. However,
        you should not consume the field programically as the field names and
        values may change as the GCP service updates to a new incompatible API
        version.

        To search against the `additional_attributes`:

        * use a free text query to match the attributes values. Example: to search
          `additional_attributes = { dnsName: "foobar" }`, you can issue a query
          `foobar`.
        """
        pass
    parent_full_resource_name: typing.Text = ...
    """The full resource name of this resource's parent, if it has one.
    To search against the `parent_full_resource_name`:

    * use a field query. Example:
    `parentFullResourceName:"project-name"`
    * use a free text query. Example:
    `project-name`
    """

    @property
    def versioned_resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VersionedResource]:
        """Versioned resource representations of this resource. This is repeated
        because there could be multiple versions of resource representations during
        version migration.

        This `versioned_resources` field is not searchable. Some attributes of the
        resource representations are exposed in `additional_attributes` field, so
        as to allow users to search on them.
        """
        pass
    @property
    def attached_resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttachedResource]:
        """Attached resources of this resource. For example, an OSConfig
        Inventory is an attached resource of a Compute Instance. This field is
        repeated because a resource could have multiple attached resources.

        This `attached_resources` field is not searchable. Some attributes
        of the attached resources are exposed in `additional_attributes` field, so
        as to allow users to search on them.
        """
        pass
    @property
    def relationships(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___RelatedResources]:
        """A map of related resources of this resource, keyed by the
        relationship type. A relationship type is in the format of
        {SourceType}_{ACTION}_{DestType}. Example: `DISK_TO_INSTANCE`,
        `DISK_TO_NETWORK`, `INSTANCE_TO_INSTANCEGROUP`.
        See [supported relationship
        types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#supported_relationship_types).
        """
        pass
    parent_asset_type: typing.Text = ...
    """The type of this resource's immediate parent, if there is one.

    To search against the `parent_asset_type`:

    * use a field query. Example:
    `parentAssetType:"cloudresourcemanager.googleapis.com/Project"`
    * use a free text query. Example:
    `cloudresourcemanager.googleapis.com/Project`
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        asset_type : typing.Text = ...,
        project : typing.Text = ...,
        folders : typing.Optional[typing.Iterable[typing.Text]] = ...,
        organization : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        location : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        network_tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        kms_key : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : typing.Text = ...,
        additional_attributes : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        parent_full_resource_name : typing.Text = ...,
        versioned_resources : typing.Optional[typing.Iterable[global___VersionedResource]] = ...,
        attached_resources : typing.Optional[typing.Iterable[global___AttachedResource]] = ...,
        relationships : typing.Optional[typing.Mapping[typing.Text, global___RelatedResources]] = ...,
        parent_asset_type : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["additional_attributes",b"additional_attributes","create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["additional_attributes",b"additional_attributes","asset_type",b"asset_type","attached_resources",b"attached_resources","create_time",b"create_time","description",b"description","display_name",b"display_name","folders",b"folders","kms_key",b"kms_key","labels",b"labels","location",b"location","name",b"name","network_tags",b"network_tags","organization",b"organization","parent_asset_type",b"parent_asset_type","parent_full_resource_name",b"parent_full_resource_name","project",b"project","relationships",b"relationships","state",b"state","update_time",b"update_time","versioned_resources",b"versioned_resources"]) -> None: ...
global___ResourceSearchResult = ResourceSearchResult

class VersionedResource(google.protobuf.message.Message):
    """Resource representation as defined by the corresponding service providing the
    resource for a given API version.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VERSION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    version: typing.Text = ...
    """API version of the resource.

    Example:
    If the resource is an instance provided by Compute Engine v1 API as defined
    in `https://cloud.google.com/compute/docs/reference/rest/v1/instances`,
    version will be "v1".
    """

    @property
    def resource(self) -> google.protobuf.struct_pb2.Struct:
        """JSON representation of the resource as defined by the corresponding
        service providing this resource.

        Example:
        If the resource is an instance provided by Compute Engine, this field will
        contain the JSON representation of the instance as defined by Compute
        Engine:
        `https://cloud.google.com/compute/docs/reference/rest/v1/instances`.

        You can find the resource definition for each supported resource type in
        this table:
        `https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types`
        """
        pass
    def __init__(self,
        *,
        version : typing.Text = ...,
        resource : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource","version",b"version"]) -> None: ...
global___VersionedResource = VersionedResource

class AttachedResource(google.protobuf.message.Message):
    """Attached resource representation, which is defined by the corresponding
    service provider. It represents an attached resource's payload.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    VERSIONED_RESOURCES_FIELD_NUMBER: builtins.int
    asset_type: typing.Text = ...
    """The type of this attached resource.

    Example: `osconfig.googleapis.com/Inventory`

    You can find the supported attached asset types of each resource in this
    table:
    `https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types`
    """

    @property
    def versioned_resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VersionedResource]:
        """Versioned resource representations of this attached resource. This is
        repeated because there could be multiple versions of the attached resource
        representations during version migration.
        """
        pass
    def __init__(self,
        *,
        asset_type : typing.Text = ...,
        versioned_resources : typing.Optional[typing.Iterable[global___VersionedResource]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_type",b"asset_type","versioned_resources",b"versioned_resources"]) -> None: ...
global___AttachedResource = AttachedResource

class RelatedResources(google.protobuf.message.Message):
    """The related resources of the primary resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RELATED_RESOURCES_FIELD_NUMBER: builtins.int
    @property
    def related_resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RelatedResource]:
        """The detailed related resources of the primary resource."""
        pass
    def __init__(self,
        *,
        related_resources : typing.Optional[typing.Iterable[global___RelatedResource]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["related_resources",b"related_resources"]) -> None: ...
global___RelatedResources = RelatedResources

class RelatedResource(google.protobuf.message.Message):
    """The detailed related resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    FULL_RESOURCE_NAME_FIELD_NUMBER: builtins.int
    asset_type: typing.Text = ...
    """The type of the asset. Example: `compute.googleapis.com/Instance`"""

    full_resource_name: typing.Text = ...
    """The full resource name of the related resource. Example:
    `//compute.googleapis.com/projects/my_proj_123/zones/instance/instance123`
    """

    def __init__(self,
        *,
        asset_type : typing.Text = ...,
        full_resource_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_type",b"asset_type","full_resource_name",b"full_resource_name"]) -> None: ...
global___RelatedResource = RelatedResource

class IamPolicySearchResult(google.protobuf.message.Message):
    """A result of IAM Policy search, containing information of an IAM policy."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Explanation(google.protobuf.message.Message):
        """Explanation about the IAM policy search result."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Permissions(google.protobuf.message.Message):
            """IAM permissions"""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            PERMISSIONS_FIELD_NUMBER: builtins.int
            @property
            def permissions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """A list of permissions. A sample permission string: `compute.disk.get`."""
                pass
            def __init__(self,
                *,
                permissions : typing.Optional[typing.Iterable[typing.Text]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["permissions",b"permissions"]) -> None: ...

        class MatchedPermissionsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text = ...
            @property
            def value(self) -> global___IamPolicySearchResult.Explanation.Permissions: ...
            def __init__(self,
                *,
                key : typing.Text = ...,
                value : typing.Optional[global___IamPolicySearchResult.Explanation.Permissions] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        MATCHED_PERMISSIONS_FIELD_NUMBER: builtins.int
        @property
        def matched_permissions(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___IamPolicySearchResult.Explanation.Permissions]:
            """The map from roles to their included permissions that match the
            permission query (i.e., a query containing `policy.role.permissions:`).
            Example: if query `policy.role.permissions:compute.disk.get`
            matches a policy binding that contains owner role, the
            matched_permissions will be `{"roles/owner": ["compute.disk.get"]}`. The
            roles can also be found in the returned `policy` bindings. Note that the
            map is populated only for requests with permission queries.
            """
            pass
        def __init__(self,
            *,
            matched_permissions : typing.Optional[typing.Mapping[typing.Text, global___IamPolicySearchResult.Explanation.Permissions]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["matched_permissions",b"matched_permissions"]) -> None: ...

    RESOURCE_FIELD_NUMBER: builtins.int
    ASSET_TYPE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    FOLDERS_FIELD_NUMBER: builtins.int
    ORGANIZATION_FIELD_NUMBER: builtins.int
    POLICY_FIELD_NUMBER: builtins.int
    EXPLANATION_FIELD_NUMBER: builtins.int
    resource: typing.Text = ...
    """The full resource name of the resource associated with this IAM policy.
    Example:
    `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.
    See [Cloud Asset Inventory Resource Name
    Format](https://cloud.google.com/asset-inventory/docs/resource-name-format)
    for more information.

    To search against the `resource`:

    * use a field query. Example: `resource:organizations/123`
    """

    asset_type: typing.Text = ...
    """The type of the resource associated with this IAM policy. Example:
    `compute.googleapis.com/Disk`.

    To search against the `asset_type`:

    * specify the `asset_types` field in your search request.
    """

    project: typing.Text = ...
    """The project that the associated GCP resource belongs to, in the form of
    projects/{PROJECT_NUMBER}. If an IAM policy is set on a resource (like VM
    instance, Cloud Storage bucket), the project field will indicate the
    project that contains the resource. If an IAM policy is set on a folder or
    orgnization, this field will be empty.

    To search against the `project`:

    * specify the `scope` field as this project in your search request.
    """

    @property
    def folders(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The folder(s) that the IAM policy belongs to, in the form of
        folders/{FOLDER_NUMBER}. This field is available when the IAM policy
        belongs to one or more folders.

        To search against `folders`:

        * use a field query. Example: `folders:(123 OR 456)`
        * use a free text query. Example: `123`
        * specify the `scope` field as this folder in your search request.
        """
        pass
    organization: typing.Text = ...
    """The organization that the IAM policy belongs to, in the form
    of organizations/{ORGANIZATION_NUMBER}. This field is available when the
    IAM policy belongs to an organization.

    To search against `organization`:

    * use a field query. Example: `organization:123`
    * use a free text query. Example: `123`
    * specify the `scope` field as this organization in your search request.
    """

    @property
    def policy(self) -> google.iam.v1.policy_pb2.Policy:
        """The IAM policy directly set on the given resource. Note that the original
        IAM policy can contain multiple bindings. This only contains the bindings
        that match the given query. For queries that don't contain a constrain on
        policies (e.g., an empty query), this contains all the bindings.

        To search against the `policy` bindings:

        * use a field query:
            - query by the policy contained members. Example:
              `policy:amy@gmail.com`
            - query by the policy contained roles. Example:
              `policy:roles/compute.admin`
            - query by the policy contained roles' included permissions. Example:
              `policy.role.permissions:compute.instances.create`
        """
        pass
    @property
    def explanation(self) -> global___IamPolicySearchResult.Explanation:
        """Explanation about the IAM policy search result. It contains additional
        information to explain why the search result matches the query.
        """
        pass
    def __init__(self,
        *,
        resource : typing.Text = ...,
        asset_type : typing.Text = ...,
        project : typing.Text = ...,
        folders : typing.Optional[typing.Iterable[typing.Text]] = ...,
        organization : typing.Text = ...,
        policy : typing.Optional[google.iam.v1.policy_pb2.Policy] = ...,
        explanation : typing.Optional[global___IamPolicySearchResult.Explanation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["explanation",b"explanation","policy",b"policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_type",b"asset_type","explanation",b"explanation","folders",b"folders","organization",b"organization","policy",b"policy","project",b"project","resource",b"resource"]) -> None: ...
global___IamPolicySearchResult = IamPolicySearchResult

class IamPolicyAnalysisState(google.protobuf.message.Message):
    """Represents the detailed state of an entity under analysis, such as a
    resource, an identity or an access.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODE_FIELD_NUMBER: builtins.int
    CAUSE_FIELD_NUMBER: builtins.int
    code: google.rpc.code_pb2.Code.ValueType = ...
    """The Google standard error code that best describes the state.
    For example:
    - OK means the analysis on this entity has been successfully finished;
    - PERMISSION_DENIED means an access denied error is encountered;
    - DEADLINE_EXCEEDED means the analysis on this entity hasn't been started
    in time;
    """

    cause: typing.Text = ...
    """The human-readable description of the cause of failure."""

    def __init__(self,
        *,
        code : google.rpc.code_pb2.Code.ValueType = ...,
        cause : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cause",b"cause","code",b"code"]) -> None: ...
global___IamPolicyAnalysisState = IamPolicyAnalysisState

class ConditionEvaluation(google.protobuf.message.Message):
    """The Condition evaluation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _EvaluationValue:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EvaluationValueEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EvaluationValue.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        EVALUATION_VALUE_UNSPECIFIED: ConditionEvaluation.EvaluationValue.ValueType = ...  # 0
        """Reserved for future use."""

        TRUE: ConditionEvaluation.EvaluationValue.ValueType = ...  # 1
        """The evaluation result is `true`."""

        FALSE: ConditionEvaluation.EvaluationValue.ValueType = ...  # 2
        """The evaluation result is `false`."""

        CONDITIONAL: ConditionEvaluation.EvaluationValue.ValueType = ...  # 3
        """The evaluation result is `conditional` when the condition expression
        contains variables that are either missing input values or have not been
        supported by Analyzer yet.
        """

    class EvaluationValue(_EvaluationValue, metaclass=_EvaluationValueEnumTypeWrapper):
        """Value of this expression."""
        pass

    EVALUATION_VALUE_UNSPECIFIED: ConditionEvaluation.EvaluationValue.ValueType = ...  # 0
    """Reserved for future use."""

    TRUE: ConditionEvaluation.EvaluationValue.ValueType = ...  # 1
    """The evaluation result is `true`."""

    FALSE: ConditionEvaluation.EvaluationValue.ValueType = ...  # 2
    """The evaluation result is `false`."""

    CONDITIONAL: ConditionEvaluation.EvaluationValue.ValueType = ...  # 3
    """The evaluation result is `conditional` when the condition expression
    contains variables that are either missing input values or have not been
    supported by Analyzer yet.
    """


    EVALUATION_VALUE_FIELD_NUMBER: builtins.int
    evaluation_value: global___ConditionEvaluation.EvaluationValue.ValueType = ...
    """The evaluation result."""

    def __init__(self,
        *,
        evaluation_value : global___ConditionEvaluation.EvaluationValue.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["evaluation_value",b"evaluation_value"]) -> None: ...
global___ConditionEvaluation = ConditionEvaluation

class IamPolicyAnalysisResult(google.protobuf.message.Message):
    """IAM Policy analysis result, consisting of one IAM policy binding and derived
    access control lists.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Resource(google.protobuf.message.Message):
        """A Google Cloud resource under analysis."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FULL_RESOURCE_NAME_FIELD_NUMBER: builtins.int
        ANALYSIS_STATE_FIELD_NUMBER: builtins.int
        full_resource_name: typing.Text = ...
        """The [full resource
        name](https://cloud.google.com/asset-inventory/docs/resource-name-format)
        """

        @property
        def analysis_state(self) -> global___IamPolicyAnalysisState:
            """The analysis state of this resource."""
            pass
        def __init__(self,
            *,
            full_resource_name : typing.Text = ...,
            analysis_state : typing.Optional[global___IamPolicyAnalysisState] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["analysis_state",b"analysis_state"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["analysis_state",b"analysis_state","full_resource_name",b"full_resource_name"]) -> None: ...

    class Access(google.protobuf.message.Message):
        """An IAM role or permission under analysis."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ROLE_FIELD_NUMBER: builtins.int
        PERMISSION_FIELD_NUMBER: builtins.int
        ANALYSIS_STATE_FIELD_NUMBER: builtins.int
        role: typing.Text = ...
        """The role."""

        permission: typing.Text = ...
        """The permission."""

        @property
        def analysis_state(self) -> global___IamPolicyAnalysisState:
            """The analysis state of this access."""
            pass
        def __init__(self,
            *,
            role : typing.Text = ...,
            permission : typing.Text = ...,
            analysis_state : typing.Optional[global___IamPolicyAnalysisState] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["analysis_state",b"analysis_state","oneof_access",b"oneof_access","permission",b"permission","role",b"role"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["analysis_state",b"analysis_state","oneof_access",b"oneof_access","permission",b"permission","role",b"role"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["oneof_access",b"oneof_access"]) -> typing.Optional[typing_extensions.Literal["role","permission"]]: ...

    class Identity(google.protobuf.message.Message):
        """An identity under analysis."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_FIELD_NUMBER: builtins.int
        ANALYSIS_STATE_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """The identity name in any form of members appear in
        [IAM policy
        binding](https://cloud.google.com/iam/reference/rest/v1/Binding), such
        as:
        - user:foo@google.com
        - group:group1@google.com
        - serviceAccount:s1@prj1.iam.gserviceaccount.com
        - projectOwner:some_project_id
        - domain:google.com
        - allUsers
        - etc.
        """

        @property
        def analysis_state(self) -> global___IamPolicyAnalysisState:
            """The analysis state of this identity."""
            pass
        def __init__(self,
            *,
            name : typing.Text = ...,
            analysis_state : typing.Optional[global___IamPolicyAnalysisState] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["analysis_state",b"analysis_state"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["analysis_state",b"analysis_state","name",b"name"]) -> None: ...

    class Edge(google.protobuf.message.Message):
        """A directional edge."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SOURCE_NODE_FIELD_NUMBER: builtins.int
        TARGET_NODE_FIELD_NUMBER: builtins.int
        source_node: typing.Text = ...
        """The source node of the edge. For example, it could be a full resource
        name for a resource node or an email of an identity.
        """

        target_node: typing.Text = ...
        """The target node of the edge. For example, it could be a full resource
        name for a resource node or an email of an identity.
        """

        def __init__(self,
            *,
            source_node : typing.Text = ...,
            target_node : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["source_node",b"source_node","target_node",b"target_node"]) -> None: ...

    class AccessControlList(google.protobuf.message.Message):
        """An access control list, derived from the above IAM policy binding, which
        contains a set of resources and accesses. May include one
        item from each set to compose an access control entry.

        NOTICE that there could be multiple access control lists for one IAM policy
        binding. The access control lists are created based on resource and access
        combinations.

        For example, assume we have the following cases in one IAM policy binding:
        - Permission P1 and P2 apply to resource R1 and R2;
        - Permission P3 applies to resource R2 and R3;

        This will result in the following access control lists:
        - AccessControlList 1: [R1, R2], [P1, P2]
        - AccessControlList 2: [R2, R3], [P3]
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        RESOURCES_FIELD_NUMBER: builtins.int
        ACCESSES_FIELD_NUMBER: builtins.int
        RESOURCE_EDGES_FIELD_NUMBER: builtins.int
        CONDITION_EVALUATION_FIELD_NUMBER: builtins.int
        @property
        def resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IamPolicyAnalysisResult.Resource]:
            """The resources that match one of the following conditions:
            - The resource_selector, if it is specified in request;
            - Otherwise, resources reachable from the policy attached resource.
            """
            pass
        @property
        def accesses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IamPolicyAnalysisResult.Access]:
            """The accesses that match one of the following conditions:
            - The access_selector, if it is specified in request;
            - Otherwise, access specifiers reachable from the policy binding's role.
            """
            pass
        @property
        def resource_edges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IamPolicyAnalysisResult.Edge]:
            """Resource edges of the graph starting from the policy attached
            resource to any descendant resources. The [Edge.source_node][google.cloud.asset.v1.IamPolicyAnalysisResult.Edge.source_node] contains
            the full resource name of a parent resource and [Edge.target_node][google.cloud.asset.v1.IamPolicyAnalysisResult.Edge.target_node]
            contains the full resource name of a child resource. This field is
            present only if the output_resource_edges option is enabled in request.
            """
            pass
        @property
        def condition_evaluation(self) -> global___ConditionEvaluation:
            """Condition evaluation for this AccessControlList, if there is a condition
            defined in the above IAM policy binding.
            """
            pass
        def __init__(self,
            *,
            resources : typing.Optional[typing.Iterable[global___IamPolicyAnalysisResult.Resource]] = ...,
            accesses : typing.Optional[typing.Iterable[global___IamPolicyAnalysisResult.Access]] = ...,
            resource_edges : typing.Optional[typing.Iterable[global___IamPolicyAnalysisResult.Edge]] = ...,
            condition_evaluation : typing.Optional[global___ConditionEvaluation] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["condition_evaluation",b"condition_evaluation"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["accesses",b"accesses","condition_evaluation",b"condition_evaluation","resource_edges",b"resource_edges","resources",b"resources"]) -> None: ...

    class IdentityList(google.protobuf.message.Message):
        """The identities and group edges."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        IDENTITIES_FIELD_NUMBER: builtins.int
        GROUP_EDGES_FIELD_NUMBER: builtins.int
        @property
        def identities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IamPolicyAnalysisResult.Identity]:
            """Only the identities that match one of the following conditions will be
            presented:
            - The identity_selector, if it is specified in request;
            - Otherwise, identities reachable from the policy binding's members.
            """
            pass
        @property
        def group_edges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IamPolicyAnalysisResult.Edge]:
            """Group identity edges of the graph starting from the binding's
            group members to any node of the [identities][google.cloud.asset.v1.IamPolicyAnalysisResult.IdentityList.identities]. The [Edge.source_node][google.cloud.asset.v1.IamPolicyAnalysisResult.Edge.source_node]
            contains a group, such as `group:parent@google.com`. The
            [Edge.target_node][google.cloud.asset.v1.IamPolicyAnalysisResult.Edge.target_node] contains a member of the group,
            such as `group:child@google.com` or `user:foo@google.com`.
            This field is present only if the output_group_edges option is enabled in
            request.
            """
            pass
        def __init__(self,
            *,
            identities : typing.Optional[typing.Iterable[global___IamPolicyAnalysisResult.Identity]] = ...,
            group_edges : typing.Optional[typing.Iterable[global___IamPolicyAnalysisResult.Edge]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["group_edges",b"group_edges","identities",b"identities"]) -> None: ...

    ATTACHED_RESOURCE_FULL_NAME_FIELD_NUMBER: builtins.int
    IAM_BINDING_FIELD_NUMBER: builtins.int
    ACCESS_CONTROL_LISTS_FIELD_NUMBER: builtins.int
    IDENTITY_LIST_FIELD_NUMBER: builtins.int
    FULLY_EXPLORED_FIELD_NUMBER: builtins.int
    attached_resource_full_name: typing.Text = ...
    """The [full resource
    name](https://cloud.google.com/asset-inventory/docs/resource-name-format)
    of the resource to which the [iam_binding][google.cloud.asset.v1.IamPolicyAnalysisResult.iam_binding] policy attaches.
    """

    @property
    def iam_binding(self) -> google.iam.v1.policy_pb2.Binding:
        """The Cloud IAM policy binding under analysis."""
        pass
    @property
    def access_control_lists(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IamPolicyAnalysisResult.AccessControlList]:
        """The access control lists derived from the [iam_binding][google.cloud.asset.v1.IamPolicyAnalysisResult.iam_binding] that match or
        potentially match resource and access selectors specified in the request.
        """
        pass
    @property
    def identity_list(self) -> global___IamPolicyAnalysisResult.IdentityList:
        """The identity list derived from members of the [iam_binding][google.cloud.asset.v1.IamPolicyAnalysisResult.iam_binding] that match or
        potentially match identity selector specified in the request.
        """
        pass
    fully_explored: builtins.bool = ...
    """Represents whether all analyses on the [iam_binding][google.cloud.asset.v1.IamPolicyAnalysisResult.iam_binding] have successfully
    finished.
    """

    def __init__(self,
        *,
        attached_resource_full_name : typing.Text = ...,
        iam_binding : typing.Optional[google.iam.v1.policy_pb2.Binding] = ...,
        access_control_lists : typing.Optional[typing.Iterable[global___IamPolicyAnalysisResult.AccessControlList]] = ...,
        identity_list : typing.Optional[global___IamPolicyAnalysisResult.IdentityList] = ...,
        fully_explored : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["iam_binding",b"iam_binding","identity_list",b"identity_list"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_control_lists",b"access_control_lists","attached_resource_full_name",b"attached_resource_full_name","fully_explored",b"fully_explored","iam_binding",b"iam_binding","identity_list",b"identity_list"]) -> None: ...
global___IamPolicyAnalysisResult = IamPolicyAnalysisResult
