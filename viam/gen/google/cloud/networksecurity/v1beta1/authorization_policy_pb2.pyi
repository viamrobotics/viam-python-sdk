"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AuthorizationPolicy(google.protobuf.message.Message):
    """AuthorizationPolicy is a resource that specifies how a server
    should authorize incoming connections. This resource in itself does
    not change the configuration unless it's attached to a target https
    proxy or endpoint config selector resource.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Action:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Action.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ACTION_UNSPECIFIED: AuthorizationPolicy.Action.ValueType = ...  # 0
        """Default value."""

        ALLOW: AuthorizationPolicy.Action.ValueType = ...  # 1
        """Grant access."""

        DENY: AuthorizationPolicy.Action.ValueType = ...  # 2
        """Deny access.
        Deny rules should be avoided unless they are used to provide a default
        "deny all" fallback.
        """

    class Action(_Action, metaclass=_ActionEnumTypeWrapper):
        """Possible values that define what action to take."""
        pass

    ACTION_UNSPECIFIED: AuthorizationPolicy.Action.ValueType = ...  # 0
    """Default value."""

    ALLOW: AuthorizationPolicy.Action.ValueType = ...  # 1
    """Grant access."""

    DENY: AuthorizationPolicy.Action.ValueType = ...  # 2
    """Deny access.
    Deny rules should be avoided unless they are used to provide a default
    "deny all" fallback.
    """


    class Rule(google.protobuf.message.Message):
        """Specification of rules."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Source(google.protobuf.message.Message):
            """Specification of traffic source attributes."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            PRINCIPALS_FIELD_NUMBER: builtins.int
            IP_BLOCKS_FIELD_NUMBER: builtins.int
            @property
            def principals(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Optional. List of peer identities to match for authorization. At least one
                principal should match. Each peer can be an exact match, or a prefix
                match (example, "namespace/*") or a suffix match (example, //
                */service-account") or a presence match "*". Authorization based on the
                principal name without certificate validation (configured by
                ServerTlsPolicy resource) is considered insecure.
                """
                pass
            @property
            def ip_blocks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Optional. List of CIDR ranges to match based on source IP address. At least one
                IP block should match. Single IP (e.g., "1.2.3.4") and CIDR (e.g.,
                "1.2.3.0/24") are supported. Authorization based on source IP alone
                should be avoided. The IP addresses of any load balancers or proxies
                should be considered untrusted.
                """
                pass
            def __init__(self,
                *,
                principals : typing.Optional[typing.Iterable[typing.Text]] = ...,
                ip_blocks : typing.Optional[typing.Iterable[typing.Text]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["ip_blocks",b"ip_blocks","principals",b"principals"]) -> None: ...

        class Destination(google.protobuf.message.Message):
            """Specification of traffic destination attributes."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class HttpHeaderMatch(google.protobuf.message.Message):
                """Specification of HTTP header match atrributes."""
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                REGEX_MATCH_FIELD_NUMBER: builtins.int
                HEADER_NAME_FIELD_NUMBER: builtins.int
                regex_match: typing.Text = ...
                """Required. The value of the header must match the regular expression
                specified in regexMatch. For regular expression grammar,
                please see: en.cppreference.com/w/cpp/regex/ecmascript
                For matching against a port specified in the HTTP
                request, use a headerMatch with headerName set to Host
                and a regular expression that satisfies the RFC2616 Host
                header's port specifier.
                """

                header_name: typing.Text = ...
                """Required. The name of the HTTP header to match. For matching
                against the HTTP request's authority, use a headerMatch
                with the header name ":authority". For matching a
                request's method, use the headerName ":method".
                """

                def __init__(self,
                    *,
                    regex_match : typing.Text = ...,
                    header_name : typing.Text = ...,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions.Literal["regex_match",b"regex_match","type",b"type"]) -> builtins.bool: ...
                def ClearField(self, field_name: typing_extensions.Literal["header_name",b"header_name","regex_match",b"regex_match","type",b"type"]) -> None: ...
                def WhichOneof(self, oneof_group: typing_extensions.Literal["type",b"type"]) -> typing.Optional[typing_extensions.Literal["regex_match"]]: ...

            HOSTS_FIELD_NUMBER: builtins.int
            PORTS_FIELD_NUMBER: builtins.int
            METHODS_FIELD_NUMBER: builtins.int
            HTTP_HEADER_MATCH_FIELD_NUMBER: builtins.int
            @property
            def hosts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Required. List of host names to match. Matched against the ":authority" header in
                http requests. At least one host should match. Each host can be an
                exact match, or a prefix match (example "mydomain.*") or a suffix
                match (example // *.myorg.com") or a presence(any) match "*".
                """
                pass
            @property
            def ports(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
                """Required. List of destination ports to match. At least one port should match."""
                pass
            @property
            def methods(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
                """Optional. A list of HTTP methods to match. At least one method should
                match. Should not be set for gRPC services.
                """
                pass
            @property
            def http_header_match(self) -> global___AuthorizationPolicy.Rule.Destination.HttpHeaderMatch:
                """Optional. Match against key:value pair in http header. Provides a flexible match
                based on HTTP headers, for potentially advanced use cases. At least one
                header should match. Avoid using header matches to make authorization
                decisions unless there is a strong guarantee that requests arrive
                through a trusted client or proxy.
                """
                pass
            def __init__(self,
                *,
                hosts : typing.Optional[typing.Iterable[typing.Text]] = ...,
                ports : typing.Optional[typing.Iterable[builtins.int]] = ...,
                methods : typing.Optional[typing.Iterable[typing.Text]] = ...,
                http_header_match : typing.Optional[global___AuthorizationPolicy.Rule.Destination.HttpHeaderMatch] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["http_header_match",b"http_header_match"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["hosts",b"hosts","http_header_match",b"http_header_match","methods",b"methods","ports",b"ports"]) -> None: ...

        SOURCES_FIELD_NUMBER: builtins.int
        DESTINATIONS_FIELD_NUMBER: builtins.int
        @property
        def sources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizationPolicy.Rule.Source]:
            """Optional. List of attributes for the traffic source. All of the sources must match.
            A source is a match if both principals and ip_blocks match. If not set,
            the action specified in the 'action' field will be applied without any
            rule checks for the source.
            """
            pass
        @property
        def destinations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizationPolicy.Rule.Destination]:
            """Optional. List of attributes for the traffic destination. All of the destinations
            must match. A destination is a match if a request matches all the
            specified hosts, ports, methods and headers. If not set, the
            action specified in the 'action' field will be applied without any rule
            checks for the destination.
            """
            pass
        def __init__(self,
            *,
            sources : typing.Optional[typing.Iterable[global___AuthorizationPolicy.Rule.Source]] = ...,
            destinations : typing.Optional[typing.Iterable[global___AuthorizationPolicy.Rule.Destination]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["destinations",b"destinations","sources",b"sources"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the AuthorizationPolicy resource. It matches pattern
    `projects/{project}/locations/{location}/authorizationPolicies/<authorization_policy>`.
    """

    description: typing.Text = ...
    """Optional. Free-text description of the resource."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The timestamp when the resource was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The timestamp when the resource was updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional. Set of label tags associated with the AuthorizationPolicy resource."""
        pass
    action: global___AuthorizationPolicy.Action.ValueType = ...
    """Required. The action to take when a rule match is found. Possible values
    are "ALLOW" or "DENY".
    """

    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizationPolicy.Rule]:
        """Optional. List of rules to match. Note that at least one of the rules must match in
        order for the action specified in the 'action' field to be taken. A rule is
        a match if there is a matching source and destination. If left blank, the
        action specified in the `action` field will be applied on every request.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        action : global___AuthorizationPolicy.Action.ValueType = ...,
        rules : typing.Optional[typing.Iterable[global___AuthorizationPolicy.Rule]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","create_time",b"create_time","description",b"description","labels",b"labels","name",b"name","rules",b"rules","update_time",b"update_time"]) -> None: ...
global___AuthorizationPolicy = AuthorizationPolicy

class ListAuthorizationPoliciesRequest(google.protobuf.message.Message):
    """Request used with the ListAuthorizationPolicies method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The project and location from which the AuthorizationPolicies
    should be listed, specified in the format
    `projects/{project}/locations/{location}`.
    """

    page_size: builtins.int = ...
    """Maximum number of AuthorizationPolicies to return per call."""

    page_token: typing.Text = ...
    """The value returned by the last
    `ListAuthorizationPoliciesResponse` Indicates that this is a
    continuation of a prior `ListAuthorizationPolicies` call, and
    that the system should return the next page of data.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListAuthorizationPoliciesRequest = ListAuthorizationPoliciesRequest

class ListAuthorizationPoliciesResponse(google.protobuf.message.Message):
    """Response returned by the ListAuthorizationPolicies method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTHORIZATION_POLICIES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def authorization_policies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuthorizationPolicy]:
        """List of AuthorizationPolicies resources."""
        pass
    next_page_token: typing.Text = ...
    """If there might be more results than those appearing in this response, then
    `next_page_token` is included. To get the next set of results, call this
    method again using the value of `next_page_token` as `page_token`.
    """

    def __init__(self,
        *,
        authorization_policies : typing.Optional[typing.Iterable[global___AuthorizationPolicy]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_policies",b"authorization_policies","next_page_token",b"next_page_token"]) -> None: ...
global___ListAuthorizationPoliciesResponse = ListAuthorizationPoliciesResponse

class GetAuthorizationPolicyRequest(google.protobuf.message.Message):
    """Request used by the GetAuthorizationPolicy method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. A name of the AuthorizationPolicy to get. Must be in the format
    `projects/{project}/locations/{location}/authorizationPolicies/*`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetAuthorizationPolicyRequest = GetAuthorizationPolicyRequest

class CreateAuthorizationPolicyRequest(google.protobuf.message.Message):
    """Request used by the CreateAuthorizationPolicy method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    AUTHORIZATION_POLICY_ID_FIELD_NUMBER: builtins.int
    AUTHORIZATION_POLICY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent resource of the AuthorizationPolicy. Must be in the
    format `projects/{project}/locations/{location}`.
    """

    authorization_policy_id: typing.Text = ...
    """Required. Short name of the AuthorizationPolicy resource to be created.
    This value should be 1-63 characters long, containing only
    letters, numbers, hyphens, and underscores, and should not start
    with a number. E.g. "authz_policy".
    """

    @property
    def authorization_policy(self) -> global___AuthorizationPolicy:
        """Required. AuthorizationPolicy resource to be created."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        authorization_policy_id : typing.Text = ...,
        authorization_policy : typing.Optional[global___AuthorizationPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["authorization_policy",b"authorization_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_policy",b"authorization_policy","authorization_policy_id",b"authorization_policy_id","parent",b"parent"]) -> None: ...
global___CreateAuthorizationPolicyRequest = CreateAuthorizationPolicyRequest

class UpdateAuthorizationPolicyRequest(google.protobuf.message.Message):
    """Request used by the UpdateAuthorizationPolicy method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    AUTHORIZATION_POLICY_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. Field mask is used to specify the fields to be overwritten in the
        AuthorizationPolicy resource by the update.
        The fields specified in the update_mask are relative to the resource, not
        the full request. A field will be overwritten if it is in the mask. If the
        user does not provide a mask then all fields will be overwritten.
        """
        pass
    @property
    def authorization_policy(self) -> global___AuthorizationPolicy:
        """Required. Updated AuthorizationPolicy resource."""
        pass
    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        authorization_policy : typing.Optional[global___AuthorizationPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["authorization_policy",b"authorization_policy","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authorization_policy",b"authorization_policy","update_mask",b"update_mask"]) -> None: ...
global___UpdateAuthorizationPolicyRequest = UpdateAuthorizationPolicyRequest

class DeleteAuthorizationPolicyRequest(google.protobuf.message.Message):
    """Request used by the DeleteAuthorizationPolicy method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. A name of the AuthorizationPolicy to delete. Must be in the format
    `projects/{project}/locations/{location}/authorizationPolicies/*`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteAuthorizationPolicyRequest = DeleteAuthorizationPolicyRequest
