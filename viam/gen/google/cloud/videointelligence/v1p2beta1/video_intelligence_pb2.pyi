"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _Feature:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _FeatureEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Feature.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    FEATURE_UNSPECIFIED: Feature.ValueType = ...  # 0
    """Unspecified."""

    LABEL_DETECTION: Feature.ValueType = ...  # 1
    """Label detection. Detect objects, such as dog or flower."""

    SHOT_CHANGE_DETECTION: Feature.ValueType = ...  # 2
    """Shot change detection."""

    EXPLICIT_CONTENT_DETECTION: Feature.ValueType = ...  # 3
    """Explicit content detection."""

    TEXT_DETECTION: Feature.ValueType = ...  # 7
    """OCR text detection and tracking."""

    OBJECT_TRACKING: Feature.ValueType = ...  # 9
    """Object detection and tracking."""

class Feature(_Feature, metaclass=_FeatureEnumTypeWrapper):
    """Video annotation feature."""
    pass

FEATURE_UNSPECIFIED: Feature.ValueType = ...  # 0
"""Unspecified."""

LABEL_DETECTION: Feature.ValueType = ...  # 1
"""Label detection. Detect objects, such as dog or flower."""

SHOT_CHANGE_DETECTION: Feature.ValueType = ...  # 2
"""Shot change detection."""

EXPLICIT_CONTENT_DETECTION: Feature.ValueType = ...  # 3
"""Explicit content detection."""

TEXT_DETECTION: Feature.ValueType = ...  # 7
"""OCR text detection and tracking."""

OBJECT_TRACKING: Feature.ValueType = ...  # 9
"""Object detection and tracking."""

global___Feature = Feature


class _LabelDetectionMode:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _LabelDetectionModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LabelDetectionMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    LABEL_DETECTION_MODE_UNSPECIFIED: LabelDetectionMode.ValueType = ...  # 0
    """Unspecified."""

    SHOT_MODE: LabelDetectionMode.ValueType = ...  # 1
    """Detect shot-level labels."""

    FRAME_MODE: LabelDetectionMode.ValueType = ...  # 2
    """Detect frame-level labels."""

    SHOT_AND_FRAME_MODE: LabelDetectionMode.ValueType = ...  # 3
    """Detect both shot-level and frame-level labels."""

class LabelDetectionMode(_LabelDetectionMode, metaclass=_LabelDetectionModeEnumTypeWrapper):
    """Label detection mode."""
    pass

LABEL_DETECTION_MODE_UNSPECIFIED: LabelDetectionMode.ValueType = ...  # 0
"""Unspecified."""

SHOT_MODE: LabelDetectionMode.ValueType = ...  # 1
"""Detect shot-level labels."""

FRAME_MODE: LabelDetectionMode.ValueType = ...  # 2
"""Detect frame-level labels."""

SHOT_AND_FRAME_MODE: LabelDetectionMode.ValueType = ...  # 3
"""Detect both shot-level and frame-level labels."""

global___LabelDetectionMode = LabelDetectionMode


class _Likelihood:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _LikelihoodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Likelihood.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    LIKELIHOOD_UNSPECIFIED: Likelihood.ValueType = ...  # 0
    """Unspecified likelihood."""

    VERY_UNLIKELY: Likelihood.ValueType = ...  # 1
    """Very unlikely."""

    UNLIKELY: Likelihood.ValueType = ...  # 2
    """Unlikely."""

    POSSIBLE: Likelihood.ValueType = ...  # 3
    """Possible."""

    LIKELY: Likelihood.ValueType = ...  # 4
    """Likely."""

    VERY_LIKELY: Likelihood.ValueType = ...  # 5
    """Very likely."""

class Likelihood(_Likelihood, metaclass=_LikelihoodEnumTypeWrapper):
    """Bucketized representation of likelihood."""
    pass

LIKELIHOOD_UNSPECIFIED: Likelihood.ValueType = ...  # 0
"""Unspecified likelihood."""

VERY_UNLIKELY: Likelihood.ValueType = ...  # 1
"""Very unlikely."""

UNLIKELY: Likelihood.ValueType = ...  # 2
"""Unlikely."""

POSSIBLE: Likelihood.ValueType = ...  # 3
"""Possible."""

LIKELY: Likelihood.ValueType = ...  # 4
"""Likely."""

VERY_LIKELY: Likelihood.ValueType = ...  # 5
"""Very likely."""

global___Likelihood = Likelihood


class AnnotateVideoRequest(google.protobuf.message.Message):
    """Video annotation request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INPUT_URI_FIELD_NUMBER: builtins.int
    INPUT_CONTENT_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    VIDEO_CONTEXT_FIELD_NUMBER: builtins.int
    OUTPUT_URI_FIELD_NUMBER: builtins.int
    LOCATION_ID_FIELD_NUMBER: builtins.int
    input_uri: typing.Text = ...
    """Input video location. Currently, only
    [Google Cloud Storage](https://cloud.google.com/storage/) URIs are
    supported, which must be specified in the following format:
    `gs://bucket-id/object-id` (other URI formats return
    [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
    [Request URIs](https://cloud.google.com/storage/docs/request-endpoints).
    A video URI may include wildcards in `object-id`, and thus identify
    multiple videos. Supported wildcards: '*' to match 0 or more characters;
    '?' to match 1 character. If unset, the input video should be embedded
    in the request as `input_content`. If set, `input_content` should be unset.
    """

    input_content: builtins.bytes = ...
    """The video data bytes.
    If unset, the input video(s) should be specified via `input_uri`.
    If set, `input_uri` should be unset.
    """

    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Feature.ValueType]:
        """Required. Requested video annotation features."""
        pass
    @property
    def video_context(self) -> global___VideoContext:
        """Additional video context and/or feature-specific parameters."""
        pass
    output_uri: typing.Text = ...
    """Optional. Location where the output (in JSON format) should be stored.
    Currently, only [Google Cloud Storage](https://cloud.google.com/storage/)
    URIs are supported, which must be specified in the following format:
    `gs://bucket-id/object-id` (other URI formats return
    [google.rpc.Code.INVALID_ARGUMENT][google.rpc.Code.INVALID_ARGUMENT]). For more information, see
    [Request URIs](https://cloud.google.com/storage/docs/request-endpoints).
    """

    location_id: typing.Text = ...
    """Optional. Cloud region where annotation should take place. Supported cloud
    regions: `us-east1`, `us-west1`, `europe-west1`, `asia-east1`. If no region
    is specified, a region will be determined based on video file location.
    """

    def __init__(self,
        *,
        input_uri : typing.Text = ...,
        input_content : builtins.bytes = ...,
        features : typing.Optional[typing.Iterable[global___Feature.ValueType]] = ...,
        video_context : typing.Optional[global___VideoContext] = ...,
        output_uri : typing.Text = ...,
        location_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["video_context",b"video_context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["features",b"features","input_content",b"input_content","input_uri",b"input_uri","location_id",b"location_id","output_uri",b"output_uri","video_context",b"video_context"]) -> None: ...
global___AnnotateVideoRequest = AnnotateVideoRequest

class VideoContext(google.protobuf.message.Message):
    """Video context and/or feature-specific parameters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SEGMENTS_FIELD_NUMBER: builtins.int
    LABEL_DETECTION_CONFIG_FIELD_NUMBER: builtins.int
    SHOT_CHANGE_DETECTION_CONFIG_FIELD_NUMBER: builtins.int
    EXPLICIT_CONTENT_DETECTION_CONFIG_FIELD_NUMBER: builtins.int
    TEXT_DETECTION_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def segments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VideoSegment]:
        """Video segments to annotate. The segments may overlap and are not required
        to be contiguous or span the whole video. If unspecified, each video is
        treated as a single segment.
        """
        pass
    @property
    def label_detection_config(self) -> global___LabelDetectionConfig:
        """Config for LABEL_DETECTION."""
        pass
    @property
    def shot_change_detection_config(self) -> global___ShotChangeDetectionConfig:
        """Config for SHOT_CHANGE_DETECTION."""
        pass
    @property
    def explicit_content_detection_config(self) -> global___ExplicitContentDetectionConfig:
        """Config for EXPLICIT_CONTENT_DETECTION."""
        pass
    @property
    def text_detection_config(self) -> global___TextDetectionConfig:
        """Config for TEXT_DETECTION."""
        pass
    def __init__(self,
        *,
        segments : typing.Optional[typing.Iterable[global___VideoSegment]] = ...,
        label_detection_config : typing.Optional[global___LabelDetectionConfig] = ...,
        shot_change_detection_config : typing.Optional[global___ShotChangeDetectionConfig] = ...,
        explicit_content_detection_config : typing.Optional[global___ExplicitContentDetectionConfig] = ...,
        text_detection_config : typing.Optional[global___TextDetectionConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["explicit_content_detection_config",b"explicit_content_detection_config","label_detection_config",b"label_detection_config","shot_change_detection_config",b"shot_change_detection_config","text_detection_config",b"text_detection_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["explicit_content_detection_config",b"explicit_content_detection_config","label_detection_config",b"label_detection_config","segments",b"segments","shot_change_detection_config",b"shot_change_detection_config","text_detection_config",b"text_detection_config"]) -> None: ...
global___VideoContext = VideoContext

class LabelDetectionConfig(google.protobuf.message.Message):
    """Config for LABEL_DETECTION."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LABEL_DETECTION_MODE_FIELD_NUMBER: builtins.int
    STATIONARY_CAMERA_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    label_detection_mode: global___LabelDetectionMode.ValueType = ...
    """What labels should be detected with LABEL_DETECTION, in addition to
    video-level labels or segment-level labels.
    If unspecified, defaults to `SHOT_MODE`.
    """

    stationary_camera: builtins.bool = ...
    """Whether the video has been shot from a stationary (i.e. non-moving) camera.
    When set to true, might improve detection accuracy for moving objects.
    Should be used with `SHOT_AND_FRAME_MODE` enabled.
    """

    model: typing.Text = ...
    """Model to use for label detection.
    Supported values: "builtin/stable" (the default if unset) and
    "builtin/latest".
    """

    def __init__(self,
        *,
        label_detection_mode : global___LabelDetectionMode.ValueType = ...,
        stationary_camera : builtins.bool = ...,
        model : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["label_detection_mode",b"label_detection_mode","model",b"model","stationary_camera",b"stationary_camera"]) -> None: ...
global___LabelDetectionConfig = LabelDetectionConfig

class ShotChangeDetectionConfig(google.protobuf.message.Message):
    """Config for SHOT_CHANGE_DETECTION."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MODEL_FIELD_NUMBER: builtins.int
    model: typing.Text = ...
    """Model to use for shot change detection.
    Supported values: "builtin/stable" (the default if unset) and
    "builtin/latest".
    """

    def __init__(self,
        *,
        model : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["model",b"model"]) -> None: ...
global___ShotChangeDetectionConfig = ShotChangeDetectionConfig

class ExplicitContentDetectionConfig(google.protobuf.message.Message):
    """Config for EXPLICIT_CONTENT_DETECTION."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MODEL_FIELD_NUMBER: builtins.int
    model: typing.Text = ...
    """Model to use for explicit content detection.
    Supported values: "builtin/stable" (the default if unset) and
    "builtin/latest".
    """

    def __init__(self,
        *,
        model : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["model",b"model"]) -> None: ...
global___ExplicitContentDetectionConfig = ExplicitContentDetectionConfig

class TextDetectionConfig(google.protobuf.message.Message):
    """Config for TEXT_DETECTION."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LANGUAGE_HINTS_FIELD_NUMBER: builtins.int
    @property
    def language_hints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Language hint can be specified if the language to be detected is known a
        priori. It can increase the accuracy of the detection. Language hint must
        be language code in BCP-47 format.

        Automatic language detection is performed if no hint is provided.
        """
        pass
    def __init__(self,
        *,
        language_hints : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["language_hints",b"language_hints"]) -> None: ...
global___TextDetectionConfig = TextDetectionConfig

class VideoSegment(google.protobuf.message.Message):
    """Video segment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_TIME_OFFSET_FIELD_NUMBER: builtins.int
    END_TIME_OFFSET_FIELD_NUMBER: builtins.int
    @property
    def start_time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """Time-offset, relative to the beginning of the video,
        corresponding to the start of the segment (inclusive).
        """
        pass
    @property
    def end_time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """Time-offset, relative to the beginning of the video,
        corresponding to the end of the segment (inclusive).
        """
        pass
    def __init__(self,
        *,
        start_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        end_time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time_offset",b"end_time_offset","start_time_offset",b"start_time_offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time_offset",b"end_time_offset","start_time_offset",b"start_time_offset"]) -> None: ...
global___VideoSegment = VideoSegment

class LabelSegment(google.protobuf.message.Message):
    """Video segment level annotation results for label detection."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SEGMENT_FIELD_NUMBER: builtins.int
    CONFIDENCE_FIELD_NUMBER: builtins.int
    @property
    def segment(self) -> global___VideoSegment:
        """Video segment where a label was detected."""
        pass
    confidence: builtins.float = ...
    """Confidence that the label is accurate. Range: [0, 1]."""

    def __init__(self,
        *,
        segment : typing.Optional[global___VideoSegment] = ...,
        confidence : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["segment",b"segment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["confidence",b"confidence","segment",b"segment"]) -> None: ...
global___LabelSegment = LabelSegment

class LabelFrame(google.protobuf.message.Message):
    """Video frame level annotation results for label detection."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TIME_OFFSET_FIELD_NUMBER: builtins.int
    CONFIDENCE_FIELD_NUMBER: builtins.int
    @property
    def time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """Time-offset, relative to the beginning of the video, corresponding to the
        video frame for this location.
        """
        pass
    confidence: builtins.float = ...
    """Confidence that the label is accurate. Range: [0, 1]."""

    def __init__(self,
        *,
        time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        confidence : builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time_offset",b"time_offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["confidence",b"confidence","time_offset",b"time_offset"]) -> None: ...
global___LabelFrame = LabelFrame

class Entity(google.protobuf.message.Message):
    """Detected entity from video analysis."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTITY_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    entity_id: typing.Text = ...
    """Opaque entity ID. Some IDs may be available in
    [Google Knowledge Graph Search
    API](https://developers.google.com/knowledge-graph/).
    """

    description: typing.Text = ...
    """Textual description, e.g. `Fixed-gear bicycle`."""

    language_code: typing.Text = ...
    """Language code for `description` in BCP-47 format."""

    def __init__(self,
        *,
        entity_id : typing.Text = ...,
        description : typing.Text = ...,
        language_code : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","entity_id",b"entity_id","language_code",b"language_code"]) -> None: ...
global___Entity = Entity

class LabelAnnotation(google.protobuf.message.Message):
    """Label annotation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTITY_FIELD_NUMBER: builtins.int
    CATEGORY_ENTITIES_FIELD_NUMBER: builtins.int
    SEGMENTS_FIELD_NUMBER: builtins.int
    FRAMES_FIELD_NUMBER: builtins.int
    @property
    def entity(self) -> global___Entity:
        """Detected entity."""
        pass
    @property
    def category_entities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Entity]:
        """Common categories for the detected entity.
        E.g. when the label is `Terrier` the category is likely `dog`. And in some
        cases there might be more than one categories e.g. `Terrier` could also be
        a `pet`.
        """
        pass
    @property
    def segments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LabelSegment]:
        """All video segments where a label was detected."""
        pass
    @property
    def frames(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LabelFrame]:
        """All video frames where a label was detected."""
        pass
    def __init__(self,
        *,
        entity : typing.Optional[global___Entity] = ...,
        category_entities : typing.Optional[typing.Iterable[global___Entity]] = ...,
        segments : typing.Optional[typing.Iterable[global___LabelSegment]] = ...,
        frames : typing.Optional[typing.Iterable[global___LabelFrame]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity",b"entity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["category_entities",b"category_entities","entity",b"entity","frames",b"frames","segments",b"segments"]) -> None: ...
global___LabelAnnotation = LabelAnnotation

class ExplicitContentFrame(google.protobuf.message.Message):
    """Video frame level annotation results for explicit content."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TIME_OFFSET_FIELD_NUMBER: builtins.int
    PORNOGRAPHY_LIKELIHOOD_FIELD_NUMBER: builtins.int
    @property
    def time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """Time-offset, relative to the beginning of the video, corresponding to the
        video frame for this location.
        """
        pass
    pornography_likelihood: global___Likelihood.ValueType = ...
    """Likelihood of the pornography content.."""

    def __init__(self,
        *,
        time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        pornography_likelihood : global___Likelihood.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["time_offset",b"time_offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["pornography_likelihood",b"pornography_likelihood","time_offset",b"time_offset"]) -> None: ...
global___ExplicitContentFrame = ExplicitContentFrame

class ExplicitContentAnnotation(google.protobuf.message.Message):
    """Explicit content annotation (based on per-frame visual signals only).
    If no explicit content has been detected in a frame, no annotations are
    present for that frame.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FRAMES_FIELD_NUMBER: builtins.int
    @property
    def frames(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExplicitContentFrame]:
        """All video frames where explicit content was detected."""
        pass
    def __init__(self,
        *,
        frames : typing.Optional[typing.Iterable[global___ExplicitContentFrame]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["frames",b"frames"]) -> None: ...
global___ExplicitContentAnnotation = ExplicitContentAnnotation

class NormalizedBoundingBox(google.protobuf.message.Message):
    """Normalized bounding box.
    The normalized vertex coordinates are relative to the original image.
    Range: [0, 1].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LEFT_FIELD_NUMBER: builtins.int
    TOP_FIELD_NUMBER: builtins.int
    RIGHT_FIELD_NUMBER: builtins.int
    BOTTOM_FIELD_NUMBER: builtins.int
    left: builtins.float = ...
    """Left X coordinate."""

    top: builtins.float = ...
    """Top Y coordinate."""

    right: builtins.float = ...
    """Right X coordinate."""

    bottom: builtins.float = ...
    """Bottom Y coordinate."""

    def __init__(self,
        *,
        left : builtins.float = ...,
        top : builtins.float = ...,
        right : builtins.float = ...,
        bottom : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bottom",b"bottom","left",b"left","right",b"right","top",b"top"]) -> None: ...
global___NormalizedBoundingBox = NormalizedBoundingBox

class VideoAnnotationResults(google.protobuf.message.Message):
    """Annotation results for a single video."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INPUT_URI_FIELD_NUMBER: builtins.int
    SEGMENT_LABEL_ANNOTATIONS_FIELD_NUMBER: builtins.int
    SHOT_LABEL_ANNOTATIONS_FIELD_NUMBER: builtins.int
    FRAME_LABEL_ANNOTATIONS_FIELD_NUMBER: builtins.int
    SHOT_ANNOTATIONS_FIELD_NUMBER: builtins.int
    EXPLICIT_ANNOTATION_FIELD_NUMBER: builtins.int
    TEXT_ANNOTATIONS_FIELD_NUMBER: builtins.int
    OBJECT_ANNOTATIONS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    input_uri: typing.Text = ...
    """Video file location in
    [Google Cloud Storage](https://cloud.google.com/storage/).
    """

    @property
    def segment_label_annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LabelAnnotation]:
        """Label annotations on video level or user specified segment level.
        There is exactly one element for each unique label.
        """
        pass
    @property
    def shot_label_annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LabelAnnotation]:
        """Label annotations on shot level.
        There is exactly one element for each unique label.
        """
        pass
    @property
    def frame_label_annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LabelAnnotation]:
        """Label annotations on frame level.
        There is exactly one element for each unique label.
        """
        pass
    @property
    def shot_annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VideoSegment]:
        """Shot annotations. Each shot is represented as a video segment."""
        pass
    @property
    def explicit_annotation(self) -> global___ExplicitContentAnnotation:
        """Explicit content annotation."""
        pass
    @property
    def text_annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TextAnnotation]:
        """OCR text detection and tracking.
        Annotations for list of detected text snippets. Each will have list of
        frame information associated with it.
        """
        pass
    @property
    def object_annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectTrackingAnnotation]:
        """Annotations for list of objects detected and tracked in video."""
        pass
    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """If set, indicates an error. Note that for a single `AnnotateVideoRequest`
        some videos may succeed and some may fail.
        """
        pass
    def __init__(self,
        *,
        input_uri : typing.Text = ...,
        segment_label_annotations : typing.Optional[typing.Iterable[global___LabelAnnotation]] = ...,
        shot_label_annotations : typing.Optional[typing.Iterable[global___LabelAnnotation]] = ...,
        frame_label_annotations : typing.Optional[typing.Iterable[global___LabelAnnotation]] = ...,
        shot_annotations : typing.Optional[typing.Iterable[global___VideoSegment]] = ...,
        explicit_annotation : typing.Optional[global___ExplicitContentAnnotation] = ...,
        text_annotations : typing.Optional[typing.Iterable[global___TextAnnotation]] = ...,
        object_annotations : typing.Optional[typing.Iterable[global___ObjectTrackingAnnotation]] = ...,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","explicit_annotation",b"explicit_annotation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error",b"error","explicit_annotation",b"explicit_annotation","frame_label_annotations",b"frame_label_annotations","input_uri",b"input_uri","object_annotations",b"object_annotations","segment_label_annotations",b"segment_label_annotations","shot_annotations",b"shot_annotations","shot_label_annotations",b"shot_label_annotations","text_annotations",b"text_annotations"]) -> None: ...
global___VideoAnnotationResults = VideoAnnotationResults

class AnnotateVideoResponse(google.protobuf.message.Message):
    """Video annotation response. Included in the `response`
    field of the `Operation` returned by the `GetOperation`
    call of the `google::longrunning::Operations` service.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANNOTATION_RESULTS_FIELD_NUMBER: builtins.int
    @property
    def annotation_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VideoAnnotationResults]:
        """Annotation results for all videos specified in `AnnotateVideoRequest`."""
        pass
    def __init__(self,
        *,
        annotation_results : typing.Optional[typing.Iterable[global___VideoAnnotationResults]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_results",b"annotation_results"]) -> None: ...
global___AnnotateVideoResponse = AnnotateVideoResponse

class VideoAnnotationProgress(google.protobuf.message.Message):
    """Annotation progress for a single video."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INPUT_URI_FIELD_NUMBER: builtins.int
    PROGRESS_PERCENT_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    input_uri: typing.Text = ...
    """Video file location in
    [Google Cloud Storage](https://cloud.google.com/storage/).
    """

    progress_percent: builtins.int = ...
    """Approximate percentage processed thus far. Guaranteed to be
    100 when fully processed.
    """

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when the request was received."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time of the most recent update."""
        pass
    def __init__(self,
        *,
        input_uri : typing.Text = ...,
        progress_percent : builtins.int = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["start_time",b"start_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_uri",b"input_uri","progress_percent",b"progress_percent","start_time",b"start_time","update_time",b"update_time"]) -> None: ...
global___VideoAnnotationProgress = VideoAnnotationProgress

class AnnotateVideoProgress(google.protobuf.message.Message):
    """Video annotation progress. Included in the `metadata`
    field of the `Operation` returned by the `GetOperation`
    call of the `google::longrunning::Operations` service.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANNOTATION_PROGRESS_FIELD_NUMBER: builtins.int
    @property
    def annotation_progress(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VideoAnnotationProgress]:
        """Progress metadata for all videos specified in `AnnotateVideoRequest`."""
        pass
    def __init__(self,
        *,
        annotation_progress : typing.Optional[typing.Iterable[global___VideoAnnotationProgress]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotation_progress",b"annotation_progress"]) -> None: ...
global___AnnotateVideoProgress = AnnotateVideoProgress

class NormalizedVertex(google.protobuf.message.Message):
    """A vertex represents a 2D point in the image.
    NOTE: the normalized vertex coordinates are relative to the original image
    and range from 0 to 1.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    x: builtins.float = ...
    """X coordinate."""

    y: builtins.float = ...
    """Y coordinate."""

    def __init__(self,
        *,
        x : builtins.float = ...,
        y : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["x",b"x","y",b"y"]) -> None: ...
global___NormalizedVertex = NormalizedVertex

class NormalizedBoundingPoly(google.protobuf.message.Message):
    """Normalized bounding polygon for text (that might not be aligned with axis).
    Contains list of the corner points in clockwise order starting from
    top-left corner. For example, for a rectangular bounding box:
    When the text is horizontal it might look like:
            0----1
            |    |
            3----2

    When it's clockwise rotated 180 degrees around the top-left corner it
    becomes:
            2----3
            |    |
            1----0

    and the vertex order will still be (0, 1, 2, 3). Note that values can be less
    than 0, or greater than 1 due to trignometric calculations for location of
    the box.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VERTICES_FIELD_NUMBER: builtins.int
    @property
    def vertices(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NormalizedVertex]:
        """Normalized vertices of the bounding polygon."""
        pass
    def __init__(self,
        *,
        vertices : typing.Optional[typing.Iterable[global___NormalizedVertex]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["vertices",b"vertices"]) -> None: ...
global___NormalizedBoundingPoly = NormalizedBoundingPoly

class TextSegment(google.protobuf.message.Message):
    """Video segment level annotation results for text detection."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SEGMENT_FIELD_NUMBER: builtins.int
    CONFIDENCE_FIELD_NUMBER: builtins.int
    FRAMES_FIELD_NUMBER: builtins.int
    @property
    def segment(self) -> global___VideoSegment:
        """Video segment where a text snippet was detected."""
        pass
    confidence: builtins.float = ...
    """Confidence for the track of detected text. It is calculated as the highest
    over all frames where OCR detected text appears.
    """

    @property
    def frames(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TextFrame]:
        """Information related to the frames where OCR detected text appears."""
        pass
    def __init__(self,
        *,
        segment : typing.Optional[global___VideoSegment] = ...,
        confidence : builtins.float = ...,
        frames : typing.Optional[typing.Iterable[global___TextFrame]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["segment",b"segment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["confidence",b"confidence","frames",b"frames","segment",b"segment"]) -> None: ...
global___TextSegment = TextSegment

class TextFrame(google.protobuf.message.Message):
    """Video frame level annotation results for text annotation (OCR).
    Contains information regarding timestamp and bounding box locations for the
    frames containing detected OCR text snippets.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROTATED_BOUNDING_BOX_FIELD_NUMBER: builtins.int
    TIME_OFFSET_FIELD_NUMBER: builtins.int
    @property
    def rotated_bounding_box(self) -> global___NormalizedBoundingPoly:
        """Bounding polygon of the detected text for this frame."""
        pass
    @property
    def time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """Timestamp of this frame."""
        pass
    def __init__(self,
        *,
        rotated_bounding_box : typing.Optional[global___NormalizedBoundingPoly] = ...,
        time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["rotated_bounding_box",b"rotated_bounding_box","time_offset",b"time_offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["rotated_bounding_box",b"rotated_bounding_box","time_offset",b"time_offset"]) -> None: ...
global___TextFrame = TextFrame

class TextAnnotation(google.protobuf.message.Message):
    """Annotations related to one detected OCR text snippet. This will contain the
    corresponding text, confidence value, and frame level information for each
    detection.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_FIELD_NUMBER: builtins.int
    SEGMENTS_FIELD_NUMBER: builtins.int
    text: typing.Text = ...
    """The detected text."""

    @property
    def segments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TextSegment]:
        """All video segments where OCR detected text appears."""
        pass
    def __init__(self,
        *,
        text : typing.Text = ...,
        segments : typing.Optional[typing.Iterable[global___TextSegment]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["segments",b"segments","text",b"text"]) -> None: ...
global___TextAnnotation = TextAnnotation

class ObjectTrackingFrame(google.protobuf.message.Message):
    """Video frame level annotations for object detection and tracking. This field
    stores per frame location, time offset, and confidence.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NORMALIZED_BOUNDING_BOX_FIELD_NUMBER: builtins.int
    TIME_OFFSET_FIELD_NUMBER: builtins.int
    @property
    def normalized_bounding_box(self) -> global___NormalizedBoundingBox:
        """The normalized bounding box location of this object track for the frame."""
        pass
    @property
    def time_offset(self) -> google.protobuf.duration_pb2.Duration:
        """The timestamp of the frame in microseconds."""
        pass
    def __init__(self,
        *,
        normalized_bounding_box : typing.Optional[global___NormalizedBoundingBox] = ...,
        time_offset : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["normalized_bounding_box",b"normalized_bounding_box","time_offset",b"time_offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["normalized_bounding_box",b"normalized_bounding_box","time_offset",b"time_offset"]) -> None: ...
global___ObjectTrackingFrame = ObjectTrackingFrame

class ObjectTrackingAnnotation(google.protobuf.message.Message):
    """Annotations corresponding to one tracked object."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTITY_FIELD_NUMBER: builtins.int
    CONFIDENCE_FIELD_NUMBER: builtins.int
    FRAMES_FIELD_NUMBER: builtins.int
    SEGMENT_FIELD_NUMBER: builtins.int
    @property
    def entity(self) -> global___Entity:
        """Entity to specify the object category that this track is labeled as."""
        pass
    confidence: builtins.float = ...
    """Object category's labeling confidence of this track."""

    @property
    def frames(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectTrackingFrame]:
        """Information corresponding to all frames where this object track appears."""
        pass
    @property
    def segment(self) -> global___VideoSegment:
        """Each object track corresponds to one video segment where it appears."""
        pass
    def __init__(self,
        *,
        entity : typing.Optional[global___Entity] = ...,
        confidence : builtins.float = ...,
        frames : typing.Optional[typing.Iterable[global___ObjectTrackingFrame]] = ...,
        segment : typing.Optional[global___VideoSegment] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity",b"entity","segment",b"segment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["confidence",b"confidence","entity",b"entity","frames",b"frames","segment",b"segment"]) -> None: ...
global___ObjectTrackingAnnotation = ObjectTrackingAnnotation
