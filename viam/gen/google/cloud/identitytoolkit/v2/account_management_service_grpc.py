# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/identitytoolkit/v2/account_management_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.field_behavior_pb2
import google.cloud.identitytoolkit.v2.mfa_info_pb2
import google.api.client_pb2
import google.cloud.identitytoolkit.v2.account_management_service_pb2


class AccountManagementServiceBase(abc.ABC):

    @abc.abstractmethod
    async def FinalizeMfaEnrollment(self, stream: 'grpclib.server.Stream[google.cloud.identitytoolkit.v2.account_management_service_pb2.FinalizeMfaEnrollmentRequest, google.cloud.identitytoolkit.v2.account_management_service_pb2.FinalizeMfaEnrollmentResponse]') -> None:
        pass

    @abc.abstractmethod
    async def StartMfaEnrollment(self, stream: 'grpclib.server.Stream[google.cloud.identitytoolkit.v2.account_management_service_pb2.StartMfaEnrollmentRequest, google.cloud.identitytoolkit.v2.account_management_service_pb2.StartMfaEnrollmentResponse]') -> None:
        pass

    @abc.abstractmethod
    async def WithdrawMfa(self, stream: 'grpclib.server.Stream[google.cloud.identitytoolkit.v2.account_management_service_pb2.WithdrawMfaRequest, google.cloud.identitytoolkit.v2.account_management_service_pb2.WithdrawMfaResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.identitytoolkit.v2.AccountManagementService/FinalizeMfaEnrollment': grpclib.const.Handler(
                self.FinalizeMfaEnrollment,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.identitytoolkit.v2.account_management_service_pb2.FinalizeMfaEnrollmentRequest,
                google.cloud.identitytoolkit.v2.account_management_service_pb2.FinalizeMfaEnrollmentResponse,
            ),
            '/google.cloud.identitytoolkit.v2.AccountManagementService/StartMfaEnrollment': grpclib.const.Handler(
                self.StartMfaEnrollment,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.identitytoolkit.v2.account_management_service_pb2.StartMfaEnrollmentRequest,
                google.cloud.identitytoolkit.v2.account_management_service_pb2.StartMfaEnrollmentResponse,
            ),
            '/google.cloud.identitytoolkit.v2.AccountManagementService/WithdrawMfa': grpclib.const.Handler(
                self.WithdrawMfa,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.identitytoolkit.v2.account_management_service_pb2.WithdrawMfaRequest,
                google.cloud.identitytoolkit.v2.account_management_service_pb2.WithdrawMfaResponse,
            ),
        }


class AccountManagementServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.FinalizeMfaEnrollment = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.identitytoolkit.v2.AccountManagementService/FinalizeMfaEnrollment',
            google.cloud.identitytoolkit.v2.account_management_service_pb2.FinalizeMfaEnrollmentRequest,
            google.cloud.identitytoolkit.v2.account_management_service_pb2.FinalizeMfaEnrollmentResponse,
        )
        self.StartMfaEnrollment = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.identitytoolkit.v2.AccountManagementService/StartMfaEnrollment',
            google.cloud.identitytoolkit.v2.account_management_service_pb2.StartMfaEnrollmentRequest,
            google.cloud.identitytoolkit.v2.account_management_service_pb2.StartMfaEnrollmentResponse,
        )
        self.WithdrawMfa = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.identitytoolkit.v2.AccountManagementService/WithdrawMfa',
            google.cloud.identitytoolkit.v2.account_management_service_pb2.WithdrawMfaRequest,
            google.cloud.identitytoolkit.v2.account_management_service_pb2.WithdrawMfaResponse,
        )
