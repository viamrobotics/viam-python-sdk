"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.servicedirectory.v1.endpoint_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Service(google.protobuf.message.Message):
    """An individual service. A service contains a name and optional metadata.
    A service must exist before
    [endpoints][google.cloud.servicedirectory.v1.Endpoint] can be
    added to it.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    ENDPOINTS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Immutable. The resource name for the service in the format
    `projects/*/locations/*/namespaces/*/services/*`.
    """

    @property
    def annotations(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional. Annotations for the service. This data can be consumed by service
        clients.
        Restrictions:
         - The entire annotations dictionary may contain up to 2000 characters,
           spread accoss all key-value pairs. Annotations that goes beyond any
           these limits will be rejected.
         - Valid annotation keys have two segments: an optional prefix and name,
           separated by a slash (/). The name segment is required and must be 63
           characters or less, beginning and ending with an alphanumeric character
           ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and
           alphanumerics between. The prefix is optional. If specified, the prefix
           must be a DNS subdomain: a series of DNS labels separated by dots (.),
           not longer than 253 characters in total, followed by a slash (/).
           Annotations that fails to meet these requirements will be rejected.
         - The '(*.)google.com/' and '(*.)googleapis.com/' prefixes are reserved
           for system annotations managed by Service Directory. If the user tries
           to write to these keyspaces, those entries will be silently ignored by
           the system.
        Note: This field is equivalent to the 'metadata' field in the v1beta1 API.
        They have the same syntax and read/write to the same location in Service
        Directory.
        """
        pass
    @property
    def endpoints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.servicedirectory.v1.endpoint_pb2.Endpoint]:
        """Output only. Endpoints associated with this service. Returned on
        LookupService.Resolve. Control plane clients should use
        RegistrationService.ListEndpoints.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        annotations : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        endpoints : typing.Optional[typing.Iterable[google.cloud.servicedirectory.v1.endpoint_pb2.Endpoint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["annotations",b"annotations","endpoints",b"endpoints","name",b"name"]) -> None: ...
global___Service = Service
