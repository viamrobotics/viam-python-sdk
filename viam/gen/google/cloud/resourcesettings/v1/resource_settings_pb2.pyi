"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _SettingView:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SettingViewEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SettingView.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SETTING_VIEW_UNSPECIFIED: SettingView.ValueType = ...  # 0
    """The default / unset value.
    The API will default to the SETTING_VIEW_BASIC view.
    """

    SETTING_VIEW_BASIC: SettingView.ValueType = ...  # 1
    """Include [Setting.metadata][google.cloud.resourcesettings.v1.Setting.metadata], but nothing else.
    This is the default value (for both ListSettings and GetSetting).
    """

    SETTING_VIEW_EFFECTIVE_VALUE: SettingView.ValueType = ...  # 2
    """Include [Setting.effective_value][google.cloud.resourcesettings.v1.Setting.effective_value], but nothing else."""

    SETTING_VIEW_LOCAL_VALUE: SettingView.ValueType = ...  # 3
    """Include [Setting.local_value][google.cloud.resourcesettings.v1.Setting.local_value], but nothing else."""

class SettingView(_SettingView, metaclass=_SettingViewEnumTypeWrapper):
    """View options for Settings."""
    pass

SETTING_VIEW_UNSPECIFIED: SettingView.ValueType = ...  # 0
"""The default / unset value.
The API will default to the SETTING_VIEW_BASIC view.
"""

SETTING_VIEW_BASIC: SettingView.ValueType = ...  # 1
"""Include [Setting.metadata][google.cloud.resourcesettings.v1.Setting.metadata], but nothing else.
This is the default value (for both ListSettings and GetSetting).
"""

SETTING_VIEW_EFFECTIVE_VALUE: SettingView.ValueType = ...  # 2
"""Include [Setting.effective_value][google.cloud.resourcesettings.v1.Setting.effective_value], but nothing else."""

SETTING_VIEW_LOCAL_VALUE: SettingView.ValueType = ...  # 3
"""Include [Setting.local_value][google.cloud.resourcesettings.v1.Setting.local_value], but nothing else."""

global___SettingView = SettingView


class Setting(google.protobuf.message.Message):
    """The schema for settings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    LOCAL_VALUE_FIELD_NUMBER: builtins.int
    EFFECTIVE_VALUE_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the setting. Must be in one of the following forms:

    * `projects/{project_number}/settings/{setting_name}`
    * `folders/{folder_id}/settings/{setting_name}`
    * `organizations/{organization_id}/settings/{setting_name}`

    For example, "/projects/123/settings/gcp-enableMyFeature"
    """

    @property
    def metadata(self) -> global___SettingMetadata:
        """Output only. Metadata about a setting which is not editable by the end user."""
        pass
    @property
    def local_value(self) -> global___Value:
        """The configured value of the setting at the given parent resource (ignoring
        the resource hierarchy). The data type of [Value][google.cloud.resourcesettings.v1.Value] must always be
        consistent with the data type defined in [Setting.metadata][google.cloud.resourcesettings.v1.Setting.metadata].
        """
        pass
    @property
    def effective_value(self) -> global___Value:
        """Output only. The computed effective value of the setting at the given parent resource
        (based on the resource hierarchy).

        The effective value evaluates to one of the following options in the given
        order (the next option is used if the previous one does not exist):

        1. the local setting value on the given resource: [Setting.local_value][google.cloud.resourcesettings.v1.Setting.local_value]
        2. if one of the given resource's ancestors have a local setting value,
           the local value at the nearest such ancestor
        3. the setting's default value: [SettingMetadata.default_value][google.cloud.resourcesettings.v1.SettingMetadata.default_value]
        4. an empty value (defined as a `Value` with all fields unset)

        The data type of [Value][google.cloud.resourcesettings.v1.Value] must always be
        consistent with the data type defined in [Setting.metadata][google.cloud.resourcesettings.v1.Setting.metadata].
        """
        pass
    etag: typing.Text = ...
    """A fingerprint used for optimistic concurrency. See
    [UpdateSetting][google.cloud.resourcesettings.v1.ResourceSettingsService.UpdateSetting] for more
    details.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        metadata : typing.Optional[global___SettingMetadata] = ...,
        local_value : typing.Optional[global___Value] = ...,
        effective_value : typing.Optional[global___Value] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["effective_value",b"effective_value","local_value",b"local_value","metadata",b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["effective_value",b"effective_value","etag",b"etag","local_value",b"local_value","metadata",b"metadata","name",b"name"]) -> None: ...
global___Setting = Setting

class SettingMetadata(google.protobuf.message.Message):
    """Metadata about a setting which is not editable by the end user."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DataType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DataTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DataType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DATA_TYPE_UNSPECIFIED: SettingMetadata.DataType.ValueType = ...  # 0
        """Unspecified data type."""

        BOOLEAN: SettingMetadata.DataType.ValueType = ...  # 1
        """A boolean setting."""

        STRING: SettingMetadata.DataType.ValueType = ...  # 2
        """A string setting."""

        STRING_SET: SettingMetadata.DataType.ValueType = ...  # 3
        """A string set setting."""

        ENUM_VALUE: SettingMetadata.DataType.ValueType = ...  # 4
        """A Enum setting"""

    class DataType(_DataType, metaclass=_DataTypeEnumTypeWrapper):
        """The data type for setting values of this setting. See [Value][google.cloud.resourcesettings.v1.Value] for more
        details on the available data types.
        """
        pass

    DATA_TYPE_UNSPECIFIED: SettingMetadata.DataType.ValueType = ...  # 0
    """Unspecified data type."""

    BOOLEAN: SettingMetadata.DataType.ValueType = ...  # 1
    """A boolean setting."""

    STRING: SettingMetadata.DataType.ValueType = ...  # 2
    """A string setting."""

    STRING_SET: SettingMetadata.DataType.ValueType = ...  # 3
    """A string set setting."""

    ENUM_VALUE: SettingMetadata.DataType.ValueType = ...  # 4
    """A Enum setting"""


    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    READ_ONLY_FIELD_NUMBER: builtins.int
    DATA_TYPE_FIELD_NUMBER: builtins.int
    DEFAULT_VALUE_FIELD_NUMBER: builtins.int
    display_name: typing.Text = ...
    """The human readable name for this setting."""

    description: typing.Text = ...
    """A detailed description of what this setting does."""

    read_only: builtins.bool = ...
    """A flag indicating that values of this setting cannot be modified (see
    documentation of the specific setting for updates and reasons).
    """

    data_type: global___SettingMetadata.DataType.ValueType = ...
    """The data type for this setting."""

    @property
    def default_value(self) -> global___Value:
        """The value provided by [Setting.effective_value][google.cloud.resourcesettings.v1.Setting.effective_value] if no setting value is
        explicitly set.

        Note: not all settings have a default value.
        """
        pass
    def __init__(self,
        *,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        read_only : builtins.bool = ...,
        data_type : global___SettingMetadata.DataType.ValueType = ...,
        default_value : typing.Optional[global___Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default_value",b"default_value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_type",b"data_type","default_value",b"default_value","description",b"description","display_name",b"display_name","read_only",b"read_only"]) -> None: ...
global___SettingMetadata = SettingMetadata

class Value(google.protobuf.message.Message):
    """The data in a setting value."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class StringSet(google.protobuf.message.Message):
        """A string set value that can hold a set of strings. The maximum length of
        each string is 200 characters and there can be a maximum of 50 strings in
        the string set.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VALUES_FIELD_NUMBER: builtins.int
        @property
        def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """The strings in the set"""
            pass
        def __init__(self,
            *,
            values : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["values",b"values"]) -> None: ...

    class EnumValue(google.protobuf.message.Message):
        """A enum value that can hold any enum type setting values.
        Each enum type is represented by a number, this representation
        is stored in the definitions.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VALUE_FIELD_NUMBER: builtins.int
        value: typing.Text = ...
        """The value of this enum"""

        def __init__(self,
            *,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...

    BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
    STRING_VALUE_FIELD_NUMBER: builtins.int
    STRING_SET_VALUE_FIELD_NUMBER: builtins.int
    ENUM_VALUE_FIELD_NUMBER: builtins.int
    boolean_value: builtins.bool = ...
    """Defines this value as being a boolean value."""

    string_value: typing.Text = ...
    """Defines this value as being a string value."""

    @property
    def string_set_value(self) -> global___Value.StringSet:
        """Defines this value as being a StringSet."""
        pass
    @property
    def enum_value(self) -> global___Value.EnumValue:
        """Defines this value as being a Enum."""
        pass
    def __init__(self,
        *,
        boolean_value : builtins.bool = ...,
        string_value : typing.Text = ...,
        string_set_value : typing.Optional[global___Value.StringSet] = ...,
        enum_value : typing.Optional[global___Value.EnumValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["boolean_value",b"boolean_value","enum_value",b"enum_value","string_set_value",b"string_set_value","string_value",b"string_value","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["boolean_value",b"boolean_value","enum_value",b"enum_value","string_set_value",b"string_set_value","string_value",b"string_value","value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value",b"value"]) -> typing.Optional[typing_extensions.Literal["boolean_value","string_value","string_set_value","enum_value"]]: ...
global___Value = Value

class ListSettingsRequest(google.protobuf.message.Message):
    """The request for ListSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The Cloud resource that parents the setting. Must be in one of the
    following forms:

    * `projects/{project_number}`
    * `projects/{project_id}`
    * `folders/{folder_id}`
    * `organizations/{organization_id}`
    """

    page_size: builtins.int = ...
    """Unused. The size of the page to be returned."""

    page_token: typing.Text = ...
    """Unused. A page token used to retrieve the next page."""

    view: global___SettingView.ValueType = ...
    """The SettingView for this request."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        view : global___SettingView.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent","view",b"view"]) -> None: ...
global___ListSettingsRequest = ListSettingsRequest

class ListSettingsResponse(google.protobuf.message.Message):
    """The response from ListSettings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SETTINGS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def settings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Setting]:
        """A list of settings that are available at the specified Cloud resource."""
        pass
    next_page_token: typing.Text = ...
    """Unused. A page token used to retrieve the next page."""

    def __init__(self,
        *,
        settings : typing.Optional[typing.Iterable[global___Setting]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","settings",b"settings"]) -> None: ...
global___ListSettingsResponse = ListSettingsResponse

class GetSettingRequest(google.protobuf.message.Message):
    """The request for GetSetting."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the setting to get. See [Setting][google.cloud.resourcesettings.v1.Setting] for naming
    requirements.
    """

    view: global___SettingView.ValueType = ...
    """The SettingView for this request."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        view : global___SettingView.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","view",b"view"]) -> None: ...
global___GetSettingRequest = GetSettingRequest

class UpdateSettingRequest(google.protobuf.message.Message):
    """The request for UpdateSetting."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SETTING_FIELD_NUMBER: builtins.int
    @property
    def setting(self) -> global___Setting:
        """Required. The setting to update. See [Setting][google.cloud.resourcesettings.v1.Setting] for field requirements."""
        pass
    def __init__(self,
        *,
        setting : typing.Optional[global___Setting] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["setting",b"setting"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["setting",b"setting"]) -> None: ...
global___UpdateSettingRequest = UpdateSettingRequest
