"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.gkebackup.logging.v1.logged_backup_pb2
import google.cloud.gkebackup.logging.v1.logged_backup_plan_pb2
import google.cloud.gkebackup.logging.v1.logged_restore_pb2
import google.cloud.gkebackup.logging.v1.logged_restore_plan_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _ChangeType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _ChangeTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ChangeType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    CHANGE_TYPE_UNSPECIFIED: ChangeType.ValueType = ...  # 0
    """Default value, not specified."""

    CREATION: ChangeType.ValueType = ...  # 1
    """The resource is created."""

    UPDATE: ChangeType.ValueType = ...  # 2
    """The resource is updated."""

    DELETION: ChangeType.ValueType = ...  # 3
    """The resource is deleted."""

class ChangeType(_ChangeType, metaclass=_ChangeTypeEnumTypeWrapper):
    """The type of changes this log is about."""
    pass

CHANGE_TYPE_UNSPECIFIED: ChangeType.ValueType = ...  # 0
"""Default value, not specified."""

CREATION: ChangeType.ValueType = ...  # 1
"""The resource is created."""

UPDATE: ChangeType.ValueType = ...  # 2
"""The resource is updated."""

DELETION: ChangeType.ValueType = ...  # 3
"""The resource is deleted."""

global___ChangeType = ChangeType


class BackupPlanChange(google.protobuf.message.Message):
    """use case 1
    A log entry when modification(creation, update, deletion) is made to a
    BackupPlan
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKUP_PLAN_FIELD_NUMBER: builtins.int
    CHANGE_TYPE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    INPUT_BACKUP_PLAN_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    backup_plan: typing.Text = ...
    """The full name of the old BackupPlan resource that is being modified.
    Empty for creation.
    Format: projects/{project}/locations/{location}/backupPlans/{backup_plan}
    """

    change_type: global___ChangeType.ValueType = ...
    """Type of the change is being made."""

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Modification details."""
        pass
    @property
    def input_backup_plan(self) -> google.cloud.gkebackup.logging.v1.logged_backup_plan_pb2.LoggedBackupPlan:
        """The input BackupPlan resource with the updated fields populated to update
        the source BackupPlan to.
        """
        pass
    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """The error code and message."""
        pass
    def __init__(self,
        *,
        backup_plan : typing.Text = ...,
        change_type : global___ChangeType.ValueType = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        input_backup_plan : typing.Optional[google.cloud.gkebackup.logging.v1.logged_backup_plan_pb2.LoggedBackupPlan] = ...,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","input_backup_plan",b"input_backup_plan","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup_plan",b"backup_plan","change_type",b"change_type","error",b"error","input_backup_plan",b"input_backup_plan","update_mask",b"update_mask"]) -> None: ...
global___BackupPlanChange = BackupPlanChange

class BackupChange(google.protobuf.message.Message):
    """use case 2
    A log entry when modification(creation, update, deletion) is made to a
    Backup
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKUP_FIELD_NUMBER: builtins.int
    CHANGE_TYPE_FIELD_NUMBER: builtins.int
    SCHEDULED_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    INPUT_BACKUP_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    backup: typing.Text = ...
    """The full name of the Backup resource that is being modified.
    Format:
    projects/{project}/locations/{location}/backupPlans/{backup_plan}/backups/{backup}
    """

    change_type: global___ChangeType.ValueType = ...
    """Type of the change is being made."""

    scheduled: builtins.bool = ...
    """Whether the change is made manually or automatically."""

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Modification details."""
        pass
    @property
    def input_backup(self) -> google.cloud.gkebackup.logging.v1.logged_backup_pb2.LoggedBackup:
        """The input Backup resource with the updated fields populated to update
        the source Backup to, or the backup created automatically from retention
        policy.
        """
        pass
    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """The error code and message."""
        pass
    def __init__(self,
        *,
        backup : typing.Text = ...,
        change_type : global___ChangeType.ValueType = ...,
        scheduled : builtins.bool = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        input_backup : typing.Optional[google.cloud.gkebackup.logging.v1.logged_backup_pb2.LoggedBackup] = ...,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","input_backup",b"input_backup","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backup",b"backup","change_type",b"change_type","error",b"error","input_backup",b"input_backup","scheduled",b"scheduled","update_mask",b"update_mask"]) -> None: ...
global___BackupChange = BackupChange

class RestorePlanChange(google.protobuf.message.Message):
    """use case 3
    A log entry when modification(creation, update, deletion) is made to a
    restorePlan.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESTORE_PLAN_FIELD_NUMBER: builtins.int
    CHANGE_TYPE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    INPUT_RESTORE_PLAN_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    restore_plan: typing.Text = ...
    """The full name of the RestorePlan resource that is being modified.
    Empty for creation.
    Format: projects/*/locations/*/restorePlans/*
    """

    change_type: global___ChangeType.ValueType = ...
    """Type of the change is being made."""

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Modification details."""
        pass
    @property
    def input_restore_plan(self) -> google.cloud.gkebackup.logging.v1.logged_restore_plan_pb2.LoggedRestorePlan:
        """The input RestorePlan resource with the updated fields populated to update
        the source RestorePlan to.
        """
        pass
    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """The error code and message."""
        pass
    def __init__(self,
        *,
        restore_plan : typing.Text = ...,
        change_type : global___ChangeType.ValueType = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        input_restore_plan : typing.Optional[google.cloud.gkebackup.logging.v1.logged_restore_plan_pb2.LoggedRestorePlan] = ...,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","input_restore_plan",b"input_restore_plan","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["change_type",b"change_type","error",b"error","input_restore_plan",b"input_restore_plan","restore_plan",b"restore_plan","update_mask",b"update_mask"]) -> None: ...
global___RestorePlanChange = RestorePlanChange

class RestoreChange(google.protobuf.message.Message):
    """use case 4
    A log entry when modification(creation, update, deletion) is made to a
    restore.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESTORE_FIELD_NUMBER: builtins.int
    CHANGE_TYPE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    INPUT_RESTORE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    restore: typing.Text = ...
    """The full name of the Restore resource that is being modified.
    Empty for creation.
    Format: projects/*/locations/*/restorePlans/*/restores/*
    """

    change_type: global___ChangeType.ValueType = ...
    """Type of the change is being made."""

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Modification details."""
        pass
    @property
    def input_restore(self) -> google.cloud.gkebackup.logging.v1.logged_restore_pb2.LoggedRestore:
        """The input Restore resource with the updated fields populated to update
        the source Restore to.
        """
        pass
    @property
    def error(self) -> google.rpc.status_pb2.Status:
        """The error code and message."""
        pass
    def __init__(self,
        *,
        restore : typing.Text = ...,
        change_type : global___ChangeType.ValueType = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        input_restore : typing.Optional[google.cloud.gkebackup.logging.v1.logged_restore_pb2.LoggedRestore] = ...,
        error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error",b"error","input_restore",b"input_restore","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["change_type",b"change_type","error",b"error","input_restore",b"input_restore","restore",b"restore","update_mask",b"update_mask"]) -> None: ...
global___RestoreChange = RestoreChange
