"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.talent.v4beta1.common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import google.type.date_pb2
import google.type.postal_address_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Profile(google.protobuf.message.Message):
    """Cloud Profile Discovery API definition

    A resource that represents the profile for a job candidate (also referred to
    as a "single-source profile").
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CustomAttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> google.cloud.talent.v4beta1.common_pb2.CustomAttribute: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[google.cloud.talent.v4beta1.common_pb2.CustomAttribute] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    EXTERNAL_ID_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    GROUP_ID_FIELD_NUMBER: builtins.int
    IS_HIRABLE_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    CANDIDATE_UPDATE_TIME_FIELD_NUMBER: builtins.int
    RESUME_UPDATE_TIME_FIELD_NUMBER: builtins.int
    RESUME_FIELD_NUMBER: builtins.int
    PERSON_NAMES_FIELD_NUMBER: builtins.int
    ADDRESSES_FIELD_NUMBER: builtins.int
    EMAIL_ADDRESSES_FIELD_NUMBER: builtins.int
    PHONE_NUMBERS_FIELD_NUMBER: builtins.int
    PERSONAL_URIS_FIELD_NUMBER: builtins.int
    ADDITIONAL_CONTACT_INFO_FIELD_NUMBER: builtins.int
    EMPLOYMENT_RECORDS_FIELD_NUMBER: builtins.int
    EDUCATION_RECORDS_FIELD_NUMBER: builtins.int
    SKILLS_FIELD_NUMBER: builtins.int
    ACTIVITIES_FIELD_NUMBER: builtins.int
    PUBLICATIONS_FIELD_NUMBER: builtins.int
    PATENTS_FIELD_NUMBER: builtins.int
    CERTIFICATIONS_FIELD_NUMBER: builtins.int
    APPLICATIONS_FIELD_NUMBER: builtins.int
    ASSIGNMENTS_FIELD_NUMBER: builtins.int
    CUSTOM_ATTRIBUTES_FIELD_NUMBER: builtins.int
    PROCESSED_FIELD_NUMBER: builtins.int
    KEYWORD_SNIPPET_FIELD_NUMBER: builtins.int
    AVAILABILITY_SIGNALS_FIELD_NUMBER: builtins.int
    DERIVED_ADDRESSES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required during profile update.

    Resource name assigned to a profile by the API.

    The format is
    "projects/{project_id}/tenants/{tenant_id}/profiles/{profile_id}",
    for example, "projects/foo/tenants/bar/profiles/baz".
    """

    external_id: typing.Text = ...
    """Profile's id in client system, if available. This value is unique for each
    profile inside a tenant. An error is thrown if another profile with the
    same external_id is created.

    The maximum number of bytes allowed is 100.
    """

    source: typing.Text = ...
    """The source description indicating where the profile is acquired.

    For example, if a candidate profile is acquired from a resume, the user can
    input "resume" here to indicate the source.

    The maximum number of bytes allowed is 100.
    """

    uri: typing.Text = ...
    """The URI set by clients that links to this profile's client-side copy.

    The maximum number of bytes allowed is 4000.
    """

    group_id: typing.Text = ...
    """The cluster id of the profile to associate with other profile(s) for the
    same candidate.

    This field should be generated by the customer. If a value is not provided,
    a random UUID is assigned to this field of the profile.

    This is used to link multiple profiles to the same candidate. For example,
    a client has a candidate with two profiles, where one was created recently
    and the other one was created 5 years ago. These two profiles may be very
    different. The clients can create the first profile and get a generated
    [group_id][google.cloud.talent.v4beta1.Profile.group_id], and assign it when the second profile is created,
    indicating these two profiles are referring to the same candidate.
    """

    @property
    def is_hirable(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Indicates the hirable status of the candidate."""
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp when the profile was first created at this source."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp when the profile was last updated at this source."""
        pass
    @property
    def candidate_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp when the profile was last updated as a result of a direct or
        indirect action by a candidate.

        These actions include:

        * Direct actions such as the candidate submitting a new resume as part of a
        job application to the agency, using a self-service tool such as a website
        to update their profile, and so on.
        * Indirect actions by the candidate such as uploading a resume to a job
        board that is collected by the agency through a feed, providing a resume to
        a recruiter who then uploads it into the ATS, and so on.
        * Updates made to the candidate's profile by the recruiter as a result of
        interacting with the candidate (for example adding a skill or work
        preference, and so on). Changes to [recruiting_notes][google.cloud.talent.v4beta1.Profile.recruiting_notes] are specifically
        excluded from this action type.

        Note: [candidate_update_time][google.cloud.talent.v4beta1.Profile.candidate_update_time] must be greater than or equal to
        [resume_update_time][google.cloud.talent.v4beta1.Profile.resume_update_time] or an error is thrown.
        """
        pass
    @property
    def resume_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The timestamp when the candidate's resume was added or updated on the
        candidate's profile. Whether that resume was directly uploaded by a
        candidate, pulled from a 3rd party job board feed, added by a recruiter,
        and so on.

        If this field is updated, it's expected that [resume][google.cloud.talent.v4beta1.Profile.resume] is provided in
        the create or update calls.
        """
        pass
    @property
    def resume(self) -> global___Resume:
        """The resume representing this profile."""
        pass
    @property
    def person_names(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PersonName]:
        """The names of the candidate this profile references.

        Currently only one person name is supported.
        """
        pass
    @property
    def addresses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Address]:
        """The candidate's postal addresses. It's highly recommended to
        input this information as accurately as possible to help improve search
        quality. Here are some recommendations:

        * Provide [Address.usage][google.cloud.talent.v4beta1.Address.usage] if possible, especially if the address is
        PERSONAL. During a search only personal addresses are considered. If there
        is no such address, all addresses with unspecified usage are assumed to be
        personal.
        * Provide [Address.current][google.cloud.talent.v4beta1.Address.current] for the current address if possible. During
        a search, only current addresses are considered. If there is no such
        address, all addresses are assumed to be current.

        When displaying a candidate's addresses, it is sometimes desirable to limit
        the number of addresses shown. In these cases we recommend that you display
        the addresses in the following order of priority:
        1. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
        2. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is PERSONAL and [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not
        set.
        3. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
        [Address.current][google.cloud.talent.v4beta1.Address.current] is true.
        4. [Address.usage][google.cloud.talent.v4beta1.Address.usage] is CONTACT_INFO_USAGE_UNSPECIFIED and
        [Address.current][google.cloud.talent.v4beta1.Address.current] is false or not set.
        """
        pass
    @property
    def email_addresses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Email]:
        """The candidate's email addresses."""
        pass
    @property
    def phone_numbers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Phone]:
        """The candidate's phone number(s)."""
        pass
    @property
    def personal_uris(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PersonalUri]:
        """The candidate's personal URIs."""
        pass
    @property
    def additional_contact_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AdditionalContactInfo]:
        """Available contact information besides [addresses][google.cloud.talent.v4beta1.Profile.addresses], [email_addresses][google.cloud.talent.v4beta1.Profile.email_addresses],
        [phone_numbers][google.cloud.talent.v4beta1.Profile.phone_numbers] and [personal_uris][google.cloud.talent.v4beta1.Profile.personal_uris]. For example, Hang-out, Skype.
        """
        pass
    @property
    def employment_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EmploymentRecord]:
        """The employment history records of the candidate. It's highly recommended
        to input this information as accurately as possible to help improve search
        quality. Here are some recommendations:

        * Specify the start and end dates of the employment records.
        * List different employment types separately, no matter how minor the
        change is.
        For example, only job title is changed from "software engineer" to "senior
        software engineer".
        * Provide [EmploymentRecord.is_current][google.cloud.talent.v4beta1.EmploymentRecord.is_current] for the current employment if
        possible. If not, it's inferred from user inputs.

        The limitation for max number of employment records is 100.
        """
        pass
    @property
    def education_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EducationRecord]:
        """The education history record of the candidate. It's highly recommended to
        input this information as accurately as possible to help improve search
        quality. Here are some recommendations:

        * Specify the start and end dates of the education records.
        * List each education type separately, no matter how minor the change is.
        For example, the profile contains the education experience from the same
        school but different degrees.
        * Provide [EducationRecord.is_current][google.cloud.talent.v4beta1.EducationRecord.is_current] for the current education if
        possible. If not, it's inferred from user inputs.

        The limitation for max number of education records is 100.
        """
        pass
    @property
    def skills(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.talent.v4beta1.common_pb2.Skill]:
        """The skill set of the candidate. It's highly recommended to provide as
        much information as possible to help improve the search quality.

        The limitation for max number of skills is 500.
        """
        pass
    @property
    def activities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Activity]:
        """The individual or collaborative activities which the candidate has
        participated in, for example, open-source projects, class assignments that
        aren't listed in [employment_records][google.cloud.talent.v4beta1.Profile.employment_records].

        The limitation for max number of activities is 50.
        """
        pass
    @property
    def publications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Publication]:
        """The publications published by the candidate.

        The limitation for max number of publications is 50.
        """
        pass
    @property
    def patents(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Patent]:
        """The patents acquired by the candidate."""
        pass
    @property
    def certifications(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.talent.v4beta1.common_pb2.Certification]:
        """The certifications acquired by the candidate."""
        pass
    @property
    def applications(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Output only. The resource names of the candidate's applications."""
        pass
    @property
    def assignments(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Output only. The resource names of the candidate's assignments."""
        pass
    @property
    def custom_attributes(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.cloud.talent.v4beta1.common_pb2.CustomAttribute]:
        """A map of fields to hold both filterable and non-filterable custom profile
        attributes that aren't covered by the provided structured fields. See
        [CustomAttribute][google.cloud.talent.v4beta1.CustomAttribute] for more details.

        At most 100 filterable and at most 100 unfilterable keys are supported. If
        limit is exceeded, an error is thrown. Custom attributes are `unfilterable`
        by default. These are filterable when the `filterable` flag is set to
        `true`.

        Numeric custom attributes: each key can only map to one numeric value,
        otherwise an error is thrown. Client can also filter on numeric custom
        attributes using '>', '<' or '=' operators.

        String custom attributes: each key can map up to 50 string values. For
        filterable string value, each value has a byte size of no more than 256B.
        For unfilterable string values, the maximum byte size of a single key is
        64B. An error is thrown for any request exceeding the limit.
        The maximum total byte size is 10KB.
        """
        pass
    processed: builtins.bool = ...
    """Output only. Indicates if a summarized profile was created as part of the
    profile creation API call. This flag does not indicate whether a profile is
    searchable or not.
    """

    keyword_snippet: typing.Text = ...
    """Output only. Keyword snippet shows how the search result is related to a
    search query.  This is only returned in [SearchProfilesResponse][google.cloud.talent.v4beta1.SearchProfilesResponse].
    """

    @property
    def availability_signals(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AvailabilitySignal]:
        """Output only. Candidate's availability signals."""
        pass
    @property
    def derived_addresses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.talent.v4beta1.common_pb2.Location]:
        """Output only. Derived locations of the profile, resolved from [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses].

        [derived_addresses][google.cloud.talent.v4beta1.Profile.derived_addresses] are exactly matched to [Profile.addresses][google.cloud.talent.v4beta1.Profile.addresses] in the
        same order.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        external_id : typing.Text = ...,
        source : typing.Text = ...,
        uri : typing.Text = ...,
        group_id : typing.Text = ...,
        is_hirable : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        candidate_update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        resume_update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        resume : typing.Optional[global___Resume] = ...,
        person_names : typing.Optional[typing.Iterable[global___PersonName]] = ...,
        addresses : typing.Optional[typing.Iterable[global___Address]] = ...,
        email_addresses : typing.Optional[typing.Iterable[global___Email]] = ...,
        phone_numbers : typing.Optional[typing.Iterable[global___Phone]] = ...,
        personal_uris : typing.Optional[typing.Iterable[global___PersonalUri]] = ...,
        additional_contact_info : typing.Optional[typing.Iterable[global___AdditionalContactInfo]] = ...,
        employment_records : typing.Optional[typing.Iterable[global___EmploymentRecord]] = ...,
        education_records : typing.Optional[typing.Iterable[global___EducationRecord]] = ...,
        skills : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.common_pb2.Skill]] = ...,
        activities : typing.Optional[typing.Iterable[global___Activity]] = ...,
        publications : typing.Optional[typing.Iterable[global___Publication]] = ...,
        patents : typing.Optional[typing.Iterable[global___Patent]] = ...,
        certifications : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.common_pb2.Certification]] = ...,
        applications : typing.Optional[typing.Iterable[typing.Text]] = ...,
        assignments : typing.Optional[typing.Iterable[typing.Text]] = ...,
        custom_attributes : typing.Optional[typing.Mapping[typing.Text, google.cloud.talent.v4beta1.common_pb2.CustomAttribute]] = ...,
        processed : builtins.bool = ...,
        keyword_snippet : typing.Text = ...,
        availability_signals : typing.Optional[typing.Iterable[global___AvailabilitySignal]] = ...,
        derived_addresses : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.common_pb2.Location]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["candidate_update_time",b"candidate_update_time","create_time",b"create_time","is_hirable",b"is_hirable","resume",b"resume","resume_update_time",b"resume_update_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["activities",b"activities","additional_contact_info",b"additional_contact_info","addresses",b"addresses","applications",b"applications","assignments",b"assignments","availability_signals",b"availability_signals","candidate_update_time",b"candidate_update_time","certifications",b"certifications","create_time",b"create_time","custom_attributes",b"custom_attributes","derived_addresses",b"derived_addresses","education_records",b"education_records","email_addresses",b"email_addresses","employment_records",b"employment_records","external_id",b"external_id","group_id",b"group_id","is_hirable",b"is_hirable","keyword_snippet",b"keyword_snippet","name",b"name","patents",b"patents","person_names",b"person_names","personal_uris",b"personal_uris","phone_numbers",b"phone_numbers","processed",b"processed","publications",b"publications","resume",b"resume","resume_update_time",b"resume_update_time","skills",b"skills","source",b"source","update_time",b"update_time","uri",b"uri"]) -> None: ...
global___Profile = Profile

class AvailabilitySignal(google.protobuf.message.Message):
    """Candidate availability signal."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    LAST_UPDATE_TIME_FIELD_NUMBER: builtins.int
    FILTER_SATISFIED_FIELD_NUMBER: builtins.int
    type: google.cloud.talent.v4beta1.common_pb2.AvailabilitySignalType.ValueType = ...
    """Type of signal."""

    @property
    def last_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of when the given availability activity last happened."""
        pass
    @property
    def filter_satisfied(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Indicates if the [last_update_time][google.cloud.talent.v4beta1.AvailabilitySignal.last_update_time] is within
        [AvailabilityFilter.range][google.cloud.talent.v4beta1.AvailabilityFilter.range].

        Returned only in a search response when there is an [AvailabilityFilter][google.cloud.talent.v4beta1.AvailabilityFilter]
        in [ProfileQuery.availability_filters][google.cloud.talent.v4beta1.ProfileQuery.availability_filters] where
        [signal_type][google.cloud.talent.v4beta1.AvailabilityFilter.signal_type] matches [type][google.cloud.talent.v4beta1.AvailabilitySignal.type].
        """
        pass
    def __init__(self,
        *,
        type : google.cloud.talent.v4beta1.common_pb2.AvailabilitySignalType.ValueType = ...,
        last_update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        filter_satisfied : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["filter_satisfied",b"filter_satisfied","last_update_time",b"last_update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter_satisfied",b"filter_satisfied","last_update_time",b"last_update_time","type",b"type"]) -> None: ...
global___AvailabilitySignal = AvailabilitySignal

class Resume(google.protobuf.message.Message):
    """Resource that represents a resume."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ResumeType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ResumeTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ResumeType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        RESUME_TYPE_UNSPECIFIED: Resume.ResumeType.ValueType = ...  # 0
        """Default value."""

        HRXML: Resume.ResumeType.ValueType = ...  # 1
        """The profile contents in HR-XML format.
        See https://schemas.liquid-technologies.com/hr-xml/2007-04-15/ for more
        information about Human Resources XML.
        """

        OTHER_RESUME_TYPE: Resume.ResumeType.ValueType = ...  # 2
        """Resume type not specified."""

    class ResumeType(_ResumeType, metaclass=_ResumeTypeEnumTypeWrapper):
        """The format of a structured resume."""
        pass

    RESUME_TYPE_UNSPECIFIED: Resume.ResumeType.ValueType = ...  # 0
    """Default value."""

    HRXML: Resume.ResumeType.ValueType = ...  # 1
    """The profile contents in HR-XML format.
    See https://schemas.liquid-technologies.com/hr-xml/2007-04-15/ for more
    information about Human Resources XML.
    """

    OTHER_RESUME_TYPE: Resume.ResumeType.ValueType = ...  # 2
    """Resume type not specified."""


    STRUCTURED_RESUME_FIELD_NUMBER: builtins.int
    RESUME_TYPE_FIELD_NUMBER: builtins.int
    structured_resume: typing.Text = ...
    """Users can create a profile with only this field field, if [resume_type][google.cloud.talent.v4beta1.Resume.resume_type]
    is [HRXML][google.cloud.talent.v4beta1.Resume.ResumeType.HRXML]. For example, the API parses this field and
    creates a profile
    with all structured fields populated. [EmploymentRecord][google.cloud.talent.v4beta1.EmploymentRecord],
    [EducationRecord][google.cloud.talent.v4beta1.EducationRecord], and so on. An error is thrown if this field cannot be
    parsed.

    Note that the use of the functionality offered by this field to extract
    data from resumes is an Alpha feature and as such is not covered by any
    SLA.
    """

    resume_type: global___Resume.ResumeType.ValueType = ...
    """The format of [structured_resume][google.cloud.talent.v4beta1.Resume.structured_resume]."""

    def __init__(self,
        *,
        structured_resume : typing.Text = ...,
        resume_type : global___Resume.ResumeType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resume_type",b"resume_type","structured_resume",b"structured_resume"]) -> None: ...
global___Resume = Resume

class PersonName(google.protobuf.message.Message):
    """Resource that represents the name of a person."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PersonStructuredName(google.protobuf.message.Message):
        """Resource that represents a person's structured name."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        GIVEN_NAME_FIELD_NUMBER: builtins.int
        PREFERRED_NAME_FIELD_NUMBER: builtins.int
        MIDDLE_INITIAL_FIELD_NUMBER: builtins.int
        FAMILY_NAME_FIELD_NUMBER: builtins.int
        SUFFIXES_FIELD_NUMBER: builtins.int
        PREFIXES_FIELD_NUMBER: builtins.int
        given_name: typing.Text = ...
        """Given/first name.

        It's derived from [formatted_name][google.cloud.talent.v4beta1.PersonName.formatted_name] if not provided.

        Number of characters allowed is 100.
        """

        preferred_name: typing.Text = ...
        """Preferred given/first name or nickname.

        Number of characters allowed is 100.
        """

        middle_initial: typing.Text = ...
        """Middle initial.

        It's derived from [formatted_name][google.cloud.talent.v4beta1.PersonName.formatted_name] if not provided.

        Number of characters allowed is 20.
        """

        family_name: typing.Text = ...
        """Family/last name.

        It's derived from [formatted_name][google.cloud.talent.v4beta1.PersonName.formatted_name] if not provided.

        Number of characters allowed is 100.
        """

        @property
        def suffixes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Suffixes.

            Number of characters allowed is 20.
            """
            pass
        @property
        def prefixes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Prefixes.

            Number of characters allowed is 20.
            """
            pass
        def __init__(self,
            *,
            given_name : typing.Text = ...,
            preferred_name : typing.Text = ...,
            middle_initial : typing.Text = ...,
            family_name : typing.Text = ...,
            suffixes : typing.Optional[typing.Iterable[typing.Text]] = ...,
            prefixes : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["family_name",b"family_name","given_name",b"given_name","middle_initial",b"middle_initial","preferred_name",b"preferred_name","prefixes",b"prefixes","suffixes",b"suffixes"]) -> None: ...

    FORMATTED_NAME_FIELD_NUMBER: builtins.int
    STRUCTURED_NAME_FIELD_NUMBER: builtins.int
    PREFERRED_NAME_FIELD_NUMBER: builtins.int
    formatted_name: typing.Text = ...
    """A string represents a person's full name. For example, "Dr. John Smith".

    Number of characters allowed is 100.
    """

    @property
    def structured_name(self) -> global___PersonName.PersonStructuredName:
        """A person's name in a structured way (last name, first name, suffix, and
        so on.)
        """
        pass
    preferred_name: typing.Text = ...
    """Preferred name for the person. This field is ignored if [structured_name][google.cloud.talent.v4beta1.PersonName.structured_name]
    is provided.

    Number of characters allowed is 100.
    """

    def __init__(self,
        *,
        formatted_name : typing.Text = ...,
        structured_name : typing.Optional[global___PersonName.PersonStructuredName] = ...,
        preferred_name : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["formatted_name",b"formatted_name","person_name",b"person_name","structured_name",b"structured_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["formatted_name",b"formatted_name","person_name",b"person_name","preferred_name",b"preferred_name","structured_name",b"structured_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["person_name",b"person_name"]) -> typing.Optional[typing_extensions.Literal["formatted_name","structured_name"]]: ...
global___PersonName = PersonName

class Address(google.protobuf.message.Message):
    """Resource that represents a address."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USAGE_FIELD_NUMBER: builtins.int
    UNSTRUCTURED_ADDRESS_FIELD_NUMBER: builtins.int
    STRUCTURED_ADDRESS_FIELD_NUMBER: builtins.int
    CURRENT_FIELD_NUMBER: builtins.int
    usage: google.cloud.talent.v4beta1.common_pb2.ContactInfoUsage.ValueType = ...
    """The usage of the address. For example, SCHOOL, WORK, PERSONAL."""

    unstructured_address: typing.Text = ...
    """Unstructured address.

    For example, "1600 Amphitheatre Pkwy, Mountain View, CA 94043",
    "Sunnyvale, California".

    Number of characters allowed is 100.
    """

    @property
    def structured_address(self) -> google.type.postal_address_pb2.PostalAddress:
        """Structured address that contains street address, city, state, country,
        and so on.
        """
        pass
    @property
    def current(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """Indicates if it's the person's current address."""
        pass
    def __init__(self,
        *,
        usage : google.cloud.talent.v4beta1.common_pb2.ContactInfoUsage.ValueType = ...,
        unstructured_address : typing.Text = ...,
        structured_address : typing.Optional[google.type.postal_address_pb2.PostalAddress] = ...,
        current : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["address",b"address","current",b"current","structured_address",b"structured_address","unstructured_address",b"unstructured_address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","current",b"current","structured_address",b"structured_address","unstructured_address",b"unstructured_address","usage",b"usage"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["address",b"address"]) -> typing.Optional[typing_extensions.Literal["unstructured_address","structured_address"]]: ...
global___Address = Address

class Email(google.protobuf.message.Message):
    """Resource that represents a person's email address."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USAGE_FIELD_NUMBER: builtins.int
    EMAIL_ADDRESS_FIELD_NUMBER: builtins.int
    usage: google.cloud.talent.v4beta1.common_pb2.ContactInfoUsage.ValueType = ...
    """The usage of the email address. For example, SCHOOL, WORK, PERSONAL."""

    email_address: typing.Text = ...
    """Email address.

    Number of characters allowed is 4,000.
    """

    def __init__(self,
        *,
        usage : google.cloud.talent.v4beta1.common_pb2.ContactInfoUsage.ValueType = ...,
        email_address : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["email_address",b"email_address","usage",b"usage"]) -> None: ...
global___Email = Email

class Phone(google.protobuf.message.Message):
    """Resource that represents a person's telephone number."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PhoneType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PhoneTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PhoneType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PHONE_TYPE_UNSPECIFIED: Phone.PhoneType.ValueType = ...  # 0
        """Default value."""

        LANDLINE: Phone.PhoneType.ValueType = ...  # 1
        """A landline."""

        MOBILE: Phone.PhoneType.ValueType = ...  # 2
        """A mobile."""

        FAX: Phone.PhoneType.ValueType = ...  # 3
        """A fax."""

        PAGER: Phone.PhoneType.ValueType = ...  # 4
        """A pager."""

        TTY_OR_TDD: Phone.PhoneType.ValueType = ...  # 5
        """A TTY (test telephone) or TDD (telecommunication device for the deaf)."""

        VOICEMAIL: Phone.PhoneType.ValueType = ...  # 6
        """A voicemail."""

        VIRTUAL: Phone.PhoneType.ValueType = ...  # 7
        """A virtual telephone number is a number that can be routed to another
        number and managed by the user via Web, SMS, IVR, and so on.  It is
        associated with a particular person, and may be routed to either a MOBILE
        or LANDLINE number. The [phone usage][google.cloud.talent.v4beta1.ContactInfoUsage] should
        be set to PERSONAL for these phone types. Some more information can be
        found here: https://en.wikipedia.org/wiki/Personal_Numbers
        """

        VOIP: Phone.PhoneType.ValueType = ...  # 8
        """Voice over IP numbers. This includes TSoIP (Telephony Service over IP)."""

        MOBILE_OR_LANDLINE: Phone.PhoneType.ValueType = ...  # 9
        """In some regions (e.g. the USA), it is impossible to distinguish between
        fixed-line and mobile numbers by looking at the phone number itself.
        """

    class PhoneType(_PhoneType, metaclass=_PhoneTypeEnumTypeWrapper):
        """Enum that represents the type of the telephone."""
        pass

    PHONE_TYPE_UNSPECIFIED: Phone.PhoneType.ValueType = ...  # 0
    """Default value."""

    LANDLINE: Phone.PhoneType.ValueType = ...  # 1
    """A landline."""

    MOBILE: Phone.PhoneType.ValueType = ...  # 2
    """A mobile."""

    FAX: Phone.PhoneType.ValueType = ...  # 3
    """A fax."""

    PAGER: Phone.PhoneType.ValueType = ...  # 4
    """A pager."""

    TTY_OR_TDD: Phone.PhoneType.ValueType = ...  # 5
    """A TTY (test telephone) or TDD (telecommunication device for the deaf)."""

    VOICEMAIL: Phone.PhoneType.ValueType = ...  # 6
    """A voicemail."""

    VIRTUAL: Phone.PhoneType.ValueType = ...  # 7
    """A virtual telephone number is a number that can be routed to another
    number and managed by the user via Web, SMS, IVR, and so on.  It is
    associated with a particular person, and may be routed to either a MOBILE
    or LANDLINE number. The [phone usage][google.cloud.talent.v4beta1.ContactInfoUsage] should
    be set to PERSONAL for these phone types. Some more information can be
    found here: https://en.wikipedia.org/wiki/Personal_Numbers
    """

    VOIP: Phone.PhoneType.ValueType = ...  # 8
    """Voice over IP numbers. This includes TSoIP (Telephony Service over IP)."""

    MOBILE_OR_LANDLINE: Phone.PhoneType.ValueType = ...  # 9
    """In some regions (e.g. the USA), it is impossible to distinguish between
    fixed-line and mobile numbers by looking at the phone number itself.
    """


    USAGE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    NUMBER_FIELD_NUMBER: builtins.int
    WHEN_AVAILABLE_FIELD_NUMBER: builtins.int
    usage: google.cloud.talent.v4beta1.common_pb2.ContactInfoUsage.ValueType = ...
    """The usage of the phone. For example, SCHOOL, WORK, PERSONAL."""

    type: global___Phone.PhoneType.ValueType = ...
    """The phone type. For example, LANDLINE, MOBILE, FAX."""

    number: typing.Text = ...
    """Phone number.

    Any phone formats are supported and only exact matches are performed on
    searches. For example, if a phone number in profile is provided in the
    format of "(xxx)xxx-xxxx", in profile searches the same phone format
    has to be provided.

    Number of characters allowed is 20.
    """

    when_available: typing.Text = ...
    """When this number is available. Any descriptive string is expected.

    Number of characters allowed is 100.
    """

    def __init__(self,
        *,
        usage : google.cloud.talent.v4beta1.common_pb2.ContactInfoUsage.ValueType = ...,
        type : global___Phone.PhoneType.ValueType = ...,
        number : typing.Text = ...,
        when_available : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["number",b"number","type",b"type","usage",b"usage","when_available",b"when_available"]) -> None: ...
global___Phone = Phone

class PersonalUri(google.protobuf.message.Message):
    """Resource that represents a valid URI for a personal use."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URI_FIELD_NUMBER: builtins.int
    uri: typing.Text = ...
    """The personal URI.

    Number of characters allowed is 4,000.
    """

    def __init__(self,
        *,
        uri : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...
global___PersonalUri = PersonalUri

class AdditionalContactInfo(google.protobuf.message.Message):
    """Resource that represents contact information other than phone, email,
    URI and addresses.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USAGE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CONTACT_ID_FIELD_NUMBER: builtins.int
    usage: google.cloud.talent.v4beta1.common_pb2.ContactInfoUsage.ValueType = ...
    """The usage of this contact method. For example, SCHOOL, WORK, PERSONAL."""

    name: typing.Text = ...
    """The name of the contact method.

    For example, "hangout", "skype".

    Number of characters allowed is 100.
    """

    contact_id: typing.Text = ...
    """The contact id.

    Number of characters allowed is 100.
    """

    def __init__(self,
        *,
        usage : google.cloud.talent.v4beta1.common_pb2.ContactInfoUsage.ValueType = ...,
        name : typing.Text = ...,
        contact_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["contact_id",b"contact_id","name",b"name","usage",b"usage"]) -> None: ...
global___AdditionalContactInfo = AdditionalContactInfo

class EmploymentRecord(google.protobuf.message.Message):
    """Resource that represents an employment record of a candidate."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_DATE_FIELD_NUMBER: builtins.int
    END_DATE_FIELD_NUMBER: builtins.int
    EMPLOYER_NAME_FIELD_NUMBER: builtins.int
    DIVISION_NAME_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    JOB_TITLE_FIELD_NUMBER: builtins.int
    JOB_DESCRIPTION_FIELD_NUMBER: builtins.int
    IS_SUPERVISOR_FIELD_NUMBER: builtins.int
    IS_SELF_EMPLOYED_FIELD_NUMBER: builtins.int
    IS_CURRENT_FIELD_NUMBER: builtins.int
    JOB_TITLE_SNIPPET_FIELD_NUMBER: builtins.int
    JOB_DESCRIPTION_SNIPPET_FIELD_NUMBER: builtins.int
    EMPLOYER_NAME_SNIPPET_FIELD_NUMBER: builtins.int
    @property
    def start_date(self) -> google.type.date_pb2.Date:
        """Start date of the employment."""
        pass
    @property
    def end_date(self) -> google.type.date_pb2.Date:
        """End date of the employment."""
        pass
    employer_name: typing.Text = ...
    """The name of the employer company/organization.

    For example, "Google", "Alphabet", and so on.

    Number of characters allowed is 250.
    """

    division_name: typing.Text = ...
    """The division name of the employment.

    For example, division, department, client, and so on.

    Number of characters allowed is 100.
    """

    @property
    def address(self) -> global___Address:
        """The physical address of the employer."""
        pass
    job_title: typing.Text = ...
    """The job title of the employment.

    For example, "Software Engineer", "Data Scientist", and so on.

    Number of characters allowed is 250.
    """

    job_description: typing.Text = ...
    """The description of job content.

    Number of characters allowed is 100,000.
    """

    @property
    def is_supervisor(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """If the jobs is a supervisor position."""
        pass
    @property
    def is_self_employed(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """If this employment is self-employed."""
        pass
    @property
    def is_current(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """If this employment is current."""
        pass
    job_title_snippet: typing.Text = ...
    """Output only. The job title snippet shows how the [job_title][google.cloud.talent.v4beta1.EmploymentRecord.job_title] is related
    to a search query. It's empty if the [job_title][google.cloud.talent.v4beta1.EmploymentRecord.job_title] isn't related to the
    search query.
    """

    job_description_snippet: typing.Text = ...
    """Output only. The job description snippet shows how the [job_description][google.cloud.talent.v4beta1.EmploymentRecord.job_description]
    is related to a search query. It's empty if the [job_description][google.cloud.talent.v4beta1.EmploymentRecord.job_description] isn't
    related to the search query.
    """

    employer_name_snippet: typing.Text = ...
    """Output only. The employer name snippet shows how the [employer_name][google.cloud.talent.v4beta1.EmploymentRecord.employer_name] is
    related to a search query. It's empty if the [employer_name][google.cloud.talent.v4beta1.EmploymentRecord.employer_name] isn't
    related to the search query.
    """

    def __init__(self,
        *,
        start_date : typing.Optional[google.type.date_pb2.Date] = ...,
        end_date : typing.Optional[google.type.date_pb2.Date] = ...,
        employer_name : typing.Text = ...,
        division_name : typing.Text = ...,
        address : typing.Optional[global___Address] = ...,
        job_title : typing.Text = ...,
        job_description : typing.Text = ...,
        is_supervisor : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        is_self_employed : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        is_current : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        job_title_snippet : typing.Text = ...,
        job_description_snippet : typing.Text = ...,
        employer_name_snippet : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["address",b"address","end_date",b"end_date","is_current",b"is_current","is_self_employed",b"is_self_employed","is_supervisor",b"is_supervisor","start_date",b"start_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","division_name",b"division_name","employer_name",b"employer_name","employer_name_snippet",b"employer_name_snippet","end_date",b"end_date","is_current",b"is_current","is_self_employed",b"is_self_employed","is_supervisor",b"is_supervisor","job_description",b"job_description","job_description_snippet",b"job_description_snippet","job_title",b"job_title","job_title_snippet",b"job_title_snippet","start_date",b"start_date"]) -> None: ...
global___EmploymentRecord = EmploymentRecord

class EducationRecord(google.protobuf.message.Message):
    """Resource that represents an education record of a candidate."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_DATE_FIELD_NUMBER: builtins.int
    END_DATE_FIELD_NUMBER: builtins.int
    EXPECTED_GRADUATION_DATE_FIELD_NUMBER: builtins.int
    SCHOOL_NAME_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    DEGREE_DESCRIPTION_FIELD_NUMBER: builtins.int
    STRUCTURED_DEGREE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    IS_CURRENT_FIELD_NUMBER: builtins.int
    SCHOOL_NAME_SNIPPET_FIELD_NUMBER: builtins.int
    DEGREE_SNIPPET_FIELD_NUMBER: builtins.int
    @property
    def start_date(self) -> google.type.date_pb2.Date:
        """The start date of the education."""
        pass
    @property
    def end_date(self) -> google.type.date_pb2.Date:
        """The end date of the education."""
        pass
    @property
    def expected_graduation_date(self) -> google.type.date_pb2.Date:
        """The expected graduation date if currently pursuing a degree."""
        pass
    school_name: typing.Text = ...
    """The name of the school or institution.

    For example, "Stanford University", "UC Berkeley", and so on.

    Number of characters allowed is 250.
    """

    @property
    def address(self) -> global___Address:
        """The physical address of the education institution."""
        pass
    degree_description: typing.Text = ...
    """The full description of the degree.

    For example, "Master of Science in Computer Science", "B.S in Math".

    Number of characters allowed is 100.
    """

    @property
    def structured_degree(self) -> global___Degree:
        """The structured notation of the degree."""
        pass
    description: typing.Text = ...
    """The description of the education.

    Number of characters allowed is 100,000.
    """

    @property
    def is_current(self) -> google.protobuf.wrappers_pb2.BoolValue:
        """If this education is current."""
        pass
    school_name_snippet: typing.Text = ...
    """Output only. The school name snippet shows how the [school_name][google.cloud.talent.v4beta1.EducationRecord.school_name] is related to a
    search query in search result. It's empty if the [school_name][google.cloud.talent.v4beta1.EducationRecord.school_name] isn't
    related to the search query.
    """

    degree_snippet: typing.Text = ...
    """Output only. The job description snippet shows how the [Degree][google.cloud.talent.v4beta1.Degree] is related to a search
    query in search result. It's empty if the [Degree][google.cloud.talent.v4beta1.Degree] isn't related to the
    search query.
    """

    def __init__(self,
        *,
        start_date : typing.Optional[google.type.date_pb2.Date] = ...,
        end_date : typing.Optional[google.type.date_pb2.Date] = ...,
        expected_graduation_date : typing.Optional[google.type.date_pb2.Date] = ...,
        school_name : typing.Text = ...,
        address : typing.Optional[global___Address] = ...,
        degree_description : typing.Text = ...,
        structured_degree : typing.Optional[global___Degree] = ...,
        description : typing.Text = ...,
        is_current : typing.Optional[google.protobuf.wrappers_pb2.BoolValue] = ...,
        school_name_snippet : typing.Text = ...,
        degree_snippet : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["address",b"address","degree",b"degree","degree_description",b"degree_description","end_date",b"end_date","expected_graduation_date",b"expected_graduation_date","is_current",b"is_current","start_date",b"start_date","structured_degree",b"structured_degree"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","degree",b"degree","degree_description",b"degree_description","degree_snippet",b"degree_snippet","description",b"description","end_date",b"end_date","expected_graduation_date",b"expected_graduation_date","is_current",b"is_current","school_name",b"school_name","school_name_snippet",b"school_name_snippet","start_date",b"start_date","structured_degree",b"structured_degree"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["degree",b"degree"]) -> typing.Optional[typing_extensions.Literal["degree_description","structured_degree"]]: ...
global___EducationRecord = EducationRecord

class Degree(google.protobuf.message.Message):
    """Resource that represents a degree pursuing or acquired by a candidate."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEGREE_TYPE_FIELD_NUMBER: builtins.int
    DEGREE_NAME_FIELD_NUMBER: builtins.int
    FIELDS_OF_STUDY_FIELD_NUMBER: builtins.int
    degree_type: google.cloud.talent.v4beta1.common_pb2.DegreeType.ValueType = ...
    """ISCED degree type."""

    degree_name: typing.Text = ...
    """Full Degree name.

    For example, "B.S.", "Master of Arts", and so on.

    Number of characters allowed is 100.
    """

    @property
    def fields_of_study(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Fields of study for the degree.

        For example, "Computer science", "engineering".

        Number of characters allowed is 100.
        """
        pass
    def __init__(self,
        *,
        degree_type : google.cloud.talent.v4beta1.common_pb2.DegreeType.ValueType = ...,
        degree_name : typing.Text = ...,
        fields_of_study : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["degree_name",b"degree_name","degree_type",b"degree_type","fields_of_study",b"fields_of_study"]) -> None: ...
global___Degree = Degree

class Activity(google.protobuf.message.Message):
    """Resource that represents an individual or collaborative activity participated
    in by a candidate, for example, an open-source project, a class assignment,
    and so on.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    CREATE_DATE_FIELD_NUMBER: builtins.int
    UPDATE_DATE_FIELD_NUMBER: builtins.int
    TEAM_MEMBERS_FIELD_NUMBER: builtins.int
    SKILLS_USED_FIELD_NUMBER: builtins.int
    ACTIVITY_NAME_SNIPPET_FIELD_NUMBER: builtins.int
    ACTIVITY_DESCRIPTION_SNIPPET_FIELD_NUMBER: builtins.int
    SKILLS_USED_SNIPPET_FIELD_NUMBER: builtins.int
    display_name: typing.Text = ...
    """Activity display name.

    Number of characters allowed is 100.
    """

    description: typing.Text = ...
    """Activity description.

    Number of characters allowed is 100,000.
    """

    uri: typing.Text = ...
    """Activity URI.

    Number of characters allowed is 4,000.
    """

    @property
    def create_date(self) -> google.type.date_pb2.Date:
        """The first creation date of the activity."""
        pass
    @property
    def update_date(self) -> google.type.date_pb2.Date:
        """The last update date of the activity."""
        pass
    @property
    def team_members(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of team members involved in this activity.

        Number of characters allowed is 100.

        The limitation for max number of team members is 50.
        """
        pass
    @property
    def skills_used(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.talent.v4beta1.common_pb2.Skill]:
        """A list of skills used in this activity.

        The limitation for max number of skills used is 50.
        """
        pass
    activity_name_snippet: typing.Text = ...
    """Output only. Activity name snippet shows how the [display_name][google.cloud.talent.v4beta1.Activity.display_name] is related to a search
    query. It's empty if the [display_name][google.cloud.talent.v4beta1.Activity.display_name] isn't related to the search
    query.
    """

    activity_description_snippet: typing.Text = ...
    """Output only. Activity description snippet shows how the
    [description][google.cloud.talent.v4beta1.Activity.description] is related to a search query. It's empty if the
    [description][google.cloud.talent.v4beta1.Activity.description] isn't related to the search query.
    """

    @property
    def skills_used_snippet(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Output only. Skill used snippet shows how the corresponding
        [skills_used][google.cloud.talent.v4beta1.Activity.skills_used] are related to a search query. It's empty if the
        corresponding [skills_used][google.cloud.talent.v4beta1.Activity.skills_used] are not related to the search query.
        """
        pass
    def __init__(self,
        *,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        uri : typing.Text = ...,
        create_date : typing.Optional[google.type.date_pb2.Date] = ...,
        update_date : typing.Optional[google.type.date_pb2.Date] = ...,
        team_members : typing.Optional[typing.Iterable[typing.Text]] = ...,
        skills_used : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.common_pb2.Skill]] = ...,
        activity_name_snippet : typing.Text = ...,
        activity_description_snippet : typing.Text = ...,
        skills_used_snippet : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_date",b"create_date","update_date",b"update_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["activity_description_snippet",b"activity_description_snippet","activity_name_snippet",b"activity_name_snippet","create_date",b"create_date","description",b"description","display_name",b"display_name","skills_used",b"skills_used","skills_used_snippet",b"skills_used_snippet","team_members",b"team_members","update_date",b"update_date","uri",b"uri"]) -> None: ...
global___Activity = Activity

class Publication(google.protobuf.message.Message):
    """Resource that represents a publication resource of a candidate."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTHORS_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    JOURNAL_FIELD_NUMBER: builtins.int
    VOLUME_FIELD_NUMBER: builtins.int
    PUBLISHER_FIELD_NUMBER: builtins.int
    PUBLICATION_DATE_FIELD_NUMBER: builtins.int
    PUBLICATION_TYPE_FIELD_NUMBER: builtins.int
    ISBN_FIELD_NUMBER: builtins.int
    @property
    def authors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of author names.

        Number of characters allowed is 100.
        """
        pass
    title: typing.Text = ...
    """The title of the publication.

    Number of characters allowed is 100.
    """

    description: typing.Text = ...
    """The description of the publication.

    Number of characters allowed is 100,000.
    """

    journal: typing.Text = ...
    """The journal name of the publication.

    Number of characters allowed is 100.
    """

    volume: typing.Text = ...
    """Volume number.

    Number of characters allowed is 100.
    """

    publisher: typing.Text = ...
    """The publisher of the journal.

    Number of characters allowed is 100.
    """

    @property
    def publication_date(self) -> google.type.date_pb2.Date:
        """The publication date."""
        pass
    publication_type: typing.Text = ...
    """The publication type.

    Number of characters allowed is 100.
    """

    isbn: typing.Text = ...
    """ISBN number.

    Number of characters allowed is 100.
    """

    def __init__(self,
        *,
        authors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        title : typing.Text = ...,
        description : typing.Text = ...,
        journal : typing.Text = ...,
        volume : typing.Text = ...,
        publisher : typing.Text = ...,
        publication_date : typing.Optional[google.type.date_pb2.Date] = ...,
        publication_type : typing.Text = ...,
        isbn : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["publication_date",b"publication_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["authors",b"authors","description",b"description","isbn",b"isbn","journal",b"journal","publication_date",b"publication_date","publication_type",b"publication_type","publisher",b"publisher","title",b"title","volume",b"volume"]) -> None: ...
global___Publication = Publication

class Patent(google.protobuf.message.Message):
    """Resource that represents the patent acquired by a candidate."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    INVENTORS_FIELD_NUMBER: builtins.int
    PATENT_STATUS_FIELD_NUMBER: builtins.int
    PATENT_STATUS_DATE_FIELD_NUMBER: builtins.int
    PATENT_FILING_DATE_FIELD_NUMBER: builtins.int
    PATENT_OFFICE_FIELD_NUMBER: builtins.int
    PATENT_NUMBER_FIELD_NUMBER: builtins.int
    PATENT_DESCRIPTION_FIELD_NUMBER: builtins.int
    SKILLS_USED_FIELD_NUMBER: builtins.int
    display_name: typing.Text = ...
    """Name of the patent.

    Number of characters allowed is 100.
    """

    @property
    def inventors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of inventors' names.

        Number of characters allowed for each is 100.
        """
        pass
    patent_status: typing.Text = ...
    """The status of the patent.

    Number of characters allowed is 100.
    """

    @property
    def patent_status_date(self) -> google.type.date_pb2.Date:
        """The date the last time the status of the patent was checked."""
        pass
    @property
    def patent_filing_date(self) -> google.type.date_pb2.Date:
        """The date that the patent was filed."""
        pass
    patent_office: typing.Text = ...
    """The name of the patent office.

    Number of characters allowed is 100.
    """

    patent_number: typing.Text = ...
    """The number of the patent.

    Number of characters allowed is 100.
    """

    patent_description: typing.Text = ...
    """The description of the patent.

    Number of characters allowed is 100,000.
    """

    @property
    def skills_used(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.talent.v4beta1.common_pb2.Skill]:
        """The skills used in this patent."""
        pass
    def __init__(self,
        *,
        display_name : typing.Text = ...,
        inventors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        patent_status : typing.Text = ...,
        patent_status_date : typing.Optional[google.type.date_pb2.Date] = ...,
        patent_filing_date : typing.Optional[google.type.date_pb2.Date] = ...,
        patent_office : typing.Text = ...,
        patent_number : typing.Text = ...,
        patent_description : typing.Text = ...,
        skills_used : typing.Optional[typing.Iterable[google.cloud.talent.v4beta1.common_pb2.Skill]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["patent_filing_date",b"patent_filing_date","patent_status_date",b"patent_status_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["display_name",b"display_name","inventors",b"inventors","patent_description",b"patent_description","patent_filing_date",b"patent_filing_date","patent_number",b"patent_number","patent_office",b"patent_office","patent_status",b"patent_status","patent_status_date",b"patent_status_date","skills_used",b"skills_used"]) -> None: ...
global___Patent = Patent
