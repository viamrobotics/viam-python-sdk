"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class HistogramQuery(google.protobuf.message.Message):
    """The histogram request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HISTOGRAM_QUERY_FIELD_NUMBER: builtins.int
    histogram_query: typing.Text = ...
    """An expression specifies a histogram request against matching jobs for
    searches.

    See [SearchJobsRequest.histogram_queries][google.cloud.talent.v4.SearchJobsRequest.histogram_queries] for details about syntax.
    """

    def __init__(self,
        *,
        histogram_query : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["histogram_query",b"histogram_query"]) -> None: ...
global___HistogramQuery = HistogramQuery

class HistogramQueryResult(google.protobuf.message.Message):
    """Histogram result that matches [HistogramQuery][google.cloud.talent.v4.HistogramQuery] specified in searches."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class HistogramEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    HISTOGRAM_QUERY_FIELD_NUMBER: builtins.int
    HISTOGRAM_FIELD_NUMBER: builtins.int
    histogram_query: typing.Text = ...
    """Requested histogram expression."""

    @property
    def histogram(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]:
        """A map from the values of the facet associated with distinct values to the
        number of matching entries with corresponding value.

        The key format is:

        * (for string histogram) string values stored in the field.
        * (for named numeric bucket) name specified in `bucket()` function, like
          for `bucket(0, MAX, "non-negative")`, the key will be `non-negative`.
        * (for anonymous numeric bucket) range formatted as `<low>-<high>`, for
          example, `0-1000`, `MIN-0`, and `0-MAX`.
        """
        pass
    def __init__(self,
        *,
        histogram_query : typing.Text = ...,
        histogram : typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["histogram",b"histogram","histogram_query",b"histogram_query"]) -> None: ...
global___HistogramQueryResult = HistogramQueryResult
