# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/resourcemanager/v3/tag_keys.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.iam.v1.iam_policy_pb2
import google.iam.v1.policy_pb2
import google.longrunning.operations_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.timestamp_pb2
import google.cloud.resourcemanager.v3.tag_keys_pb2


class TagKeysBase(abc.ABC):

    @abc.abstractmethod
    async def ListTagKeys(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.tag_keys_pb2.ListTagKeysRequest, google.cloud.resourcemanager.v3.tag_keys_pb2.ListTagKeysResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetTagKey(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.tag_keys_pb2.GetTagKeyRequest, google.cloud.resourcemanager.v3.tag_keys_pb2.TagKey]') -> None:
        pass

    @abc.abstractmethod
    async def CreateTagKey(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.tag_keys_pb2.CreateTagKeyRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateTagKey(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.tag_keys_pb2.UpdateTagKeyRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteTagKey(self, stream: 'grpclib.server.Stream[google.cloud.resourcemanager.v3.tag_keys_pb2.DeleteTagKeyRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def GetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.GetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def SetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.SetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def TestIamPermissions(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest, google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.resourcemanager.v3.TagKeys/ListTagKeys': grpclib.const.Handler(
                self.ListTagKeys,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.tag_keys_pb2.ListTagKeysRequest,
                google.cloud.resourcemanager.v3.tag_keys_pb2.ListTagKeysResponse,
            ),
            '/google.cloud.resourcemanager.v3.TagKeys/GetTagKey': grpclib.const.Handler(
                self.GetTagKey,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.tag_keys_pb2.GetTagKeyRequest,
                google.cloud.resourcemanager.v3.tag_keys_pb2.TagKey,
            ),
            '/google.cloud.resourcemanager.v3.TagKeys/CreateTagKey': grpclib.const.Handler(
                self.CreateTagKey,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.tag_keys_pb2.CreateTagKeyRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.resourcemanager.v3.TagKeys/UpdateTagKey': grpclib.const.Handler(
                self.UpdateTagKey,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.tag_keys_pb2.UpdateTagKeyRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.resourcemanager.v3.TagKeys/DeleteTagKey': grpclib.const.Handler(
                self.DeleteTagKey,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.resourcemanager.v3.tag_keys_pb2.DeleteTagKeyRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.resourcemanager.v3.TagKeys/GetIamPolicy': grpclib.const.Handler(
                self.GetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.cloud.resourcemanager.v3.TagKeys/SetIamPolicy': grpclib.const.Handler(
                self.SetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.cloud.resourcemanager.v3.TagKeys/TestIamPermissions': grpclib.const.Handler(
                self.TestIamPermissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
            ),
        }


class TagKeysStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListTagKeys = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.TagKeys/ListTagKeys',
            google.cloud.resourcemanager.v3.tag_keys_pb2.ListTagKeysRequest,
            google.cloud.resourcemanager.v3.tag_keys_pb2.ListTagKeysResponse,
        )
        self.GetTagKey = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.TagKeys/GetTagKey',
            google.cloud.resourcemanager.v3.tag_keys_pb2.GetTagKeyRequest,
            google.cloud.resourcemanager.v3.tag_keys_pb2.TagKey,
        )
        self.CreateTagKey = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.TagKeys/CreateTagKey',
            google.cloud.resourcemanager.v3.tag_keys_pb2.CreateTagKeyRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.UpdateTagKey = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.TagKeys/UpdateTagKey',
            google.cloud.resourcemanager.v3.tag_keys_pb2.UpdateTagKeyRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.DeleteTagKey = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.TagKeys/DeleteTagKey',
            google.cloud.resourcemanager.v3.tag_keys_pb2.DeleteTagKeyRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.GetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.TagKeys/GetIamPolicy',
            google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.SetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.TagKeys/SetIamPolicy',
            google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.TestIamPermissions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.resourcemanager.v3.TagKeys/TestIamPermissions',
            google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
            google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
        )
