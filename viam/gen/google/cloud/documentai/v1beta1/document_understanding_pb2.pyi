"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.documentai.v1beta1.geometry_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class BatchProcessDocumentsRequest(google.protobuf.message.Message):
    """Request to batch process documents as an asynchronous operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUESTS_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    @property
    def requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProcessDocumentRequest]:
        """Required. Individual requests for each document."""
        pass
    parent: typing.Text = ...
    """Target project and location to make a call.

    Format: `projects/{project-id}/locations/{location-id}`.

    If no location is specified, a region will be chosen automatically.
    """

    def __init__(self,
        *,
        requests : typing.Optional[typing.Iterable[global___ProcessDocumentRequest]] = ...,
        parent : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","requests",b"requests"]) -> None: ...
global___BatchProcessDocumentsRequest = BatchProcessDocumentsRequest

class ProcessDocumentRequest(google.protobuf.message.Message):
    """Request to process one document."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INPUT_CONFIG_FIELD_NUMBER: builtins.int
    OUTPUT_CONFIG_FIELD_NUMBER: builtins.int
    DOCUMENT_TYPE_FIELD_NUMBER: builtins.int
    TABLE_EXTRACTION_PARAMS_FIELD_NUMBER: builtins.int
    FORM_EXTRACTION_PARAMS_FIELD_NUMBER: builtins.int
    ENTITY_EXTRACTION_PARAMS_FIELD_NUMBER: builtins.int
    OCR_PARAMS_FIELD_NUMBER: builtins.int
    @property
    def input_config(self) -> global___InputConfig:
        """Required. Information about the input file."""
        pass
    @property
    def output_config(self) -> global___OutputConfig:
        """Required. The desired output location."""
        pass
    document_type: typing.Text = ...
    """Specifies a known document type for deeper structure detection. Valid
    values are currently "general" and "invoice". If not provided, "general"\\
    is used as default. If any other value is given, the request is rejected.
    """

    @property
    def table_extraction_params(self) -> global___TableExtractionParams:
        """Controls table extraction behavior. If not specified, the system will
        decide reasonable defaults.
        """
        pass
    @property
    def form_extraction_params(self) -> global___FormExtractionParams:
        """Controls form extraction behavior. If not specified, the system will
        decide reasonable defaults.
        """
        pass
    @property
    def entity_extraction_params(self) -> global___EntityExtractionParams:
        """Controls entity extraction behavior. If not specified, the system will
        decide reasonable defaults.
        """
        pass
    @property
    def ocr_params(self) -> global___OcrParams:
        """Controls OCR behavior. If not specified, the system will decide reasonable
        defaults.
        """
        pass
    def __init__(self,
        *,
        input_config : typing.Optional[global___InputConfig] = ...,
        output_config : typing.Optional[global___OutputConfig] = ...,
        document_type : typing.Text = ...,
        table_extraction_params : typing.Optional[global___TableExtractionParams] = ...,
        form_extraction_params : typing.Optional[global___FormExtractionParams] = ...,
        entity_extraction_params : typing.Optional[global___EntityExtractionParams] = ...,
        ocr_params : typing.Optional[global___OcrParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity_extraction_params",b"entity_extraction_params","form_extraction_params",b"form_extraction_params","input_config",b"input_config","ocr_params",b"ocr_params","output_config",b"output_config","table_extraction_params",b"table_extraction_params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["document_type",b"document_type","entity_extraction_params",b"entity_extraction_params","form_extraction_params",b"form_extraction_params","input_config",b"input_config","ocr_params",b"ocr_params","output_config",b"output_config","table_extraction_params",b"table_extraction_params"]) -> None: ...
global___ProcessDocumentRequest = ProcessDocumentRequest

class BatchProcessDocumentsResponse(google.protobuf.message.Message):
    """Response to an batch document processing request. This is returned in
    the LRO Operation after the operation is complete.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESPONSES_FIELD_NUMBER: builtins.int
    @property
    def responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProcessDocumentResponse]:
        """Responses for each individual document."""
        pass
    def __init__(self,
        *,
        responses : typing.Optional[typing.Iterable[global___ProcessDocumentResponse]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["responses",b"responses"]) -> None: ...
global___BatchProcessDocumentsResponse = BatchProcessDocumentsResponse

class ProcessDocumentResponse(google.protobuf.message.Message):
    """Response to a single document processing request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INPUT_CONFIG_FIELD_NUMBER: builtins.int
    OUTPUT_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def input_config(self) -> global___InputConfig:
        """Information about the input file. This is the same as the corresponding
        input config in the request.
        """
        pass
    @property
    def output_config(self) -> global___OutputConfig:
        """The output location of the parsed responses. The responses are written to
        this location as JSON-serialized `Document` objects.
        """
        pass
    def __init__(self,
        *,
        input_config : typing.Optional[global___InputConfig] = ...,
        output_config : typing.Optional[global___OutputConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["input_config",b"input_config","output_config",b"output_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input_config",b"input_config","output_config",b"output_config"]) -> None: ...
global___ProcessDocumentResponse = ProcessDocumentResponse

class OcrParams(google.protobuf.message.Message):
    """Parameters to control Optical Character Recognition (OCR) behavior."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LANGUAGE_HINTS_FIELD_NUMBER: builtins.int
    @property
    def language_hints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of languages to use for OCR. In most cases, an empty value
        yields the best results since it enables automatic language detection. For
        languages based on the Latin alphabet, setting `language_hints` is not
        needed. In rare cases, when the language of the text in the image is known,
        setting a hint will help get better results (although it will be a
        significant hindrance if the hint is wrong). Document processing returns an
        error if one or more of the specified languages is not one of the
        supported languages.
        """
        pass
    def __init__(self,
        *,
        language_hints : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["language_hints",b"language_hints"]) -> None: ...
global___OcrParams = OcrParams

class TableExtractionParams(google.protobuf.message.Message):
    """Parameters to control table extraction behavior."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    TABLE_BOUND_HINTS_FIELD_NUMBER: builtins.int
    HEADER_HINTS_FIELD_NUMBER: builtins.int
    MODEL_VERSION_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether to enable table extraction."""

    @property
    def table_bound_hints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TableBoundHint]:
        """Optional. Table bounding box hints that can be provided to complex cases
        which our algorithm cannot locate the table(s) in.
        """
        pass
    @property
    def header_hints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Table header hints. The extraction will bias towards producing
        these terms as table headers, which may improve accuracy.
        """
        pass
    model_version: typing.Text = ...
    """Model version of the table extraction system. Default is "builtin/stable".
    Specify "builtin/latest" for the latest model.
    """

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        table_bound_hints : typing.Optional[typing.Iterable[global___TableBoundHint]] = ...,
        header_hints : typing.Optional[typing.Iterable[typing.Text]] = ...,
        model_version : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","header_hints",b"header_hints","model_version",b"model_version","table_bound_hints",b"table_bound_hints"]) -> None: ...
global___TableExtractionParams = TableExtractionParams

class TableBoundHint(google.protobuf.message.Message):
    """A hint for a table bounding box on the page for table parsing."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PAGE_NUMBER_FIELD_NUMBER: builtins.int
    BOUNDING_BOX_FIELD_NUMBER: builtins.int
    page_number: builtins.int = ...
    """Optional. Page number for multi-paged inputs this hint applies to. If not
    provided, this hint will apply to all pages by default. This value is
    1-based.
    """

    @property
    def bounding_box(self) -> google.cloud.documentai.v1beta1.geometry_pb2.BoundingPoly:
        """Bounding box hint for a table on this page. The coordinates must be
        normalized to [0,1] and the bounding box must be an axis-aligned rectangle.
        """
        pass
    def __init__(self,
        *,
        page_number : builtins.int = ...,
        bounding_box : typing.Optional[google.cloud.documentai.v1beta1.geometry_pb2.BoundingPoly] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bounding_box",b"bounding_box"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bounding_box",b"bounding_box","page_number",b"page_number"]) -> None: ...
global___TableBoundHint = TableBoundHint

class FormExtractionParams(google.protobuf.message.Message):
    """Parameters to control form extraction behavior."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    KEY_VALUE_PAIR_HINTS_FIELD_NUMBER: builtins.int
    MODEL_VERSION_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether to enable form extraction."""

    @property
    def key_value_pair_hints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___KeyValuePairHint]:
        """User can provide pairs of (key text, value type) to improve the parsing
        result.

        For example, if a document has a field called "Date" that holds a date
        value and a field called "Amount" that may hold either a currency value
        (e.g., "$500.00") or a simple number value (e.g., "20"), you could use the
        following hints: [ {"key": "Date", value_types: [ "DATE"]}, {"key":
        "Amount", "value_types": [ "PRICE", "NUMBER" ]} ]

        If the value type is unknown, but you want to provide hints for the keys,
        you can leave the value_types field blank. e.g. {"key": "Date",
        "value_types": []}
        """
        pass
    model_version: typing.Text = ...
    """Model version of the form extraction system. Default is
    "builtin/stable". Specify "builtin/latest" for the latest model.
    """

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        key_value_pair_hints : typing.Optional[typing.Iterable[global___KeyValuePairHint]] = ...,
        model_version : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","key_value_pair_hints",b"key_value_pair_hints","model_version",b"model_version"]) -> None: ...
global___FormExtractionParams = FormExtractionParams

class KeyValuePairHint(google.protobuf.message.Message):
    """User-provided hint for key value pair."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    VALUE_TYPES_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """The key text for the hint."""

    @property
    def value_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Type of the value. This is case-insensitive, and could be one of:
        ADDRESS, LOCATION, ORGANIZATION, PERSON, PHONE_NUMBER,
        ID, NUMBER, EMAIL, PRICE, TERMS, DATE, NAME. Types not in this list will
        be ignored.
        """
        pass
    def __init__(self,
        *,
        key : typing.Text = ...,
        value_types : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value_types",b"value_types"]) -> None: ...
global___KeyValuePairHint = KeyValuePairHint

class EntityExtractionParams(google.protobuf.message.Message):
    """Parameters to control entity extraction behavior."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    MODEL_VERSION_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether to enable entity extraction."""

    model_version: typing.Text = ...
    """Model version of the entity extraction. Default is
    "builtin/stable". Specify "builtin/latest" for the latest model.
    """

    def __init__(self,
        *,
        enabled : builtins.bool = ...,
        model_version : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enabled",b"enabled","model_version",b"model_version"]) -> None: ...
global___EntityExtractionParams = EntityExtractionParams

class InputConfig(google.protobuf.message.Message):
    """The desired input location and metadata."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GCS_SOURCE_FIELD_NUMBER: builtins.int
    MIME_TYPE_FIELD_NUMBER: builtins.int
    @property
    def gcs_source(self) -> global___GcsSource:
        """The Google Cloud Storage location to read the input from. This must be a
        single file.
        """
        pass
    mime_type: typing.Text = ...
    """Required. Mimetype of the input. Current supported mimetypes are
    application/pdf, image/tiff, and image/gif.
    """

    def __init__(self,
        *,
        gcs_source : typing.Optional[global___GcsSource] = ...,
        mime_type : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["gcs_source",b"gcs_source","source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["gcs_source",b"gcs_source","mime_type",b"mime_type","source",b"source"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["source",b"source"]) -> typing.Optional[typing_extensions.Literal["gcs_source"]]: ...
global___InputConfig = InputConfig

class OutputConfig(google.protobuf.message.Message):
    """The desired output location and metadata."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GCS_DESTINATION_FIELD_NUMBER: builtins.int
    PAGES_PER_SHARD_FIELD_NUMBER: builtins.int
    @property
    def gcs_destination(self) -> global___GcsDestination:
        """The Google Cloud Storage location to write the output to."""
        pass
    pages_per_shard: builtins.int = ...
    """The max number of pages to include into each output Document shard JSON on
    Google Cloud Storage.

    The valid range is [1, 100]. If not specified, the default value is 20.

    For example, for one pdf file with 100 pages, 100 parsed pages will be
    produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each
    containing 20 parsed pages will be written under the prefix
    [OutputConfig.gcs_destination.uri][] and suffix pages-x-to-y.json where
    x and y are 1-indexed page numbers.

    Example GCS outputs with 157 pages and pages_per_shard = 50:

    <prefix>pages-001-to-050.json
    <prefix>pages-051-to-100.json
    <prefix>pages-101-to-150.json
    <prefix>pages-151-to-157.json
    """

    def __init__(self,
        *,
        gcs_destination : typing.Optional[global___GcsDestination] = ...,
        pages_per_shard : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["destination",b"destination","gcs_destination",b"gcs_destination"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["destination",b"destination","gcs_destination",b"gcs_destination","pages_per_shard",b"pages_per_shard"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["destination",b"destination"]) -> typing.Optional[typing_extensions.Literal["gcs_destination"]]: ...
global___OutputConfig = OutputConfig

class GcsSource(google.protobuf.message.Message):
    """The Google Cloud Storage location where the input file will be read from."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URI_FIELD_NUMBER: builtins.int
    uri: typing.Text = ...
    def __init__(self,
        *,
        uri : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...
global___GcsSource = GcsSource

class GcsDestination(google.protobuf.message.Message):
    """The Google Cloud Storage location where the output file will be written to."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URI_FIELD_NUMBER: builtins.int
    uri: typing.Text = ...
    def __init__(self,
        *,
        uri : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["uri",b"uri"]) -> None: ...
global___GcsDestination = GcsDestination

class OperationMetadata(google.protobuf.message.Message):
    """Contains metadata for the BatchProcessDocuments operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: OperationMetadata.State.ValueType = ...  # 0
        """The default value. This value is used if the state is omitted."""

        ACCEPTED: OperationMetadata.State.ValueType = ...  # 1
        """Request is received."""

        WAITING: OperationMetadata.State.ValueType = ...  # 2
        """Request operation is waiting for scheduling."""

        RUNNING: OperationMetadata.State.ValueType = ...  # 3
        """Request is being processed."""

        SUCCEEDED: OperationMetadata.State.ValueType = ...  # 4
        """The batch processing completed successfully."""

        CANCELLED: OperationMetadata.State.ValueType = ...  # 5
        """The batch processing was cancelled."""

        FAILED: OperationMetadata.State.ValueType = ...  # 6
        """The batch processing has failed."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        pass

    STATE_UNSPECIFIED: OperationMetadata.State.ValueType = ...  # 0
    """The default value. This value is used if the state is omitted."""

    ACCEPTED: OperationMetadata.State.ValueType = ...  # 1
    """Request is received."""

    WAITING: OperationMetadata.State.ValueType = ...  # 2
    """Request operation is waiting for scheduling."""

    RUNNING: OperationMetadata.State.ValueType = ...  # 3
    """Request is being processed."""

    SUCCEEDED: OperationMetadata.State.ValueType = ...  # 4
    """The batch processing completed successfully."""

    CANCELLED: OperationMetadata.State.ValueType = ...  # 5
    """The batch processing was cancelled."""

    FAILED: OperationMetadata.State.ValueType = ...  # 6
    """The batch processing has failed."""


    STATE_FIELD_NUMBER: builtins.int
    STATE_MESSAGE_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    state: global___OperationMetadata.State.ValueType = ...
    """The state of the current batch processing."""

    state_message: typing.Text = ...
    """A message providing more details about the current state of processing."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The creation time of the operation."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The last update time of the operation."""
        pass
    def __init__(self,
        *,
        state : global___OperationMetadata.State.ValueType = ...,
        state_message : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","state",b"state","state_message",b"state_message","update_time",b"update_time"]) -> None: ...
global___OperationMetadata = OperationMetadata
