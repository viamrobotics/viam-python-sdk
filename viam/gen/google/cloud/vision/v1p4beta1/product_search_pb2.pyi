"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.vision.v1p4beta1.geometry_pb2
import google.cloud.vision.v1p4beta1.product_search_service_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ProductSearchParams(google.protobuf.message.Message):
    """Parameters for a product search request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BOUNDING_POLY_FIELD_NUMBER: builtins.int
    PRODUCT_SET_FIELD_NUMBER: builtins.int
    PRODUCT_CATEGORIES_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    @property
    def bounding_poly(self) -> google.cloud.vision.v1p4beta1.geometry_pb2.BoundingPoly:
        """The bounding polygon around the area of interest in the image.
        If it is not specified, system discretion will be applied.
        """
        pass
    product_set: typing.Text = ...
    """The resource name of a
    [ProductSet][google.cloud.vision.v1p4beta1.ProductSet] to be searched for
    similar images.

    Format is:
    `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.
    """

    @property
    def product_categories(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of product categories to search in. Currently, we only consider
        the first category, and either "homegoods-v2", "apparel-v2", "toys-v2",
        "packagedgoods-v1", or "general-v1" should be specified. The legacy
        categories "homegoods", "apparel", and "toys" are still supported but will
        be deprecated. For new products, please use "homegoods-v2", "apparel-v2",
        or "toys-v2" for better product search accuracy. It is recommended to
        migrate existing products to these categories as well.
        """
        pass
    filter: typing.Text = ...
    """The filtering expression. This can be used to restrict search results based
    on Product labels. We currently support an AND of OR of key-value
    expressions, where each expression within an OR must have the same key. An
    '=' should be used to connect the key and value.

    For example, "(color = red OR color = blue) AND brand = Google" is
    acceptable, but "(color = red OR brand = Google)" is not acceptable.
    "color: red" is not acceptable because it uses a ':' instead of an '='.
    """

    def __init__(self,
        *,
        bounding_poly : typing.Optional[google.cloud.vision.v1p4beta1.geometry_pb2.BoundingPoly] = ...,
        product_set : typing.Text = ...,
        product_categories : typing.Optional[typing.Iterable[typing.Text]] = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bounding_poly",b"bounding_poly"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bounding_poly",b"bounding_poly","filter",b"filter","product_categories",b"product_categories","product_set",b"product_set"]) -> None: ...
global___ProductSearchParams = ProductSearchParams

class ProductSearchResults(google.protobuf.message.Message):
    """Results for a product search request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Result(google.protobuf.message.Message):
        """Information about a product."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PRODUCT_FIELD_NUMBER: builtins.int
        SCORE_FIELD_NUMBER: builtins.int
        IMAGE_FIELD_NUMBER: builtins.int
        @property
        def product(self) -> google.cloud.vision.v1p4beta1.product_search_service_pb2.Product:
            """The Product."""
            pass
        score: builtins.float = ...
        """A confidence level on the match, ranging from 0 (no confidence) to
        1 (full confidence).
        """

        image: typing.Text = ...
        """The resource name of the image from the product that is the closest match
        to the query.
        """

        def __init__(self,
            *,
            product : typing.Optional[google.cloud.vision.v1p4beta1.product_search_service_pb2.Product] = ...,
            score : builtins.float = ...,
            image : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["product",b"product"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["image",b"image","product",b"product","score",b"score"]) -> None: ...

    class ObjectAnnotation(google.protobuf.message.Message):
        """Prediction for what the object in the bounding box is."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MID_FIELD_NUMBER: builtins.int
        LANGUAGE_CODE_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        SCORE_FIELD_NUMBER: builtins.int
        mid: typing.Text = ...
        """Object ID that should align with EntityAnnotation mid."""

        language_code: typing.Text = ...
        """The BCP-47 language code, such as "en-US" or "sr-Latn". For more
        information, see
        http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
        """

        name: typing.Text = ...
        """Object name, expressed in its `language_code` language."""

        score: builtins.float = ...
        """Score of the result. Range [0, 1]."""

        def __init__(self,
            *,
            mid : typing.Text = ...,
            language_code : typing.Text = ...,
            name : typing.Text = ...,
            score : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["language_code",b"language_code","mid",b"mid","name",b"name","score",b"score"]) -> None: ...

    class GroupedResult(google.protobuf.message.Message):
        """Information about the products similar to a single product in a query
        image.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        BOUNDING_POLY_FIELD_NUMBER: builtins.int
        RESULTS_FIELD_NUMBER: builtins.int
        OBJECT_ANNOTATIONS_FIELD_NUMBER: builtins.int
        @property
        def bounding_poly(self) -> google.cloud.vision.v1p4beta1.geometry_pb2.BoundingPoly:
            """The bounding polygon around the product detected in the query image."""
            pass
        @property
        def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProductSearchResults.Result]:
            """List of results, one for each product match."""
            pass
        @property
        def object_annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProductSearchResults.ObjectAnnotation]:
            """List of generic predictions for the object in the bounding box."""
            pass
        def __init__(self,
            *,
            bounding_poly : typing.Optional[google.cloud.vision.v1p4beta1.geometry_pb2.BoundingPoly] = ...,
            results : typing.Optional[typing.Iterable[global___ProductSearchResults.Result]] = ...,
            object_annotations : typing.Optional[typing.Iterable[global___ProductSearchResults.ObjectAnnotation]] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["bounding_poly",b"bounding_poly"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["bounding_poly",b"bounding_poly","object_annotations",b"object_annotations","results",b"results"]) -> None: ...

    INDEX_TIME_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    PRODUCT_GROUPED_RESULTS_FIELD_NUMBER: builtins.int
    @property
    def index_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Timestamp of the index which provided these results. Products added to the
        product set and products removed from the product set after this time are
        not reflected in the current results.
        """
        pass
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProductSearchResults.Result]:
        """List of results, one for each product match."""
        pass
    @property
    def product_grouped_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProductSearchResults.GroupedResult]:
        """List of results grouped by products detected in the query image. Each entry
        corresponds to one bounding polygon in the query image, and contains the
        matching products specific to that region. There may be duplicate product
        matches in the union of all the per-product results.
        """
        pass
    def __init__(self,
        *,
        index_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        results : typing.Optional[typing.Iterable[global___ProductSearchResults.Result]] = ...,
        product_grouped_results : typing.Optional[typing.Iterable[global___ProductSearchResults.GroupedResult]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["index_time",b"index_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["index_time",b"index_time","product_grouped_results",b"product_grouped_results","results",b"results"]) -> None: ...
global___ProductSearchResults = ProductSearchResults
