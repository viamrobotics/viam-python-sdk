"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Vertex(google.protobuf.message.Message):
    """A vertex represents a 2D point in the image.
    NOTE: the vertex coordinates are in the same scale as the original image.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    x: builtins.int = ...
    """X coordinate."""

    y: builtins.int = ...
    """Y coordinate."""

    def __init__(self,
        *,
        x : builtins.int = ...,
        y : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["x",b"x","y",b"y"]) -> None: ...
global___Vertex = Vertex

class BoundingPoly(google.protobuf.message.Message):
    """A bounding polygon for the detected image annotation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VERTICES_FIELD_NUMBER: builtins.int
    @property
    def vertices(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Vertex]:
        """The bounding polygon vertices."""
        pass
    def __init__(self,
        *,
        vertices : typing.Optional[typing.Iterable[global___Vertex]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["vertices",b"vertices"]) -> None: ...
global___BoundingPoly = BoundingPoly

class Position(google.protobuf.message.Message):
    """A 3D position in the image, used primarily for Face detection landmarks.
    A valid Position must have both x and y coordinates.
    The position coordinates are in the same scale as the original image.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float = ...
    """X coordinate."""

    y: builtins.float = ...
    """Y coordinate."""

    z: builtins.float = ...
    """Z coordinate (or depth)."""

    def __init__(self,
        *,
        x : builtins.float = ...,
        y : builtins.float = ...,
        z : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["x",b"x","y",b"y","z",b"z"]) -> None: ...
global___Position = Position
