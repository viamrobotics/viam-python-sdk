# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/secretmanager/v1/service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.cloud.secretmanager.v1.resources_pb2
import google.iam.v1.iam_policy_pb2
import google.iam.v1.policy_pb2
import google.protobuf.empty_pb2
import google.protobuf.field_mask_pb2
import google.cloud.secretmanager.v1.service_pb2


class SecretManagerServiceBase(abc.ABC):

    @abc.abstractmethod
    async def ListSecrets(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.ListSecretsRequest, google.cloud.secretmanager.v1.service_pb2.ListSecretsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateSecret(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.CreateSecretRequest, google.cloud.secretmanager.v1.resources_pb2.Secret]') -> None:
        pass

    @abc.abstractmethod
    async def AddSecretVersion(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.AddSecretVersionRequest, google.cloud.secretmanager.v1.resources_pb2.SecretVersion]') -> None:
        pass

    @abc.abstractmethod
    async def GetSecret(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.GetSecretRequest, google.cloud.secretmanager.v1.resources_pb2.Secret]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateSecret(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.UpdateSecretRequest, google.cloud.secretmanager.v1.resources_pb2.Secret]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteSecret(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.DeleteSecretRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def ListSecretVersions(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.ListSecretVersionsRequest, google.cloud.secretmanager.v1.service_pb2.ListSecretVersionsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetSecretVersion(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.GetSecretVersionRequest, google.cloud.secretmanager.v1.resources_pb2.SecretVersion]') -> None:
        pass

    @abc.abstractmethod
    async def AccessSecretVersion(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.AccessSecretVersionRequest, google.cloud.secretmanager.v1.service_pb2.AccessSecretVersionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DisableSecretVersion(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.DisableSecretVersionRequest, google.cloud.secretmanager.v1.resources_pb2.SecretVersion]') -> None:
        pass

    @abc.abstractmethod
    async def EnableSecretVersion(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.EnableSecretVersionRequest, google.cloud.secretmanager.v1.resources_pb2.SecretVersion]') -> None:
        pass

    @abc.abstractmethod
    async def DestroySecretVersion(self, stream: 'grpclib.server.Stream[google.cloud.secretmanager.v1.service_pb2.DestroySecretVersionRequest, google.cloud.secretmanager.v1.resources_pb2.SecretVersion]') -> None:
        pass

    @abc.abstractmethod
    async def SetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.SetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def GetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.GetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def TestIamPermissions(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest, google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.secretmanager.v1.SecretManagerService/ListSecrets': grpclib.const.Handler(
                self.ListSecrets,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.ListSecretsRequest,
                google.cloud.secretmanager.v1.service_pb2.ListSecretsResponse,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/CreateSecret': grpclib.const.Handler(
                self.CreateSecret,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.CreateSecretRequest,
                google.cloud.secretmanager.v1.resources_pb2.Secret,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/AddSecretVersion': grpclib.const.Handler(
                self.AddSecretVersion,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.AddSecretVersionRequest,
                google.cloud.secretmanager.v1.resources_pb2.SecretVersion,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/GetSecret': grpclib.const.Handler(
                self.GetSecret,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.GetSecretRequest,
                google.cloud.secretmanager.v1.resources_pb2.Secret,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/UpdateSecret': grpclib.const.Handler(
                self.UpdateSecret,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.UpdateSecretRequest,
                google.cloud.secretmanager.v1.resources_pb2.Secret,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/DeleteSecret': grpclib.const.Handler(
                self.DeleteSecret,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.DeleteSecretRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/ListSecretVersions': grpclib.const.Handler(
                self.ListSecretVersions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.ListSecretVersionsRequest,
                google.cloud.secretmanager.v1.service_pb2.ListSecretVersionsResponse,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/GetSecretVersion': grpclib.const.Handler(
                self.GetSecretVersion,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.GetSecretVersionRequest,
                google.cloud.secretmanager.v1.resources_pb2.SecretVersion,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/AccessSecretVersion': grpclib.const.Handler(
                self.AccessSecretVersion,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.AccessSecretVersionRequest,
                google.cloud.secretmanager.v1.service_pb2.AccessSecretVersionResponse,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/DisableSecretVersion': grpclib.const.Handler(
                self.DisableSecretVersion,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.DisableSecretVersionRequest,
                google.cloud.secretmanager.v1.resources_pb2.SecretVersion,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/EnableSecretVersion': grpclib.const.Handler(
                self.EnableSecretVersion,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.EnableSecretVersionRequest,
                google.cloud.secretmanager.v1.resources_pb2.SecretVersion,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/DestroySecretVersion': grpclib.const.Handler(
                self.DestroySecretVersion,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.secretmanager.v1.service_pb2.DestroySecretVersionRequest,
                google.cloud.secretmanager.v1.resources_pb2.SecretVersion,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/SetIamPolicy': grpclib.const.Handler(
                self.SetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/GetIamPolicy': grpclib.const.Handler(
                self.GetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.cloud.secretmanager.v1.SecretManagerService/TestIamPermissions': grpclib.const.Handler(
                self.TestIamPermissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
            ),
        }


class SecretManagerServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ListSecrets = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/ListSecrets',
            google.cloud.secretmanager.v1.service_pb2.ListSecretsRequest,
            google.cloud.secretmanager.v1.service_pb2.ListSecretsResponse,
        )
        self.CreateSecret = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/CreateSecret',
            google.cloud.secretmanager.v1.service_pb2.CreateSecretRequest,
            google.cloud.secretmanager.v1.resources_pb2.Secret,
        )
        self.AddSecretVersion = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/AddSecretVersion',
            google.cloud.secretmanager.v1.service_pb2.AddSecretVersionRequest,
            google.cloud.secretmanager.v1.resources_pb2.SecretVersion,
        )
        self.GetSecret = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/GetSecret',
            google.cloud.secretmanager.v1.service_pb2.GetSecretRequest,
            google.cloud.secretmanager.v1.resources_pb2.Secret,
        )
        self.UpdateSecret = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/UpdateSecret',
            google.cloud.secretmanager.v1.service_pb2.UpdateSecretRequest,
            google.cloud.secretmanager.v1.resources_pb2.Secret,
        )
        self.DeleteSecret = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/DeleteSecret',
            google.cloud.secretmanager.v1.service_pb2.DeleteSecretRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.ListSecretVersions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/ListSecretVersions',
            google.cloud.secretmanager.v1.service_pb2.ListSecretVersionsRequest,
            google.cloud.secretmanager.v1.service_pb2.ListSecretVersionsResponse,
        )
        self.GetSecretVersion = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/GetSecretVersion',
            google.cloud.secretmanager.v1.service_pb2.GetSecretVersionRequest,
            google.cloud.secretmanager.v1.resources_pb2.SecretVersion,
        )
        self.AccessSecretVersion = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/AccessSecretVersion',
            google.cloud.secretmanager.v1.service_pb2.AccessSecretVersionRequest,
            google.cloud.secretmanager.v1.service_pb2.AccessSecretVersionResponse,
        )
        self.DisableSecretVersion = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/DisableSecretVersion',
            google.cloud.secretmanager.v1.service_pb2.DisableSecretVersionRequest,
            google.cloud.secretmanager.v1.resources_pb2.SecretVersion,
        )
        self.EnableSecretVersion = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/EnableSecretVersion',
            google.cloud.secretmanager.v1.service_pb2.EnableSecretVersionRequest,
            google.cloud.secretmanager.v1.resources_pb2.SecretVersion,
        )
        self.DestroySecretVersion = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/DestroySecretVersion',
            google.cloud.secretmanager.v1.service_pb2.DestroySecretVersionRequest,
            google.cloud.secretmanager.v1.resources_pb2.SecretVersion,
        )
        self.SetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/SetIamPolicy',
            google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.GetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/GetIamPolicy',
            google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.TestIamPermissions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.secretmanager.v1.SecretManagerService/TestIamPermissions',
            google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
            google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
        )
