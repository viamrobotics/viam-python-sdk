"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.video.livestream.v1.resources_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CreateChannelRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.CreateChannel"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    CHANNEL_FIELD_NUMBER: builtins.int
    CHANNEL_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent location for the resource, in the form of:
    `projects/{project}/locations/{location}`.
    """

    @property
    def channel(self) -> google.cloud.video.livestream.v1.resources_pb2.Channel:
        """Required. The channel resource to be created."""
        pass
    channel_id: typing.Text = ...
    """Required. The ID of the channel resource to be created.
    This value must be 1-63 characters, begin and end with `[a-z0-9]`,
    could contain dashes (-) in between.
    """

    request_id: typing.Text = ...
    """A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported `(00000000-0000-0000-0000-000000000000)`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        channel : typing.Optional[google.cloud.video.livestream.v1.resources_pb2.Channel] = ...,
        channel_id : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["channel",b"channel"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel",b"channel","channel_id",b"channel_id","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateChannelRequest = CreateChannelRequest

class ListChannelsRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.ListChannels"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent location for the resource, in the form of:
    `projects/{project}/locations/{location}`.
    """

    page_size: builtins.int = ...
    """The maximum number of items to return. If unspecified, server
    will pick an appropriate default. Server may return fewer items than
    requested. A caller should only rely on response's
    [next_page_token][google.cloud.video.livestream.v1.ListChannelsResponse.next_page_token] to
    determine if there are more items left to be queried.
    """

    page_token: typing.Text = ...
    """The next_page_token value returned from a previous List request, if any."""

    filter: typing.Text = ...
    """The filter to apply to list results."""

    order_by: typing.Text = ...
    """Specifies the ordering of results following syntax at
    https://cloud.google.com/apis/design/design_patterns#sorting_order.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListChannelsRequest = ListChannelsRequest

class ListChannelsResponse(google.protobuf.message.Message):
    """Response message for "LivestreamService.ListChannels"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CHANNELS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def channels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.video.livestream.v1.resources_pb2.Channel]:
        """A list of channels."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results in the list.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        channels : typing.Optional[typing.Iterable[google.cloud.video.livestream.v1.resources_pb2.Channel]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channels",b"channels","next_page_token",b"next_page_token","unreachable",b"unreachable"]) -> None: ...
global___ListChannelsResponse = ListChannelsResponse

class GetChannelRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.GetChannel"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the channel resource, in the form of:
    `projects/{project}/locations/{location}/channels/{channelId}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetChannelRequest = GetChannelRequest

class DeleteChannelRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.DeleteChannel"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the channel resource, in the form of:
    `projects/{project}/locations/{location}/channels/{channelId}`.
    """

    request_id: typing.Text = ...
    """A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes after the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported `(00000000-0000-0000-0000-000000000000)`.
    """

    force: builtins.bool = ...
    """If the `force` field is set to the default value of `false`, you must
    delete all of a channel's events before you can delete the channel itself.
    If the field is set to `true`, requests to delete a channel also delete
    associated channel events.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        force : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["force",b"force","name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteChannelRequest = DeleteChannelRequest

class UpdateChannelRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.UpdateChannel"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    CHANNEL_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Field mask is used to specify the fields to be overwritten in the Channel
        resource by the update. You can only update the following fields:

        * [`inputAttachments`](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#inputattachment)
        * [`output`](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#output)
        * [`elementaryStreams`](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#ElementaryStream)
        * [`muxStreams`](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#muxstream)
        * [`manifests`](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#Manifest)
        * [`spritesheets`](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.channels#spritesheet)

        The fields specified in the update_mask are relative to the resource, not
        the full request. A field will be overwritten if it is in the mask.
        """
        pass
    @property
    def channel(self) -> google.cloud.video.livestream.v1.resources_pb2.Channel:
        """Required. The channel resource to be updated."""
        pass
    request_id: typing.Text = ...
    """A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported `(00000000-0000-0000-0000-000000000000)`.
    """

    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        channel : typing.Optional[google.cloud.video.livestream.v1.resources_pb2.Channel] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["channel",b"channel","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel",b"channel","request_id",b"request_id","update_mask",b"update_mask"]) -> None: ...
global___UpdateChannelRequest = UpdateChannelRequest

class StartChannelRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.StartChannel"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the channel resource, in the form of:
    `projects/{project}/locations/{location}/channels/{channelId}`.
    """

    request_id: typing.Text = ...
    """A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported `(00000000-0000-0000-0000-000000000000)`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___StartChannelRequest = StartChannelRequest

class StopChannelRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.StopChannel"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the channel resource, in the form of:
    `projects/{project}/locations/{location}/channels/{channelId}`.
    """

    request_id: typing.Text = ...
    """A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported `(00000000-0000-0000-0000-000000000000)`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___StopChannelRequest = StopChannelRequest

class CreateInputRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.CreateInput"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    INPUT_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent location for the resource, in the form of:
    `projects/{project}/locations/{location}`.
    """

    @property
    def input(self) -> google.cloud.video.livestream.v1.resources_pb2.Input:
        """Required. The input resource to be created."""
        pass
    input_id: typing.Text = ...
    """Required. The ID of the input resource to be created.
    This value must be 1-63 characters, begin and end with `[a-z0-9]`,
    could contain dashes (-) in between.
    """

    request_id: typing.Text = ...
    """A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported `(00000000-0000-0000-0000-000000000000)`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        input : typing.Optional[google.cloud.video.livestream.v1.resources_pb2.Input] = ...,
        input_id : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["input",b"input"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input",b"input","input_id",b"input_id","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateInputRequest = CreateInputRequest

class ListInputsRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.ListInputs"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent location for the resource, in the form of:
    `projects/{project}/locations/{location}`.
    """

    page_size: builtins.int = ...
    """The maximum number of items to return. If unspecified, server
    will pick an appropriate default. Server may return fewer items than
    requested. A caller should only rely on response's
    [next_page_token][google.cloud.video.livestream.v1.ListInputsResponse.next_page_token] to
    determine if there are more items left to be queried.
    """

    page_token: typing.Text = ...
    """The next_page_token value returned from a previous List request, if any."""

    filter: typing.Text = ...
    """The filter to apply to list results."""

    order_by: typing.Text = ...
    """Specifies the ordering of results following syntax at [Sorting
    Order](https://cloud.google.com/apis/design/design_patterns#sorting_order).
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListInputsRequest = ListInputsRequest

class ListInputsResponse(google.protobuf.message.Message):
    """Response message for "LivestreamService.ListInputs"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INPUTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.video.livestream.v1.resources_pb2.Input]:
        """A list of inputs."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results in the list.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        inputs : typing.Optional[typing.Iterable[google.cloud.video.livestream.v1.resources_pb2.Input]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs",b"inputs","next_page_token",b"next_page_token","unreachable",b"unreachable"]) -> None: ...
global___ListInputsResponse = ListInputsResponse

class GetInputRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.GetInput"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the input resource, in the form of:
    `projects/{project}/locations/{location}/inputs/{inputId}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetInputRequest = GetInputRequest

class DeleteInputRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.DeleteInput"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the input resource, in the form of:
    `projects/{project}/locations/{location}/inputs/{inputId}`.
    """

    request_id: typing.Text = ...
    """A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported `(00000000-0000-0000-0000-000000000000)`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteInputRequest = DeleteInputRequest

class UpdateInputRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.UpdateInput"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Field mask is used to specify the fields to be overwritten in the Input
        resource by the update. You can only update the following fields:

        * [`preprocessingConfig`](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.inputs#PreprocessingConfig)
        * [`securityRules`](https://cloud.google.com/livestream/docs/reference/rest/v1/projects.locations.inputs#SecurityRule)

        The fields specified in the update_mask are relative to the resource, not
        the full request. A field will be overwritten if it is in the mask.
        """
        pass
    @property
    def input(self) -> google.cloud.video.livestream.v1.resources_pb2.Input:
        """Required. The input resource to be updated."""
        pass
    request_id: typing.Text = ...
    """A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported `(00000000-0000-0000-0000-000000000000)`.
    """

    def __init__(self,
        *,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        input : typing.Optional[google.cloud.video.livestream.v1.resources_pb2.Input] = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["input",b"input","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input",b"input","request_id",b"request_id","update_mask",b"update_mask"]) -> None: ...
global___UpdateInputRequest = UpdateInputRequest

class CreateEventRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.CreateEvent"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    EVENT_FIELD_NUMBER: builtins.int
    EVENT_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent channel for the resource, in the form of:
    `projects/{project}/locations/{location}/channels/{channelId}`.
    """

    @property
    def event(self) -> google.cloud.video.livestream.v1.resources_pb2.Event:
        """Required. The event resource to be created."""
        pass
    event_id: typing.Text = ...
    """Required. The ID of the event resource to be created.
    This value must be 1-63 characters, begin and end with `[a-z0-9]`,
    could contain dashes (-) in between.
    """

    request_id: typing.Text = ...
    """A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported `(00000000-0000-0000-0000-000000000000)`.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        event : typing.Optional[google.cloud.video.livestream.v1.resources_pb2.Event] = ...,
        event_id : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["event",b"event"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["event",b"event","event_id",b"event_id","parent",b"parent","request_id",b"request_id"]) -> None: ...
global___CreateEventRequest = CreateEventRequest

class ListEventsRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.ListEvents"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The parent channel for the resource, in the form of:
    `projects/{project}/locations/{location}/channels/{channelId}`.
    """

    page_size: builtins.int = ...
    """The maximum number of items to return. If unspecified, server
    will pick an appropriate default. Server may return fewer items than
    requested. A caller should only rely on response's
    [next_page_token][google.cloud.video.livestream.v1.ListEventsResponse.next_page_token] to
    determine if there are more items left to be queried.
    """

    page_token: typing.Text = ...
    """The next_page_token value returned from a previous List request, if any."""

    filter: typing.Text = ...
    """The filter to apply to list results."""

    order_by: typing.Text = ...
    """Specifies the ordering of results following syntax at
    https://cloud.google.com/apis/design/design_patterns#sorting_order.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListEventsRequest = ListEventsRequest

class ListEventsResponse(google.protobuf.message.Message):
    """Response message for "LivestreamService.ListEvents"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EVENTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    UNREACHABLE_FIELD_NUMBER: builtins.int
    @property
    def events(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.video.livestream.v1.resources_pb2.Event]:
        """A list of events."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results in the list.
    """

    @property
    def unreachable(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations that could not be reached."""
        pass
    def __init__(self,
        *,
        events : typing.Optional[typing.Iterable[google.cloud.video.livestream.v1.resources_pb2.Event]] = ...,
        next_page_token : typing.Text = ...,
        unreachable : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["events",b"events","next_page_token",b"next_page_token","unreachable",b"unreachable"]) -> None: ...
global___ListEventsResponse = ListEventsResponse

class GetEventRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.GetEvent"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the event resource, in the form of:
    `projects/{project}/locations/{location}/channels/{channelId}/events/{eventId}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetEventRequest = GetEventRequest

class DeleteEventRequest(google.protobuf.message.Message):
    """Request message for "LivestreamService.DeleteEvent"."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the event resource, in the form of:
    `projects/{project}/locations/{location}/channels/{channelId}/events/{eventId}`.
    """

    request_id: typing.Text = ...
    """A request ID to identify requests. Specify a unique request ID
    so that if you must retry your request, the server will know to ignore
    the request if it has already been completed. The server will guarantee
    that for at least 60 minutes since the first request.

    For example, consider a situation where you make an initial request and the
    request times out. If you make the request again with the same request ID,
    the server can check if original operation with the same request ID was
    received, and if so, will ignore the second request. This prevents clients
    from accidentally creating duplicate commitments.

    The request ID must be a valid UUID with the exception that zero UUID is
    not supported `(00000000-0000-0000-0000-000000000000)`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        request_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","request_id",b"request_id"]) -> None: ...
global___DeleteEventRequest = DeleteEventRequest

class ChannelOperationResponse(google.protobuf.message.Message):
    """Response message for Start/Stop Channel long-running operations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ChannelOperationResponse = ChannelOperationResponse

class OperationMetadata(google.protobuf.message.Message):
    """Represents the metadata of the long-running operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATE_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    VERB_FIELD_NUMBER: builtins.int
    REQUESTED_CANCELLATION_FIELD_NUMBER: builtins.int
    API_VERSION_FIELD_NUMBER: builtins.int
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation was created."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time the operation finished running."""
        pass
    target: typing.Text = ...
    """Output only. Server-defined resource path for the target of the operation."""

    verb: typing.Text = ...
    """Output only. Name of the verb executed by the operation."""

    requested_cancellation: builtins.bool = ...
    """Output only. Identifies whether the user has requested cancellation
    of the operation. Operations that have successfully been cancelled
    have [Operation.error][] value with a
    [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to
    `Code.CANCELLED`.
    """

    api_version: typing.Text = ...
    """Output only. API version used to start the operation."""

    def __init__(self,
        *,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        target : typing.Text = ...,
        verb : typing.Text = ...,
        requested_cancellation : builtins.bool = ...,
        api_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["api_version",b"api_version","create_time",b"create_time","end_time",b"end_time","requested_cancellation",b"requested_cancellation","target",b"target","verb",b"verb"]) -> None: ...
global___OperationMetadata = OperationMetadata
