"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class UsageStats(google.protobuf.message.Message):
    """Detailed statistics on the entry's usage.

    Usage statistics have the following limitations:

    - Only BigQuery tables have them.
    - They only include BigQuery query jobs.
    - They might be underestimated because wildcard table references
      are not yet counted. For more information, see
      [Querying multiple tables using a wildcard table]
      (https://cloud.google.com/bigquery/docs/querying-wildcard-tables)
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOTAL_COMPLETIONS_FIELD_NUMBER: builtins.int
    TOTAL_FAILURES_FIELD_NUMBER: builtins.int
    TOTAL_CANCELLATIONS_FIELD_NUMBER: builtins.int
    TOTAL_EXECUTION_TIME_FOR_COMPLETIONS_MILLIS_FIELD_NUMBER: builtins.int
    total_completions: builtins.float = ...
    """The number of successful uses of the underlying entry."""

    total_failures: builtins.float = ...
    """The number of failed attempts to use the underlying entry."""

    total_cancellations: builtins.float = ...
    """The number of cancelled attempts to use the underlying entry."""

    total_execution_time_for_completions_millis: builtins.float = ...
    """Total time spent only on successful uses, in milliseconds."""

    def __init__(self,
        *,
        total_completions : builtins.float = ...,
        total_failures : builtins.float = ...,
        total_cancellations : builtins.float = ...,
        total_execution_time_for_completions_millis : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["total_cancellations",b"total_cancellations","total_completions",b"total_completions","total_execution_time_for_completions_millis",b"total_execution_time_for_completions_millis","total_failures",b"total_failures"]) -> None: ...
global___UsageStats = UsageStats

class UsageSignal(google.protobuf.message.Message):
    """The set of all usage signals that Data Catalog stores.

    Note: Usually, these signals are updated daily. In rare cases, an update may
    fail but will be performed again on the next day.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class UsageWithinTimeRangeEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___UsageStats: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___UsageStats] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    UPDATE_TIME_FIELD_NUMBER: builtins.int
    USAGE_WITHIN_TIME_RANGE_FIELD_NUMBER: builtins.int
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The end timestamp of the duration of usage statistics."""
        pass
    @property
    def usage_within_time_range(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___UsageStats]:
        """Usage statistics over each of the predefined time ranges.

        Supported time ranges are `{"24H", "7D", "30D"}`.
        """
        pass
    def __init__(self,
        *,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        usage_within_time_range : typing.Optional[typing.Mapping[typing.Text, global___UsageStats]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["update_time",b"update_time","usage_within_time_range",b"usage_within_time_range"]) -> None: ...
global___UsageSignal = UsageSignal
