"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.datacatalog.v1.common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _SearchResultType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SearchResultTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SearchResultType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    SEARCH_RESULT_TYPE_UNSPECIFIED: SearchResultType.ValueType = ...  # 0
    """Default unknown type."""

    ENTRY: SearchResultType.ValueType = ...  # 1
    """An [Entry][google.cloud.datacatalog.v1.Entry]."""

    TAG_TEMPLATE: SearchResultType.ValueType = ...  # 2
    """A [TagTemplate][google.cloud.datacatalog.v1.TagTemplate]."""

    ENTRY_GROUP: SearchResultType.ValueType = ...  # 3
    """An [EntryGroup][google.cloud.datacatalog.v1.EntryGroup]."""

class SearchResultType(_SearchResultType, metaclass=_SearchResultTypeEnumTypeWrapper):
    """The resource types that can be returned in search results."""
    pass

SEARCH_RESULT_TYPE_UNSPECIFIED: SearchResultType.ValueType = ...  # 0
"""Default unknown type."""

ENTRY: SearchResultType.ValueType = ...  # 1
"""An [Entry][google.cloud.datacatalog.v1.Entry]."""

TAG_TEMPLATE: SearchResultType.ValueType = ...  # 2
"""A [TagTemplate][google.cloud.datacatalog.v1.TagTemplate]."""

ENTRY_GROUP: SearchResultType.ValueType = ...  # 3
"""An [EntryGroup][google.cloud.datacatalog.v1.EntryGroup]."""

global___SearchResultType = SearchResultType


class SearchCatalogResult(google.protobuf.message.Message):
    """Result in the response to a search request.

    Each result captures details of one entry that matches the search.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SEARCH_RESULT_TYPE_FIELD_NUMBER: builtins.int
    SEARCH_RESULT_SUBTYPE_FIELD_NUMBER: builtins.int
    RELATIVE_RESOURCE_NAME_FIELD_NUMBER: builtins.int
    LINKED_RESOURCE_FIELD_NUMBER: builtins.int
    MODIFY_TIME_FIELD_NUMBER: builtins.int
    INTEGRATED_SYSTEM_FIELD_NUMBER: builtins.int
    USER_SPECIFIED_SYSTEM_FIELD_NUMBER: builtins.int
    FULLY_QUALIFIED_NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    search_result_type: global___SearchResultType.ValueType = ...
    """Type of the search result.

    You can use this field to determine which get method to call to fetch the
    full resource.
    """

    search_result_subtype: typing.Text = ...
    """Sub-type of the search result.

    A dot-delimited full type of the resource. The same type you
    specify in the `type` search predicate.

    Examples: `entry.table`, `entry.dataStream`, `tagTemplate`.
    """

    relative_resource_name: typing.Text = ...
    """The relative name of the resource in URL format.

    Examples:

     * `projects/{PROJECT_ID}/locations/{LOCATION_ID}/entryGroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`
     * `projects/{PROJECT_ID}/tagTemplates/{TAG_TEMPLATE_ID}`
    """

    linked_resource: typing.Text = ...
    """The full name of the Google Cloud resource the entry belongs to.

    For more information, see [Full Resource Name]
    (/apis/design/resource_names#full_resource_name).

    Example:

    `//bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID`
    """

    @property
    def modify_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The last modification timestamp of the entry in the source system."""
        pass
    integrated_system: google.cloud.datacatalog.v1.common_pb2.IntegratedSystem.ValueType = ...
    """Output only. The source system that Data Catalog automatically integrates  with, such
    as BigQuery, Cloud Pub/Sub, or Dataproc Metastore.
    """

    user_specified_system: typing.Text = ...
    """Custom source system that you can manually integrate Data Catalog with."""

    fully_qualified_name: typing.Text = ...
    """Fully qualified name (FQN) of the resource.

    FQNs take two forms:

    * For non-regionalized resources:

      `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}`

    * For regionalized resources:

      `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}`

    Example for a DPMS table:

    `dataproc_metastore:PROJECT_ID.LOCATION_ID.INSTANCE_ID.DATABASE_ID.TABLE_ID`
    """

    display_name: typing.Text = ...
    """The display name of the result."""

    description: typing.Text = ...
    """Entry description that can consist of several sentences or paragraphs that
    describe entry contents.
    """

    def __init__(self,
        *,
        search_result_type : global___SearchResultType.ValueType = ...,
        search_result_subtype : typing.Text = ...,
        relative_resource_name : typing.Text = ...,
        linked_resource : typing.Text = ...,
        modify_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        integrated_system : google.cloud.datacatalog.v1.common_pb2.IntegratedSystem.ValueType = ...,
        user_specified_system : typing.Text = ...,
        fully_qualified_name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["integrated_system",b"integrated_system","modify_time",b"modify_time","system",b"system","user_specified_system",b"user_specified_system"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","display_name",b"display_name","fully_qualified_name",b"fully_qualified_name","integrated_system",b"integrated_system","linked_resource",b"linked_resource","modify_time",b"modify_time","relative_resource_name",b"relative_resource_name","search_result_subtype",b"search_result_subtype","search_result_type",b"search_result_type","system",b"system","user_specified_system",b"user_specified_system"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["system",b"system"]) -> typing.Optional[typing_extensions.Literal["integrated_system","user_specified_system"]]: ...
global___SearchCatalogResult = SearchCatalogResult
