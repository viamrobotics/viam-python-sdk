"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Schema(google.protobuf.message.Message):
    """Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COLUMNS_FIELD_NUMBER: builtins.int
    @property
    def columns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ColumnSchema]:
        """Required. Schema of columns. A maximum of 10,000 columns and sub-columns can be
        specified.
        """
        pass
    def __init__(self,
        *,
        columns : typing.Optional[typing.Iterable[global___ColumnSchema]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["columns",b"columns"]) -> None: ...
global___Schema = Schema

class ColumnSchema(google.protobuf.message.Message):
    """Representation of a column within a schema. Columns could be nested inside
    other columns.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COLUMN_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    SUBCOLUMNS_FIELD_NUMBER: builtins.int
    column: typing.Text = ...
    """Required. Name of the column."""

    type: typing.Text = ...
    """Required. Type of the column."""

    description: typing.Text = ...
    """Optional. Description of the column. Default value is an empty string."""

    mode: typing.Text = ...
    """Optional. A column's mode indicates whether the values in this column are required,
    nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported.
    Default mode is `NULLABLE`.
    """

    @property
    def subcolumns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ColumnSchema]:
        """Optional. Schema of sub-columns. A column can have zero or more sub-columns."""
        pass
    def __init__(self,
        *,
        column : typing.Text = ...,
        type : typing.Text = ...,
        description : typing.Text = ...,
        mode : typing.Text = ...,
        subcolumns : typing.Optional[typing.Iterable[global___ColumnSchema]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["column",b"column","description",b"description","mode",b"mode","subcolumns",b"subcolumns","type",b"type"]) -> None: ...
global___ColumnSchema = ColumnSchema
