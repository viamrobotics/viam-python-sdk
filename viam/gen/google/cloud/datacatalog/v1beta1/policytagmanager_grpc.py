# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/datacatalog/v1beta1/policytagmanager.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.cloud.datacatalog.v1beta1.timestamps_pb2
import google.iam.v1.iam_policy_pb2
import google.iam.v1.policy_pb2
import google.protobuf.empty_pb2
import google.protobuf.field_mask_pb2
import google.cloud.datacatalog.v1beta1.policytagmanager_pb2


class PolicyTagManagerBase(abc.ABC):

    @abc.abstractmethod
    async def CreateTaxonomy(self, stream: 'grpclib.server.Stream[google.cloud.datacatalog.v1beta1.policytagmanager_pb2.CreateTaxonomyRequest, google.cloud.datacatalog.v1beta1.policytagmanager_pb2.Taxonomy]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteTaxonomy(self, stream: 'grpclib.server.Stream[google.cloud.datacatalog.v1beta1.policytagmanager_pb2.DeleteTaxonomyRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateTaxonomy(self, stream: 'grpclib.server.Stream[google.cloud.datacatalog.v1beta1.policytagmanager_pb2.UpdateTaxonomyRequest, google.cloud.datacatalog.v1beta1.policytagmanager_pb2.Taxonomy]') -> None:
        pass

    @abc.abstractmethod
    async def ListTaxonomies(self, stream: 'grpclib.server.Stream[google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListTaxonomiesRequest, google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListTaxonomiesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetTaxonomy(self, stream: 'grpclib.server.Stream[google.cloud.datacatalog.v1beta1.policytagmanager_pb2.GetTaxonomyRequest, google.cloud.datacatalog.v1beta1.policytagmanager_pb2.Taxonomy]') -> None:
        pass

    @abc.abstractmethod
    async def CreatePolicyTag(self, stream: 'grpclib.server.Stream[google.cloud.datacatalog.v1beta1.policytagmanager_pb2.CreatePolicyTagRequest, google.cloud.datacatalog.v1beta1.policytagmanager_pb2.PolicyTag]') -> None:
        pass

    @abc.abstractmethod
    async def DeletePolicyTag(self, stream: 'grpclib.server.Stream[google.cloud.datacatalog.v1beta1.policytagmanager_pb2.DeletePolicyTagRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def UpdatePolicyTag(self, stream: 'grpclib.server.Stream[google.cloud.datacatalog.v1beta1.policytagmanager_pb2.UpdatePolicyTagRequest, google.cloud.datacatalog.v1beta1.policytagmanager_pb2.PolicyTag]') -> None:
        pass

    @abc.abstractmethod
    async def ListPolicyTags(self, stream: 'grpclib.server.Stream[google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListPolicyTagsRequest, google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListPolicyTagsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetPolicyTag(self, stream: 'grpclib.server.Stream[google.cloud.datacatalog.v1beta1.policytagmanager_pb2.GetPolicyTagRequest, google.cloud.datacatalog.v1beta1.policytagmanager_pb2.PolicyTag]') -> None:
        pass

    @abc.abstractmethod
    async def GetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.GetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def SetIamPolicy(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.SetIamPolicyRequest, google.iam.v1.policy_pb2.Policy]') -> None:
        pass

    @abc.abstractmethod
    async def TestIamPermissions(self, stream: 'grpclib.server.Stream[google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest, google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/CreateTaxonomy': grpclib.const.Handler(
                self.CreateTaxonomy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.CreateTaxonomyRequest,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.Taxonomy,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/DeleteTaxonomy': grpclib.const.Handler(
                self.DeleteTaxonomy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.DeleteTaxonomyRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/UpdateTaxonomy': grpclib.const.Handler(
                self.UpdateTaxonomy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.UpdateTaxonomyRequest,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.Taxonomy,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/ListTaxonomies': grpclib.const.Handler(
                self.ListTaxonomies,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListTaxonomiesRequest,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListTaxonomiesResponse,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/GetTaxonomy': grpclib.const.Handler(
                self.GetTaxonomy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.GetTaxonomyRequest,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.Taxonomy,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/CreatePolicyTag': grpclib.const.Handler(
                self.CreatePolicyTag,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.CreatePolicyTagRequest,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.PolicyTag,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/DeletePolicyTag': grpclib.const.Handler(
                self.DeletePolicyTag,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.DeletePolicyTagRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/UpdatePolicyTag': grpclib.const.Handler(
                self.UpdatePolicyTag,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.UpdatePolicyTagRequest,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.PolicyTag,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/ListPolicyTags': grpclib.const.Handler(
                self.ListPolicyTags,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListPolicyTagsRequest,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListPolicyTagsResponse,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/GetPolicyTag': grpclib.const.Handler(
                self.GetPolicyTag,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.GetPolicyTagRequest,
                google.cloud.datacatalog.v1beta1.policytagmanager_pb2.PolicyTag,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/GetIamPolicy': grpclib.const.Handler(
                self.GetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/SetIamPolicy': grpclib.const.Handler(
                self.SetIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
                google.iam.v1.policy_pb2.Policy,
            ),
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/TestIamPermissions': grpclib.const.Handler(
                self.TestIamPermissions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
                google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
            ),
        }


class PolicyTagManagerStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateTaxonomy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/CreateTaxonomy',
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.CreateTaxonomyRequest,
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.Taxonomy,
        )
        self.DeleteTaxonomy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/DeleteTaxonomy',
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.DeleteTaxonomyRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.UpdateTaxonomy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/UpdateTaxonomy',
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.UpdateTaxonomyRequest,
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.Taxonomy,
        )
        self.ListTaxonomies = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/ListTaxonomies',
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListTaxonomiesRequest,
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListTaxonomiesResponse,
        )
        self.GetTaxonomy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/GetTaxonomy',
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.GetTaxonomyRequest,
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.Taxonomy,
        )
        self.CreatePolicyTag = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/CreatePolicyTag',
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.CreatePolicyTagRequest,
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.PolicyTag,
        )
        self.DeletePolicyTag = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/DeletePolicyTag',
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.DeletePolicyTagRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.UpdatePolicyTag = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/UpdatePolicyTag',
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.UpdatePolicyTagRequest,
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.PolicyTag,
        )
        self.ListPolicyTags = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/ListPolicyTags',
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListPolicyTagsRequest,
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.ListPolicyTagsResponse,
        )
        self.GetPolicyTag = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/GetPolicyTag',
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.GetPolicyTagRequest,
            google.cloud.datacatalog.v1beta1.policytagmanager_pb2.PolicyTag,
        )
        self.GetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/GetIamPolicy',
            google.iam.v1.iam_policy_pb2.GetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.SetIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/SetIamPolicy',
            google.iam.v1.iam_policy_pb2.SetIamPolicyRequest,
            google.iam.v1.policy_pb2.Policy,
        )
        self.TestIamPermissions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.datacatalog.v1beta1.PolicyTagManager/TestIamPermissions',
            google.iam.v1.iam_policy_pb2.TestIamPermissionsRequest,
            google.iam.v1.iam_policy_pb2.TestIamPermissionsResponse,
        )
