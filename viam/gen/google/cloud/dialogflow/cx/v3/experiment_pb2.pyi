"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Experiment(google.protobuf.message.Message):
    """Represents an experiment in an environment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Experiment.State.ValueType = ...  # 0
        """State unspecified."""

        DRAFT: Experiment.State.ValueType = ...  # 1
        """The experiment is created but not started yet."""

        RUNNING: Experiment.State.ValueType = ...  # 2
        """The experiment is running."""

        DONE: Experiment.State.ValueType = ...  # 3
        """The experiment is done."""

        ROLLOUT_FAILED: Experiment.State.ValueType = ...  # 4
        """The experiment with auto-rollout enabled has failed."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The state of the experiment."""
        pass

    STATE_UNSPECIFIED: Experiment.State.ValueType = ...  # 0
    """State unspecified."""

    DRAFT: Experiment.State.ValueType = ...  # 1
    """The experiment is created but not started yet."""

    RUNNING: Experiment.State.ValueType = ...  # 2
    """The experiment is running."""

    DONE: Experiment.State.ValueType = ...  # 3
    """The experiment is done."""

    ROLLOUT_FAILED: Experiment.State.ValueType = ...  # 4
    """The experiment with auto-rollout enabled has failed."""


    class Definition(google.protobuf.message.Message):
        """Definition of the experiment."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CONDITION_FIELD_NUMBER: builtins.int
        VERSION_VARIANTS_FIELD_NUMBER: builtins.int
        condition: typing.Text = ...
        """The condition defines which subset of sessions are selected for
        this experiment. If not specified, all sessions are eligible. E.g.
        "query_input.language_code=en" See the [conditions
        reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
        """

        @property
        def version_variants(self) -> global___VersionVariants:
            """The flow versions as the variants of this experiment."""
            pass
        def __init__(self,
            *,
            condition : typing.Text = ...,
            version_variants : typing.Optional[global___VersionVariants] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["variants",b"variants","version_variants",b"version_variants"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["condition",b"condition","variants",b"variants","version_variants",b"version_variants"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["variants",b"variants"]) -> typing.Optional[typing_extensions.Literal["version_variants"]]: ...

    class Result(google.protobuf.message.Message):
        """The inference result which includes an objective metric to optimize and the
        confidence interval.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _MetricType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _MetricTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MetricType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            METRIC_UNSPECIFIED: Experiment.Result.MetricType.ValueType = ...  # 0
            """Metric unspecified."""

            CONTAINED_SESSION_NO_CALLBACK_RATE: Experiment.Result.MetricType.ValueType = ...  # 1
            """Percentage of contained sessions without user calling back in 24 hours."""

            LIVE_AGENT_HANDOFF_RATE: Experiment.Result.MetricType.ValueType = ...  # 2
            """Percentage of sessions that were handed to a human agent."""

            CALLBACK_SESSION_RATE: Experiment.Result.MetricType.ValueType = ...  # 3
            """Percentage of sessions with the same user calling back."""

            ABANDONED_SESSION_RATE: Experiment.Result.MetricType.ValueType = ...  # 4
            """Percentage of sessions where user hung up."""

            SESSION_END_RATE: Experiment.Result.MetricType.ValueType = ...  # 5
            """Percentage of sessions reached Dialogflow 'END_PAGE' or
            'END_SESSION'.
            """

        class MetricType(_MetricType, metaclass=_MetricTypeEnumTypeWrapper):
            """Types of ratio-based metric for Dialogflow experiment."""
            pass

        METRIC_UNSPECIFIED: Experiment.Result.MetricType.ValueType = ...  # 0
        """Metric unspecified."""

        CONTAINED_SESSION_NO_CALLBACK_RATE: Experiment.Result.MetricType.ValueType = ...  # 1
        """Percentage of contained sessions without user calling back in 24 hours."""

        LIVE_AGENT_HANDOFF_RATE: Experiment.Result.MetricType.ValueType = ...  # 2
        """Percentage of sessions that were handed to a human agent."""

        CALLBACK_SESSION_RATE: Experiment.Result.MetricType.ValueType = ...  # 3
        """Percentage of sessions with the same user calling back."""

        ABANDONED_SESSION_RATE: Experiment.Result.MetricType.ValueType = ...  # 4
        """Percentage of sessions where user hung up."""

        SESSION_END_RATE: Experiment.Result.MetricType.ValueType = ...  # 5
        """Percentage of sessions reached Dialogflow 'END_PAGE' or
        'END_SESSION'.
        """


        class _CountType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _CountTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CountType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            COUNT_TYPE_UNSPECIFIED: Experiment.Result.CountType.ValueType = ...  # 0
            """Count type unspecified."""

            TOTAL_NO_MATCH_COUNT: Experiment.Result.CountType.ValueType = ...  # 1
            """Total number of occurrences of a 'NO_MATCH'."""

            TOTAL_TURN_COUNT: Experiment.Result.CountType.ValueType = ...  # 2
            """Total number of turn counts."""

            AVERAGE_TURN_COUNT: Experiment.Result.CountType.ValueType = ...  # 3
            """Average turn count in a session."""

        class CountType(_CountType, metaclass=_CountTypeEnumTypeWrapper):
            """Types of count-based metric for Dialogflow experiment."""
            pass

        COUNT_TYPE_UNSPECIFIED: Experiment.Result.CountType.ValueType = ...  # 0
        """Count type unspecified."""

        TOTAL_NO_MATCH_COUNT: Experiment.Result.CountType.ValueType = ...  # 1
        """Total number of occurrences of a 'NO_MATCH'."""

        TOTAL_TURN_COUNT: Experiment.Result.CountType.ValueType = ...  # 2
        """Total number of turn counts."""

        AVERAGE_TURN_COUNT: Experiment.Result.CountType.ValueType = ...  # 3
        """Average turn count in a session."""


        class ConfidenceInterval(google.protobuf.message.Message):
            """A confidence interval is a range of possible values for the experiment
            objective you are trying to measure.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            CONFIDENCE_LEVEL_FIELD_NUMBER: builtins.int
            RATIO_FIELD_NUMBER: builtins.int
            LOWER_BOUND_FIELD_NUMBER: builtins.int
            UPPER_BOUND_FIELD_NUMBER: builtins.int
            confidence_level: builtins.float = ...
            """The confidence level used to construct the interval, i.e. there is X%
            chance that the true value is within this interval.
            """

            ratio: builtins.float = ...
            """The percent change between an experiment metric's value and the value
            for its control.
            """

            lower_bound: builtins.float = ...
            """Lower bound of the interval."""

            upper_bound: builtins.float = ...
            """Upper bound of the interval."""

            def __init__(self,
                *,
                confidence_level : builtins.float = ...,
                ratio : builtins.float = ...,
                lower_bound : builtins.float = ...,
                upper_bound : builtins.float = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["confidence_level",b"confidence_level","lower_bound",b"lower_bound","ratio",b"ratio","upper_bound",b"upper_bound"]) -> None: ...

        class Metric(google.protobuf.message.Message):
            """Metric and corresponding confidence intervals."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TYPE_FIELD_NUMBER: builtins.int
            COUNT_TYPE_FIELD_NUMBER: builtins.int
            RATIO_FIELD_NUMBER: builtins.int
            COUNT_FIELD_NUMBER: builtins.int
            CONFIDENCE_INTERVAL_FIELD_NUMBER: builtins.int
            type: global___Experiment.Result.MetricType.ValueType = ...
            """Ratio-based metric type. Only one of type or count_type is specified in
            each Metric.
            """

            count_type: global___Experiment.Result.CountType.ValueType = ...
            """Count-based metric type. Only one of type or count_type is specified in
            each Metric.
            """

            ratio: builtins.float = ...
            """Ratio value of a metric."""

            count: builtins.float = ...
            """Count value of a metric."""

            @property
            def confidence_interval(self) -> global___Experiment.Result.ConfidenceInterval:
                """The probability that the treatment is better than all other treatments
                in the experiment
                """
                pass
            def __init__(self,
                *,
                type : global___Experiment.Result.MetricType.ValueType = ...,
                count_type : global___Experiment.Result.CountType.ValueType = ...,
                ratio : builtins.float = ...,
                count : builtins.float = ...,
                confidence_interval : typing.Optional[global___Experiment.Result.ConfidenceInterval] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["confidence_interval",b"confidence_interval","count",b"count","ratio",b"ratio","value",b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["confidence_interval",b"confidence_interval","count",b"count","count_type",b"count_type","ratio",b"ratio","type",b"type","value",b"value"]) -> None: ...
            def WhichOneof(self, oneof_group: typing_extensions.Literal["value",b"value"]) -> typing.Optional[typing_extensions.Literal["ratio","count"]]: ...

        class VersionMetrics(google.protobuf.message.Message):
            """Version variant and associated metrics."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VERSION_FIELD_NUMBER: builtins.int
            METRICS_FIELD_NUMBER: builtins.int
            SESSION_COUNT_FIELD_NUMBER: builtins.int
            version: typing.Text = ...
            """The name of the flow [Version][google.cloud.dialogflow.cx.v3.Version].
            Format: `projects/<Project ID>/locations/<Location
            ID>/agents/<Agent ID>/flows/<Flow ID>/versions/<Version ID>`.
            """

            @property
            def metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Experiment.Result.Metric]:
                """The metrics and corresponding confidence intervals in the inference
                result.
                """
                pass
            session_count: builtins.int = ...
            """Number of sessions that were allocated to this version."""

            def __init__(self,
                *,
                version : typing.Text = ...,
                metrics : typing.Optional[typing.Iterable[global___Experiment.Result.Metric]] = ...,
                session_count : builtins.int = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["metrics",b"metrics","session_count",b"session_count","version",b"version"]) -> None: ...

        VERSION_METRICS_FIELD_NUMBER: builtins.int
        LAST_UPDATE_TIME_FIELD_NUMBER: builtins.int
        @property
        def version_metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Experiment.Result.VersionMetrics]:
            """Version variants and metrics."""
            pass
        @property
        def last_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """The last time the experiment's stats data was updated. Will have default
            value if stats have never been computed for this experiment.
            """
            pass
        def __init__(self,
            *,
            version_metrics : typing.Optional[typing.Iterable[global___Experiment.Result.VersionMetrics]] = ...,
            last_update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["last_update_time",b"last_update_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["last_update_time",b"last_update_time","version_metrics",b"version_metrics"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    DEFINITION_FIELD_NUMBER: builtins.int
    ROLLOUT_CONFIG_FIELD_NUMBER: builtins.int
    ROLLOUT_STATE_FIELD_NUMBER: builtins.int
    ROLLOUT_FAILURE_REASON_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    LAST_UPDATE_TIME_FIELD_NUMBER: builtins.int
    EXPERIMENT_LENGTH_FIELD_NUMBER: builtins.int
    VARIANTS_HISTORY_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name of the experiment.
    Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>/experiments/<Experiment ID>..
    """

    display_name: typing.Text = ...
    """Required. The human-readable name of the experiment (unique in an environment). Limit
    of 64 characters.
    """

    description: typing.Text = ...
    """The human-readable description of the experiment."""

    state: global___Experiment.State.ValueType = ...
    """The current state of the experiment.
    Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING.
    Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or
    RUNNING->DONE.
    """

    @property
    def definition(self) -> global___Experiment.Definition:
        """The definition of the experiment."""
        pass
    @property
    def rollout_config(self) -> global___RolloutConfig:
        """The configuration for auto rollout. If set, there should be exactly two
        variants in the experiment (control variant being the default version of
        the flow), the traffic allocation for the non-control variant will
        gradually increase to 100% when conditions are met, and eventually
        replace the control variant to become the default version of the flow.
        """
        pass
    @property
    def rollout_state(self) -> global___RolloutState:
        """State of the auto rollout process."""
        pass
    rollout_failure_reason: typing.Text = ...
    """The reason why rollout has failed. Should only be set when state is
    ROLLOUT_FAILED.
    """

    @property
    def result(self) -> global___Experiment.Result:
        """Inference result of the experiment."""
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Creation time of this experiment."""
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Start time of this experiment."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """End time of this experiment."""
        pass
    @property
    def last_update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Last update time of this experiment."""
        pass
    @property
    def experiment_length(self) -> google.protobuf.duration_pb2.Duration:
        """Maximum number of days to run the experiment/rollout. If auto-rollout is
        not enabled, default value and maximum will be 30 days. If auto-rollout is
        enabled, default value and maximum will be 6 days.
        """
        pass
    @property
    def variants_history(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VariantsHistory]:
        """The history of updates to the experiment variants."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        state : global___Experiment.State.ValueType = ...,
        definition : typing.Optional[global___Experiment.Definition] = ...,
        rollout_config : typing.Optional[global___RolloutConfig] = ...,
        rollout_state : typing.Optional[global___RolloutState] = ...,
        rollout_failure_reason : typing.Text = ...,
        result : typing.Optional[global___Experiment.Result] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        last_update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        experiment_length : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        variants_history : typing.Optional[typing.Iterable[global___VariantsHistory]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","definition",b"definition","end_time",b"end_time","experiment_length",b"experiment_length","last_update_time",b"last_update_time","result",b"result","rollout_config",b"rollout_config","rollout_state",b"rollout_state","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","definition",b"definition","description",b"description","display_name",b"display_name","end_time",b"end_time","experiment_length",b"experiment_length","last_update_time",b"last_update_time","name",b"name","result",b"result","rollout_config",b"rollout_config","rollout_failure_reason",b"rollout_failure_reason","rollout_state",b"rollout_state","start_time",b"start_time","state",b"state","variants_history",b"variants_history"]) -> None: ...
global___Experiment = Experiment

class VersionVariants(google.protobuf.message.Message):
    """A list of flow version variants."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Variant(google.protobuf.message.Message):
        """A single flow version with specified traffic allocation."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        VERSION_FIELD_NUMBER: builtins.int
        TRAFFIC_ALLOCATION_FIELD_NUMBER: builtins.int
        IS_CONTROL_GROUP_FIELD_NUMBER: builtins.int
        version: typing.Text = ...
        """The name of the flow version.
        Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
        ID>/flows/<Flow ID>/versions/<Version ID>`.
        """

        traffic_allocation: builtins.float = ...
        """Percentage of the traffic which should be routed to this
        version of flow. Traffic allocation for a single flow must sum up to 1.0.
        """

        is_control_group: builtins.bool = ...
        """Whether the variant is for the control group."""

        def __init__(self,
            *,
            version : typing.Text = ...,
            traffic_allocation : builtins.float = ...,
            is_control_group : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["is_control_group",b"is_control_group","traffic_allocation",b"traffic_allocation","version",b"version"]) -> None: ...

    VARIANTS_FIELD_NUMBER: builtins.int
    @property
    def variants(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VersionVariants.Variant]:
        """A list of flow version variants."""
        pass
    def __init__(self,
        *,
        variants : typing.Optional[typing.Iterable[global___VersionVariants.Variant]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["variants",b"variants"]) -> None: ...
global___VersionVariants = VersionVariants

class VariantsHistory(google.protobuf.message.Message):
    """The history of variants update."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VERSION_VARIANTS_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    @property
    def version_variants(self) -> global___VersionVariants:
        """The flow versions as the variants."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Update time of the variants."""
        pass
    def __init__(self,
        *,
        version_variants : typing.Optional[global___VersionVariants] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update_time",b"update_time","variants",b"variants","version_variants",b"version_variants"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["update_time",b"update_time","variants",b"variants","version_variants",b"version_variants"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["variants",b"variants"]) -> typing.Optional[typing_extensions.Literal["version_variants"]]: ...
global___VariantsHistory = VariantsHistory

class RolloutConfig(google.protobuf.message.Message):
    """The configuration for auto rollout."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class RolloutStep(google.protobuf.message.Message):
        """A single rollout step with specified traffic allocation."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DISPLAY_NAME_FIELD_NUMBER: builtins.int
        TRAFFIC_PERCENT_FIELD_NUMBER: builtins.int
        MIN_DURATION_FIELD_NUMBER: builtins.int
        display_name: typing.Text = ...
        """The name of the rollout step;"""

        traffic_percent: builtins.int = ...
        """The percentage of traffic allocated to the flow version of this rollout
        step. (0%, 100%].
        """

        @property
        def min_duration(self) -> google.protobuf.duration_pb2.Duration:
            """The minimum time that this step should last. Should be longer than 1
            hour. If not set, the default minimum duration for each step will be 1
            hour.
            """
            pass
        def __init__(self,
            *,
            display_name : typing.Text = ...,
            traffic_percent : builtins.int = ...,
            min_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["min_duration",b"min_duration"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["display_name",b"display_name","min_duration",b"min_duration","traffic_percent",b"traffic_percent"]) -> None: ...

    ROLLOUT_STEPS_FIELD_NUMBER: builtins.int
    ROLLOUT_CONDITION_FIELD_NUMBER: builtins.int
    FAILURE_CONDITION_FIELD_NUMBER: builtins.int
    @property
    def rollout_steps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RolloutConfig.RolloutStep]:
        """Steps to roll out a flow version. Steps should be sorted by percentage in
        ascending order.
        """
        pass
    rollout_condition: typing.Text = ...
    """The conditions that are used to evaluate the success of a rollout
    step. If not specified, all rollout steps will proceed to the next one
    unless failure conditions are met. E.g. "containment_rate > 60% AND
    callback_rate < 20%". See the [conditions
    reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
    """

    failure_condition: typing.Text = ...
    """The conditions that are used to evaluate the failure of a rollout
    step. If not specified, no rollout steps will fail. E.g. "containment_rate
    < 10% OR average_turn_count < 3". See the [conditions
    reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
    """

    def __init__(self,
        *,
        rollout_steps : typing.Optional[typing.Iterable[global___RolloutConfig.RolloutStep]] = ...,
        rollout_condition : typing.Text = ...,
        failure_condition : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["failure_condition",b"failure_condition","rollout_condition",b"rollout_condition","rollout_steps",b"rollout_steps"]) -> None: ...
global___RolloutConfig = RolloutConfig

class RolloutState(google.protobuf.message.Message):
    """State of the auto-rollout process."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STEP_FIELD_NUMBER: builtins.int
    STEP_INDEX_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    step: typing.Text = ...
    """Display name of the current auto rollout step."""

    step_index: builtins.int = ...
    """Index of the current step in the auto rollout steps list."""

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Start time of the current step."""
        pass
    def __init__(self,
        *,
        step : typing.Text = ...,
        step_index : builtins.int = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["start_time",b"start_time","step",b"step","step_index",b"step_index"]) -> None: ...
global___RolloutState = RolloutState

class ListExperimentsRequest(google.protobuf.message.Message):
    """The request message for [Experiments.ListExperiments][google.cloud.dialogflow.cx.v3.Experiments.ListExperiments]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The [Environment][google.cloud.dialogflow.cx.v3.Environment] to list all environments for.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>`.
    """

    page_size: builtins.int = ...
    """The maximum number of items to return in a single page. By default 20 and
    at most 100.
    """

    page_token: typing.Text = ...
    """The next_page_token value returned from a previous list request."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListExperimentsRequest = ListExperimentsRequest

class ListExperimentsResponse(google.protobuf.message.Message):
    """The response message for [Experiments.ListExperiments][google.cloud.dialogflow.cx.v3.Experiments.ListExperiments]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXPERIMENTS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def experiments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Experiment]:
        """The list of experiments. There will be a maximum number of items
        returned based on the page_size field in the request. The list may in some
        cases be empty or contain fewer entries than page_size even if this isn't
        the last page.
        """
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results in the list.
    """

    def __init__(self,
        *,
        experiments : typing.Optional[typing.Iterable[global___Experiment]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["experiments",b"experiments","next_page_token",b"next_page_token"]) -> None: ...
global___ListExperimentsResponse = ListExperimentsResponse

class GetExperimentRequest(google.protobuf.message.Message):
    """The request message for [Experiments.GetExperiment][google.cloud.dialogflow.cx.v3.Experiments.GetExperiment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the [Environment][google.cloud.dialogflow.cx.v3.Environment].
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>/experiments/<Experiment ID>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetExperimentRequest = GetExperimentRequest

class CreateExperimentRequest(google.protobuf.message.Message):
    """The request message for [Experiments.CreateExperiment][google.cloud.dialogflow.cx.v3.Experiments.CreateExperiment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    EXPERIMENT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The [Agent][google.cloud.dialogflow.cx.v3.Agent] to create an [Environment][google.cloud.dialogflow.cx.v3.Environment] for.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>`.
    """

    @property
    def experiment(self) -> global___Experiment:
        """Required. The experiment to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        experiment : typing.Optional[global___Experiment] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["experiment",b"experiment"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["experiment",b"experiment","parent",b"parent"]) -> None: ...
global___CreateExperimentRequest = CreateExperimentRequest

class UpdateExperimentRequest(google.protobuf.message.Message):
    """The request message for [Experiments.UpdateExperiment][google.cloud.dialogflow.cx.v3.Experiments.UpdateExperiment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXPERIMENT_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def experiment(self) -> global___Experiment:
        """Required. The experiment to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The mask to control which fields get updated."""
        pass
    def __init__(self,
        *,
        experiment : typing.Optional[global___Experiment] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["experiment",b"experiment","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["experiment",b"experiment","update_mask",b"update_mask"]) -> None: ...
global___UpdateExperimentRequest = UpdateExperimentRequest

class DeleteExperimentRequest(google.protobuf.message.Message):
    """The request message for [Experiments.DeleteExperiment][google.cloud.dialogflow.cx.v3.Experiments.DeleteExperiment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the [Environment][google.cloud.dialogflow.cx.v3.Environment] to delete.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>/experiments/<Experiment ID>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteExperimentRequest = DeleteExperimentRequest

class StartExperimentRequest(google.protobuf.message.Message):
    """The request message for [Experiments.StartExperiment][google.cloud.dialogflow.cx.v3.Experiments.StartExperiment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Resource name of the experiment to start.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>/experiments/<Experiment ID>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___StartExperimentRequest = StartExperimentRequest

class StopExperimentRequest(google.protobuf.message.Message):
    """The request message for [Experiments.StopExperiment][google.cloud.dialogflow.cx.v3.Experiments.StopExperiment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Resource name of the experiment to stop.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/environments/<Environment ID>/experiments/<Experiment ID>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___StopExperimentRequest = StopExperimentRequest
