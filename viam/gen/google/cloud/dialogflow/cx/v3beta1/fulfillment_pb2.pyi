"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.dialogflow.cx.v3beta1.response_message_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Fulfillment(google.protobuf.message.Message):
    """A fulfillment can do one or more of the following actions at the same time:

      * Generate rich message responses.
      * Set parameter values.
      * Call the webhook.

    Fulfillments can be called at various stages in the [Page][google.cloud.dialogflow.cx.v3beta1.Page] or
    [Form][google.cloud.dialogflow.cx.v3beta1.Form] lifecycle. For example, when a [DetectIntentRequest][google.cloud.dialogflow.cx.v3beta1.DetectIntentRequest] drives a
    session to enter a new page, the page's entry fulfillment can add a static
    response to the [QueryResult][google.cloud.dialogflow.cx.v3beta1.QueryResult] in the returning [DetectIntentResponse][google.cloud.dialogflow.cx.v3beta1.DetectIntentResponse],
    call the webhook (for example, to load user data from a database), or both.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SetParameterAction(google.protobuf.message.Message):
        """Setting a parameter value."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PARAMETER_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        parameter: typing.Text = ...
        """Display name of the parameter."""

        @property
        def value(self) -> google.protobuf.struct_pb2.Value:
            """The new value of the parameter. A null value clears the parameter."""
            pass
        def __init__(self,
            *,
            parameter : typing.Text = ...,
            value : typing.Optional[google.protobuf.struct_pb2.Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["parameter",b"parameter","value",b"value"]) -> None: ...

    class ConditionalCases(google.protobuf.message.Message):
        """A list of cascading if-else conditions. Cases are mutually exclusive.
        The first one with a matching condition is selected, all the rest ignored.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class Case(google.protobuf.message.Message):
            """Each case has a Boolean condition. When it is evaluated to be True, the
            corresponding messages will be selected and evaluated recursively.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            class CaseContent(google.protobuf.message.Message):
                """The list of messages or conditional cases to activate for this case."""
                DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
                MESSAGE_FIELD_NUMBER: builtins.int
                ADDITIONAL_CASES_FIELD_NUMBER: builtins.int
                @property
                def message(self) -> google.cloud.dialogflow.cx.v3beta1.response_message_pb2.ResponseMessage:
                    """Returned message."""
                    pass
                @property
                def additional_cases(self) -> global___Fulfillment.ConditionalCases:
                    """Additional cases to be evaluated."""
                    pass
                def __init__(self,
                    *,
                    message : typing.Optional[google.cloud.dialogflow.cx.v3beta1.response_message_pb2.ResponseMessage] = ...,
                    additional_cases : typing.Optional[global___Fulfillment.ConditionalCases] = ...,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions.Literal["additional_cases",b"additional_cases","cases_or_message",b"cases_or_message","message",b"message"]) -> builtins.bool: ...
                def ClearField(self, field_name: typing_extensions.Literal["additional_cases",b"additional_cases","cases_or_message",b"cases_or_message","message",b"message"]) -> None: ...
                def WhichOneof(self, oneof_group: typing_extensions.Literal["cases_or_message",b"cases_or_message"]) -> typing.Optional[typing_extensions.Literal["message","additional_cases"]]: ...

            CONDITION_FIELD_NUMBER: builtins.int
            CASE_CONTENT_FIELD_NUMBER: builtins.int
            condition: typing.Text = ...
            """The condition to activate and select this case. Empty means the
            condition is always true. The condition is evaluated against [form
            parameters][Form.parameters] or [session
            parameters][SessionInfo.parameters].

            See the [conditions
            reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
            """

            @property
            def case_content(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Fulfillment.ConditionalCases.Case.CaseContent]:
                """A list of case content."""
                pass
            def __init__(self,
                *,
                condition : typing.Text = ...,
                case_content : typing.Optional[typing.Iterable[global___Fulfillment.ConditionalCases.Case.CaseContent]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["case_content",b"case_content","condition",b"condition"]) -> None: ...

        CASES_FIELD_NUMBER: builtins.int
        @property
        def cases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Fulfillment.ConditionalCases.Case]:
            """A list of cascading if-else conditions."""
            pass
        def __init__(self,
            *,
            cases : typing.Optional[typing.Iterable[global___Fulfillment.ConditionalCases.Case]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["cases",b"cases"]) -> None: ...

    MESSAGES_FIELD_NUMBER: builtins.int
    WEBHOOK_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_RESPONSES_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    SET_PARAMETER_ACTIONS_FIELD_NUMBER: builtins.int
    CONDITIONAL_CASES_FIELD_NUMBER: builtins.int
    @property
    def messages(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.dialogflow.cx.v3beta1.response_message_pb2.ResponseMessage]:
        """The list of rich message responses to present to the user."""
        pass
    webhook: typing.Text = ...
    """The webhook to call.
    Format: `projects/<Project ID>/locations/<Location ID>/agents/<Agent
    ID>/webhooks/<Webhook ID>`.
    """

    return_partial_responses: builtins.bool = ...
    """Whether Dialogflow should return currently queued fulfillment response
    messages in streaming APIs. If a webhook is specified, it happens before
    Dialogflow invokes webhook.
    Warning:
    1) This flag only affects streaming API. Responses are still queued
    and returned once in non-streaming API.
    2) The flag can be enabled in any fulfillment but only the first 3 partial
    responses will be returned. You may only want to apply it to fulfillments
    that have slow webhooks.
    """

    tag: typing.Text = ...
    """The tag used by the webhook to identify which fulfillment is being called.
    This field is required if `webhook` is specified.
    """

    @property
    def set_parameter_actions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Fulfillment.SetParameterAction]:
        """Set parameter values before executing the webhook."""
        pass
    @property
    def conditional_cases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Fulfillment.ConditionalCases]:
        """Conditional cases for this fulfillment."""
        pass
    def __init__(self,
        *,
        messages : typing.Optional[typing.Iterable[google.cloud.dialogflow.cx.v3beta1.response_message_pb2.ResponseMessage]] = ...,
        webhook : typing.Text = ...,
        return_partial_responses : builtins.bool = ...,
        tag : typing.Text = ...,
        set_parameter_actions : typing.Optional[typing.Iterable[global___Fulfillment.SetParameterAction]] = ...,
        conditional_cases : typing.Optional[typing.Iterable[global___Fulfillment.ConditionalCases]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["conditional_cases",b"conditional_cases","messages",b"messages","return_partial_responses",b"return_partial_responses","set_parameter_actions",b"set_parameter_actions","tag",b"tag","webhook",b"webhook"]) -> None: ...
global___Fulfillment = Fulfillment
