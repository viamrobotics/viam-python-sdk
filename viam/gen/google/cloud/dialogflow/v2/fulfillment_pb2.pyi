"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Fulfillment(google.protobuf.message.Message):
    """By default, your agent responds to a matched intent with a static response.
    As an alternative, you can provide a more dynamic response by using
    fulfillment. When you enable fulfillment for an intent, Dialogflow responds
    to that intent by calling a service that you define. For example, if an
    end-user wants to schedule a haircut on Friday, your service can check your
    database and respond to the end-user with availability information for
    Friday.

    For more information, see the [fulfillment
    guide](https://cloud.google.com/dialogflow/docs/fulfillment-overview).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class GenericWebService(google.protobuf.message.Message):
        """Represents configuration for a generic web service.
        Dialogflow supports two mechanisms for authentications:
        - Basic authentication with username and password.
        - Authentication with additional authentication headers.
        More information could be found at:
        https://cloud.google.com/dialogflow/docs/fulfillment-configure.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class RequestHeadersEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text = ...
            value: typing.Text = ...
            def __init__(self,
                *,
                key : typing.Text = ...,
                value : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        URI_FIELD_NUMBER: builtins.int
        USERNAME_FIELD_NUMBER: builtins.int
        PASSWORD_FIELD_NUMBER: builtins.int
        REQUEST_HEADERS_FIELD_NUMBER: builtins.int
        IS_CLOUD_FUNCTION_FIELD_NUMBER: builtins.int
        uri: typing.Text = ...
        """Required. The fulfillment URI for receiving POST requests.
        It must use https protocol.
        """

        username: typing.Text = ...
        """Optional. The user name for HTTP Basic authentication."""

        password: typing.Text = ...
        """Optional. The password for HTTP Basic authentication."""

        @property
        def request_headers(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
            """Optional. The HTTP request headers to send together with fulfillment requests."""
            pass
        is_cloud_function: builtins.bool = ...
        """Optional. Indicates if generic web service is created through Cloud Functions
        integration. Defaults to false.

        is_cloud_function is deprecated. Cloud functions can be configured by
        its uri as a regular web service now.
        """

        def __init__(self,
            *,
            uri : typing.Text = ...,
            username : typing.Text = ...,
            password : typing.Text = ...,
            request_headers : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            is_cloud_function : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["is_cloud_function",b"is_cloud_function","password",b"password","request_headers",b"request_headers","uri",b"uri","username",b"username"]) -> None: ...

    class Feature(google.protobuf.message.Message):
        """Whether fulfillment is enabled for the specific feature."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            TYPE_UNSPECIFIED: Fulfillment.Feature.Type.ValueType = ...  # 0
            """Feature type not specified."""

            SMALLTALK: Fulfillment.Feature.Type.ValueType = ...  # 1
            """Fulfillment is enabled for SmallTalk."""

        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            """The type of the feature."""
            pass

        TYPE_UNSPECIFIED: Fulfillment.Feature.Type.ValueType = ...  # 0
        """Feature type not specified."""

        SMALLTALK: Fulfillment.Feature.Type.ValueType = ...  # 1
        """Fulfillment is enabled for SmallTalk."""


        TYPE_FIELD_NUMBER: builtins.int
        type: global___Fulfillment.Feature.Type.ValueType = ...
        """The type of the feature that enabled for fulfillment."""

        def __init__(self,
            *,
            type : global___Fulfillment.Feature.Type.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    GENERIC_WEB_SERVICE_FIELD_NUMBER: builtins.int
    ENABLED_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The unique identifier of the fulfillment.
    Supported formats:
    - `projects/<Project ID>/agent/fulfillment`
    - `projects/<Project ID>/locations/<Location ID>/agent/fulfillment`

    This field is not used for Fulfillment in an Environment.
    """

    display_name: typing.Text = ...
    """Optional. The human-readable name of the fulfillment, unique within the agent.

    This field is not used for Fulfillment in an Environment.
    """

    @property
    def generic_web_service(self) -> global___Fulfillment.GenericWebService:
        """Configuration for a generic web service."""
        pass
    enabled: builtins.bool = ...
    """Optional. Whether fulfillment is enabled."""

    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Fulfillment.Feature]:
        """Optional. The field defines whether the fulfillment is enabled for certain features."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        generic_web_service : typing.Optional[global___Fulfillment.GenericWebService] = ...,
        enabled : builtins.bool = ...,
        features : typing.Optional[typing.Iterable[global___Fulfillment.Feature]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fulfillment",b"fulfillment","generic_web_service",b"generic_web_service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["display_name",b"display_name","enabled",b"enabled","features",b"features","fulfillment",b"fulfillment","generic_web_service",b"generic_web_service","name",b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["fulfillment",b"fulfillment"]) -> typing.Optional[typing_extensions.Literal["generic_web_service"]]: ...
global___Fulfillment = Fulfillment

class GetFulfillmentRequest(google.protobuf.message.Message):
    """The request message for [Fulfillments.GetFulfillment][google.cloud.dialogflow.v2.Fulfillments.GetFulfillment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the fulfillment.
    Format: `projects/<Project ID>/agent/fulfillment`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetFulfillmentRequest = GetFulfillmentRequest

class UpdateFulfillmentRequest(google.protobuf.message.Message):
    """The request message for [Fulfillments.UpdateFulfillment][google.cloud.dialogflow.v2.Fulfillments.UpdateFulfillment]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FULFILLMENT_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def fulfillment(self) -> global___Fulfillment:
        """Required. The fulfillment to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The mask to control which fields get updated. If the mask is not
        present, all fields will be updated.
        """
        pass
    def __init__(self,
        *,
        fulfillment : typing.Optional[global___Fulfillment] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fulfillment",b"fulfillment","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fulfillment",b"fulfillment","update_mask",b"update_mask"]) -> None: ...
global___UpdateFulfillmentRequest = UpdateFulfillmentRequest
