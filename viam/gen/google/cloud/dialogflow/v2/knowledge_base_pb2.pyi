"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class KnowledgeBase(google.protobuf.message.Message):
    """A knowledge base represents a collection of knowledge documents that you
    provide to Dialogflow. Your knowledge documents contain information that may
    be useful during conversations with end-users. Some Dialogflow features use
    knowledge bases when looking for a response to an end-user input.

    For more information, see the [knowledge base
    guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases).

    Note: The `projects.agent.knowledgeBases` resource is deprecated;
    only use `projects.knowledgeBases`.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The knowledge base resource name.
    The name must be empty when creating a knowledge base.
    Format: `projects/<Project ID>/locations/<Location
    ID>/knowledgeBases/<Knowledge Base ID>`.
    """

    display_name: typing.Text = ...
    """Required. The display name of the knowledge base. The name must be 1024
    bytes or less; otherwise, the creation request fails.
    """

    language_code: typing.Text = ...
    """Language which represents the KnowledgeBase. When the KnowledgeBase is
    created/updated, expect this to be present for non en-us languages. When
    unspecified, the default language code en-us applies.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        language_code : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["display_name",b"display_name","language_code",b"language_code","name",b"name"]) -> None: ...
global___KnowledgeBase = KnowledgeBase

class ListKnowledgeBasesRequest(google.protobuf.message.Message):
    """Request message for [KnowledgeBases.ListKnowledgeBases][google.cloud.dialogflow.v2.KnowledgeBases.ListKnowledgeBases]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The project to list of knowledge bases for.
    Format: `projects/<Project ID>/locations/<Location ID>`.
    """

    page_size: builtins.int = ...
    """The maximum number of items to return in a single page. By
    default 10 and at most 100.
    """

    page_token: typing.Text = ...
    """The next_page_token value returned from a previous list request."""

    filter: typing.Text = ...
    """The filter expression used to filter knowledge bases returned by the list
    method. The expression has the following syntax:

      <field> <operator> <value> [AND <field> <operator> <value>] ...

    The following fields and operators are supported:

    * display_name with has(:) operator
    * language_code with equals(=) operator

    Examples:

    * 'language_code=en-us' matches knowledge bases with en-us language code.
    * 'display_name:articles' matches knowledge bases whose display name
      contains "articles".
    * 'display_name:"Best Articles"' matches knowledge bases whose display
      name contains "Best Articles".
    * 'language_code=en-gb AND display_name=articles' matches all knowledge
      bases whose display name contains "articles" and whose language code is
      "en-gb".

    Note: An empty filter string (i.e. "") is a no-op and will result in no
    filtering.

    For more information about filtering, see
    [API Filtering](https://aip.dev/160).
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListKnowledgeBasesRequest = ListKnowledgeBasesRequest

class ListKnowledgeBasesResponse(google.protobuf.message.Message):
    """Response message for [KnowledgeBases.ListKnowledgeBases][google.cloud.dialogflow.v2.KnowledgeBases.ListKnowledgeBases]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KNOWLEDGE_BASES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def knowledge_bases(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___KnowledgeBase]:
        """The list of knowledge bases."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no
    more results in the list.
    """

    def __init__(self,
        *,
        knowledge_bases : typing.Optional[typing.Iterable[global___KnowledgeBase]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["knowledge_bases",b"knowledge_bases","next_page_token",b"next_page_token"]) -> None: ...
global___ListKnowledgeBasesResponse = ListKnowledgeBasesResponse

class GetKnowledgeBaseRequest(google.protobuf.message.Message):
    """Request message for [KnowledgeBases.GetKnowledgeBase][google.cloud.dialogflow.v2.KnowledgeBases.GetKnowledgeBase]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the knowledge base to retrieve.
    Format `projects/<Project ID>/locations/<Location
    ID>/knowledgeBases/<Knowledge Base ID>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetKnowledgeBaseRequest = GetKnowledgeBaseRequest

class CreateKnowledgeBaseRequest(google.protobuf.message.Message):
    """Request message for [KnowledgeBases.CreateKnowledgeBase][google.cloud.dialogflow.v2.KnowledgeBases.CreateKnowledgeBase]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    KNOWLEDGE_BASE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The project to create a knowledge base for.
    Format: `projects/<Project ID>/locations/<Location ID>`.
    """

    @property
    def knowledge_base(self) -> global___KnowledgeBase:
        """Required. The knowledge base to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        knowledge_base : typing.Optional[global___KnowledgeBase] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["knowledge_base",b"knowledge_base"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["knowledge_base",b"knowledge_base","parent",b"parent"]) -> None: ...
global___CreateKnowledgeBaseRequest = CreateKnowledgeBaseRequest

class DeleteKnowledgeBaseRequest(google.protobuf.message.Message):
    """Request message for [KnowledgeBases.DeleteKnowledgeBase][google.cloud.dialogflow.v2.KnowledgeBases.DeleteKnowledgeBase]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the knowledge base to delete.
    Format: `projects/<Project ID>/locations/<Location
    ID>/knowledgeBases/<Knowledge Base ID>`.
    """

    force: builtins.bool = ...
    """Optional. Force deletes the knowledge base. When set to true, any documents
    in the knowledge base are also deleted.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        force : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["force",b"force","name",b"name"]) -> None: ...
global___DeleteKnowledgeBaseRequest = DeleteKnowledgeBaseRequest

class UpdateKnowledgeBaseRequest(google.protobuf.message.Message):
    """Request message for [KnowledgeBases.UpdateKnowledgeBase][google.cloud.dialogflow.v2.KnowledgeBases.UpdateKnowledgeBase]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KNOWLEDGE_BASE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def knowledge_base(self) -> global___KnowledgeBase:
        """Required. The knowledge base to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Optional. Not specified means `update all`.
        Currently, only `display_name` can be updated, an InvalidArgument will be
        returned for attempting to update other fields.
        """
        pass
    def __init__(self,
        *,
        knowledge_base : typing.Optional[global___KnowledgeBase] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["knowledge_base",b"knowledge_base","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["knowledge_base",b"knowledge_base","update_mask",b"update_mask"]) -> None: ...
global___UpdateKnowledgeBaseRequest = UpdateKnowledgeBaseRequest
