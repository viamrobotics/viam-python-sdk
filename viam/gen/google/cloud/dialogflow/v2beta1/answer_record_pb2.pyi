"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.dialogflow.v2beta1.participant_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AnswerRecord(google.protobuf.message.Message):
    """Answer records are records to manage answer history and feedbacks for
    Dialogflow.

    Currently, answer record includes:

    - human agent assistant article suggestion
    - human agent assistant faq article

    It doesn't include:

    - `DetectIntent` intent matching
    - `DetectIntent` knowledge

    Answer records are not related to the conversation history in the
    Dialogflow Console. A Record is generated even when the end-user disables
    conversation history in the console. Records are created when there's a human
    agent assistant suggestion generated.

    A typical workflow for customers provide feedback to an answer is:

    1. For human agent assistant, customers get suggestion via ListSuggestions
       API. Together with the answers, [AnswerRecord.name][google.cloud.dialogflow.v2beta1.AnswerRecord.name] are returned to the
       customers.
    2. The customer uses the [AnswerRecord.name][google.cloud.dialogflow.v2beta1.AnswerRecord.name] to call the
       [UpdateAnswerRecord][] method to send feedback about a specific answer
       that they believe is wrong.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    ANSWER_FEEDBACK_FIELD_NUMBER: builtins.int
    AGENT_ASSISTANT_RECORD_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The unique identifier of this answer record.
    Required for [AnswerRecords.UpdateAnswerRecord][google.cloud.dialogflow.v2beta1.AnswerRecords.UpdateAnswerRecord] method.
    Format: `projects/<Project ID>/locations/<Location
    ID>/answerRecords/<Answer Record ID>`.
    """

    @property
    def answer_feedback(self) -> global___AnswerFeedback:
        """Optional. The AnswerFeedback for this record. You can set this with
        [AnswerRecords.UpdateAnswerRecord][google.cloud.dialogflow.v2beta1.AnswerRecords.UpdateAnswerRecord] in order to give us feedback about
        this answer.
        """
        pass
    @property
    def agent_assistant_record(self) -> global___AgentAssistantRecord:
        """Output only. The record for human agent assistant."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        answer_feedback : typing.Optional[global___AnswerFeedback] = ...,
        agent_assistant_record : typing.Optional[global___AgentAssistantRecord] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["agent_assistant_record",b"agent_assistant_record","answer_feedback",b"answer_feedback","record",b"record"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["agent_assistant_record",b"agent_assistant_record","answer_feedback",b"answer_feedback","name",b"name","record",b"record"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["record",b"record"]) -> typing.Optional[typing_extensions.Literal["agent_assistant_record"]]: ...
global___AnswerRecord = AnswerRecord

class AgentAssistantRecord(google.protobuf.message.Message):
    """Represents a record of a human agent assistant answer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ARTICLE_SUGGESTION_ANSWER_FIELD_NUMBER: builtins.int
    FAQ_ANSWER_FIELD_NUMBER: builtins.int
    @property
    def article_suggestion_answer(self) -> google.cloud.dialogflow.v2beta1.participant_pb2.ArticleAnswer:
        """Output only. The article suggestion answer."""
        pass
    @property
    def faq_answer(self) -> google.cloud.dialogflow.v2beta1.participant_pb2.FaqAnswer:
        """Output only. The FAQ answer."""
        pass
    def __init__(self,
        *,
        article_suggestion_answer : typing.Optional[google.cloud.dialogflow.v2beta1.participant_pb2.ArticleAnswer] = ...,
        faq_answer : typing.Optional[google.cloud.dialogflow.v2beta1.participant_pb2.FaqAnswer] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["answer",b"answer","article_suggestion_answer",b"article_suggestion_answer","faq_answer",b"faq_answer"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer",b"answer","article_suggestion_answer",b"article_suggestion_answer","faq_answer",b"faq_answer"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["answer",b"answer"]) -> typing.Optional[typing_extensions.Literal["article_suggestion_answer","faq_answer"]]: ...
global___AgentAssistantRecord = AgentAssistantRecord

class AnswerFeedback(google.protobuf.message.Message):
    """Represents feedback the customer has about the quality & correctness of a
    certain answer in a conversation.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CorrectnessLevel:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CorrectnessLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CorrectnessLevel.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CORRECTNESS_LEVEL_UNSPECIFIED: AnswerFeedback.CorrectnessLevel.ValueType = ...  # 0
        """Correctness level unspecified."""

        NOT_CORRECT: AnswerFeedback.CorrectnessLevel.ValueType = ...  # 1
        """Answer is totally wrong."""

        PARTIALLY_CORRECT: AnswerFeedback.CorrectnessLevel.ValueType = ...  # 2
        """Answer is partially correct."""

        FULLY_CORRECT: AnswerFeedback.CorrectnessLevel.ValueType = ...  # 3
        """Answer is fully correct."""

    class CorrectnessLevel(_CorrectnessLevel, metaclass=_CorrectnessLevelEnumTypeWrapper):
        """The correctness level of an answer."""
        pass

    CORRECTNESS_LEVEL_UNSPECIFIED: AnswerFeedback.CorrectnessLevel.ValueType = ...  # 0
    """Correctness level unspecified."""

    NOT_CORRECT: AnswerFeedback.CorrectnessLevel.ValueType = ...  # 1
    """Answer is totally wrong."""

    PARTIALLY_CORRECT: AnswerFeedback.CorrectnessLevel.ValueType = ...  # 2
    """Answer is partially correct."""

    FULLY_CORRECT: AnswerFeedback.CorrectnessLevel.ValueType = ...  # 3
    """Answer is fully correct."""


    CORRECTNESS_LEVEL_FIELD_NUMBER: builtins.int
    AGENT_ASSISTANT_DETAIL_FEEDBACK_FIELD_NUMBER: builtins.int
    CLICKED_FIELD_NUMBER: builtins.int
    CLICK_TIME_FIELD_NUMBER: builtins.int
    DISPLAYED_FIELD_NUMBER: builtins.int
    DISPLAY_TIME_FIELD_NUMBER: builtins.int
    correctness_level: global___AnswerFeedback.CorrectnessLevel.ValueType = ...
    """The correctness level of the specific answer."""

    @property
    def agent_assistant_detail_feedback(self) -> global___AgentAssistantFeedback:
        """Optional. Detail feedback of agent assistant suggestions."""
        pass
    clicked: builtins.bool = ...
    """Indicates whether the answer/item was clicked by the human agent
    or not. Default to false.
    """

    @property
    def click_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when the answer/item was clicked."""
        pass
    displayed: builtins.bool = ...
    """Indicates whether the answer/item was displayed to the human
    agent in the agent desktop UI. Default to false.
    """

    @property
    def display_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time when the answer/item was displayed."""
        pass
    def __init__(self,
        *,
        correctness_level : global___AnswerFeedback.CorrectnessLevel.ValueType = ...,
        agent_assistant_detail_feedback : typing.Optional[global___AgentAssistantFeedback] = ...,
        clicked : builtins.bool = ...,
        click_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        displayed : builtins.bool = ...,
        display_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["agent_assistant_detail_feedback",b"agent_assistant_detail_feedback","click_time",b"click_time","detail_feedback",b"detail_feedback","display_time",b"display_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["agent_assistant_detail_feedback",b"agent_assistant_detail_feedback","click_time",b"click_time","clicked",b"clicked","correctness_level",b"correctness_level","detail_feedback",b"detail_feedback","display_time",b"display_time","displayed",b"displayed"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["detail_feedback",b"detail_feedback"]) -> typing.Optional[typing_extensions.Literal["agent_assistant_detail_feedback"]]: ...
global___AnswerFeedback = AnswerFeedback

class AgentAssistantFeedback(google.protobuf.message.Message):
    """Detail feedback of Agent Assistant result."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AnswerRelevance:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AnswerRelevanceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AnswerRelevance.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ANSWER_RELEVANCE_UNSPECIFIED: AgentAssistantFeedback.AnswerRelevance.ValueType = ...  # 0
        """Answer relevance unspecified."""

        IRRELEVANT: AgentAssistantFeedback.AnswerRelevance.ValueType = ...  # 1
        """Answer is irrelevant to query."""

        RELEVANT: AgentAssistantFeedback.AnswerRelevance.ValueType = ...  # 2
        """Answer is relevant to query."""

    class AnswerRelevance(_AnswerRelevance, metaclass=_AnswerRelevanceEnumTypeWrapper):
        """Relevance of an answer."""
        pass

    ANSWER_RELEVANCE_UNSPECIFIED: AgentAssistantFeedback.AnswerRelevance.ValueType = ...  # 0
    """Answer relevance unspecified."""

    IRRELEVANT: AgentAssistantFeedback.AnswerRelevance.ValueType = ...  # 1
    """Answer is irrelevant to query."""

    RELEVANT: AgentAssistantFeedback.AnswerRelevance.ValueType = ...  # 2
    """Answer is relevant to query."""


    class _DocumentCorrectness:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DocumentCorrectnessEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DocumentCorrectness.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DOCUMENT_CORRECTNESS_UNSPECIFIED: AgentAssistantFeedback.DocumentCorrectness.ValueType = ...  # 0
        """Document correctness unspecified."""

        INCORRECT: AgentAssistantFeedback.DocumentCorrectness.ValueType = ...  # 1
        """Information in document is incorrect."""

        CORRECT: AgentAssistantFeedback.DocumentCorrectness.ValueType = ...  # 2
        """Information in document is correct."""

    class DocumentCorrectness(_DocumentCorrectness, metaclass=_DocumentCorrectnessEnumTypeWrapper):
        """Correctness of document."""
        pass

    DOCUMENT_CORRECTNESS_UNSPECIFIED: AgentAssistantFeedback.DocumentCorrectness.ValueType = ...  # 0
    """Document correctness unspecified."""

    INCORRECT: AgentAssistantFeedback.DocumentCorrectness.ValueType = ...  # 1
    """Information in document is incorrect."""

    CORRECT: AgentAssistantFeedback.DocumentCorrectness.ValueType = ...  # 2
    """Information in document is correct."""


    class _DocumentEfficiency:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DocumentEfficiencyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DocumentEfficiency.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DOCUMENT_EFFICIENCY_UNSPECIFIED: AgentAssistantFeedback.DocumentEfficiency.ValueType = ...  # 0
        """Document efficiency unspecified."""

        INEFFICIENT: AgentAssistantFeedback.DocumentEfficiency.ValueType = ...  # 1
        """Document is inefficient."""

        EFFICIENT: AgentAssistantFeedback.DocumentEfficiency.ValueType = ...  # 2
        """Document is efficient."""

    class DocumentEfficiency(_DocumentEfficiency, metaclass=_DocumentEfficiencyEnumTypeWrapper):
        """Efficiency of document."""
        pass

    DOCUMENT_EFFICIENCY_UNSPECIFIED: AgentAssistantFeedback.DocumentEfficiency.ValueType = ...  # 0
    """Document efficiency unspecified."""

    INEFFICIENT: AgentAssistantFeedback.DocumentEfficiency.ValueType = ...  # 1
    """Document is inefficient."""

    EFFICIENT: AgentAssistantFeedback.DocumentEfficiency.ValueType = ...  # 2
    """Document is efficient."""


    class SummarizationFeedback(google.protobuf.message.Message):
        """Feedback for conversation summarization."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        START_TIMESTAMP_FIELD_NUMBER: builtins.int
        SUBMIT_TIMESTAMP_FIELD_NUMBER: builtins.int
        SUMMARY_TEXT_FIELD_NUMBER: builtins.int
        @property
        def start_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Timestamp when composing of the summary starts."""
            pass
        @property
        def submit_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Timestamp when the summary was submitted."""
            pass
        summary_text: typing.Text = ...
        """Text of actual submitted summary."""

        def __init__(self,
            *,
            start_timestamp : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            submit_timestamp : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            summary_text : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["start_timestamp",b"start_timestamp","submit_timestamp",b"submit_timestamp"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["start_timestamp",b"start_timestamp","submit_timestamp",b"submit_timestamp","summary_text",b"summary_text"]) -> None: ...

    ANSWER_RELEVANCE_FIELD_NUMBER: builtins.int
    DOCUMENT_CORRECTNESS_FIELD_NUMBER: builtins.int
    DOCUMENT_EFFICIENCY_FIELD_NUMBER: builtins.int
    SUMMARIZATION_FEEDBACK_FIELD_NUMBER: builtins.int
    answer_relevance: global___AgentAssistantFeedback.AnswerRelevance.ValueType = ...
    """Optional. Whether or not the suggested answer is relevant.

    For example:

    * Query: "Can I change my mailing address?"
    * Suggested document says: "Items must be returned/exchanged within 60
      days of the purchase date."
    * [answer_relevance][google.cloud.dialogflow.v2beta1.AgentAssistantFeedback.answer_relevance]: [AnswerRelevance.IRRELEVANT][google.cloud.dialogflow.v2beta1.AgentAssistantFeedback.AnswerRelevance.IRRELEVANT]
    """

    document_correctness: global___AgentAssistantFeedback.DocumentCorrectness.ValueType = ...
    """Optional. Whether or not the information in the document is correct.

    For example:

    * Query: "Can I return the package in 2 days once received?"
    * Suggested document says: "Items must be returned/exchanged within 60
      days of the purchase date."
    * Ground truth: "No return or exchange is allowed."
    * [document_correctness]: INCORRECT
    """

    document_efficiency: global___AgentAssistantFeedback.DocumentEfficiency.ValueType = ...
    """Optional. Whether or not the suggested document is efficient. For example,
    if the document is poorly written, hard to understand, hard to use or
    too long to find useful information, [document_efficiency][google.cloud.dialogflow.v2beta1.AgentAssistantFeedback.document_efficiency] is
    [DocumentEfficiency.INEFFICIENT][google.cloud.dialogflow.v2beta1.AgentAssistantFeedback.DocumentEfficiency.INEFFICIENT].
    """

    @property
    def summarization_feedback(self) -> global___AgentAssistantFeedback.SummarizationFeedback:
        """Feedback for conversation summarization."""
        pass
    def __init__(self,
        *,
        answer_relevance : global___AgentAssistantFeedback.AnswerRelevance.ValueType = ...,
        document_correctness : global___AgentAssistantFeedback.DocumentCorrectness.ValueType = ...,
        document_efficiency : global___AgentAssistantFeedback.DocumentEfficiency.ValueType = ...,
        summarization_feedback : typing.Optional[global___AgentAssistantFeedback.SummarizationFeedback] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["summarization_feedback",b"summarization_feedback"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer_relevance",b"answer_relevance","document_correctness",b"document_correctness","document_efficiency",b"document_efficiency","summarization_feedback",b"summarization_feedback"]) -> None: ...
global___AgentAssistantFeedback = AgentAssistantFeedback

class GetAnswerRecordRequest(google.protobuf.message.Message):
    """Request message for [AnswerRecords.GetAnswerRecord][google.cloud.dialogflow.v2beta1.AnswerRecords.GetAnswerRecord]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the answer record to retrieve.
    Format: `projects/<Project ID>/locations/<Location
    ID>/answerRecords/<Answer Record Id>`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetAnswerRecordRequest = GetAnswerRecordRequest

class ListAnswerRecordsRequest(google.protobuf.message.Message):
    """Request message for [AnswerRecords.ListAnswerRecords][google.cloud.dialogflow.v2beta1.AnswerRecords.ListAnswerRecords]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The project to list all answer records for in reverse
    chronological order. Format: `projects/<Project ID>/locations/<Location
    ID>`.
    """

    page_size: builtins.int = ...
    """Optional. The maximum number of records to return in a single page.
    The server may return fewer records than this. If unspecified, we use 10.
    The maximum is 100.
    """

    page_token: typing.Text = ...
    """Optional. The
    [ListAnswerRecordsResponse.next_page_token][google.cloud.dialogflow.v2beta1.ListAnswerRecordsResponse.next_page_token]
    value returned from a previous list request used to continue listing on
    the next page.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListAnswerRecordsRequest = ListAnswerRecordsRequest

class ListAnswerRecordsResponse(google.protobuf.message.Message):
    """Response message for [AnswerRecords.ListAnswerRecords][google.cloud.dialogflow.v2beta1.AnswerRecords.ListAnswerRecords]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANSWER_RECORDS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def answer_records(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AnswerRecord]:
        """The list of answer records."""
        pass
    next_page_token: typing.Text = ...
    """A token to retrieve next page of results. Or empty if there are no more
    results.
    Pass this value in the
    [ListAnswerRecordsRequest.page_token][google.cloud.dialogflow.v2beta1.ListAnswerRecordsRequest.page_token]
    field in the subsequent call to `ListAnswerRecords` method to retrieve the
    next page of results.
    """

    def __init__(self,
        *,
        answer_records : typing.Optional[typing.Iterable[global___AnswerRecord]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer_records",b"answer_records","next_page_token",b"next_page_token"]) -> None: ...
global___ListAnswerRecordsResponse = ListAnswerRecordsResponse

class UpdateAnswerRecordRequest(google.protobuf.message.Message):
    """Request message for [AnswerRecords.UpdateAnswerRecord][google.cloud.dialogflow.v2beta1.AnswerRecords.UpdateAnswerRecord]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ANSWER_RECORD_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def answer_record(self) -> global___AnswerRecord:
        """Required. Answer record to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The mask to control which fields get updated."""
        pass
    def __init__(self,
        *,
        answer_record : typing.Optional[global___AnswerRecord] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["answer_record",b"answer_record","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer_record",b"answer_record","update_mask",b"update_mask"]) -> None: ...
global___UpdateAnswerRecordRequest = UpdateAnswerRecordRequest
