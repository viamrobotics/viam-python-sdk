"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _State:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    STATE_UNSPECIFIED: State.ValueType = ...  # 0
    """State is not specified."""

    ACTIVE: State.ValueType = ...  # 1
    """Resource is active, i.e., ready to use."""

    CREATING: State.ValueType = ...  # 2
    """Resource is under creation."""

    DELETING: State.ValueType = ...  # 3
    """Resource is under deletion."""

    ACTION_REQUIRED: State.ValueType = ...  # 4
    """Resource is active but has unresolved actions."""

class State(_State, metaclass=_StateEnumTypeWrapper):
    """State of a resource."""
    pass

STATE_UNSPECIFIED: State.ValueType = ...  # 0
"""State is not specified."""

ACTIVE: State.ValueType = ...  # 1
"""Resource is active, i.e., ready to use."""

CREATING: State.ValueType = ...  # 2
"""Resource is under creation."""

DELETING: State.ValueType = ...  # 3
"""Resource is under deletion."""

ACTION_REQUIRED: State.ValueType = ...  # 4
"""Resource is active but has unresolved actions."""

global___State = State


class Lake(google.protobuf.message.Message):
    """A lake is a centralized repository for managing enterprise data across the
    organization distributed across many cloud projects, and stored in a variety
    of storage services such as Google Cloud Storage and BigQuery. The resources
    attached to a lake are referred to as managed resources. Data within these
    managed resources can be structured or unstructured. A lake provides data
    admins with tools to organize, secure and manage their data at scale, and
    provides data scientists and data engineers an integrated experience to
    easily search, discover, analyze and transform data and associated metadata.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Metastore(google.protobuf.message.Message):
        """Settings to manage association of Dataproc Metastore with a lake."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SERVICE_FIELD_NUMBER: builtins.int
        service: typing.Text = ...
        """Optional. A relative reference to the Dataproc Metastore
        (https://cloud.google.com/dataproc-metastore/docs) service associated
        with the lake:
        `projects/{project_id}/locations/{location_id}/services/{service_id}`
        """

        def __init__(self,
            *,
            service : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["service",b"service"]) -> None: ...

    class MetastoreStatus(google.protobuf.message.Message):
        """Status of Lake and Dataproc Metastore service instance association."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _State:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            STATE_UNSPECIFIED: Lake.MetastoreStatus.State.ValueType = ...  # 0
            """Unspecified."""

            NONE: Lake.MetastoreStatus.State.ValueType = ...  # 1
            """A Metastore service instance is not associated with the lake."""

            READY: Lake.MetastoreStatus.State.ValueType = ...  # 2
            """A Metastore service instance is attached to the lake."""

            UPDATING: Lake.MetastoreStatus.State.ValueType = ...  # 3
            """Attach/detach is in progress."""

            ERROR: Lake.MetastoreStatus.State.ValueType = ...  # 4
            """Attach/detach could not be done due to errors."""

        class State(_State, metaclass=_StateEnumTypeWrapper):
            """Current state of association."""
            pass

        STATE_UNSPECIFIED: Lake.MetastoreStatus.State.ValueType = ...  # 0
        """Unspecified."""

        NONE: Lake.MetastoreStatus.State.ValueType = ...  # 1
        """A Metastore service instance is not associated with the lake."""

        READY: Lake.MetastoreStatus.State.ValueType = ...  # 2
        """A Metastore service instance is attached to the lake."""

        UPDATING: Lake.MetastoreStatus.State.ValueType = ...  # 3
        """Attach/detach is in progress."""

        ERROR: Lake.MetastoreStatus.State.ValueType = ...  # 4
        """Attach/detach could not be done due to errors."""


        STATE_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        UPDATE_TIME_FIELD_NUMBER: builtins.int
        ENDPOINT_FIELD_NUMBER: builtins.int
        state: global___Lake.MetastoreStatus.State.ValueType = ...
        """Current state of association."""

        message: typing.Text = ...
        """Additional information about the current status."""

        @property
        def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Last update time of the metastore status of the lake."""
            pass
        endpoint: typing.Text = ...
        """The URI of the endpoint used to access the Metastore service."""

        def __init__(self,
            *,
            state : global___Lake.MetastoreStatus.State.ValueType = ...,
            message : typing.Text = ...,
            update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            endpoint : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["update_time",b"update_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["endpoint",b"endpoint","message",b"message","state",b"state","update_time",b"update_time"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    METASTORE_FIELD_NUMBER: builtins.int
    ASSET_STATUS_FIELD_NUMBER: builtins.int
    METASTORE_STATUS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The relative resource name of the lake, of the form:
    `projects/{project_number}/locations/{location_id}/lakes/{lake_id}`.
    """

    display_name: typing.Text = ...
    """Optional. User friendly display name."""

    uid: typing.Text = ...
    """Output only. System generated globally unique ID for the lake. This ID will be
    different if the lake is deleted and re-created with the same name.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the lake was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the lake was last updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional. User-defined labels for the lake."""
        pass
    description: typing.Text = ...
    """Optional. Description of the lake."""

    state: global___State.ValueType = ...
    """Output only. Current state of the lake."""

    service_account: typing.Text = ...
    """Output only. Service account associated with this lake. This service account must be
    authorized to access or operate on resources managed by the lake.
    """

    @property
    def metastore(self) -> global___Lake.Metastore:
        """Optional. Settings to manage lake and Dataproc Metastore service instance
        association.
        """
        pass
    @property
    def asset_status(self) -> global___AssetStatus:
        """Output only. Aggregated status of the underlying assets of the lake."""
        pass
    @property
    def metastore_status(self) -> global___Lake.MetastoreStatus:
        """Output only. Metastore status of the lake."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        uid : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        description : typing.Text = ...,
        state : global___State.ValueType = ...,
        service_account : typing.Text = ...,
        metastore : typing.Optional[global___Lake.Metastore] = ...,
        asset_status : typing.Optional[global___AssetStatus] = ...,
        metastore_status : typing.Optional[global___Lake.MetastoreStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset_status",b"asset_status","create_time",b"create_time","metastore",b"metastore","metastore_status",b"metastore_status","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_status",b"asset_status","create_time",b"create_time","description",b"description","display_name",b"display_name","labels",b"labels","metastore",b"metastore","metastore_status",b"metastore_status","name",b"name","service_account",b"service_account","state",b"state","uid",b"uid","update_time",b"update_time"]) -> None: ...
global___Lake = Lake

class AssetStatus(google.protobuf.message.Message):
    """Aggregated status of the underlying assets of a lake or zone."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    ACTIVE_ASSETS_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_APPLYING_ASSETS_FIELD_NUMBER: builtins.int
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Last update time of the status."""
        pass
    active_assets: builtins.int = ...
    """Number of active assets."""

    security_policy_applying_assets: builtins.int = ...
    """Number of assets that are in process of updating the security policy on
    attached resources.
    """

    def __init__(self,
        *,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        active_assets : builtins.int = ...,
        security_policy_applying_assets : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["active_assets",b"active_assets","security_policy_applying_assets",b"security_policy_applying_assets","update_time",b"update_time"]) -> None: ...
global___AssetStatus = AssetStatus

class Zone(google.protobuf.message.Message):
    """A zone represents a logical group of related assets within a lake. A zone can
    be used to map to organizational structure or represent stages of data
    readiness from raw to curated. It provides managing behavior that is shared
    or inherited by all contained assets.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TYPE_UNSPECIFIED: Zone.Type.ValueType = ...  # 0
        """Zone type not specified."""

        RAW: Zone.Type.ValueType = ...  # 1
        """A zone that contains data that needs further processing before it is
        considered generally ready for consumption and analytics workloads.
        """

        CURATED: Zone.Type.ValueType = ...  # 2
        """A zone that contains data that is considered to be ready for broader
        consumption and analytics workloads. Curated structured data stored in
        Cloud Storage must conform to certain file formats (parquet, avro and
        orc) and organized in a hive-compatible directory layout.
        """

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Type of zone."""
        pass

    TYPE_UNSPECIFIED: Zone.Type.ValueType = ...  # 0
    """Zone type not specified."""

    RAW: Zone.Type.ValueType = ...  # 1
    """A zone that contains data that needs further processing before it is
    considered generally ready for consumption and analytics workloads.
    """

    CURATED: Zone.Type.ValueType = ...  # 2
    """A zone that contains data that is considered to be ready for broader
    consumption and analytics workloads. Curated structured data stored in
    Cloud Storage must conform to certain file formats (parquet, avro and
    orc) and organized in a hive-compatible directory layout.
    """


    class ResourceSpec(google.protobuf.message.Message):
        """Settings for resources attached as assets within a zone."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _LocationType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _LocationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LocationType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            LOCATION_TYPE_UNSPECIFIED: Zone.ResourceSpec.LocationType.ValueType = ...  # 0
            """Unspecified location type."""

            SINGLE_REGION: Zone.ResourceSpec.LocationType.ValueType = ...  # 1
            """Resources that are associated with a single region."""

            MULTI_REGION: Zone.ResourceSpec.LocationType.ValueType = ...  # 2
            """Resources that are associated with a multi-region location."""

        class LocationType(_LocationType, metaclass=_LocationTypeEnumTypeWrapper):
            """Location type of the resources attached to a zone."""
            pass

        LOCATION_TYPE_UNSPECIFIED: Zone.ResourceSpec.LocationType.ValueType = ...  # 0
        """Unspecified location type."""

        SINGLE_REGION: Zone.ResourceSpec.LocationType.ValueType = ...  # 1
        """Resources that are associated with a single region."""

        MULTI_REGION: Zone.ResourceSpec.LocationType.ValueType = ...  # 2
        """Resources that are associated with a multi-region location."""


        LOCATION_TYPE_FIELD_NUMBER: builtins.int
        location_type: global___Zone.ResourceSpec.LocationType.ValueType = ...
        """Required. Immutable. The location type of the resources that are allowed to be attached to the
        assets within this zone.
        """

        def __init__(self,
            *,
            location_type : global___Zone.ResourceSpec.LocationType.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["location_type",b"location_type"]) -> None: ...

    class DiscoverySpec(google.protobuf.message.Message):
        """Settings to manage the metadata discovery and publishing in a zone."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class CsvOptions(google.protobuf.message.Message):
            """Describe CSV and similar semi-structured data formats."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            HEADER_ROWS_FIELD_NUMBER: builtins.int
            DELIMITER_FIELD_NUMBER: builtins.int
            ENCODING_FIELD_NUMBER: builtins.int
            DISABLE_TYPE_INFERENCE_FIELD_NUMBER: builtins.int
            header_rows: builtins.int = ...
            """Optional. The number of rows to interpret as header rows that should be skipped
            when reading data rows.
            """

            delimiter: typing.Text = ...
            """Optional. The delimiter being used to separate values. This defaults to ','."""

            encoding: typing.Text = ...
            """Optional. The character encoding of the data. The default is UTF-8."""

            disable_type_inference: builtins.bool = ...
            """Optional. Whether to disable the inference of data type for CSV data.
            If true, all columns will be registered as strings.
            """

            def __init__(self,
                *,
                header_rows : builtins.int = ...,
                delimiter : typing.Text = ...,
                encoding : typing.Text = ...,
                disable_type_inference : builtins.bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["delimiter",b"delimiter","disable_type_inference",b"disable_type_inference","encoding",b"encoding","header_rows",b"header_rows"]) -> None: ...

        class JsonOptions(google.protobuf.message.Message):
            """Describe JSON data format."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            ENCODING_FIELD_NUMBER: builtins.int
            DISABLE_TYPE_INFERENCE_FIELD_NUMBER: builtins.int
            encoding: typing.Text = ...
            """Optional. The character encoding of the data. The default is UTF-8."""

            disable_type_inference: builtins.bool = ...
            """Optional. Whether to disable the inference of data type for Json data.
            If true, all columns will be registered as their primitive types
            (strings, number or boolean).
            """

            def __init__(self,
                *,
                encoding : typing.Text = ...,
                disable_type_inference : builtins.bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["disable_type_inference",b"disable_type_inference","encoding",b"encoding"]) -> None: ...

        ENABLED_FIELD_NUMBER: builtins.int
        INCLUDE_PATTERNS_FIELD_NUMBER: builtins.int
        EXCLUDE_PATTERNS_FIELD_NUMBER: builtins.int
        CSV_OPTIONS_FIELD_NUMBER: builtins.int
        JSON_OPTIONS_FIELD_NUMBER: builtins.int
        SCHEDULE_FIELD_NUMBER: builtins.int
        enabled: builtins.bool = ...
        """Required. Whether discovery is enabled."""

        @property
        def include_patterns(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Optional. The list of patterns to apply for selecting data to include during
            discovery if only a subset of the data should considered. For Cloud
            Storage bucket assets, these are interpreted as glob patterns used to
            match object names. For BigQuery dataset assets, these are
            interpreted as patterns to match table names.
            """
            pass
        @property
        def exclude_patterns(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Optional. The list of patterns to apply for selecting data to exclude during
            discovery.  For Cloud Storage bucket assets, these are interpreted as
            glob patterns used to match object names. For BigQuery dataset assets,
            these are interpreted as patterns to match table names.
            """
            pass
        @property
        def csv_options(self) -> global___Zone.DiscoverySpec.CsvOptions:
            """Optional. Configuration for CSV data."""
            pass
        @property
        def json_options(self) -> global___Zone.DiscoverySpec.JsonOptions:
            """Optional. Configuration for Json data."""
            pass
        schedule: typing.Text = ...
        """Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running
        discovery periodically. Successive discovery runs must be scheduled at
        least 60 minutes apart.
        The default value is to run discovery every 60 minutes.
        To explicitly set a timezone to the cron tab, apply a prefix in the
        cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}".
        The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone
        database. For example, "CRON_TZ=America/New_York 1 * * * *", or
        "TZ=America/New_York 1 * * * *".
        """

        def __init__(self,
            *,
            enabled : builtins.bool = ...,
            include_patterns : typing.Optional[typing.Iterable[typing.Text]] = ...,
            exclude_patterns : typing.Optional[typing.Iterable[typing.Text]] = ...,
            csv_options : typing.Optional[global___Zone.DiscoverySpec.CsvOptions] = ...,
            json_options : typing.Optional[global___Zone.DiscoverySpec.JsonOptions] = ...,
            schedule : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["csv_options",b"csv_options","json_options",b"json_options","schedule",b"schedule","trigger",b"trigger"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["csv_options",b"csv_options","enabled",b"enabled","exclude_patterns",b"exclude_patterns","include_patterns",b"include_patterns","json_options",b"json_options","schedule",b"schedule","trigger",b"trigger"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["trigger",b"trigger"]) -> typing.Optional[typing_extensions.Literal["schedule"]]: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DISCOVERY_SPEC_FIELD_NUMBER: builtins.int
    RESOURCE_SPEC_FIELD_NUMBER: builtins.int
    ASSET_STATUS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The relative resource name of the zone, of the form:
    `projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}`
    """

    display_name: typing.Text = ...
    """Optional. User friendly display name."""

    uid: typing.Text = ...
    """Output only. System generated globally unique ID for the zone. This ID will be
    different if the zone is deleted and re-created with the same name.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the zone was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the zone was last updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional. User defined labels for the zone."""
        pass
    description: typing.Text = ...
    """Optional. Description of the zone."""

    state: global___State.ValueType = ...
    """Output only. Current state of the zone."""

    type: global___Zone.Type.ValueType = ...
    """Required. Immutable. The type of the zone."""

    @property
    def discovery_spec(self) -> global___Zone.DiscoverySpec:
        """Optional. Specification of the discovery feature applied to data in this zone."""
        pass
    @property
    def resource_spec(self) -> global___Zone.ResourceSpec:
        """Required. Specification of the resources that are referenced by the assets within
        this zone.
        """
        pass
    @property
    def asset_status(self) -> global___AssetStatus:
        """Output only. Aggregated status of the underlying assets of the zone."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        uid : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        description : typing.Text = ...,
        state : global___State.ValueType = ...,
        type : global___Zone.Type.ValueType = ...,
        discovery_spec : typing.Optional[global___Zone.DiscoverySpec] = ...,
        resource_spec : typing.Optional[global___Zone.ResourceSpec] = ...,
        asset_status : typing.Optional[global___AssetStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asset_status",b"asset_status","create_time",b"create_time","discovery_spec",b"discovery_spec","resource_spec",b"resource_spec","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset_status",b"asset_status","create_time",b"create_time","description",b"description","discovery_spec",b"discovery_spec","display_name",b"display_name","labels",b"labels","name",b"name","resource_spec",b"resource_spec","state",b"state","type",b"type","uid",b"uid","update_time",b"update_time"]) -> None: ...
global___Zone = Zone

class Action(google.protobuf.message.Message):
    """Action represents an issue requiring administrator action for resolution."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Category:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CategoryEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Category.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        CATEGORY_UNSPECIFIED: Action.Category.ValueType = ...  # 0
        """Unspecified category."""

        RESOURCE_MANAGEMENT: Action.Category.ValueType = ...  # 1
        """Resource management related issues."""

        SECURITY_POLICY: Action.Category.ValueType = ...  # 2
        """Security policy related issues."""

        DATA_DISCOVERY: Action.Category.ValueType = ...  # 3
        """Data and discovery related issues."""

    class Category(_Category, metaclass=_CategoryEnumTypeWrapper):
        """The category of issues."""
        pass

    CATEGORY_UNSPECIFIED: Action.Category.ValueType = ...  # 0
    """Unspecified category."""

    RESOURCE_MANAGEMENT: Action.Category.ValueType = ...  # 1
    """Resource management related issues."""

    SECURITY_POLICY: Action.Category.ValueType = ...  # 2
    """Security policy related issues."""

    DATA_DISCOVERY: Action.Category.ValueType = ...  # 3
    """Data and discovery related issues."""


    class MissingResource(google.protobuf.message.Message):
        """Action details for resource references in assets that cannot be located."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class UnauthorizedResource(google.protobuf.message.Message):
        """Action details for unauthorized resource issues raised to indicate that the
        service account associated with the lake instance is not authorized to
        access or manage the resource associated with an asset.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class FailedSecurityPolicyApply(google.protobuf.message.Message):
        """Failed to apply security policy to the managed resource(s) under a
        lake, zone or an asset. For a lake or zone resource, one or more underlying
        assets has a failure applying security policy to the associated managed
        resource.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ASSET_FIELD_NUMBER: builtins.int
        asset: typing.Text = ...
        """Resource name of one of the assets with failing security policy
        application. Populated for a lake or zone resource only.
        """

        def __init__(self,
            *,
            asset : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["asset",b"asset"]) -> None: ...

    class InvalidDataFormat(google.protobuf.message.Message):
        """Action details for invalid or unsupported data files detected by discovery."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SAMPLED_DATA_LOCATIONS_FIELD_NUMBER: builtins.int
        EXPECTED_FORMAT_FIELD_NUMBER: builtins.int
        NEW_FORMAT_FIELD_NUMBER: builtins.int
        @property
        def sampled_data_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """The list of data locations sampled and used for format/schema
            inference.
            """
            pass
        expected_format: typing.Text = ...
        """The expected data format of the entity."""

        new_format: typing.Text = ...
        """The new unexpected data format within the entity."""

        def __init__(self,
            *,
            sampled_data_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
            expected_format : typing.Text = ...,
            new_format : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["expected_format",b"expected_format","new_format",b"new_format","sampled_data_locations",b"sampled_data_locations"]) -> None: ...

    class IncompatibleDataSchema(google.protobuf.message.Message):
        """Action details for incompatible schemas detected by discovery."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _SchemaChange:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _SchemaChangeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SchemaChange.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            SCHEMA_CHANGE_UNSPECIFIED: Action.IncompatibleDataSchema.SchemaChange.ValueType = ...  # 0
            """Schema change unspecified."""

            INCOMPATIBLE: Action.IncompatibleDataSchema.SchemaChange.ValueType = ...  # 1
            """Newly discovered schema is incompatible with existing schema."""

            MODIFIED: Action.IncompatibleDataSchema.SchemaChange.ValueType = ...  # 2
            """Newly discovered schema has changed from existing schema for data in a
            curated zone.
            """

        class SchemaChange(_SchemaChange, metaclass=_SchemaChangeEnumTypeWrapper):
            """Whether the action relates to a schema that is incompatible or modified."""
            pass

        SCHEMA_CHANGE_UNSPECIFIED: Action.IncompatibleDataSchema.SchemaChange.ValueType = ...  # 0
        """Schema change unspecified."""

        INCOMPATIBLE: Action.IncompatibleDataSchema.SchemaChange.ValueType = ...  # 1
        """Newly discovered schema is incompatible with existing schema."""

        MODIFIED: Action.IncompatibleDataSchema.SchemaChange.ValueType = ...  # 2
        """Newly discovered schema has changed from existing schema for data in a
        curated zone.
        """


        TABLE_FIELD_NUMBER: builtins.int
        EXISTING_SCHEMA_FIELD_NUMBER: builtins.int
        NEW_SCHEMA_FIELD_NUMBER: builtins.int
        SAMPLED_DATA_LOCATIONS_FIELD_NUMBER: builtins.int
        SCHEMA_CHANGE_FIELD_NUMBER: builtins.int
        table: typing.Text = ...
        """The name of the table containing invalid data."""

        existing_schema: typing.Text = ...
        """The existing and expected schema of the table. The schema is provided as
        a JSON formatted structure listing columns and data types.
        """

        new_schema: typing.Text = ...
        """The new and incompatible schema within the table. The schema is provided
        as a JSON formatted structured listing columns and data types.
        """

        @property
        def sampled_data_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """The list of data locations sampled and used for format/schema
            inference.
            """
            pass
        schema_change: global___Action.IncompatibleDataSchema.SchemaChange.ValueType = ...
        """Whether the action relates to a schema that is incompatible or modified."""

        def __init__(self,
            *,
            table : typing.Text = ...,
            existing_schema : typing.Text = ...,
            new_schema : typing.Text = ...,
            sampled_data_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
            schema_change : global___Action.IncompatibleDataSchema.SchemaChange.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["existing_schema",b"existing_schema","new_schema",b"new_schema","sampled_data_locations",b"sampled_data_locations","schema_change",b"schema_change","table",b"table"]) -> None: ...

    class InvalidDataPartition(google.protobuf.message.Message):
        """Action details for invalid or unsupported partitions detected by discovery."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _PartitionStructure:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _PartitionStructureEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PartitionStructure.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            PARTITION_STRUCTURE_UNSPECIFIED: Action.InvalidDataPartition.PartitionStructure.ValueType = ...  # 0
            """PartitionStructure unspecified."""

            CONSISTENT_KEYS: Action.InvalidDataPartition.PartitionStructure.ValueType = ...  # 1
            """Consistent hive-style partition definition (both raw and curated zone)."""

            HIVE_STYLE_KEYS: Action.InvalidDataPartition.PartitionStructure.ValueType = ...  # 2
            """Hive style partition definition (curated zone only)."""

        class PartitionStructure(_PartitionStructure, metaclass=_PartitionStructureEnumTypeWrapper):
            """The expected partition structure."""
            pass

        PARTITION_STRUCTURE_UNSPECIFIED: Action.InvalidDataPartition.PartitionStructure.ValueType = ...  # 0
        """PartitionStructure unspecified."""

        CONSISTENT_KEYS: Action.InvalidDataPartition.PartitionStructure.ValueType = ...  # 1
        """Consistent hive-style partition definition (both raw and curated zone)."""

        HIVE_STYLE_KEYS: Action.InvalidDataPartition.PartitionStructure.ValueType = ...  # 2
        """Hive style partition definition (curated zone only)."""


        EXPECTED_STRUCTURE_FIELD_NUMBER: builtins.int
        expected_structure: global___Action.InvalidDataPartition.PartitionStructure.ValueType = ...
        """The issue type of InvalidDataPartition."""

        def __init__(self,
            *,
            expected_structure : global___Action.InvalidDataPartition.PartitionStructure.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["expected_structure",b"expected_structure"]) -> None: ...

    class MissingData(google.protobuf.message.Message):
        """Action details for absence of data detected by discovery."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class InvalidDataOrganization(google.protobuf.message.Message):
        """Action details for invalid data arrangement."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    CATEGORY_FIELD_NUMBER: builtins.int
    ISSUE_FIELD_NUMBER: builtins.int
    DETECT_TIME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    LAKE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    ASSET_FIELD_NUMBER: builtins.int
    DATA_LOCATIONS_FIELD_NUMBER: builtins.int
    INVALID_DATA_FORMAT_FIELD_NUMBER: builtins.int
    INCOMPATIBLE_DATA_SCHEMA_FIELD_NUMBER: builtins.int
    INVALID_DATA_PARTITION_FIELD_NUMBER: builtins.int
    MISSING_DATA_FIELD_NUMBER: builtins.int
    MISSING_RESOURCE_FIELD_NUMBER: builtins.int
    UNAUTHORIZED_RESOURCE_FIELD_NUMBER: builtins.int
    FAILED_SECURITY_POLICY_APPLY_FIELD_NUMBER: builtins.int
    INVALID_DATA_ORGANIZATION_FIELD_NUMBER: builtins.int
    category: global___Action.Category.ValueType = ...
    """The category of issue associated with the action."""

    issue: typing.Text = ...
    """Detailed description of the issue requiring action."""

    @property
    def detect_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time that the issue was detected."""
        pass
    name: typing.Text = ...
    """Output only. The relative resource name of the action, of the form:
    `projects/{project}/locations/{location}/lakes/{lake}/actions/{action}`
    `projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/actions/{action}`
    `projects/{project}/locations/{location}/lakes/{lake}/zones/{zone}/assets/{asset}/actions/{action}`.
    """

    lake: typing.Text = ...
    """Output only. The relative resource name of the lake, of the form:
    `projects/{project_number}/locations/{location_id}/lakes/{lake_id}`.
    """

    zone: typing.Text = ...
    """Output only. The relative resource name of the zone, of the form:
    `projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}`.
    """

    asset: typing.Text = ...
    """Output only. The relative resource name of the asset, of the form:
    `projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}`.
    """

    @property
    def data_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of data locations associated with this action. Cloud Storage
        locations are represented as URI paths(E.g.
        `gs://bucket/table1/year=2020/month=Jan/`). BigQuery locations refer to
        resource names(E.g.
        `bigquery.googleapis.com/projects/project-id/datasets/dataset-id`).
        """
        pass
    @property
    def invalid_data_format(self) -> global___Action.InvalidDataFormat:
        """Details for issues related to invalid or unsupported data formats."""
        pass
    @property
    def incompatible_data_schema(self) -> global___Action.IncompatibleDataSchema:
        """Details for issues related to incompatible schemas detected within data."""
        pass
    @property
    def invalid_data_partition(self) -> global___Action.InvalidDataPartition:
        """Details for issues related to invalid or unsupported data partition
        structure.
        """
        pass
    @property
    def missing_data(self) -> global___Action.MissingData:
        """Details for issues related to absence of data within managed resources."""
        pass
    @property
    def missing_resource(self) -> global___Action.MissingResource:
        """Details for issues related to absence of a managed resource."""
        pass
    @property
    def unauthorized_resource(self) -> global___Action.UnauthorizedResource:
        """Details for issues related to lack of permissions to access data
        resources.
        """
        pass
    @property
    def failed_security_policy_apply(self) -> global___Action.FailedSecurityPolicyApply:
        """Details for issues related to applying security policy."""
        pass
    @property
    def invalid_data_organization(self) -> global___Action.InvalidDataOrganization:
        """Details for issues related to invalid data arrangement."""
        pass
    def __init__(self,
        *,
        category : global___Action.Category.ValueType = ...,
        issue : typing.Text = ...,
        detect_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        name : typing.Text = ...,
        lake : typing.Text = ...,
        zone : typing.Text = ...,
        asset : typing.Text = ...,
        data_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        invalid_data_format : typing.Optional[global___Action.InvalidDataFormat] = ...,
        incompatible_data_schema : typing.Optional[global___Action.IncompatibleDataSchema] = ...,
        invalid_data_partition : typing.Optional[global___Action.InvalidDataPartition] = ...,
        missing_data : typing.Optional[global___Action.MissingData] = ...,
        missing_resource : typing.Optional[global___Action.MissingResource] = ...,
        unauthorized_resource : typing.Optional[global___Action.UnauthorizedResource] = ...,
        failed_security_policy_apply : typing.Optional[global___Action.FailedSecurityPolicyApply] = ...,
        invalid_data_organization : typing.Optional[global___Action.InvalidDataOrganization] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["details",b"details","detect_time",b"detect_time","failed_security_policy_apply",b"failed_security_policy_apply","incompatible_data_schema",b"incompatible_data_schema","invalid_data_format",b"invalid_data_format","invalid_data_organization",b"invalid_data_organization","invalid_data_partition",b"invalid_data_partition","missing_data",b"missing_data","missing_resource",b"missing_resource","unauthorized_resource",b"unauthorized_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asset",b"asset","category",b"category","data_locations",b"data_locations","details",b"details","detect_time",b"detect_time","failed_security_policy_apply",b"failed_security_policy_apply","incompatible_data_schema",b"incompatible_data_schema","invalid_data_format",b"invalid_data_format","invalid_data_organization",b"invalid_data_organization","invalid_data_partition",b"invalid_data_partition","issue",b"issue","lake",b"lake","missing_data",b"missing_data","missing_resource",b"missing_resource","name",b"name","unauthorized_resource",b"unauthorized_resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["details",b"details"]) -> typing.Optional[typing_extensions.Literal["invalid_data_format","incompatible_data_schema","invalid_data_partition","missing_data","missing_resource","unauthorized_resource","failed_security_policy_apply","invalid_data_organization"]]: ...
global___Action = Action

class Asset(google.protobuf.message.Message):
    """An asset represents a cloud resource that is being managed within a lake as a
    member of a zone.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SecurityStatus(google.protobuf.message.Message):
        """Security policy status of the asset. Data security policy, i.e., readers,
        writers & owners, should be specified in the lake/zone/asset IAM policy.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _State:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            STATE_UNSPECIFIED: Asset.SecurityStatus.State.ValueType = ...  # 0
            """State unspecified."""

            READY: Asset.SecurityStatus.State.ValueType = ...  # 1
            """Security policy has been successfully applied to the attached resource."""

            APPLYING: Asset.SecurityStatus.State.ValueType = ...  # 2
            """Security policy is in the process of being applied to the attached
            resource.
            """

            ERROR: Asset.SecurityStatus.State.ValueType = ...  # 3
            """Security policy could not be applied to the attached resource due to
            errors.
            """

        class State(_State, metaclass=_StateEnumTypeWrapper):
            """The state of the security policy."""
            pass

        STATE_UNSPECIFIED: Asset.SecurityStatus.State.ValueType = ...  # 0
        """State unspecified."""

        READY: Asset.SecurityStatus.State.ValueType = ...  # 1
        """Security policy has been successfully applied to the attached resource."""

        APPLYING: Asset.SecurityStatus.State.ValueType = ...  # 2
        """Security policy is in the process of being applied to the attached
        resource.
        """

        ERROR: Asset.SecurityStatus.State.ValueType = ...  # 3
        """Security policy could not be applied to the attached resource due to
        errors.
        """


        STATE_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        UPDATE_TIME_FIELD_NUMBER: builtins.int
        state: global___Asset.SecurityStatus.State.ValueType = ...
        """The current state of the security policy applied to the attached
        resource.
        """

        message: typing.Text = ...
        """Additional information about the current state."""

        @property
        def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Last update time of the status."""
            pass
        def __init__(self,
            *,
            state : global___Asset.SecurityStatus.State.ValueType = ...,
            message : typing.Text = ...,
            update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["update_time",b"update_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["message",b"message","state",b"state","update_time",b"update_time"]) -> None: ...

    class DiscoverySpec(google.protobuf.message.Message):
        """Settings to manage the metadata discovery and publishing for an asset."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class CsvOptions(google.protobuf.message.Message):
            """Describe CSV and similar semi-structured data formats."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            HEADER_ROWS_FIELD_NUMBER: builtins.int
            DELIMITER_FIELD_NUMBER: builtins.int
            ENCODING_FIELD_NUMBER: builtins.int
            DISABLE_TYPE_INFERENCE_FIELD_NUMBER: builtins.int
            header_rows: builtins.int = ...
            """Optional. The number of rows to interpret as header rows that should be skipped
            when reading data rows.
            """

            delimiter: typing.Text = ...
            """Optional. The delimiter being used to separate values. This defaults to ','."""

            encoding: typing.Text = ...
            """Optional. The character encoding of the data. The default is UTF-8."""

            disable_type_inference: builtins.bool = ...
            """Optional. Whether to disable the inference of data type for CSV data.
            If true, all columns will be registered as strings.
            """

            def __init__(self,
                *,
                header_rows : builtins.int = ...,
                delimiter : typing.Text = ...,
                encoding : typing.Text = ...,
                disable_type_inference : builtins.bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["delimiter",b"delimiter","disable_type_inference",b"disable_type_inference","encoding",b"encoding","header_rows",b"header_rows"]) -> None: ...

        class JsonOptions(google.protobuf.message.Message):
            """Describe JSON data format."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            ENCODING_FIELD_NUMBER: builtins.int
            DISABLE_TYPE_INFERENCE_FIELD_NUMBER: builtins.int
            encoding: typing.Text = ...
            """Optional. The character encoding of the data. The default is UTF-8."""

            disable_type_inference: builtins.bool = ...
            """Optional. Whether to disable the inference of data type for Json data.
            If true, all columns will be registered as their primitive types
            (strings, number or boolean).
            """

            def __init__(self,
                *,
                encoding : typing.Text = ...,
                disable_type_inference : builtins.bool = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["disable_type_inference",b"disable_type_inference","encoding",b"encoding"]) -> None: ...

        ENABLED_FIELD_NUMBER: builtins.int
        INCLUDE_PATTERNS_FIELD_NUMBER: builtins.int
        EXCLUDE_PATTERNS_FIELD_NUMBER: builtins.int
        CSV_OPTIONS_FIELD_NUMBER: builtins.int
        JSON_OPTIONS_FIELD_NUMBER: builtins.int
        SCHEDULE_FIELD_NUMBER: builtins.int
        enabled: builtins.bool = ...
        """Optional. Whether discovery is enabled."""

        @property
        def include_patterns(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Optional. The list of patterns to apply for selecting data to include during
            discovery if only a subset of the data should considered.  For Cloud
            Storage bucket assets, these are interpreted as glob patterns used to
            match object names. For BigQuery dataset assets, these are interpreted as
            patterns to match table names.
            """
            pass
        @property
        def exclude_patterns(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Optional. The list of patterns to apply for selecting data to exclude during
            discovery.  For Cloud Storage bucket assets, these are interpreted as
            glob patterns used to match object names. For BigQuery dataset assets,
            these are interpreted as patterns to match table names.
            """
            pass
        @property
        def csv_options(self) -> global___Asset.DiscoverySpec.CsvOptions:
            """Optional. Configuration for CSV data."""
            pass
        @property
        def json_options(self) -> global___Asset.DiscoverySpec.JsonOptions:
            """Optional. Configuration for Json data."""
            pass
        schedule: typing.Text = ...
        """Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running
        discovery periodically. Successive discovery runs must be scheduled at
        least 60 minutes apart.
        The default value is to run discovery every 60 minutes.
        To explicitly set a timezone to the cron tab, apply a prefix in the
        cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or TZ=${IANA_TIME_ZONE}".
        The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone
        database. For example, "CRON_TZ=America/New_York 1 * * * *", or
        "TZ=America/New_York 1 * * * *".
        """

        def __init__(self,
            *,
            enabled : builtins.bool = ...,
            include_patterns : typing.Optional[typing.Iterable[typing.Text]] = ...,
            exclude_patterns : typing.Optional[typing.Iterable[typing.Text]] = ...,
            csv_options : typing.Optional[global___Asset.DiscoverySpec.CsvOptions] = ...,
            json_options : typing.Optional[global___Asset.DiscoverySpec.JsonOptions] = ...,
            schedule : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["csv_options",b"csv_options","json_options",b"json_options","schedule",b"schedule","trigger",b"trigger"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["csv_options",b"csv_options","enabled",b"enabled","exclude_patterns",b"exclude_patterns","include_patterns",b"include_patterns","json_options",b"json_options","schedule",b"schedule","trigger",b"trigger"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["trigger",b"trigger"]) -> typing.Optional[typing_extensions.Literal["schedule"]]: ...

    class ResourceSpec(google.protobuf.message.Message):
        """Identifies the cloud resource that is referenced by this asset."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            TYPE_UNSPECIFIED: Asset.ResourceSpec.Type.ValueType = ...  # 0
            """Type not specified."""

            STORAGE_BUCKET: Asset.ResourceSpec.Type.ValueType = ...  # 1
            """Cloud Storage bucket."""

            BIGQUERY_DATASET: Asset.ResourceSpec.Type.ValueType = ...  # 2
            """BigQuery dataset."""

        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            """Type of resource."""
            pass

        TYPE_UNSPECIFIED: Asset.ResourceSpec.Type.ValueType = ...  # 0
        """Type not specified."""

        STORAGE_BUCKET: Asset.ResourceSpec.Type.ValueType = ...  # 1
        """Cloud Storage bucket."""

        BIGQUERY_DATASET: Asset.ResourceSpec.Type.ValueType = ...  # 2
        """BigQuery dataset."""


        NAME_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """Immutable. Relative name of the cloud resource that contains the data that is
        being managed within a lake. For example:
          `projects/{project_number}/buckets/{bucket_id}`
          `projects/{project_number}/datasets/{dataset_id}`
        If the creation policy indicates ATTACH behavior, then an existing
        resource must be provided.
        If the policy indicates CREATE behavior, new resource will be created
        with the given name.However if it is empty, then the resource will be
        created using {asset_id}-{UUID} template for name.
        The location of the referenced resource must always match that of the
        asset.
        """

        type: global___Asset.ResourceSpec.Type.ValueType = ...
        """Required. Immutable. Type of resource."""

        def __init__(self,
            *,
            name : typing.Text = ...,
            type : global___Asset.ResourceSpec.Type.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name",b"name","type",b"type"]) -> None: ...

    class ResourceStatus(google.protobuf.message.Message):
        """Status of the resource referenced by an asset."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _State:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            STATE_UNSPECIFIED: Asset.ResourceStatus.State.ValueType = ...  # 0
            """State unspecified."""

            READY: Asset.ResourceStatus.State.ValueType = ...  # 1
            """Resource does not have any errors."""

            ERROR: Asset.ResourceStatus.State.ValueType = ...  # 2
            """Resource has errors."""

        class State(_State, metaclass=_StateEnumTypeWrapper):
            """The state of a resource."""
            pass

        STATE_UNSPECIFIED: Asset.ResourceStatus.State.ValueType = ...  # 0
        """State unspecified."""

        READY: Asset.ResourceStatus.State.ValueType = ...  # 1
        """Resource does not have any errors."""

        ERROR: Asset.ResourceStatus.State.ValueType = ...  # 2
        """Resource has errors."""


        STATE_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        UPDATE_TIME_FIELD_NUMBER: builtins.int
        state: global___Asset.ResourceStatus.State.ValueType = ...
        """The current state of the managed resource."""

        message: typing.Text = ...
        """Additional information about the current state."""

        @property
        def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Last update time of the status."""
            pass
        def __init__(self,
            *,
            state : global___Asset.ResourceStatus.State.ValueType = ...,
            message : typing.Text = ...,
            update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["update_time",b"update_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["message",b"message","state",b"state","update_time",b"update_time"]) -> None: ...

    class DiscoveryStatus(google.protobuf.message.Message):
        """Status of discovery for an asset."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _State:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            STATE_UNSPECIFIED: Asset.DiscoveryStatus.State.ValueType = ...  # 0
            """State is unspecified."""

            SCHEDULED: Asset.DiscoveryStatus.State.ValueType = ...  # 1
            """Discovery for the asset is scheduled."""

            IN_PROGRESS: Asset.DiscoveryStatus.State.ValueType = ...  # 2
            """Discovery for the asset is running."""

            PAUSED: Asset.DiscoveryStatus.State.ValueType = ...  # 3
            """Discovery for the asset is currently paused (e.g. due to a lack
            of available resources). It will be automatically resumed.
            """

            DISABLED: Asset.DiscoveryStatus.State.ValueType = ...  # 5
            """Discovery for the asset is disabled."""

        class State(_State, metaclass=_StateEnumTypeWrapper):
            """Current state of discovery."""
            pass

        STATE_UNSPECIFIED: Asset.DiscoveryStatus.State.ValueType = ...  # 0
        """State is unspecified."""

        SCHEDULED: Asset.DiscoveryStatus.State.ValueType = ...  # 1
        """Discovery for the asset is scheduled."""

        IN_PROGRESS: Asset.DiscoveryStatus.State.ValueType = ...  # 2
        """Discovery for the asset is running."""

        PAUSED: Asset.DiscoveryStatus.State.ValueType = ...  # 3
        """Discovery for the asset is currently paused (e.g. due to a lack
        of available resources). It will be automatically resumed.
        """

        DISABLED: Asset.DiscoveryStatus.State.ValueType = ...  # 5
        """Discovery for the asset is disabled."""


        class Stats(google.protobuf.message.Message):
            """The aggregated data statistics for the asset reported by discovery."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            DATA_ITEMS_FIELD_NUMBER: builtins.int
            DATA_SIZE_FIELD_NUMBER: builtins.int
            TABLES_FIELD_NUMBER: builtins.int
            FILESETS_FIELD_NUMBER: builtins.int
            data_items: builtins.int = ...
            """The count of data items within the referenced resource."""

            data_size: builtins.int = ...
            """The number of stored data bytes within the referenced resource."""

            tables: builtins.int = ...
            """The count of table entities within the referenced resource."""

            filesets: builtins.int = ...
            """The count of fileset entities within the referenced resource."""

            def __init__(self,
                *,
                data_items : builtins.int = ...,
                data_size : builtins.int = ...,
                tables : builtins.int = ...,
                filesets : builtins.int = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["data_items",b"data_items","data_size",b"data_size","filesets",b"filesets","tables",b"tables"]) -> None: ...

        STATE_FIELD_NUMBER: builtins.int
        MESSAGE_FIELD_NUMBER: builtins.int
        UPDATE_TIME_FIELD_NUMBER: builtins.int
        LAST_RUN_TIME_FIELD_NUMBER: builtins.int
        STATS_FIELD_NUMBER: builtins.int
        LAST_RUN_DURATION_FIELD_NUMBER: builtins.int
        state: global___Asset.DiscoveryStatus.State.ValueType = ...
        """The current status of the discovery feature."""

        message: typing.Text = ...
        """Additional information about the current state."""

        @property
        def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """Last update time of the status."""
            pass
        @property
        def last_run_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """The start time of the last discovery run."""
            pass
        @property
        def stats(self) -> global___Asset.DiscoveryStatus.Stats:
            """Data Stats of the asset reported by discovery."""
            pass
        @property
        def last_run_duration(self) -> google.protobuf.duration_pb2.Duration:
            """The duration of the last discovery run."""
            pass
        def __init__(self,
            *,
            state : global___Asset.DiscoveryStatus.State.ValueType = ...,
            message : typing.Text = ...,
            update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            last_run_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            stats : typing.Optional[global___Asset.DiscoveryStatus.Stats] = ...,
            last_run_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["last_run_duration",b"last_run_duration","last_run_time",b"last_run_time","stats",b"stats","update_time",b"update_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["last_run_duration",b"last_run_duration","last_run_time",b"last_run_time","message",b"message","state",b"state","stats",b"stats","update_time",b"update_time"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    UID_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    RESOURCE_SPEC_FIELD_NUMBER: builtins.int
    RESOURCE_STATUS_FIELD_NUMBER: builtins.int
    SECURITY_STATUS_FIELD_NUMBER: builtins.int
    DISCOVERY_SPEC_FIELD_NUMBER: builtins.int
    DISCOVERY_STATUS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The relative resource name of the asset, of the form:
    `projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}`.
    """

    display_name: typing.Text = ...
    """Optional. User friendly display name."""

    uid: typing.Text = ...
    """Output only. System generated globally unique ID for the asset. This ID will be
    different if the asset is deleted and re-created with the same name.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the asset was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time when the asset was last updated."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional. User defined labels for the asset."""
        pass
    description: typing.Text = ...
    """Optional. Description of the asset."""

    state: global___State.ValueType = ...
    """Output only. Current state of the asset."""

    @property
    def resource_spec(self) -> global___Asset.ResourceSpec:
        """Required. Specification of the resource that is referenced by this asset."""
        pass
    @property
    def resource_status(self) -> global___Asset.ResourceStatus:
        """Output only. Status of the resource referenced by this asset."""
        pass
    @property
    def security_status(self) -> global___Asset.SecurityStatus:
        """Output only. Status of the security policy applied to resource referenced by this asset."""
        pass
    @property
    def discovery_spec(self) -> global___Asset.DiscoverySpec:
        """Optional. Specification of the discovery feature applied to data referenced by this
        asset.
        When this spec is left unset, the asset will use the spec set on the parent
        zone.
        """
        pass
    @property
    def discovery_status(self) -> global___Asset.DiscoveryStatus:
        """Output only. Status of the discovery feature applied to data referenced by this asset."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        uid : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        description : typing.Text = ...,
        state : global___State.ValueType = ...,
        resource_spec : typing.Optional[global___Asset.ResourceSpec] = ...,
        resource_status : typing.Optional[global___Asset.ResourceStatus] = ...,
        security_status : typing.Optional[global___Asset.SecurityStatus] = ...,
        discovery_spec : typing.Optional[global___Asset.DiscoverySpec] = ...,
        discovery_status : typing.Optional[global___Asset.DiscoveryStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","discovery_spec",b"discovery_spec","discovery_status",b"discovery_status","resource_spec",b"resource_spec","resource_status",b"resource_status","security_status",b"security_status","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","description",b"description","discovery_spec",b"discovery_spec","discovery_status",b"discovery_status","display_name",b"display_name","labels",b"labels","name",b"name","resource_spec",b"resource_spec","resource_status",b"resource_status","security_status",b"security_status","state",b"state","uid",b"uid","update_time",b"update_time"]) -> None: ...
global___Asset = Asset
