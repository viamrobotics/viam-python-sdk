"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.tasks.v2beta2.target_pb2
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Task(google.protobuf.message.Message):
    """A unit of scheduled work."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _View:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ViewEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_View.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        VIEW_UNSPECIFIED: Task.View.ValueType = ...  # 0
        """Unspecified. Defaults to BASIC."""

        BASIC: Task.View.ValueType = ...  # 1
        """The basic view omits fields which can be large or can contain
        sensitive data.

        This view does not include the
        ([payload in AppEngineHttpRequest][google.cloud.tasks.v2beta2.AppEngineHttpRequest] and
        [payload in PullMessage][google.cloud.tasks.v2beta2.PullMessage.payload]). These payloads are
        desirable to return only when needed, because they can be large
        and because of the sensitivity of the data that you choose to
        store in it.
        """

        FULL: Task.View.ValueType = ...  # 2
        """All information is returned.

        Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL] requires
        `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
        permission on the [Queue][google.cloud.tasks.v2beta2.Queue] resource.
        """

    class View(_View, metaclass=_ViewEnumTypeWrapper):
        """The view specifies a subset of [Task][google.cloud.tasks.v2beta2.Task] data.

        When a task is returned in a response, not all
        information is retrieved by default because some data, such as
        payloads, might be desirable to return only when needed because
        of its large size or because of the sensitivity of data that it
        contains.
        """
        pass

    VIEW_UNSPECIFIED: Task.View.ValueType = ...  # 0
    """Unspecified. Defaults to BASIC."""

    BASIC: Task.View.ValueType = ...  # 1
    """The basic view omits fields which can be large or can contain
    sensitive data.

    This view does not include the
    ([payload in AppEngineHttpRequest][google.cloud.tasks.v2beta2.AppEngineHttpRequest] and
    [payload in PullMessage][google.cloud.tasks.v2beta2.PullMessage.payload]). These payloads are
    desirable to return only when needed, because they can be large
    and because of the sensitivity of the data that you choose to
    store in it.
    """

    FULL: Task.View.ValueType = ...  # 2
    """All information is returned.

    Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL] requires
    `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
    permission on the [Queue][google.cloud.tasks.v2beta2.Queue] resource.
    """


    NAME_FIELD_NUMBER: builtins.int
    APP_ENGINE_HTTP_REQUEST_FIELD_NUMBER: builtins.int
    PULL_MESSAGE_FIELD_NUMBER: builtins.int
    SCHEDULE_TIME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Optionally caller-specified in [CreateTask][google.cloud.tasks.v2beta2.CloudTasks.CreateTask].

    The task name.

    The task name must have the following format:
    `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`

    * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]),
       hyphens (-), colons (:), or periods (.).
       For more information, see
       [Identifying
       projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects)
    * `LOCATION_ID` is the canonical ID for the task's location.
       The list of available locations can be obtained by calling
       [ListLocations][google.cloud.location.Locations.ListLocations].
       For more information, see https://cloud.google.com/about/locations/.
    * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or
      hyphens (-). The maximum length is 100 characters.
    * `TASK_ID` can contain only letters ([A-Za-z]), numbers ([0-9]),
      hyphens (-), or underscores (_). The maximum length is 500 characters.
    """

    @property
    def app_engine_http_request(self) -> google.cloud.tasks.v2beta2.target_pb2.AppEngineHttpRequest:
        """App Engine HTTP request that is sent to the task's target. Can
        be set only if
        [app_engine_http_target][google.cloud.tasks.v2beta2.Queue.app_engine_http_target] is set
        on the queue.

        An App Engine task is a task that has [AppEngineHttpRequest][google.cloud.tasks.v2beta2.AppEngineHttpRequest] set.
        """
        pass
    @property
    def pull_message(self) -> google.cloud.tasks.v2beta2.target_pb2.PullMessage:
        """[LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] to process the task. Can be
        set only if [pull_target][google.cloud.tasks.v2beta2.Queue.pull_target] is set on the queue.

        A pull task is a task that has [PullMessage][google.cloud.tasks.v2beta2.PullMessage] set.
        """
        pass
    @property
    def schedule_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the task is scheduled to be attempted.

        For App Engine queues, this is when the task will be attempted or retried.

        For pull queues, this is the time when the task is available to
        be leased; if a task is currently leased, this is the time when
        the current lease expires, that is, the time that the task was
        leased plus the [lease_duration][google.cloud.tasks.v2beta2.LeaseTasksRequest.lease_duration].

        `schedule_time` will be truncated to the nearest microsecond.
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time that the task was created.

        `create_time` will be truncated to the nearest second.
        """
        pass
    @property
    def status(self) -> global___TaskStatus:
        """Output only. The task status."""
        pass
    view: global___Task.View.ValueType = ...
    """Output only. The view specifies which subset of the [Task][google.cloud.tasks.v2beta2.Task] has
    been returned.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        app_engine_http_request : typing.Optional[google.cloud.tasks.v2beta2.target_pb2.AppEngineHttpRequest] = ...,
        pull_message : typing.Optional[google.cloud.tasks.v2beta2.target_pb2.PullMessage] = ...,
        schedule_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        status : typing.Optional[global___TaskStatus] = ...,
        view : global___Task.View.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app_engine_http_request",b"app_engine_http_request","create_time",b"create_time","payload_type",b"payload_type","pull_message",b"pull_message","schedule_time",b"schedule_time","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_engine_http_request",b"app_engine_http_request","create_time",b"create_time","name",b"name","payload_type",b"payload_type","pull_message",b"pull_message","schedule_time",b"schedule_time","status",b"status","view",b"view"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["payload_type",b"payload_type"]) -> typing.Optional[typing_extensions.Literal["app_engine_http_request","pull_message"]]: ...
global___Task = Task

class TaskStatus(google.protobuf.message.Message):
    """Status of the task."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ATTEMPT_DISPATCH_COUNT_FIELD_NUMBER: builtins.int
    ATTEMPT_RESPONSE_COUNT_FIELD_NUMBER: builtins.int
    FIRST_ATTEMPT_STATUS_FIELD_NUMBER: builtins.int
    LAST_ATTEMPT_STATUS_FIELD_NUMBER: builtins.int
    attempt_dispatch_count: builtins.int = ...
    """Output only. The number of attempts dispatched.

    This count includes attempts which have been dispatched but haven't
    received a response.
    """

    attempt_response_count: builtins.int = ...
    """Output only. The number of attempts which have received a response.

    This field is not calculated for [pull tasks][google.cloud.tasks.v2beta2.PullMessage].
    """

    @property
    def first_attempt_status(self) -> global___AttemptStatus:
        """Output only. The status of the task's first attempt.

        Only [dispatch_time][google.cloud.tasks.v2beta2.AttemptStatus.dispatch_time] will be set.
        The other [AttemptStatus][google.cloud.tasks.v2beta2.AttemptStatus] information is not retained by Cloud Tasks.

        This field is not calculated for [pull tasks][google.cloud.tasks.v2beta2.PullMessage].
        """
        pass
    @property
    def last_attempt_status(self) -> global___AttemptStatus:
        """Output only. The status of the task's last attempt.

        This field is not calculated for [pull tasks][google.cloud.tasks.v2beta2.PullMessage].
        """
        pass
    def __init__(self,
        *,
        attempt_dispatch_count : builtins.int = ...,
        attempt_response_count : builtins.int = ...,
        first_attempt_status : typing.Optional[global___AttemptStatus] = ...,
        last_attempt_status : typing.Optional[global___AttemptStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["first_attempt_status",b"first_attempt_status","last_attempt_status",b"last_attempt_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attempt_dispatch_count",b"attempt_dispatch_count","attempt_response_count",b"attempt_response_count","first_attempt_status",b"first_attempt_status","last_attempt_status",b"last_attempt_status"]) -> None: ...
global___TaskStatus = TaskStatus

class AttemptStatus(google.protobuf.message.Message):
    """The status of a task attempt."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SCHEDULE_TIME_FIELD_NUMBER: builtins.int
    DISPATCH_TIME_FIELD_NUMBER: builtins.int
    RESPONSE_TIME_FIELD_NUMBER: builtins.int
    RESPONSE_STATUS_FIELD_NUMBER: builtins.int
    @property
    def schedule_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time that this attempt was scheduled.

        `schedule_time` will be truncated to the nearest microsecond.
        """
        pass
    @property
    def dispatch_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time that this attempt was dispatched.

        `dispatch_time` will be truncated to the nearest microsecond.
        """
        pass
    @property
    def response_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time that this attempt response was received.

        `response_time` will be truncated to the nearest microsecond.
        """
        pass
    @property
    def response_status(self) -> google.rpc.status_pb2.Status:
        """Output only. The response from the target for this attempt.

        If the task has not been attempted or the task is currently running
        then the response status is unset.
        """
        pass
    def __init__(self,
        *,
        schedule_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        dispatch_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        response_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        response_status : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dispatch_time",b"dispatch_time","response_status",b"response_status","response_time",b"response_time","schedule_time",b"schedule_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dispatch_time",b"dispatch_time","response_status",b"response_status","response_time",b"response_time","schedule_time",b"schedule_time"]) -> None: ...
global___AttemptStatus = AttemptStatus
