"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.tasks.v2.target_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Task(google.protobuf.message.Message):
    """A unit of scheduled work."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _View:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ViewEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_View.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        VIEW_UNSPECIFIED: Task.View.ValueType = ...  # 0
        """Unspecified. Defaults to BASIC."""

        BASIC: Task.View.ValueType = ...  # 1
        """The basic view omits fields which can be large or can contain
        sensitive data.

        This view does not include the
        [body in AppEngineHttpRequest][google.cloud.tasks.v2.AppEngineHttpRequest.body].
        Bodies are desirable to return only when needed, because they
        can be large and because of the sensitivity of the data that you
        choose to store in it.
        """

        FULL: Task.View.ValueType = ...  # 2
        """All information is returned.

        Authorization for [FULL][google.cloud.tasks.v2.Task.View.FULL] requires
        `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
        permission on the [Queue][google.cloud.tasks.v2.Queue] resource.
        """

    class View(_View, metaclass=_ViewEnumTypeWrapper):
        """The view specifies a subset of [Task][google.cloud.tasks.v2.Task] data.

        When a task is returned in a response, not all
        information is retrieved by default because some data, such as
        payloads, might be desirable to return only when needed because
        of its large size or because of the sensitivity of data that it
        contains.
        """
        pass

    VIEW_UNSPECIFIED: Task.View.ValueType = ...  # 0
    """Unspecified. Defaults to BASIC."""

    BASIC: Task.View.ValueType = ...  # 1
    """The basic view omits fields which can be large or can contain
    sensitive data.

    This view does not include the
    [body in AppEngineHttpRequest][google.cloud.tasks.v2.AppEngineHttpRequest.body].
    Bodies are desirable to return only when needed, because they
    can be large and because of the sensitivity of the data that you
    choose to store in it.
    """

    FULL: Task.View.ValueType = ...  # 2
    """All information is returned.

    Authorization for [FULL][google.cloud.tasks.v2.Task.View.FULL] requires
    `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
    permission on the [Queue][google.cloud.tasks.v2.Queue] resource.
    """


    NAME_FIELD_NUMBER: builtins.int
    APP_ENGINE_HTTP_REQUEST_FIELD_NUMBER: builtins.int
    HTTP_REQUEST_FIELD_NUMBER: builtins.int
    SCHEDULE_TIME_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    DISPATCH_DEADLINE_FIELD_NUMBER: builtins.int
    DISPATCH_COUNT_FIELD_NUMBER: builtins.int
    RESPONSE_COUNT_FIELD_NUMBER: builtins.int
    FIRST_ATTEMPT_FIELD_NUMBER: builtins.int
    LAST_ATTEMPT_FIELD_NUMBER: builtins.int
    VIEW_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Optionally caller-specified in [CreateTask][google.cloud.tasks.v2.CloudTasks.CreateTask].

    The task name.

    The task name must have the following format:
    `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`

    * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]),
       hyphens (-), colons (:), or periods (.).
       For more information, see
       [Identifying
       projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects)
    * `LOCATION_ID` is the canonical ID for the task's location.
       The list of available locations can be obtained by calling
       [ListLocations][google.cloud.location.Locations.ListLocations].
       For more information, see https://cloud.google.com/about/locations/.
    * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or
      hyphens (-). The maximum length is 100 characters.
    * `TASK_ID` can contain only letters ([A-Za-z]), numbers ([0-9]),
      hyphens (-), or underscores (_). The maximum length is 500 characters.
    """

    @property
    def app_engine_http_request(self) -> google.cloud.tasks.v2.target_pb2.AppEngineHttpRequest:
        """HTTP request that is sent to the App Engine app handler.

        An App Engine task is a task that has [AppEngineHttpRequest][google.cloud.tasks.v2.AppEngineHttpRequest] set.
        """
        pass
    @property
    def http_request(self) -> google.cloud.tasks.v2.target_pb2.HttpRequest:
        """HTTP request that is sent to the worker.

        An HTTP task is a task that has [HttpRequest][google.cloud.tasks.v2.HttpRequest] set.
        """
        pass
    @property
    def schedule_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time when the task is scheduled to be attempted or retried.

        `schedule_time` will be truncated to the nearest microsecond.
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time that the task was created.

        `create_time` will be truncated to the nearest second.
        """
        pass
    @property
    def dispatch_deadline(self) -> google.protobuf.duration_pb2.Duration:
        """The deadline for requests sent to the worker. If the worker does not
        respond by this deadline then the request is cancelled and the attempt
        is marked as a `DEADLINE_EXCEEDED` failure. Cloud Tasks will retry the
        task according to the [RetryConfig][google.cloud.tasks.v2.RetryConfig].

        Note that when the request is cancelled, Cloud Tasks will stop listing for
        the response, but whether the worker stops processing depends on the
        worker. For example, if the worker is stuck, it may not react to cancelled
        requests.

        The default and maximum values depend on the type of request:

        * For [HTTP tasks][google.cloud.tasks.v2.HttpRequest], the default is 10 minutes. The deadline
          must be in the interval [15 seconds, 30 minutes].

        * For [App Engine tasks][google.cloud.tasks.v2.AppEngineHttpRequest], 0 indicates that the
          request has the default deadline. The default deadline depends on the
          [scaling
          type](https://cloud.google.com/appengine/docs/standard/go/how-instances-are-managed#instance_scaling)
          of the service: 10 minutes for standard apps with automatic scaling, 24
          hours for standard apps with manual and basic scaling, and 60 minutes for
          flex apps. If the request deadline is set, it must be in the interval [15
          seconds, 24 hours 15 seconds]. Regardless of the task's
          `dispatch_deadline`, the app handler will not run for longer than than
          the service's timeout. We recommend setting the `dispatch_deadline` to
          at most a few seconds more than the app handler's timeout. For more
          information see
          [Timeouts](https://cloud.google.com/tasks/docs/creating-appengine-handlers#timeouts).

        `dispatch_deadline` will be truncated to the nearest millisecond. The
        deadline is an approximate deadline.
        """
        pass
    dispatch_count: builtins.int = ...
    """Output only. The number of attempts dispatched.

    This count includes attempts which have been dispatched but haven't
    received a response.
    """

    response_count: builtins.int = ...
    """Output only. The number of attempts which have received a response."""

    @property
    def first_attempt(self) -> global___Attempt:
        """Output only. The status of the task's first attempt.

        Only [dispatch_time][google.cloud.tasks.v2.Attempt.dispatch_time] will be set.
        The other [Attempt][google.cloud.tasks.v2.Attempt] information is not retained by Cloud Tasks.
        """
        pass
    @property
    def last_attempt(self) -> global___Attempt:
        """Output only. The status of the task's last attempt."""
        pass
    view: global___Task.View.ValueType = ...
    """Output only. The view specifies which subset of the [Task][google.cloud.tasks.v2.Task] has
    been returned.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        app_engine_http_request : typing.Optional[google.cloud.tasks.v2.target_pb2.AppEngineHttpRequest] = ...,
        http_request : typing.Optional[google.cloud.tasks.v2.target_pb2.HttpRequest] = ...,
        schedule_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        dispatch_deadline : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        dispatch_count : builtins.int = ...,
        response_count : builtins.int = ...,
        first_attempt : typing.Optional[global___Attempt] = ...,
        last_attempt : typing.Optional[global___Attempt] = ...,
        view : global___Task.View.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app_engine_http_request",b"app_engine_http_request","create_time",b"create_time","dispatch_deadline",b"dispatch_deadline","first_attempt",b"first_attempt","http_request",b"http_request","last_attempt",b"last_attempt","message_type",b"message_type","schedule_time",b"schedule_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_engine_http_request",b"app_engine_http_request","create_time",b"create_time","dispatch_count",b"dispatch_count","dispatch_deadline",b"dispatch_deadline","first_attempt",b"first_attempt","http_request",b"http_request","last_attempt",b"last_attempt","message_type",b"message_type","name",b"name","response_count",b"response_count","schedule_time",b"schedule_time","view",b"view"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["message_type",b"message_type"]) -> typing.Optional[typing_extensions.Literal["app_engine_http_request","http_request"]]: ...
global___Task = Task

class Attempt(google.protobuf.message.Message):
    """The status of a task attempt."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SCHEDULE_TIME_FIELD_NUMBER: builtins.int
    DISPATCH_TIME_FIELD_NUMBER: builtins.int
    RESPONSE_TIME_FIELD_NUMBER: builtins.int
    RESPONSE_STATUS_FIELD_NUMBER: builtins.int
    @property
    def schedule_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time that this attempt was scheduled.

        `schedule_time` will be truncated to the nearest microsecond.
        """
        pass
    @property
    def dispatch_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time that this attempt was dispatched.

        `dispatch_time` will be truncated to the nearest microsecond.
        """
        pass
    @property
    def response_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. The time that this attempt response was received.

        `response_time` will be truncated to the nearest microsecond.
        """
        pass
    @property
    def response_status(self) -> google.rpc.status_pb2.Status:
        """Output only. The response from the worker for this attempt.

        If `response_time` is unset, then the task has not been attempted or is
        currently running and the `response_status` field is meaningless.
        """
        pass
    def __init__(self,
        *,
        schedule_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        dispatch_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        response_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        response_status : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dispatch_time",b"dispatch_time","response_status",b"response_status","response_time",b"response_time","schedule_time",b"schedule_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dispatch_time",b"dispatch_time","response_status",b"response_status","response_time",b"response_time","schedule_time",b"schedule_time"]) -> None: ...
global___Attempt = Attempt
