"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.securitycenter.v1p1beta1.asset_pb2
import google.cloud.securitycenter.v1p1beta1.finding_pb2
import google.cloud.securitycenter.v1p1beta1.folder_pb2
import google.cloud.securitycenter.v1p1beta1.notification_config_pb2
import google.cloud.securitycenter.v1p1beta1.organization_settings_pb2
import google.cloud.securitycenter.v1p1beta1.security_marks_pb2
import google.cloud.securitycenter.v1p1beta1.source_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import typing
import typing_extensions
from google.cloud.securitycenter.v1p1beta1.notification_message_pb2 import (
    NotificationMessage as NotificationMessage,
)

from google.cloud.securitycenter.v1p1beta1.run_asset_discovery_response_pb2 import (
    RunAssetDiscoveryResponse as RunAssetDiscoveryResponse,
)


DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CreateFindingRequest(google.protobuf.message.Message):
    """Request message for creating a finding."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FINDING_ID_FIELD_NUMBER: builtins.int
    FINDING_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Resource name of the new finding's parent. Its format should be
    "organizations/[organization_id]/sources/[source_id]".
    """

    finding_id: typing.Text = ...
    """Required. Unique identifier provided by the client within the parent scope."""

    @property
    def finding(self) -> google.cloud.securitycenter.v1p1beta1.finding_pb2.Finding:
        """Required. The Finding being created. The name and security_marks will be ignored as
        they are both output only fields on this resource.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        finding_id : typing.Text = ...,
        finding : typing.Optional[google.cloud.securitycenter.v1p1beta1.finding_pb2.Finding] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["finding",b"finding"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["finding",b"finding","finding_id",b"finding_id","parent",b"parent"]) -> None: ...
global___CreateFindingRequest = CreateFindingRequest

class CreateNotificationConfigRequest(google.protobuf.message.Message):
    """Request message for creating a notification config."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    CONFIG_ID_FIELD_NUMBER: builtins.int
    NOTIFICATION_CONFIG_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Resource name of the new notification config's parent. Its format is
    "organizations/[organization_id]".
    """

    config_id: typing.Text = ...
    """Required. Unique identifier provided by the client within the parent scope.
    It must be between 1 and 128 characters, and contains alphanumeric
    characters, underscores or hyphens only.
    """

    @property
    def notification_config(self) -> google.cloud.securitycenter.v1p1beta1.notification_config_pb2.NotificationConfig:
        """Required. The notification config being created. The name and the service account
        will be ignored as they are both output only fields on this resource.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        config_id : typing.Text = ...,
        notification_config : typing.Optional[google.cloud.securitycenter.v1p1beta1.notification_config_pb2.NotificationConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["notification_config",b"notification_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config_id",b"config_id","notification_config",b"notification_config","parent",b"parent"]) -> None: ...
global___CreateNotificationConfigRequest = CreateNotificationConfigRequest

class CreateSourceRequest(google.protobuf.message.Message):
    """Request message for creating a source."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Resource name of the new source's parent. Its format should be
    "organizations/[organization_id]".
    """

    @property
    def source(self) -> google.cloud.securitycenter.v1p1beta1.source_pb2.Source:
        """Required. The Source being created, only the display_name and description will be
        used. All other fields will be ignored.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        source : typing.Optional[google.cloud.securitycenter.v1p1beta1.source_pb2.Source] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent","source",b"source"]) -> None: ...
global___CreateSourceRequest = CreateSourceRequest

class DeleteNotificationConfigRequest(google.protobuf.message.Message):
    """Request message for deleting a notification config."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the notification config to delete. Its format is
    "organizations/[organization_id]/notificationConfigs/[config_id]".
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteNotificationConfigRequest = DeleteNotificationConfigRequest

class GetNotificationConfigRequest(google.protobuf.message.Message):
    """Request message for getting a notification config."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the notification config to get. Its format is
    "organizations/[organization_id]/notificationConfigs/[config_id]".
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetNotificationConfigRequest = GetNotificationConfigRequest

class GetOrganizationSettingsRequest(google.protobuf.message.Message):
    """Request message for getting organization settings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Name of the organization to get organization settings for. Its format is
    "organizations/[organization_id]/organizationSettings".
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetOrganizationSettingsRequest = GetOrganizationSettingsRequest

class GetSourceRequest(google.protobuf.message.Message):
    """Request message for getting a source."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. Relative resource name of the source. Its format is
    "organizations/[organization_id]/source/[source_id]".
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetSourceRequest = GetSourceRequest

class GroupAssetsRequest(google.protobuf.message.Message):
    """Request message for grouping by assets."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    GROUP_BY_FIELD_NUMBER: builtins.int
    COMPARE_DURATION_FIELD_NUMBER: builtins.int
    READ_TIME_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Name of the organization to groupBy. Its format is
    "organizations/[organization_id], folders/[folder_id], or
    projects/[project_id]".
    """

    filter: typing.Text = ...
    """Expression that defines the filter to apply across assets.
    The expression is a list of zero or more restrictions combined via logical
    operators `AND` and `OR`.
    Parentheses are supported, and `OR` has higher precedence than `AND`.

    Restrictions have the form `<field> <operator> <value>` and may have a `-`
    character in front of them to indicate negation. The fields map to those
    defined in the Asset resource. Examples include:

    * name
    * security_center_properties.resource_name
    * resource_properties.a_property
    * security_marks.marks.marka

    The supported operators are:

    * `=` for all value types.
    * `>`, `<`, `>=`, `<=` for integer values.
    * `:`, meaning substring matching, for strings.

    The supported value types are:

    * string literals in quotes.
    * integer literals without quotes.
    * boolean literals `true` and `false` without quotes.

    The following field and operator combinations are supported:

    * name: `=`
    * update_time: `=`, `>`, `<`, `>=`, `<=`

      Usage: This should be milliseconds since epoch or an RFC3339 string.
      Examples:
        `update_time = "2019-06-10T16:07:18-07:00"`
        `update_time = 1560208038000`

    * create_time: `=`, `>`, `<`, `>=`, `<=`

      Usage: This should be milliseconds since epoch or an RFC3339 string.
      Examples:
        `create_time = "2019-06-10T16:07:18-07:00"`
        `create_time = 1560208038000`

    * iam_policy.policy_blob: `=`, `:`
    * resource_properties: `=`, `:`, `>`, `<`, `>=`, `<=`
    * security_marks.marks: `=`, `:`
    * security_center_properties.resource_name: `=`, `:`
    * security_center_properties.resource_name_display_name: `=`, `:`
    * security_center_properties.resource_type: `=`, `:`
    * security_center_properties.resource_parent: `=`, `:`
    * security_center_properties.resource_parent_display_name: `=`, `:`
    * security_center_properties.resource_project: `=`, `:`
    * security_center_properties.resource_project_display_name: `=`, `:`
    * security_center_properties.resource_owners: `=`, `:`

    For example, `resource_properties.size = 100` is a valid filter string.

    Use a partial match on the empty string to filter based on a property
    existing: `resource_properties.my_property : ""`

    Use a negated partial match on the empty string to filter based on a
    property not existing: `-resource_properties.my_property : ""`
    """

    group_by: typing.Text = ...
    """Required. Expression that defines what assets fields to use for grouping. The string
    value should follow SQL syntax: comma separated list of fields. For
    example:
    "security_center_properties.resource_project,security_center_properties.project".

    The following fields are supported when compare_duration is not set:

    * security_center_properties.resource_project
    * security_center_properties.resource_project_display_name
    * security_center_properties.resource_type
    * security_center_properties.resource_parent
    * security_center_properties.resource_parent_display_name

    The following fields are supported when compare_duration is set:

    * security_center_properties.resource_type
    * security_center_properties.resource_project_display_name
    * security_center_properties.resource_parent_display_name
    """

    @property
    def compare_duration(self) -> google.protobuf.duration_pb2.Duration:
        """When compare_duration is set, the GroupResult's "state_change" property is
        updated to indicate whether the asset was added, removed, or remained
        present during the compare_duration period of time that precedes the
        read_time. This is the time between (read_time - compare_duration) and
        read_time.

        The state change value is derived based on the presence of the asset at the
        two points in time. Intermediate state changes between the two times don't
        affect the result. For example, the results aren't affected if the asset is
        removed and re-created again.

        Possible "state_change" values when compare_duration is specified:

        * "ADDED":   indicates that the asset was not present at the start of
                       compare_duration, but present at reference_time.
        * "REMOVED": indicates that the asset was present at the start of
                       compare_duration, but not present at reference_time.
        * "ACTIVE":  indicates that the asset was present at both the
                       start and the end of the time period defined by
                       compare_duration and reference_time.

        If compare_duration is not specified, then the only possible state_change
        is "UNUSED", which will be the state_change set for all assets present at
        read_time.

        If this field is set then `state_change` must be a specified field in
        `group_by`.
        """
        pass
    @property
    def read_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time used as a reference point when filtering assets. The filter is limited
        to assets existing at the supplied time and their values are those at that
        specific time. Absence of this field will default to the API's version of
        NOW.
        """
        pass
    page_token: typing.Text = ...
    """The value returned by the last `GroupAssetsResponse`; indicates
    that this is a continuation of a prior `GroupAssets` call, and that the
    system should return the next page of data.
    """

    page_size: builtins.int = ...
    """The maximum number of results to return in a single response. Default is
    10, minimum is 1, maximum is 1000.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        group_by : typing.Text = ...,
        compare_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        read_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["compare_duration",b"compare_duration","read_time",b"read_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["compare_duration",b"compare_duration","filter",b"filter","group_by",b"group_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent","read_time",b"read_time"]) -> None: ...
global___GroupAssetsRequest = GroupAssetsRequest

class GroupAssetsResponse(google.protobuf.message.Message):
    """Response message for grouping by assets."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GROUP_BY_RESULTS_FIELD_NUMBER: builtins.int
    READ_TIME_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_FIELD_NUMBER: builtins.int
    @property
    def group_by_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GroupResult]:
        """Group results. There exists an element for each existing unique
        combination of property/values. The element contains a count for the number
        of times those specific property/values appear.
        """
        pass
    @property
    def read_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time used for executing the groupBy request."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results.
    """

    total_size: builtins.int = ...
    """The total number of results matching the query."""

    def __init__(self,
        *,
        group_by_results : typing.Optional[typing.Iterable[global___GroupResult]] = ...,
        read_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        next_page_token : typing.Text = ...,
        total_size : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["read_time",b"read_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["group_by_results",b"group_by_results","next_page_token",b"next_page_token","read_time",b"read_time","total_size",b"total_size"]) -> None: ...
global___GroupAssetsResponse = GroupAssetsResponse

class GroupFindingsRequest(google.protobuf.message.Message):
    """Request message for grouping by findings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    GROUP_BY_FIELD_NUMBER: builtins.int
    READ_TIME_FIELD_NUMBER: builtins.int
    COMPARE_DURATION_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Name of the source to groupBy. Its format is
    "organizations/[organization_id]/sources/[source_id]",
    folders/[folder_id]/sources/[source_id], or
    projects/[project_id]/sources/[source_id]. To groupBy across all sources
    provide a source_id of `-`. For example:
    organizations/{organization_id}/sources/-, folders/{folder_id}/sources/-,
    or projects/{project_id}/sources/-
    """

    filter: typing.Text = ...
    """Expression that defines the filter to apply across findings.
    The expression is a list of one or more restrictions combined via logical
    operators `AND` and `OR`.
    Parentheses are supported, and `OR` has higher precedence than `AND`.

    Restrictions have the form `<field> <operator> <value>` and may have a `-`
    character in front of them to indicate negation. Examples include:

     * name
     * source_properties.a_property
     * security_marks.marks.marka

    The supported operators are:

    * `=` for all value types.
    * `>`, `<`, `>=`, `<=` for integer values.
    * `:`, meaning substring matching, for strings.

    The supported value types are:

    * string literals in quotes.
    * integer literals without quotes.
    * boolean literals `true` and `false` without quotes.

    The following field and operator combinations are supported:

    * name: `=`
    * parent: `=`, `:`
    * resource_name: `=`, `:`
    * state: `=`, `:`
    * category: `=`, `:`
    * external_uri: `=`, `:`
    * event_time: `=`, `>`, `<`, `>=`, `<=`
    * severity: `=`, `:`

      Usage: This should be milliseconds since epoch or an RFC3339 string.
      Examples:
        `event_time = "2019-06-10T16:07:18-07:00"`
        `event_time = 1560208038000`

    * security_marks.marks: `=`, `:`
    * source_properties: `=`, `:`, `>`, `<`, `>=`, `<=`

    For example, `source_properties.size = 100` is a valid filter string.

    Use a partial match on the empty string to filter based on a property
    existing: `source_properties.my_property : ""`

    Use a negated partial match on the empty string to filter based on a
    property not existing: `-source_properties.my_property : ""`
    """

    group_by: typing.Text = ...
    """Required. Expression that defines what assets fields to use for grouping (including
    `state_change`). The string value should follow SQL syntax: comma separated
    list of fields. For example: "parent,resource_name".

    The following fields are supported:

    * resource_name
    * category
    * state
    * parent
    * severity

    The following fields are supported when compare_duration is set:

    * state_change
    """

    @property
    def read_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time used as a reference point when filtering findings. The filter is
        limited to findings existing at the supplied time and their values are
        those at that specific time. Absence of this field will default to the
        API's version of NOW.
        """
        pass
    @property
    def compare_duration(self) -> google.protobuf.duration_pb2.Duration:
        """When compare_duration is set, the GroupResult's "state_change" attribute is
        updated to indicate whether the finding had its state changed, the
        finding's state remained unchanged, or if the finding was added during the
        compare_duration period of time that precedes the read_time. This is the
        time between (read_time - compare_duration) and read_time.

        The state_change value is derived based on the presence and state of the
        finding at the two points in time. Intermediate state changes between the
        two times don't affect the result. For example, the results aren't affected
        if the finding is made inactive and then active again.

        Possible "state_change" values when compare_duration is specified:

        * "CHANGED":   indicates that the finding was present and matched the given
                         filter at the start of compare_duration, but changed its
                         state at read_time.
        * "UNCHANGED": indicates that the finding was present and matched the given
                         filter at the start of compare_duration and did not change
                         state at read_time.
        * "ADDED":     indicates that the finding did not match the given filter or
                         was not present at the start of compare_duration, but was
                         present at read_time.
        * "REMOVED":   indicates that the finding was present and matched the
                         filter at the start of compare_duration, but did not match
                         the filter at read_time.

        If compare_duration is not specified, then the only possible state_change
        is "UNUSED",  which will be the state_change set for all findings present
        at read_time.

        If this field is set then `state_change` must be a specified field in
        `group_by`.
        """
        pass
    page_token: typing.Text = ...
    """The value returned by the last `GroupFindingsResponse`; indicates
    that this is a continuation of a prior `GroupFindings` call, and
    that the system should return the next page of data.
    """

    page_size: builtins.int = ...
    """The maximum number of results to return in a single response. Default is
    10, minimum is 1, maximum is 1000.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        group_by : typing.Text = ...,
        read_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        compare_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["compare_duration",b"compare_duration","read_time",b"read_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["compare_duration",b"compare_duration","filter",b"filter","group_by",b"group_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent","read_time",b"read_time"]) -> None: ...
global___GroupFindingsRequest = GroupFindingsRequest

class GroupFindingsResponse(google.protobuf.message.Message):
    """Response message for group by findings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GROUP_BY_RESULTS_FIELD_NUMBER: builtins.int
    READ_TIME_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_FIELD_NUMBER: builtins.int
    @property
    def group_by_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GroupResult]:
        """Group results. There exists an element for each existing unique
        combination of property/values. The element contains a count for the number
        of times those specific property/values appear.
        """
        pass
    @property
    def read_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time used for executing the groupBy request."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results.
    """

    total_size: builtins.int = ...
    """The total number of results matching the query."""

    def __init__(self,
        *,
        group_by_results : typing.Optional[typing.Iterable[global___GroupResult]] = ...,
        read_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        next_page_token : typing.Text = ...,
        total_size : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["read_time",b"read_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["group_by_results",b"group_by_results","next_page_token",b"next_page_token","read_time",b"read_time","total_size",b"total_size"]) -> None: ...
global___GroupFindingsResponse = GroupFindingsResponse

class GroupResult(google.protobuf.message.Message):
    """Result containing the properties and count of a groupBy request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PropertiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> google.protobuf.struct_pb2.Value: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[google.protobuf.struct_pb2.Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROPERTIES_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    @property
    def properties(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.protobuf.struct_pb2.Value]:
        """Properties matching the groupBy fields in the request."""
        pass
    count: builtins.int = ...
    """Total count of resources for the given properties."""

    def __init__(self,
        *,
        properties : typing.Optional[typing.Mapping[typing.Text, google.protobuf.struct_pb2.Value]] = ...,
        count : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["count",b"count","properties",b"properties"]) -> None: ...
global___GroupResult = GroupResult

class ListNotificationConfigsRequest(google.protobuf.message.Message):
    """Request message for listing notification configs."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Name of the organization to list notification configs.
    Its format is "organizations/[organization_id]".
    """

    page_token: typing.Text = ...
    """The value returned by the last `ListNotificationConfigsResponse`; indicates
    that this is a continuation of a prior `ListNotificationConfigs` call, and
    that the system should return the next page of data.
    """

    page_size: builtins.int = ...
    """The maximum number of results to return in a single response. Default is
    10, minimum is 1, maximum is 1000.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListNotificationConfigsRequest = ListNotificationConfigsRequest

class ListNotificationConfigsResponse(google.protobuf.message.Message):
    """Response message for listing notification configs."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NOTIFICATION_CONFIGS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def notification_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.securitycenter.v1p1beta1.notification_config_pb2.NotificationConfig]:
        """Notification configs belonging to the requested parent."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results.
    """

    def __init__(self,
        *,
        notification_configs : typing.Optional[typing.Iterable[google.cloud.securitycenter.v1p1beta1.notification_config_pb2.NotificationConfig]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","notification_configs",b"notification_configs"]) -> None: ...
global___ListNotificationConfigsResponse = ListNotificationConfigsResponse

class ListSourcesRequest(google.protobuf.message.Message):
    """Request message for listing sources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Resource name of the parent of sources to list. Its format should be
    "organizations/[organization_id], folders/[folder_id], or
    projects/[project_id]".
    """

    page_token: typing.Text = ...
    """The value returned by the last `ListSourcesResponse`; indicates
    that this is a continuation of a prior `ListSources` call, and
    that the system should return the next page of data.
    """

    page_size: builtins.int = ...
    """The maximum number of results to return in a single response. Default is
    10, minimum is 1, maximum is 1000.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListSourcesRequest = ListSourcesRequest

class ListSourcesResponse(google.protobuf.message.Message):
    """Response message for listing sources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOURCES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def sources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.securitycenter.v1p1beta1.source_pb2.Source]:
        """Sources belonging to the requested parent."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results.
    """

    def __init__(self,
        *,
        sources : typing.Optional[typing.Iterable[google.cloud.securitycenter.v1p1beta1.source_pb2.Source]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["next_page_token",b"next_page_token","sources",b"sources"]) -> None: ...
global___ListSourcesResponse = ListSourcesResponse

class ListAssetsRequest(google.protobuf.message.Message):
    """Request message for listing assets."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    READ_TIME_FIELD_NUMBER: builtins.int
    COMPARE_DURATION_FIELD_NUMBER: builtins.int
    FIELD_MASK_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Name of the organization assets should belong to. Its format is
    "organizations/[organization_id], folders/[folder_id], or
    projects/[project_id]".
    """

    filter: typing.Text = ...
    """Expression that defines the filter to apply across assets.
    The expression is a list of zero or more restrictions combined via logical
    operators `AND` and `OR`.
    Parentheses are supported, and `OR` has higher precedence than `AND`.

    Restrictions have the form `<field> <operator> <value>` and may have a `-`
    character in front of them to indicate negation. The fields map to those
    defined in the Asset resource. Examples include:

    * name
    * security_center_properties.resource_name
    * resource_properties.a_property
    * security_marks.marks.marka

    The supported operators are:

    * `=` for all value types.
    * `>`, `<`, `>=`, `<=` for integer values.
    * `:`, meaning substring matching, for strings.

    The supported value types are:

    * string literals in quotes.
    * integer literals without quotes.
    * boolean literals `true` and `false` without quotes.

    The following are the allowed field and operator combinations:

    * name: `=`
    * update_time: `=`, `>`, `<`, `>=`, `<=`

      Usage: This should be milliseconds since epoch or an RFC3339 string.
      Examples:
        `update_time = "2019-06-10T16:07:18-07:00"`
        `update_time = 1560208038000`

    * create_time: `=`, `>`, `<`, `>=`, `<=`

      Usage: This should be milliseconds since epoch or an RFC3339 string.
      Examples:
        `create_time = "2019-06-10T16:07:18-07:00"`
        `create_time = 1560208038000`

    * iam_policy.policy_blob: `=`, `:`
    * resource_properties: `=`, `:`, `>`, `<`, `>=`, `<=`
    * security_marks.marks: `=`, `:`
    * security_center_properties.resource_name: `=`, `:`
    * security_center_properties.resource_display_name: `=`, `:`
    * security_center_properties.resource_type: `=`, `:`
    * security_center_properties.resource_parent: `=`, `:`
    * security_center_properties.resource_parent_display_name: `=`, `:`
    * security_center_properties.resource_project: `=`, `:`
    * security_center_properties.resource_project_display_name: `=`, `:`
    * security_center_properties.resource_owners: `=`, `:`

    For example, `resource_properties.size = 100` is a valid filter string.

    Use a partial match on the empty string to filter based on a property
    existing: `resource_properties.my_property : ""`

    Use a negated partial match on the empty string to filter based on a
    property not existing: `-resource_properties.my_property : ""`
    """

    order_by: typing.Text = ...
    """Expression that defines what fields and order to use for sorting. The
    string value should follow SQL syntax: comma separated list of fields. For
    example: "name,resource_properties.a_property". The default sorting order
    is ascending. To specify descending order for a field, a suffix " desc"
    should be appended to the field name. For example: "name
    desc,resource_properties.a_property". Redundant space characters in the
    syntax are insignificant. "name desc,resource_properties.a_property" and "
    name     desc  ,   resource_properties.a_property  " are equivalent.

    The following fields are supported:
    name
    update_time
    resource_properties
    security_marks.marks
    security_center_properties.resource_name
    security_center_properties.resource_display_name
    security_center_properties.resource_parent
    security_center_properties.resource_parent_display_name
    security_center_properties.resource_project
    security_center_properties.resource_project_display_name
    security_center_properties.resource_type
    """

    @property
    def read_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time used as a reference point when filtering assets. The filter is limited
        to assets existing at the supplied time and their values are those at that
        specific time. Absence of this field will default to the API's version of
        NOW.
        """
        pass
    @property
    def compare_duration(self) -> google.protobuf.duration_pb2.Duration:
        """When compare_duration is set, the ListAssetsResult's "state_change"
        attribute is updated to indicate whether the asset was added, removed, or
        remained present during the compare_duration period of time that precedes
        the read_time. This is the time between (read_time - compare_duration) and
        read_time.

        The state_change value is derived based on the presence of the asset at the
        two points in time. Intermediate state changes between the two times don't
        affect the result. For example, the results aren't affected if the asset is
        removed and re-created again.

        Possible "state_change" values when compare_duration is specified:

        * "ADDED":   indicates that the asset was not present at the start of
                       compare_duration, but present at read_time.
        * "REMOVED": indicates that the asset was present at the start of
                       compare_duration, but not present at read_time.
        * "ACTIVE":  indicates that the asset was present at both the
                       start and the end of the time period defined by
                       compare_duration and read_time.

        If compare_duration is not specified, then the only possible state_change
        is "UNUSED",  which will be the state_change set for all assets present at
        read_time.
        """
        pass
    @property
    def field_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """A field mask to specify the ListAssetsResult fields to be listed in the
        response.
        An empty field mask will list all fields.
        """
        pass
    page_token: typing.Text = ...
    """The value returned by the last `ListAssetsResponse`; indicates
    that this is a continuation of a prior `ListAssets` call, and
    that the system should return the next page of data.
    """

    page_size: builtins.int = ...
    """The maximum number of results to return in a single response. Default is
    10, minimum is 1, maximum is 1000.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        read_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        compare_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        field_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["compare_duration",b"compare_duration","field_mask",b"field_mask","read_time",b"read_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["compare_duration",b"compare_duration","field_mask",b"field_mask","filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent","read_time",b"read_time"]) -> None: ...
global___ListAssetsRequest = ListAssetsRequest

class ListAssetsResponse(google.protobuf.message.Message):
    """Response message for listing assets."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ListAssetsResult(google.protobuf.message.Message):
        """Result containing the Asset and its State."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _StateChange:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _StateChangeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_StateChange.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            UNUSED: ListAssetsResponse.ListAssetsResult.StateChange.ValueType = ...  # 0
            """State change is unused, this is the canonical default for this enum."""

            ADDED: ListAssetsResponse.ListAssetsResult.StateChange.ValueType = ...  # 1
            """Asset was added between the points in time."""

            REMOVED: ListAssetsResponse.ListAssetsResult.StateChange.ValueType = ...  # 2
            """Asset was removed between the points in time."""

            ACTIVE: ListAssetsResponse.ListAssetsResult.StateChange.ValueType = ...  # 3
            """Asset was present at both point(s) in time."""

        class StateChange(_StateChange, metaclass=_StateChangeEnumTypeWrapper):
            """The change in state of the asset.

            When querying across two points in time this describes
            the change between the two points: ADDED, REMOVED, or ACTIVE.
            If there was no compare_duration supplied in the request the state change
            will be: UNUSED
            """
            pass

        UNUSED: ListAssetsResponse.ListAssetsResult.StateChange.ValueType = ...  # 0
        """State change is unused, this is the canonical default for this enum."""

        ADDED: ListAssetsResponse.ListAssetsResult.StateChange.ValueType = ...  # 1
        """Asset was added between the points in time."""

        REMOVED: ListAssetsResponse.ListAssetsResult.StateChange.ValueType = ...  # 2
        """Asset was removed between the points in time."""

        ACTIVE: ListAssetsResponse.ListAssetsResult.StateChange.ValueType = ...  # 3
        """Asset was present at both point(s) in time."""


        ASSET_FIELD_NUMBER: builtins.int
        STATE_CHANGE_FIELD_NUMBER: builtins.int
        @property
        def asset(self) -> google.cloud.securitycenter.v1p1beta1.asset_pb2.Asset:
            """Asset matching the search request."""
            pass
        state_change: global___ListAssetsResponse.ListAssetsResult.StateChange.ValueType = ...
        """State change of the asset between the points in time."""

        def __init__(self,
            *,
            asset : typing.Optional[google.cloud.securitycenter.v1p1beta1.asset_pb2.Asset] = ...,
            state_change : global___ListAssetsResponse.ListAssetsResult.StateChange.ValueType = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["asset",b"asset"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["asset",b"asset","state_change",b"state_change"]) -> None: ...

    LIST_ASSETS_RESULTS_FIELD_NUMBER: builtins.int
    READ_TIME_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_FIELD_NUMBER: builtins.int
    @property
    def list_assets_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListAssetsResponse.ListAssetsResult]:
        """Assets matching the list request."""
        pass
    @property
    def read_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time used for executing the list request."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results.
    """

    total_size: builtins.int = ...
    """The total number of assets matching the query."""

    def __init__(self,
        *,
        list_assets_results : typing.Optional[typing.Iterable[global___ListAssetsResponse.ListAssetsResult]] = ...,
        read_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        next_page_token : typing.Text = ...,
        total_size : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["read_time",b"read_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["list_assets_results",b"list_assets_results","next_page_token",b"next_page_token","read_time",b"read_time","total_size",b"total_size"]) -> None: ...
global___ListAssetsResponse = ListAssetsResponse

class ListFindingsRequest(google.protobuf.message.Message):
    """Request message for listing findings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    READ_TIME_FIELD_NUMBER: builtins.int
    COMPARE_DURATION_FIELD_NUMBER: builtins.int
    FIELD_MASK_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Name of the source the findings belong to. Its format is
    "organizations/[organization_id]/sources/[source_id],
    folders/[folder_id]/sources/[source_id], or
    projects/[project_id]/sources/[source_id]". To list across all sources
    provide a source_id of `-`. For example:
    organizations/{organization_id}/sources/-, folders/{folder_id}/sources/- or
    projects/{projects_id}/sources/-
    """

    filter: typing.Text = ...
    """Expression that defines the filter to apply across findings.
    The expression is a list of one or more restrictions combined via logical
    operators `AND` and `OR`.
    Parentheses are supported, and `OR` has higher precedence than `AND`.

    Restrictions have the form `<field> <operator> <value>` and may have a `-`
    character in front of them to indicate negation. Examples include:

     * name
     * source_properties.a_property
     * security_marks.marks.marka

    The supported operators are:

    * `=` for all value types.
    * `>`, `<`, `>=`, `<=` for integer values.
    * `:`, meaning substring matching, for strings.

    The supported value types are:

    * string literals in quotes.
    * integer literals without quotes.
    * boolean literals `true` and `false` without quotes.

    The following field and operator combinations are supported:

    * name: `=`
    * parent: `=`, `:`
    * resource_name: `=`, `:`
    * state: `=`, `:`
    * category: `=`, `:`
    * external_uri: `=`, `:`
    * event_time: `=`, `>`, `<`, `>=`, `<=`
    * severity: `=`, `:`

      Usage: This should be milliseconds since epoch or an RFC3339 string.
      Examples:
        `event_time = "2019-06-10T16:07:18-07:00"`
        `event_time = 1560208038000`

    security_marks.marks: `=`, `:`
    source_properties: `=`, `:`, `>`, `<`, `>=`, `<=`

    For example, `source_properties.size = 100` is a valid filter string.

    Use a partial match on the empty string to filter based on a property
    existing: `source_properties.my_property : ""`

    Use a negated partial match on the empty string to filter based on a
    property not existing: `-source_properties.my_property : ""`
    """

    order_by: typing.Text = ...
    """Expression that defines what fields and order to use for sorting. The
    string value should follow SQL syntax: comma separated list of fields. For
    example: "name,resource_properties.a_property". The default sorting order
    is ascending. To specify descending order for a field, a suffix " desc"
    should be appended to the field name. For example: "name
    desc,source_properties.a_property". Redundant space characters in the
    syntax are insignificant. "name desc,source_properties.a_property" and "
    name     desc  ,   source_properties.a_property  " are equivalent.

    The following fields are supported:
    name
    parent
    state
    category
    resource_name
    event_time
    source_properties
    security_marks.marks
    """

    @property
    def read_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time used as a reference point when filtering findings. The filter is
        limited to findings existing at the supplied time and their values are
        those at that specific time. Absence of this field will default to the
        API's version of NOW.
        """
        pass
    @property
    def compare_duration(self) -> google.protobuf.duration_pb2.Duration:
        """When compare_duration is set, the ListFindingsResult's "state_change"
        attribute is updated to indicate whether the finding had its state changed,
        the finding's state remained unchanged, or if the finding was added in any
        state during the compare_duration period of time that precedes the
        read_time. This is the time between (read_time - compare_duration) and
        read_time.

        The state_change value is derived based on the presence and state of the
        finding at the two points in time. Intermediate state changes between the
        two times don't affect the result. For example, the results aren't affected
        if the finding is made inactive and then active again.

        Possible "state_change" values when compare_duration is specified:

        * "CHANGED":   indicates that the finding was present and matched the given
                         filter at the start of compare_duration, but changed its
                         state at read_time.
        * "UNCHANGED": indicates that the finding was present and matched the given
                         filter at the start of compare_duration and did not change
                         state at read_time.
        * "ADDED":     indicates that the finding did not match the given filter or
                         was not present at the start of compare_duration, but was
                         present at read_time.
        * "REMOVED":   indicates that the finding was present and matched the
                         filter at the start of compare_duration, but did not match
                         the filter at read_time.

        If compare_duration is not specified, then the only possible state_change
        is "UNUSED", which will be the state_change set for all findings present at
        read_time.
        """
        pass
    @property
    def field_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """A field mask to specify the Finding fields to be listed in the response.
        An empty field mask will list all fields.
        """
        pass
    page_token: typing.Text = ...
    """The value returned by the last `ListFindingsResponse`; indicates
    that this is a continuation of a prior `ListFindings` call, and
    that the system should return the next page of data.
    """

    page_size: builtins.int = ...
    """The maximum number of results to return in a single response. Default is
    10, minimum is 1, maximum is 1000.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        order_by : typing.Text = ...,
        read_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        compare_duration : typing.Optional[google.protobuf.duration_pb2.Duration] = ...,
        field_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["compare_duration",b"compare_duration","field_mask",b"field_mask","read_time",b"read_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["compare_duration",b"compare_duration","field_mask",b"field_mask","filter",b"filter","order_by",b"order_by","page_size",b"page_size","page_token",b"page_token","parent",b"parent","read_time",b"read_time"]) -> None: ...
global___ListFindingsRequest = ListFindingsRequest

class ListFindingsResponse(google.protobuf.message.Message):
    """Response message for listing findings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ListFindingsResult(google.protobuf.message.Message):
        """Result containing the Finding and its StateChange."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _StateChange:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _StateChangeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_StateChange.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            UNUSED: ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...  # 0
            """State change is unused, this is the canonical default for this enum."""

            CHANGED: ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...  # 1
            """The finding has changed state in some way between the points in time
            and existed at both points.
            """

            UNCHANGED: ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...  # 2
            """The finding has not changed state between the points in time and
            existed at both points.
            """

            ADDED: ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...  # 3
            """The finding was created between the points in time."""

            REMOVED: ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...  # 4
            """The finding at timestamp does not match the filter specified, but it
            did at timestamp - compare_duration.
            """

        class StateChange(_StateChange, metaclass=_StateChangeEnumTypeWrapper):
            """The change in state of the finding.

            When querying across two points in time this describes
            the change in the finding between the two points: CHANGED, UNCHANGED,
            ADDED, or REMOVED. Findings can not be deleted, so REMOVED implies that
            the finding at timestamp does not match the filter specified, but it did
            at timestamp - compare_duration. If there was no compare_duration
            supplied in the request the state change will be: UNUSED
            """
            pass

        UNUSED: ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...  # 0
        """State change is unused, this is the canonical default for this enum."""

        CHANGED: ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...  # 1
        """The finding has changed state in some way between the points in time
        and existed at both points.
        """

        UNCHANGED: ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...  # 2
        """The finding has not changed state between the points in time and
        existed at both points.
        """

        ADDED: ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...  # 3
        """The finding was created between the points in time."""

        REMOVED: ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...  # 4
        """The finding at timestamp does not match the filter specified, but it
        did at timestamp - compare_duration.
        """


        class Resource(google.protobuf.message.Message):
            """Information related to the Google Cloud resource that is
            associated with this finding.
            """
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            NAME_FIELD_NUMBER: builtins.int
            PROJECT_NAME_FIELD_NUMBER: builtins.int
            PROJECT_DISPLAY_NAME_FIELD_NUMBER: builtins.int
            PARENT_NAME_FIELD_NUMBER: builtins.int
            PARENT_DISPLAY_NAME_FIELD_NUMBER: builtins.int
            FOLDERS_FIELD_NUMBER: builtins.int
            name: typing.Text = ...
            """The full resource name of the resource. See:
            https://cloud.google.com/apis/design/resource_names#full_resource_name
            """

            project_name: typing.Text = ...
            """The full resource name of project that the resource belongs to."""

            project_display_name: typing.Text = ...
            """The human readable name of project that the resource belongs to."""

            parent_name: typing.Text = ...
            """The full resource name of resource's parent."""

            parent_display_name: typing.Text = ...
            """The human readable name of resource's parent."""

            @property
            def folders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.securitycenter.v1p1beta1.folder_pb2.Folder]:
                """Contains a Folder message for each folder in the assets ancestry.
                The first folder is the deepest nested folder, and the last folder is
                the folder directly under the Organization.
                """
                pass
            def __init__(self,
                *,
                name : typing.Text = ...,
                project_name : typing.Text = ...,
                project_display_name : typing.Text = ...,
                parent_name : typing.Text = ...,
                parent_display_name : typing.Text = ...,
                folders : typing.Optional[typing.Iterable[google.cloud.securitycenter.v1p1beta1.folder_pb2.Folder]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["folders",b"folders","name",b"name","parent_display_name",b"parent_display_name","parent_name",b"parent_name","project_display_name",b"project_display_name","project_name",b"project_name"]) -> None: ...

        FINDING_FIELD_NUMBER: builtins.int
        STATE_CHANGE_FIELD_NUMBER: builtins.int
        RESOURCE_FIELD_NUMBER: builtins.int
        @property
        def finding(self) -> google.cloud.securitycenter.v1p1beta1.finding_pb2.Finding:
            """Finding matching the search request."""
            pass
        state_change: global___ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...
        """State change of the finding between the points in time."""

        @property
        def resource(self) -> global___ListFindingsResponse.ListFindingsResult.Resource:
            """Output only. Resource that is associated with this finding."""
            pass
        def __init__(self,
            *,
            finding : typing.Optional[google.cloud.securitycenter.v1p1beta1.finding_pb2.Finding] = ...,
            state_change : global___ListFindingsResponse.ListFindingsResult.StateChange.ValueType = ...,
            resource : typing.Optional[global___ListFindingsResponse.ListFindingsResult.Resource] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["finding",b"finding","resource",b"resource"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["finding",b"finding","resource",b"resource","state_change",b"state_change"]) -> None: ...

    LIST_FINDINGS_RESULTS_FIELD_NUMBER: builtins.int
    READ_TIME_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    TOTAL_SIZE_FIELD_NUMBER: builtins.int
    @property
    def list_findings_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListFindingsResponse.ListFindingsResult]:
        """Findings matching the list request."""
        pass
    @property
    def read_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Time used for executing the list request."""
        pass
    next_page_token: typing.Text = ...
    """Token to retrieve the next page of results, or empty if there are no more
    results.
    """

    total_size: builtins.int = ...
    """The total number of findings matching the query."""

    def __init__(self,
        *,
        list_findings_results : typing.Optional[typing.Iterable[global___ListFindingsResponse.ListFindingsResult]] = ...,
        read_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        next_page_token : typing.Text = ...,
        total_size : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["read_time",b"read_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["list_findings_results",b"list_findings_results","next_page_token",b"next_page_token","read_time",b"read_time","total_size",b"total_size"]) -> None: ...
global___ListFindingsResponse = ListFindingsResponse

class SetFindingStateRequest(google.protobuf.message.Message):
    """Request message for updating a finding's state."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The relative resource name of the finding. See:
    https://cloud.google.com/apis/design/resource_names#relative_resource_name
    Example:
    "organizations/{organization_id}/sources/{source_id}/finding/{finding_id}".
    """

    state: google.cloud.securitycenter.v1p1beta1.finding_pb2.Finding.State.ValueType = ...
    """Required. The desired State of the finding."""

    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Required. The time at which the updated state takes effect."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        state : google.cloud.securitycenter.v1p1beta1.finding_pb2.Finding.State.ValueType = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","start_time",b"start_time","state",b"state"]) -> None: ...
global___SetFindingStateRequest = SetFindingStateRequest

class RunAssetDiscoveryRequest(google.protobuf.message.Message):
    """Request message for running asset discovery for an organization."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. Name of the organization to run asset discovery for. Its format is
    "organizations/[organization_id]".
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["parent",b"parent"]) -> None: ...
global___RunAssetDiscoveryRequest = RunAssetDiscoveryRequest

class UpdateFindingRequest(google.protobuf.message.Message):
    """Request message for updating or creating a finding."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FINDING_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def finding(self) -> google.cloud.securitycenter.v1p1beta1.finding_pb2.Finding:
        """Required. The finding resource to update or create if it does not already exist.
        parent, security_marks, and update_time will be ignored.

        In the case of creation, the finding id portion of the name must be
        alphanumeric and less than or equal to 32 characters and greater than 0
        characters in length.
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The FieldMask to use when updating the finding resource. This field should
        not be specified when creating a finding.

        When updating a finding, an empty mask is treated as updating all mutable
        fields and replacing source_properties.  Individual source_properties can
        be added/updated by using "source_properties.<property key>" in the field
        mask.
        """
        pass
    def __init__(self,
        *,
        finding : typing.Optional[google.cloud.securitycenter.v1p1beta1.finding_pb2.Finding] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["finding",b"finding","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["finding",b"finding","update_mask",b"update_mask"]) -> None: ...
global___UpdateFindingRequest = UpdateFindingRequest

class UpdateNotificationConfigRequest(google.protobuf.message.Message):
    """Request message for updating a notification config."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NOTIFICATION_CONFIG_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def notification_config(self) -> google.cloud.securitycenter.v1p1beta1.notification_config_pb2.NotificationConfig:
        """Required. The notification config to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The FieldMask to use when updating the notification config.

        If empty all mutable fields will be updated.
        """
        pass
    def __init__(self,
        *,
        notification_config : typing.Optional[google.cloud.securitycenter.v1p1beta1.notification_config_pb2.NotificationConfig] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["notification_config",b"notification_config","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["notification_config",b"notification_config","update_mask",b"update_mask"]) -> None: ...
global___UpdateNotificationConfigRequest = UpdateNotificationConfigRequest

class UpdateOrganizationSettingsRequest(google.protobuf.message.Message):
    """Request message for updating an organization's settings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ORGANIZATION_SETTINGS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def organization_settings(self) -> google.cloud.securitycenter.v1p1beta1.organization_settings_pb2.OrganizationSettings:
        """Required. The organization settings resource to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The FieldMask to use when updating the settings resource.

        If empty all mutable fields will be updated.
        """
        pass
    def __init__(self,
        *,
        organization_settings : typing.Optional[google.cloud.securitycenter.v1p1beta1.organization_settings_pb2.OrganizationSettings] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["organization_settings",b"organization_settings","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["organization_settings",b"organization_settings","update_mask",b"update_mask"]) -> None: ...
global___UpdateOrganizationSettingsRequest = UpdateOrganizationSettingsRequest

class UpdateSourceRequest(google.protobuf.message.Message):
    """Request message for updating a source."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOURCE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def source(self) -> google.cloud.securitycenter.v1p1beta1.source_pb2.Source:
        """Required. The source resource to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The FieldMask to use when updating the source resource.

        If empty all mutable fields will be updated.
        """
        pass
    def __init__(self,
        *,
        source : typing.Optional[google.cloud.securitycenter.v1p1beta1.source_pb2.Source] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["source",b"source","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["source",b"source","update_mask",b"update_mask"]) -> None: ...
global___UpdateSourceRequest = UpdateSourceRequest

class UpdateSecurityMarksRequest(google.protobuf.message.Message):
    """Request message for updating a SecurityMarks resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SECURITY_MARKS_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    @property
    def security_marks(self) -> google.cloud.securitycenter.v1p1beta1.security_marks_pb2.SecurityMarks:
        """Required. The security marks resource to update."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """The FieldMask to use when updating the security marks resource.

        The field mask must not contain duplicate fields.
        If empty or set to "marks", all marks will be replaced.  Individual
        marks can be updated using "marks.<mark_key>".
        """
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the updated SecurityMarks take effect.
        If not set uses current server time.  Updates will be applied to the
        SecurityMarks that are active immediately preceding this time.
        """
        pass
    def __init__(self,
        *,
        security_marks : typing.Optional[google.cloud.securitycenter.v1p1beta1.security_marks_pb2.SecurityMarks] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["security_marks",b"security_marks","start_time",b"start_time","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["security_marks",b"security_marks","start_time",b"start_time","update_mask",b"update_mask"]) -> None: ...
global___UpdateSecurityMarksRequest = UpdateSecurityMarksRequest
