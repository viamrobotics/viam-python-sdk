"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.automl.v1.image_pb2
import google.cloud.automl.v1.text_pb2
import google.cloud.automl.v1.translation_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Model(google.protobuf.message.Message):
    """API proto representing a trained machine learning model."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DeploymentState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DeploymentStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DeploymentState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DEPLOYMENT_STATE_UNSPECIFIED: Model.DeploymentState.ValueType = ...  # 0
        """Should not be used, an un-set enum has this value by default."""

        DEPLOYED: Model.DeploymentState.ValueType = ...  # 1
        """Model is deployed."""

        UNDEPLOYED: Model.DeploymentState.ValueType = ...  # 2
        """Model is not deployed."""

    class DeploymentState(_DeploymentState, metaclass=_DeploymentStateEnumTypeWrapper):
        """Deployment state of the model."""
        pass

    DEPLOYMENT_STATE_UNSPECIFIED: Model.DeploymentState.ValueType = ...  # 0
    """Should not be used, an un-set enum has this value by default."""

    DEPLOYED: Model.DeploymentState.ValueType = ...  # 1
    """Model is deployed."""

    UNDEPLOYED: Model.DeploymentState.ValueType = ...  # 2
    """Model is not deployed."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TRANSLATION_MODEL_METADATA_FIELD_NUMBER: builtins.int
    IMAGE_CLASSIFICATION_MODEL_METADATA_FIELD_NUMBER: builtins.int
    TEXT_CLASSIFICATION_MODEL_METADATA_FIELD_NUMBER: builtins.int
    IMAGE_OBJECT_DETECTION_MODEL_METADATA_FIELD_NUMBER: builtins.int
    TEXT_EXTRACTION_MODEL_METADATA_FIELD_NUMBER: builtins.int
    TEXT_SENTIMENT_MODEL_METADATA_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DATASET_ID_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    DEPLOYMENT_STATE_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    @property
    def translation_model_metadata(self) -> google.cloud.automl.v1.translation_pb2.TranslationModelMetadata:
        """Metadata for translation models."""
        pass
    @property
    def image_classification_model_metadata(self) -> google.cloud.automl.v1.image_pb2.ImageClassificationModelMetadata:
        """Metadata for image classification models."""
        pass
    @property
    def text_classification_model_metadata(self) -> google.cloud.automl.v1.text_pb2.TextClassificationModelMetadata:
        """Metadata for text classification models."""
        pass
    @property
    def image_object_detection_model_metadata(self) -> google.cloud.automl.v1.image_pb2.ImageObjectDetectionModelMetadata:
        """Metadata for image object detection models."""
        pass
    @property
    def text_extraction_model_metadata(self) -> google.cloud.automl.v1.text_pb2.TextExtractionModelMetadata:
        """Metadata for text extraction models."""
        pass
    @property
    def text_sentiment_model_metadata(self) -> google.cloud.automl.v1.text_pb2.TextSentimentModelMetadata:
        """Metadata for text sentiment models."""
        pass
    name: typing.Text = ...
    """Output only. Resource name of the model.
    Format: `projects/{project_id}/locations/{location_id}/models/{model_id}`
    """

    display_name: typing.Text = ...
    """Required. The name of the model to show in the interface. The name can be
    up to 32 characters long and can consist only of ASCII Latin letters A-Z
    and a-z, underscores
    (_), and ASCII digits 0-9. It must start with a letter.
    """

    dataset_id: typing.Text = ...
    """Required. The resource ID of the dataset used to create the model. The dataset must
    come from the same ancestor project and location.
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when the model training finished  and can be used for prediction."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Timestamp when this model was last updated."""
        pass
    deployment_state: global___Model.DeploymentState.ValueType = ...
    """Output only. Deployment state of the model. A model can only serve
    prediction requests after it gets deployed.
    """

    etag: typing.Text = ...
    """Used to perform a consistent read-modify-write updates. If not set, a blind
    "overwrite" update happens.
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Optional. The labels with user-defined metadata to organize your model.

        Label keys and values can be no longer than 64 characters
        (Unicode codepoints), can only contain lowercase letters, numeric
        characters, underscores and dashes. International characters are allowed.
        Label values are optional. Label keys must start with a letter.

        See https://goo.gl/xmQnxf for more information on and examples of labels.
        """
        pass
    def __init__(self,
        *,
        translation_model_metadata : typing.Optional[google.cloud.automl.v1.translation_pb2.TranslationModelMetadata] = ...,
        image_classification_model_metadata : typing.Optional[google.cloud.automl.v1.image_pb2.ImageClassificationModelMetadata] = ...,
        text_classification_model_metadata : typing.Optional[google.cloud.automl.v1.text_pb2.TextClassificationModelMetadata] = ...,
        image_object_detection_model_metadata : typing.Optional[google.cloud.automl.v1.image_pb2.ImageObjectDetectionModelMetadata] = ...,
        text_extraction_model_metadata : typing.Optional[google.cloud.automl.v1.text_pb2.TextExtractionModelMetadata] = ...,
        text_sentiment_model_metadata : typing.Optional[google.cloud.automl.v1.text_pb2.TextSentimentModelMetadata] = ...,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        dataset_id : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        deployment_state : global___Model.DeploymentState.ValueType = ...,
        etag : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","image_classification_model_metadata",b"image_classification_model_metadata","image_object_detection_model_metadata",b"image_object_detection_model_metadata","model_metadata",b"model_metadata","text_classification_model_metadata",b"text_classification_model_metadata","text_extraction_model_metadata",b"text_extraction_model_metadata","text_sentiment_model_metadata",b"text_sentiment_model_metadata","translation_model_metadata",b"translation_model_metadata","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","dataset_id",b"dataset_id","deployment_state",b"deployment_state","display_name",b"display_name","etag",b"etag","image_classification_model_metadata",b"image_classification_model_metadata","image_object_detection_model_metadata",b"image_object_detection_model_metadata","labels",b"labels","model_metadata",b"model_metadata","name",b"name","text_classification_model_metadata",b"text_classification_model_metadata","text_extraction_model_metadata",b"text_extraction_model_metadata","text_sentiment_model_metadata",b"text_sentiment_model_metadata","translation_model_metadata",b"translation_model_metadata","update_time",b"update_time"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["model_metadata",b"model_metadata"]) -> typing.Optional[typing_extensions.Literal["translation_model_metadata","image_classification_model_metadata","text_classification_model_metadata","image_object_detection_model_metadata","text_extraction_model_metadata","text_sentiment_model_metadata"]]: ...
global___Model = Model
