# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/policytroubleshooter/v1/checker.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.cloud.policytroubleshooter.v1.explanations_pb2
import google.api.annotations_pb2
import google.api.client_pb2
import google.cloud.policytroubleshooter.v1.checker_pb2


class IamCheckerBase(abc.ABC):

    @abc.abstractmethod
    async def TroubleshootIamPolicy(self, stream: 'grpclib.server.Stream[google.cloud.policytroubleshooter.v1.checker_pb2.TroubleshootIamPolicyRequest, google.cloud.policytroubleshooter.v1.checker_pb2.TroubleshootIamPolicyResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.policytroubleshooter.v1.IamChecker/TroubleshootIamPolicy': grpclib.const.Handler(
                self.TroubleshootIamPolicy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.policytroubleshooter.v1.checker_pb2.TroubleshootIamPolicyRequest,
                google.cloud.policytroubleshooter.v1.checker_pb2.TroubleshootIamPolicyResponse,
            ),
        }


class IamCheckerStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.TroubleshootIamPolicy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.policytroubleshooter.v1.IamChecker/TroubleshootIamPolicy',
            google.cloud.policytroubleshooter.v1.checker_pb2.TroubleshootIamPolicyRequest,
            google.cloud.policytroubleshooter.v1.checker_pb2.TroubleshootIamPolicyResponse,
        )
