"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class IdMatcher(google.protobuf.message.Message):
    """Matcher for Features of an EntityType by Feature ID."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IDS_FIELD_NUMBER: builtins.int
    @property
    def ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. The following are accepted as `ids`:

         * A single-element list containing only `*`, which selects all Features
         in the target EntityType, or
         * A list containing only Feature IDs, which selects only Features with
         those IDs in the target EntityType.
        """
        pass
    def __init__(self,
        *,
        ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ids",b"ids"]) -> None: ...
global___IdMatcher = IdMatcher

class FeatureSelector(google.protobuf.message.Message):
    """Selector for Features of an EntityType."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_MATCHER_FIELD_NUMBER: builtins.int
    @property
    def id_matcher(self) -> global___IdMatcher:
        """Required. Matches Features based on ID."""
        pass
    def __init__(self,
        *,
        id_matcher : typing.Optional[global___IdMatcher] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["id_matcher",b"id_matcher"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id_matcher",b"id_matcher"]) -> None: ...
global___FeatureSelector = FeatureSelector
