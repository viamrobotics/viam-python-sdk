# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/cloud/aiplatform/v1beta1/vizier_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.cloud.aiplatform.v1beta1.operation_pb2
import google.cloud.aiplatform.v1beta1.study_pb2
import google.longrunning.operations_pb2
import google.protobuf.empty_pb2
import google.protobuf.timestamp_pb2
import google.cloud.aiplatform.v1beta1.vizier_service_pb2


class VizierServiceBase(abc.ABC):

    @abc.abstractmethod
    async def CreateStudy(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.CreateStudyRequest, google.cloud.aiplatform.v1beta1.study_pb2.Study]') -> None:
        pass

    @abc.abstractmethod
    async def GetStudy(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.GetStudyRequest, google.cloud.aiplatform.v1beta1.study_pb2.Study]') -> None:
        pass

    @abc.abstractmethod
    async def ListStudies(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListStudiesRequest, google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListStudiesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteStudy(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.DeleteStudyRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def LookupStudy(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.LookupStudyRequest, google.cloud.aiplatform.v1beta1.study_pb2.Study]') -> None:
        pass

    @abc.abstractmethod
    async def SuggestTrials(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.SuggestTrialsRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def CreateTrial(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.CreateTrialRequest, google.cloud.aiplatform.v1beta1.study_pb2.Trial]') -> None:
        pass

    @abc.abstractmethod
    async def GetTrial(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.GetTrialRequest, google.cloud.aiplatform.v1beta1.study_pb2.Trial]') -> None:
        pass

    @abc.abstractmethod
    async def ListTrials(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListTrialsRequest, google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListTrialsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def AddTrialMeasurement(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.AddTrialMeasurementRequest, google.cloud.aiplatform.v1beta1.study_pb2.Trial]') -> None:
        pass

    @abc.abstractmethod
    async def CompleteTrial(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.CompleteTrialRequest, google.cloud.aiplatform.v1beta1.study_pb2.Trial]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteTrial(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.DeleteTrialRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def CheckTrialEarlyStoppingState(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.CheckTrialEarlyStoppingStateRequest, google.longrunning.operations_pb2.Operation]') -> None:
        pass

    @abc.abstractmethod
    async def StopTrial(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.StopTrialRequest, google.cloud.aiplatform.v1beta1.study_pb2.Trial]') -> None:
        pass

    @abc.abstractmethod
    async def ListOptimalTrials(self, stream: 'grpclib.server.Stream[google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListOptimalTrialsRequest, google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListOptimalTrialsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.cloud.aiplatform.v1beta1.VizierService/CreateStudy': grpclib.const.Handler(
                self.CreateStudy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.CreateStudyRequest,
                google.cloud.aiplatform.v1beta1.study_pb2.Study,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/GetStudy': grpclib.const.Handler(
                self.GetStudy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.GetStudyRequest,
                google.cloud.aiplatform.v1beta1.study_pb2.Study,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/ListStudies': grpclib.const.Handler(
                self.ListStudies,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListStudiesRequest,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListStudiesResponse,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/DeleteStudy': grpclib.const.Handler(
                self.DeleteStudy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.DeleteStudyRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/LookupStudy': grpclib.const.Handler(
                self.LookupStudy,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.LookupStudyRequest,
                google.cloud.aiplatform.v1beta1.study_pb2.Study,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/SuggestTrials': grpclib.const.Handler(
                self.SuggestTrials,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.SuggestTrialsRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/CreateTrial': grpclib.const.Handler(
                self.CreateTrial,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.CreateTrialRequest,
                google.cloud.aiplatform.v1beta1.study_pb2.Trial,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/GetTrial': grpclib.const.Handler(
                self.GetTrial,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.GetTrialRequest,
                google.cloud.aiplatform.v1beta1.study_pb2.Trial,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/ListTrials': grpclib.const.Handler(
                self.ListTrials,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListTrialsRequest,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListTrialsResponse,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/AddTrialMeasurement': grpclib.const.Handler(
                self.AddTrialMeasurement,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.AddTrialMeasurementRequest,
                google.cloud.aiplatform.v1beta1.study_pb2.Trial,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/CompleteTrial': grpclib.const.Handler(
                self.CompleteTrial,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.CompleteTrialRequest,
                google.cloud.aiplatform.v1beta1.study_pb2.Trial,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/DeleteTrial': grpclib.const.Handler(
                self.DeleteTrial,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.DeleteTrialRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/CheckTrialEarlyStoppingState': grpclib.const.Handler(
                self.CheckTrialEarlyStoppingState,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.CheckTrialEarlyStoppingStateRequest,
                google.longrunning.operations_pb2.Operation,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/StopTrial': grpclib.const.Handler(
                self.StopTrial,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.StopTrialRequest,
                google.cloud.aiplatform.v1beta1.study_pb2.Trial,
            ),
            '/google.cloud.aiplatform.v1beta1.VizierService/ListOptimalTrials': grpclib.const.Handler(
                self.ListOptimalTrials,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListOptimalTrialsRequest,
                google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListOptimalTrialsResponse,
            ),
        }


class VizierServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateStudy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/CreateStudy',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.CreateStudyRequest,
            google.cloud.aiplatform.v1beta1.study_pb2.Study,
        )
        self.GetStudy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/GetStudy',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.GetStudyRequest,
            google.cloud.aiplatform.v1beta1.study_pb2.Study,
        )
        self.ListStudies = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/ListStudies',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListStudiesRequest,
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListStudiesResponse,
        )
        self.DeleteStudy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/DeleteStudy',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.DeleteStudyRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.LookupStudy = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/LookupStudy',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.LookupStudyRequest,
            google.cloud.aiplatform.v1beta1.study_pb2.Study,
        )
        self.SuggestTrials = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/SuggestTrials',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.SuggestTrialsRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.CreateTrial = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/CreateTrial',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.CreateTrialRequest,
            google.cloud.aiplatform.v1beta1.study_pb2.Trial,
        )
        self.GetTrial = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/GetTrial',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.GetTrialRequest,
            google.cloud.aiplatform.v1beta1.study_pb2.Trial,
        )
        self.ListTrials = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/ListTrials',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListTrialsRequest,
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListTrialsResponse,
        )
        self.AddTrialMeasurement = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/AddTrialMeasurement',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.AddTrialMeasurementRequest,
            google.cloud.aiplatform.v1beta1.study_pb2.Trial,
        )
        self.CompleteTrial = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/CompleteTrial',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.CompleteTrialRequest,
            google.cloud.aiplatform.v1beta1.study_pb2.Trial,
        )
        self.DeleteTrial = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/DeleteTrial',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.DeleteTrialRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.CheckTrialEarlyStoppingState = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/CheckTrialEarlyStoppingState',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.CheckTrialEarlyStoppingStateRequest,
            google.longrunning.operations_pb2.Operation,
        )
        self.StopTrial = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/StopTrial',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.StopTrialRequest,
            google.cloud.aiplatform.v1beta1.study_pb2.Trial,
        )
        self.ListOptimalTrials = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.cloud.aiplatform.v1beta1.VizierService/ListOptimalTrials',
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListOptimalTrialsRequest,
            google.cloud.aiplatform.v1beta1.vizier_service_pb2.ListOptimalTrialsResponse,
        )
