"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.websecurityscanner.v1beta.finding_addon_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Finding(google.protobuf.message.Message):
    """A Finding resource represents a vulnerability instance identified during a
    ScanRun.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    FINDING_TYPE_FIELD_NUMBER: builtins.int
    HTTP_METHOD_FIELD_NUMBER: builtins.int
    FUZZED_URL_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    REPRODUCTION_URL_FIELD_NUMBER: builtins.int
    FRAME_URL_FIELD_NUMBER: builtins.int
    FINAL_URL_FIELD_NUMBER: builtins.int
    TRACKING_ID_FIELD_NUMBER: builtins.int
    FORM_FIELD_NUMBER: builtins.int
    OUTDATED_LIBRARY_FIELD_NUMBER: builtins.int
    VIOLATING_RESOURCE_FIELD_NUMBER: builtins.int
    VULNERABLE_HEADERS_FIELD_NUMBER: builtins.int
    VULNERABLE_PARAMETERS_FIELD_NUMBER: builtins.int
    XSS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The resource name of the Finding. The name follows the format of
    'projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}'.
    The finding IDs are generated by the system.
    """

    finding_type: typing.Text = ...
    """The type of the Finding.
    Detailed and up-to-date information on findings can be found here:
    https://cloud.google.com/security-scanner/docs/scan-result-details
    """

    http_method: typing.Text = ...
    """The http method of the request that triggered the vulnerability, in
    uppercase.
    """

    fuzzed_url: typing.Text = ...
    """The URL produced by the server-side fuzzer and used in the request that
    triggered the vulnerability.
    """

    body: typing.Text = ...
    """The body of the request that triggered the vulnerability."""

    description: typing.Text = ...
    """The description of the vulnerability."""

    reproduction_url: typing.Text = ...
    """The URL containing human-readable payload that user can leverage to
    reproduce the vulnerability.
    """

    frame_url: typing.Text = ...
    """If the vulnerability was originated from nested IFrame, the immediate
    parent IFrame is reported.
    """

    final_url: typing.Text = ...
    """The URL where the browser lands when the vulnerability is detected."""

    tracking_id: typing.Text = ...
    """The tracking ID uniquely identifies a vulnerability instance across
    multiple ScanRuns.
    """

    @property
    def form(self) -> google.cloud.websecurityscanner.v1beta.finding_addon_pb2.Form:
        """An addon containing information reported for a vulnerability with an HTML
        form, if any.
        """
        pass
    @property
    def outdated_library(self) -> google.cloud.websecurityscanner.v1beta.finding_addon_pb2.OutdatedLibrary:
        """An addon containing information about outdated libraries."""
        pass
    @property
    def violating_resource(self) -> google.cloud.websecurityscanner.v1beta.finding_addon_pb2.ViolatingResource:
        """An addon containing detailed information regarding any resource causing the
        vulnerability such as JavaScript sources, image, audio files, etc.
        """
        pass
    @property
    def vulnerable_headers(self) -> google.cloud.websecurityscanner.v1beta.finding_addon_pb2.VulnerableHeaders:
        """An addon containing information about vulnerable or missing HTTP headers."""
        pass
    @property
    def vulnerable_parameters(self) -> google.cloud.websecurityscanner.v1beta.finding_addon_pb2.VulnerableParameters:
        """An addon containing information about request parameters which were found
        to be vulnerable.
        """
        pass
    @property
    def xss(self) -> google.cloud.websecurityscanner.v1beta.finding_addon_pb2.Xss:
        """An addon containing information reported for an XSS, if any."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        finding_type : typing.Text = ...,
        http_method : typing.Text = ...,
        fuzzed_url : typing.Text = ...,
        body : typing.Text = ...,
        description : typing.Text = ...,
        reproduction_url : typing.Text = ...,
        frame_url : typing.Text = ...,
        final_url : typing.Text = ...,
        tracking_id : typing.Text = ...,
        form : typing.Optional[google.cloud.websecurityscanner.v1beta.finding_addon_pb2.Form] = ...,
        outdated_library : typing.Optional[google.cloud.websecurityscanner.v1beta.finding_addon_pb2.OutdatedLibrary] = ...,
        violating_resource : typing.Optional[google.cloud.websecurityscanner.v1beta.finding_addon_pb2.ViolatingResource] = ...,
        vulnerable_headers : typing.Optional[google.cloud.websecurityscanner.v1beta.finding_addon_pb2.VulnerableHeaders] = ...,
        vulnerable_parameters : typing.Optional[google.cloud.websecurityscanner.v1beta.finding_addon_pb2.VulnerableParameters] = ...,
        xss : typing.Optional[google.cloud.websecurityscanner.v1beta.finding_addon_pb2.Xss] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["form",b"form","outdated_library",b"outdated_library","violating_resource",b"violating_resource","vulnerable_headers",b"vulnerable_headers","vulnerable_parameters",b"vulnerable_parameters","xss",b"xss"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["body",b"body","description",b"description","final_url",b"final_url","finding_type",b"finding_type","form",b"form","frame_url",b"frame_url","fuzzed_url",b"fuzzed_url","http_method",b"http_method","name",b"name","outdated_library",b"outdated_library","reproduction_url",b"reproduction_url","tracking_id",b"tracking_id","violating_resource",b"violating_resource","vulnerable_headers",b"vulnerable_headers","vulnerable_parameters",b"vulnerable_parameters","xss",b"xss"]) -> None: ...
global___Finding = Finding
