"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.notebooks.v1.execution_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Schedule(google.protobuf.message.Message):
    """The definition of a schedule."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Schedule.State.ValueType = ...  # 0
        """Unspecified state."""

        ENABLED: Schedule.State.ValueType = ...  # 1
        """The job is executing normally."""

        PAUSED: Schedule.State.ValueType = ...  # 2
        """The job is paused by the user. It will not execute. A user can
        intentionally pause the job using
        [PauseJobRequest][].
        """

        DISABLED: Schedule.State.ValueType = ...  # 3
        """The job is disabled by the system due to error. The user
        cannot directly set a job to be disabled.
        """

        UPDATE_FAILED: Schedule.State.ValueType = ...  # 4
        """The job state resulting from a failed [CloudScheduler.UpdateJob][]
        operation. To recover a job from this state, retry
        [CloudScheduler.UpdateJob][] until a successful response is received.
        """

        INITIALIZING: Schedule.State.ValueType = ...  # 5
        """The schedule resource is being created."""

        DELETING: Schedule.State.ValueType = ...  # 6
        """The schedule resource is being deleted."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """State of the job."""
        pass

    STATE_UNSPECIFIED: Schedule.State.ValueType = ...  # 0
    """Unspecified state."""

    ENABLED: Schedule.State.ValueType = ...  # 1
    """The job is executing normally."""

    PAUSED: Schedule.State.ValueType = ...  # 2
    """The job is paused by the user. It will not execute. A user can
    intentionally pause the job using
    [PauseJobRequest][].
    """

    DISABLED: Schedule.State.ValueType = ...  # 3
    """The job is disabled by the system due to error. The user
    cannot directly set a job to be disabled.
    """

    UPDATE_FAILED: Schedule.State.ValueType = ...  # 4
    """The job state resulting from a failed [CloudScheduler.UpdateJob][]
    operation. To recover a job from this state, retry
    [CloudScheduler.UpdateJob][] until a successful response is received.
    """

    INITIALIZING: Schedule.State.ValueType = ...  # 5
    """The schedule resource is being created."""

    DELETING: Schedule.State.ValueType = ...  # 6
    """The schedule resource is being deleted."""


    NAME_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    CRON_SCHEDULE_FIELD_NUMBER: builtins.int
    TIME_ZONE_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    EXECUTION_TEMPLATE_FIELD_NUMBER: builtins.int
    RECENT_EXECUTIONS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The name of this schedule. Format:
    `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
    """

    display_name: typing.Text = ...
    """Output only. Display name used for UI purposes.
    Name can only contain alphanumeric characters, hyphens '-',
    and underscores '_'.
    """

    description: typing.Text = ...
    """A brief description of this environment."""

    state: global___Schedule.State.ValueType = ...
    cron_schedule: typing.Text = ...
    """Cron-tab formatted schedule by which the job will execute
    Format: minute, hour, day of month, month, day of week
    e.g. 0 0 * * WED = every Wednesday
    More examples: https://crontab.guru/examples.html
    """

    time_zone: typing.Text = ...
    """Timezone on which the cron_schedule.
    The value of this field must be a time zone name from the tz database.
    TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

    Note that some time zones include a provision for daylight savings time.
    The rules for daylight saving time are determined by the chosen tz.
    For UTC use the string "utc". If a time zone is not specified,
    the default will be in UTC (also known as GMT).
    """

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time the schedule was created."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time the schedule was last updated."""
        pass
    @property
    def execution_template(self) -> google.cloud.notebooks.v1.execution_pb2.ExecutionTemplate:
        """Notebook Execution Template corresponding to this schedule."""
        pass
    @property
    def recent_executions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.cloud.notebooks.v1.execution_pb2.Execution]:
        """Output only. The most recent execution names triggered from this schedule and their
        corresponding states.
        """
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        display_name : typing.Text = ...,
        description : typing.Text = ...,
        state : global___Schedule.State.ValueType = ...,
        cron_schedule : typing.Text = ...,
        time_zone : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        execution_template : typing.Optional[google.cloud.notebooks.v1.execution_pb2.ExecutionTemplate] = ...,
        recent_executions : typing.Optional[typing.Iterable[google.cloud.notebooks.v1.execution_pb2.Execution]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","execution_template",b"execution_template","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","cron_schedule",b"cron_schedule","description",b"description","display_name",b"display_name","execution_template",b"execution_template","name",b"name","recent_executions",b"recent_executions","state",b"state","time_zone",b"time_zone","update_time",b"update_time"]) -> None: ...
global___Schedule = Schedule
