"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.notebooks.v1.environment_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ReservationAffinity(google.protobuf.message.Message):
    """Reservation Affinity for consuming Zonal reservation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        TYPE_UNSPECIFIED: ReservationAffinity.Type.ValueType = ...  # 0
        """Default type."""

        NO_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 1
        """Do not consume from any allocated capacity."""

        ANY_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 2
        """Consume any reservation available."""

        SPECIFIC_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 3
        """Must consume from a specific reservation. Must specify key value fields
        for specifying the reservations.
        """

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Indicates whether to consume capacity from an reservation or not."""
        pass

    TYPE_UNSPECIFIED: ReservationAffinity.Type.ValueType = ...  # 0
    """Default type."""

    NO_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 1
    """Do not consume from any allocated capacity."""

    ANY_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 2
    """Consume any reservation available."""

    SPECIFIC_RESERVATION: ReservationAffinity.Type.ValueType = ...  # 3
    """Must consume from a specific reservation. Must specify key value fields
    for specifying the reservations.
    """


    CONSUME_RESERVATION_TYPE_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    consume_reservation_type: global___ReservationAffinity.Type.ValueType = ...
    """Optional. Type of reservation to consume"""

    key: typing.Text = ...
    """Optional. Corresponds to the label key of reservation resource."""

    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Corresponds to the label values of reservation resource."""
        pass
    def __init__(self,
        *,
        consume_reservation_type : global___ReservationAffinity.Type.ValueType = ...,
        key : typing.Text = ...,
        values : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["consume_reservation_type",b"consume_reservation_type","key",b"key","values",b"values"]) -> None: ...
global___ReservationAffinity = ReservationAffinity

class Instance(google.protobuf.message.Message):
    """The definition of a notebook instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AcceleratorType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AcceleratorTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AcceleratorType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ACCELERATOR_TYPE_UNSPECIFIED: Instance.AcceleratorType.ValueType = ...  # 0
        """Accelerator type is not specified."""

        NVIDIA_TESLA_K80: Instance.AcceleratorType.ValueType = ...  # 1
        """Accelerator type is Nvidia Tesla K80."""

        NVIDIA_TESLA_P100: Instance.AcceleratorType.ValueType = ...  # 2
        """Accelerator type is Nvidia Tesla P100."""

        NVIDIA_TESLA_V100: Instance.AcceleratorType.ValueType = ...  # 3
        """Accelerator type is Nvidia Tesla V100."""

        NVIDIA_TESLA_P4: Instance.AcceleratorType.ValueType = ...  # 4
        """Accelerator type is Nvidia Tesla P4 GPU."""

        NVIDIA_TESLA_T4: Instance.AcceleratorType.ValueType = ...  # 5
        """Accelerator type is Nvidia Tesla T4."""

        NVIDIA_TESLA_A100: Instance.AcceleratorType.ValueType = ...  # 11
        """Accelerator type is Nvidia Tesla A100."""

        NVIDIA_TESLA_T4_VWS: Instance.AcceleratorType.ValueType = ...  # 8
        """Accelerator type is NVIDIA Tesla T4 Virtual Workstations."""

        NVIDIA_TESLA_P100_VWS: Instance.AcceleratorType.ValueType = ...  # 9
        """Accelerator type is NVIDIA Tesla P100 Virtual Workstations."""

        NVIDIA_TESLA_P4_VWS: Instance.AcceleratorType.ValueType = ...  # 10
        """Accelerator type is Nvidia Tesla P4 GPU Virtual Workstations."""

        TPU_V2: Instance.AcceleratorType.ValueType = ...  # 6
        """(Coming soon) Accelerator type is TPU V2."""

        TPU_V3: Instance.AcceleratorType.ValueType = ...  # 7
        """(Coming soon) Accelerator type is TPU V3."""

    class AcceleratorType(_AcceleratorType, metaclass=_AcceleratorTypeEnumTypeWrapper):
        """Definition of the types of hardware accelerators that can be used on this
        instance.
        """
        pass

    ACCELERATOR_TYPE_UNSPECIFIED: Instance.AcceleratorType.ValueType = ...  # 0
    """Accelerator type is not specified."""

    NVIDIA_TESLA_K80: Instance.AcceleratorType.ValueType = ...  # 1
    """Accelerator type is Nvidia Tesla K80."""

    NVIDIA_TESLA_P100: Instance.AcceleratorType.ValueType = ...  # 2
    """Accelerator type is Nvidia Tesla P100."""

    NVIDIA_TESLA_V100: Instance.AcceleratorType.ValueType = ...  # 3
    """Accelerator type is Nvidia Tesla V100."""

    NVIDIA_TESLA_P4: Instance.AcceleratorType.ValueType = ...  # 4
    """Accelerator type is Nvidia Tesla P4 GPU."""

    NVIDIA_TESLA_T4: Instance.AcceleratorType.ValueType = ...  # 5
    """Accelerator type is Nvidia Tesla T4."""

    NVIDIA_TESLA_A100: Instance.AcceleratorType.ValueType = ...  # 11
    """Accelerator type is Nvidia Tesla A100."""

    NVIDIA_TESLA_T4_VWS: Instance.AcceleratorType.ValueType = ...  # 8
    """Accelerator type is NVIDIA Tesla T4 Virtual Workstations."""

    NVIDIA_TESLA_P100_VWS: Instance.AcceleratorType.ValueType = ...  # 9
    """Accelerator type is NVIDIA Tesla P100 Virtual Workstations."""

    NVIDIA_TESLA_P4_VWS: Instance.AcceleratorType.ValueType = ...  # 10
    """Accelerator type is Nvidia Tesla P4 GPU Virtual Workstations."""

    TPU_V2: Instance.AcceleratorType.ValueType = ...  # 6
    """(Coming soon) Accelerator type is TPU V2."""

    TPU_V3: Instance.AcceleratorType.ValueType = ...  # 7
    """(Coming soon) Accelerator type is TPU V3."""


    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Instance.State.ValueType = ...  # 0
        """State is not specified."""

        STARTING: Instance.State.ValueType = ...  # 1
        """The control logic is starting the instance."""

        PROVISIONING: Instance.State.ValueType = ...  # 2
        """The control logic is installing required frameworks and registering the
        instance with notebook proxy
        """

        ACTIVE: Instance.State.ValueType = ...  # 3
        """The instance is running."""

        STOPPING: Instance.State.ValueType = ...  # 4
        """The control logic is stopping the instance."""

        STOPPED: Instance.State.ValueType = ...  # 5
        """The instance is stopped."""

        DELETED: Instance.State.ValueType = ...  # 6
        """The instance is deleted."""

        UPGRADING: Instance.State.ValueType = ...  # 7
        """The instance is upgrading."""

        INITIALIZING: Instance.State.ValueType = ...  # 8
        """The instance is being created."""

        REGISTERING: Instance.State.ValueType = ...  # 9
        """The instance is getting registered."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The definition of the states of this instance."""
        pass

    STATE_UNSPECIFIED: Instance.State.ValueType = ...  # 0
    """State is not specified."""

    STARTING: Instance.State.ValueType = ...  # 1
    """The control logic is starting the instance."""

    PROVISIONING: Instance.State.ValueType = ...  # 2
    """The control logic is installing required frameworks and registering the
    instance with notebook proxy
    """

    ACTIVE: Instance.State.ValueType = ...  # 3
    """The instance is running."""

    STOPPING: Instance.State.ValueType = ...  # 4
    """The control logic is stopping the instance."""

    STOPPED: Instance.State.ValueType = ...  # 5
    """The instance is stopped."""

    DELETED: Instance.State.ValueType = ...  # 6
    """The instance is deleted."""

    UPGRADING: Instance.State.ValueType = ...  # 7
    """The instance is upgrading."""

    INITIALIZING: Instance.State.ValueType = ...  # 8
    """The instance is being created."""

    REGISTERING: Instance.State.ValueType = ...  # 9
    """The instance is getting registered."""


    class _DiskType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DiskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DiskType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DISK_TYPE_UNSPECIFIED: Instance.DiskType.ValueType = ...  # 0
        """Disk type not set."""

        PD_STANDARD: Instance.DiskType.ValueType = ...  # 1
        """Standard persistent disk type."""

        PD_SSD: Instance.DiskType.ValueType = ...  # 2
        """SSD persistent disk type."""

        PD_BALANCED: Instance.DiskType.ValueType = ...  # 3
        """Balanced persistent disk type."""

    class DiskType(_DiskType, metaclass=_DiskTypeEnumTypeWrapper):
        """Possible disk types for notebook instances."""
        pass

    DISK_TYPE_UNSPECIFIED: Instance.DiskType.ValueType = ...  # 0
    """Disk type not set."""

    PD_STANDARD: Instance.DiskType.ValueType = ...  # 1
    """Standard persistent disk type."""

    PD_SSD: Instance.DiskType.ValueType = ...  # 2
    """SSD persistent disk type."""

    PD_BALANCED: Instance.DiskType.ValueType = ...  # 3
    """Balanced persistent disk type."""


    class _DiskEncryption:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DiskEncryptionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DiskEncryption.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DISK_ENCRYPTION_UNSPECIFIED: Instance.DiskEncryption.ValueType = ...  # 0
        """Disk encryption is not specified."""

        GMEK: Instance.DiskEncryption.ValueType = ...  # 1
        """Use Google managed encryption keys to encrypt the boot disk."""

        CMEK: Instance.DiskEncryption.ValueType = ...  # 2
        """Use customer managed encryption keys to encrypt the boot disk."""

    class DiskEncryption(_DiskEncryption, metaclass=_DiskEncryptionEnumTypeWrapper):
        """Definition of the disk encryption options."""
        pass

    DISK_ENCRYPTION_UNSPECIFIED: Instance.DiskEncryption.ValueType = ...  # 0
    """Disk encryption is not specified."""

    GMEK: Instance.DiskEncryption.ValueType = ...  # 1
    """Use Google managed encryption keys to encrypt the boot disk."""

    CMEK: Instance.DiskEncryption.ValueType = ...  # 2
    """Use customer managed encryption keys to encrypt the boot disk."""


    class _NicType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NicTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NicType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED_NIC_TYPE: Instance.NicType.ValueType = ...  # 0
        """No type specified."""

        VIRTIO_NET: Instance.NicType.ValueType = ...  # 1
        """VIRTIO"""

        GVNIC: Instance.NicType.ValueType = ...  # 2
        """GVNIC"""

    class NicType(_NicType, metaclass=_NicTypeEnumTypeWrapper):
        """The type of vNIC driver.
        Default should be UNSPECIFIED_NIC_TYPE.
        """
        pass

    UNSPECIFIED_NIC_TYPE: Instance.NicType.ValueType = ...  # 0
    """No type specified."""

    VIRTIO_NET: Instance.NicType.ValueType = ...  # 1
    """VIRTIO"""

    GVNIC: Instance.NicType.ValueType = ...  # 2
    """GVNIC"""


    class AcceleratorConfig(google.protobuf.message.Message):
        """Definition of a hardware accelerator. Note that not all combinations
        of `type` and `core_count` are valid. Check [GPUs on
        Compute Engine](/compute/docs/gpus/#gpus-list) to find a valid
        combination. TPUs are not supported.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TYPE_FIELD_NUMBER: builtins.int
        CORE_COUNT_FIELD_NUMBER: builtins.int
        type: global___Instance.AcceleratorType.ValueType = ...
        """Type of this accelerator."""

        core_count: builtins.int = ...
        """Count of cores of this accelerator."""

        def __init__(self,
            *,
            type : global___Instance.AcceleratorType.ValueType = ...,
            core_count : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["core_count",b"core_count","type",b"type"]) -> None: ...

    class Disk(google.protobuf.message.Message):
        """An instance-attached disk resource."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class GuestOsFeature(google.protobuf.message.Message):
            """Guest OS features for boot disk."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            TYPE_FIELD_NUMBER: builtins.int
            type: typing.Text = ...
            """The ID of a supported feature. Read  Enabling guest operating system
            features to see a list of available options.
            Valid values:

            * FEATURE_TYPE_UNSPECIFIED
            * MULTI_IP_SUBNET
            * SECURE_BOOT
            * UEFI_COMPATIBLE
            * VIRTIO_SCSI_MULTIQUEUE
            * WINDOWS
            """

            def __init__(self,
                *,
                type : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["type",b"type"]) -> None: ...

        AUTO_DELETE_FIELD_NUMBER: builtins.int
        BOOT_FIELD_NUMBER: builtins.int
        DEVICE_NAME_FIELD_NUMBER: builtins.int
        DISK_SIZE_GB_FIELD_NUMBER: builtins.int
        GUEST_OS_FEATURES_FIELD_NUMBER: builtins.int
        INDEX_FIELD_NUMBER: builtins.int
        INTERFACE_FIELD_NUMBER: builtins.int
        KIND_FIELD_NUMBER: builtins.int
        LICENSES_FIELD_NUMBER: builtins.int
        MODE_FIELD_NUMBER: builtins.int
        SOURCE_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        auto_delete: builtins.bool = ...
        """Indicates whether the disk will be auto-deleted when the instance is
        deleted (but not when the disk is detached from the instance).
        """

        boot: builtins.bool = ...
        """Indicates that this is a boot disk. The virtual machine will use the
        first partition of the disk for its root filesystem.
        """

        device_name: typing.Text = ...
        """Indicates a unique device name of your choice that is reflected into the
        /dev/disk/by-id/google-* tree of a Linux operating system running within
        the instance. This name can be used to reference the device for mounting,
        resizing, and so on, from within the instance.

        If not specified, the server chooses a default device name to apply to
        this disk, in the form persistent-disk-x, where x is a number assigned by
        Google Compute Engine.This field is only applicable for persistent disks.
        """

        disk_size_gb: builtins.int = ...
        """Indicates the size of the disk in base-2 GB."""

        @property
        def guest_os_features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Instance.Disk.GuestOsFeature]:
            """Indicates a list of features to enable on the guest operating system.
            Applicable only for bootable images. Read  Enabling guest operating
            system features to see a list of available options.
            """
            pass
        index: builtins.int = ...
        """A zero-based index to this disk, where 0 is reserved for the
        boot disk. If you have many disks attached to an instance, each disk
        would have a unique index number.
        """

        interface: typing.Text = ...
        """Indicates the disk interface to use for attaching this disk, which is
        either SCSI or NVME. The default is SCSI. Persistent disks must always
        use SCSI and the request will fail if you attempt to attach a persistent
        disk in any other format than SCSI. Local SSDs can use either NVME or
        SCSI. For performance characteristics of SCSI over NVMe, see Local SSD
        performance.
        Valid values:

        * NVME
        * SCSI
        """

        kind: typing.Text = ...
        """Type of the resource. Always compute#attachedDisk for attached
        disks.
        """

        @property
        def licenses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """A list of publicly visible licenses. Reserved for Google's use.
            A License represents billing and aggregate usage data for public
            and marketplace images.
            """
            pass
        mode: typing.Text = ...
        """The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If
        not specified, the default is to attach the disk in READ_WRITE mode.
        Valid values:

        * READ_ONLY
        * READ_WRITE
        """

        source: typing.Text = ...
        """Indicates a valid partial or full URL to an existing Persistent Disk
        resource.
        """

        type: typing.Text = ...
        """Indicates the type of the disk, either SCRATCH or PERSISTENT.
        Valid values:

        * PERSISTENT
        * SCRATCH
        """

        def __init__(self,
            *,
            auto_delete : builtins.bool = ...,
            boot : builtins.bool = ...,
            device_name : typing.Text = ...,
            disk_size_gb : builtins.int = ...,
            guest_os_features : typing.Optional[typing.Iterable[global___Instance.Disk.GuestOsFeature]] = ...,
            index : builtins.int = ...,
            interface : typing.Text = ...,
            kind : typing.Text = ...,
            licenses : typing.Optional[typing.Iterable[typing.Text]] = ...,
            mode : typing.Text = ...,
            source : typing.Text = ...,
            type : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["auto_delete",b"auto_delete","boot",b"boot","device_name",b"device_name","disk_size_gb",b"disk_size_gb","guest_os_features",b"guest_os_features","index",b"index","interface",b"interface","kind",b"kind","licenses",b"licenses","mode",b"mode","source",b"source","type",b"type"]) -> None: ...

    class ShieldedInstanceConfig(google.protobuf.message.Message):
        """A set of Shielded Instance options.
        Check [Images using supported Shielded VM features]
        Not all combinations are valid.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        ENABLE_SECURE_BOOT_FIELD_NUMBER: builtins.int
        ENABLE_VTPM_FIELD_NUMBER: builtins.int
        ENABLE_INTEGRITY_MONITORING_FIELD_NUMBER: builtins.int
        enable_secure_boot: builtins.bool = ...
        """Defines whether the instance has Secure Boot enabled.

        Secure Boot helps ensure that the system only runs authentic software by
        verifying the digital signature of all boot components, and halting the
        boot process if signature verification fails. Disabled by default.
        """

        enable_vtpm: builtins.bool = ...
        """Defines whether the instance has the vTPM enabled. Enabled by default."""

        enable_integrity_monitoring: builtins.bool = ...
        """Defines whether the instance has integrity monitoring enabled.

        Enables monitoring and attestation of the boot integrity of the instance.
        The attestation is performed against the integrity policy baseline. This
        baseline is initially derived from the implicitly trusted boot image when
        the instance is created. Enabled by default.
        """

        def __init__(self,
            *,
            enable_secure_boot : builtins.bool = ...,
            enable_vtpm : builtins.bool = ...,
            enable_integrity_monitoring : builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["enable_integrity_monitoring",b"enable_integrity_monitoring","enable_secure_boot",b"enable_secure_boot","enable_vtpm",b"enable_vtpm"]) -> None: ...

    class UpgradeHistoryEntry(google.protobuf.message.Message):
        """The entry of VM image upgrade history."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _State:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            STATE_UNSPECIFIED: Instance.UpgradeHistoryEntry.State.ValueType = ...  # 0
            """State is not specified."""

            STARTED: Instance.UpgradeHistoryEntry.State.ValueType = ...  # 1
            """The instance upgrade is started."""

            SUCCEEDED: Instance.UpgradeHistoryEntry.State.ValueType = ...  # 2
            """The instance upgrade is succeeded."""

            FAILED: Instance.UpgradeHistoryEntry.State.ValueType = ...  # 3
            """The instance upgrade is failed."""

        class State(_State, metaclass=_StateEnumTypeWrapper):
            """The definition of the states of this upgrade history entry."""
            pass

        STATE_UNSPECIFIED: Instance.UpgradeHistoryEntry.State.ValueType = ...  # 0
        """State is not specified."""

        STARTED: Instance.UpgradeHistoryEntry.State.ValueType = ...  # 1
        """The instance upgrade is started."""

        SUCCEEDED: Instance.UpgradeHistoryEntry.State.ValueType = ...  # 2
        """The instance upgrade is succeeded."""

        FAILED: Instance.UpgradeHistoryEntry.State.ValueType = ...  # 3
        """The instance upgrade is failed."""


        class _Action:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Action.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            ACTION_UNSPECIFIED: Instance.UpgradeHistoryEntry.Action.ValueType = ...  # 0
            """Operation is not specified."""

            UPGRADE: Instance.UpgradeHistoryEntry.Action.ValueType = ...  # 1
            """Upgrade."""

            ROLLBACK: Instance.UpgradeHistoryEntry.Action.ValueType = ...  # 2
            """Rollback."""

        class Action(_Action, metaclass=_ActionEnumTypeWrapper):
            """The definition of operations of this upgrade history entry."""
            pass

        ACTION_UNSPECIFIED: Instance.UpgradeHistoryEntry.Action.ValueType = ...  # 0
        """Operation is not specified."""

        UPGRADE: Instance.UpgradeHistoryEntry.Action.ValueType = ...  # 1
        """Upgrade."""

        ROLLBACK: Instance.UpgradeHistoryEntry.Action.ValueType = ...  # 2
        """Rollback."""


        SNAPSHOT_FIELD_NUMBER: builtins.int
        VM_IMAGE_FIELD_NUMBER: builtins.int
        CONTAINER_IMAGE_FIELD_NUMBER: builtins.int
        FRAMEWORK_FIELD_NUMBER: builtins.int
        VERSION_FIELD_NUMBER: builtins.int
        STATE_FIELD_NUMBER: builtins.int
        CREATE_TIME_FIELD_NUMBER: builtins.int
        TARGET_IMAGE_FIELD_NUMBER: builtins.int
        ACTION_FIELD_NUMBER: builtins.int
        TARGET_VERSION_FIELD_NUMBER: builtins.int
        snapshot: typing.Text = ...
        """The snapshot of the boot disk of this notebook instance before upgrade."""

        vm_image: typing.Text = ...
        """The VM image before this instance upgrade."""

        container_image: typing.Text = ...
        """The container image before this instance upgrade."""

        framework: typing.Text = ...
        """The framework of this notebook instance."""

        version: typing.Text = ...
        """The version of the notebook instance before this upgrade."""

        state: global___Instance.UpgradeHistoryEntry.State.ValueType = ...
        """The state of this instance upgrade history entry."""

        @property
        def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """The time that this instance upgrade history entry is created."""
            pass
        target_image: typing.Text = ...
        """Target VM Image. Format: ainotebooks-vm/project/image-name/name."""

        action: global___Instance.UpgradeHistoryEntry.Action.ValueType = ...
        """Action. Rolloback or Upgrade."""

        target_version: typing.Text = ...
        """Target VM Version, like m63."""

        def __init__(self,
            *,
            snapshot : typing.Text = ...,
            vm_image : typing.Text = ...,
            container_image : typing.Text = ...,
            framework : typing.Text = ...,
            version : typing.Text = ...,
            state : global___Instance.UpgradeHistoryEntry.State.ValueType = ...,
            create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            target_image : typing.Text = ...,
            action : global___Instance.UpgradeHistoryEntry.Action.ValueType = ...,
            target_version : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["action",b"action","container_image",b"container_image","create_time",b"create_time","framework",b"framework","snapshot",b"snapshot","state",b"state","target_image",b"target_image","target_version",b"target_version","version",b"version","vm_image",b"vm_image"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    VM_IMAGE_FIELD_NUMBER: builtins.int
    CONTAINER_IMAGE_FIELD_NUMBER: builtins.int
    POST_STARTUP_SCRIPT_FIELD_NUMBER: builtins.int
    PROXY_URI_FIELD_NUMBER: builtins.int
    INSTANCE_OWNERS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_SCOPES_FIELD_NUMBER: builtins.int
    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    ACCELERATOR_CONFIG_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    INSTALL_GPU_DRIVER_FIELD_NUMBER: builtins.int
    CUSTOM_GPU_DRIVER_PATH_FIELD_NUMBER: builtins.int
    BOOT_DISK_TYPE_FIELD_NUMBER: builtins.int
    BOOT_DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    DATA_DISK_TYPE_FIELD_NUMBER: builtins.int
    DATA_DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    NO_REMOVE_DATA_DISK_FIELD_NUMBER: builtins.int
    DISK_ENCRYPTION_FIELD_NUMBER: builtins.int
    KMS_KEY_FIELD_NUMBER: builtins.int
    DISKS_FIELD_NUMBER: builtins.int
    SHIELDED_INSTANCE_CONFIG_FIELD_NUMBER: builtins.int
    NO_PUBLIC_IP_FIELD_NUMBER: builtins.int
    NO_PROXY_ACCESS_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    SUBNET_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    UPGRADE_HISTORY_FIELD_NUMBER: builtins.int
    NIC_TYPE_FIELD_NUMBER: builtins.int
    RESERVATION_AFFINITY_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The name of this notebook instance. Format:
    `projects/{project_id}/locations/{location}/instances/{instance_id}`
    """

    @property
    def vm_image(self) -> google.cloud.notebooks.v1.environment_pb2.VmImage:
        """Use a Compute Engine VM image to start the notebook instance."""
        pass
    @property
    def container_image(self) -> google.cloud.notebooks.v1.environment_pb2.ContainerImage:
        """Use a container image to start the notebook instance."""
        pass
    post_startup_script: typing.Text = ...
    """Path to a Bash script that automatically runs after a notebook instance
    fully boots up. The path must be a URL or
    Cloud Storage path (`gs://path-to-file/file-name`).
    """

    proxy_uri: typing.Text = ...
    """Output only. The proxy endpoint that is used to access the Jupyter notebook."""

    @property
    def instance_owners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Input only. The owner of this instance after creation. Format: `alias@example.com`

        Currently supports one owner only. If not specified, all of the service
        account users of your VM instance's service account can use
        the instance.
        """
        pass
    service_account: typing.Text = ...
    """The service account on this instance, giving access to other Google
    Cloud services.
    You can use any service account within the same project, but you
    must have the service account user permission to use the instance.

    If not specified, the [Compute Engine default service
    account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account)
    is used.
    """

    @property
    def service_account_scopes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. The URIs of service account scopes to be included in
        Compute Engine instances.

        If not specified, the following
        [scopes](https://cloud.google.com/compute/docs/access/service-accounts#accesscopesiam)
        are defined:
         - https://www.googleapis.com/auth/cloud-platform
         - https://www.googleapis.com/auth/userinfo.email
        If not using default scopes, you need at least:
           https://www.googleapis.com/auth/compute
        """
        pass
    machine_type: typing.Text = ...
    """Required. The [Compute Engine machine type](/compute/docs/machine-types) of this
    instance.
    """

    @property
    def accelerator_config(self) -> global___Instance.AcceleratorConfig:
        """The hardware accelerator used on this instance. If you use
        accelerators, make sure that your configuration has
        [enough vCPUs and memory to support the `machine_type` you
        have selected](/compute/docs/gpus/#gpus-list).
        """
        pass
    state: global___Instance.State.ValueType = ...
    """Output only. The state of this instance."""

    install_gpu_driver: builtins.bool = ...
    """Whether the end user authorizes Google Cloud to install GPU driver
    on this instance.
    If this field is empty or set to false, the GPU driver won't be installed.
    Only applicable to instances with GPUs.
    """

    custom_gpu_driver_path: typing.Text = ...
    """Specify a custom Cloud Storage path where the GPU driver is stored.
    If not specified, we'll automatically choose from official GPU drivers.
    """

    boot_disk_type: global___Instance.DiskType.ValueType = ...
    """Input only. The type of the boot disk attached to this instance, defaults to
    standard persistent disk (`PD_STANDARD`).
    """

    boot_disk_size_gb: builtins.int = ...
    """Input only. The size of the boot disk in GB attached to this instance, up to a maximum
    of 64000&nbsp;GB (64&nbsp;TB). The minimum recommended value is
    100&nbsp;GB. If not specified, this defaults to 100.
    """

    data_disk_type: global___Instance.DiskType.ValueType = ...
    """Input only. The type of the data disk attached to this instance, defaults to
    standard persistent disk (`PD_STANDARD`).
    """

    data_disk_size_gb: builtins.int = ...
    """Input only. The size of the data disk in GB attached to this instance, up to a maximum
    of 64000&nbsp;GB (64&nbsp;TB). You can choose the size of the data disk
    based on how big your notebooks and data are. If not specified, this
    defaults to 100.
    """

    no_remove_data_disk: builtins.bool = ...
    """Input only. If true, the data disk will not be auto deleted when deleting the instance."""

    disk_encryption: global___Instance.DiskEncryption.ValueType = ...
    """Input only. Disk encryption method used on the boot and data disks, defaults to GMEK."""

    kms_key: typing.Text = ...
    """Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption
    is CMEK.
    Format:
    `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`

    Learn more about [using your own encryption keys](/kms/docs/quickstart).
    """

    @property
    def disks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Instance.Disk]:
        """Output only. Attached disks to notebook instance."""
        pass
    @property
    def shielded_instance_config(self) -> global___Instance.ShieldedInstanceConfig:
        """Optional. Shielded VM configuration.
        [Images using supported Shielded VM
        features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
        """
        pass
    no_public_ip: builtins.bool = ...
    """If true, no public IP will be assigned to this instance."""

    no_proxy_access: builtins.bool = ...
    """If true, the notebook instance will not register with the proxy."""

    network: typing.Text = ...
    """The name of the VPC that this instance is in.
    Format:
    `projects/{project_id}/global/networks/{network_id}`
    """

    subnet: typing.Text = ...
    """The name of the subnet that this instance is in.
    Format:
    `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels to apply to this instance.
        These can be later modified by the setLabels method.
        """
        pass
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Custom metadata to apply to this instance."""
        pass
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. The Compute Engine tags to add to runtime (see [Tagging
        instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
        """
        pass
    @property
    def upgrade_history(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Instance.UpgradeHistoryEntry]:
        """The upgrade history of this instance."""
        pass
    nic_type: global___Instance.NicType.ValueType = ...
    """Optional. The type of vNIC to be used on this interface. This may be gVNIC or
    VirtioNet.
    """

    @property
    def reservation_affinity(self) -> global___ReservationAffinity:
        """Optional. The optional reservation affinity. Setting this field will apply
        the specified [Zonal Compute
        Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources)
        to this notebook instance.
        """
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Instance creation time."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Instance update time."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        vm_image : typing.Optional[google.cloud.notebooks.v1.environment_pb2.VmImage] = ...,
        container_image : typing.Optional[google.cloud.notebooks.v1.environment_pb2.ContainerImage] = ...,
        post_startup_script : typing.Text = ...,
        proxy_uri : typing.Text = ...,
        instance_owners : typing.Optional[typing.Iterable[typing.Text]] = ...,
        service_account : typing.Text = ...,
        service_account_scopes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        machine_type : typing.Text = ...,
        accelerator_config : typing.Optional[global___Instance.AcceleratorConfig] = ...,
        state : global___Instance.State.ValueType = ...,
        install_gpu_driver : builtins.bool = ...,
        custom_gpu_driver_path : typing.Text = ...,
        boot_disk_type : global___Instance.DiskType.ValueType = ...,
        boot_disk_size_gb : builtins.int = ...,
        data_disk_type : global___Instance.DiskType.ValueType = ...,
        data_disk_size_gb : builtins.int = ...,
        no_remove_data_disk : builtins.bool = ...,
        disk_encryption : global___Instance.DiskEncryption.ValueType = ...,
        kms_key : typing.Text = ...,
        disks : typing.Optional[typing.Iterable[global___Instance.Disk]] = ...,
        shielded_instance_config : typing.Optional[global___Instance.ShieldedInstanceConfig] = ...,
        no_public_ip : builtins.bool = ...,
        no_proxy_access : builtins.bool = ...,
        network : typing.Text = ...,
        subnet : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        upgrade_history : typing.Optional[typing.Iterable[global___Instance.UpgradeHistoryEntry]] = ...,
        nic_type : global___Instance.NicType.ValueType = ...,
        reservation_affinity : typing.Optional[global___ReservationAffinity] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["accelerator_config",b"accelerator_config","container_image",b"container_image","create_time",b"create_time","environment",b"environment","reservation_affinity",b"reservation_affinity","shielded_instance_config",b"shielded_instance_config","update_time",b"update_time","vm_image",b"vm_image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["accelerator_config",b"accelerator_config","boot_disk_size_gb",b"boot_disk_size_gb","boot_disk_type",b"boot_disk_type","container_image",b"container_image","create_time",b"create_time","custom_gpu_driver_path",b"custom_gpu_driver_path","data_disk_size_gb",b"data_disk_size_gb","data_disk_type",b"data_disk_type","disk_encryption",b"disk_encryption","disks",b"disks","environment",b"environment","install_gpu_driver",b"install_gpu_driver","instance_owners",b"instance_owners","kms_key",b"kms_key","labels",b"labels","machine_type",b"machine_type","metadata",b"metadata","name",b"name","network",b"network","nic_type",b"nic_type","no_proxy_access",b"no_proxy_access","no_public_ip",b"no_public_ip","no_remove_data_disk",b"no_remove_data_disk","post_startup_script",b"post_startup_script","proxy_uri",b"proxy_uri","reservation_affinity",b"reservation_affinity","service_account",b"service_account","service_account_scopes",b"service_account_scopes","shielded_instance_config",b"shielded_instance_config","state",b"state","subnet",b"subnet","tags",b"tags","update_time",b"update_time","upgrade_history",b"upgrade_history","vm_image",b"vm_image"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["environment",b"environment"]) -> typing.Optional[typing_extensions.Literal["vm_image","container_image"]]: ...
global___Instance = Instance
