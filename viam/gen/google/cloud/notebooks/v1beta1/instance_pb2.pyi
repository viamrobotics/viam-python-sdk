"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.cloud.notebooks.v1beta1.environment_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Instance(google.protobuf.message.Message):
    """The definition of a notebook instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AcceleratorType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AcceleratorTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AcceleratorType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ACCELERATOR_TYPE_UNSPECIFIED: Instance.AcceleratorType.ValueType = ...  # 0
        """Accelerator type is not specified."""

        NVIDIA_TESLA_K80: Instance.AcceleratorType.ValueType = ...  # 1
        """Accelerator type is Nvidia Tesla K80."""

        NVIDIA_TESLA_P100: Instance.AcceleratorType.ValueType = ...  # 2
        """Accelerator type is Nvidia Tesla P100."""

        NVIDIA_TESLA_V100: Instance.AcceleratorType.ValueType = ...  # 3
        """Accelerator type is Nvidia Tesla V100."""

        NVIDIA_TESLA_P4: Instance.AcceleratorType.ValueType = ...  # 4
        """Accelerator type is Nvidia Tesla P_4."""

        NVIDIA_TESLA_T4: Instance.AcceleratorType.ValueType = ...  # 5
        """Accelerator type is Nvidia Tesla T4."""

        NVIDIA_TESLA_T4_VWS: Instance.AcceleratorType.ValueType = ...  # 8
        """Accelerator type is NVIDIA Tesla T4 Virtual Workstations."""

        NVIDIA_TESLA_P100_VWS: Instance.AcceleratorType.ValueType = ...  # 9
        """Accelerator type is NVIDIA Tesla P100 Virtual Workstations."""

        NVIDIA_TESLA_P4_VWS: Instance.AcceleratorType.ValueType = ...  # 10
        """Accelerator type is NVIDIA Tesla P_4 Virtual Workstations."""

        TPU_V2: Instance.AcceleratorType.ValueType = ...  # 6
        """(Coming soon) Accelerator type is TPU V2."""

        TPU_V3: Instance.AcceleratorType.ValueType = ...  # 7
        """(Coming soon) Accelerator type is TPU V3."""

    class AcceleratorType(_AcceleratorType, metaclass=_AcceleratorTypeEnumTypeWrapper):
        """Definition of the types of hardware accelerators that can be used on this
        instance.
        """
        pass

    ACCELERATOR_TYPE_UNSPECIFIED: Instance.AcceleratorType.ValueType = ...  # 0
    """Accelerator type is not specified."""

    NVIDIA_TESLA_K80: Instance.AcceleratorType.ValueType = ...  # 1
    """Accelerator type is Nvidia Tesla K80."""

    NVIDIA_TESLA_P100: Instance.AcceleratorType.ValueType = ...  # 2
    """Accelerator type is Nvidia Tesla P100."""

    NVIDIA_TESLA_V100: Instance.AcceleratorType.ValueType = ...  # 3
    """Accelerator type is Nvidia Tesla V100."""

    NVIDIA_TESLA_P4: Instance.AcceleratorType.ValueType = ...  # 4
    """Accelerator type is Nvidia Tesla P_4."""

    NVIDIA_TESLA_T4: Instance.AcceleratorType.ValueType = ...  # 5
    """Accelerator type is Nvidia Tesla T4."""

    NVIDIA_TESLA_T4_VWS: Instance.AcceleratorType.ValueType = ...  # 8
    """Accelerator type is NVIDIA Tesla T4 Virtual Workstations."""

    NVIDIA_TESLA_P100_VWS: Instance.AcceleratorType.ValueType = ...  # 9
    """Accelerator type is NVIDIA Tesla P100 Virtual Workstations."""

    NVIDIA_TESLA_P4_VWS: Instance.AcceleratorType.ValueType = ...  # 10
    """Accelerator type is NVIDIA Tesla P_4 Virtual Workstations."""

    TPU_V2: Instance.AcceleratorType.ValueType = ...  # 6
    """(Coming soon) Accelerator type is TPU V2."""

    TPU_V3: Instance.AcceleratorType.ValueType = ...  # 7
    """(Coming soon) Accelerator type is TPU V3."""


    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Instance.State.ValueType = ...  # 0
        """State is not specified."""

        STARTING: Instance.State.ValueType = ...  # 1
        """The control logic is starting the instance."""

        PROVISIONING: Instance.State.ValueType = ...  # 2
        """The control logic is installing required frameworks and registering the
        instance with notebook proxy
        """

        ACTIVE: Instance.State.ValueType = ...  # 3
        """The instance is running."""

        STOPPING: Instance.State.ValueType = ...  # 4
        """The control logic is stopping the instance."""

        STOPPED: Instance.State.ValueType = ...  # 5
        """The instance is stopped."""

        DELETED: Instance.State.ValueType = ...  # 6
        """The instance is deleted."""

        UPGRADING: Instance.State.ValueType = ...  # 7
        """The instance is upgrading."""

        INITIALIZING: Instance.State.ValueType = ...  # 8
        """The instance is being created."""

        REGISTERING: Instance.State.ValueType = ...  # 9
        """The instance is getting registered."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The definition of the states of this instance."""
        pass

    STATE_UNSPECIFIED: Instance.State.ValueType = ...  # 0
    """State is not specified."""

    STARTING: Instance.State.ValueType = ...  # 1
    """The control logic is starting the instance."""

    PROVISIONING: Instance.State.ValueType = ...  # 2
    """The control logic is installing required frameworks and registering the
    instance with notebook proxy
    """

    ACTIVE: Instance.State.ValueType = ...  # 3
    """The instance is running."""

    STOPPING: Instance.State.ValueType = ...  # 4
    """The control logic is stopping the instance."""

    STOPPED: Instance.State.ValueType = ...  # 5
    """The instance is stopped."""

    DELETED: Instance.State.ValueType = ...  # 6
    """The instance is deleted."""

    UPGRADING: Instance.State.ValueType = ...  # 7
    """The instance is upgrading."""

    INITIALIZING: Instance.State.ValueType = ...  # 8
    """The instance is being created."""

    REGISTERING: Instance.State.ValueType = ...  # 9
    """The instance is getting registered."""


    class _DiskType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DiskTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DiskType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DISK_TYPE_UNSPECIFIED: Instance.DiskType.ValueType = ...  # 0
        """Disk type not set."""

        PD_STANDARD: Instance.DiskType.ValueType = ...  # 1
        """Standard persistent disk type."""

        PD_SSD: Instance.DiskType.ValueType = ...  # 2
        """SSD persistent disk type."""

        PD_BALANCED: Instance.DiskType.ValueType = ...  # 3
        """Balanced persistent disk type."""

    class DiskType(_DiskType, metaclass=_DiskTypeEnumTypeWrapper):
        """Possible disk types for notebook instances."""
        pass

    DISK_TYPE_UNSPECIFIED: Instance.DiskType.ValueType = ...  # 0
    """Disk type not set."""

    PD_STANDARD: Instance.DiskType.ValueType = ...  # 1
    """Standard persistent disk type."""

    PD_SSD: Instance.DiskType.ValueType = ...  # 2
    """SSD persistent disk type."""

    PD_BALANCED: Instance.DiskType.ValueType = ...  # 3
    """Balanced persistent disk type."""


    class _DiskEncryption:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DiskEncryptionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DiskEncryption.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DISK_ENCRYPTION_UNSPECIFIED: Instance.DiskEncryption.ValueType = ...  # 0
        """Disk encryption is not specified."""

        GMEK: Instance.DiskEncryption.ValueType = ...  # 1
        """Use Google managed encryption keys to encrypt the boot disk."""

        CMEK: Instance.DiskEncryption.ValueType = ...  # 2
        """Use customer managed encryption keys to encrypt the boot disk."""

    class DiskEncryption(_DiskEncryption, metaclass=_DiskEncryptionEnumTypeWrapper):
        """Definition of the disk encryption options."""
        pass

    DISK_ENCRYPTION_UNSPECIFIED: Instance.DiskEncryption.ValueType = ...  # 0
    """Disk encryption is not specified."""

    GMEK: Instance.DiskEncryption.ValueType = ...  # 1
    """Use Google managed encryption keys to encrypt the boot disk."""

    CMEK: Instance.DiskEncryption.ValueType = ...  # 2
    """Use customer managed encryption keys to encrypt the boot disk."""


    class AcceleratorConfig(google.protobuf.message.Message):
        """Definition of a hardware accelerator. Note that not all combinations
        of `type` and `core_count` are valid. Check [GPUs on
        Compute Engine](/compute/docs/gpus/#gpus-list) to find a valid
        combination. TPUs are not supported.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TYPE_FIELD_NUMBER: builtins.int
        CORE_COUNT_FIELD_NUMBER: builtins.int
        type: global___Instance.AcceleratorType.ValueType = ...
        """Type of this accelerator."""

        core_count: builtins.int = ...
        """Count of cores of this accelerator."""

        def __init__(self,
            *,
            type : global___Instance.AcceleratorType.ValueType = ...,
            core_count : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["core_count",b"core_count","type",b"type"]) -> None: ...

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    VM_IMAGE_FIELD_NUMBER: builtins.int
    CONTAINER_IMAGE_FIELD_NUMBER: builtins.int
    POST_STARTUP_SCRIPT_FIELD_NUMBER: builtins.int
    PROXY_URI_FIELD_NUMBER: builtins.int
    INSTANCE_OWNERS_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    ACCELERATOR_CONFIG_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    INSTALL_GPU_DRIVER_FIELD_NUMBER: builtins.int
    CUSTOM_GPU_DRIVER_PATH_FIELD_NUMBER: builtins.int
    BOOT_DISK_TYPE_FIELD_NUMBER: builtins.int
    BOOT_DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    DATA_DISK_TYPE_FIELD_NUMBER: builtins.int
    DATA_DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    NO_REMOVE_DATA_DISK_FIELD_NUMBER: builtins.int
    DISK_ENCRYPTION_FIELD_NUMBER: builtins.int
    KMS_KEY_FIELD_NUMBER: builtins.int
    NO_PUBLIC_IP_FIELD_NUMBER: builtins.int
    NO_PROXY_ACCESS_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    SUBNET_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. The name of this notebook instance. Format:
    `projects/{project_id}/locations/{location}/instances/{instance_id}`
    """

    @property
    def vm_image(self) -> google.cloud.notebooks.v1beta1.environment_pb2.VmImage:
        """Use a Compute Engine VM image to start the notebook instance."""
        pass
    @property
    def container_image(self) -> google.cloud.notebooks.v1beta1.environment_pb2.ContainerImage:
        """Use a container image to start the notebook instance."""
        pass
    post_startup_script: typing.Text = ...
    """Path to a Bash script that automatically runs after a notebook instance
    fully boots up. The path must be a URL or
    Cloud Storage path (`gs://path-to-file/file-name`).
    """

    proxy_uri: typing.Text = ...
    """Output only. The proxy endpoint that is used to access the Jupyter
    notebook.
    """

    @property
    def instance_owners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Input only. The owner of this instance after creation. Format:
        `alias@example.com`

        Currently supports one owner only. If not specified, all of the service
        account users of your VM instance's service account can use
        the instance.
        """
        pass
    service_account: typing.Text = ...
    """The service account on this instance, giving access to other Google
    Cloud services.
    You can use any service account within the same project, but you
    must have the service account user permission to use the instance.

    If not specified, the [Compute Engine default service
    account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account)
    is used.
    """

    machine_type: typing.Text = ...
    """Required. The [Compute Engine machine
    type](https://cloud.google.com/compute/docs/machine-types) of this
    instance.
    """

    @property
    def accelerator_config(self) -> global___Instance.AcceleratorConfig:
        """The hardware accelerator used on this instance. If you use
        accelerators, make sure that your configuration has
        [enough vCPUs and memory to support the `machine_type` you
        have selected](https://cloud.google.com/compute/docs/gpus/#gpus-list).
        """
        pass
    state: global___Instance.State.ValueType = ...
    """Output only. The state of this instance."""

    install_gpu_driver: builtins.bool = ...
    """Whether the end user authorizes Google Cloud to install GPU driver
    on this instance.
    If this field is empty or set to false, the GPU driver won't be installed.
    Only applicable to instances with GPUs.
    """

    custom_gpu_driver_path: typing.Text = ...
    """Specify a custom Cloud Storage path where the GPU driver is stored.
    If not specified, we'll automatically choose from official GPU drivers.
    """

    boot_disk_type: global___Instance.DiskType.ValueType = ...
    """Input only. The type of the boot disk attached to this instance, defaults
    to standard persistent disk (`PD_STANDARD`).
    """

    boot_disk_size_gb: builtins.int = ...
    """Input only. The size of the boot disk in GB attached to this instance, up
    to a maximum of 64000&nbsp;GB (64&nbsp;TB). The minimum recommended value
    is 100&nbsp;GB. If not specified, this defaults to 100.
    """

    data_disk_type: global___Instance.DiskType.ValueType = ...
    """Input only. The type of the data disk attached to this instance, defaults
    to standard persistent disk (`PD_STANDARD`).
    """

    data_disk_size_gb: builtins.int = ...
    """Input only. The size of the data disk in GB attached to this instance, up
    to a maximum of 64000&nbsp;GB (64&nbsp;TB). You can choose the size of the
    data disk based on how big your notebooks and data are. If not specified,
    this defaults to 100.
    """

    no_remove_data_disk: builtins.bool = ...
    """Input only. If true, the data disk will not be auto deleted when deleting
    the instance.
    """

    disk_encryption: global___Instance.DiskEncryption.ValueType = ...
    """Input only. Disk encryption method used on the boot and data disks,
    defaults to GMEK.
    """

    kms_key: typing.Text = ...
    """Input only. The KMS key used to encrypt the disks, only applicable if
    disk_encryption is CMEK. Format:
    `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`

    Learn more about [using your own encryption keys](
    https://cloud.google.com/kms/docs/quickstart).
    """

    no_public_ip: builtins.bool = ...
    """If true, no public IP will be assigned to this instance."""

    no_proxy_access: builtins.bool = ...
    """If true, the notebook instance will not register with the proxy."""

    network: typing.Text = ...
    """The name of the VPC that this instance is in.
    Format:
    `projects/{project_id}/global/networks/{network_id}`
    """

    subnet: typing.Text = ...
    """The name of the subnet that this instance is in.
    Format:
    `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`
    """

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels to apply to this instance.
        These can be later modified by the setLabels method.
        """
        pass
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Custom metadata to apply to this instance."""
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Instance creation time."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Instance update time."""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        vm_image : typing.Optional[google.cloud.notebooks.v1beta1.environment_pb2.VmImage] = ...,
        container_image : typing.Optional[google.cloud.notebooks.v1beta1.environment_pb2.ContainerImage] = ...,
        post_startup_script : typing.Text = ...,
        proxy_uri : typing.Text = ...,
        instance_owners : typing.Optional[typing.Iterable[typing.Text]] = ...,
        service_account : typing.Text = ...,
        machine_type : typing.Text = ...,
        accelerator_config : typing.Optional[global___Instance.AcceleratorConfig] = ...,
        state : global___Instance.State.ValueType = ...,
        install_gpu_driver : builtins.bool = ...,
        custom_gpu_driver_path : typing.Text = ...,
        boot_disk_type : global___Instance.DiskType.ValueType = ...,
        boot_disk_size_gb : builtins.int = ...,
        data_disk_type : global___Instance.DiskType.ValueType = ...,
        data_disk_size_gb : builtins.int = ...,
        no_remove_data_disk : builtins.bool = ...,
        disk_encryption : global___Instance.DiskEncryption.ValueType = ...,
        kms_key : typing.Text = ...,
        no_public_ip : builtins.bool = ...,
        no_proxy_access : builtins.bool = ...,
        network : typing.Text = ...,
        subnet : typing.Text = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["accelerator_config",b"accelerator_config","container_image",b"container_image","create_time",b"create_time","environment",b"environment","update_time",b"update_time","vm_image",b"vm_image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["accelerator_config",b"accelerator_config","boot_disk_size_gb",b"boot_disk_size_gb","boot_disk_type",b"boot_disk_type","container_image",b"container_image","create_time",b"create_time","custom_gpu_driver_path",b"custom_gpu_driver_path","data_disk_size_gb",b"data_disk_size_gb","data_disk_type",b"data_disk_type","disk_encryption",b"disk_encryption","environment",b"environment","install_gpu_driver",b"install_gpu_driver","instance_owners",b"instance_owners","kms_key",b"kms_key","labels",b"labels","machine_type",b"machine_type","metadata",b"metadata","name",b"name","network",b"network","no_proxy_access",b"no_proxy_access","no_public_ip",b"no_public_ip","no_remove_data_disk",b"no_remove_data_disk","post_startup_script",b"post_startup_script","proxy_uri",b"proxy_uri","service_account",b"service_account","state",b"state","subnet",b"subnet","update_time",b"update_time","vm_image",b"vm_image"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["environment",b"environment"]) -> typing.Optional[typing_extensions.Literal["vm_image","container_image"]]: ...
global___Instance = Instance
