"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AbandonInstancesInstanceGroupManagerRequest(google.protobuf.message.Message):
    """
    Messages

    A request message for InstanceGroupManagers.AbandonInstances. See the method description for details.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGERS_ABANDON_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group."""

    @property
    def instance_group_managers_abandon_instances_request_resource(self) -> global___InstanceGroupManagersAbandonInstancesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_managers_abandon_instances_request_resource : typing.Optional[global___InstanceGroupManagersAbandonInstancesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_managers_abandon_instances_request_resource",b"instance_group_managers_abandon_instances_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","instance_group_managers_abandon_instances_request_resource",b"instance_group_managers_abandon_instances_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AbandonInstancesInstanceGroupManagerRequest = AbandonInstancesInstanceGroupManagerRequest

class AbandonInstancesRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.AbandonInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUP_MANAGERS_ABANDON_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """Name of the managed instance group."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    @property
    def region_instance_group_managers_abandon_instances_request_resource(self) -> global___RegionInstanceGroupManagersAbandonInstancesRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_group_managers_abandon_instances_request_resource : typing.Optional[global___RegionInstanceGroupManagersAbandonInstancesRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_instance_group_managers_abandon_instances_request_resource",b"region_instance_group_managers_abandon_instances_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","region_instance_group_managers_abandon_instances_request_resource",b"region_instance_group_managers_abandon_instances_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AbandonInstancesRegionInstanceGroupManagerRequest = AbandonInstancesRegionInstanceGroupManagerRequest

class AcceleratorConfig(google.protobuf.message.Message):
    """A specification of the type and number of accelerator cards attached to the instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCELERATOR_COUNT_FIELD_NUMBER: builtins.int
    ACCELERATOR_TYPE_FIELD_NUMBER: builtins.int
    accelerator_count: builtins.int = ...
    """The number of the guest accelerator cards exposed to this instance."""

    accelerator_type: typing.Text = ...
    """Full or partial URL of the accelerator type resource to attach to this instance. For example: projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100 If you are creating an instance template, specify only the accelerator name. See GPUs on Compute Engine for a full list of accelerator types."""

    def __init__(self,
        *,
        accelerator_count : typing.Optional[builtins.int] = ...,
        accelerator_type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_accelerator_count",b"_accelerator_count","_accelerator_type",b"_accelerator_type","accelerator_count",b"accelerator_count","accelerator_type",b"accelerator_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_accelerator_count",b"_accelerator_count","_accelerator_type",b"_accelerator_type","accelerator_count",b"accelerator_count","accelerator_type",b"accelerator_type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_accelerator_count",b"_accelerator_count"]) -> typing.Optional[typing_extensions.Literal["accelerator_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_accelerator_type",b"_accelerator_type"]) -> typing.Optional[typing_extensions.Literal["accelerator_type"]]: ...
global___AcceleratorConfig = AcceleratorConfig

class AcceleratorType(google.protobuf.message.Message):
    """Represents an Accelerator Type resource. Google Cloud Platform provides graphics processing units (accelerators) that you can add to VM instances to improve or accelerate performance when working with intensive workloads. For more information, read GPUs on Compute Engine."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEPRECATED_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    MAXIMUM_CARDS_PER_INSTANCE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def deprecated(self) -> global___DeprecationStatus:
        """[Output Only] The deprecation status associated with this accelerator type."""
        pass
    description: typing.Text = ...
    """[Output Only] An optional textual description of the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] The type of the resource. Always compute#acceleratorType for accelerator types."""

    maximum_cards_per_instance: builtins.int = ...
    """[Output Only] Maximum number of accelerator cards allowed per instance."""

    name: typing.Text = ...
    """[Output Only] Name of the resource."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined, fully qualified URL for this resource."""

    zone: typing.Text = ...
    """[Output Only] The name of the zone where the accelerator type resides, such as us-central1-a. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        deprecated : typing.Optional[global___DeprecationStatus] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        maximum_cards_per_instance : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_id",b"_id","_kind",b"_kind","_maximum_cards_per_instance",b"_maximum_cards_per_instance","_name",b"_name","_self_link",b"_self_link","_zone",b"_zone","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","id",b"id","kind",b"kind","maximum_cards_per_instance",b"maximum_cards_per_instance","name",b"name","self_link",b"self_link","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_id",b"_id","_kind",b"_kind","_maximum_cards_per_instance",b"_maximum_cards_per_instance","_name",b"_name","_self_link",b"_self_link","_zone",b"_zone","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","id",b"id","kind",b"kind","maximum_cards_per_instance",b"maximum_cards_per_instance","name",b"name","self_link",b"self_link","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deprecated",b"_deprecated"]) -> typing.Optional[typing_extensions.Literal["deprecated"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_maximum_cards_per_instance",b"_maximum_cards_per_instance"]) -> typing.Optional[typing_extensions.Literal["maximum_cards_per_instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___AcceleratorType = AcceleratorType

class AcceleratorTypeAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___AcceleratorTypesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___AcceleratorTypesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___AcceleratorTypesScopedList]:
        """A list of AcceleratorTypesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#acceleratorTypeAggregatedList for aggregated lists of accelerator types."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___AcceleratorTypesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___AcceleratorTypeAggregatedList = AcceleratorTypeAggregatedList

class AcceleratorTypeList(google.protobuf.message.Message):
    """Contains a list of accelerator types."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AcceleratorType]:
        """A list of AcceleratorType resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#acceleratorTypeList for lists of accelerator types."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___AcceleratorType]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___AcceleratorTypeList = AcceleratorTypeList

class AcceleratorTypesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCELERATOR_TYPES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def accelerator_types(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AcceleratorType]:
        """[Output Only] A list of accelerator types contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] An informational warning that appears when the accelerator types list is empty."""
        pass
    def __init__(self,
        *,
        accelerator_types : typing.Optional[typing.Iterable[global___AcceleratorType]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","accelerator_types",b"accelerator_types","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___AcceleratorTypesScopedList = AcceleratorTypesScopedList

class Accelerators(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUEST_ACCELERATOR_COUNT_FIELD_NUMBER: builtins.int
    GUEST_ACCELERATOR_TYPE_FIELD_NUMBER: builtins.int
    guest_accelerator_count: builtins.int = ...
    """Number of accelerator cards exposed to the guest."""

    guest_accelerator_type: typing.Text = ...
    """The accelerator type resource name, not a full URL, e.g. 'nvidia-tesla-k80'."""

    def __init__(self,
        *,
        guest_accelerator_count : typing.Optional[builtins.int] = ...,
        guest_accelerator_type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_guest_accelerator_count",b"_guest_accelerator_count","_guest_accelerator_type",b"_guest_accelerator_type","guest_accelerator_count",b"guest_accelerator_count","guest_accelerator_type",b"guest_accelerator_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_guest_accelerator_count",b"_guest_accelerator_count","_guest_accelerator_type",b"_guest_accelerator_type","guest_accelerator_count",b"guest_accelerator_count","guest_accelerator_type",b"guest_accelerator_type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_guest_accelerator_count",b"_guest_accelerator_count"]) -> typing.Optional[typing_extensions.Literal["guest_accelerator_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_guest_accelerator_type",b"_guest_accelerator_type"]) -> typing.Optional[typing_extensions.Literal["guest_accelerator_type"]]: ...
global___Accelerators = Accelerators

class AccessConfig(google.protobuf.message.Message):
    """An access configuration attached to an instance's network interface. Only one access config per instance is supported."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _NetworkTier:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NetworkTierEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NetworkTier.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_NETWORK_TIER: AccessConfig.NetworkTier.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        PREMIUM: AccessConfig.NetworkTier.ValueType = ...  # 399530551
        """High quality, Google-grade network tier, support for all networking products."""

        STANDARD: AccessConfig.NetworkTier.ValueType = ...  # 484642493
        """Public internet quality, only limited support for other networking products."""

    class NetworkTier(_NetworkTier, metaclass=_NetworkTierEnumTypeWrapper):
        """This signifies the networking tier used for configuring this access configuration and can only take the following values: PREMIUM, STANDARD. If an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier. If an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP."""
        pass

    UNDEFINED_NETWORK_TIER: AccessConfig.NetworkTier.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    PREMIUM: AccessConfig.NetworkTier.ValueType = ...  # 399530551
    """High quality, Google-grade network tier, support for all networking products."""

    STANDARD: AccessConfig.NetworkTier.ValueType = ...  # 484642493
    """Public internet quality, only limited support for other networking products."""


    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: AccessConfig.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DIRECT_IPV6: AccessConfig.Type.ValueType = ...  # 4397213
        ONE_TO_ONE_NAT: AccessConfig.Type.ValueType = ...  # 84090205
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The type of configuration. The default and only option is ONE_TO_ONE_NAT."""
        pass

    UNDEFINED_TYPE: AccessConfig.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DIRECT_IPV6: AccessConfig.Type.ValueType = ...  # 4397213
    ONE_TO_ONE_NAT: AccessConfig.Type.ValueType = ...  # 84090205

    EXTERNAL_IPV6_FIELD_NUMBER: builtins.int
    EXTERNAL_IPV6_PREFIX_LENGTH_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NAT_I_P_FIELD_NUMBER: builtins.int
    NETWORK_TIER_FIELD_NUMBER: builtins.int
    PUBLIC_PTR_DOMAIN_NAME_FIELD_NUMBER: builtins.int
    SET_PUBLIC_PTR_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    external_ipv6: typing.Text = ...
    """[Output Only] The first IPv6 address of the external IPv6 range associated with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig. The field is output only, an IPv6 address from a subnetwork associated with the instance will be allocated dynamically."""

    external_ipv6_prefix_length: builtins.int = ...
    """[Output Only] The prefix length of the external IPv6 range."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#accessConfig for access configs."""

    name: typing.Text = ...
    """The name of this access configuration. The default and recommended name is External NAT, but you can use any arbitrary string, such as My external IP or Network Access."""

    nat_i_p: typing.Text = ...
    """An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance."""

    network_tier: typing.Text = ...
    """This signifies the networking tier used for configuring this access configuration and can only take the following values: PREMIUM, STANDARD. If an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier. If an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP.
    Check the NetworkTier enum for the list of possible values.
    """

    public_ptr_domain_name: typing.Text = ...
    """The DNS domain name for the public PTR record. You can set this field only if the `setPublicPtr` field is enabled."""

    set_public_ptr: builtins.bool = ...
    """Specifies whether a public DNS 'PTR' record should be created to map the external IP address of the instance to a DNS domain name."""

    type: typing.Text = ...
    """The type of configuration. The default and only option is ONE_TO_ONE_NAT.
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        external_ipv6 : typing.Optional[typing.Text] = ...,
        external_ipv6_prefix_length : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        nat_i_p : typing.Optional[typing.Text] = ...,
        network_tier : typing.Optional[typing.Text] = ...,
        public_ptr_domain_name : typing.Optional[typing.Text] = ...,
        set_public_ptr : typing.Optional[builtins.bool] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_external_ipv6",b"_external_ipv6","_external_ipv6_prefix_length",b"_external_ipv6_prefix_length","_kind",b"_kind","_name",b"_name","_nat_i_p",b"_nat_i_p","_network_tier",b"_network_tier","_public_ptr_domain_name",b"_public_ptr_domain_name","_set_public_ptr",b"_set_public_ptr","_type",b"_type","external_ipv6",b"external_ipv6","external_ipv6_prefix_length",b"external_ipv6_prefix_length","kind",b"kind","name",b"name","nat_i_p",b"nat_i_p","network_tier",b"network_tier","public_ptr_domain_name",b"public_ptr_domain_name","set_public_ptr",b"set_public_ptr","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_external_ipv6",b"_external_ipv6","_external_ipv6_prefix_length",b"_external_ipv6_prefix_length","_kind",b"_kind","_name",b"_name","_nat_i_p",b"_nat_i_p","_network_tier",b"_network_tier","_public_ptr_domain_name",b"_public_ptr_domain_name","_set_public_ptr",b"_set_public_ptr","_type",b"_type","external_ipv6",b"external_ipv6","external_ipv6_prefix_length",b"external_ipv6_prefix_length","kind",b"kind","name",b"name","nat_i_p",b"nat_i_p","network_tier",b"network_tier","public_ptr_domain_name",b"public_ptr_domain_name","set_public_ptr",b"set_public_ptr","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_external_ipv6",b"_external_ipv6"]) -> typing.Optional[typing_extensions.Literal["external_ipv6"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_external_ipv6_prefix_length",b"_external_ipv6_prefix_length"]) -> typing.Optional[typing_extensions.Literal["external_ipv6_prefix_length"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_nat_i_p",b"_nat_i_p"]) -> typing.Optional[typing_extensions.Literal["nat_i_p"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_tier",b"_network_tier"]) -> typing.Optional[typing_extensions.Literal["network_tier"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_public_ptr_domain_name",b"_public_ptr_domain_name"]) -> typing.Optional[typing_extensions.Literal["public_ptr_domain_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_set_public_ptr",b"_set_public_ptr"]) -> typing.Optional[typing_extensions.Literal["set_public_ptr"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___AccessConfig = AccessConfig

class AddAccessConfigInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.AddAccessConfig. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCESS_CONFIG_RESOURCE_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def access_config_resource(self) -> global___AccessConfig:
        """The body resource for this request"""
        pass
    instance: typing.Text = ...
    """The instance name for this request."""

    network_interface: typing.Text = ...
    """The name of the network interface to add to this instance."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        access_config_resource : typing.Optional[global___AccessConfig] = ...,
        instance : typing.Text = ...,
        network_interface : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","access_config_resource",b"access_config_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","access_config_resource",b"access_config_resource","instance",b"instance","network_interface",b"network_interface","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddAccessConfigInstanceRequest = AddAccessConfigInstanceRequest

class AddAssociationFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.AddAssociation. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    FIREWALL_POLICY_ASSOCIATION_RESOURCE_FIELD_NUMBER: builtins.int
    REPLACE_EXISTING_ASSOCIATION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to update."""

    @property
    def firewall_policy_association_resource(self) -> global___FirewallPolicyAssociation:
        """The body resource for this request"""
        pass
    replace_existing_association: builtins.bool = ...
    """Indicates whether or not to replace it if an association of the attachment already exists. This is false by default, in which case an error will be returned if an association already exists."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        firewall_policy_association_resource : typing.Optional[global___FirewallPolicyAssociation] = ...,
        replace_existing_association : typing.Optional[builtins.bool] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_replace_existing_association",b"_replace_existing_association","_request_id",b"_request_id","firewall_policy_association_resource",b"firewall_policy_association_resource","replace_existing_association",b"replace_existing_association","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_replace_existing_association",b"_replace_existing_association","_request_id",b"_request_id","firewall_policy",b"firewall_policy","firewall_policy_association_resource",b"firewall_policy_association_resource","replace_existing_association",b"replace_existing_association","request_id",b"request_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_replace_existing_association",b"_replace_existing_association"]) -> typing.Optional[typing_extensions.Literal["replace_existing_association"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddAssociationFirewallPolicyRequest = AddAssociationFirewallPolicyRequest

class AddHealthCheckTargetPoolRequest(google.protobuf.message.Message):
    """A request message for TargetPools.AddHealthCheck. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_POOL_FIELD_NUMBER: builtins.int
    TARGET_POOLS_ADD_HEALTH_CHECK_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_pool: typing.Text = ...
    """Name of the target pool to add a health check to."""

    @property
    def target_pools_add_health_check_request_resource(self) -> global___TargetPoolsAddHealthCheckRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_pool : typing.Text = ...,
        target_pools_add_health_check_request_resource : typing.Optional[global___TargetPoolsAddHealthCheckRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_pools_add_health_check_request_resource",b"target_pools_add_health_check_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_pool",b"target_pool","target_pools_add_health_check_request_resource",b"target_pools_add_health_check_request_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddHealthCheckTargetPoolRequest = AddHealthCheckTargetPoolRequest

class AddInstanceTargetPoolRequest(google.protobuf.message.Message):
    """A request message for TargetPools.AddInstance. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_POOL_FIELD_NUMBER: builtins.int
    TARGET_POOLS_ADD_INSTANCE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_pool: typing.Text = ...
    """Name of the TargetPool resource to add instances to."""

    @property
    def target_pools_add_instance_request_resource(self) -> global___TargetPoolsAddInstanceRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_pool : typing.Text = ...,
        target_pools_add_instance_request_resource : typing.Optional[global___TargetPoolsAddInstanceRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_pools_add_instance_request_resource",b"target_pools_add_instance_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_pool",b"target_pool","target_pools_add_instance_request_resource",b"target_pools_add_instance_request_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddInstanceTargetPoolRequest = AddInstanceTargetPoolRequest

class AddInstancesInstanceGroupRequest(google.protobuf.message.Message):
    """A request message for InstanceGroups.AddInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_FIELD_NUMBER: builtins.int
    INSTANCE_GROUPS_ADD_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group: typing.Text = ...
    """The name of the instance group where you are adding instances."""

    @property
    def instance_groups_add_instances_request_resource(self) -> global___InstanceGroupsAddInstancesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the instance group is located."""

    def __init__(self,
        *,
        instance_group : typing.Text = ...,
        instance_groups_add_instances_request_resource : typing.Optional[global___InstanceGroupsAddInstancesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_groups_add_instances_request_resource",b"instance_groups_add_instances_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group",b"instance_group","instance_groups_add_instances_request_resource",b"instance_groups_add_instances_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddInstancesInstanceGroupRequest = AddInstancesInstanceGroupRequest

class AddNodesNodeGroupRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.AddNodes. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_GROUP_FIELD_NUMBER: builtins.int
    NODE_GROUPS_ADD_NODES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    node_group: typing.Text = ...
    """Name of the NodeGroup resource."""

    @property
    def node_groups_add_nodes_request_resource(self) -> global___NodeGroupsAddNodesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        node_group : typing.Text = ...,
        node_groups_add_nodes_request_resource : typing.Optional[global___NodeGroupsAddNodesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_groups_add_nodes_request_resource",b"node_groups_add_nodes_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_group",b"node_group","node_groups_add_nodes_request_resource",b"node_groups_add_nodes_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddNodesNodeGroupRequest = AddNodesNodeGroupRequest

class AddPeeringNetworkRequest(google.protobuf.message.Message):
    """A request message for Networks.AddPeering. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_FIELD_NUMBER: builtins.int
    NETWORKS_ADD_PEERING_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    network: typing.Text = ...
    """Name of the network resource to add peering to."""

    @property
    def networks_add_peering_request_resource(self) -> global___NetworksAddPeeringRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network : typing.Text = ...,
        networks_add_peering_request_resource : typing.Optional[global___NetworksAddPeeringRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","networks_add_peering_request_resource",b"networks_add_peering_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network",b"network","networks_add_peering_request_resource",b"networks_add_peering_request_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddPeeringNetworkRequest = AddPeeringNetworkRequest

class AddResourcePoliciesDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.AddResourcePolicies. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    DISKS_ADD_RESOURCE_POLICIES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """The disk name for this request."""

    @property
    def disks_add_resource_policies_request_resource(self) -> global___DisksAddResourcePoliciesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        disks_add_resource_policies_request_resource : typing.Optional[global___DisksAddResourcePoliciesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disks_add_resource_policies_request_resource",b"disks_add_resource_policies_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk",b"disk","disks_add_resource_policies_request_resource",b"disks_add_resource_policies_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddResourcePoliciesDiskRequest = AddResourcePoliciesDiskRequest

class AddResourcePoliciesInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.AddResourcePolicies. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    INSTANCES_ADD_RESOURCE_POLICIES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """The instance name for this request."""

    @property
    def instances_add_resource_policies_request_resource(self) -> global___InstancesAddResourcePoliciesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        instances_add_resource_policies_request_resource : typing.Optional[global___InstancesAddResourcePoliciesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instances_add_resource_policies_request_resource",b"instances_add_resource_policies_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","instances_add_resource_policies_request_resource",b"instances_add_resource_policies_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddResourcePoliciesInstanceRequest = AddResourcePoliciesInstanceRequest

class AddResourcePoliciesRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.AddResourcePolicies. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_DISKS_ADD_RESOURCE_POLICIES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """The disk name for this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    @property
    def region_disks_add_resource_policies_request_resource(self) -> global___RegionDisksAddResourcePoliciesRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_disks_add_resource_policies_request_resource : typing.Optional[global___RegionDisksAddResourcePoliciesRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_disks_add_resource_policies_request_resource",b"region_disks_add_resource_policies_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk",b"disk","project",b"project","region",b"region","region_disks_add_resource_policies_request_resource",b"region_disks_add_resource_policies_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddResourcePoliciesRegionDiskRequest = AddResourcePoliciesRegionDiskRequest

class AddRuleFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.AddRule. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    FIREWALL_POLICY_RULE_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to update."""

    @property
    def firewall_policy_rule_resource(self) -> global___FirewallPolicyRule:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        firewall_policy_rule_resource : typing.Optional[global___FirewallPolicyRule] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_policy_rule_resource",b"firewall_policy_rule_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_policy",b"firewall_policy","firewall_policy_rule_resource",b"firewall_policy_rule_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddRuleFirewallPolicyRequest = AddRuleFirewallPolicyRequest

class AddRuleSecurityPolicyRequest(google.protobuf.message.Message):
    """A request message for SecurityPolicies.AddRule. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_RULE_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    security_policy: typing.Text = ...
    """Name of the security policy to update."""

    @property
    def security_policy_rule_resource(self) -> global___SecurityPolicyRule:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        security_policy : typing.Text = ...,
        security_policy_rule_resource : typing.Optional[global___SecurityPolicyRule] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["security_policy_rule_resource",b"security_policy_rule_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","security_policy",b"security_policy","security_policy_rule_resource",b"security_policy_rule_resource"]) -> None: ...
global___AddRuleSecurityPolicyRequest = AddRuleSecurityPolicyRequest

class AddSignedUrlKeyBackendBucketRequest(google.protobuf.message.Message):
    """A request message for BackendBuckets.AddSignedUrlKey. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_BUCKET_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SIGNED_URL_KEY_RESOURCE_FIELD_NUMBER: builtins.int
    backend_bucket: typing.Text = ...
    """Name of the BackendBucket resource to which the Signed URL Key should be added. The name should conform to RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def signed_url_key_resource(self) -> global___SignedUrlKey:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        backend_bucket : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        signed_url_key_resource : typing.Optional[global___SignedUrlKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","signed_url_key_resource",b"signed_url_key_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_bucket",b"backend_bucket","project",b"project","request_id",b"request_id","signed_url_key_resource",b"signed_url_key_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddSignedUrlKeyBackendBucketRequest = AddSignedUrlKeyBackendBucketRequest

class AddSignedUrlKeyBackendServiceRequest(google.protobuf.message.Message):
    """A request message for BackendServices.AddSignedUrlKey. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SIGNED_URL_KEY_RESOURCE_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to which the Signed URL Key should be added. The name should conform to RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def signed_url_key_resource(self) -> global___SignedUrlKey:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        signed_url_key_resource : typing.Optional[global___SignedUrlKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","signed_url_key_resource",b"signed_url_key_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service",b"backend_service","project",b"project","request_id",b"request_id","signed_url_key_resource",b"signed_url_key_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AddSignedUrlKeyBackendServiceRequest = AddSignedUrlKeyBackendServiceRequest

class Address(google.protobuf.message.Message):
    """Represents an IP Address resource. Google Compute Engine has two IP Address resources: * [Global (external and internal)](https://cloud.google.com/compute/docs/reference/rest/v1/globalAddresses) * [Regional (external and internal)](https://cloud.google.com/compute/docs/reference/rest/v1/addresses) For more information, see Reserving a static external IP address."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AddressType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AddressTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AddressType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ADDRESS_TYPE: Address.AddressType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        EXTERNAL: Address.AddressType.ValueType = ...  # 35607499
        """A publicly visible external IP address."""

        INTERNAL: Address.AddressType.ValueType = ...  # 279295677
        """A private network IP address, for use with an Instance or Internal Load Balancer forwarding rule."""

        UNSPECIFIED_TYPE: Address.AddressType.ValueType = ...  # 53933922
    class AddressType(_AddressType, metaclass=_AddressTypeEnumTypeWrapper):
        """The type of address to reserve, either INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL."""
        pass

    UNDEFINED_ADDRESS_TYPE: Address.AddressType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    EXTERNAL: Address.AddressType.ValueType = ...  # 35607499
    """A publicly visible external IP address."""

    INTERNAL: Address.AddressType.ValueType = ...  # 279295677
    """A private network IP address, for use with an Instance or Internal Load Balancer forwarding rule."""

    UNSPECIFIED_TYPE: Address.AddressType.ValueType = ...  # 53933922

    class _IpVersion:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _IpVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IpVersion.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_IP_VERSION: Address.IpVersion.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        IPV4: Address.IpVersion.ValueType = ...  # 2254341
        IPV6: Address.IpVersion.ValueType = ...  # 2254343
        UNSPECIFIED_VERSION: Address.IpVersion.ValueType = ...  # 21850000
    class IpVersion(_IpVersion, metaclass=_IpVersionEnumTypeWrapper):
        """The IP version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address."""
        pass

    UNDEFINED_IP_VERSION: Address.IpVersion.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    IPV4: Address.IpVersion.ValueType = ...  # 2254341
    IPV6: Address.IpVersion.ValueType = ...  # 2254343
    UNSPECIFIED_VERSION: Address.IpVersion.ValueType = ...  # 21850000

    class _NetworkTier:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NetworkTierEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NetworkTier.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_NETWORK_TIER: Address.NetworkTier.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        PREMIUM: Address.NetworkTier.ValueType = ...  # 399530551
        """High quality, Google-grade network tier, support for all networking products."""

        STANDARD: Address.NetworkTier.ValueType = ...  # 484642493
        """Public internet quality, only limited support for other networking products."""

    class NetworkTier(_NetworkTier, metaclass=_NetworkTierEnumTypeWrapper):
        """This signifies the networking tier used for configuring this address and can only take the following values: PREMIUM or STANDARD. Internal IP addresses are always Premium Tier; global external IP addresses are always Premium Tier; regional external IP addresses can be either Standard or Premium Tier. If this field is not specified, it is assumed to be PREMIUM."""
        pass

    UNDEFINED_NETWORK_TIER: Address.NetworkTier.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    PREMIUM: Address.NetworkTier.ValueType = ...  # 399530551
    """High quality, Google-grade network tier, support for all networking products."""

    STANDARD: Address.NetworkTier.ValueType = ...  # 484642493
    """Public internet quality, only limited support for other networking products."""


    class _Purpose:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PurposeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Purpose.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PURPOSE: Address.Purpose.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DNS_RESOLVER: Address.Purpose.ValueType = ...  # 476114556
        """DNS resolver address in the subnetwork."""

        GCE_ENDPOINT: Address.Purpose.ValueType = ...  # 230515243
        """VM internal/alias IP, Internal LB service IP, etc."""

        IPSEC_INTERCONNECT: Address.Purpose.ValueType = ...  # 340437251
        """A regional internal IP address range reserved for the VLAN attachment that is used in IPsec-encrypted Cloud Interconnect. This regional internal IP address range must not overlap with any IP address range of subnet/route in the VPC network and its peering networks. After the VLAN attachment is created with the reserved IP address range, when creating a new VPN gateway, its interface IP address is allocated from the associated VLAN attachment’s IP address range."""

        NAT_AUTO: Address.Purpose.ValueType = ...  # 163666477
        """External IP automatically reserved for Cloud NAT."""

        PRIVATE_SERVICE_CONNECT: Address.Purpose.ValueType = ...  # 48134724
        """A private network IP address that can be used to configure Private Service Connect. This purpose can be specified only for GLOBAL addresses of Type INTERNAL"""

        SHARED_LOADBALANCER_VIP: Address.Purpose.ValueType = ...  # 294447572
        """A private network IP address that can be shared by multiple Internal Load Balancer forwarding rules."""

        VPC_PEERING: Address.Purpose.ValueType = ...  # 400800170
        """IP range for peer networks."""

    class Purpose(_Purpose, metaclass=_PurposeEnumTypeWrapper):
        """The purpose of this resource, which can be one of the following values: - GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges, load balancers, and similar resources. - DNS_RESOLVER for a DNS resolver address in a subnetwork for a Cloud DNS inbound forwarder IP addresses (regional internal IP address in a subnet of a VPC network) - VPC_PEERING for global internal IP addresses used for private services access allocated ranges. - NAT_AUTO for the regional external IP addresses used by Cloud NAT when allocating addresses using . - IPSEC_INTERCONNECT for addresses created from a private IP range that are reserved for a VLAN attachment in an *IPsec-encrypted Cloud Interconnect* configuration. These addresses are regional resources. Not currently available publicly. - `SHARED_LOADBALANCER_VIP` for an internal IP address that is assigned to multiple internal forwarding rules. - `PRIVATE_SERVICE_CONNECT` for a private network address that is used to configure Private Service Connect. Only global internal addresses can use this purpose."""
        pass

    UNDEFINED_PURPOSE: Address.Purpose.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DNS_RESOLVER: Address.Purpose.ValueType = ...  # 476114556
    """DNS resolver address in the subnetwork."""

    GCE_ENDPOINT: Address.Purpose.ValueType = ...  # 230515243
    """VM internal/alias IP, Internal LB service IP, etc."""

    IPSEC_INTERCONNECT: Address.Purpose.ValueType = ...  # 340437251
    """A regional internal IP address range reserved for the VLAN attachment that is used in IPsec-encrypted Cloud Interconnect. This regional internal IP address range must not overlap with any IP address range of subnet/route in the VPC network and its peering networks. After the VLAN attachment is created with the reserved IP address range, when creating a new VPN gateway, its interface IP address is allocated from the associated VLAN attachment’s IP address range."""

    NAT_AUTO: Address.Purpose.ValueType = ...  # 163666477
    """External IP automatically reserved for Cloud NAT."""

    PRIVATE_SERVICE_CONNECT: Address.Purpose.ValueType = ...  # 48134724
    """A private network IP address that can be used to configure Private Service Connect. This purpose can be specified only for GLOBAL addresses of Type INTERNAL"""

    SHARED_LOADBALANCER_VIP: Address.Purpose.ValueType = ...  # 294447572
    """A private network IP address that can be shared by multiple Internal Load Balancer forwarding rules."""

    VPC_PEERING: Address.Purpose.ValueType = ...  # 400800170
    """IP range for peer networks."""


    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Address.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        IN_USE: Address.Status.ValueType = ...  # 17393485
        """Address is being used by another resource and is not available."""

        RESERVED: Address.Status.ValueType = ...  # 432241448
        """Address is reserved and available to use."""

        RESERVING: Address.Status.ValueType = ...  # 514587225
        """Address is being reserved."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the address, which can be one of RESERVING, RESERVED, or IN_USE. An address that is RESERVING is currently in the process of being reserved. A RESERVED address is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available."""
        pass

    UNDEFINED_STATUS: Address.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    IN_USE: Address.Status.ValueType = ...  # 17393485
    """Address is being used by another resource and is not available."""

    RESERVED: Address.Status.ValueType = ...  # 432241448
    """Address is reserved and available to use."""

    RESERVING: Address.Status.ValueType = ...  # 514587225
    """Address is being reserved."""


    ADDRESS_FIELD_NUMBER: builtins.int
    ADDRESS_TYPE_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    IP_VERSION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    NETWORK_TIER_FIELD_NUMBER: builtins.int
    PREFIX_LENGTH_FIELD_NUMBER: builtins.int
    PURPOSE_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    USERS_FIELD_NUMBER: builtins.int
    address: typing.Text = ...
    """The static IP address represented by this resource."""

    address_type: typing.Text = ...
    """The type of address to reserve, either INTERNAL or EXTERNAL. If unspecified, defaults to EXTERNAL.
    Check the AddressType enum for the list of possible values.
    """

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this field when you create the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    ip_version: typing.Text = ...
    """The IP version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address.
    Check the IpVersion enum for the list of possible values.
    """

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#address for addresses."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit."""

    network: typing.Text = ...
    """The URL of the network in which to reserve the address. This field can only be used with INTERNAL type with the VPC_PEERING purpose."""

    network_tier: typing.Text = ...
    """This signifies the networking tier used for configuring this address and can only take the following values: PREMIUM or STANDARD. Internal IP addresses are always Premium Tier; global external IP addresses are always Premium Tier; regional external IP addresses can be either Standard or Premium Tier. If this field is not specified, it is assumed to be PREMIUM.
    Check the NetworkTier enum for the list of possible values.
    """

    prefix_length: builtins.int = ...
    """The prefix length if the resource represents an IP range."""

    purpose: typing.Text = ...
    """The purpose of this resource, which can be one of the following values: - GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges, load balancers, and similar resources. - DNS_RESOLVER for a DNS resolver address in a subnetwork for a Cloud DNS inbound forwarder IP addresses (regional internal IP address in a subnet of a VPC network) - VPC_PEERING for global internal IP addresses used for private services access allocated ranges. - NAT_AUTO for the regional external IP addresses used by Cloud NAT when allocating addresses using . - IPSEC_INTERCONNECT for addresses created from a private IP range that are reserved for a VLAN attachment in an *IPsec-encrypted Cloud Interconnect* configuration. These addresses are regional resources. Not currently available publicly. - `SHARED_LOADBALANCER_VIP` for an internal IP address that is assigned to multiple internal forwarding rules. - `PRIVATE_SERVICE_CONNECT` for a private network address that is used to configure Private Service Connect. Only global internal addresses can use this purpose.
    Check the Purpose enum for the list of possible values.
    """

    region: typing.Text = ...
    """[Output Only] The URL of the region where a regional address resides. For regional addresses, you must specify the region as a path parameter in the HTTP request URL. *This field is not applicable to global addresses.*"""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    status: typing.Text = ...
    """[Output Only] The status of the address, which can be one of RESERVING, RESERVED, or IN_USE. An address that is RESERVING is currently in the process of being reserved. A RESERVED address is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.
    Check the Status enum for the list of possible values.
    """

    subnetwork: typing.Text = ...
    """The URL of the subnetwork in which to reserve the address. If an IP address is specified, it must be within the subnetwork's IP range. This field can only be used with INTERNAL type with a GCE_ENDPOINT or DNS_RESOLVER purpose."""

    @property
    def users(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] The URLs of the resources that are using this address."""
        pass
    def __init__(self,
        *,
        address : typing.Optional[typing.Text] = ...,
        address_type : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        ip_version : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        network_tier : typing.Optional[typing.Text] = ...,
        prefix_length : typing.Optional[builtins.int] = ...,
        purpose : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        subnetwork : typing.Optional[typing.Text] = ...,
        users : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_address",b"_address","_address_type",b"_address_type","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_ip_version",b"_ip_version","_kind",b"_kind","_name",b"_name","_network",b"_network","_network_tier",b"_network_tier","_prefix_length",b"_prefix_length","_purpose",b"_purpose","_region",b"_region","_self_link",b"_self_link","_status",b"_status","_subnetwork",b"_subnetwork","address",b"address","address_type",b"address_type","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","ip_version",b"ip_version","kind",b"kind","name",b"name","network",b"network","network_tier",b"network_tier","prefix_length",b"prefix_length","purpose",b"purpose","region",b"region","self_link",b"self_link","status",b"status","subnetwork",b"subnetwork"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_address",b"_address","_address_type",b"_address_type","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_ip_version",b"_ip_version","_kind",b"_kind","_name",b"_name","_network",b"_network","_network_tier",b"_network_tier","_prefix_length",b"_prefix_length","_purpose",b"_purpose","_region",b"_region","_self_link",b"_self_link","_status",b"_status","_subnetwork",b"_subnetwork","address",b"address","address_type",b"address_type","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","ip_version",b"ip_version","kind",b"kind","name",b"name","network",b"network","network_tier",b"network_tier","prefix_length",b"prefix_length","purpose",b"purpose","region",b"region","self_link",b"self_link","status",b"status","subnetwork",b"subnetwork","users",b"users"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_address",b"_address"]) -> typing.Optional[typing_extensions.Literal["address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_address_type",b"_address_type"]) -> typing.Optional[typing_extensions.Literal["address_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_version",b"_ip_version"]) -> typing.Optional[typing_extensions.Literal["ip_version"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_tier",b"_network_tier"]) -> typing.Optional[typing_extensions.Literal["network_tier"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_prefix_length",b"_prefix_length"]) -> typing.Optional[typing_extensions.Literal["prefix_length"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_purpose",b"_purpose"]) -> typing.Optional[typing_extensions.Literal["purpose"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_subnetwork",b"_subnetwork"]) -> typing.Optional[typing_extensions.Literal["subnetwork"]]: ...
global___Address = Address

class AddressAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___AddressesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___AddressesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___AddressesScopedList]:
        """A list of AddressesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#addressAggregatedList for aggregated lists of addresses."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___AddressesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___AddressAggregatedList = AddressAggregatedList

class AddressList(google.protobuf.message.Message):
    """Contains a list of addresses."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Address]:
        """A list of Address resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#addressList for lists of addresses."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Address]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___AddressList = AddressList

class AddressesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ADDRESSES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def addresses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Address]:
        """[Output Only] A list of addresses contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning which replaces the list of addresses when the list is empty."""
        pass
    def __init__(self,
        *,
        addresses : typing.Optional[typing.Iterable[global___Address]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","addresses",b"addresses","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___AddressesScopedList = AddressesScopedList

class AdvancedMachineFeatures(google.protobuf.message.Message):
    """Specifies options for controlling advanced machine features. Options that would traditionally be configured in a BIOS belong here. Features that require operating system support may have corresponding entries in the GuestOsFeatures of an Image (e.g., whether or not the OS in the Image supports nested virtualization being enabled or disabled)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_NESTED_VIRTUALIZATION_FIELD_NUMBER: builtins.int
    THREADS_PER_CORE_FIELD_NUMBER: builtins.int
    enable_nested_virtualization: builtins.bool = ...
    """Whether to enable nested virtualization or not (default is false)."""

    threads_per_core: builtins.int = ...
    """The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed."""

    def __init__(self,
        *,
        enable_nested_virtualization : typing.Optional[builtins.bool] = ...,
        threads_per_core : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enable_nested_virtualization",b"_enable_nested_virtualization","_threads_per_core",b"_threads_per_core","enable_nested_virtualization",b"enable_nested_virtualization","threads_per_core",b"threads_per_core"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enable_nested_virtualization",b"_enable_nested_virtualization","_threads_per_core",b"_threads_per_core","enable_nested_virtualization",b"enable_nested_virtualization","threads_per_core",b"threads_per_core"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_nested_virtualization",b"_enable_nested_virtualization"]) -> typing.Optional[typing_extensions.Literal["enable_nested_virtualization"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_threads_per_core",b"_threads_per_core"]) -> typing.Optional[typing_extensions.Literal["threads_per_core"]]: ...
global___AdvancedMachineFeatures = AdvancedMachineFeatures

class AggregatedListAcceleratorTypesRequest(google.protobuf.message.Message):
    """A request message for AcceleratorTypes.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListAcceleratorTypesRequest = AggregatedListAcceleratorTypesRequest

class AggregatedListAddressesRequest(google.protobuf.message.Message):
    """A request message for Addresses.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListAddressesRequest = AggregatedListAddressesRequest

class AggregatedListAutoscalersRequest(google.protobuf.message.Message):
    """A request message for Autoscalers.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListAutoscalersRequest = AggregatedListAutoscalersRequest

class AggregatedListBackendServicesRequest(google.protobuf.message.Message):
    """A request message for BackendServices.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Name of the project scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListBackendServicesRequest = AggregatedListBackendServicesRequest

class AggregatedListDiskTypesRequest(google.protobuf.message.Message):
    """A request message for DiskTypes.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListDiskTypesRequest = AggregatedListDiskTypesRequest

class AggregatedListDisksRequest(google.protobuf.message.Message):
    """A request message for Disks.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListDisksRequest = AggregatedListDisksRequest

class AggregatedListForwardingRulesRequest(google.protobuf.message.Message):
    """A request message for ForwardingRules.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListForwardingRulesRequest = AggregatedListForwardingRulesRequest

class AggregatedListGlobalOperationsRequest(google.protobuf.message.Message):
    """A request message for GlobalOperations.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListGlobalOperationsRequest = AggregatedListGlobalOperationsRequest

class AggregatedListHealthChecksRequest(google.protobuf.message.Message):
    """A request message for HealthChecks.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Name of the project scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListHealthChecksRequest = AggregatedListHealthChecksRequest

class AggregatedListInstanceGroupManagersRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListInstanceGroupManagersRequest = AggregatedListInstanceGroupManagersRequest

class AggregatedListInstanceGroupsRequest(google.protobuf.message.Message):
    """A request message for InstanceGroups.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListInstanceGroupsRequest = AggregatedListInstanceGroupsRequest

class AggregatedListInstancesRequest(google.protobuf.message.Message):
    """A request message for Instances.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListInstancesRequest = AggregatedListInstancesRequest

class AggregatedListInterconnectAttachmentsRequest(google.protobuf.message.Message):
    """A request message for InterconnectAttachments.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListInterconnectAttachmentsRequest = AggregatedListInterconnectAttachmentsRequest

class AggregatedListMachineTypesRequest(google.protobuf.message.Message):
    """A request message for MachineTypes.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListMachineTypesRequest = AggregatedListMachineTypesRequest

class AggregatedListNetworkEndpointGroupsRequest(google.protobuf.message.Message):
    """A request message for NetworkEndpointGroups.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListNetworkEndpointGroupsRequest = AggregatedListNetworkEndpointGroupsRequest

class AggregatedListNodeGroupsRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListNodeGroupsRequest = AggregatedListNodeGroupsRequest

class AggregatedListNodeTemplatesRequest(google.protobuf.message.Message):
    """A request message for NodeTemplates.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListNodeTemplatesRequest = AggregatedListNodeTemplatesRequest

class AggregatedListNodeTypesRequest(google.protobuf.message.Message):
    """A request message for NodeTypes.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListNodeTypesRequest = AggregatedListNodeTypesRequest

class AggregatedListPacketMirroringsRequest(google.protobuf.message.Message):
    """A request message for PacketMirrorings.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListPacketMirroringsRequest = AggregatedListPacketMirroringsRequest

class AggregatedListPublicDelegatedPrefixesRequest(google.protobuf.message.Message):
    """A request message for PublicDelegatedPrefixes.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Name of the project scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListPublicDelegatedPrefixesRequest = AggregatedListPublicDelegatedPrefixesRequest

class AggregatedListRegionCommitmentsRequest(google.protobuf.message.Message):
    """A request message for RegionCommitments.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListRegionCommitmentsRequest = AggregatedListRegionCommitmentsRequest

class AggregatedListReservationsRequest(google.protobuf.message.Message):
    """A request message for Reservations.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListReservationsRequest = AggregatedListReservationsRequest

class AggregatedListResourcePoliciesRequest(google.protobuf.message.Message):
    """A request message for ResourcePolicies.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListResourcePoliciesRequest = AggregatedListResourcePoliciesRequest

class AggregatedListRoutersRequest(google.protobuf.message.Message):
    """A request message for Routers.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListRoutersRequest = AggregatedListRoutersRequest

class AggregatedListServiceAttachmentsRequest(google.protobuf.message.Message):
    """A request message for ServiceAttachments.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Name of the project scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListServiceAttachmentsRequest = AggregatedListServiceAttachmentsRequest

class AggregatedListSslCertificatesRequest(google.protobuf.message.Message):
    """A request message for SslCertificates.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Name of the project scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListSslCertificatesRequest = AggregatedListSslCertificatesRequest

class AggregatedListSubnetworksRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListSubnetworksRequest = AggregatedListSubnetworksRequest

class AggregatedListTargetHttpProxiesRequest(google.protobuf.message.Message):
    """A request message for TargetHttpProxies.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Name of the project scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListTargetHttpProxiesRequest = AggregatedListTargetHttpProxiesRequest

class AggregatedListTargetHttpsProxiesRequest(google.protobuf.message.Message):
    """A request message for TargetHttpsProxies.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Name of the project scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListTargetHttpsProxiesRequest = AggregatedListTargetHttpsProxiesRequest

class AggregatedListTargetInstancesRequest(google.protobuf.message.Message):
    """A request message for TargetInstances.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListTargetInstancesRequest = AggregatedListTargetInstancesRequest

class AggregatedListTargetPoolsRequest(google.protobuf.message.Message):
    """A request message for TargetPools.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListTargetPoolsRequest = AggregatedListTargetPoolsRequest

class AggregatedListTargetVpnGatewaysRequest(google.protobuf.message.Message):
    """A request message for TargetVpnGateways.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListTargetVpnGatewaysRequest = AggregatedListTargetVpnGatewaysRequest

class AggregatedListUrlMapsRequest(google.protobuf.message.Message):
    """A request message for UrlMaps.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Name of the project scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListUrlMapsRequest = AggregatedListUrlMapsRequest

class AggregatedListVpnGatewaysRequest(google.protobuf.message.Message):
    """A request message for VpnGateways.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListVpnGatewaysRequest = AggregatedListVpnGatewaysRequest

class AggregatedListVpnTunnelsRequest(google.protobuf.message.Message):
    """A request message for VpnTunnels.AggregatedList. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INCLUDE_ALL_SCOPES_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    include_all_scopes: builtins.bool = ...
    """Indicates whether every visible scope for each scope type (zone, region, global) should be included in the response. For new resource types added after this field, the flag has no effect as new resource types will always include every visible scope for each scope type in response. For resource types which predate this field, if this flag is omitted or false, only scopes of the scope types where the resource type is expected to be found will be included."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        include_all_scopes : typing.Optional[builtins.bool] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_include_all_scopes",b"_include_all_scopes","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","include_all_scopes",b"include_all_scopes","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_all_scopes",b"_include_all_scopes"]) -> typing.Optional[typing_extensions.Literal["include_all_scopes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___AggregatedListVpnTunnelsRequest = AggregatedListVpnTunnelsRequest

class AliasIpRange(google.protobuf.message.Message):
    """An alias IP range attached to an instance's network interface."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    SUBNETWORK_RANGE_NAME_FIELD_NUMBER: builtins.int
    ip_cidr_range: typing.Text = ...
    """The IP alias ranges to allocate for this interface. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (such as 10.2.3.4), a netmask (such as /24) or a CIDR-formatted string (such as 10.1.2.0/24)."""

    subnetwork_range_name: typing.Text = ...
    """The name of a subnetwork secondary IP range from which to allocate an IP alias range. If not specified, the primary range of the subnetwork is used."""

    def __init__(self,
        *,
        ip_cidr_range : typing.Optional[typing.Text] = ...,
        subnetwork_range_name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range","_subnetwork_range_name",b"_subnetwork_range_name","ip_cidr_range",b"ip_cidr_range","subnetwork_range_name",b"subnetwork_range_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range","_subnetwork_range_name",b"_subnetwork_range_name","ip_cidr_range",b"ip_cidr_range","subnetwork_range_name",b"subnetwork_range_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range"]) -> typing.Optional[typing_extensions.Literal["ip_cidr_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_subnetwork_range_name",b"_subnetwork_range_name"]) -> typing.Optional[typing_extensions.Literal["subnetwork_range_name"]]: ...
global___AliasIpRange = AliasIpRange

class AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Interface:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InterfaceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Interface.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_INTERFACE: AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk.Interface.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NVME: AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk.Interface.ValueType = ...  # 2408800
        SCSI: AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk.Interface.ValueType = ...  # 2539686
    class Interface(_Interface, metaclass=_InterfaceEnumTypeWrapper):
        """Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance."""
        pass

    UNDEFINED_INTERFACE: AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk.Interface.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NVME: AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk.Interface.ValueType = ...  # 2408800
    SCSI: AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk.Interface.ValueType = ...  # 2539686

    DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    INTERFACE_FIELD_NUMBER: builtins.int
    disk_size_gb: builtins.int = ...
    """Specifies the size of the disk in base-2 GB."""

    interface: typing.Text = ...
    """Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
    Check the Interface enum for the list of possible values.
    """

    def __init__(self,
        *,
        disk_size_gb : typing.Optional[builtins.int] = ...,
        interface : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_disk_size_gb",b"_disk_size_gb","_interface",b"_interface","disk_size_gb",b"disk_size_gb","interface",b"interface"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_disk_size_gb",b"_disk_size_gb","_interface",b"_interface","disk_size_gb",b"disk_size_gb","interface",b"interface"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_size_gb",b"_disk_size_gb"]) -> typing.Optional[typing_extensions.Literal["disk_size_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_interface",b"_interface"]) -> typing.Optional[typing_extensions.Literal["interface"]]: ...
global___AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk = AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk

class AllocationSpecificSKUAllocationReservedInstanceProperties(google.protobuf.message.Message):
    """Properties of the SKU instances being reserved. Next ID: 9"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUEST_ACCELERATORS_FIELD_NUMBER: builtins.int
    LOCAL_SSDS_FIELD_NUMBER: builtins.int
    LOCATION_HINT_FIELD_NUMBER: builtins.int
    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    MIN_CPU_PLATFORM_FIELD_NUMBER: builtins.int
    @property
    def guest_accelerators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AcceleratorConfig]:
        """Specifies accelerator type and count."""
        pass
    @property
    def local_ssds(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk]:
        """Specifies amount of local ssd to reserve with each instance. The type of disk is local-ssd."""
        pass
    location_hint: typing.Text = ...
    """An opaque location hint used to place the allocation close to other resources. This field is for use by internal tools that use the public API."""

    machine_type: typing.Text = ...
    """Specifies type of machine (name only) which has fixed number of vCPUs and fixed amount of memory. This also includes specifying custom machine type following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern."""

    min_cpu_platform: typing.Text = ...
    """Minimum cpu platform the reservation."""

    def __init__(self,
        *,
        guest_accelerators : typing.Optional[typing.Iterable[global___AcceleratorConfig]] = ...,
        local_ssds : typing.Optional[typing.Iterable[global___AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk]] = ...,
        location_hint : typing.Optional[typing.Text] = ...,
        machine_type : typing.Optional[typing.Text] = ...,
        min_cpu_platform : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_location_hint",b"_location_hint","_machine_type",b"_machine_type","_min_cpu_platform",b"_min_cpu_platform","location_hint",b"location_hint","machine_type",b"machine_type","min_cpu_platform",b"min_cpu_platform"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_location_hint",b"_location_hint","_machine_type",b"_machine_type","_min_cpu_platform",b"_min_cpu_platform","guest_accelerators",b"guest_accelerators","local_ssds",b"local_ssds","location_hint",b"location_hint","machine_type",b"machine_type","min_cpu_platform",b"min_cpu_platform"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_location_hint",b"_location_hint"]) -> typing.Optional[typing_extensions.Literal["location_hint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_machine_type",b"_machine_type"]) -> typing.Optional[typing_extensions.Literal["machine_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_cpu_platform",b"_min_cpu_platform"]) -> typing.Optional[typing_extensions.Literal["min_cpu_platform"]]: ...
global___AllocationSpecificSKUAllocationReservedInstanceProperties = AllocationSpecificSKUAllocationReservedInstanceProperties

class AllocationSpecificSKUReservation(google.protobuf.message.Message):
    """This reservation type allows to pre allocate specific instance configuration. Next ID: 5"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COUNT_FIELD_NUMBER: builtins.int
    IN_USE_COUNT_FIELD_NUMBER: builtins.int
    INSTANCE_PROPERTIES_FIELD_NUMBER: builtins.int
    count: builtins.int = ...
    """Specifies the number of resources that are allocated."""

    in_use_count: builtins.int = ...
    """[Output Only] Indicates how many instances are in use."""

    @property
    def instance_properties(self) -> global___AllocationSpecificSKUAllocationReservedInstanceProperties:
        """The instance properties for the reservation."""
        pass
    def __init__(self,
        *,
        count : typing.Optional[builtins.int] = ...,
        in_use_count : typing.Optional[builtins.int] = ...,
        instance_properties : typing.Optional[global___AllocationSpecificSKUAllocationReservedInstanceProperties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_count",b"_count","_in_use_count",b"_in_use_count","_instance_properties",b"_instance_properties","count",b"count","in_use_count",b"in_use_count","instance_properties",b"instance_properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_count",b"_count","_in_use_count",b"_in_use_count","_instance_properties",b"_instance_properties","count",b"count","in_use_count",b"in_use_count","instance_properties",b"instance_properties"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_count",b"_count"]) -> typing.Optional[typing_extensions.Literal["count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_in_use_count",b"_in_use_count"]) -> typing.Optional[typing_extensions.Literal["in_use_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_properties",b"_instance_properties"]) -> typing.Optional[typing_extensions.Literal["instance_properties"]]: ...
global___AllocationSpecificSKUReservation = AllocationSpecificSKUReservation

class Allowed(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    I_P_PROTOCOL_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    I_p_protocol: typing.Text = ...
    """The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp) or the IP protocol number."""

    @property
    def ports(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An optional list of ports to which this rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]."""
        pass
    def __init__(self,
        *,
        I_p_protocol : typing.Optional[typing.Text] = ...,
        ports : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["I_p_protocol",b"I_p_protocol","_I_p_protocol",b"_I_p_protocol"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["I_p_protocol",b"I_p_protocol","_I_p_protocol",b"_I_p_protocol","ports",b"ports"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_I_p_protocol",b"_I_p_protocol"]) -> typing.Optional[typing_extensions.Literal["I_p_protocol"]]: ...
global___Allowed = Allowed

class ApplyUpdatesToInstancesInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.ApplyUpdatesToInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGERS_APPLY_UPDATES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group, should conform to RFC1035."""

    @property
    def instance_group_managers_apply_updates_request_resource(self) -> global___InstanceGroupManagersApplyUpdatesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located. Should conform to RFC1035."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_managers_apply_updates_request_resource : typing.Optional[global___InstanceGroupManagersApplyUpdatesRequest] = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["instance_group_managers_apply_updates_request_resource",b"instance_group_managers_apply_updates_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_group_manager",b"instance_group_manager","instance_group_managers_apply_updates_request_resource",b"instance_group_managers_apply_updates_request_resource","project",b"project","zone",b"zone"]) -> None: ...
global___ApplyUpdatesToInstancesInstanceGroupManagerRequest = ApplyUpdatesToInstancesInstanceGroupManagerRequest

class ApplyUpdatesToInstancesRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.ApplyUpdatesToInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUP_MANAGERS_APPLY_UPDATES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group, should conform to RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request, should conform to RFC1035."""

    @property
    def region_instance_group_managers_apply_updates_request_resource(self) -> global___RegionInstanceGroupManagersApplyUpdatesRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_group_managers_apply_updates_request_resource : typing.Optional[global___RegionInstanceGroupManagersApplyUpdatesRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["region_instance_group_managers_apply_updates_request_resource",b"region_instance_group_managers_apply_updates_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","region_instance_group_managers_apply_updates_request_resource",b"region_instance_group_managers_apply_updates_request_resource"]) -> None: ...
global___ApplyUpdatesToInstancesRegionInstanceGroupManagerRequest = ApplyUpdatesToInstancesRegionInstanceGroupManagerRequest

class AttachDiskInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.AttachDisk. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ATTACHED_DISK_RESOURCE_FIELD_NUMBER: builtins.int
    FORCE_ATTACH_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def attached_disk_resource(self) -> global___AttachedDisk:
        """The body resource for this request"""
        pass
    force_attach: builtins.bool = ...
    """Whether to force attach the regional disk even if it's currently attached to another instance. If you try to force attach a zonal disk to an instance, you will receive an error."""

    instance: typing.Text = ...
    """The instance name for this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        attached_disk_resource : typing.Optional[global___AttachedDisk] = ...,
        force_attach : typing.Optional[builtins.bool] = ...,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_force_attach",b"_force_attach","_request_id",b"_request_id","attached_disk_resource",b"attached_disk_resource","force_attach",b"force_attach","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_force_attach",b"_force_attach","_request_id",b"_request_id","attached_disk_resource",b"attached_disk_resource","force_attach",b"force_attach","instance",b"instance","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_force_attach",b"_force_attach"]) -> typing.Optional[typing_extensions.Literal["force_attach"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AttachDiskInstanceRequest = AttachDiskInstanceRequest

class AttachNetworkEndpointsGlobalNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for GlobalNetworkEndpointGroups.AttachNetworkEndpoints. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_NETWORK_ENDPOINT_GROUPS_ATTACH_ENDPOINTS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def global_network_endpoint_groups_attach_endpoints_request_resource(self) -> global___GlobalNetworkEndpointGroupsAttachEndpointsRequest:
        """The body resource for this request"""
        pass
    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group where you are attaching network endpoints to. It should comply with RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        global_network_endpoint_groups_attach_endpoints_request_resource : typing.Optional[global___GlobalNetworkEndpointGroupsAttachEndpointsRequest] = ...,
        network_endpoint_group : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","global_network_endpoint_groups_attach_endpoints_request_resource",b"global_network_endpoint_groups_attach_endpoints_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","global_network_endpoint_groups_attach_endpoints_request_resource",b"global_network_endpoint_groups_attach_endpoints_request_resource","network_endpoint_group",b"network_endpoint_group","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AttachNetworkEndpointsGlobalNetworkEndpointGroupRequest = AttachNetworkEndpointsGlobalNetworkEndpointGroupRequest

class AttachNetworkEndpointsNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for NetworkEndpointGroups.AttachNetworkEndpoints. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    NETWORK_ENDPOINT_GROUPS_ATTACH_ENDPOINTS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group where you are attaching network endpoints to. It should comply with RFC1035."""

    @property
    def network_endpoint_groups_attach_endpoints_request_resource(self) -> global___NetworkEndpointGroupsAttachEndpointsRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the network endpoint group is located. It should comply with RFC1035."""

    def __init__(self,
        *,
        network_endpoint_group : typing.Text = ...,
        network_endpoint_groups_attach_endpoints_request_resource : typing.Optional[global___NetworkEndpointGroupsAttachEndpointsRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_groups_attach_endpoints_request_resource",b"network_endpoint_groups_attach_endpoints_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group",b"network_endpoint_group","network_endpoint_groups_attach_endpoints_request_resource",b"network_endpoint_groups_attach_endpoints_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___AttachNetworkEndpointsNetworkEndpointGroupRequest = AttachNetworkEndpointsNetworkEndpointGroupRequest

class AttachedDisk(google.protobuf.message.Message):
    """An instance-attached disk resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Interface:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InterfaceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Interface.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_INTERFACE: AttachedDisk.Interface.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NVME: AttachedDisk.Interface.ValueType = ...  # 2408800
        SCSI: AttachedDisk.Interface.ValueType = ...  # 2539686
    class Interface(_Interface, metaclass=_InterfaceEnumTypeWrapper):
        """Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance."""
        pass

    UNDEFINED_INTERFACE: AttachedDisk.Interface.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NVME: AttachedDisk.Interface.ValueType = ...  # 2408800
    SCSI: AttachedDisk.Interface.ValueType = ...  # 2539686

    class _Mode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_MODE: AttachedDisk.Mode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        READ_ONLY: AttachedDisk.Mode.ValueType = ...  # 91950261
        """Attaches this disk in read-only mode. Multiple virtual machines can use a disk in read-only mode at a time."""

        READ_WRITE: AttachedDisk.Mode.ValueType = ...  # 173607894
        """*[Default]* Attaches this disk in read-write mode. Only one virtual machine at a time can be attached to a disk in read-write mode."""

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper):
        """The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode."""
        pass

    UNDEFINED_MODE: AttachedDisk.Mode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    READ_ONLY: AttachedDisk.Mode.ValueType = ...  # 91950261
    """Attaches this disk in read-only mode. Multiple virtual machines can use a disk in read-only mode at a time."""

    READ_WRITE: AttachedDisk.Mode.ValueType = ...  # 173607894
    """*[Default]* Attaches this disk in read-write mode. Only one virtual machine at a time can be attached to a disk in read-write mode."""


    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: AttachedDisk.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        PERSISTENT: AttachedDisk.Type.ValueType = ...  # 460683927
        SCRATCH: AttachedDisk.Type.ValueType = ...  # 496778970
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT."""
        pass

    UNDEFINED_TYPE: AttachedDisk.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    PERSISTENT: AttachedDisk.Type.ValueType = ...  # 460683927
    SCRATCH: AttachedDisk.Type.ValueType = ...  # 496778970

    AUTO_DELETE_FIELD_NUMBER: builtins.int
    BOOT_FIELD_NUMBER: builtins.int
    DEVICE_NAME_FIELD_NUMBER: builtins.int
    DISK_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    GUEST_OS_FEATURES_FIELD_NUMBER: builtins.int
    INDEX_FIELD_NUMBER: builtins.int
    INITIALIZE_PARAMS_FIELD_NUMBER: builtins.int
    INTERFACE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LICENSES_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    SHIELDED_INSTANCE_INITIAL_STATE_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    auto_delete: builtins.bool = ...
    """Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance)."""

    boot: builtins.bool = ...
    """Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem."""

    device_name: typing.Text = ...
    """Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks."""

    @property
    def disk_encryption_key(self) -> global___CustomerEncryptionKey:
        """Encrypts or decrypts a disk using a customer-supplied encryption key. If you are creating a new disk, this field encrypts the new disk using an encryption key that you provide. If you are attaching an existing disk that is already encrypted, this field decrypts the disk using the customer-supplied encryption key. If you encrypt a disk using a customer-supplied key, you must provide the same key again when you attempt to use this resource at a later time. For example, you must provide the key when you create a snapshot or an image from the disk or when you attach the disk to a virtual machine instance. If you do not provide an encryption key, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later. Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt disks in a managed instance group."""
        pass
    disk_size_gb: builtins.int = ...
    """The size of the disk in GB."""

    @property
    def guest_os_features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GuestOsFeature]:
        """A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options."""
        pass
    index: builtins.int = ...
    """[Output Only] A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number."""

    @property
    def initialize_params(self) -> global___AttachedDiskInitializeParams:
        """[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both."""
        pass
    interface: typing.Text = ...
    """Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
    Check the Interface enum for the list of possible values.
    """

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#attachedDisk for attached disks."""

    @property
    def licenses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Any valid publicly visible licenses."""
        pass
    mode: typing.Text = ...
    """The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
    Check the Mode enum for the list of possible values.
    """

    @property
    def shielded_instance_initial_state(self) -> global___InitialStateConfig:
        """[Output Only] shielded vm initial state stored on disk"""
        pass
    source: typing.Text = ...
    """Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or initializeParams.sourceSnapshot or disks.source is required except for local SSD. If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks. Note that for InstanceTemplate, specify the disk name, not the URL for the disk."""

    type: typing.Text = ...
    """Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        auto_delete : typing.Optional[builtins.bool] = ...,
        boot : typing.Optional[builtins.bool] = ...,
        device_name : typing.Optional[typing.Text] = ...,
        disk_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        disk_size_gb : typing.Optional[builtins.int] = ...,
        guest_os_features : typing.Optional[typing.Iterable[global___GuestOsFeature]] = ...,
        index : typing.Optional[builtins.int] = ...,
        initialize_params : typing.Optional[global___AttachedDiskInitializeParams] = ...,
        interface : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        licenses : typing.Optional[typing.Iterable[typing.Text]] = ...,
        mode : typing.Optional[typing.Text] = ...,
        shielded_instance_initial_state : typing.Optional[global___InitialStateConfig] = ...,
        source : typing.Optional[typing.Text] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_auto_delete",b"_auto_delete","_boot",b"_boot","_device_name",b"_device_name","_disk_encryption_key",b"_disk_encryption_key","_disk_size_gb",b"_disk_size_gb","_index",b"_index","_initialize_params",b"_initialize_params","_interface",b"_interface","_kind",b"_kind","_mode",b"_mode","_shielded_instance_initial_state",b"_shielded_instance_initial_state","_source",b"_source","_type",b"_type","auto_delete",b"auto_delete","boot",b"boot","device_name",b"device_name","disk_encryption_key",b"disk_encryption_key","disk_size_gb",b"disk_size_gb","index",b"index","initialize_params",b"initialize_params","interface",b"interface","kind",b"kind","mode",b"mode","shielded_instance_initial_state",b"shielded_instance_initial_state","source",b"source","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_auto_delete",b"_auto_delete","_boot",b"_boot","_device_name",b"_device_name","_disk_encryption_key",b"_disk_encryption_key","_disk_size_gb",b"_disk_size_gb","_index",b"_index","_initialize_params",b"_initialize_params","_interface",b"_interface","_kind",b"_kind","_mode",b"_mode","_shielded_instance_initial_state",b"_shielded_instance_initial_state","_source",b"_source","_type",b"_type","auto_delete",b"auto_delete","boot",b"boot","device_name",b"device_name","disk_encryption_key",b"disk_encryption_key","disk_size_gb",b"disk_size_gb","guest_os_features",b"guest_os_features","index",b"index","initialize_params",b"initialize_params","interface",b"interface","kind",b"kind","licenses",b"licenses","mode",b"mode","shielded_instance_initial_state",b"shielded_instance_initial_state","source",b"source","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_auto_delete",b"_auto_delete"]) -> typing.Optional[typing_extensions.Literal["auto_delete"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_boot",b"_boot"]) -> typing.Optional[typing_extensions.Literal["boot"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_device_name",b"_device_name"]) -> typing.Optional[typing_extensions.Literal["device_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_encryption_key",b"_disk_encryption_key"]) -> typing.Optional[typing_extensions.Literal["disk_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_size_gb",b"_disk_size_gb"]) -> typing.Optional[typing_extensions.Literal["disk_size_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_index",b"_index"]) -> typing.Optional[typing_extensions.Literal["index"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_initialize_params",b"_initialize_params"]) -> typing.Optional[typing_extensions.Literal["initialize_params"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_interface",b"_interface"]) -> typing.Optional[typing_extensions.Literal["interface"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mode",b"_mode"]) -> typing.Optional[typing_extensions.Literal["mode"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_shielded_instance_initial_state",b"_shielded_instance_initial_state"]) -> typing.Optional[typing_extensions.Literal["shielded_instance_initial_state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source",b"_source"]) -> typing.Optional[typing_extensions.Literal["source"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___AttachedDisk = AttachedDisk

class AttachedDiskInitializeParams(google.protobuf.message.Message):
    """[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _OnUpdateAction:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _OnUpdateActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OnUpdateAction.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ON_UPDATE_ACTION: AttachedDiskInitializeParams.OnUpdateAction.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        RECREATE_DISK: AttachedDiskInitializeParams.OnUpdateAction.ValueType = ...  # 494767853
        """Always recreate the disk."""

        RECREATE_DISK_IF_SOURCE_CHANGED: AttachedDiskInitializeParams.OnUpdateAction.ValueType = ...  # 398099712
        """Recreate the disk if source (image, snapshot) of this disk is different from source of existing disk."""

        USE_EXISTING_DISK: AttachedDiskInitializeParams.OnUpdateAction.ValueType = ...  # 232682233
        """Use the existing disk, this is the default behaviour."""

    class OnUpdateAction(_OnUpdateAction, metaclass=_OnUpdateActionEnumTypeWrapper):
        """Specifies which action to take on instance update with this disk. Default is to use the existing disk."""
        pass

    UNDEFINED_ON_UPDATE_ACTION: AttachedDiskInitializeParams.OnUpdateAction.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    RECREATE_DISK: AttachedDiskInitializeParams.OnUpdateAction.ValueType = ...  # 494767853
    """Always recreate the disk."""

    RECREATE_DISK_IF_SOURCE_CHANGED: AttachedDiskInitializeParams.OnUpdateAction.ValueType = ...  # 398099712
    """Recreate the disk if source (image, snapshot) of this disk is different from source of existing disk."""

    USE_EXISTING_DISK: AttachedDiskInitializeParams.OnUpdateAction.ValueType = ...  # 232682233
    """Use the existing disk, this is the default behaviour."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISK_NAME_FIELD_NUMBER: builtins.int
    DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    DISK_TYPE_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    ON_UPDATE_ACTION_FIELD_NUMBER: builtins.int
    PROVISIONED_IOPS_FIELD_NUMBER: builtins.int
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    SOURCE_SNAPSHOT_FIELD_NUMBER: builtins.int
    SOURCE_SNAPSHOT_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    description: typing.Text = ...
    """An optional description. Provide this property when creating the disk."""

    disk_name: typing.Text = ...
    """Specifies the disk name. If not specified, the default is to use the name of the instance. If a disk with the same name already exists in the given region, the existing disk is attached to the new instance and the new disk is not created."""

    disk_size_gb: builtins.int = ...
    """Specifies the size of the disk in base-2 GB. The size must be at least 10 GB. If you specify a sourceImage, which is required for boot disks, the default size is the size of the sourceImage. If you do not specify a sourceImage, the default disk size is 500 GB."""

    disk_type: typing.Text = ...
    """Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone /diskTypes/pd-standard For a full list of acceptable values, see Persistent disk types. If you define this field, you can provide either the full or partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /diskTypes/diskType - projects/project/zones/zone/diskTypes/diskType - zones/zone/diskTypes/diskType Note that for InstanceTemplate, this is the name of the disk type, not URL."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels to apply to this disk. These can be later modified by the disks.setLabels method. This field is only applicable for persistent disks."""
        pass
    on_update_action: typing.Text = ...
    """Specifies which action to take on instance update with this disk. Default is to use the existing disk.
    Check the OnUpdateAction enum for the list of possible values.
    """

    provisioned_iops: builtins.int = ...
    """Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Values must be between 10,000 and 120,000. For more details, see the Extreme persistent disk documentation."""

    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Resource policies applied to this disk for automatic snapshot creations. Specified using the full or partial URL. For instance template, specify only the resource policy name."""
        pass
    source_image: typing.Text = ...
    """The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or initializeParams.sourceSnapshot or disks.source is required except for local SSD. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image: projects/debian-cloud/global/images/family/debian-9 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a disk with a custom image that you created, specify the image name in the following format: global/images/my-custom-image You can also specify a custom image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-image-family If the source image is deleted later, this field will not be set."""

    @property
    def source_image_encryption_key(self) -> global___CustomerEncryptionKey:
        """The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key. Instance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys."""
        pass
    source_snapshot: typing.Text = ...
    """The source snapshot to create this disk. When creating a new instance, one of initializeParams.sourceSnapshot or initializeParams.sourceImage or disks.source is required except for local SSD. To create a disk with a snapshot that you created, specify the snapshot name in the following format: global/snapshots/my-backup If the source snapshot is deleted later, this field will not be set."""

    @property
    def source_snapshot_encryption_key(self) -> global___CustomerEncryptionKey:
        """The customer-supplied encryption key of the source snapshot."""
        pass
    def __init__(self,
        *,
        description : typing.Optional[typing.Text] = ...,
        disk_name : typing.Optional[typing.Text] = ...,
        disk_size_gb : typing.Optional[builtins.int] = ...,
        disk_type : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        on_update_action : typing.Optional[typing.Text] = ...,
        provisioned_iops : typing.Optional[builtins.int] = ...,
        resource_policies : typing.Optional[typing.Iterable[typing.Text]] = ...,
        source_image : typing.Optional[typing.Text] = ...,
        source_image_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        source_snapshot : typing.Optional[typing.Text] = ...,
        source_snapshot_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_disk_name",b"_disk_name","_disk_size_gb",b"_disk_size_gb","_disk_type",b"_disk_type","_on_update_action",b"_on_update_action","_provisioned_iops",b"_provisioned_iops","_source_image",b"_source_image","_source_image_encryption_key",b"_source_image_encryption_key","_source_snapshot",b"_source_snapshot","_source_snapshot_encryption_key",b"_source_snapshot_encryption_key","description",b"description","disk_name",b"disk_name","disk_size_gb",b"disk_size_gb","disk_type",b"disk_type","on_update_action",b"on_update_action","provisioned_iops",b"provisioned_iops","source_image",b"source_image","source_image_encryption_key",b"source_image_encryption_key","source_snapshot",b"source_snapshot","source_snapshot_encryption_key",b"source_snapshot_encryption_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_disk_name",b"_disk_name","_disk_size_gb",b"_disk_size_gb","_disk_type",b"_disk_type","_on_update_action",b"_on_update_action","_provisioned_iops",b"_provisioned_iops","_source_image",b"_source_image","_source_image_encryption_key",b"_source_image_encryption_key","_source_snapshot",b"_source_snapshot","_source_snapshot_encryption_key",b"_source_snapshot_encryption_key","description",b"description","disk_name",b"disk_name","disk_size_gb",b"disk_size_gb","disk_type",b"disk_type","labels",b"labels","on_update_action",b"on_update_action","provisioned_iops",b"provisioned_iops","resource_policies",b"resource_policies","source_image",b"source_image","source_image_encryption_key",b"source_image_encryption_key","source_snapshot",b"source_snapshot","source_snapshot_encryption_key",b"source_snapshot_encryption_key"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_name",b"_disk_name"]) -> typing.Optional[typing_extensions.Literal["disk_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_size_gb",b"_disk_size_gb"]) -> typing.Optional[typing_extensions.Literal["disk_size_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_type",b"_disk_type"]) -> typing.Optional[typing_extensions.Literal["disk_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_on_update_action",b"_on_update_action"]) -> typing.Optional[typing_extensions.Literal["on_update_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_provisioned_iops",b"_provisioned_iops"]) -> typing.Optional[typing_extensions.Literal["provisioned_iops"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_image",b"_source_image"]) -> typing.Optional[typing_extensions.Literal["source_image"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_image_encryption_key",b"_source_image_encryption_key"]) -> typing.Optional[typing_extensions.Literal["source_image_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_snapshot",b"_source_snapshot"]) -> typing.Optional[typing_extensions.Literal["source_snapshot"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_snapshot_encryption_key",b"_source_snapshot_encryption_key"]) -> typing.Optional[typing_extensions.Literal["source_snapshot_encryption_key"]]: ...
global___AttachedDiskInitializeParams = AttachedDiskInitializeParams

class AuditConfig(google.protobuf.message.Message):
    """Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUDIT_LOG_CONFIGS_FIELD_NUMBER: builtins.int
    EXEMPTED_MEMBERS_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    @property
    def audit_log_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuditLogConfig]:
        """The configuration for logging of each type of permission."""
        pass
    @property
    def exempted_members(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """This is deprecated and has no effect. Do not use."""
        pass
    service: typing.Text = ...
    """Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."""

    def __init__(self,
        *,
        audit_log_configs : typing.Optional[typing.Iterable[global___AuditLogConfig]] = ...,
        exempted_members : typing.Optional[typing.Iterable[typing.Text]] = ...,
        service : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_service",b"_service","service",b"service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_service",b"_service","audit_log_configs",b"audit_log_configs","exempted_members",b"exempted_members","service",b"service"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
global___AuditConfig = AuditConfig

class AuditLogConfig(google.protobuf.message.Message):
    """Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _LogType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LogTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LogType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_LOG_TYPE: AuditLogConfig.LogType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ADMIN_READ: AuditLogConfig.LogType.ValueType = ...  # 128951462
        """Admin reads. Example: CloudIAM getIamPolicy"""

        DATA_READ: AuditLogConfig.LogType.ValueType = ...  # 305224971
        """Data reads. Example: CloudSQL Users list"""

        DATA_WRITE: AuditLogConfig.LogType.ValueType = ...  # 340181738
        """Data writes. Example: CloudSQL Users create"""

        LOG_TYPE_UNSPECIFIED: AuditLogConfig.LogType.ValueType = ...  # 154527053
        """Default case. Should never be this."""

    class LogType(_LogType, metaclass=_LogTypeEnumTypeWrapper):
        """The log type that this config enables."""
        pass

    UNDEFINED_LOG_TYPE: AuditLogConfig.LogType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ADMIN_READ: AuditLogConfig.LogType.ValueType = ...  # 128951462
    """Admin reads. Example: CloudIAM getIamPolicy"""

    DATA_READ: AuditLogConfig.LogType.ValueType = ...  # 305224971
    """Data reads. Example: CloudSQL Users list"""

    DATA_WRITE: AuditLogConfig.LogType.ValueType = ...  # 340181738
    """Data writes. Example: CloudSQL Users create"""

    LOG_TYPE_UNSPECIFIED: AuditLogConfig.LogType.ValueType = ...  # 154527053
    """Default case. Should never be this."""


    EXEMPTED_MEMBERS_FIELD_NUMBER: builtins.int
    IGNORE_CHILD_EXEMPTIONS_FIELD_NUMBER: builtins.int
    LOG_TYPE_FIELD_NUMBER: builtins.int
    @property
    def exempted_members(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."""
        pass
    ignore_child_exemptions: builtins.bool = ...
    """This is deprecated and has no effect. Do not use."""

    log_type: typing.Text = ...
    """The log type that this config enables.
    Check the LogType enum for the list of possible values.
    """

    def __init__(self,
        *,
        exempted_members : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ignore_child_exemptions : typing.Optional[builtins.bool] = ...,
        log_type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ignore_child_exemptions",b"_ignore_child_exemptions","_log_type",b"_log_type","ignore_child_exemptions",b"ignore_child_exemptions","log_type",b"log_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ignore_child_exemptions",b"_ignore_child_exemptions","_log_type",b"_log_type","exempted_members",b"exempted_members","ignore_child_exemptions",b"ignore_child_exemptions","log_type",b"log_type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ignore_child_exemptions",b"_ignore_child_exemptions"]) -> typing.Optional[typing_extensions.Literal["ignore_child_exemptions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_log_type",b"_log_type"]) -> typing.Optional[typing_extensions.Literal["log_type"]]: ...
global___AuditLogConfig = AuditLogConfig

class AuthorizationLoggingOptions(google.protobuf.message.Message):
    """This is deprecated and has no effect. Do not use."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PermissionType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PermissionTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PermissionType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PERMISSION_TYPE: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ADMIN_READ: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 128951462
        """This is deprecated and has no effect. Do not use."""

        ADMIN_WRITE: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 244412079
        """This is deprecated and has no effect. Do not use."""

        DATA_READ: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 305224971
        """This is deprecated and has no effect. Do not use."""

        DATA_WRITE: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 340181738
        """This is deprecated and has no effect. Do not use."""

        PERMISSION_TYPE_UNSPECIFIED: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 440313346
        """This is deprecated and has no effect. Do not use."""

    class PermissionType(_PermissionType, metaclass=_PermissionTypeEnumTypeWrapper):
        """This is deprecated and has no effect. Do not use."""
        pass

    UNDEFINED_PERMISSION_TYPE: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ADMIN_READ: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 128951462
    """This is deprecated and has no effect. Do not use."""

    ADMIN_WRITE: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 244412079
    """This is deprecated and has no effect. Do not use."""

    DATA_READ: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 305224971
    """This is deprecated and has no effect. Do not use."""

    DATA_WRITE: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 340181738
    """This is deprecated and has no effect. Do not use."""

    PERMISSION_TYPE_UNSPECIFIED: AuthorizationLoggingOptions.PermissionType.ValueType = ...  # 440313346
    """This is deprecated and has no effect. Do not use."""


    PERMISSION_TYPE_FIELD_NUMBER: builtins.int
    permission_type: typing.Text = ...
    """This is deprecated and has no effect. Do not use.
    Check the PermissionType enum for the list of possible values.
    """

    def __init__(self,
        *,
        permission_type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_permission_type",b"_permission_type","permission_type",b"permission_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_permission_type",b"_permission_type","permission_type",b"permission_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_permission_type",b"_permission_type"]) -> typing.Optional[typing_extensions.Literal["permission_type"]]: ...
global___AuthorizationLoggingOptions = AuthorizationLoggingOptions

class Autoscaler(google.protobuf.message.Message):
    """Represents an Autoscaler resource. Google Compute Engine has two Autoscaler resources: * [Zonal](/compute/docs/reference/rest/v1/autoscalers) * [Regional](/compute/docs/reference/rest/v1/regionAutoscalers) Use autoscalers to automatically add or delete instances from a managed instance group according to your defined autoscaling policy. For more information, read Autoscaling Groups of Instances. For zonal managed instance groups resource, use the autoscaler resource. For regional managed instance groups, use the regionAutoscalers resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Autoscaler.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: Autoscaler.Status.ValueType = ...  # 314733318
        """Configuration is acknowledged to be effective"""

        DELETING: Autoscaler.Status.ValueType = ...  # 528602024
        """Configuration is being deleted"""

        ERROR: Autoscaler.Status.ValueType = ...  # 66247144
        """Configuration has errors. Actionable for users."""

        PENDING: Autoscaler.Status.ValueType = ...  # 35394935
        """Autoscaler backend hasn't read new/updated configuration"""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the autoscaler configuration. Current set of possible values: - PENDING: Autoscaler backend hasn't read new/updated configuration. - DELETING: Configuration is being deleted. - ACTIVE: Configuration is acknowledged to be effective. Some warnings might be present in the statusDetails field. - ERROR: Configuration has errors. Actionable for users. Details are present in the statusDetails field. New values might be added in the future."""
        pass

    UNDEFINED_STATUS: Autoscaler.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: Autoscaler.Status.ValueType = ...  # 314733318
    """Configuration is acknowledged to be effective"""

    DELETING: Autoscaler.Status.ValueType = ...  # 528602024
    """Configuration is being deleted"""

    ERROR: Autoscaler.Status.ValueType = ...  # 66247144
    """Configuration has errors. Actionable for users."""

    PENDING: Autoscaler.Status.ValueType = ...  # 35394935
    """Autoscaler backend hasn't read new/updated configuration"""


    class ScalingScheduleStatusEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___ScalingScheduleStatus: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___ScalingScheduleStatus] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    AUTOSCALING_POLICY_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    RECOMMENDED_SIZE_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SCALING_SCHEDULE_STATUS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    STATUS_DETAILS_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def autoscaling_policy(self) -> global___AutoscalingPolicy:
        """The configuration parameters for the autoscaling algorithm. You can define one or more signals for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#autoscaler for autoscalers."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    recommended_size: builtins.int = ...
    """[Output Only] Target recommended MIG size (number of instances) computed by autoscaler. Autoscaler calculates the recommended MIG size even when the autoscaling policy mode is different from ON. This field is empty when autoscaler is not connected to an existing managed instance group or autoscaler did not generate its prediction."""

    region: typing.Text = ...
    """[Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope)."""

    @property
    def scaling_schedule_status(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ScalingScheduleStatus]:
        """[Output Only] Status information of existing scaling schedules."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    status: typing.Text = ...
    """[Output Only] The status of the autoscaler configuration. Current set of possible values: - PENDING: Autoscaler backend hasn't read new/updated configuration. - DELETING: Configuration is being deleted. - ACTIVE: Configuration is acknowledged to be effective. Some warnings might be present in the statusDetails field. - ERROR: Configuration has errors. Actionable for users. Details are present in the statusDetails field. New values might be added in the future.
    Check the Status enum for the list of possible values.
    """

    @property
    def status_details(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AutoscalerStatusDetails]:
        """[Output Only] Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter."""
        pass
    target: typing.Text = ...
    """URL of the managed instance group that this autoscaler will scale. This field is required when creating an autoscaler."""

    zone: typing.Text = ...
    """[Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope)."""

    def __init__(self,
        *,
        autoscaling_policy : typing.Optional[global___AutoscalingPolicy] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        recommended_size : typing.Optional[builtins.int] = ...,
        region : typing.Optional[typing.Text] = ...,
        scaling_schedule_status : typing.Optional[typing.Mapping[typing.Text, global___ScalingScheduleStatus]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        status_details : typing.Optional[typing.Iterable[global___AutoscalerStatusDetails]] = ...,
        target : typing.Optional[typing.Text] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_autoscaling_policy",b"_autoscaling_policy","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_recommended_size",b"_recommended_size","_region",b"_region","_self_link",b"_self_link","_status",b"_status","_target",b"_target","_zone",b"_zone","autoscaling_policy",b"autoscaling_policy","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","recommended_size",b"recommended_size","region",b"region","self_link",b"self_link","status",b"status","target",b"target","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_autoscaling_policy",b"_autoscaling_policy","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_recommended_size",b"_recommended_size","_region",b"_region","_self_link",b"_self_link","_status",b"_status","_target",b"_target","_zone",b"_zone","autoscaling_policy",b"autoscaling_policy","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","recommended_size",b"recommended_size","region",b"region","scaling_schedule_status",b"scaling_schedule_status","self_link",b"self_link","status",b"status","status_details",b"status_details","target",b"target","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_autoscaling_policy",b"_autoscaling_policy"]) -> typing.Optional[typing_extensions.Literal["autoscaling_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_recommended_size",b"_recommended_size"]) -> typing.Optional[typing_extensions.Literal["recommended_size"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target",b"_target"]) -> typing.Optional[typing_extensions.Literal["target"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___Autoscaler = Autoscaler

class AutoscalerAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___AutoscalersScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___AutoscalersScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___AutoscalersScopedList]:
        """A list of AutoscalersScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#autoscalerAggregatedList for aggregated lists of autoscalers."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources. end_interface: MixerListResponseWithEtagBuilder"""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___AutoscalersScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___AutoscalerAggregatedList = AutoscalerAggregatedList

class AutoscalerList(google.protobuf.message.Message):
    """Contains a list of Autoscaler resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Autoscaler]:
        """A list of Autoscaler resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#autoscalerList for lists of autoscalers."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Autoscaler]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___AutoscalerList = AutoscalerList

class AutoscalerStatusDetails(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: AutoscalerStatusDetails.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALL_INSTANCES_UNHEALTHY: AutoscalerStatusDetails.Type.ValueType = ...  # 404965477
        """All instances in the instance group are unhealthy (not in RUNNING state)."""

        BACKEND_SERVICE_DOES_NOT_EXIST: AutoscalerStatusDetails.Type.ValueType = ...  # 191417626
        """There is no backend service attached to the instance group."""

        CAPPED_AT_MAX_NUM_REPLICAS: AutoscalerStatusDetails.Type.ValueType = ...  # 518617
        """Autoscaler recommends a size greater than maxNumReplicas."""

        CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE: AutoscalerStatusDetails.Type.ValueType = ...  # 328964659
        """The custom metric samples are not exported often enough to be a credible base for autoscaling."""

        CUSTOM_METRIC_INVALID: AutoscalerStatusDetails.Type.ValueType = ...  # 204430550
        """The custom metric that was specified does not exist or does not have the necessary labels."""

        MIN_EQUALS_MAX: AutoscalerStatusDetails.Type.ValueType = ...  # 2821361
        """The minNumReplicas is equal to maxNumReplicas. This means the autoscaler cannot add or remove instances from the instance group."""

        MISSING_CUSTOM_METRIC_DATA_POINTS: AutoscalerStatusDetails.Type.ValueType = ...  # 94885086
        """The autoscaler did not receive any data from the custom metric configured for autoscaling."""

        MISSING_LOAD_BALANCING_DATA_POINTS: AutoscalerStatusDetails.Type.ValueType = ...  # 509858898
        """The autoscaler is configured to scale based on a load balancing signal but the instance group has not received any requests from the load balancer."""

        MODE_OFF: AutoscalerStatusDetails.Type.ValueType = ...  # 164169907
        """Autoscaling is turned off. The number of instances in the group won't change automatically. The autoscaling configuration is preserved."""

        MODE_ONLY_SCALE_OUT: AutoscalerStatusDetails.Type.ValueType = ...  # 3840994
        """Autoscaling is in the "Autoscale only scale out" mode. Instances in the group will be only added."""

        MODE_ONLY_UP: AutoscalerStatusDetails.Type.ValueType = ...  # 100969842
        """Autoscaling is in the "Autoscale only out" mode. Instances in the group will be only added."""

        MORE_THAN_ONE_BACKEND_SERVICE: AutoscalerStatusDetails.Type.ValueType = ...  # 151922141
        """The instance group cannot be autoscaled because it has more than one backend service attached to it."""

        NOT_ENOUGH_QUOTA_AVAILABLE: AutoscalerStatusDetails.Type.ValueType = ...  # 403101631
        """There is insufficient quota for the necessary resources, such as CPU or number of instances."""

        REGION_RESOURCE_STOCKOUT: AutoscalerStatusDetails.Type.ValueType = ...  # 528622846
        """Showed only for regional autoscalers: there is a resource stockout in the chosen region."""

        SCALING_TARGET_DOES_NOT_EXIST: AutoscalerStatusDetails.Type.ValueType = ...  # 122636699
        """The target to be scaled does not exist."""

        SCHEDULED_INSTANCES_GREATER_THAN_AUTOSCALER_MAX: AutoscalerStatusDetails.Type.ValueType = ...  # 29275586
        """For some scaling schedules minRequiredReplicas is greater than maxNumReplicas. Autoscaler always recommends at most maxNumReplicas instances."""

        SCHEDULED_INSTANCES_LESS_THAN_AUTOSCALER_MIN: AutoscalerStatusDetails.Type.ValueType = ...  # 398287669
        """For some scaling schedules minRequiredReplicas is less than minNumReplicas. Autoscaler always recommends at least minNumReplicas instances."""

        UNKNOWN: AutoscalerStatusDetails.Type.ValueType = ...  # 433141802
        UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION: AutoscalerStatusDetails.Type.ValueType = ...  # 330845009
        """Autoscaling does not work with an HTTP/S load balancer that has been configured for maxRate."""

        ZONE_RESOURCE_STOCKOUT: AutoscalerStatusDetails.Type.ValueType = ...  # 210200502
        """For zonal autoscalers: there is a resource stockout in the chosen zone. For regional autoscalers: in at least one of the zones you're using there is a resource stockout."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The type of error, warning, or notice returned. Current set of possible values: - ALL_INSTANCES_UNHEALTHY (WARNING): All instances in the instance group are unhealthy (not in RUNNING state). - BACKEND_SERVICE_DOES_NOT_EXIST (ERROR): There is no backend service attached to the instance group. - CAPPED_AT_MAX_NUM_REPLICAS (WARNING): Autoscaler recommends a size greater than maxNumReplicas. - CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE (WARNING): The custom metric samples are not exported often enough to be a credible base for autoscaling. - CUSTOM_METRIC_INVALID (ERROR): The custom metric that was specified does not exist or does not have the necessary labels. - MIN_EQUALS_MAX (WARNING): The minNumReplicas is equal to maxNumReplicas. This means the autoscaler cannot add or remove instances from the instance group. - MISSING_CUSTOM_METRIC_DATA_POINTS (WARNING): The autoscaler did not receive any data from the custom metric configured for autoscaling. - MISSING_LOAD_BALANCING_DATA_POINTS (WARNING): The autoscaler is configured to scale based on a load balancing signal but the instance group has not received any requests from the load balancer. - MODE_OFF (WARNING): Autoscaling is turned off. The number of instances in the group won't change automatically. The autoscaling configuration is preserved. - MODE_ONLY_UP (WARNING): Autoscaling is in the "Autoscale only out" mode. The autoscaler can add instances but not remove any. - MORE_THAN_ONE_BACKEND_SERVICE (ERROR): The instance group cannot be autoscaled because it has more than one backend service attached to it. - NOT_ENOUGH_QUOTA_AVAILABLE (ERROR): There is insufficient quota for the necessary resources, such as CPU or number of instances. - REGION_RESOURCE_STOCKOUT (ERROR): Shown only for regional autoscalers: there is a resource stockout in the chosen region. - SCALING_TARGET_DOES_NOT_EXIST (ERROR): The target to be scaled does not exist. - UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION (ERROR): Autoscaling does not work with an HTTP/S load balancer that has been configured for maxRate. - ZONE_RESOURCE_STOCKOUT (ERROR): For zonal autoscalers: there is a resource stockout in the chosen zone. For regional autoscalers: in at least one of the zones you're using there is a resource stockout. New values might be added in the future. Some of the values might not be available in all API versions."""
        pass

    UNDEFINED_TYPE: AutoscalerStatusDetails.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALL_INSTANCES_UNHEALTHY: AutoscalerStatusDetails.Type.ValueType = ...  # 404965477
    """All instances in the instance group are unhealthy (not in RUNNING state)."""

    BACKEND_SERVICE_DOES_NOT_EXIST: AutoscalerStatusDetails.Type.ValueType = ...  # 191417626
    """There is no backend service attached to the instance group."""

    CAPPED_AT_MAX_NUM_REPLICAS: AutoscalerStatusDetails.Type.ValueType = ...  # 518617
    """Autoscaler recommends a size greater than maxNumReplicas."""

    CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE: AutoscalerStatusDetails.Type.ValueType = ...  # 328964659
    """The custom metric samples are not exported often enough to be a credible base for autoscaling."""

    CUSTOM_METRIC_INVALID: AutoscalerStatusDetails.Type.ValueType = ...  # 204430550
    """The custom metric that was specified does not exist or does not have the necessary labels."""

    MIN_EQUALS_MAX: AutoscalerStatusDetails.Type.ValueType = ...  # 2821361
    """The minNumReplicas is equal to maxNumReplicas. This means the autoscaler cannot add or remove instances from the instance group."""

    MISSING_CUSTOM_METRIC_DATA_POINTS: AutoscalerStatusDetails.Type.ValueType = ...  # 94885086
    """The autoscaler did not receive any data from the custom metric configured for autoscaling."""

    MISSING_LOAD_BALANCING_DATA_POINTS: AutoscalerStatusDetails.Type.ValueType = ...  # 509858898
    """The autoscaler is configured to scale based on a load balancing signal but the instance group has not received any requests from the load balancer."""

    MODE_OFF: AutoscalerStatusDetails.Type.ValueType = ...  # 164169907
    """Autoscaling is turned off. The number of instances in the group won't change automatically. The autoscaling configuration is preserved."""

    MODE_ONLY_SCALE_OUT: AutoscalerStatusDetails.Type.ValueType = ...  # 3840994
    """Autoscaling is in the "Autoscale only scale out" mode. Instances in the group will be only added."""

    MODE_ONLY_UP: AutoscalerStatusDetails.Type.ValueType = ...  # 100969842
    """Autoscaling is in the "Autoscale only out" mode. Instances in the group will be only added."""

    MORE_THAN_ONE_BACKEND_SERVICE: AutoscalerStatusDetails.Type.ValueType = ...  # 151922141
    """The instance group cannot be autoscaled because it has more than one backend service attached to it."""

    NOT_ENOUGH_QUOTA_AVAILABLE: AutoscalerStatusDetails.Type.ValueType = ...  # 403101631
    """There is insufficient quota for the necessary resources, such as CPU or number of instances."""

    REGION_RESOURCE_STOCKOUT: AutoscalerStatusDetails.Type.ValueType = ...  # 528622846
    """Showed only for regional autoscalers: there is a resource stockout in the chosen region."""

    SCALING_TARGET_DOES_NOT_EXIST: AutoscalerStatusDetails.Type.ValueType = ...  # 122636699
    """The target to be scaled does not exist."""

    SCHEDULED_INSTANCES_GREATER_THAN_AUTOSCALER_MAX: AutoscalerStatusDetails.Type.ValueType = ...  # 29275586
    """For some scaling schedules minRequiredReplicas is greater than maxNumReplicas. Autoscaler always recommends at most maxNumReplicas instances."""

    SCHEDULED_INSTANCES_LESS_THAN_AUTOSCALER_MIN: AutoscalerStatusDetails.Type.ValueType = ...  # 398287669
    """For some scaling schedules minRequiredReplicas is less than minNumReplicas. Autoscaler always recommends at least minNumReplicas instances."""

    UNKNOWN: AutoscalerStatusDetails.Type.ValueType = ...  # 433141802
    UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION: AutoscalerStatusDetails.Type.ValueType = ...  # 330845009
    """Autoscaling does not work with an HTTP/S load balancer that has been configured for maxRate."""

    ZONE_RESOURCE_STOCKOUT: AutoscalerStatusDetails.Type.ValueType = ...  # 210200502
    """For zonal autoscalers: there is a resource stockout in the chosen zone. For regional autoscalers: in at least one of the zones you're using there is a resource stockout."""


    MESSAGE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    message: typing.Text = ...
    """The status message."""

    type: typing.Text = ...
    """The type of error, warning, or notice returned. Current set of possible values: - ALL_INSTANCES_UNHEALTHY (WARNING): All instances in the instance group are unhealthy (not in RUNNING state). - BACKEND_SERVICE_DOES_NOT_EXIST (ERROR): There is no backend service attached to the instance group. - CAPPED_AT_MAX_NUM_REPLICAS (WARNING): Autoscaler recommends a size greater than maxNumReplicas. - CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE (WARNING): The custom metric samples are not exported often enough to be a credible base for autoscaling. - CUSTOM_METRIC_INVALID (ERROR): The custom metric that was specified does not exist or does not have the necessary labels. - MIN_EQUALS_MAX (WARNING): The minNumReplicas is equal to maxNumReplicas. This means the autoscaler cannot add or remove instances from the instance group. - MISSING_CUSTOM_METRIC_DATA_POINTS (WARNING): The autoscaler did not receive any data from the custom metric configured for autoscaling. - MISSING_LOAD_BALANCING_DATA_POINTS (WARNING): The autoscaler is configured to scale based on a load balancing signal but the instance group has not received any requests from the load balancer. - MODE_OFF (WARNING): Autoscaling is turned off. The number of instances in the group won't change automatically. The autoscaling configuration is preserved. - MODE_ONLY_UP (WARNING): Autoscaling is in the "Autoscale only out" mode. The autoscaler can add instances but not remove any. - MORE_THAN_ONE_BACKEND_SERVICE (ERROR): The instance group cannot be autoscaled because it has more than one backend service attached to it. - NOT_ENOUGH_QUOTA_AVAILABLE (ERROR): There is insufficient quota for the necessary resources, such as CPU or number of instances. - REGION_RESOURCE_STOCKOUT (ERROR): Shown only for regional autoscalers: there is a resource stockout in the chosen region. - SCALING_TARGET_DOES_NOT_EXIST (ERROR): The target to be scaled does not exist. - UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION (ERROR): Autoscaling does not work with an HTTP/S load balancer that has been configured for maxRate. - ZONE_RESOURCE_STOCKOUT (ERROR): For zonal autoscalers: there is a resource stockout in the chosen zone. For regional autoscalers: in at least one of the zones you're using there is a resource stockout. New values might be added in the future. Some of the values might not be available in all API versions.
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        message : typing.Optional[typing.Text] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_message",b"_message","_type",b"_type","message",b"message","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_message",b"_message","_type",b"_type","message",b"message","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message",b"_message"]) -> typing.Optional[typing_extensions.Literal["message"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___AutoscalerStatusDetails = AutoscalerStatusDetails

class AutoscalersScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALERS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def autoscalers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Autoscaler]:
        """[Output Only] A list of autoscalers contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning which replaces the list of autoscalers when the list is empty."""
        pass
    def __init__(self,
        *,
        autoscalers : typing.Optional[typing.Iterable[global___Autoscaler]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","autoscalers",b"autoscalers","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___AutoscalersScopedList = AutoscalersScopedList

class AutoscalingPolicy(google.protobuf.message.Message):
    """Cloud Autoscaler policy."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Mode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_MODE: AutoscalingPolicy.Mode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        OFF: AutoscalingPolicy.Mode.ValueType = ...  # 78159
        """Do not automatically scale the MIG in or out. The recommended_size field contains the size of MIG that would be set if the actuation mode was enabled."""

        ON: AutoscalingPolicy.Mode.ValueType = ...  # 2527
        """Automatically scale the MIG in and out according to the policy."""

        ONLY_SCALE_OUT: AutoscalingPolicy.Mode.ValueType = ...  # 152713670
        """Automatically create VMs according to the policy, but do not scale the MIG in."""

        ONLY_UP: AutoscalingPolicy.Mode.ValueType = ...  # 478095374
        """Automatically create VMs according to the policy, but do not scale the MIG in."""

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper):
        """Defines operating mode for this policy."""
        pass

    UNDEFINED_MODE: AutoscalingPolicy.Mode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    OFF: AutoscalingPolicy.Mode.ValueType = ...  # 78159
    """Do not automatically scale the MIG in or out. The recommended_size field contains the size of MIG that would be set if the actuation mode was enabled."""

    ON: AutoscalingPolicy.Mode.ValueType = ...  # 2527
    """Automatically scale the MIG in and out according to the policy."""

    ONLY_SCALE_OUT: AutoscalingPolicy.Mode.ValueType = ...  # 152713670
    """Automatically create VMs according to the policy, but do not scale the MIG in."""

    ONLY_UP: AutoscalingPolicy.Mode.ValueType = ...  # 478095374
    """Automatically create VMs according to the policy, but do not scale the MIG in."""


    class ScalingSchedulesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___AutoscalingPolicyScalingSchedule: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___AutoscalingPolicyScalingSchedule] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    COOL_DOWN_PERIOD_SEC_FIELD_NUMBER: builtins.int
    CPU_UTILIZATION_FIELD_NUMBER: builtins.int
    CUSTOM_METRIC_UTILIZATIONS_FIELD_NUMBER: builtins.int
    LOAD_BALANCING_UTILIZATION_FIELD_NUMBER: builtins.int
    MAX_NUM_REPLICAS_FIELD_NUMBER: builtins.int
    MIN_NUM_REPLICAS_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    SCALE_IN_CONTROL_FIELD_NUMBER: builtins.int
    SCALING_SCHEDULES_FIELD_NUMBER: builtins.int
    cool_down_period_sec: builtins.int = ...
    """The number of seconds that the autoscaler waits before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds. Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process."""

    @property
    def cpu_utilization(self) -> global___AutoscalingPolicyCpuUtilization:
        """Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group."""
        pass
    @property
    def custom_metric_utilizations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AutoscalingPolicyCustomMetricUtilization]:
        """Configuration parameters of autoscaling based on a custom metric."""
        pass
    @property
    def load_balancing_utilization(self) -> global___AutoscalingPolicyLoadBalancingUtilization:
        """Configuration parameters of autoscaling based on load balancer."""
        pass
    max_num_replicas: builtins.int = ...
    """The maximum number of instances that the autoscaler can scale out to. This is required when creating or updating an autoscaler. The maximum number of replicas must not be lower than minimal number of replicas."""

    min_num_replicas: builtins.int = ...
    """The minimum number of replicas that the autoscaler can scale in to. This cannot be less than 0. If not provided, autoscaler chooses a default value depending on maximum number of instances allowed."""

    mode: typing.Text = ...
    """Defines operating mode for this policy.
    Check the Mode enum for the list of possible values.
    """

    @property
    def scale_in_control(self) -> global___AutoscalingPolicyScaleInControl: ...
    @property
    def scaling_schedules(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___AutoscalingPolicyScalingSchedule]:
        """Scaling schedules defined for an autoscaler. Multiple schedules can be set on an autoscaler, and they can overlap. During overlapping periods the greatest min_required_replicas of all scaling schedules is applied. Up to 128 scaling schedules are allowed."""
        pass
    def __init__(self,
        *,
        cool_down_period_sec : typing.Optional[builtins.int] = ...,
        cpu_utilization : typing.Optional[global___AutoscalingPolicyCpuUtilization] = ...,
        custom_metric_utilizations : typing.Optional[typing.Iterable[global___AutoscalingPolicyCustomMetricUtilization]] = ...,
        load_balancing_utilization : typing.Optional[global___AutoscalingPolicyLoadBalancingUtilization] = ...,
        max_num_replicas : typing.Optional[builtins.int] = ...,
        min_num_replicas : typing.Optional[builtins.int] = ...,
        mode : typing.Optional[typing.Text] = ...,
        scale_in_control : typing.Optional[global___AutoscalingPolicyScaleInControl] = ...,
        scaling_schedules : typing.Optional[typing.Mapping[typing.Text, global___AutoscalingPolicyScalingSchedule]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cool_down_period_sec",b"_cool_down_period_sec","_cpu_utilization",b"_cpu_utilization","_load_balancing_utilization",b"_load_balancing_utilization","_max_num_replicas",b"_max_num_replicas","_min_num_replicas",b"_min_num_replicas","_mode",b"_mode","_scale_in_control",b"_scale_in_control","cool_down_period_sec",b"cool_down_period_sec","cpu_utilization",b"cpu_utilization","load_balancing_utilization",b"load_balancing_utilization","max_num_replicas",b"max_num_replicas","min_num_replicas",b"min_num_replicas","mode",b"mode","scale_in_control",b"scale_in_control"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cool_down_period_sec",b"_cool_down_period_sec","_cpu_utilization",b"_cpu_utilization","_load_balancing_utilization",b"_load_balancing_utilization","_max_num_replicas",b"_max_num_replicas","_min_num_replicas",b"_min_num_replicas","_mode",b"_mode","_scale_in_control",b"_scale_in_control","cool_down_period_sec",b"cool_down_period_sec","cpu_utilization",b"cpu_utilization","custom_metric_utilizations",b"custom_metric_utilizations","load_balancing_utilization",b"load_balancing_utilization","max_num_replicas",b"max_num_replicas","min_num_replicas",b"min_num_replicas","mode",b"mode","scale_in_control",b"scale_in_control","scaling_schedules",b"scaling_schedules"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cool_down_period_sec",b"_cool_down_period_sec"]) -> typing.Optional[typing_extensions.Literal["cool_down_period_sec"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cpu_utilization",b"_cpu_utilization"]) -> typing.Optional[typing_extensions.Literal["cpu_utilization"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_load_balancing_utilization",b"_load_balancing_utilization"]) -> typing.Optional[typing_extensions.Literal["load_balancing_utilization"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_num_replicas",b"_max_num_replicas"]) -> typing.Optional[typing_extensions.Literal["max_num_replicas"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_num_replicas",b"_min_num_replicas"]) -> typing.Optional[typing_extensions.Literal["min_num_replicas"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mode",b"_mode"]) -> typing.Optional[typing_extensions.Literal["mode"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_scale_in_control",b"_scale_in_control"]) -> typing.Optional[typing_extensions.Literal["scale_in_control"]]: ...
global___AutoscalingPolicy = AutoscalingPolicy

class AutoscalingPolicyCpuUtilization(google.protobuf.message.Message):
    """CPU utilization policy."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PredictiveMethod:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PredictiveMethodEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PredictiveMethod.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PREDICTIVE_METHOD: AutoscalingPolicyCpuUtilization.PredictiveMethod.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NONE: AutoscalingPolicyCpuUtilization.PredictiveMethod.ValueType = ...  # 2402104
        """No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics"""

        OPTIMIZE_AVAILABILITY: AutoscalingPolicyCpuUtilization.PredictiveMethod.ValueType = ...  # 11629437
        """Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand."""

    class PredictiveMethod(_PredictiveMethod, metaclass=_PredictiveMethodEnumTypeWrapper):
        """Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are: * NONE (default). No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics. * OPTIMIZE_AVAILABILITY. Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand."""
        pass

    UNDEFINED_PREDICTIVE_METHOD: AutoscalingPolicyCpuUtilization.PredictiveMethod.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NONE: AutoscalingPolicyCpuUtilization.PredictiveMethod.ValueType = ...  # 2402104
    """No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics"""

    OPTIMIZE_AVAILABILITY: AutoscalingPolicyCpuUtilization.PredictiveMethod.ValueType = ...  # 11629437
    """Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand."""


    PREDICTIVE_METHOD_FIELD_NUMBER: builtins.int
    UTILIZATION_TARGET_FIELD_NUMBER: builtins.int
    predictive_method: typing.Text = ...
    """Indicates whether predictive autoscaling based on CPU metric is enabled. Valid values are: * NONE (default). No predictive method is used. The autoscaler scales the group to meet current demand based on real-time metrics. * OPTIMIZE_AVAILABILITY. Predictive autoscaling improves availability by monitoring daily and weekly load patterns and scaling out ahead of anticipated demand.
    Check the PredictiveMethod enum for the list of possible values.
    """

    utilization_target: builtins.float = ...
    """The target CPU utilization that the autoscaler maintains. Must be a float value in the range (0, 1]. If not specified, the default is 0.6. If the CPU level is below the target utilization, the autoscaler scales in the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization. If the average CPU is above the target utilization, the autoscaler scales out until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization."""

    def __init__(self,
        *,
        predictive_method : typing.Optional[typing.Text] = ...,
        utilization_target : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_predictive_method",b"_predictive_method","_utilization_target",b"_utilization_target","predictive_method",b"predictive_method","utilization_target",b"utilization_target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_predictive_method",b"_predictive_method","_utilization_target",b"_utilization_target","predictive_method",b"predictive_method","utilization_target",b"utilization_target"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_predictive_method",b"_predictive_method"]) -> typing.Optional[typing_extensions.Literal["predictive_method"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_utilization_target",b"_utilization_target"]) -> typing.Optional[typing_extensions.Literal["utilization_target"]]: ...
global___AutoscalingPolicyCpuUtilization = AutoscalingPolicyCpuUtilization

class AutoscalingPolicyCustomMetricUtilization(google.protobuf.message.Message):
    """Custom utilization metric policy."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _UtilizationTargetType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UtilizationTargetTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UtilizationTargetType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_UTILIZATION_TARGET_TYPE: AutoscalingPolicyCustomMetricUtilization.UtilizationTargetType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DELTA_PER_MINUTE: AutoscalingPolicyCustomMetricUtilization.UtilizationTargetType.ValueType = ...  # 87432861
        """Sets the utilization target value for a cumulative or delta metric, expressed as the rate of growth per minute."""

        DELTA_PER_SECOND: AutoscalingPolicyCustomMetricUtilization.UtilizationTargetType.ValueType = ...  # 255180029
        """Sets the utilization target value for a cumulative or delta metric, expressed as the rate of growth per second."""

        GAUGE: AutoscalingPolicyCustomMetricUtilization.UtilizationTargetType.ValueType = ...  # 67590361
        """Sets the utilization target value for a gauge metric. The autoscaler will collect the average utilization of the virtual machines from the last couple of minutes, and compare the value to the utilization target value to perform autoscaling."""

    class UtilizationTargetType(_UtilizationTargetType, metaclass=_UtilizationTargetTypeEnumTypeWrapper):
        """Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE."""
        pass

    UNDEFINED_UTILIZATION_TARGET_TYPE: AutoscalingPolicyCustomMetricUtilization.UtilizationTargetType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DELTA_PER_MINUTE: AutoscalingPolicyCustomMetricUtilization.UtilizationTargetType.ValueType = ...  # 87432861
    """Sets the utilization target value for a cumulative or delta metric, expressed as the rate of growth per minute."""

    DELTA_PER_SECOND: AutoscalingPolicyCustomMetricUtilization.UtilizationTargetType.ValueType = ...  # 255180029
    """Sets the utilization target value for a cumulative or delta metric, expressed as the rate of growth per second."""

    GAUGE: AutoscalingPolicyCustomMetricUtilization.UtilizationTargetType.ValueType = ...  # 67590361
    """Sets the utilization target value for a gauge metric. The autoscaler will collect the average utilization of the virtual machines from the last couple of minutes, and compare the value to the utilization target value to perform autoscaling."""


    FILTER_FIELD_NUMBER: builtins.int
    METRIC_FIELD_NUMBER: builtins.int
    SINGLE_INSTANCE_ASSIGNMENT_FIELD_NUMBER: builtins.int
    UTILIZATION_TARGET_FIELD_NUMBER: builtins.int
    UTILIZATION_TARGET_TYPE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter string, compatible with a Stackdriver Monitoring filter string for TimeSeries.list API call. This filter is used to select a specific TimeSeries for the purpose of autoscaling and to determine whether the metric is exporting per-instance or per-group data. For the filter to be valid for autoscaling purposes, the following rules apply: - You can only use the AND operator for joining selectors. - You can only use direct equality comparison operator (=) without any functions for each selector. - You can specify the metric in both the filter string and in the metric field. However, if specified in both places, the metric must be identical. - The monitored resource type determines what kind of values are expected for the metric. If it is a gce_instance, the autoscaler expects the metric to include a separate TimeSeries for each instance in a group. In such a case, you cannot filter on resource labels. If the resource type is any other value, the autoscaler expects this metric to contain values that apply to the entire autoscaled instance group and resource label filtering can be performed to point autoscaler at the correct TimeSeries to scale upon. This is called a *per-group metric* for the purpose of autoscaling. If not specified, the type defaults to gce_instance. Try to provide a filter that is selective enough to pick just one TimeSeries for the autoscaled group or for each of the instances (if you are using gce_instance resource type). If multiple TimeSeries are returned upon the query execution, the autoscaler will sum their respective values to obtain its scaling value."""

    metric: typing.Text = ...
    """The identifier (type) of the Stackdriver Monitoring metric. The metric cannot have negative values. The metric must have a value type of INT64 or DOUBLE."""

    single_instance_assignment: builtins.float = ...
    """If scaling is based on a per-group metric value that represents the total amount of work to be done or resource usage, set this value to an amount assigned for a single instance of the scaled group. Autoscaler keeps the number of instances proportional to the value of this metric. The metric itself does not change value due to group resizing. A good metric to use with the target is for example pubsub.googleapis.com/subscription/num_undelivered_messages or a custom metric exporting the total number of requests coming to your instances. A bad example would be a metric exporting an average or median latency, since this value can't include a chunk assignable to a single instance, it could be better used with utilization_target instead."""

    utilization_target: builtins.float = ...
    """The target value of the metric that autoscaler maintains. This must be a positive value. A utilization metric scales number of virtual machines handling requests to increase or decrease proportionally to the metric. For example, a good metric to use as a utilization_target is https://www.googleapis.com/compute/v1/instance/network/received_bytes_count. The autoscaler works to keep this value constant for each of the instances."""

    utilization_target_type: typing.Text = ...
    """Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE.
    Check the UtilizationTargetType enum for the list of possible values.
    """

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        metric : typing.Optional[typing.Text] = ...,
        single_instance_assignment : typing.Optional[builtins.float] = ...,
        utilization_target : typing.Optional[builtins.float] = ...,
        utilization_target_type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_metric",b"_metric","_single_instance_assignment",b"_single_instance_assignment","_utilization_target",b"_utilization_target","_utilization_target_type",b"_utilization_target_type","filter",b"filter","metric",b"metric","single_instance_assignment",b"single_instance_assignment","utilization_target",b"utilization_target","utilization_target_type",b"utilization_target_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_metric",b"_metric","_single_instance_assignment",b"_single_instance_assignment","_utilization_target",b"_utilization_target","_utilization_target_type",b"_utilization_target_type","filter",b"filter","metric",b"metric","single_instance_assignment",b"single_instance_assignment","utilization_target",b"utilization_target","utilization_target_type",b"utilization_target_type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_metric",b"_metric"]) -> typing.Optional[typing_extensions.Literal["metric"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_single_instance_assignment",b"_single_instance_assignment"]) -> typing.Optional[typing_extensions.Literal["single_instance_assignment"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_utilization_target",b"_utilization_target"]) -> typing.Optional[typing_extensions.Literal["utilization_target"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_utilization_target_type",b"_utilization_target_type"]) -> typing.Optional[typing_extensions.Literal["utilization_target_type"]]: ...
global___AutoscalingPolicyCustomMetricUtilization = AutoscalingPolicyCustomMetricUtilization

class AutoscalingPolicyLoadBalancingUtilization(google.protobuf.message.Message):
    """Configuration parameters of autoscaling based on load balancing."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UTILIZATION_TARGET_FIELD_NUMBER: builtins.int
    utilization_target: builtins.float = ...
    """Fraction of backend capacity utilization (set in HTTP(S) load balancing configuration) that the autoscaler maintains. Must be a positive float value. If not defined, the default is 0.8."""

    def __init__(self,
        *,
        utilization_target : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_utilization_target",b"_utilization_target","utilization_target",b"utilization_target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_utilization_target",b"_utilization_target","utilization_target",b"utilization_target"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_utilization_target",b"_utilization_target"]) -> typing.Optional[typing_extensions.Literal["utilization_target"]]: ...
global___AutoscalingPolicyLoadBalancingUtilization = AutoscalingPolicyLoadBalancingUtilization

class AutoscalingPolicyScaleInControl(google.protobuf.message.Message):
    """Configuration that allows for slower scale in so that even if Autoscaler recommends an abrupt scale in of a MIG, it will be throttled as specified by the parameters below."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MAX_SCALED_IN_REPLICAS_FIELD_NUMBER: builtins.int
    TIME_WINDOW_SEC_FIELD_NUMBER: builtins.int
    @property
    def max_scaled_in_replicas(self) -> global___FixedOrPercent:
        """Maximum allowed number (or %) of VMs that can be deducted from the peak recommendation during the window autoscaler looks at when computing recommendations. Possibly all these VMs can be deleted at once so user service needs to be prepared to lose that many VMs in one step."""
        pass
    time_window_sec: builtins.int = ...
    """How far back autoscaling looks when computing recommendations to include directives regarding slower scale in, as described above."""

    def __init__(self,
        *,
        max_scaled_in_replicas : typing.Optional[global___FixedOrPercent] = ...,
        time_window_sec : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_max_scaled_in_replicas",b"_max_scaled_in_replicas","_time_window_sec",b"_time_window_sec","max_scaled_in_replicas",b"max_scaled_in_replicas","time_window_sec",b"time_window_sec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_max_scaled_in_replicas",b"_max_scaled_in_replicas","_time_window_sec",b"_time_window_sec","max_scaled_in_replicas",b"max_scaled_in_replicas","time_window_sec",b"time_window_sec"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_scaled_in_replicas",b"_max_scaled_in_replicas"]) -> typing.Optional[typing_extensions.Literal["max_scaled_in_replicas"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_time_window_sec",b"_time_window_sec"]) -> typing.Optional[typing_extensions.Literal["time_window_sec"]]: ...
global___AutoscalingPolicyScaleInControl = AutoscalingPolicyScaleInControl

class AutoscalingPolicyScalingSchedule(google.protobuf.message.Message):
    """Scaling based on user-defined schedule. The message describes a single scaling schedule. A scaling schedule changes the minimum number of VM instances an autoscaler can recommend, which can trigger scaling out."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    DURATION_SEC_FIELD_NUMBER: builtins.int
    MIN_REQUIRED_REPLICAS_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    TIME_ZONE_FIELD_NUMBER: builtins.int
    description: typing.Text = ...
    """A description of a scaling schedule."""

    disabled: builtins.bool = ...
    """A boolean value that specifies whether a scaling schedule can influence autoscaler recommendations. If set to true, then a scaling schedule has no effect. This field is optional, and its value is false by default."""

    duration_sec: builtins.int = ...
    """The duration of time intervals, in seconds, for which this scaling schedule is to run. The minimum allowed value is 300. This field is required."""

    min_required_replicas: builtins.int = ...
    """The minimum number of VM instances that the autoscaler will recommend in time intervals starting according to schedule. This field is required."""

    schedule: typing.Text = ...
    """The start timestamps of time intervals when this scaling schedule is to provide a scaling signal. This field uses the extended cron format (with an optional year field). The expression can describe a single timestamp if the optional year is set, in which case the scaling schedule runs once. The schedule is interpreted with respect to time_zone. This field is required. Note: These timestamps only describe when autoscaler starts providing the scaling signal. The VMs need additional time to become serving."""

    time_zone: typing.Text = ...
    """The time zone to use when interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database. This field is assigned a default value of “UTC” if left empty."""

    def __init__(self,
        *,
        description : typing.Optional[typing.Text] = ...,
        disabled : typing.Optional[builtins.bool] = ...,
        duration_sec : typing.Optional[builtins.int] = ...,
        min_required_replicas : typing.Optional[builtins.int] = ...,
        schedule : typing.Optional[typing.Text] = ...,
        time_zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_disabled",b"_disabled","_duration_sec",b"_duration_sec","_min_required_replicas",b"_min_required_replicas","_schedule",b"_schedule","_time_zone",b"_time_zone","description",b"description","disabled",b"disabled","duration_sec",b"duration_sec","min_required_replicas",b"min_required_replicas","schedule",b"schedule","time_zone",b"time_zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_disabled",b"_disabled","_duration_sec",b"_duration_sec","_min_required_replicas",b"_min_required_replicas","_schedule",b"_schedule","_time_zone",b"_time_zone","description",b"description","disabled",b"disabled","duration_sec",b"duration_sec","min_required_replicas",b"min_required_replicas","schedule",b"schedule","time_zone",b"time_zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disabled",b"_disabled"]) -> typing.Optional[typing_extensions.Literal["disabled"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_duration_sec",b"_duration_sec"]) -> typing.Optional[typing_extensions.Literal["duration_sec"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_required_replicas",b"_min_required_replicas"]) -> typing.Optional[typing_extensions.Literal["min_required_replicas"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_schedule",b"_schedule"]) -> typing.Optional[typing_extensions.Literal["schedule"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_time_zone",b"_time_zone"]) -> typing.Optional[typing_extensions.Literal["time_zone"]]: ...
global___AutoscalingPolicyScalingSchedule = AutoscalingPolicyScalingSchedule

class Backend(google.protobuf.message.Message):
    """Message containing information of one individual backend."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _BalancingMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _BalancingModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_BalancingMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_BALANCING_MODE: Backend.BalancingMode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CONNECTION: Backend.BalancingMode.ValueType = ...  # 246311646
        """Balance based on the number of simultaneous connections."""

        RATE: Backend.BalancingMode.ValueType = ...  # 2508000
        """Balance based on requests per second (RPS)."""

        UTILIZATION: Backend.BalancingMode.ValueType = ...  # 157008386
        """Balance based on the backend utilization."""

    class BalancingMode(_BalancingMode, metaclass=_BalancingModeEnumTypeWrapper):
        """Specifies how to determine whether the backend of a load balancer can handle additional traffic or is fully loaded. For usage guidelines, see Connection balancing mode. Backends must use compatible balancing modes. For more information, see Supported balancing modes and target capacity settings and Restrictions and guidance for instance groups. Note: Currently, if you use the API to configure incompatible balancing modes, the configuration might be accepted even though it has no impact and is ignored. Specifically, Backend.maxUtilization is ignored when Backend.balancingMode is RATE. In the future, this incompatible combination will be rejected."""
        pass

    UNDEFINED_BALANCING_MODE: Backend.BalancingMode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CONNECTION: Backend.BalancingMode.ValueType = ...  # 246311646
    """Balance based on the number of simultaneous connections."""

    RATE: Backend.BalancingMode.ValueType = ...  # 2508000
    """Balance based on requests per second (RPS)."""

    UTILIZATION: Backend.BalancingMode.ValueType = ...  # 157008386
    """Balance based on the backend utilization."""


    BALANCING_MODE_FIELD_NUMBER: builtins.int
    CAPACITY_SCALER_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FAILOVER_FIELD_NUMBER: builtins.int
    GROUP_FIELD_NUMBER: builtins.int
    MAX_CONNECTIONS_FIELD_NUMBER: builtins.int
    MAX_CONNECTIONS_PER_ENDPOINT_FIELD_NUMBER: builtins.int
    MAX_CONNECTIONS_PER_INSTANCE_FIELD_NUMBER: builtins.int
    MAX_RATE_FIELD_NUMBER: builtins.int
    MAX_RATE_PER_ENDPOINT_FIELD_NUMBER: builtins.int
    MAX_RATE_PER_INSTANCE_FIELD_NUMBER: builtins.int
    MAX_UTILIZATION_FIELD_NUMBER: builtins.int
    balancing_mode: typing.Text = ...
    """Specifies how to determine whether the backend of a load balancer can handle additional traffic or is fully loaded. For usage guidelines, see Connection balancing mode. Backends must use compatible balancing modes. For more information, see Supported balancing modes and target capacity settings and Restrictions and guidance for instance groups. Note: Currently, if you use the API to configure incompatible balancing modes, the configuration might be accepted even though it has no impact and is ignored. Specifically, Backend.maxUtilization is ignored when Backend.balancingMode is RATE. In the future, this incompatible combination will be rejected.
    Check the BalancingMode enum for the list of possible values.
    """

    capacity_scaler: builtins.float = ...
    """A multiplier applied to the backend's target capacity of its balancing mode. The default value is 1, which means the group serves up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available capacity. The valid ranges are 0.0 and [0.1,1.0]. You cannot configure a setting larger than 0 and smaller than 0.1. You cannot configure a setting of 0 when there is only one backend attached to the backend service."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    failover: builtins.bool = ...
    """This field designates whether this is a failover backend. More than one failover backend can be configured for a given BackendService."""

    group: typing.Text = ...
    """The fully-qualified URL of an instance group or network endpoint group (NEG) resource. To determine what types of backends a load balancer supports, see the [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service#backends). You must use the *fully-qualified* URL (starting with https://www.googleapis.com/) to specify the instance group or NEG. Partial URLs are not supported."""

    max_connections: builtins.int = ...
    """Defines a target maximum number of simultaneous connections. For usage guidelines, see Connection balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is RATE."""

    max_connections_per_endpoint: builtins.int = ...
    """Defines a target maximum number of simultaneous connections. For usage guidelines, see Connection balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is RATE."""

    max_connections_per_instance: builtins.int = ...
    """Defines a target maximum number of simultaneous connections. For usage guidelines, see Connection balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is RATE."""

    max_rate: builtins.int = ...
    """Defines a maximum number of HTTP requests per second (RPS). For usage guidelines, see Rate balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is CONNECTION."""

    max_rate_per_endpoint: builtins.float = ...
    """Defines a maximum target for requests per second (RPS). For usage guidelines, see Rate balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is CONNECTION."""

    max_rate_per_instance: builtins.float = ...
    """Defines a maximum target for requests per second (RPS). For usage guidelines, see Rate balancing mode and Utilization balancing mode. Not available if the backend's balancingMode is CONNECTION."""

    max_utilization: builtins.float = ...
    """Optional parameter to define a target capacity for the UTILIZATIONbalancing mode. The valid range is [0.0, 1.0]. For usage guidelines, see Utilization balancing mode."""

    def __init__(self,
        *,
        balancing_mode : typing.Optional[typing.Text] = ...,
        capacity_scaler : typing.Optional[builtins.float] = ...,
        description : typing.Optional[typing.Text] = ...,
        failover : typing.Optional[builtins.bool] = ...,
        group : typing.Optional[typing.Text] = ...,
        max_connections : typing.Optional[builtins.int] = ...,
        max_connections_per_endpoint : typing.Optional[builtins.int] = ...,
        max_connections_per_instance : typing.Optional[builtins.int] = ...,
        max_rate : typing.Optional[builtins.int] = ...,
        max_rate_per_endpoint : typing.Optional[builtins.float] = ...,
        max_rate_per_instance : typing.Optional[builtins.float] = ...,
        max_utilization : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_balancing_mode",b"_balancing_mode","_capacity_scaler",b"_capacity_scaler","_description",b"_description","_failover",b"_failover","_group",b"_group","_max_connections",b"_max_connections","_max_connections_per_endpoint",b"_max_connections_per_endpoint","_max_connections_per_instance",b"_max_connections_per_instance","_max_rate",b"_max_rate","_max_rate_per_endpoint",b"_max_rate_per_endpoint","_max_rate_per_instance",b"_max_rate_per_instance","_max_utilization",b"_max_utilization","balancing_mode",b"balancing_mode","capacity_scaler",b"capacity_scaler","description",b"description","failover",b"failover","group",b"group","max_connections",b"max_connections","max_connections_per_endpoint",b"max_connections_per_endpoint","max_connections_per_instance",b"max_connections_per_instance","max_rate",b"max_rate","max_rate_per_endpoint",b"max_rate_per_endpoint","max_rate_per_instance",b"max_rate_per_instance","max_utilization",b"max_utilization"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_balancing_mode",b"_balancing_mode","_capacity_scaler",b"_capacity_scaler","_description",b"_description","_failover",b"_failover","_group",b"_group","_max_connections",b"_max_connections","_max_connections_per_endpoint",b"_max_connections_per_endpoint","_max_connections_per_instance",b"_max_connections_per_instance","_max_rate",b"_max_rate","_max_rate_per_endpoint",b"_max_rate_per_endpoint","_max_rate_per_instance",b"_max_rate_per_instance","_max_utilization",b"_max_utilization","balancing_mode",b"balancing_mode","capacity_scaler",b"capacity_scaler","description",b"description","failover",b"failover","group",b"group","max_connections",b"max_connections","max_connections_per_endpoint",b"max_connections_per_endpoint","max_connections_per_instance",b"max_connections_per_instance","max_rate",b"max_rate","max_rate_per_endpoint",b"max_rate_per_endpoint","max_rate_per_instance",b"max_rate_per_instance","max_utilization",b"max_utilization"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_balancing_mode",b"_balancing_mode"]) -> typing.Optional[typing_extensions.Literal["balancing_mode"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_capacity_scaler",b"_capacity_scaler"]) -> typing.Optional[typing_extensions.Literal["capacity_scaler"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_failover",b"_failover"]) -> typing.Optional[typing_extensions.Literal["failover"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_group",b"_group"]) -> typing.Optional[typing_extensions.Literal["group"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_connections",b"_max_connections"]) -> typing.Optional[typing_extensions.Literal["max_connections"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_connections_per_endpoint",b"_max_connections_per_endpoint"]) -> typing.Optional[typing_extensions.Literal["max_connections_per_endpoint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_connections_per_instance",b"_max_connections_per_instance"]) -> typing.Optional[typing_extensions.Literal["max_connections_per_instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_rate",b"_max_rate"]) -> typing.Optional[typing_extensions.Literal["max_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_rate_per_endpoint",b"_max_rate_per_endpoint"]) -> typing.Optional[typing_extensions.Literal["max_rate_per_endpoint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_rate_per_instance",b"_max_rate_per_instance"]) -> typing.Optional[typing_extensions.Literal["max_rate_per_instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_utilization",b"_max_utilization"]) -> typing.Optional[typing_extensions.Literal["max_utilization"]]: ...
global___Backend = Backend

class BackendBucket(google.protobuf.message.Message):
    """Represents a Cloud Storage Bucket resource. This Cloud Storage bucket resource is referenced by a URL map of a load balancer. For more information, read Backend Buckets."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUCKET_NAME_FIELD_NUMBER: builtins.int
    CDN_POLICY_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    CUSTOM_RESPONSE_HEADERS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ENABLE_CDN_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    bucket_name: typing.Text = ...
    """Cloud Storage bucket name."""

    @property
    def cdn_policy(self) -> global___BackendBucketCdnPolicy:
        """Cloud CDN configuration for this BackendBucket."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def custom_response_headers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Headers that the HTTP/S load balancer should add to proxied responses."""
        pass
    description: typing.Text = ...
    """An optional textual description of the resource; provided by the client when the resource is created."""

    enable_cdn: builtins.bool = ...
    """If true, enable Cloud CDN for this BackendBucket."""

    id: builtins.int = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    kind: typing.Text = ...
    """Type of the resource."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    def __init__(self,
        *,
        bucket_name : typing.Optional[typing.Text] = ...,
        cdn_policy : typing.Optional[global___BackendBucketCdnPolicy] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        custom_response_headers : typing.Optional[typing.Iterable[typing.Text]] = ...,
        description : typing.Optional[typing.Text] = ...,
        enable_cdn : typing.Optional[builtins.bool] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_bucket_name",b"_bucket_name","_cdn_policy",b"_cdn_policy","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_enable_cdn",b"_enable_cdn","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","bucket_name",b"bucket_name","cdn_policy",b"cdn_policy","creation_timestamp",b"creation_timestamp","description",b"description","enable_cdn",b"enable_cdn","id",b"id","kind",b"kind","name",b"name","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_bucket_name",b"_bucket_name","_cdn_policy",b"_cdn_policy","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_enable_cdn",b"_enable_cdn","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","bucket_name",b"bucket_name","cdn_policy",b"cdn_policy","creation_timestamp",b"creation_timestamp","custom_response_headers",b"custom_response_headers","description",b"description","enable_cdn",b"enable_cdn","id",b"id","kind",b"kind","name",b"name","self_link",b"self_link"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_bucket_name",b"_bucket_name"]) -> typing.Optional[typing_extensions.Literal["bucket_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cdn_policy",b"_cdn_policy"]) -> typing.Optional[typing_extensions.Literal["cdn_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_cdn",b"_enable_cdn"]) -> typing.Optional[typing_extensions.Literal["enable_cdn"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___BackendBucket = BackendBucket

class BackendBucketCdnPolicy(google.protobuf.message.Message):
    """Message containing Cloud CDN configuration for a backend bucket."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CacheMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CacheModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CacheMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CACHE_MODE: BackendBucketCdnPolicy.CacheMode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CACHE_ALL_STATIC: BackendBucketCdnPolicy.CacheMode.ValueType = ...  # 355027945
        """Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached."""

        FORCE_CACHE_ALL: BackendBucketCdnPolicy.CacheMode.ValueType = ...  # 486026928
        """Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content."""

        INVALID_CACHE_MODE: BackendBucketCdnPolicy.CacheMode.ValueType = ...  # 381295560
        USE_ORIGIN_HEADERS: BackendBucketCdnPolicy.CacheMode.ValueType = ...  # 55380261
        """Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server."""

    class CacheMode(_CacheMode, metaclass=_CacheModeEnumTypeWrapper):
        """Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached."""
        pass

    UNDEFINED_CACHE_MODE: BackendBucketCdnPolicy.CacheMode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CACHE_ALL_STATIC: BackendBucketCdnPolicy.CacheMode.ValueType = ...  # 355027945
    """Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached."""

    FORCE_CACHE_ALL: BackendBucketCdnPolicy.CacheMode.ValueType = ...  # 486026928
    """Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content."""

    INVALID_CACHE_MODE: BackendBucketCdnPolicy.CacheMode.ValueType = ...  # 381295560
    USE_ORIGIN_HEADERS: BackendBucketCdnPolicy.CacheMode.ValueType = ...  # 55380261
    """Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server."""


    BYPASS_CACHE_ON_REQUEST_HEADERS_FIELD_NUMBER: builtins.int
    CACHE_MODE_FIELD_NUMBER: builtins.int
    CLIENT_TTL_FIELD_NUMBER: builtins.int
    DEFAULT_TTL_FIELD_NUMBER: builtins.int
    MAX_TTL_FIELD_NUMBER: builtins.int
    NEGATIVE_CACHING_FIELD_NUMBER: builtins.int
    NEGATIVE_CACHING_POLICY_FIELD_NUMBER: builtins.int
    REQUEST_COALESCING_FIELD_NUMBER: builtins.int
    SERVE_WHILE_STALE_FIELD_NUMBER: builtins.int
    SIGNED_URL_CACHE_MAX_AGE_SEC_FIELD_NUMBER: builtins.int
    SIGNED_URL_KEY_NAMES_FIELD_NUMBER: builtins.int
    @property
    def bypass_cache_on_request_headers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BackendBucketCdnPolicyBypassCacheOnRequestHeader]:
        """Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified. The cache is bypassed for all cdnPolicy.cacheMode settings."""
        pass
    cache_mode: typing.Text = ...
    """Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
    Check the CacheMode enum for the list of possible values.
    """

    client_ttl: builtins.int = ...
    """Specifies a separate client (e.g. browser client) maximum TTL. This is used to clamp the max-age (or Expires) value sent to the client. With FORCE_CACHE_ALL, the lesser of client_ttl and default_ttl is used for the response max-age directive, along with a "public" directive. For cacheable content in CACHE_ALL_STATIC mode, client_ttl clamps the max-age from the origin (if specified), or else sets the response max-age directive to the lesser of the client_ttl and default_ttl, and also ensures a "public" cache-control directive is present. If a client TTL is not specified, a default value (1 hour) will be used. The maximum allowed value is 86400s (1 day)."""

    default_ttl: builtins.int = ...
    """Specifies the default TTL for cached content served by this origin for responses that do not have an existing valid TTL (max-age or s-max-age). Setting a TTL of "0" means "always revalidate". The value of defaultTTL cannot be set to a value greater than that of maxTTL, but can be equal. When the cacheMode is set to FORCE_CACHE_ALL, the defaultTTL will overwrite the TTL set in all responses. The maximum allowed value is 31,622,400s (1 year), noting that infrequently accessed objects may be evicted from the cache before the defined TTL."""

    max_ttl: builtins.int = ...
    """Specifies the maximum allowed TTL for cached content served by this origin. Cache directives that attempt to set a max-age or s-maxage higher than this, or an Expires header more than maxTTL seconds in the future will be capped at the value of maxTTL, as if it were the value of an s-maxage Cache-Control directive. Headers sent to the client will not be modified. Setting a TTL of "0" means "always revalidate". The maximum allowed value is 31,622,400s (1 year), noting that infrequently accessed objects may be evicted from the cache before the defined TTL."""

    negative_caching: builtins.bool = ...
    """Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects. This can reduce the load on your origin and improve end-user experience by reducing response latency. When the cache mode is set to CACHE_ALL_STATIC or USE_ORIGIN_HEADERS, negative caching applies to responses with the specified response code that lack any Cache-Control, Expires, or Pragma: no-cache directives. When the cache mode is set to FORCE_CACHE_ALL, negative caching applies to all responses with the specified response code, and override any caching headers. By default, Cloud CDN will apply the following default TTLs to these status codes: HTTP 300 (Multiple Choice), 301, 308 (Permanent Redirects): 10m HTTP 404 (Not Found), 410 (Gone), 451 (Unavailable For Legal Reasons): 120s HTTP 405 (Method Not Found), 421 (Misdirected Request), 501 (Not Implemented): 60s. These defaults can be overridden in negative_caching_policy."""

    @property
    def negative_caching_policy(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BackendBucketCdnPolicyNegativeCachingPolicy]:
        """Sets a cache TTL for the specified HTTP status code. negative_caching must be enabled to configure negative_caching_policy. Omitting the policy and leaving negative_caching enabled will use Cloud CDN's default cache TTLs. Note that when specifying an explicit negative_caching_policy, you should take care to specify a cache TTL for all response codes that you wish to cache. Cloud CDN will not apply any default negative caching when a policy exists."""
        pass
    request_coalescing: builtins.bool = ...
    """If true then Cloud CDN will combine multiple concurrent cache fill requests into a small number of requests to the origin."""

    serve_while_stale: builtins.int = ...
    """Serve existing content from the cache (if available) when revalidating content with the origin, or when an error is encountered when refreshing the cache. This setting defines the default "max-stale" duration for any cached responses that do not specify a max-stale directive. Stale responses that exceed the TTL configured here will not be served. The default limit (max-stale) is 86400s (1 day), which will allow stale content to be served up to this limit beyond the max-age (or s-max-age) of a cached response. The maximum allowed value is 604800 (1 week). Set this to zero (0) to disable serve-while-stale."""

    signed_url_cache_max_age_sec: builtins.int = ...
    """Maximum number of seconds the response to a signed URL request will be considered fresh. After this time period, the response will be revalidated before being served. Defaults to 1hr (3600s). When serving responses to signed URL requests, Cloud CDN will internally behave as though all responses from this backend had a "Cache-Control: public, max-age=[TTL]" header, regardless of any existing Cache-Control header. The actual headers served in responses will not be altered."""

    @property
    def signed_url_key_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Names of the keys for signing request URLs."""
        pass
    def __init__(self,
        *,
        bypass_cache_on_request_headers : typing.Optional[typing.Iterable[global___BackendBucketCdnPolicyBypassCacheOnRequestHeader]] = ...,
        cache_mode : typing.Optional[typing.Text] = ...,
        client_ttl : typing.Optional[builtins.int] = ...,
        default_ttl : typing.Optional[builtins.int] = ...,
        max_ttl : typing.Optional[builtins.int] = ...,
        negative_caching : typing.Optional[builtins.bool] = ...,
        negative_caching_policy : typing.Optional[typing.Iterable[global___BackendBucketCdnPolicyNegativeCachingPolicy]] = ...,
        request_coalescing : typing.Optional[builtins.bool] = ...,
        serve_while_stale : typing.Optional[builtins.int] = ...,
        signed_url_cache_max_age_sec : typing.Optional[builtins.int] = ...,
        signed_url_key_names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cache_mode",b"_cache_mode","_client_ttl",b"_client_ttl","_default_ttl",b"_default_ttl","_max_ttl",b"_max_ttl","_negative_caching",b"_negative_caching","_request_coalescing",b"_request_coalescing","_serve_while_stale",b"_serve_while_stale","_signed_url_cache_max_age_sec",b"_signed_url_cache_max_age_sec","cache_mode",b"cache_mode","client_ttl",b"client_ttl","default_ttl",b"default_ttl","max_ttl",b"max_ttl","negative_caching",b"negative_caching","request_coalescing",b"request_coalescing","serve_while_stale",b"serve_while_stale","signed_url_cache_max_age_sec",b"signed_url_cache_max_age_sec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cache_mode",b"_cache_mode","_client_ttl",b"_client_ttl","_default_ttl",b"_default_ttl","_max_ttl",b"_max_ttl","_negative_caching",b"_negative_caching","_request_coalescing",b"_request_coalescing","_serve_while_stale",b"_serve_while_stale","_signed_url_cache_max_age_sec",b"_signed_url_cache_max_age_sec","bypass_cache_on_request_headers",b"bypass_cache_on_request_headers","cache_mode",b"cache_mode","client_ttl",b"client_ttl","default_ttl",b"default_ttl","max_ttl",b"max_ttl","negative_caching",b"negative_caching","negative_caching_policy",b"negative_caching_policy","request_coalescing",b"request_coalescing","serve_while_stale",b"serve_while_stale","signed_url_cache_max_age_sec",b"signed_url_cache_max_age_sec","signed_url_key_names",b"signed_url_key_names"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cache_mode",b"_cache_mode"]) -> typing.Optional[typing_extensions.Literal["cache_mode"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_client_ttl",b"_client_ttl"]) -> typing.Optional[typing_extensions.Literal["client_ttl"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_ttl",b"_default_ttl"]) -> typing.Optional[typing_extensions.Literal["default_ttl"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_ttl",b"_max_ttl"]) -> typing.Optional[typing_extensions.Literal["max_ttl"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_negative_caching",b"_negative_caching"]) -> typing.Optional[typing_extensions.Literal["negative_caching"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_coalescing",b"_request_coalescing"]) -> typing.Optional[typing_extensions.Literal["request_coalescing"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_serve_while_stale",b"_serve_while_stale"]) -> typing.Optional[typing_extensions.Literal["serve_while_stale"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_signed_url_cache_max_age_sec",b"_signed_url_cache_max_age_sec"]) -> typing.Optional[typing_extensions.Literal["signed_url_cache_max_age_sec"]]: ...
global___BackendBucketCdnPolicy = BackendBucketCdnPolicy

class BackendBucketCdnPolicyBypassCacheOnRequestHeader(google.protobuf.message.Message):
    """Bypass the cache when the specified request headers are present, e.g. Pragma or Authorization headers. Values are case insensitive. The presence of such a header overrides the cache_mode setting."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADER_NAME_FIELD_NUMBER: builtins.int
    header_name: typing.Text = ...
    """The header field name to match on when bypassing cache. Values are case-insensitive."""

    def __init__(self,
        *,
        header_name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_header_name",b"_header_name","header_name",b"header_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_header_name",b"_header_name","header_name",b"header_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_header_name",b"_header_name"]) -> typing.Optional[typing_extensions.Literal["header_name"]]: ...
global___BackendBucketCdnPolicyBypassCacheOnRequestHeader = BackendBucketCdnPolicyBypassCacheOnRequestHeader

class BackendBucketCdnPolicyNegativeCachingPolicy(google.protobuf.message.Message):
    """Specify CDN TTLs for response error codes."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODE_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    code: builtins.int = ...
    """The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 302, 307, 308, 404, 405, 410, 421, 451 and 501 are can be specified as values, and you cannot specify a status code more than once."""

    ttl: builtins.int = ...
    """The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL."""

    def __init__(self,
        *,
        code : typing.Optional[builtins.int] = ...,
        ttl : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_code",b"_code","_ttl",b"_ttl","code",b"code","ttl",b"ttl"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_code",b"_code","_ttl",b"_ttl","code",b"code","ttl",b"ttl"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_code",b"_code"]) -> typing.Optional[typing_extensions.Literal["code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ttl",b"_ttl"]) -> typing.Optional[typing_extensions.Literal["ttl"]]: ...
global___BackendBucketCdnPolicyNegativeCachingPolicy = BackendBucketCdnPolicyNegativeCachingPolicy

class BackendBucketList(google.protobuf.message.Message):
    """Contains a list of BackendBucket resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BackendBucket]:
        """A list of BackendBucket resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___BackendBucket]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___BackendBucketList = BackendBucketList

class BackendService(google.protobuf.message.Message):
    """Represents a Backend Service resource. A backend service defines how Google Cloud load balancers distribute traffic. The backend service configuration contains a set of values, such as the protocol used to connect to backends, various distribution and session settings, health checks, and timeouts. These settings provide fine-grained control over how your load balancer behaves. Most of the settings have default values that allow for easy configuration if you need to get started quickly. Backend services in Google Compute Engine can be either regionally or globally scoped. * [Global](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) * [Regional](https://cloud.google.com/compute/docs/reference/rest/v1/regionBackendServices) For more information, see Backend Services."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _LoadBalancingScheme:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LoadBalancingSchemeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LoadBalancingScheme.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_LOAD_BALANCING_SCHEME: BackendService.LoadBalancingScheme.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        EXTERNAL: BackendService.LoadBalancingScheme.ValueType = ...  # 35607499
        """Signifies that this will be used for external HTTP(S), SSL Proxy, TCP Proxy, or Network Load Balancing"""

        INTERNAL: BackendService.LoadBalancingScheme.ValueType = ...  # 279295677
        """Signifies that this will be used for Internal TCP/UDP Load Balancing."""

        INTERNAL_MANAGED: BackendService.LoadBalancingScheme.ValueType = ...  # 37350397
        """Signifies that this will be used for Internal HTTP(S) Load Balancing."""

        INTERNAL_SELF_MANAGED: BackendService.LoadBalancingScheme.ValueType = ...  # 236211150
        """Signifies that this will be used by Traffic Director."""

        INVALID_LOAD_BALANCING_SCHEME: BackendService.LoadBalancingScheme.ValueType = ...  # 275352060
    class LoadBalancingScheme(_LoadBalancingScheme, metaclass=_LoadBalancingSchemeEnumTypeWrapper):
        """Specifies the load balancer type. A backend service created for one type of load balancer cannot be used with another. For more information, refer to Choosing a load balancer."""
        pass

    UNDEFINED_LOAD_BALANCING_SCHEME: BackendService.LoadBalancingScheme.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    EXTERNAL: BackendService.LoadBalancingScheme.ValueType = ...  # 35607499
    """Signifies that this will be used for external HTTP(S), SSL Proxy, TCP Proxy, or Network Load Balancing"""

    INTERNAL: BackendService.LoadBalancingScheme.ValueType = ...  # 279295677
    """Signifies that this will be used for Internal TCP/UDP Load Balancing."""

    INTERNAL_MANAGED: BackendService.LoadBalancingScheme.ValueType = ...  # 37350397
    """Signifies that this will be used for Internal HTTP(S) Load Balancing."""

    INTERNAL_SELF_MANAGED: BackendService.LoadBalancingScheme.ValueType = ...  # 236211150
    """Signifies that this will be used by Traffic Director."""

    INVALID_LOAD_BALANCING_SCHEME: BackendService.LoadBalancingScheme.ValueType = ...  # 275352060

    class _LocalityLbPolicy:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LocalityLbPolicyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LocalityLbPolicy.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_LOCALITY_LB_POLICY: BackendService.LocalityLbPolicy.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        INVALID_LB_POLICY: BackendService.LocalityLbPolicy.ValueType = ...  # 323318707
        LEAST_REQUEST: BackendService.LocalityLbPolicy.ValueType = ...  # 46604921
        """An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests."""

        MAGLEV: BackendService.LocalityLbPolicy.ValueType = ...  # 119180266
        """This algorithm implements consistent hashing to backends. Maglev can be used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824"""

        ORIGINAL_DESTINATION: BackendService.LocalityLbPolicy.ValueType = ...  # 166297216
        """Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer."""

        RANDOM: BackendService.LocalityLbPolicy.ValueType = ...  # 262527171
        """The load balancer selects a random healthy host."""

        RING_HASH: BackendService.LocalityLbPolicy.ValueType = ...  # 432795069
        """The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests."""

        ROUND_ROBIN: BackendService.LocalityLbPolicy.ValueType = ...  # 153895801
        """This is a simple policy in which each healthy backend is selected in round robin order. This is the default."""

    class LocalityLbPolicy(_LocalityLbPolicy, metaclass=_LocalityLbPolicyEnumTypeWrapper):
        """The load balancing algorithm used within the scope of the locality. The possible values are: - ROUND_ROBIN: This is a simple policy in which each healthy backend is selected in round robin order. This is the default. - LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests. - RING_HASH: The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests. - RANDOM: The load balancer selects a random healthy host. - ORIGINAL_DESTINATION: Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer. - MAGLEV: used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824 This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. If sessionAffinity is not NONE, and this field is not set to MAGLEV or RING_HASH, session affinity settings will not take effect. Only the default ROUND_ROBIN policy is supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass

    UNDEFINED_LOCALITY_LB_POLICY: BackendService.LocalityLbPolicy.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    INVALID_LB_POLICY: BackendService.LocalityLbPolicy.ValueType = ...  # 323318707
    LEAST_REQUEST: BackendService.LocalityLbPolicy.ValueType = ...  # 46604921
    """An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests."""

    MAGLEV: BackendService.LocalityLbPolicy.ValueType = ...  # 119180266
    """This algorithm implements consistent hashing to backends. Maglev can be used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824"""

    ORIGINAL_DESTINATION: BackendService.LocalityLbPolicy.ValueType = ...  # 166297216
    """Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer."""

    RANDOM: BackendService.LocalityLbPolicy.ValueType = ...  # 262527171
    """The load balancer selects a random healthy host."""

    RING_HASH: BackendService.LocalityLbPolicy.ValueType = ...  # 432795069
    """The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests."""

    ROUND_ROBIN: BackendService.LocalityLbPolicy.ValueType = ...  # 153895801
    """This is a simple policy in which each healthy backend is selected in round robin order. This is the default."""


    class _Protocol:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProtocolEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Protocol.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROTOCOL: BackendService.Protocol.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        GRPC: BackendService.Protocol.ValueType = ...  # 2196510
        """gRPC (available for Traffic Director)."""

        HTTP: BackendService.Protocol.ValueType = ...  # 2228360
        HTTP2: BackendService.Protocol.ValueType = ...  # 69079210
        """HTTP/2 with SSL."""

        HTTPS: BackendService.Protocol.ValueType = ...  # 69079243
        SSL: BackendService.Protocol.ValueType = ...  # 82412
        """TCP proxying with SSL."""

        TCP: BackendService.Protocol.ValueType = ...  # 82881
        """TCP proxying or TCP pass-through."""

        UDP: BackendService.Protocol.ValueType = ...  # 83873
        """UDP."""

    class Protocol(_Protocol, metaclass=_ProtocolEnumTypeWrapper):
        """The protocol this BackendService uses to communicate with backends. Possible values are HTTP, HTTPS, HTTP2, TCP, SSL, UDP or GRPC. depending on the chosen load balancer or Traffic Director configuration. Refer to the documentation for the load balancers or for Traffic Director for more information. Must be set to GRPC when the backend service is referenced by a URL map that is bound to target gRPC proxy."""
        pass

    UNDEFINED_PROTOCOL: BackendService.Protocol.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    GRPC: BackendService.Protocol.ValueType = ...  # 2196510
    """gRPC (available for Traffic Director)."""

    HTTP: BackendService.Protocol.ValueType = ...  # 2228360
    HTTP2: BackendService.Protocol.ValueType = ...  # 69079210
    """HTTP/2 with SSL."""

    HTTPS: BackendService.Protocol.ValueType = ...  # 69079243
    SSL: BackendService.Protocol.ValueType = ...  # 82412
    """TCP proxying with SSL."""

    TCP: BackendService.Protocol.ValueType = ...  # 82881
    """TCP proxying or TCP pass-through."""

    UDP: BackendService.Protocol.ValueType = ...  # 83873
    """UDP."""


    class _SessionAffinity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SessionAffinityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SessionAffinity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_SESSION_AFFINITY: BackendService.SessionAffinity.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CLIENT_IP: BackendService.SessionAffinity.ValueType = ...  # 345665051
        """2-tuple hash on packet's source and destination IP addresses. Connections from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy."""

        CLIENT_IP_NO_DESTINATION: BackendService.SessionAffinity.ValueType = ...  # 106122516
        """1-tuple hash only on packet's source IP address. Connections from the same source IP address will be served by the same backend VM while that VM remains healthy. This option can only be used for Internal TCP/UDP Load Balancing."""

        CLIENT_IP_PORT_PROTO: BackendService.SessionAffinity.ValueType = ...  # 221722926
        """5-tuple hash on packet's source and destination IP addresses, IP protocol, and source and destination ports. Connections for the same IP protocol from the same source IP address and port to the same destination IP address and port will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing."""

        CLIENT_IP_PROTO: BackendService.SessionAffinity.ValueType = ...  # 25322148
        """3-tuple hash on packet's source and destination IP addresses, and IP protocol. Connections for the same IP protocol from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing."""

        GENERATED_COOKIE: BackendService.SessionAffinity.ValueType = ...  # 370321204
        """Hash based on a cookie generated by the L7 loadbalancer. Only valid for HTTP(S) load balancing."""

        HEADER_FIELD: BackendService.SessionAffinity.ValueType = ...  # 200737960
        """The hash is based on a user specified header field."""

        HTTP_COOKIE: BackendService.SessionAffinity.ValueType = ...  # 494981627
        """The hash is based on a user provided cookie."""

        NONE: BackendService.SessionAffinity.ValueType = ...  # 2402104
        """No session affinity. Connections from the same client IP may go to any instance in the pool."""

    class SessionAffinity(_SessionAffinity, metaclass=_SessionAffinityEnumTypeWrapper):
        """Type of session affinity to use. The default is NONE. For a detailed description of session affinity options, see: [Session affinity](https://cloud.google.com/load-balancing/docs/backend-service#session_affinity). Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass

    UNDEFINED_SESSION_AFFINITY: BackendService.SessionAffinity.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CLIENT_IP: BackendService.SessionAffinity.ValueType = ...  # 345665051
    """2-tuple hash on packet's source and destination IP addresses. Connections from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy."""

    CLIENT_IP_NO_DESTINATION: BackendService.SessionAffinity.ValueType = ...  # 106122516
    """1-tuple hash only on packet's source IP address. Connections from the same source IP address will be served by the same backend VM while that VM remains healthy. This option can only be used for Internal TCP/UDP Load Balancing."""

    CLIENT_IP_PORT_PROTO: BackendService.SessionAffinity.ValueType = ...  # 221722926
    """5-tuple hash on packet's source and destination IP addresses, IP protocol, and source and destination ports. Connections for the same IP protocol from the same source IP address and port to the same destination IP address and port will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing."""

    CLIENT_IP_PROTO: BackendService.SessionAffinity.ValueType = ...  # 25322148
    """3-tuple hash on packet's source and destination IP addresses, and IP protocol. Connections for the same IP protocol from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing."""

    GENERATED_COOKIE: BackendService.SessionAffinity.ValueType = ...  # 370321204
    """Hash based on a cookie generated by the L7 loadbalancer. Only valid for HTTP(S) load balancing."""

    HEADER_FIELD: BackendService.SessionAffinity.ValueType = ...  # 200737960
    """The hash is based on a user specified header field."""

    HTTP_COOKIE: BackendService.SessionAffinity.ValueType = ...  # 494981627
    """The hash is based on a user provided cookie."""

    NONE: BackendService.SessionAffinity.ValueType = ...  # 2402104
    """No session affinity. Connections from the same client IP may go to any instance in the pool."""


    AFFINITY_COOKIE_TTL_SEC_FIELD_NUMBER: builtins.int
    BACKENDS_FIELD_NUMBER: builtins.int
    CDN_POLICY_FIELD_NUMBER: builtins.int
    CIRCUIT_BREAKERS_FIELD_NUMBER: builtins.int
    CONNECTION_DRAINING_FIELD_NUMBER: builtins.int
    CONSISTENT_HASH_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    CUSTOM_REQUEST_HEADERS_FIELD_NUMBER: builtins.int
    CUSTOM_RESPONSE_HEADERS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ENABLE_C_D_N_FIELD_NUMBER: builtins.int
    FAILOVER_POLICY_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    HEALTH_CHECKS_FIELD_NUMBER: builtins.int
    IAP_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LOAD_BALANCING_SCHEME_FIELD_NUMBER: builtins.int
    LOCALITY_LB_POLICY_FIELD_NUMBER: builtins.int
    LOG_CONFIG_FIELD_NUMBER: builtins.int
    MAX_STREAM_DURATION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    OUTLIER_DETECTION_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    PORT_NAME_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_FIELD_NUMBER: builtins.int
    SECURITY_SETTINGS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SESSION_AFFINITY_FIELD_NUMBER: builtins.int
    SUBSETTING_FIELD_NUMBER: builtins.int
    TIMEOUT_SEC_FIELD_NUMBER: builtins.int
    affinity_cookie_ttl_sec: builtins.int = ...
    """Lifetime of cookies in seconds. This setting is applicable to external and internal HTTP(S) load balancers and Traffic Director and requires GENERATED_COOKIE or HTTP_COOKIE session affinity. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value is one day (86,400). Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true."""

    @property
    def backends(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Backend]:
        """The list of backends that serve this BackendService."""
        pass
    @property
    def cdn_policy(self) -> global___BackendServiceCdnPolicy:
        """Cloud CDN configuration for this BackendService. Only available for specified load balancer types."""
        pass
    @property
    def circuit_breakers(self) -> global___CircuitBreakers: ...
    @property
    def connection_draining(self) -> global___ConnectionDraining: ...
    @property
    def consistent_hash(self) -> global___ConsistentHashLoadBalancerSettings:
        """Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular destination host will be lost when one or more hosts are added/removed from the destination service. This field specifies parameters that control consistent hashing. This field is only applicable when localityLbPolicy is set to MAGLEV or RING_HASH. This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def custom_request_headers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Headers that the load balancer adds to proxied requests. See [Creating custom headers](https://cloud.google.com/load-balancing/docs/custom-headers)."""
        pass
    @property
    def custom_response_headers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Headers that the load balancer adds to proxied responses. See [Creating custom headers](https://cloud.google.com/load-balancing/docs/custom-headers)."""
        pass
    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    enable_c_d_n: builtins.bool = ...
    """If true, enables Cloud CDN for the backend service of an external HTTP(S) load balancer."""

    @property
    def failover_policy(self) -> global___BackendServiceFailoverPolicy:
        """Requires at least one backend instance group to be defined as a backup (failover) backend. For load balancers that have configurable failover: [Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview) and [external TCP/UDP Load Balancing](/network/networklb-failover-overview)."""
        pass
    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a BackendService."""

    @property
    def health_checks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of URLs to the healthChecks, httpHealthChecks (legacy), or httpsHealthChecks (legacy) resource for health checking this backend service. Not all backend services support legacy health checks. See Load balancer guide. Currently, at most one health check can be specified for each backend service. Backend services with instance group or zonal NEG backends must have a health check. Backend services with internet or serverless NEG backends must not have a health check."""
        pass
    @property
    def iap(self) -> global___BackendServiceIAP:
        """The configurations for Identity-Aware Proxy on this resource. Not available for Internal TCP/UDP Load Balancing and Network Load Balancing."""
        pass
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#backendService for backend services."""

    load_balancing_scheme: typing.Text = ...
    """Specifies the load balancer type. A backend service created for one type of load balancer cannot be used with another. For more information, refer to Choosing a load balancer.
    Check the LoadBalancingScheme enum for the list of possible values.
    """

    locality_lb_policy: typing.Text = ...
    """The load balancing algorithm used within the scope of the locality. The possible values are: - ROUND_ROBIN: This is a simple policy in which each healthy backend is selected in round robin order. This is the default. - LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests. - RING_HASH: The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests. - RANDOM: The load balancer selects a random healthy host. - ORIGINAL_DESTINATION: Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer. - MAGLEV: used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, see https://ai.google/research/pubs/pub44824 This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. If sessionAffinity is not NONE, and this field is not set to MAGLEV or RING_HASH, session affinity settings will not take effect. Only the default ROUND_ROBIN policy is supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
    Check the LocalityLbPolicy enum for the list of possible values.
    """

    @property
    def log_config(self) -> global___BackendServiceLogConfig:
        """This field denotes the logging options for the load balancer traffic served by this backend service. If logging is enabled, logs will be exported to Stackdriver."""
        pass
    @property
    def max_stream_duration(self) -> global___Duration:
        """Specifies the default maximum duration (timeout) for streams to this service. Duration is computed from the beginning of the stream until the response has been completely processed, including all retries. A stream that does not complete in this duration is closed. If not specified, there will be no timeout limit, i.e. the maximum duration is infinite. This value can be overridden in the PathMatcher configuration of the UrlMap that references this backend service. This field is only allowed when the loadBalancingScheme of the backend service is INTERNAL_SELF_MANAGED."""
        pass
    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    network: typing.Text = ...
    """The URL of the network to which this backend service belongs. This field can only be specified when the load balancing scheme is set to INTERNAL."""

    @property
    def outlier_detection(self) -> global___OutlierDetection:
        """Settings controlling the eviction of unhealthy hosts from the load balancing pool for the backend service. If not set, this feature is considered disabled. This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    port: builtins.int = ...
    """Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80. For Internal TCP/UDP Load Balancing and Network Load Balancing, omit port."""

    port_name: typing.Text = ...
    """A named port on a backend instance group representing the port for communication to the backend VMs in that group. The named port must be [defined on each backend instance group](https://cloud.google.com/load-balancing/docs/backend-service#named_ports). This parameter has no meaning if the backends are NEGs. For Internal TCP/UDP Load Balancing and Network Load Balancing, omit port_name."""

    protocol: typing.Text = ...
    """The protocol this BackendService uses to communicate with backends. Possible values are HTTP, HTTPS, HTTP2, TCP, SSL, UDP or GRPC. depending on the chosen load balancer or Traffic Director configuration. Refer to the documentation for the load balancers or for Traffic Director for more information. Must be set to GRPC when the backend service is referenced by a URL map that is bound to target gRPC proxy.
    Check the Protocol enum for the list of possible values.
    """

    region: typing.Text = ...
    """[Output Only] URL of the region where the regional backend service resides. This field is not applicable to global backend services. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    security_policy: typing.Text = ...
    """[Output Only] The resource URL for the security policy associated with this backend service."""

    @property
    def security_settings(self) -> global___SecuritySettings:
        """This field specifies the security policy that applies to this backend service. This field is applicable to either: - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    session_affinity: typing.Text = ...
    """Type of session affinity to use. The default is NONE. For a detailed description of session affinity options, see: [Session affinity](https://cloud.google.com/load-balancing/docs/backend-service#session_affinity). Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
    Check the SessionAffinity enum for the list of possible values.
    """

    @property
    def subsetting(self) -> global___Subsetting: ...
    timeout_sec: builtins.int = ...
    """Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true. Instead, use maxStreamDuration."""

    def __init__(self,
        *,
        affinity_cookie_ttl_sec : typing.Optional[builtins.int] = ...,
        backends : typing.Optional[typing.Iterable[global___Backend]] = ...,
        cdn_policy : typing.Optional[global___BackendServiceCdnPolicy] = ...,
        circuit_breakers : typing.Optional[global___CircuitBreakers] = ...,
        connection_draining : typing.Optional[global___ConnectionDraining] = ...,
        consistent_hash : typing.Optional[global___ConsistentHashLoadBalancerSettings] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        custom_request_headers : typing.Optional[typing.Iterable[typing.Text]] = ...,
        custom_response_headers : typing.Optional[typing.Iterable[typing.Text]] = ...,
        description : typing.Optional[typing.Text] = ...,
        enable_c_d_n : typing.Optional[builtins.bool] = ...,
        failover_policy : typing.Optional[global___BackendServiceFailoverPolicy] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        health_checks : typing.Optional[typing.Iterable[typing.Text]] = ...,
        iap : typing.Optional[global___BackendServiceIAP] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        load_balancing_scheme : typing.Optional[typing.Text] = ...,
        locality_lb_policy : typing.Optional[typing.Text] = ...,
        log_config : typing.Optional[global___BackendServiceLogConfig] = ...,
        max_stream_duration : typing.Optional[global___Duration] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        outlier_detection : typing.Optional[global___OutlierDetection] = ...,
        port : typing.Optional[builtins.int] = ...,
        port_name : typing.Optional[typing.Text] = ...,
        protocol : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        security_policy : typing.Optional[typing.Text] = ...,
        security_settings : typing.Optional[global___SecuritySettings] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        session_affinity : typing.Optional[typing.Text] = ...,
        subsetting : typing.Optional[global___Subsetting] = ...,
        timeout_sec : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_affinity_cookie_ttl_sec",b"_affinity_cookie_ttl_sec","_cdn_policy",b"_cdn_policy","_circuit_breakers",b"_circuit_breakers","_connection_draining",b"_connection_draining","_consistent_hash",b"_consistent_hash","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_enable_c_d_n",b"_enable_c_d_n","_failover_policy",b"_failover_policy","_fingerprint",b"_fingerprint","_iap",b"_iap","_id",b"_id","_kind",b"_kind","_load_balancing_scheme",b"_load_balancing_scheme","_locality_lb_policy",b"_locality_lb_policy","_log_config",b"_log_config","_max_stream_duration",b"_max_stream_duration","_name",b"_name","_network",b"_network","_outlier_detection",b"_outlier_detection","_port",b"_port","_port_name",b"_port_name","_protocol",b"_protocol","_region",b"_region","_security_policy",b"_security_policy","_security_settings",b"_security_settings","_self_link",b"_self_link","_session_affinity",b"_session_affinity","_subsetting",b"_subsetting","_timeout_sec",b"_timeout_sec","affinity_cookie_ttl_sec",b"affinity_cookie_ttl_sec","cdn_policy",b"cdn_policy","circuit_breakers",b"circuit_breakers","connection_draining",b"connection_draining","consistent_hash",b"consistent_hash","creation_timestamp",b"creation_timestamp","description",b"description","enable_c_d_n",b"enable_c_d_n","failover_policy",b"failover_policy","fingerprint",b"fingerprint","iap",b"iap","id",b"id","kind",b"kind","load_balancing_scheme",b"load_balancing_scheme","locality_lb_policy",b"locality_lb_policy","log_config",b"log_config","max_stream_duration",b"max_stream_duration","name",b"name","network",b"network","outlier_detection",b"outlier_detection","port",b"port","port_name",b"port_name","protocol",b"protocol","region",b"region","security_policy",b"security_policy","security_settings",b"security_settings","self_link",b"self_link","session_affinity",b"session_affinity","subsetting",b"subsetting","timeout_sec",b"timeout_sec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_affinity_cookie_ttl_sec",b"_affinity_cookie_ttl_sec","_cdn_policy",b"_cdn_policy","_circuit_breakers",b"_circuit_breakers","_connection_draining",b"_connection_draining","_consistent_hash",b"_consistent_hash","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_enable_c_d_n",b"_enable_c_d_n","_failover_policy",b"_failover_policy","_fingerprint",b"_fingerprint","_iap",b"_iap","_id",b"_id","_kind",b"_kind","_load_balancing_scheme",b"_load_balancing_scheme","_locality_lb_policy",b"_locality_lb_policy","_log_config",b"_log_config","_max_stream_duration",b"_max_stream_duration","_name",b"_name","_network",b"_network","_outlier_detection",b"_outlier_detection","_port",b"_port","_port_name",b"_port_name","_protocol",b"_protocol","_region",b"_region","_security_policy",b"_security_policy","_security_settings",b"_security_settings","_self_link",b"_self_link","_session_affinity",b"_session_affinity","_subsetting",b"_subsetting","_timeout_sec",b"_timeout_sec","affinity_cookie_ttl_sec",b"affinity_cookie_ttl_sec","backends",b"backends","cdn_policy",b"cdn_policy","circuit_breakers",b"circuit_breakers","connection_draining",b"connection_draining","consistent_hash",b"consistent_hash","creation_timestamp",b"creation_timestamp","custom_request_headers",b"custom_request_headers","custom_response_headers",b"custom_response_headers","description",b"description","enable_c_d_n",b"enable_c_d_n","failover_policy",b"failover_policy","fingerprint",b"fingerprint","health_checks",b"health_checks","iap",b"iap","id",b"id","kind",b"kind","load_balancing_scheme",b"load_balancing_scheme","locality_lb_policy",b"locality_lb_policy","log_config",b"log_config","max_stream_duration",b"max_stream_duration","name",b"name","network",b"network","outlier_detection",b"outlier_detection","port",b"port","port_name",b"port_name","protocol",b"protocol","region",b"region","security_policy",b"security_policy","security_settings",b"security_settings","self_link",b"self_link","session_affinity",b"session_affinity","subsetting",b"subsetting","timeout_sec",b"timeout_sec"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_affinity_cookie_ttl_sec",b"_affinity_cookie_ttl_sec"]) -> typing.Optional[typing_extensions.Literal["affinity_cookie_ttl_sec"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cdn_policy",b"_cdn_policy"]) -> typing.Optional[typing_extensions.Literal["cdn_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_circuit_breakers",b"_circuit_breakers"]) -> typing.Optional[typing_extensions.Literal["circuit_breakers"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_connection_draining",b"_connection_draining"]) -> typing.Optional[typing_extensions.Literal["connection_draining"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_consistent_hash",b"_consistent_hash"]) -> typing.Optional[typing_extensions.Literal["consistent_hash"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_c_d_n",b"_enable_c_d_n"]) -> typing.Optional[typing_extensions.Literal["enable_c_d_n"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_failover_policy",b"_failover_policy"]) -> typing.Optional[typing_extensions.Literal["failover_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_iap",b"_iap"]) -> typing.Optional[typing_extensions.Literal["iap"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_load_balancing_scheme",b"_load_balancing_scheme"]) -> typing.Optional[typing_extensions.Literal["load_balancing_scheme"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_locality_lb_policy",b"_locality_lb_policy"]) -> typing.Optional[typing_extensions.Literal["locality_lb_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_log_config",b"_log_config"]) -> typing.Optional[typing_extensions.Literal["log_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_stream_duration",b"_max_stream_duration"]) -> typing.Optional[typing_extensions.Literal["max_stream_duration"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_outlier_detection",b"_outlier_detection"]) -> typing.Optional[typing_extensions.Literal["outlier_detection"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_name",b"_port_name"]) -> typing.Optional[typing_extensions.Literal["port_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_protocol",b"_protocol"]) -> typing.Optional[typing_extensions.Literal["protocol"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_security_policy",b"_security_policy"]) -> typing.Optional[typing_extensions.Literal["security_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_security_settings",b"_security_settings"]) -> typing.Optional[typing_extensions.Literal["security_settings"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_session_affinity",b"_session_affinity"]) -> typing.Optional[typing_extensions.Literal["session_affinity"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_subsetting",b"_subsetting"]) -> typing.Optional[typing_extensions.Literal["subsetting"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_timeout_sec",b"_timeout_sec"]) -> typing.Optional[typing_extensions.Literal["timeout_sec"]]: ...
global___BackendService = BackendService

class BackendServiceAggregatedList(google.protobuf.message.Message):
    """Contains a list of BackendServicesScopedList."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___BackendServicesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___BackendServicesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___BackendServicesScopedList]:
        """A list of BackendServicesScopedList resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___BackendServicesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___BackendServiceAggregatedList = BackendServiceAggregatedList

class BackendServiceCdnPolicy(google.protobuf.message.Message):
    """Message containing Cloud CDN configuration for a backend service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CacheMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CacheModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CacheMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CACHE_MODE: BackendServiceCdnPolicy.CacheMode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CACHE_ALL_STATIC: BackendServiceCdnPolicy.CacheMode.ValueType = ...  # 355027945
        """Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached."""

        FORCE_CACHE_ALL: BackendServiceCdnPolicy.CacheMode.ValueType = ...  # 486026928
        """Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content."""

        INVALID_CACHE_MODE: BackendServiceCdnPolicy.CacheMode.ValueType = ...  # 381295560
        USE_ORIGIN_HEADERS: BackendServiceCdnPolicy.CacheMode.ValueType = ...  # 55380261
        """Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server."""

    class CacheMode(_CacheMode, metaclass=_CacheModeEnumTypeWrapper):
        """Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached."""
        pass

    UNDEFINED_CACHE_MODE: BackendServiceCdnPolicy.CacheMode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CACHE_ALL_STATIC: BackendServiceCdnPolicy.CacheMode.ValueType = ...  # 355027945
    """Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached."""

    FORCE_CACHE_ALL: BackendServiceCdnPolicy.CacheMode.ValueType = ...  # 486026928
    """Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content."""

    INVALID_CACHE_MODE: BackendServiceCdnPolicy.CacheMode.ValueType = ...  # 381295560
    USE_ORIGIN_HEADERS: BackendServiceCdnPolicy.CacheMode.ValueType = ...  # 55380261
    """Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server."""


    BYPASS_CACHE_ON_REQUEST_HEADERS_FIELD_NUMBER: builtins.int
    CACHE_KEY_POLICY_FIELD_NUMBER: builtins.int
    CACHE_MODE_FIELD_NUMBER: builtins.int
    CLIENT_TTL_FIELD_NUMBER: builtins.int
    DEFAULT_TTL_FIELD_NUMBER: builtins.int
    MAX_TTL_FIELD_NUMBER: builtins.int
    NEGATIVE_CACHING_FIELD_NUMBER: builtins.int
    NEGATIVE_CACHING_POLICY_FIELD_NUMBER: builtins.int
    REQUEST_COALESCING_FIELD_NUMBER: builtins.int
    SERVE_WHILE_STALE_FIELD_NUMBER: builtins.int
    SIGNED_URL_CACHE_MAX_AGE_SEC_FIELD_NUMBER: builtins.int
    SIGNED_URL_KEY_NAMES_FIELD_NUMBER: builtins.int
    @property
    def bypass_cache_on_request_headers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BackendServiceCdnPolicyBypassCacheOnRequestHeader]:
        """Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified. The cache is bypassed for all cdnPolicy.cacheMode settings."""
        pass
    @property
    def cache_key_policy(self) -> global___CacheKeyPolicy:
        """The CacheKeyPolicy for this CdnPolicy."""
        pass
    cache_mode: typing.Text = ...
    """Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
    Check the CacheMode enum for the list of possible values.
    """

    client_ttl: builtins.int = ...
    """Specifies a separate client (e.g. browser client) maximum TTL. This is used to clamp the max-age (or Expires) value sent to the client. With FORCE_CACHE_ALL, the lesser of client_ttl and default_ttl is used for the response max-age directive, along with a "public" directive. For cacheable content in CACHE_ALL_STATIC mode, client_ttl clamps the max-age from the origin (if specified), or else sets the response max-age directive to the lesser of the client_ttl and default_ttl, and also ensures a "public" cache-control directive is present. If a client TTL is not specified, a default value (1 hour) will be used. The maximum allowed value is 86400s (1 day)."""

    default_ttl: builtins.int = ...
    """Specifies the default TTL for cached content served by this origin for responses that do not have an existing valid TTL (max-age or s-max-age). Setting a TTL of "0" means "always revalidate". The value of defaultTTL cannot be set to a value greater than that of maxTTL, but can be equal. When the cacheMode is set to FORCE_CACHE_ALL, the defaultTTL will overwrite the TTL set in all responses. The maximum allowed value is 31,622,400s (1 year), noting that infrequently accessed objects may be evicted from the cache before the defined TTL."""

    max_ttl: builtins.int = ...
    """Specifies the maximum allowed TTL for cached content served by this origin. Cache directives that attempt to set a max-age or s-maxage higher than this, or an Expires header more than maxTTL seconds in the future will be capped at the value of maxTTL, as if it were the value of an s-maxage Cache-Control directive. Headers sent to the client will not be modified. Setting a TTL of "0" means "always revalidate". The maximum allowed value is 31,622,400s (1 year), noting that infrequently accessed objects may be evicted from the cache before the defined TTL."""

    negative_caching: builtins.bool = ...
    """Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects. This can reduce the load on your origin and improve end-user experience by reducing response latency. When the cache mode is set to CACHE_ALL_STATIC or USE_ORIGIN_HEADERS, negative caching applies to responses with the specified response code that lack any Cache-Control, Expires, or Pragma: no-cache directives. When the cache mode is set to FORCE_CACHE_ALL, negative caching applies to all responses with the specified response code, and override any caching headers. By default, Cloud CDN will apply the following default TTLs to these status codes: HTTP 300 (Multiple Choice), 301, 308 (Permanent Redirects): 10m HTTP 404 (Not Found), 410 (Gone), 451 (Unavailable For Legal Reasons): 120s HTTP 405 (Method Not Found), 421 (Misdirected Request), 501 (Not Implemented): 60s. These defaults can be overridden in negative_caching_policy."""

    @property
    def negative_caching_policy(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BackendServiceCdnPolicyNegativeCachingPolicy]:
        """Sets a cache TTL for the specified HTTP status code. negative_caching must be enabled to configure negative_caching_policy. Omitting the policy and leaving negative_caching enabled will use Cloud CDN's default cache TTLs. Note that when specifying an explicit negative_caching_policy, you should take care to specify a cache TTL for all response codes that you wish to cache. Cloud CDN will not apply any default negative caching when a policy exists."""
        pass
    request_coalescing: builtins.bool = ...
    """If true then Cloud CDN will combine multiple concurrent cache fill requests into a small number of requests to the origin."""

    serve_while_stale: builtins.int = ...
    """Serve existing content from the cache (if available) when revalidating content with the origin, or when an error is encountered when refreshing the cache. This setting defines the default "max-stale" duration for any cached responses that do not specify a max-stale directive. Stale responses that exceed the TTL configured here will not be served. The default limit (max-stale) is 86400s (1 day), which will allow stale content to be served up to this limit beyond the max-age (or s-max-age) of a cached response. The maximum allowed value is 604800 (1 week). Set this to zero (0) to disable serve-while-stale."""

    signed_url_cache_max_age_sec: builtins.int = ...
    """Maximum number of seconds the response to a signed URL request will be considered fresh. After this time period, the response will be revalidated before being served. Defaults to 1hr (3600s). When serving responses to signed URL requests, Cloud CDN will internally behave as though all responses from this backend had a "Cache-Control: public, max-age=[TTL]" header, regardless of any existing Cache-Control header. The actual headers served in responses will not be altered."""

    @property
    def signed_url_key_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Names of the keys for signing request URLs."""
        pass
    def __init__(self,
        *,
        bypass_cache_on_request_headers : typing.Optional[typing.Iterable[global___BackendServiceCdnPolicyBypassCacheOnRequestHeader]] = ...,
        cache_key_policy : typing.Optional[global___CacheKeyPolicy] = ...,
        cache_mode : typing.Optional[typing.Text] = ...,
        client_ttl : typing.Optional[builtins.int] = ...,
        default_ttl : typing.Optional[builtins.int] = ...,
        max_ttl : typing.Optional[builtins.int] = ...,
        negative_caching : typing.Optional[builtins.bool] = ...,
        negative_caching_policy : typing.Optional[typing.Iterable[global___BackendServiceCdnPolicyNegativeCachingPolicy]] = ...,
        request_coalescing : typing.Optional[builtins.bool] = ...,
        serve_while_stale : typing.Optional[builtins.int] = ...,
        signed_url_cache_max_age_sec : typing.Optional[builtins.int] = ...,
        signed_url_key_names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cache_key_policy",b"_cache_key_policy","_cache_mode",b"_cache_mode","_client_ttl",b"_client_ttl","_default_ttl",b"_default_ttl","_max_ttl",b"_max_ttl","_negative_caching",b"_negative_caching","_request_coalescing",b"_request_coalescing","_serve_while_stale",b"_serve_while_stale","_signed_url_cache_max_age_sec",b"_signed_url_cache_max_age_sec","cache_key_policy",b"cache_key_policy","cache_mode",b"cache_mode","client_ttl",b"client_ttl","default_ttl",b"default_ttl","max_ttl",b"max_ttl","negative_caching",b"negative_caching","request_coalescing",b"request_coalescing","serve_while_stale",b"serve_while_stale","signed_url_cache_max_age_sec",b"signed_url_cache_max_age_sec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cache_key_policy",b"_cache_key_policy","_cache_mode",b"_cache_mode","_client_ttl",b"_client_ttl","_default_ttl",b"_default_ttl","_max_ttl",b"_max_ttl","_negative_caching",b"_negative_caching","_request_coalescing",b"_request_coalescing","_serve_while_stale",b"_serve_while_stale","_signed_url_cache_max_age_sec",b"_signed_url_cache_max_age_sec","bypass_cache_on_request_headers",b"bypass_cache_on_request_headers","cache_key_policy",b"cache_key_policy","cache_mode",b"cache_mode","client_ttl",b"client_ttl","default_ttl",b"default_ttl","max_ttl",b"max_ttl","negative_caching",b"negative_caching","negative_caching_policy",b"negative_caching_policy","request_coalescing",b"request_coalescing","serve_while_stale",b"serve_while_stale","signed_url_cache_max_age_sec",b"signed_url_cache_max_age_sec","signed_url_key_names",b"signed_url_key_names"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cache_key_policy",b"_cache_key_policy"]) -> typing.Optional[typing_extensions.Literal["cache_key_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cache_mode",b"_cache_mode"]) -> typing.Optional[typing_extensions.Literal["cache_mode"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_client_ttl",b"_client_ttl"]) -> typing.Optional[typing_extensions.Literal["client_ttl"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_ttl",b"_default_ttl"]) -> typing.Optional[typing_extensions.Literal["default_ttl"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_ttl",b"_max_ttl"]) -> typing.Optional[typing_extensions.Literal["max_ttl"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_negative_caching",b"_negative_caching"]) -> typing.Optional[typing_extensions.Literal["negative_caching"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_coalescing",b"_request_coalescing"]) -> typing.Optional[typing_extensions.Literal["request_coalescing"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_serve_while_stale",b"_serve_while_stale"]) -> typing.Optional[typing_extensions.Literal["serve_while_stale"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_signed_url_cache_max_age_sec",b"_signed_url_cache_max_age_sec"]) -> typing.Optional[typing_extensions.Literal["signed_url_cache_max_age_sec"]]: ...
global___BackendServiceCdnPolicy = BackendServiceCdnPolicy

class BackendServiceCdnPolicyBypassCacheOnRequestHeader(google.protobuf.message.Message):
    """Bypass the cache when the specified request headers are present, e.g. Pragma or Authorization headers. Values are case insensitive. The presence of such a header overrides the cache_mode setting."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADER_NAME_FIELD_NUMBER: builtins.int
    header_name: typing.Text = ...
    """The header field name to match on when bypassing cache. Values are case-insensitive."""

    def __init__(self,
        *,
        header_name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_header_name",b"_header_name","header_name",b"header_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_header_name",b"_header_name","header_name",b"header_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_header_name",b"_header_name"]) -> typing.Optional[typing_extensions.Literal["header_name"]]: ...
global___BackendServiceCdnPolicyBypassCacheOnRequestHeader = BackendServiceCdnPolicyBypassCacheOnRequestHeader

class BackendServiceCdnPolicyNegativeCachingPolicy(google.protobuf.message.Message):
    """Specify CDN TTLs for response error codes."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODE_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    code: builtins.int = ...
    """The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 302, 307, 308, 404, 405, 410, 421, 451 and 501 are can be specified as values, and you cannot specify a status code more than once."""

    ttl: builtins.int = ...
    """The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL."""

    def __init__(self,
        *,
        code : typing.Optional[builtins.int] = ...,
        ttl : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_code",b"_code","_ttl",b"_ttl","code",b"code","ttl",b"ttl"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_code",b"_code","_ttl",b"_ttl","code",b"code","ttl",b"ttl"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_code",b"_code"]) -> typing.Optional[typing_extensions.Literal["code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ttl",b"_ttl"]) -> typing.Optional[typing_extensions.Literal["ttl"]]: ...
global___BackendServiceCdnPolicyNegativeCachingPolicy = BackendServiceCdnPolicyNegativeCachingPolicy

class BackendServiceFailoverPolicy(google.protobuf.message.Message):
    """For load balancers that have configurable failover: [Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview) and [external TCP/UDP Load Balancing](/network/networklb-failover-overview). On failover or failback, this field indicates whether connection draining will be honored. Google Cloud has a fixed connection draining timeout of 10 minutes. A setting of true terminates existing TCP connections to the active pool during failover and failback, immediately draining traffic. A setting of false allows existing TCP connections to persist, even on VMs no longer in the active pool, for up to the duration of the connection draining timeout (10 minutes)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISABLE_CONNECTION_DRAIN_ON_FAILOVER_FIELD_NUMBER: builtins.int
    DROP_TRAFFIC_IF_UNHEALTHY_FIELD_NUMBER: builtins.int
    FAILOVER_RATIO_FIELD_NUMBER: builtins.int
    disable_connection_drain_on_failover: builtins.bool = ...
    """This can be set to true only if the protocol is TCP. The default is false."""

    drop_traffic_if_unhealthy: builtins.bool = ...
    """If set to true, connections to the load balancer are dropped when all primary and all backup backend VMs are unhealthy.If set to false, connections are distributed among all primary VMs when all primary and all backup backend VMs are unhealthy. For load balancers that have configurable failover: [Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview) and [external TCP/UDP Load Balancing](/network/networklb-failover-overview). The default is false."""

    failover_ratio: builtins.float = ...
    """The value of the field must be in the range [0, 1]. If the value is 0, the load balancer performs a failover when the number of healthy primary VMs equals zero. For all other values, the load balancer performs a failover when the total number of healthy primary VMs is less than this ratio. For load balancers that have configurable failover: [Internal TCP/UDP Load Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview) and [external TCP/UDP Load Balancing](/network/networklb-failover-overview)."""

    def __init__(self,
        *,
        disable_connection_drain_on_failover : typing.Optional[builtins.bool] = ...,
        drop_traffic_if_unhealthy : typing.Optional[builtins.bool] = ...,
        failover_ratio : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_disable_connection_drain_on_failover",b"_disable_connection_drain_on_failover","_drop_traffic_if_unhealthy",b"_drop_traffic_if_unhealthy","_failover_ratio",b"_failover_ratio","disable_connection_drain_on_failover",b"disable_connection_drain_on_failover","drop_traffic_if_unhealthy",b"drop_traffic_if_unhealthy","failover_ratio",b"failover_ratio"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_disable_connection_drain_on_failover",b"_disable_connection_drain_on_failover","_drop_traffic_if_unhealthy",b"_drop_traffic_if_unhealthy","_failover_ratio",b"_failover_ratio","disable_connection_drain_on_failover",b"disable_connection_drain_on_failover","drop_traffic_if_unhealthy",b"drop_traffic_if_unhealthy","failover_ratio",b"failover_ratio"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disable_connection_drain_on_failover",b"_disable_connection_drain_on_failover"]) -> typing.Optional[typing_extensions.Literal["disable_connection_drain_on_failover"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_drop_traffic_if_unhealthy",b"_drop_traffic_if_unhealthy"]) -> typing.Optional[typing_extensions.Literal["drop_traffic_if_unhealthy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_failover_ratio",b"_failover_ratio"]) -> typing.Optional[typing_extensions.Literal["failover_ratio"]]: ...
global___BackendServiceFailoverPolicy = BackendServiceFailoverPolicy

class BackendServiceGroupHealth(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    HEALTH_STATUS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Metadata defined as annotations on the network endpoint group."""
        pass
    @property
    def health_status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HealthStatus]:
        """Health state of the backend instances or endpoints in requested instance or network endpoint group, determined based on configured health checks."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#backendServiceGroupHealth for the health of backend services."""

    def __init__(self,
        *,
        annotations : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        health_status : typing.Optional[typing.Iterable[global___HealthStatus]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_kind",b"_kind","kind",b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_kind",b"_kind","annotations",b"annotations","health_status",b"health_status","kind",b"kind"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
global___BackendServiceGroupHealth = BackendServiceGroupHealth

class BackendServiceIAP(google.protobuf.message.Message):
    """Identity-Aware Proxy"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLED_FIELD_NUMBER: builtins.int
    OAUTH2_CLIENT_ID_FIELD_NUMBER: builtins.int
    OAUTH2_CLIENT_SECRET_FIELD_NUMBER: builtins.int
    OAUTH2_CLIENT_SECRET_SHA256_FIELD_NUMBER: builtins.int
    enabled: builtins.bool = ...
    """Whether the serving infrastructure will authenticate and authorize all incoming requests. If true, the oauth2ClientId and oauth2ClientSecret fields must be non-empty."""

    oauth2_client_id: typing.Text = ...
    """OAuth2 client ID to use for the authentication flow."""

    oauth2_client_secret: typing.Text = ...
    """OAuth2 client secret to use for the authentication flow. For security reasons, this value cannot be retrieved via the API. Instead, the SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field. @InputOnly"""

    oauth2_client_secret_sha256: typing.Text = ...
    """[Output Only] SHA256 hash value for the field oauth2_client_secret above."""

    def __init__(self,
        *,
        enabled : typing.Optional[builtins.bool] = ...,
        oauth2_client_id : typing.Optional[typing.Text] = ...,
        oauth2_client_secret : typing.Optional[typing.Text] = ...,
        oauth2_client_secret_sha256 : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enabled",b"_enabled","_oauth2_client_id",b"_oauth2_client_id","_oauth2_client_secret",b"_oauth2_client_secret","_oauth2_client_secret_sha256",b"_oauth2_client_secret_sha256","enabled",b"enabled","oauth2_client_id",b"oauth2_client_id","oauth2_client_secret",b"oauth2_client_secret","oauth2_client_secret_sha256",b"oauth2_client_secret_sha256"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enabled",b"_enabled","_oauth2_client_id",b"_oauth2_client_id","_oauth2_client_secret",b"_oauth2_client_secret","_oauth2_client_secret_sha256",b"_oauth2_client_secret_sha256","enabled",b"enabled","oauth2_client_id",b"oauth2_client_id","oauth2_client_secret",b"oauth2_client_secret","oauth2_client_secret_sha256",b"oauth2_client_secret_sha256"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enabled",b"_enabled"]) -> typing.Optional[typing_extensions.Literal["enabled"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_oauth2_client_id",b"_oauth2_client_id"]) -> typing.Optional[typing_extensions.Literal["oauth2_client_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_oauth2_client_secret",b"_oauth2_client_secret"]) -> typing.Optional[typing_extensions.Literal["oauth2_client_secret"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_oauth2_client_secret_sha256",b"_oauth2_client_secret_sha256"]) -> typing.Optional[typing_extensions.Literal["oauth2_client_secret_sha256"]]: ...
global___BackendServiceIAP = BackendServiceIAP

class BackendServiceList(google.protobuf.message.Message):
    """Contains a list of BackendService resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BackendService]:
        """A list of BackendService resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#backendServiceList for lists of backend services."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___BackendService]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___BackendServiceList = BackendServiceList

class BackendServiceLogConfig(google.protobuf.message.Message):
    """The available logging options for the load balancer traffic served by this backend service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_FIELD_NUMBER: builtins.int
    enable: builtins.bool = ...
    """This field denotes whether to enable logging for the load balancer traffic served by this backend service."""

    sample_rate: builtins.float = ...
    """This field can only be specified if logging is enabled for this backend service. The value of the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported. The default value is 1.0."""

    def __init__(self,
        *,
        enable : typing.Optional[builtins.bool] = ...,
        sample_rate : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enable",b"_enable","_sample_rate",b"_sample_rate","enable",b"enable","sample_rate",b"sample_rate"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enable",b"_enable","_sample_rate",b"_sample_rate","enable",b"enable","sample_rate",b"sample_rate"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable",b"_enable"]) -> typing.Optional[typing_extensions.Literal["enable"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sample_rate",b"_sample_rate"]) -> typing.Optional[typing_extensions.Literal["sample_rate"]]: ...
global___BackendServiceLogConfig = BackendServiceLogConfig

class BackendServiceReference(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    def __init__(self,
        *,
        backend_service : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_backend_service",b"_backend_service","backend_service",b"backend_service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_backend_service",b"_backend_service","backend_service",b"backend_service"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_backend_service",b"_backend_service"]) -> typing.Optional[typing_extensions.Literal["backend_service"]]: ...
global___BackendServiceReference = BackendServiceReference

class BackendServicesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def backend_services(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BackendService]:
        """A list of BackendServices contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of backend services when the list is empty."""
        pass
    def __init__(self,
        *,
        backend_services : typing.Optional[typing.Iterable[global___BackendService]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","backend_services",b"backend_services","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___BackendServicesScopedList = BackendServicesScopedList

class Binding(google.protobuf.message.Message):
    """Associates `members` with a `role`."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BINDING_ID_FIELD_NUMBER: builtins.int
    CONDITION_FIELD_NUMBER: builtins.int
    MEMBERS_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    binding_id: typing.Text = ...
    """This is deprecated and has no effect. Do not use."""

    @property
    def condition(self) -> global___Expr:
        """The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."""
        pass
    @property
    def members(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`."""
        pass
    role: typing.Text = ...
    """Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."""

    def __init__(self,
        *,
        binding_id : typing.Optional[typing.Text] = ...,
        condition : typing.Optional[global___Expr] = ...,
        members : typing.Optional[typing.Iterable[typing.Text]] = ...,
        role : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_binding_id",b"_binding_id","_condition",b"_condition","_role",b"_role","binding_id",b"binding_id","condition",b"condition","role",b"role"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_binding_id",b"_binding_id","_condition",b"_condition","_role",b"_role","binding_id",b"binding_id","condition",b"condition","members",b"members","role",b"role"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_binding_id",b"_binding_id"]) -> typing.Optional[typing_extensions.Literal["binding_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_condition",b"_condition"]) -> typing.Optional[typing_extensions.Literal["condition"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_role",b"_role"]) -> typing.Optional[typing_extensions.Literal["role"]]: ...
global___Binding = Binding

class BulkInsertInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.BulkInsert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BULK_INSERT_INSTANCE_RESOURCE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def bulk_insert_instance_resource_resource(self) -> global___BulkInsertInstanceResource:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        bulk_insert_instance_resource_resource : typing.Optional[global___BulkInsertInstanceResource] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","bulk_insert_instance_resource_resource",b"bulk_insert_instance_resource_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","bulk_insert_instance_resource_resource",b"bulk_insert_instance_resource_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___BulkInsertInstanceRequest = BulkInsertInstanceRequest

class BulkInsertInstanceResource(google.protobuf.message.Message):
    """A transient resource used in compute.instances.bulkInsert and compute.regionInstances.bulkInsert . This resource is not persisted anywhere, it is used only for processing the requests."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PerInstancePropertiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___BulkInsertInstanceResourcePerInstanceProperties: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___BulkInsertInstanceResourcePerInstanceProperties] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    COUNT_FIELD_NUMBER: builtins.int
    INSTANCE_PROPERTIES_FIELD_NUMBER: builtins.int
    LOCATION_POLICY_FIELD_NUMBER: builtins.int
    MIN_COUNT_FIELD_NUMBER: builtins.int
    NAME_PATTERN_FIELD_NUMBER: builtins.int
    PER_INSTANCE_PROPERTIES_FIELD_NUMBER: builtins.int
    SOURCE_INSTANCE_TEMPLATE_FIELD_NUMBER: builtins.int
    count: builtins.int = ...
    """The maximum number of instances to create."""

    @property
    def instance_properties(self) -> global___InstanceProperties:
        """The instance properties defining the VM instances to be created. Required if sourceInstanceTemplate is not provided."""
        pass
    @property
    def location_policy(self) -> global___LocationPolicy:
        """Policy for chosing target zone."""
        pass
    min_count: builtins.int = ...
    """The minimum number of instances to create. If no min_count is specified then count is used as the default value. If min_count instances cannot be created, then no instances will be created and instances already created will be deleted."""

    name_pattern: typing.Text = ...
    """The string pattern used for the names of the VMs. Either name_pattern or per_instance_properties must be set. The pattern must contain one continuous sequence of placeholder hash characters (#) with each character corresponding to one digit of the generated instance name. Example: a name_pattern of inst-#### generates instance names such as inst-0001 and inst-0002. If existing instances in the same project and zone have names that match the name pattern then the generated instance numbers start after the biggest existing number. For example, if there exists an instance with name inst-0050, then instance names generated using the pattern inst-#### begin with inst-0051. The name pattern placeholder #...# can contain up to 18 characters."""

    @property
    def per_instance_properties(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___BulkInsertInstanceResourcePerInstanceProperties]:
        """Per-instance properties to be set on individual instances. Keys of this map specify requested instance names. Can be empty if name_pattern is used."""
        pass
    source_instance_template: typing.Text = ...
    """Specifies the instance template from which to create instances. You may combine sourceInstanceTemplate with instanceProperties to override specific values from an existing instance template. Bulk API follows the semantics of JSON Merge Patch described by RFC 7396. It can be a full or partial URL. For example, the following are all valid URLs to an instance template: - https://www.googleapis.com/compute/v1/projects/project /global/instanceTemplates/instanceTemplate - projects/project/global/instanceTemplates/instanceTemplate - global/instanceTemplates/instanceTemplate This field is optional."""

    def __init__(self,
        *,
        count : typing.Optional[builtins.int] = ...,
        instance_properties : typing.Optional[global___InstanceProperties] = ...,
        location_policy : typing.Optional[global___LocationPolicy] = ...,
        min_count : typing.Optional[builtins.int] = ...,
        name_pattern : typing.Optional[typing.Text] = ...,
        per_instance_properties : typing.Optional[typing.Mapping[typing.Text, global___BulkInsertInstanceResourcePerInstanceProperties]] = ...,
        source_instance_template : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_count",b"_count","_instance_properties",b"_instance_properties","_location_policy",b"_location_policy","_min_count",b"_min_count","_name_pattern",b"_name_pattern","_source_instance_template",b"_source_instance_template","count",b"count","instance_properties",b"instance_properties","location_policy",b"location_policy","min_count",b"min_count","name_pattern",b"name_pattern","source_instance_template",b"source_instance_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_count",b"_count","_instance_properties",b"_instance_properties","_location_policy",b"_location_policy","_min_count",b"_min_count","_name_pattern",b"_name_pattern","_source_instance_template",b"_source_instance_template","count",b"count","instance_properties",b"instance_properties","location_policy",b"location_policy","min_count",b"min_count","name_pattern",b"name_pattern","per_instance_properties",b"per_instance_properties","source_instance_template",b"source_instance_template"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_count",b"_count"]) -> typing.Optional[typing_extensions.Literal["count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_properties",b"_instance_properties"]) -> typing.Optional[typing_extensions.Literal["instance_properties"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_location_policy",b"_location_policy"]) -> typing.Optional[typing_extensions.Literal["location_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_count",b"_min_count"]) -> typing.Optional[typing_extensions.Literal["min_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name_pattern",b"_name_pattern"]) -> typing.Optional[typing_extensions.Literal["name_pattern"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_instance_template",b"_source_instance_template"]) -> typing.Optional[typing_extensions.Literal["source_instance_template"]]: ...
global___BulkInsertInstanceResource = BulkInsertInstanceResource

class BulkInsertInstanceResourcePerInstanceProperties(google.protobuf.message.Message):
    """Per-instance properties to be set on individual instances. To be extended in the future."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """This field is only temporary. It will be removed. Do not use it."""

    def __init__(self,
        *,
        name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","name",b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
global___BulkInsertInstanceResourcePerInstanceProperties = BulkInsertInstanceResourcePerInstanceProperties

class BulkInsertRegionInstanceRequest(google.protobuf.message.Message):
    """A request message for RegionInstances.BulkInsert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BULK_INSERT_INSTANCE_RESOURCE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def bulk_insert_instance_resource_resource(self) -> global___BulkInsertInstanceResource:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        bulk_insert_instance_resource_resource : typing.Optional[global___BulkInsertInstanceResource] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","bulk_insert_instance_resource_resource",b"bulk_insert_instance_resource_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","bulk_insert_instance_resource_resource",b"bulk_insert_instance_resource_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___BulkInsertRegionInstanceRequest = BulkInsertRegionInstanceRequest

class CacheInvalidationRule(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HOST_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    host: typing.Text = ...
    """If set, this invalidation rule will only apply to requests with a Host header matching host."""

    path: typing.Text = ...
    def __init__(self,
        *,
        host : typing.Optional[typing.Text] = ...,
        path : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_host",b"_host","_path",b"_path","host",b"host","path",b"path"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_host",b"_host","_path",b"_path","host",b"host","path",b"path"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_host",b"_host"]) -> typing.Optional[typing_extensions.Literal["host"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path",b"_path"]) -> typing.Optional[typing_extensions.Literal["path"]]: ...
global___CacheInvalidationRule = CacheInvalidationRule

class CacheKeyPolicy(google.protobuf.message.Message):
    """Message containing what to include in the cache key for a request for Cloud CDN."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INCLUDE_HOST_FIELD_NUMBER: builtins.int
    INCLUDE_PROTOCOL_FIELD_NUMBER: builtins.int
    INCLUDE_QUERY_STRING_FIELD_NUMBER: builtins.int
    QUERY_STRING_BLACKLIST_FIELD_NUMBER: builtins.int
    QUERY_STRING_WHITELIST_FIELD_NUMBER: builtins.int
    include_host: builtins.bool = ...
    """If true, requests to different hosts will be cached separately."""

    include_protocol: builtins.bool = ...
    """If true, http and https requests will be cached separately."""

    include_query_string: builtins.bool = ...
    """If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely."""

    @property
    def query_string_blacklist(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters."""
        pass
    @property
    def query_string_whitelist(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters."""
        pass
    def __init__(self,
        *,
        include_host : typing.Optional[builtins.bool] = ...,
        include_protocol : typing.Optional[builtins.bool] = ...,
        include_query_string : typing.Optional[builtins.bool] = ...,
        query_string_blacklist : typing.Optional[typing.Iterable[typing.Text]] = ...,
        query_string_whitelist : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_include_host",b"_include_host","_include_protocol",b"_include_protocol","_include_query_string",b"_include_query_string","include_host",b"include_host","include_protocol",b"include_protocol","include_query_string",b"include_query_string"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_include_host",b"_include_host","_include_protocol",b"_include_protocol","_include_query_string",b"_include_query_string","include_host",b"include_host","include_protocol",b"include_protocol","include_query_string",b"include_query_string","query_string_blacklist",b"query_string_blacklist","query_string_whitelist",b"query_string_whitelist"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_host",b"_include_host"]) -> typing.Optional[typing_extensions.Literal["include_host"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_protocol",b"_include_protocol"]) -> typing.Optional[typing_extensions.Literal["include_protocol"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_include_query_string",b"_include_query_string"]) -> typing.Optional[typing_extensions.Literal["include_query_string"]]: ...
global___CacheKeyPolicy = CacheKeyPolicy

class CircuitBreakers(google.protobuf.message.Message):
    """Settings controlling the volume of requests, connections and retries to this backend service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MAX_CONNECTIONS_FIELD_NUMBER: builtins.int
    MAX_PENDING_REQUESTS_FIELD_NUMBER: builtins.int
    MAX_REQUESTS_FIELD_NUMBER: builtins.int
    MAX_REQUESTS_PER_CONNECTION_FIELD_NUMBER: builtins.int
    MAX_RETRIES_FIELD_NUMBER: builtins.int
    max_connections: builtins.int = ...
    """Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true."""

    max_pending_requests: builtins.int = ...
    """Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true."""

    max_requests: builtins.int = ...
    """The maximum number of parallel requests that allowed to the backend service. If not specified, there is no limit."""

    max_requests_per_connection: builtins.int = ...
    """Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true."""

    max_retries: builtins.int = ...
    """Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true."""

    def __init__(self,
        *,
        max_connections : typing.Optional[builtins.int] = ...,
        max_pending_requests : typing.Optional[builtins.int] = ...,
        max_requests : typing.Optional[builtins.int] = ...,
        max_requests_per_connection : typing.Optional[builtins.int] = ...,
        max_retries : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_max_connections",b"_max_connections","_max_pending_requests",b"_max_pending_requests","_max_requests",b"_max_requests","_max_requests_per_connection",b"_max_requests_per_connection","_max_retries",b"_max_retries","max_connections",b"max_connections","max_pending_requests",b"max_pending_requests","max_requests",b"max_requests","max_requests_per_connection",b"max_requests_per_connection","max_retries",b"max_retries"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_max_connections",b"_max_connections","_max_pending_requests",b"_max_pending_requests","_max_requests",b"_max_requests","_max_requests_per_connection",b"_max_requests_per_connection","_max_retries",b"_max_retries","max_connections",b"max_connections","max_pending_requests",b"max_pending_requests","max_requests",b"max_requests","max_requests_per_connection",b"max_requests_per_connection","max_retries",b"max_retries"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_connections",b"_max_connections"]) -> typing.Optional[typing_extensions.Literal["max_connections"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_pending_requests",b"_max_pending_requests"]) -> typing.Optional[typing_extensions.Literal["max_pending_requests"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_requests",b"_max_requests"]) -> typing.Optional[typing_extensions.Literal["max_requests"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_requests_per_connection",b"_max_requests_per_connection"]) -> typing.Optional[typing_extensions.Literal["max_requests_per_connection"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_retries",b"_max_retries"]) -> typing.Optional[typing_extensions.Literal["max_retries"]]: ...
global___CircuitBreakers = CircuitBreakers

class CloneRulesFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.CloneRules. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SOURCE_FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to update."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    source_firewall_policy: typing.Text = ...
    """The firewall policy from which to copy rules."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        source_firewall_policy : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","_source_firewall_policy",b"_source_firewall_policy","request_id",b"request_id","source_firewall_policy",b"source_firewall_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","_source_firewall_policy",b"_source_firewall_policy","firewall_policy",b"firewall_policy","request_id",b"request_id","source_firewall_policy",b"source_firewall_policy"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_firewall_policy",b"_source_firewall_policy"]) -> typing.Optional[typing_extensions.Literal["source_firewall_policy"]]: ...
global___CloneRulesFirewallPolicyRequest = CloneRulesFirewallPolicyRequest

class Commitment(google.protobuf.message.Message):
    """Represents a regional Commitment resource. Creating a commitment resource means that you are purchasing a committed use contract with an explicit start and end time. You can create commitments based on vCPUs and memory usage and receive discounted rates. For full details, read Signing Up for Committed Use Discounts."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Category:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CategoryEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Category.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CATEGORY: Commitment.Category.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CATEGORY_UNSPECIFIED: Commitment.Category.ValueType = ...  # 509189462
        LICENSE: Commitment.Category.ValueType = ...  # 347869217
        MACHINE: Commitment.Category.ValueType = ...  # 469553191
    class Category(_Category, metaclass=_CategoryEnumTypeWrapper):
        """The category of the commitment. Category MACHINE specifies commitments composed of machine resources such as VCPU or MEMORY, listed in resources. Category LICENSE specifies commitments composed of software licenses, listed in licenseResources. Note that only MACHINE commitments should have a Type specified."""
        pass

    UNDEFINED_CATEGORY: Commitment.Category.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CATEGORY_UNSPECIFIED: Commitment.Category.ValueType = ...  # 509189462
    LICENSE: Commitment.Category.ValueType = ...  # 347869217
    MACHINE: Commitment.Category.ValueType = ...  # 469553191

    class _Plan:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PlanEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Plan.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PLAN: Commitment.Plan.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        INVALID: Commitment.Plan.ValueType = ...  # 530283991
        THIRTY_SIX_MONTH: Commitment.Plan.ValueType = ...  # 266295942
        TWELVE_MONTH: Commitment.Plan.ValueType = ...  # 173083962
    class Plan(_Plan, metaclass=_PlanEnumTypeWrapper):
        """The plan for this commitment, which determines duration and discount rate. The currently supported plans are TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years)."""
        pass

    UNDEFINED_PLAN: Commitment.Plan.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    INVALID: Commitment.Plan.ValueType = ...  # 530283991
    THIRTY_SIX_MONTH: Commitment.Plan.ValueType = ...  # 266295942
    TWELVE_MONTH: Commitment.Plan.ValueType = ...  # 173083962

    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Commitment.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: Commitment.Status.ValueType = ...  # 314733318
        CREATING: Commitment.Status.ValueType = ...  # 455564985
        EXPIRED: Commitment.Status.ValueType = ...  # 482489093
        NOT_YET_ACTIVE: Commitment.Status.ValueType = ...  # 20607337
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] Status of the commitment with regards to eventual expiration (each commitment has an end date defined). One of the following values: NOT_YET_ACTIVE, ACTIVE, EXPIRED."""
        pass

    UNDEFINED_STATUS: Commitment.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: Commitment.Status.ValueType = ...  # 314733318
    CREATING: Commitment.Status.ValueType = ...  # 455564985
    EXPIRED: Commitment.Status.ValueType = ...  # 482489093
    NOT_YET_ACTIVE: Commitment.Status.ValueType = ...  # 20607337

    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: Commitment.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACCELERATOR_OPTIMIZED: Commitment.Type.ValueType = ...  # 280848403
        COMPUTE_OPTIMIZED: Commitment.Type.ValueType = ...  # 158349023
        GENERAL_PURPOSE: Commitment.Type.ValueType = ...  # 299793543
        GENERAL_PURPOSE_E2: Commitment.Type.ValueType = ...  # 301911877
        GENERAL_PURPOSE_N2: Commitment.Type.ValueType = ...  # 301912156
        GENERAL_PURPOSE_N2D: Commitment.Type.ValueType = ...  # 232471400
        MEMORY_OPTIMIZED: Commitment.Type.ValueType = ...  # 281753417
        TYPE_UNSPECIFIED: Commitment.Type.ValueType = ...  # 437714322
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The type of commitment, which affects the discount rate and the eligible resources. Type MEMORY_OPTIMIZED specifies a commitment that will only apply to memory optimized machines. Type ACCELERATOR_OPTIMIZED specifies a commitment that will only apply to accelerator optimized machines."""
        pass

    UNDEFINED_TYPE: Commitment.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACCELERATOR_OPTIMIZED: Commitment.Type.ValueType = ...  # 280848403
    COMPUTE_OPTIMIZED: Commitment.Type.ValueType = ...  # 158349023
    GENERAL_PURPOSE: Commitment.Type.ValueType = ...  # 299793543
    GENERAL_PURPOSE_E2: Commitment.Type.ValueType = ...  # 301911877
    GENERAL_PURPOSE_N2: Commitment.Type.ValueType = ...  # 301912156
    GENERAL_PURPOSE_N2D: Commitment.Type.ValueType = ...  # 232471400
    MEMORY_OPTIMIZED: Commitment.Type.ValueType = ...  # 281753417
    TYPE_UNSPECIFIED: Commitment.Type.ValueType = ...  # 437714322

    CATEGORY_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    END_TIMESTAMP_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LICENSE_RESOURCE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PLAN_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESERVATIONS_FIELD_NUMBER: builtins.int
    RESOURCES_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    START_TIMESTAMP_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    category: typing.Text = ...
    """The category of the commitment. Category MACHINE specifies commitments composed of machine resources such as VCPU or MEMORY, listed in resources. Category LICENSE specifies commitments composed of software licenses, listed in licenseResources. Note that only MACHINE commitments should have a Type specified.
    Check the Category enum for the list of possible values.
    """

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    end_timestamp: typing.Text = ...
    """[Output Only] Commitment end time in RFC3339 text format."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#commitment for commitments."""

    @property
    def license_resource(self) -> global___LicenseResourceCommitment:
        """The license specification required as part of a license commitment."""
        pass
    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    plan: typing.Text = ...
    """The plan for this commitment, which determines duration and discount rate. The currently supported plans are TWELVE_MONTH (1 year), and THIRTY_SIX_MONTH (3 years).
    Check the Plan enum for the list of possible values.
    """

    region: typing.Text = ...
    """[Output Only] URL of the region where this commitment may be used."""

    @property
    def reservations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Reservation]:
        """List of reservations in this commitment."""
        pass
    @property
    def resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourceCommitment]:
        """A list of commitment amounts for particular resources. Note that VCPU and MEMORY resource commitments must occur together."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    start_timestamp: typing.Text = ...
    """[Output Only] Commitment start time in RFC3339 text format."""

    status: typing.Text = ...
    """[Output Only] Status of the commitment with regards to eventual expiration (each commitment has an end date defined). One of the following values: NOT_YET_ACTIVE, ACTIVE, EXPIRED.
    Check the Status enum for the list of possible values.
    """

    status_message: typing.Text = ...
    """[Output Only] An optional, human-readable explanation of the status."""

    type: typing.Text = ...
    """The type of commitment, which affects the discount rate and the eligible resources. Type MEMORY_OPTIMIZED specifies a commitment that will only apply to memory optimized machines. Type ACCELERATOR_OPTIMIZED specifies a commitment that will only apply to accelerator optimized machines.
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        category : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        end_timestamp : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        license_resource : typing.Optional[global___LicenseResourceCommitment] = ...,
        name : typing.Optional[typing.Text] = ...,
        plan : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        reservations : typing.Optional[typing.Iterable[global___Reservation]] = ...,
        resources : typing.Optional[typing.Iterable[global___ResourceCommitment]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        start_timestamp : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        status_message : typing.Optional[typing.Text] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_category",b"_category","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_end_timestamp",b"_end_timestamp","_id",b"_id","_kind",b"_kind","_license_resource",b"_license_resource","_name",b"_name","_plan",b"_plan","_region",b"_region","_self_link",b"_self_link","_start_timestamp",b"_start_timestamp","_status",b"_status","_status_message",b"_status_message","_type",b"_type","category",b"category","creation_timestamp",b"creation_timestamp","description",b"description","end_timestamp",b"end_timestamp","id",b"id","kind",b"kind","license_resource",b"license_resource","name",b"name","plan",b"plan","region",b"region","self_link",b"self_link","start_timestamp",b"start_timestamp","status",b"status","status_message",b"status_message","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_category",b"_category","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_end_timestamp",b"_end_timestamp","_id",b"_id","_kind",b"_kind","_license_resource",b"_license_resource","_name",b"_name","_plan",b"_plan","_region",b"_region","_self_link",b"_self_link","_start_timestamp",b"_start_timestamp","_status",b"_status","_status_message",b"_status_message","_type",b"_type","category",b"category","creation_timestamp",b"creation_timestamp","description",b"description","end_timestamp",b"end_timestamp","id",b"id","kind",b"kind","license_resource",b"license_resource","name",b"name","plan",b"plan","region",b"region","reservations",b"reservations","resources",b"resources","self_link",b"self_link","start_timestamp",b"start_timestamp","status",b"status","status_message",b"status_message","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_category",b"_category"]) -> typing.Optional[typing_extensions.Literal["category"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_end_timestamp",b"_end_timestamp"]) -> typing.Optional[typing_extensions.Literal["end_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_license_resource",b"_license_resource"]) -> typing.Optional[typing_extensions.Literal["license_resource"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_plan",b"_plan"]) -> typing.Optional[typing_extensions.Literal["plan"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_timestamp",b"_start_timestamp"]) -> typing.Optional[typing_extensions.Literal["start_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status_message",b"_status_message"]) -> typing.Optional[typing_extensions.Literal["status_message"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___Commitment = Commitment

class CommitmentAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___CommitmentsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___CommitmentsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___CommitmentsScopedList]:
        """A list of CommitmentsScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#commitmentAggregatedList for aggregated lists of commitments."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___CommitmentsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___CommitmentAggregatedList = CommitmentAggregatedList

class CommitmentList(google.protobuf.message.Message):
    """Contains a list of Commitment resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Commitment]:
        """A list of Commitment resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#commitmentList for lists of commitments."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Commitment]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___CommitmentList = CommitmentList

class CommitmentsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMMITMENTS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def commitments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Commitment]:
        """[Output Only] A list of commitments contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning which replaces the list of commitments when the list is empty."""
        pass
    def __init__(self,
        *,
        commitments : typing.Optional[typing.Iterable[global___Commitment]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","commitments",b"commitments","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___CommitmentsScopedList = CommitmentsScopedList

class Condition(google.protobuf.message.Message):
    """This is deprecated and has no effect. Do not use."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IAM_FIELD_NUMBER: builtins.int
    OP_FIELD_NUMBER: builtins.int
    SVC_FIELD_NUMBER: builtins.int
    SYS_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    iam: typing.Text = ...
    """This is deprecated and has no effect. Do not use."""

    op: typing.Text = ...
    """This is deprecated and has no effect. Do not use."""

    svc: typing.Text = ...
    """This is deprecated and has no effect. Do not use."""

    sys: typing.Text = ...
    """This is deprecated and has no effect. Do not use."""

    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """This is deprecated and has no effect. Do not use."""
        pass
    def __init__(self,
        *,
        iam : typing.Optional[typing.Text] = ...,
        op : typing.Optional[typing.Text] = ...,
        svc : typing.Optional[typing.Text] = ...,
        sys : typing.Optional[typing.Text] = ...,
        values : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_iam",b"_iam","_op",b"_op","_svc",b"_svc","_sys",b"_sys","iam",b"iam","op",b"op","svc",b"svc","sys",b"sys"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_iam",b"_iam","_op",b"_op","_svc",b"_svc","_sys",b"_sys","iam",b"iam","op",b"op","svc",b"svc","sys",b"sys","values",b"values"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_iam",b"_iam"]) -> typing.Optional[typing_extensions.Literal["iam"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_op",b"_op"]) -> typing.Optional[typing_extensions.Literal["op"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_svc",b"_svc"]) -> typing.Optional[typing_extensions.Literal["svc"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sys",b"_sys"]) -> typing.Optional[typing_extensions.Literal["sys"]]: ...
global___Condition = Condition

class ConfidentialInstanceConfig(google.protobuf.message.Message):
    """A set of Confidential Instance options."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_CONFIDENTIAL_COMPUTE_FIELD_NUMBER: builtins.int
    enable_confidential_compute: builtins.bool = ...
    """Defines whether the instance should have confidential compute enabled."""

    def __init__(self,
        *,
        enable_confidential_compute : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enable_confidential_compute",b"_enable_confidential_compute","enable_confidential_compute",b"enable_confidential_compute"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enable_confidential_compute",b"_enable_confidential_compute","enable_confidential_compute",b"enable_confidential_compute"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_confidential_compute",b"_enable_confidential_compute"]) -> typing.Optional[typing_extensions.Literal["enable_confidential_compute"]]: ...
global___ConfidentialInstanceConfig = ConfidentialInstanceConfig

class ConnectionDraining(google.protobuf.message.Message):
    """Message containing connection draining configuration."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DRAINING_TIMEOUT_SEC_FIELD_NUMBER: builtins.int
    draining_timeout_sec: builtins.int = ...
    """Configures a duration timeout for existing requests on a removed backend instance. For supported load balancers and protocols, as described in Enabling connection draining."""

    def __init__(self,
        *,
        draining_timeout_sec : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_draining_timeout_sec",b"_draining_timeout_sec","draining_timeout_sec",b"draining_timeout_sec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_draining_timeout_sec",b"_draining_timeout_sec","draining_timeout_sec",b"draining_timeout_sec"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_draining_timeout_sec",b"_draining_timeout_sec"]) -> typing.Optional[typing_extensions.Literal["draining_timeout_sec"]]: ...
global___ConnectionDraining = ConnectionDraining

class ConsistentHashLoadBalancerSettings(google.protobuf.message.Message):
    """This message defines settings for a consistent hash style load balancer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HTTP_COOKIE_FIELD_NUMBER: builtins.int
    HTTP_HEADER_NAME_FIELD_NUMBER: builtins.int
    MINIMUM_RING_SIZE_FIELD_NUMBER: builtins.int
    @property
    def http_cookie(self) -> global___ConsistentHashLoadBalancerSettingsHttpCookie:
        """Hash is based on HTTP Cookie. This field describes a HTTP cookie that will be used as the hash key for the consistent hash load balancer. If the cookie is not present, it will be generated. This field is applicable if the sessionAffinity is set to HTTP_COOKIE."""
        pass
    http_header_name: typing.Text = ...
    """The hash based on the value of the specified header field. This field is applicable if the sessionAffinity is set to HEADER_FIELD."""

    minimum_ring_size: builtins.int = ...
    """The minimum number of virtual nodes to use for the hash ring. Defaults to 1024. Larger ring sizes result in more granular load distributions. If the number of hosts in the load balancing pool is larger than the ring size, each host will be assigned a single virtual node."""

    def __init__(self,
        *,
        http_cookie : typing.Optional[global___ConsistentHashLoadBalancerSettingsHttpCookie] = ...,
        http_header_name : typing.Optional[typing.Text] = ...,
        minimum_ring_size : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_http_cookie",b"_http_cookie","_http_header_name",b"_http_header_name","_minimum_ring_size",b"_minimum_ring_size","http_cookie",b"http_cookie","http_header_name",b"http_header_name","minimum_ring_size",b"minimum_ring_size"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_http_cookie",b"_http_cookie","_http_header_name",b"_http_header_name","_minimum_ring_size",b"_minimum_ring_size","http_cookie",b"http_cookie","http_header_name",b"http_header_name","minimum_ring_size",b"minimum_ring_size"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_http_cookie",b"_http_cookie"]) -> typing.Optional[typing_extensions.Literal["http_cookie"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_http_header_name",b"_http_header_name"]) -> typing.Optional[typing_extensions.Literal["http_header_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_minimum_ring_size",b"_minimum_ring_size"]) -> typing.Optional[typing_extensions.Literal["minimum_ring_size"]]: ...
global___ConsistentHashLoadBalancerSettings = ConsistentHashLoadBalancerSettings

class ConsistentHashLoadBalancerSettingsHttpCookie(google.protobuf.message.Message):
    """The information about the HTTP Cookie on which the hash function is based for load balancing policies that use a consistent hash."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of the cookie."""

    path: typing.Text = ...
    """Path to set for the cookie."""

    @property
    def ttl(self) -> global___Duration:
        """Lifetime of the cookie."""
        pass
    def __init__(self,
        *,
        name : typing.Optional[typing.Text] = ...,
        path : typing.Optional[typing.Text] = ...,
        ttl : typing.Optional[global___Duration] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","_path",b"_path","_ttl",b"_ttl","name",b"name","path",b"path","ttl",b"ttl"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","_path",b"_path","_ttl",b"_ttl","name",b"name","path",b"path","ttl",b"ttl"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path",b"_path"]) -> typing.Optional[typing_extensions.Literal["path"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ttl",b"_ttl"]) -> typing.Optional[typing_extensions.Literal["ttl"]]: ...
global___ConsistentHashLoadBalancerSettingsHttpCookie = ConsistentHashLoadBalancerSettingsHttpCookie

class CorsPolicy(google.protobuf.message.Message):
    """The specification for allowing client side cross-origin requests. Please see W3C Recommendation for Cross Origin Resource Sharing"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ALLOW_CREDENTIALS_FIELD_NUMBER: builtins.int
    ALLOW_HEADERS_FIELD_NUMBER: builtins.int
    ALLOW_METHODS_FIELD_NUMBER: builtins.int
    ALLOW_ORIGIN_REGEXES_FIELD_NUMBER: builtins.int
    ALLOW_ORIGINS_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    EXPOSE_HEADERS_FIELD_NUMBER: builtins.int
    MAX_AGE_FIELD_NUMBER: builtins.int
    allow_credentials: builtins.bool = ...
    """In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header. Default is false."""

    @property
    def allow_headers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Specifies the content for the Access-Control-Allow-Headers header."""
        pass
    @property
    def allow_methods(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Specifies the content for the Access-Control-Allow-Methods header."""
        pass
    @property
    def allow_origin_regexes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Specifies the regualar expression patterns that match allowed origins. For regular expression grammar please see github.com/google/re2/wiki/Syntax An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes."""
        pass
    @property
    def allow_origins(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes."""
        pass
    disabled: builtins.bool = ...
    """If true, specifies the CORS policy is disabled. The default value of false, which indicates that the CORS policy is in effect."""

    @property
    def expose_headers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Specifies the content for the Access-Control-Expose-Headers header."""
        pass
    max_age: builtins.int = ...
    """Specifies how long results of a preflight request can be cached in seconds. This translates to the Access-Control-Max-Age header."""

    def __init__(self,
        *,
        allow_credentials : typing.Optional[builtins.bool] = ...,
        allow_headers : typing.Optional[typing.Iterable[typing.Text]] = ...,
        allow_methods : typing.Optional[typing.Iterable[typing.Text]] = ...,
        allow_origin_regexes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        allow_origins : typing.Optional[typing.Iterable[typing.Text]] = ...,
        disabled : typing.Optional[builtins.bool] = ...,
        expose_headers : typing.Optional[typing.Iterable[typing.Text]] = ...,
        max_age : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_allow_credentials",b"_allow_credentials","_disabled",b"_disabled","_max_age",b"_max_age","allow_credentials",b"allow_credentials","disabled",b"disabled","max_age",b"max_age"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_allow_credentials",b"_allow_credentials","_disabled",b"_disabled","_max_age",b"_max_age","allow_credentials",b"allow_credentials","allow_headers",b"allow_headers","allow_methods",b"allow_methods","allow_origin_regexes",b"allow_origin_regexes","allow_origins",b"allow_origins","disabled",b"disabled","expose_headers",b"expose_headers","max_age",b"max_age"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_allow_credentials",b"_allow_credentials"]) -> typing.Optional[typing_extensions.Literal["allow_credentials"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disabled",b"_disabled"]) -> typing.Optional[typing_extensions.Literal["disabled"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_age",b"_max_age"]) -> typing.Optional[typing_extensions.Literal["max_age"]]: ...
global___CorsPolicy = CorsPolicy

class CreateInstancesInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.CreateInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGERS_CREATE_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It should conform to RFC1035."""

    @property
    def instance_group_managers_create_instances_request_resource(self) -> global___InstanceGroupManagersCreateInstancesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located. It should conform to RFC1035."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_managers_create_instances_request_resource : typing.Optional[global___InstanceGroupManagersCreateInstancesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_managers_create_instances_request_resource",b"instance_group_managers_create_instances_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","instance_group_managers_create_instances_request_resource",b"instance_group_managers_create_instances_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___CreateInstancesInstanceGroupManagerRequest = CreateInstancesInstanceGroupManagerRequest

class CreateInstancesRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.CreateInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUP_MANAGERS_CREATE_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It should conform to RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region where the managed instance group is located. It should conform to RFC1035."""

    @property
    def region_instance_group_managers_create_instances_request_resource(self) -> global___RegionInstanceGroupManagersCreateInstancesRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_group_managers_create_instances_request_resource : typing.Optional[global___RegionInstanceGroupManagersCreateInstancesRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_instance_group_managers_create_instances_request_resource",b"region_instance_group_managers_create_instances_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","region_instance_group_managers_create_instances_request_resource",b"region_instance_group_managers_create_instances_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___CreateInstancesRegionInstanceGroupManagerRequest = CreateInstancesRegionInstanceGroupManagerRequest

class CreateSnapshotDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.CreateSnapshot. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    GUEST_FLUSH_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SNAPSHOT_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """Name of the persistent disk to snapshot."""

    guest_flush: builtins.bool = ...
    """[Input Only] Whether to attempt an application consistent snapshot by informing the OS to prepare for the snapshot process. Currently only supported on Windows instances using the Volume Shadow Copy Service (VSS)."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def snapshot_resource(self) -> global___Snapshot:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        guest_flush : typing.Optional[builtins.bool] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        snapshot_resource : typing.Optional[global___Snapshot] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_guest_flush",b"_guest_flush","_request_id",b"_request_id","guest_flush",b"guest_flush","request_id",b"request_id","snapshot_resource",b"snapshot_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_guest_flush",b"_guest_flush","_request_id",b"_request_id","disk",b"disk","guest_flush",b"guest_flush","project",b"project","request_id",b"request_id","snapshot_resource",b"snapshot_resource","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_guest_flush",b"_guest_flush"]) -> typing.Optional[typing_extensions.Literal["guest_flush"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___CreateSnapshotDiskRequest = CreateSnapshotDiskRequest

class CreateSnapshotRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.CreateSnapshot. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SNAPSHOT_RESOURCE_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """Name of the regional persistent disk to snapshot."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def snapshot_resource(self) -> global___Snapshot:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        disk : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        snapshot_resource : typing.Optional[global___Snapshot] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","snapshot_resource",b"snapshot_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk",b"disk","project",b"project","region",b"region","request_id",b"request_id","snapshot_resource",b"snapshot_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___CreateSnapshotRegionDiskRequest = CreateSnapshotRegionDiskRequest

class CustomerEncryptionKey(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KMS_KEY_NAME_FIELD_NUMBER: builtins.int
    KMS_KEY_SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    RAW_KEY_FIELD_NUMBER: builtins.int
    RSA_ENCRYPTED_KEY_FIELD_NUMBER: builtins.int
    SHA256_FIELD_NUMBER: builtins.int
    kms_key_name: typing.Text = ...
    """The name of the encryption key that is stored in Google Cloud KMS. For example: "kmsKeyName": "projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key"""

    kms_key_service_account: typing.Text = ...
    """The service account being used for the encryption request for the given KMS key. If absent, the Compute Engine default service account is used. For example: "kmsKeyServiceAccount": "name@project_id.iam.gserviceaccount.com/"""

    raw_key: typing.Text = ...
    """Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: "rawKey": "SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0=" """

    rsa_encrypted_key: typing.Text = ...
    """Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. You can provide either the rawKey or the rsaEncryptedKey. For example: "rsaEncryptedKey": "ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFH z0mBibXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoD D6PYznLwh8ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oe==" The key must meet the following requirements before you can provide it to Compute Engine: 1. The key is wrapped using a RSA public key certificate provided by Google. 2. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Gets the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem"""

    sha256: typing.Text = ...
    """[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource."""

    def __init__(self,
        *,
        kms_key_name : typing.Optional[typing.Text] = ...,
        kms_key_service_account : typing.Optional[typing.Text] = ...,
        raw_key : typing.Optional[typing.Text] = ...,
        rsa_encrypted_key : typing.Optional[typing.Text] = ...,
        sha256 : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_kms_key_name",b"_kms_key_name","_kms_key_service_account",b"_kms_key_service_account","_raw_key",b"_raw_key","_rsa_encrypted_key",b"_rsa_encrypted_key","_sha256",b"_sha256","kms_key_name",b"kms_key_name","kms_key_service_account",b"kms_key_service_account","raw_key",b"raw_key","rsa_encrypted_key",b"rsa_encrypted_key","sha256",b"sha256"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_kms_key_name",b"_kms_key_name","_kms_key_service_account",b"_kms_key_service_account","_raw_key",b"_raw_key","_rsa_encrypted_key",b"_rsa_encrypted_key","_sha256",b"_sha256","kms_key_name",b"kms_key_name","kms_key_service_account",b"kms_key_service_account","raw_key",b"raw_key","rsa_encrypted_key",b"rsa_encrypted_key","sha256",b"sha256"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kms_key_name",b"_kms_key_name"]) -> typing.Optional[typing_extensions.Literal["kms_key_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kms_key_service_account",b"_kms_key_service_account"]) -> typing.Optional[typing_extensions.Literal["kms_key_service_account"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_raw_key",b"_raw_key"]) -> typing.Optional[typing_extensions.Literal["raw_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rsa_encrypted_key",b"_rsa_encrypted_key"]) -> typing.Optional[typing_extensions.Literal["rsa_encrypted_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sha256",b"_sha256"]) -> typing.Optional[typing_extensions.Literal["sha256"]]: ...
global___CustomerEncryptionKey = CustomerEncryptionKey

class CustomerEncryptionKeyProtectedDisk(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    @property
    def disk_encryption_key(self) -> global___CustomerEncryptionKey:
        """Decrypts data associated with the disk with a customer-supplied encryption key."""
        pass
    source: typing.Text = ...
    """Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks. For example: "source": "/compute/v1/projects/project_id/zones/zone/disks/ disk_name"""

    def __init__(self,
        *,
        disk_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        source : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_disk_encryption_key",b"_disk_encryption_key","_source",b"_source","disk_encryption_key",b"disk_encryption_key","source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_disk_encryption_key",b"_disk_encryption_key","_source",b"_source","disk_encryption_key",b"disk_encryption_key","source",b"source"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_encryption_key",b"_disk_encryption_key"]) -> typing.Optional[typing_extensions.Literal["disk_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source",b"_source"]) -> typing.Optional[typing_extensions.Literal["source"]]: ...
global___CustomerEncryptionKeyProtectedDisk = CustomerEncryptionKeyProtectedDisk

class Data(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."""

    value: typing.Text = ...
    """[Output Only] A warning data value corresponding to the key."""

    def __init__(self,
        *,
        key : typing.Optional[typing.Text] = ...,
        value : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_key",b"_key","_value",b"_value","key",b"key","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_key",b"_key","_value",b"_value","key",b"key","value",b"value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_key",b"_key"]) -> typing.Optional[typing_extensions.Literal["key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value",b"_value"]) -> typing.Optional[typing_extensions.Literal["value"]]: ...
global___Data = Data

class DeleteAccessConfigInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.DeleteAccessConfig. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCESS_CONFIG_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    access_config: typing.Text = ...
    """The name of the access config to delete."""

    instance: typing.Text = ...
    """The instance name for this request."""

    network_interface: typing.Text = ...
    """The name of the network interface."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        access_config : typing.Text = ...,
        instance : typing.Text = ...,
        network_interface : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","access_config",b"access_config","instance",b"instance","network_interface",b"network_interface","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteAccessConfigInstanceRequest = DeleteAccessConfigInstanceRequest

class DeleteAddressRequest(google.protobuf.message.Message):
    """A request message for Addresses.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ADDRESS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    address: typing.Text = ...
    """Name of the address resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        address : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","address",b"address","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteAddressRequest = DeleteAddressRequest

class DeleteAutoscalerRequest(google.protobuf.message.Message):
    """A request message for Autoscalers.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    autoscaler: typing.Text = ...
    """Name of the autoscaler to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        autoscaler : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","autoscaler",b"autoscaler","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteAutoscalerRequest = DeleteAutoscalerRequest

class DeleteBackendBucketRequest(google.protobuf.message.Message):
    """A request message for BackendBuckets.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_BUCKET_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_bucket: typing.Text = ...
    """Name of the BackendBucket resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_bucket : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_bucket",b"backend_bucket","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteBackendBucketRequest = DeleteBackendBucketRequest

class DeleteBackendServiceRequest(google.protobuf.message.Message):
    """A request message for BackendServices.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service",b"backend_service","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteBackendServiceRequest = DeleteBackendServiceRequest

class DeleteDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """Name of the persistent disk to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk",b"disk","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteDiskRequest = DeleteDiskRequest

class DeleteExternalVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for ExternalVpnGateways.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXTERNAL_VPN_GATEWAY_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    external_vpn_gateway: typing.Text = ...
    """Name of the externalVpnGateways to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        external_vpn_gateway : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","external_vpn_gateway",b"external_vpn_gateway","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteExternalVpnGatewayRequest = DeleteExternalVpnGatewayRequest

class DeleteFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to delete."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_policy",b"firewall_policy","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteFirewallPolicyRequest = DeleteFirewallPolicyRequest

class DeleteFirewallRequest(google.protobuf.message.Message):
    """A request message for Firewalls.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall: typing.Text = ...
    """Name of the firewall rule to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall",b"firewall","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteFirewallRequest = DeleteFirewallRequest

class DeleteForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for ForwardingRules.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    forwarding_rule: typing.Text = ...
    """Name of the ForwardingRule resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        forwarding_rule : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule",b"forwarding_rule","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteForwardingRuleRequest = DeleteForwardingRuleRequest

class DeleteGlobalAddressRequest(google.protobuf.message.Message):
    """A request message for GlobalAddresses.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ADDRESS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    address: typing.Text = ...
    """Name of the address resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        address : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","address",b"address","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteGlobalAddressRequest = DeleteGlobalAddressRequest

class DeleteGlobalForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for GlobalForwardingRules.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    forwarding_rule: typing.Text = ...
    """Name of the ForwardingRule resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        forwarding_rule : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule",b"forwarding_rule","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteGlobalForwardingRuleRequest = DeleteGlobalForwardingRuleRequest

class DeleteGlobalNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for GlobalNetworkEndpointGroups.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group to delete. It should comply with RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network_endpoint_group : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group",b"network_endpoint_group","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteGlobalNetworkEndpointGroupRequest = DeleteGlobalNetworkEndpointGroupRequest

class DeleteGlobalOperationRequest(google.protobuf.message.Message):
    """A request message for GlobalOperations.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation",b"operation","project",b"project"]) -> None: ...
global___DeleteGlobalOperationRequest = DeleteGlobalOperationRequest

class DeleteGlobalOperationResponse(google.protobuf.message.Message):
    """A response message for GlobalOperations.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___DeleteGlobalOperationResponse = DeleteGlobalOperationResponse

class DeleteGlobalOrganizationOperationRequest(google.protobuf.message.Message):
    """A request message for GlobalOrganizationOperations.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PARENT_ID_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to delete."""

    parent_id: typing.Text = ...
    """Parent ID for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        parent_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_parent_id",b"_parent_id","parent_id",b"parent_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_parent_id",b"_parent_id","operation",b"operation","parent_id",b"parent_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_parent_id",b"_parent_id"]) -> typing.Optional[typing_extensions.Literal["parent_id"]]: ...
global___DeleteGlobalOrganizationOperationRequest = DeleteGlobalOrganizationOperationRequest

class DeleteGlobalOrganizationOperationResponse(google.protobuf.message.Message):
    """A response message for GlobalOrganizationOperations.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___DeleteGlobalOrganizationOperationResponse = DeleteGlobalOrganizationOperationResponse

class DeleteGlobalPublicDelegatedPrefixeRequest(google.protobuf.message.Message):
    """A request message for GlobalPublicDelegatedPrefixes.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIX_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    public_delegated_prefix: typing.Text = ...
    """Name of the PublicDelegatedPrefix resource to delete."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_delegated_prefix : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","public_delegated_prefix",b"public_delegated_prefix","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteGlobalPublicDelegatedPrefixeRequest = DeleteGlobalPublicDelegatedPrefixeRequest

class DeleteHealthCheckRequest(google.protobuf.message.Message):
    """A request message for HealthChecks.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    health_check: typing.Text = ...
    """Name of the HealthCheck resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check",b"health_check","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteHealthCheckRequest = DeleteHealthCheckRequest

class DeleteImageRequest(google.protobuf.message.Message):
    """A request message for Images.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IMAGE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    image: typing.Text = ...
    """Name of the image resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        image : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","image",b"image","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteImageRequest = DeleteImageRequest

class DeleteInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteInstanceGroupManagerRequest = DeleteInstanceGroupManagerRequest

class DeleteInstanceGroupRequest(google.protobuf.message.Message):
    """A request message for InstanceGroups.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group: typing.Text = ...
    """The name of the instance group to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the instance group is located."""

    def __init__(self,
        *,
        instance_group : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group",b"instance_group","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteInstanceGroupRequest = DeleteInstanceGroupRequest

class DeleteInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteInstanceRequest = DeleteInstanceRequest

class DeleteInstanceTemplateRequest(google.protobuf.message.Message):
    """A request message for InstanceTemplates.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_TEMPLATE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_template: typing.Text = ...
    """The name of the instance template to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_template : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_template",b"instance_template","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteInstanceTemplateRequest = DeleteInstanceTemplateRequest

class DeleteInstancesInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.DeleteInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGERS_DELETE_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group."""

    @property
    def instance_group_managers_delete_instances_request_resource(self) -> global___InstanceGroupManagersDeleteInstancesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_managers_delete_instances_request_resource : typing.Optional[global___InstanceGroupManagersDeleteInstancesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_managers_delete_instances_request_resource",b"instance_group_managers_delete_instances_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","instance_group_managers_delete_instances_request_resource",b"instance_group_managers_delete_instances_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteInstancesInstanceGroupManagerRequest = DeleteInstancesInstanceGroupManagerRequest

class DeleteInstancesRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.DeleteInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUP_MANAGERS_DELETE_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """Name of the managed instance group."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    @property
    def region_instance_group_managers_delete_instances_request_resource(self) -> global___RegionInstanceGroupManagersDeleteInstancesRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_group_managers_delete_instances_request_resource : typing.Optional[global___RegionInstanceGroupManagersDeleteInstancesRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_instance_group_managers_delete_instances_request_resource",b"region_instance_group_managers_delete_instances_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","region_instance_group_managers_delete_instances_request_resource",b"region_instance_group_managers_delete_instances_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteInstancesRegionInstanceGroupManagerRequest = DeleteInstancesRegionInstanceGroupManagerRequest

class DeleteInterconnectAttachmentRequest(google.protobuf.message.Message):
    """A request message for InterconnectAttachments.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_ATTACHMENT_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    interconnect_attachment: typing.Text = ...
    """Name of the interconnect attachment to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        interconnect_attachment : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","interconnect_attachment",b"interconnect_attachment","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteInterconnectAttachmentRequest = DeleteInterconnectAttachmentRequest

class DeleteInterconnectRequest(google.protobuf.message.Message):
    """A request message for Interconnects.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    interconnect: typing.Text = ...
    """Name of the interconnect to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        interconnect : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","interconnect",b"interconnect","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteInterconnectRequest = DeleteInterconnectRequest

class DeleteLicenseRequest(google.protobuf.message.Message):
    """A request message for Licenses.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LICENSE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    license: typing.Text = ...
    """Name of the license resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        license : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","license",b"license","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteLicenseRequest = DeleteLicenseRequest

class DeleteNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for NetworkEndpointGroups.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group to delete. It should comply with RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the network endpoint group is located. It should comply with RFC1035."""

    def __init__(self,
        *,
        network_endpoint_group : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group",b"network_endpoint_group","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteNetworkEndpointGroupRequest = DeleteNetworkEndpointGroupRequest

class DeleteNetworkRequest(google.protobuf.message.Message):
    """A request message for Networks.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    network: typing.Text = ...
    """Name of the network to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network",b"network","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteNetworkRequest = DeleteNetworkRequest

class DeleteNodeGroupRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    node_group: typing.Text = ...
    """Name of the NodeGroup resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        node_group : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_group",b"node_group","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteNodeGroupRequest = DeleteNodeGroupRequest

class DeleteNodeTemplateRequest(google.protobuf.message.Message):
    """A request message for NodeTemplates.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_TEMPLATE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    node_template: typing.Text = ...
    """Name of the NodeTemplate resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        node_template : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_template",b"node_template","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteNodeTemplateRequest = DeleteNodeTemplateRequest

class DeleteNodesNodeGroupRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.DeleteNodes. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_GROUP_FIELD_NUMBER: builtins.int
    NODE_GROUPS_DELETE_NODES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    node_group: typing.Text = ...
    """Name of the NodeGroup resource whose nodes will be deleted."""

    @property
    def node_groups_delete_nodes_request_resource(self) -> global___NodeGroupsDeleteNodesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        node_group : typing.Text = ...,
        node_groups_delete_nodes_request_resource : typing.Optional[global___NodeGroupsDeleteNodesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_groups_delete_nodes_request_resource",b"node_groups_delete_nodes_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_group",b"node_group","node_groups_delete_nodes_request_resource",b"node_groups_delete_nodes_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteNodesNodeGroupRequest = DeleteNodesNodeGroupRequest

class DeletePacketMirroringRequest(google.protobuf.message.Message):
    """A request message for PacketMirrorings.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PACKET_MIRRORING_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    packet_mirroring: typing.Text = ...
    """Name of the PacketMirroring resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        packet_mirroring : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","packet_mirroring",b"packet_mirroring","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeletePacketMirroringRequest = DeletePacketMirroringRequest

class DeletePerInstanceConfigsInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.DeletePerInstanceConfigs. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGERS_DELETE_PER_INSTANCE_CONFIGS_REQ_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It should conform to RFC1035."""

    @property
    def instance_group_managers_delete_per_instance_configs_req_resource(self) -> global___InstanceGroupManagersDeletePerInstanceConfigsReq:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located. It should conform to RFC1035."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_managers_delete_per_instance_configs_req_resource : typing.Optional[global___InstanceGroupManagersDeletePerInstanceConfigsReq] = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["instance_group_managers_delete_per_instance_configs_req_resource",b"instance_group_managers_delete_per_instance_configs_req_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_group_manager",b"instance_group_manager","instance_group_managers_delete_per_instance_configs_req_resource",b"instance_group_managers_delete_per_instance_configs_req_resource","project",b"project","zone",b"zone"]) -> None: ...
global___DeletePerInstanceConfigsInstanceGroupManagerRequest = DeletePerInstanceConfigsInstanceGroupManagerRequest

class DeletePerInstanceConfigsRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.DeletePerInstanceConfigs. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUP_MANAGER_DELETE_INSTANCE_CONFIG_REQ_RESOURCE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It should conform to RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request, should conform to RFC1035."""

    @property
    def region_instance_group_manager_delete_instance_config_req_resource(self) -> global___RegionInstanceGroupManagerDeleteInstanceConfigReq:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_group_manager_delete_instance_config_req_resource : typing.Optional[global___RegionInstanceGroupManagerDeleteInstanceConfigReq] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["region_instance_group_manager_delete_instance_config_req_resource",b"region_instance_group_manager_delete_instance_config_req_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","region_instance_group_manager_delete_instance_config_req_resource",b"region_instance_group_manager_delete_instance_config_req_resource"]) -> None: ...
global___DeletePerInstanceConfigsRegionInstanceGroupManagerRequest = DeletePerInstanceConfigsRegionInstanceGroupManagerRequest

class DeletePublicAdvertisedPrefixeRequest(google.protobuf.message.Message):
    """A request message for PublicAdvertisedPrefixes.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_ADVERTISED_PREFIX_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    public_advertised_prefix: typing.Text = ...
    """Name of the PublicAdvertisedPrefix resource to delete."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_advertised_prefix : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","public_advertised_prefix",b"public_advertised_prefix","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeletePublicAdvertisedPrefixeRequest = DeletePublicAdvertisedPrefixeRequest

class DeletePublicDelegatedPrefixeRequest(google.protobuf.message.Message):
    """A request message for PublicDelegatedPrefixes.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIX_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    public_delegated_prefix: typing.Text = ...
    """Name of the PublicDelegatedPrefix resource to delete."""

    region: typing.Text = ...
    """Name of the region of this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_delegated_prefix : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","public_delegated_prefix",b"public_delegated_prefix","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeletePublicDelegatedPrefixeRequest = DeletePublicDelegatedPrefixeRequest

class DeleteRegionAutoscalerRequest(google.protobuf.message.Message):
    """A request message for RegionAutoscalers.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    autoscaler: typing.Text = ...
    """Name of the autoscaler to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        autoscaler : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","autoscaler",b"autoscaler","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionAutoscalerRequest = DeleteRegionAutoscalerRequest

class DeleteRegionBackendServiceRequest(google.protobuf.message.Message):
    """A request message for RegionBackendServices.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service",b"backend_service","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionBackendServiceRequest = DeleteRegionBackendServiceRequest

class DeleteRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """Name of the regional persistent disk to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk",b"disk","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionDiskRequest = DeleteRegionDiskRequest

class DeleteRegionHealthCheckRequest(google.protobuf.message.Message):
    """A request message for RegionHealthChecks.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    health_check: typing.Text = ...
    """Name of the HealthCheck resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check",b"health_check","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionHealthCheckRequest = DeleteRegionHealthCheckRequest

class DeleteRegionHealthCheckServiceRequest(google.protobuf.message.Message):
    """A request message for RegionHealthCheckServices.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    health_check_service: typing.Text = ...
    """Name of the HealthCheckService to delete. The name must be 1-63 characters long, and comply with RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check_service : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_service",b"health_check_service","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionHealthCheckServiceRequest = DeleteRegionHealthCheckServiceRequest

class DeleteRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """Name of the managed instance group to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionInstanceGroupManagerRequest = DeleteRegionInstanceGroupManagerRequest

class DeleteRegionNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for RegionNetworkEndpointGroups.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group to delete. It should comply with RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region where the network endpoint group is located. It should comply with RFC1035."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network_endpoint_group : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group",b"network_endpoint_group","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionNetworkEndpointGroupRequest = DeleteRegionNetworkEndpointGroupRequest

class DeleteRegionNotificationEndpointRequest(google.protobuf.message.Message):
    """A request message for RegionNotificationEndpoints.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NOTIFICATION_ENDPOINT_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    notification_endpoint: typing.Text = ...
    """Name of the NotificationEndpoint resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        notification_endpoint : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","notification_endpoint",b"notification_endpoint","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionNotificationEndpointRequest = DeleteRegionNotificationEndpointRequest

class DeleteRegionOperationRequest(google.protobuf.message.Message):
    """A request message for RegionOperations.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation",b"operation","project",b"project","region",b"region"]) -> None: ...
global___DeleteRegionOperationRequest = DeleteRegionOperationRequest

class DeleteRegionOperationResponse(google.protobuf.message.Message):
    """A response message for RegionOperations.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___DeleteRegionOperationResponse = DeleteRegionOperationResponse

class DeleteRegionSslCertificateRequest(google.protobuf.message.Message):
    """A request message for RegionSslCertificates.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SSL_CERTIFICATE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    ssl_certificate: typing.Text = ...
    """Name of the SslCertificate resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ssl_certificate : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","ssl_certificate",b"ssl_certificate"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionSslCertificateRequest = DeleteRegionSslCertificateRequest

class DeleteRegionTargetHttpProxyRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpProxies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTP_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_http_proxy: typing.Text = ...
    """Name of the TargetHttpProxy resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_http_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_http_proxy",b"target_http_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionTargetHttpProxyRequest = DeleteRegionTargetHttpProxyRequest

class DeleteRegionTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpsProxies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_https_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_https_proxy",b"target_https_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionTargetHttpsProxyRequest = DeleteRegionTargetHttpsProxyRequest

class DeleteRegionUrlMapRequest(google.protobuf.message.Message):
    """A request message for RegionUrlMaps.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """begin_interface: MixerMutationRequestBuilder Request ID to support idempotency."""

    url_map: typing.Text = ...
    """Name of the UrlMap resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        url_map : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","url_map",b"url_map"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRegionUrlMapRequest = DeleteRegionUrlMapRequest

class DeleteReservationRequest(google.protobuf.message.Message):
    """A request message for Reservations.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESERVATION_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    reservation: typing.Text = ...
    """Name of the reservation to delete."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        reservation : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","reservation",b"reservation","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteReservationRequest = DeleteReservationRequest

class DeleteResourcePolicyRequest(google.protobuf.message.Message):
    """A request message for ResourcePolicies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESOURCE_POLICY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    resource_policy: typing.Text = ...
    """Name of the resource policy to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        resource_policy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","resource_policy",b"resource_policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteResourcePolicyRequest = DeleteResourcePolicyRequest

class DeleteRouteRequest(google.protobuf.message.Message):
    """A request message for Routes.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ROUTE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    route: typing.Text = ...
    """Name of the Route resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        route : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","route",b"route"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRouteRequest = DeleteRouteRequest

class DeleteRouterRequest(google.protobuf.message.Message):
    """A request message for Routers.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ROUTER_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    router: typing.Text = ...
    """Name of the Router resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        router : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","router",b"router"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteRouterRequest = DeleteRouterRequest

class DeleteSecurityPolicyRequest(google.protobuf.message.Message):
    """A request message for SecurityPolicies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    security_policy: typing.Text = ...
    """Name of the security policy to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        security_policy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","security_policy",b"security_policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteSecurityPolicyRequest = DeleteSecurityPolicyRequest

class DeleteServiceAttachmentRequest(google.protobuf.message.Message):
    """A request message for ServiceAttachments.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SERVICE_ATTACHMENT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region of this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    service_attachment: typing.Text = ...
    """Name of the ServiceAttachment resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        service_attachment : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","service_attachment",b"service_attachment"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteServiceAttachmentRequest = DeleteServiceAttachmentRequest

class DeleteSignedUrlKeyBackendBucketRequest(google.protobuf.message.Message):
    """A request message for BackendBuckets.DeleteSignedUrlKey. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_BUCKET_FIELD_NUMBER: builtins.int
    KEY_NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_bucket: typing.Text = ...
    """Name of the BackendBucket resource to which the Signed URL Key should be added. The name should conform to RFC1035."""

    key_name: typing.Text = ...
    """The name of the Signed URL Key to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_bucket : typing.Text = ...,
        key_name : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_bucket",b"backend_bucket","key_name",b"key_name","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteSignedUrlKeyBackendBucketRequest = DeleteSignedUrlKeyBackendBucketRequest

class DeleteSignedUrlKeyBackendServiceRequest(google.protobuf.message.Message):
    """A request message for BackendServices.DeleteSignedUrlKey. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    KEY_NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to which the Signed URL Key should be added. The name should conform to RFC1035."""

    key_name: typing.Text = ...
    """The name of the Signed URL Key to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        key_name : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service",b"backend_service","key_name",b"key_name","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteSignedUrlKeyBackendServiceRequest = DeleteSignedUrlKeyBackendServiceRequest

class DeleteSnapshotRequest(google.protobuf.message.Message):
    """A request message for Snapshots.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SNAPSHOT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    snapshot: typing.Text = ...
    """Name of the Snapshot resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        snapshot : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","snapshot",b"snapshot"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteSnapshotRequest = DeleteSnapshotRequest

class DeleteSslCertificateRequest(google.protobuf.message.Message):
    """A request message for SslCertificates.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SSL_CERTIFICATE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    ssl_certificate: typing.Text = ...
    """Name of the SslCertificate resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ssl_certificate : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","ssl_certificate",b"ssl_certificate"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteSslCertificateRequest = DeleteSslCertificateRequest

class DeleteSslPolicyRequest(google.protobuf.message.Message):
    """A request message for SslPolicies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SSL_POLICY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    ssl_policy: typing.Text = ...
    """Name of the SSL policy to delete. The name must be 1-63 characters long, and comply with RFC1035."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ssl_policy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","ssl_policy",b"ssl_policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteSslPolicyRequest = DeleteSslPolicyRequest

class DeleteSubnetworkRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    subnetwork: typing.Text = ...
    """Name of the Subnetwork resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        subnetwork : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","subnetwork",b"subnetwork"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteSubnetworkRequest = DeleteSubnetworkRequest

class DeleteTargetGrpcProxyRequest(google.protobuf.message.Message):
    """A request message for TargetGrpcProxies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_GRPC_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    target_grpc_proxy: typing.Text = ...
    """Name of the TargetGrpcProxy resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_grpc_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_grpc_proxy",b"target_grpc_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteTargetGrpcProxyRequest = DeleteTargetGrpcProxyRequest

class DeleteTargetHttpProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpProxies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTP_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_http_proxy: typing.Text = ...
    """Name of the TargetHttpProxy resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_http_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_http_proxy",b"target_http_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteTargetHttpProxyRequest = DeleteTargetHttpProxyRequest

class DeleteTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpsProxies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_https_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_https_proxy",b"target_https_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteTargetHttpsProxyRequest = DeleteTargetHttpsProxyRequest

class DeleteTargetInstanceRequest(google.protobuf.message.Message):
    """A request message for TargetInstances.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_INSTANCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_instance: typing.Text = ...
    """Name of the TargetInstance resource to delete."""

    zone: typing.Text = ...
    """Name of the zone scoping this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_instance : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_instance",b"target_instance","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteTargetInstanceRequest = DeleteTargetInstanceRequest

class DeleteTargetPoolRequest(google.protobuf.message.Message):
    """A request message for TargetPools.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_POOL_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_pool: typing.Text = ...
    """Name of the TargetPool resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_pool : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_pool",b"target_pool"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteTargetPoolRequest = DeleteTargetPoolRequest

class DeleteTargetSslProxyRequest(google.protobuf.message.Message):
    """A request message for TargetSslProxies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_SSL_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_ssl_proxy: typing.Text = ...
    """Name of the TargetSslProxy resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_ssl_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_ssl_proxy",b"target_ssl_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteTargetSslProxyRequest = DeleteTargetSslProxyRequest

class DeleteTargetTcpProxyRequest(google.protobuf.message.Message):
    """A request message for TargetTcpProxies.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_TCP_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_tcp_proxy: typing.Text = ...
    """Name of the TargetTcpProxy resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_tcp_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_tcp_proxy",b"target_tcp_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteTargetTcpProxyRequest = DeleteTargetTcpProxyRequest

class DeleteTargetVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for TargetVpnGateways.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_VPN_GATEWAY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_vpn_gateway: typing.Text = ...
    """Name of the target VPN gateway to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_vpn_gateway : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_vpn_gateway",b"target_vpn_gateway"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteTargetVpnGatewayRequest = DeleteTargetVpnGatewayRequest

class DeleteUrlMapRequest(google.protobuf.message.Message):
    """A request message for UrlMaps.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    url_map: typing.Text = ...
    """Name of the UrlMap resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        url_map : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","url_map",b"url_map"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteUrlMapRequest = DeleteUrlMapRequest

class DeleteVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for VpnGateways.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    VPN_GATEWAY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    vpn_gateway: typing.Text = ...
    """Name of the VPN gateway to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        vpn_gateway : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","vpn_gateway",b"vpn_gateway"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteVpnGatewayRequest = DeleteVpnGatewayRequest

class DeleteVpnTunnelRequest(google.protobuf.message.Message):
    """A request message for VpnTunnels.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    VPN_TUNNEL_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    vpn_tunnel: typing.Text = ...
    """Name of the VpnTunnel resource to delete."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        vpn_tunnel : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","vpn_tunnel",b"vpn_tunnel"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeleteVpnTunnelRequest = DeleteVpnTunnelRequest

class DeleteZoneOperationRequest(google.protobuf.message.Message):
    """A request message for ZoneOperations.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to delete."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation",b"operation","project",b"project","zone",b"zone"]) -> None: ...
global___DeleteZoneOperationRequest = DeleteZoneOperationRequest

class DeleteZoneOperationResponse(google.protobuf.message.Message):
    """A response message for ZoneOperations.Delete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___DeleteZoneOperationResponse = DeleteZoneOperationResponse

class Denied(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    I_P_PROTOCOL_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    I_p_protocol: typing.Text = ...
    """The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp) or the IP protocol number."""

    @property
    def ports(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An optional list of ports to which this rule applies. This field is only applicable for the UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]."""
        pass
    def __init__(self,
        *,
        I_p_protocol : typing.Optional[typing.Text] = ...,
        ports : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["I_p_protocol",b"I_p_protocol","_I_p_protocol",b"_I_p_protocol"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["I_p_protocol",b"I_p_protocol","_I_p_protocol",b"_I_p_protocol","ports",b"ports"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_I_p_protocol",b"_I_p_protocol"]) -> typing.Optional[typing_extensions.Literal["I_p_protocol"]]: ...
global___Denied = Denied

class DeprecateImageRequest(google.protobuf.message.Message):
    """A request message for Images.Deprecate. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEPRECATION_STATUS_RESOURCE_FIELD_NUMBER: builtins.int
    IMAGE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def deprecation_status_resource(self) -> global___DeprecationStatus:
        """The body resource for this request"""
        pass
    image: typing.Text = ...
    """Image name."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        deprecation_status_resource : typing.Optional[global___DeprecationStatus] = ...,
        image : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","deprecation_status_resource",b"deprecation_status_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","deprecation_status_resource",b"deprecation_status_resource","image",b"image","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DeprecateImageRequest = DeprecateImageRequest

class DeprecationStatus(google.protobuf.message.Message):
    """Deprecation status for a public resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: DeprecationStatus.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: DeprecationStatus.State.ValueType = ...  # 314733318
        DELETED: DeprecationStatus.State.ValueType = ...  # 120962041
        DEPRECATED: DeprecationStatus.State.ValueType = ...  # 463360435
        OBSOLETE: DeprecationStatus.State.ValueType = ...  # 66532761
    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error."""
        pass

    UNDEFINED_STATE: DeprecationStatus.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: DeprecationStatus.State.ValueType = ...  # 314733318
    DELETED: DeprecationStatus.State.ValueType = ...  # 120962041
    DEPRECATED: DeprecationStatus.State.ValueType = ...  # 463360435
    OBSOLETE: DeprecationStatus.State.ValueType = ...  # 66532761

    DELETED_FIELD_NUMBER: builtins.int
    DEPRECATED_FIELD_NUMBER: builtins.int
    OBSOLETE_FIELD_NUMBER: builtins.int
    REPLACEMENT_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    deleted: typing.Text = ...
    """An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it."""

    deprecated: typing.Text = ...
    """An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it."""

    obsolete: typing.Text = ...
    """An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it."""

    replacement: typing.Text = ...
    """The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource."""

    state: typing.Text = ...
    """The deprecation state of this resource. This can be ACTIVE, DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the end of life date for an image, can use ACTIVE. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.
    Check the State enum for the list of possible values.
    """

    def __init__(self,
        *,
        deleted : typing.Optional[typing.Text] = ...,
        deprecated : typing.Optional[typing.Text] = ...,
        obsolete : typing.Optional[typing.Text] = ...,
        replacement : typing.Optional[typing.Text] = ...,
        state : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_deleted",b"_deleted","_deprecated",b"_deprecated","_obsolete",b"_obsolete","_replacement",b"_replacement","_state",b"_state","deleted",b"deleted","deprecated",b"deprecated","obsolete",b"obsolete","replacement",b"replacement","state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_deleted",b"_deleted","_deprecated",b"_deprecated","_obsolete",b"_obsolete","_replacement",b"_replacement","_state",b"_state","deleted",b"deleted","deprecated",b"deprecated","obsolete",b"obsolete","replacement",b"replacement","state",b"state"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deleted",b"_deleted"]) -> typing.Optional[typing_extensions.Literal["deleted"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deprecated",b"_deprecated"]) -> typing.Optional[typing_extensions.Literal["deprecated"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_obsolete",b"_obsolete"]) -> typing.Optional[typing_extensions.Literal["obsolete"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_replacement",b"_replacement"]) -> typing.Optional[typing_extensions.Literal["replacement"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
global___DeprecationStatus = DeprecationStatus

class DetachDiskInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.DetachDisk. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEVICE_NAME_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    device_name: typing.Text = ...
    """The device name of the disk to detach. Make a get() request on the instance to view currently attached disks and device names."""

    instance: typing.Text = ...
    """Instance name for this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        device_name : typing.Text = ...,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","device_name",b"device_name","instance",b"instance","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DetachDiskInstanceRequest = DetachDiskInstanceRequest

class DetachNetworkEndpointsGlobalNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for GlobalNetworkEndpointGroups.DetachNetworkEndpoints. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_NETWORK_ENDPOINT_GROUPS_DETACH_ENDPOINTS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def global_network_endpoint_groups_detach_endpoints_request_resource(self) -> global___GlobalNetworkEndpointGroupsDetachEndpointsRequest:
        """The body resource for this request"""
        pass
    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group where you are removing network endpoints. It should comply with RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        global_network_endpoint_groups_detach_endpoints_request_resource : typing.Optional[global___GlobalNetworkEndpointGroupsDetachEndpointsRequest] = ...,
        network_endpoint_group : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","global_network_endpoint_groups_detach_endpoints_request_resource",b"global_network_endpoint_groups_detach_endpoints_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","global_network_endpoint_groups_detach_endpoints_request_resource",b"global_network_endpoint_groups_detach_endpoints_request_resource","network_endpoint_group",b"network_endpoint_group","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DetachNetworkEndpointsGlobalNetworkEndpointGroupRequest = DetachNetworkEndpointsGlobalNetworkEndpointGroupRequest

class DetachNetworkEndpointsNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for NetworkEndpointGroups.DetachNetworkEndpoints. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    NETWORK_ENDPOINT_GROUPS_DETACH_ENDPOINTS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group where you are removing network endpoints. It should comply with RFC1035."""

    @property
    def network_endpoint_groups_detach_endpoints_request_resource(self) -> global___NetworkEndpointGroupsDetachEndpointsRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the network endpoint group is located. It should comply with RFC1035."""

    def __init__(self,
        *,
        network_endpoint_group : typing.Text = ...,
        network_endpoint_groups_detach_endpoints_request_resource : typing.Optional[global___NetworkEndpointGroupsDetachEndpointsRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_groups_detach_endpoints_request_resource",b"network_endpoint_groups_detach_endpoints_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group",b"network_endpoint_group","network_endpoint_groups_detach_endpoints_request_resource",b"network_endpoint_groups_detach_endpoints_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DetachNetworkEndpointsNetworkEndpointGroupRequest = DetachNetworkEndpointsNetworkEndpointGroupRequest

class DisableXpnHostProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.DisableXpnHost. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DisableXpnHostProjectRequest = DisableXpnHostProjectRequest

class DisableXpnResourceProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.DisableXpnResource. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PROJECTS_DISABLE_XPN_RESOURCE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    @property
    def projects_disable_xpn_resource_request_resource(self) -> global___ProjectsDisableXpnResourceRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        projects_disable_xpn_resource_request_resource : typing.Optional[global___ProjectsDisableXpnResourceRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","projects_disable_xpn_resource_request_resource",b"projects_disable_xpn_resource_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","projects_disable_xpn_resource_request_resource",b"projects_disable_xpn_resource_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___DisableXpnResourceProjectRequest = DisableXpnResourceProjectRequest

class Disk(google.protobuf.message.Message):
    """Represents a Persistent Disk resource. Google Compute Engine has two Disk resources: * [Zonal](/compute/docs/reference/rest/v1/disks) * [Regional](/compute/docs/reference/rest/v1/regionDisks) Persistent disks are required for running your VM instances. Create both boot and non-boot (data) persistent disks. For more information, read Persistent Disks. For more storage options, read Storage options. The disks resource represents a zonal persistent disk. For more information, read Zonal persistent disks. The regionDisks resource represents a regional persistent disk. For more information, read Regional resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Disk.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CREATING: Disk.Status.ValueType = ...  # 455564985
        """Disk is provisioning"""

        DELETING: Disk.Status.ValueType = ...  # 528602024
        """Disk is deleting."""

        FAILED: Disk.Status.ValueType = ...  # 455706685
        """Disk creation failed."""

        READY: Disk.Status.ValueType = ...  # 77848963
        """Disk is ready for use."""

        RESTORING: Disk.Status.ValueType = ...  # 404263851
        """Source data is being copied into the disk."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of disk creation. - CREATING: Disk is provisioning. - RESTORING: Source data is being copied into the disk. - FAILED: Disk creation failed. - READY: Disk is ready for use. - DELETING: Disk is deleting."""
        pass

    UNDEFINED_STATUS: Disk.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CREATING: Disk.Status.ValueType = ...  # 455564985
    """Disk is provisioning"""

    DELETING: Disk.Status.ValueType = ...  # 528602024
    """Disk is deleting."""

    FAILED: Disk.Status.ValueType = ...  # 455706685
    """Disk creation failed."""

    READY: Disk.Status.ValueType = ...  # 77848963
    """Disk is ready for use."""

    RESTORING: Disk.Status.ValueType = ...  # 404263851
    """Source data is being copied into the disk."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISK_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    GUEST_OS_FEATURES_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LAST_ATTACH_TIMESTAMP_FIELD_NUMBER: builtins.int
    LAST_DETACH_TIMESTAMP_FIELD_NUMBER: builtins.int
    LICENSE_CODES_FIELD_NUMBER: builtins.int
    LICENSES_FIELD_NUMBER: builtins.int
    LOCATION_HINT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    PHYSICAL_BLOCK_SIZE_BYTES_FIELD_NUMBER: builtins.int
    PROVISIONED_IOPS_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REPLICA_ZONES_FIELD_NUMBER: builtins.int
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    SATISFIES_PZS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SIZE_GB_FIELD_NUMBER: builtins.int
    SOURCE_DISK_FIELD_NUMBER: builtins.int
    SOURCE_DISK_ID_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_ID_FIELD_NUMBER: builtins.int
    SOURCE_SNAPSHOT_FIELD_NUMBER: builtins.int
    SOURCE_SNAPSHOT_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    SOURCE_SNAPSHOT_ID_FIELD_NUMBER: builtins.int
    SOURCE_STORAGE_OBJECT_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    USERS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    @property
    def disk_encryption_key(self) -> global___CustomerEncryptionKey:
        """Encrypts the disk using a customer-supplied encryption key or a customer-managed encryption key. Encryption keys do not protect access to metadata of the disk. After you encrypt a disk with a customer-supplied key, you must provide the same key if you use the disk later. For example, to create a disk snapshot, to create a disk image, to create a machine image, or to attach the disk to a virtual machine. After you encrypt a disk with a customer-managed key, the diskEncryptionKey.kmsKeyName is set to a key *version* name once the disk is created. The disk is encrypted with this version of the key. In the response, diskEncryptionKey.kmsKeyName appears in the following format: "diskEncryptionKey.kmsKeyName": "projects/kms_project_id/locations/region/keyRings/ key_region/cryptoKeys/key /cryptoKeysVersions/version If you do not provide an encryption key when creating the disk, then the disk is encrypted using an automatically generated key and you don't need to provide a key to use the disk later."""
        pass
    @property
    def guest_os_features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GuestOsFeature]:
        """A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options."""
        pass
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#disk for disks."""

    label_fingerprint: typing.Text = ...
    """A fingerprint for the labels being applied to this disk, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a disk."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels to apply to this disk. These can be later modified by the setLabels method."""
        pass
    last_attach_timestamp: typing.Text = ...
    """[Output Only] Last attach timestamp in RFC3339 text format."""

    last_detach_timestamp: typing.Text = ...
    """[Output Only] Last detach timestamp in RFC3339 text format."""

    @property
    def license_codes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Integer license codes indicating which licenses are attached to this disk."""
        pass
    @property
    def licenses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of publicly visible licenses. Reserved for Google's use."""
        pass
    location_hint: typing.Text = ...
    """An opaque location hint used to place the disk close to other resources. This field is for use by internal tools that use the public API."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    options: typing.Text = ...
    """Internal use only."""

    physical_block_size_bytes: builtins.int = ...
    """Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. The currently supported size is 4096, other sizes may be added in the future. If an unsupported value is requested, the error message will list the supported values for the caller's project."""

    provisioned_iops: builtins.int = ...
    """Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Values must be between 10,000 and 120,000. For more details, see the Extreme persistent disk documentation."""

    region: typing.Text = ...
    """[Output Only] URL of the region where the disk resides. Only applicable for regional resources. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    @property
    def replica_zones(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """URLs of the zones where the disk should be replicated to. Only applicable for regional resources."""
        pass
    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Resource policies applied to this disk for automatic snapshot creations."""
        pass
    satisfies_pzs: builtins.bool = ...
    """[Output Only] Reserved for future use."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined fully-qualified URL for this resource."""

    size_gb: builtins.int = ...
    """Size, in GB, of the persistent disk. You can specify this field when creating a persistent disk using the sourceImage, sourceSnapshot, or sourceDisk parameter, or specify it alone to create an empty persistent disk. If you specify this field along with a source, the value of sizeGb must not be less than the size of the source. Acceptable values are 1 to 65536, inclusive."""

    source_disk: typing.Text = ...
    """The source disk used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - https://www.googleapis.com/compute/v1/projects/project/regions/region /disks/disk - projects/project/zones/zone/disks/disk - projects/project/regions/region/disks/disk - zones/zone/disks/disk - regions/region/disks/disk"""

    source_disk_id: typing.Text = ...
    """[Output Only] The unique ID of the disk used to create this disk. This value identifies the exact disk that was used to create this persistent disk. For example, if you created the persistent disk from a disk that was later deleted and recreated under the same name, the source disk ID would identify the exact version of the disk that was used."""

    source_image: typing.Text = ...
    """The source image used to create this disk. If the source image is deleted, this field will not be set. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image: projects/debian-cloud/global/images/family/debian-9 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a disk with a custom image that you created, specify the image name in the following format: global/images/my-custom-image You can also specify a custom image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-image-family"""

    @property
    def source_image_encryption_key(self) -> global___CustomerEncryptionKey:
        """The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key."""
        pass
    source_image_id: typing.Text = ...
    """[Output Only] The ID value of the image used to create this disk. This value identifies the exact image that was used to create this persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated under the same name, the source image ID would identify the exact version of the image that was used."""

    source_snapshot: typing.Text = ...
    """The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project /global/snapshots/snapshot - projects/project/global/snapshots/snapshot - global/snapshots/snapshot"""

    @property
    def source_snapshot_encryption_key(self) -> global___CustomerEncryptionKey:
        """The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key."""
        pass
    source_snapshot_id: typing.Text = ...
    """[Output Only] The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used."""

    source_storage_object: typing.Text = ...
    """The full Google Cloud Storage URI where the disk image is stored. This file must be a gzip-compressed tarball whose name ends in .tar.gz or virtual machine disk whose name ends in vmdk. Valid URIs may start with gs:// or https://storage.googleapis.com/. This flag is not optimized for creating multiple disks from a source storage object. To create many disks from a source storage object, use gcloud compute images import instead."""

    status: typing.Text = ...
    """[Output Only] The status of disk creation. - CREATING: Disk is provisioning. - RESTORING: Source data is being copied into the disk. - FAILED: Disk creation failed. - READY: Disk is ready for use. - DELETING: Disk is deleting.
    Check the Status enum for the list of possible values.
    """

    type: typing.Text = ...
    """URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk. For example: projects/project /zones/zone/diskTypes/pd-ssd . See Persistent disk types."""

    @property
    def users(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Links to the users of the disk (attached instances) in form: projects/project/zones/zone/instances/instance"""
        pass
    zone: typing.Text = ...
    """[Output Only] URL of the zone where the disk resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        disk_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        guest_os_features : typing.Optional[typing.Iterable[global___GuestOsFeature]] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        last_attach_timestamp : typing.Optional[typing.Text] = ...,
        last_detach_timestamp : typing.Optional[typing.Text] = ...,
        license_codes : typing.Optional[typing.Iterable[builtins.int]] = ...,
        licenses : typing.Optional[typing.Iterable[typing.Text]] = ...,
        location_hint : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        options : typing.Optional[typing.Text] = ...,
        physical_block_size_bytes : typing.Optional[builtins.int] = ...,
        provisioned_iops : typing.Optional[builtins.int] = ...,
        region : typing.Optional[typing.Text] = ...,
        replica_zones : typing.Optional[typing.Iterable[typing.Text]] = ...,
        resource_policies : typing.Optional[typing.Iterable[typing.Text]] = ...,
        satisfies_pzs : typing.Optional[builtins.bool] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        size_gb : typing.Optional[builtins.int] = ...,
        source_disk : typing.Optional[typing.Text] = ...,
        source_disk_id : typing.Optional[typing.Text] = ...,
        source_image : typing.Optional[typing.Text] = ...,
        source_image_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        source_image_id : typing.Optional[typing.Text] = ...,
        source_snapshot : typing.Optional[typing.Text] = ...,
        source_snapshot_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        source_snapshot_id : typing.Optional[typing.Text] = ...,
        source_storage_object : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        type : typing.Optional[typing.Text] = ...,
        users : typing.Optional[typing.Iterable[typing.Text]] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_disk_encryption_key",b"_disk_encryption_key","_id",b"_id","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_last_attach_timestamp",b"_last_attach_timestamp","_last_detach_timestamp",b"_last_detach_timestamp","_location_hint",b"_location_hint","_name",b"_name","_options",b"_options","_physical_block_size_bytes",b"_physical_block_size_bytes","_provisioned_iops",b"_provisioned_iops","_region",b"_region","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_size_gb",b"_size_gb","_source_disk",b"_source_disk","_source_disk_id",b"_source_disk_id","_source_image",b"_source_image","_source_image_encryption_key",b"_source_image_encryption_key","_source_image_id",b"_source_image_id","_source_snapshot",b"_source_snapshot","_source_snapshot_encryption_key",b"_source_snapshot_encryption_key","_source_snapshot_id",b"_source_snapshot_id","_source_storage_object",b"_source_storage_object","_status",b"_status","_type",b"_type","_zone",b"_zone","creation_timestamp",b"creation_timestamp","description",b"description","disk_encryption_key",b"disk_encryption_key","id",b"id","kind",b"kind","label_fingerprint",b"label_fingerprint","last_attach_timestamp",b"last_attach_timestamp","last_detach_timestamp",b"last_detach_timestamp","location_hint",b"location_hint","name",b"name","options",b"options","physical_block_size_bytes",b"physical_block_size_bytes","provisioned_iops",b"provisioned_iops","region",b"region","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","size_gb",b"size_gb","source_disk",b"source_disk","source_disk_id",b"source_disk_id","source_image",b"source_image","source_image_encryption_key",b"source_image_encryption_key","source_image_id",b"source_image_id","source_snapshot",b"source_snapshot","source_snapshot_encryption_key",b"source_snapshot_encryption_key","source_snapshot_id",b"source_snapshot_id","source_storage_object",b"source_storage_object","status",b"status","type",b"type","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_disk_encryption_key",b"_disk_encryption_key","_id",b"_id","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_last_attach_timestamp",b"_last_attach_timestamp","_last_detach_timestamp",b"_last_detach_timestamp","_location_hint",b"_location_hint","_name",b"_name","_options",b"_options","_physical_block_size_bytes",b"_physical_block_size_bytes","_provisioned_iops",b"_provisioned_iops","_region",b"_region","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_size_gb",b"_size_gb","_source_disk",b"_source_disk","_source_disk_id",b"_source_disk_id","_source_image",b"_source_image","_source_image_encryption_key",b"_source_image_encryption_key","_source_image_id",b"_source_image_id","_source_snapshot",b"_source_snapshot","_source_snapshot_encryption_key",b"_source_snapshot_encryption_key","_source_snapshot_id",b"_source_snapshot_id","_source_storage_object",b"_source_storage_object","_status",b"_status","_type",b"_type","_zone",b"_zone","creation_timestamp",b"creation_timestamp","description",b"description","disk_encryption_key",b"disk_encryption_key","guest_os_features",b"guest_os_features","id",b"id","kind",b"kind","label_fingerprint",b"label_fingerprint","labels",b"labels","last_attach_timestamp",b"last_attach_timestamp","last_detach_timestamp",b"last_detach_timestamp","license_codes",b"license_codes","licenses",b"licenses","location_hint",b"location_hint","name",b"name","options",b"options","physical_block_size_bytes",b"physical_block_size_bytes","provisioned_iops",b"provisioned_iops","region",b"region","replica_zones",b"replica_zones","resource_policies",b"resource_policies","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","size_gb",b"size_gb","source_disk",b"source_disk","source_disk_id",b"source_disk_id","source_image",b"source_image","source_image_encryption_key",b"source_image_encryption_key","source_image_id",b"source_image_id","source_snapshot",b"source_snapshot","source_snapshot_encryption_key",b"source_snapshot_encryption_key","source_snapshot_id",b"source_snapshot_id","source_storage_object",b"source_storage_object","status",b"status","type",b"type","users",b"users","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_encryption_key",b"_disk_encryption_key"]) -> typing.Optional[typing_extensions.Literal["disk_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_last_attach_timestamp",b"_last_attach_timestamp"]) -> typing.Optional[typing_extensions.Literal["last_attach_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_last_detach_timestamp",b"_last_detach_timestamp"]) -> typing.Optional[typing_extensions.Literal["last_detach_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_location_hint",b"_location_hint"]) -> typing.Optional[typing_extensions.Literal["location_hint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options",b"_options"]) -> typing.Optional[typing_extensions.Literal["options"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_physical_block_size_bytes",b"_physical_block_size_bytes"]) -> typing.Optional[typing_extensions.Literal["physical_block_size_bytes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_provisioned_iops",b"_provisioned_iops"]) -> typing.Optional[typing_extensions.Literal["provisioned_iops"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_satisfies_pzs",b"_satisfies_pzs"]) -> typing.Optional[typing_extensions.Literal["satisfies_pzs"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_size_gb",b"_size_gb"]) -> typing.Optional[typing_extensions.Literal["size_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_disk",b"_source_disk"]) -> typing.Optional[typing_extensions.Literal["source_disk"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_disk_id",b"_source_disk_id"]) -> typing.Optional[typing_extensions.Literal["source_disk_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_image",b"_source_image"]) -> typing.Optional[typing_extensions.Literal["source_image"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_image_encryption_key",b"_source_image_encryption_key"]) -> typing.Optional[typing_extensions.Literal["source_image_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_image_id",b"_source_image_id"]) -> typing.Optional[typing_extensions.Literal["source_image_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_snapshot",b"_source_snapshot"]) -> typing.Optional[typing_extensions.Literal["source_snapshot"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_snapshot_encryption_key",b"_source_snapshot_encryption_key"]) -> typing.Optional[typing_extensions.Literal["source_snapshot_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_snapshot_id",b"_source_snapshot_id"]) -> typing.Optional[typing_extensions.Literal["source_snapshot_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_storage_object",b"_source_storage_object"]) -> typing.Optional[typing_extensions.Literal["source_storage_object"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___Disk = Disk

class DiskAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___DisksScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___DisksScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___DisksScopedList]:
        """A list of DisksScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#diskAggregatedList for aggregated lists of persistent disks."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___DisksScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___DiskAggregatedList = DiskAggregatedList

class DiskInstantiationConfig(google.protobuf.message.Message):
    """A specification of the desired way to instantiate a disk in the instance template when its created from a source instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _InstantiateFrom:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InstantiateFromEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InstantiateFrom.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_INSTANTIATE_FROM: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ATTACH_READ_ONLY: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 513775419
        """Attach the existing disk in read-only mode. The request will fail if the disk was attached in read-write mode on the source instance. Applicable to: read-only disks."""

        BLANK: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 63281460
        """Create a blank disk. The disk will be created unformatted. Applicable to: additional read-write disks, local SSDs."""

        CUSTOM_IMAGE: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 196311789
        """Use the custom image specified in the custom_image field. Applicable to: boot disk, additional read-write disks."""

        DEFAULT: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 115302945
        """Use the default instantiation option for the corresponding type of disk. For boot disk and any other R/W disks, new custom images will be created from each disk. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes."""

        DO_NOT_INCLUDE: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 104218952
        """Do not include the disk in the instance template. Applicable to: additional read-write disks, local SSDs, read-only disks."""

        SOURCE_IMAGE: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 62631959
        """Use the same source image used for creation of the source instance's corresponding disk. The request will fail if the source VM's disk was created from a snapshot. Applicable to: boot disk, additional read-write disks."""

        SOURCE_IMAGE_FAMILY: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 76850316
        """Use the same source image family used for creation of the source instance's corresponding disk. The request will fail if the source image of the source disk does not belong to any image family. Applicable to: boot disk, additional read-write disks."""

    class InstantiateFrom(_InstantiateFrom, metaclass=_InstantiateFromEnumTypeWrapper):
        """Specifies whether to include the disk and what image to use. Possible values are: - source-image: to use the same image that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. - source-image-family: to use the same image family that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. - custom-image: to use a user-provided image url for disk creation. Applicable to the boot disk and additional read-write disks. - attach-read-only: to attach a read-only disk. Applicable to read-only disks. - do-not-include: to exclude a disk from the template. Applicable to additional read-write disks, local SSDs, and read-only disks."""
        pass

    UNDEFINED_INSTANTIATE_FROM: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ATTACH_READ_ONLY: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 513775419
    """Attach the existing disk in read-only mode. The request will fail if the disk was attached in read-write mode on the source instance. Applicable to: read-only disks."""

    BLANK: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 63281460
    """Create a blank disk. The disk will be created unformatted. Applicable to: additional read-write disks, local SSDs."""

    CUSTOM_IMAGE: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 196311789
    """Use the custom image specified in the custom_image field. Applicable to: boot disk, additional read-write disks."""

    DEFAULT: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 115302945
    """Use the default instantiation option for the corresponding type of disk. For boot disk and any other R/W disks, new custom images will be created from each disk. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes."""

    DO_NOT_INCLUDE: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 104218952
    """Do not include the disk in the instance template. Applicable to: additional read-write disks, local SSDs, read-only disks."""

    SOURCE_IMAGE: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 62631959
    """Use the same source image used for creation of the source instance's corresponding disk. The request will fail if the source VM's disk was created from a snapshot. Applicable to: boot disk, additional read-write disks."""

    SOURCE_IMAGE_FAMILY: DiskInstantiationConfig.InstantiateFrom.ValueType = ...  # 76850316
    """Use the same source image family used for creation of the source instance's corresponding disk. The request will fail if the source image of the source disk does not belong to any image family. Applicable to: boot disk, additional read-write disks."""


    AUTO_DELETE_FIELD_NUMBER: builtins.int
    CUSTOM_IMAGE_FIELD_NUMBER: builtins.int
    DEVICE_NAME_FIELD_NUMBER: builtins.int
    INSTANTIATE_FROM_FIELD_NUMBER: builtins.int
    auto_delete: builtins.bool = ...
    """Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance)."""

    custom_image: typing.Text = ...
    """The custom source image to be used to restore this disk when instantiating this instance template."""

    device_name: typing.Text = ...
    """Specifies the device name of the disk to which the configurations apply to."""

    instantiate_from: typing.Text = ...
    """Specifies whether to include the disk and what image to use. Possible values are: - source-image: to use the same image that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. - source-image-family: to use the same image family that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. - custom-image: to use a user-provided image url for disk creation. Applicable to the boot disk and additional read-write disks. - attach-read-only: to attach a read-only disk. Applicable to read-only disks. - do-not-include: to exclude a disk from the template. Applicable to additional read-write disks, local SSDs, and read-only disks.
    Check the InstantiateFrom enum for the list of possible values.
    """

    def __init__(self,
        *,
        auto_delete : typing.Optional[builtins.bool] = ...,
        custom_image : typing.Optional[typing.Text] = ...,
        device_name : typing.Optional[typing.Text] = ...,
        instantiate_from : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_auto_delete",b"_auto_delete","_custom_image",b"_custom_image","_device_name",b"_device_name","_instantiate_from",b"_instantiate_from","auto_delete",b"auto_delete","custom_image",b"custom_image","device_name",b"device_name","instantiate_from",b"instantiate_from"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_auto_delete",b"_auto_delete","_custom_image",b"_custom_image","_device_name",b"_device_name","_instantiate_from",b"_instantiate_from","auto_delete",b"auto_delete","custom_image",b"custom_image","device_name",b"device_name","instantiate_from",b"instantiate_from"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_auto_delete",b"_auto_delete"]) -> typing.Optional[typing_extensions.Literal["auto_delete"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_custom_image",b"_custom_image"]) -> typing.Optional[typing_extensions.Literal["custom_image"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_device_name",b"_device_name"]) -> typing.Optional[typing_extensions.Literal["device_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instantiate_from",b"_instantiate_from"]) -> typing.Optional[typing_extensions.Literal["instantiate_from"]]: ...
global___DiskInstantiationConfig = DiskInstantiationConfig

class DiskList(google.protobuf.message.Message):
    """A list of Disk resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Disk]:
        """A list of Disk resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#diskList for lists of disks."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Disk]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___DiskList = DiskList

class DiskMoveRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESTINATION_ZONE_FIELD_NUMBER: builtins.int
    TARGET_DISK_FIELD_NUMBER: builtins.int
    destination_zone: typing.Text = ...
    """The URL of the destination zone to move the disk. This can be a full or partial URL. For example, the following are all valid URLs to a zone: - https://www.googleapis.com/compute/v1/projects/project/zones/zone - projects/project/zones/zone - zones/zone"""

    target_disk: typing.Text = ...
    """The URL of the target disk to move. This can be a full or partial URL. For example, the following are all valid URLs to a disk: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk"""

    def __init__(self,
        *,
        destination_zone : typing.Optional[typing.Text] = ...,
        target_disk : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_destination_zone",b"_destination_zone","_target_disk",b"_target_disk","destination_zone",b"destination_zone","target_disk",b"target_disk"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_destination_zone",b"_destination_zone","_target_disk",b"_target_disk","destination_zone",b"destination_zone","target_disk",b"target_disk"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_destination_zone",b"_destination_zone"]) -> typing.Optional[typing_extensions.Literal["destination_zone"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_disk",b"_target_disk"]) -> typing.Optional[typing_extensions.Literal["target_disk"]]: ...
global___DiskMoveRequest = DiskMoveRequest

class DiskType(google.protobuf.message.Message):
    """Represents a Disk Type resource. Google Compute Engine has two Disk Type resources: * [Regional](/compute/docs/reference/rest/v1/regionDiskTypes) * [Zonal](/compute/docs/reference/rest/v1/diskTypes) You can choose from a variety of disk types based on your needs. For more information, read Storage options. The diskTypes resource represents disk types for a zonal persistent disk. For more information, read Zonal persistent disks. The regionDiskTypes resource represents disk types for a regional persistent disk. For more information, read Regional persistent disks."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEFAULT_DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    DEPRECATED_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    VALID_DISK_SIZE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    default_disk_size_gb: builtins.int = ...
    """[Output Only] Server-defined default disk size in GB."""

    @property
    def deprecated(self) -> global___DeprecationStatus:
        """[Output Only] The deprecation status associated with this disk type."""
        pass
    description: typing.Text = ...
    """[Output Only] An optional description of this resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#diskType for disk types."""

    name: typing.Text = ...
    """[Output Only] Name of the resource."""

    region: typing.Text = ...
    """[Output Only] URL of the region where the disk type resides. Only applicable for regional resources. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    valid_disk_size: typing.Text = ...
    """[Output Only] An optional textual description of the valid disk size, such as "10GB-10TB"."""

    zone: typing.Text = ...
    """[Output Only] URL of the zone where the disk type resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        default_disk_size_gb : typing.Optional[builtins.int] = ...,
        deprecated : typing.Optional[global___DeprecationStatus] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        valid_disk_size : typing.Optional[typing.Text] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_default_disk_size_gb",b"_default_disk_size_gb","_deprecated",b"_deprecated","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","_valid_disk_size",b"_valid_disk_size","_zone",b"_zone","creation_timestamp",b"creation_timestamp","default_disk_size_gb",b"default_disk_size_gb","deprecated",b"deprecated","description",b"description","id",b"id","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link","valid_disk_size",b"valid_disk_size","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_default_disk_size_gb",b"_default_disk_size_gb","_deprecated",b"_deprecated","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","_valid_disk_size",b"_valid_disk_size","_zone",b"_zone","creation_timestamp",b"creation_timestamp","default_disk_size_gb",b"default_disk_size_gb","deprecated",b"deprecated","description",b"description","id",b"id","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link","valid_disk_size",b"valid_disk_size","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_disk_size_gb",b"_default_disk_size_gb"]) -> typing.Optional[typing_extensions.Literal["default_disk_size_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deprecated",b"_deprecated"]) -> typing.Optional[typing_extensions.Literal["deprecated"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_valid_disk_size",b"_valid_disk_size"]) -> typing.Optional[typing_extensions.Literal["valid_disk_size"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___DiskType = DiskType

class DiskTypeAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___DiskTypesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___DiskTypesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___DiskTypesScopedList]:
        """A list of DiskTypesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#diskTypeAggregatedList."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___DiskTypesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___DiskTypeAggregatedList = DiskTypeAggregatedList

class DiskTypeList(google.protobuf.message.Message):
    """Contains a list of disk types."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DiskType]:
        """A list of DiskType resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#diskTypeList for disk types."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___DiskType]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___DiskTypeList = DiskTypeList

class DiskTypesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_TYPES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def disk_types(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DiskType]:
        """[Output Only] A list of disk types contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning which replaces the list of disk types when the list is empty."""
        pass
    def __init__(self,
        *,
        disk_types : typing.Optional[typing.Iterable[global___DiskType]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","disk_types",b"disk_types","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___DiskTypesScopedList = DiskTypesScopedList

class DisksAddResourcePoliciesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Full or relative path to the resource policy to be added to this disk. You can only specify one resource policy."""
        pass
    def __init__(self,
        *,
        resource_policies : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_policies",b"resource_policies"]) -> None: ...
global___DisksAddResourcePoliciesRequest = DisksAddResourcePoliciesRequest

class DisksRemoveResourcePoliciesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Resource policies to be removed from this disk."""
        pass
    def __init__(self,
        *,
        resource_policies : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_policies",b"resource_policies"]) -> None: ...
global___DisksRemoveResourcePoliciesRequest = DisksRemoveResourcePoliciesRequest

class DisksResizeRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SIZE_GB_FIELD_NUMBER: builtins.int
    size_gb: builtins.int = ...
    """The new size of the persistent disk, which is specified in GB."""

    def __init__(self,
        *,
        size_gb : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_size_gb",b"_size_gb","size_gb",b"size_gb"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_size_gb",b"_size_gb","size_gb",b"size_gb"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_size_gb",b"_size_gb"]) -> typing.Optional[typing_extensions.Literal["size_gb"]]: ...
global___DisksResizeRequest = DisksResizeRequest

class DisksScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISKS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def disks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Disk]:
        """[Output Only] A list of disks contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning which replaces the list of disks when the list is empty."""
        pass
    def __init__(self,
        *,
        disks : typing.Optional[typing.Iterable[global___Disk]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","disks",b"disks","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___DisksScopedList = DisksScopedList

class DisplayDevice(google.protobuf.message.Message):
    """A set of Display Device options"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_DISPLAY_FIELD_NUMBER: builtins.int
    enable_display: builtins.bool = ...
    """Defines whether the instance has Display enabled."""

    def __init__(self,
        *,
        enable_display : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enable_display",b"_enable_display","enable_display",b"enable_display"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enable_display",b"_enable_display","enable_display",b"enable_display"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_display",b"_enable_display"]) -> typing.Optional[typing_extensions.Literal["enable_display"]]: ...
global___DisplayDevice = DisplayDevice

class DistributionPolicy(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _TargetShape:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TargetShapeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TargetShape.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TARGET_SHAPE: DistributionPolicy.TargetShape.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ANY: DistributionPolicy.TargetShape.ValueType = ...  # 64972
        """The group picks zones for creating VM instances to fulfill the requested number of VMs within present resource constraints and to maximize utilization of unused zonal reservations. Recommended for batch workloads that do not require high availability."""

        BALANCED: DistributionPolicy.TargetShape.ValueType = ...  # 468409608
        """The group prioritizes acquisition of resources, scheduling VMs in zones where resources are available while distributing VMs as evenly as possible across selected zones to minimize the impact of zonal failure. Recommended for highly available serving workloads."""

        EVEN: DistributionPolicy.TargetShape.ValueType = ...  # 2140442
        """The group schedules VM instance creation and deletion to achieve and maintain an even number of managed instances across the selected zones. The distribution is even when the number of managed instances does not differ by more than 1 between any two zones. Recommended for highly available serving workloads."""

    class TargetShape(_TargetShape, metaclass=_TargetShapeEnumTypeWrapper):
        """The distribution shape to which the group converges either proactively or on resize events (depending on the value set in updatePolicy.instanceRedistributionType)."""
        pass

    UNDEFINED_TARGET_SHAPE: DistributionPolicy.TargetShape.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ANY: DistributionPolicy.TargetShape.ValueType = ...  # 64972
    """The group picks zones for creating VM instances to fulfill the requested number of VMs within present resource constraints and to maximize utilization of unused zonal reservations. Recommended for batch workloads that do not require high availability."""

    BALANCED: DistributionPolicy.TargetShape.ValueType = ...  # 468409608
    """The group prioritizes acquisition of resources, scheduling VMs in zones where resources are available while distributing VMs as evenly as possible across selected zones to minimize the impact of zonal failure. Recommended for highly available serving workloads."""

    EVEN: DistributionPolicy.TargetShape.ValueType = ...  # 2140442
    """The group schedules VM instance creation and deletion to achieve and maintain an even number of managed instances across the selected zones. The distribution is even when the number of managed instances does not differ by more than 1 between any two zones. Recommended for highly available serving workloads."""


    TARGET_SHAPE_FIELD_NUMBER: builtins.int
    ZONES_FIELD_NUMBER: builtins.int
    target_shape: typing.Text = ...
    """The distribution shape to which the group converges either proactively or on resize events (depending on the value set in updatePolicy.instanceRedistributionType).
    Check the TargetShape enum for the list of possible values.
    """

    @property
    def zones(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DistributionPolicyZoneConfiguration]:
        """Zones where the regional managed instance group will create and manage its instances."""
        pass
    def __init__(self,
        *,
        target_shape : typing.Optional[typing.Text] = ...,
        zones : typing.Optional[typing.Iterable[global___DistributionPolicyZoneConfiguration]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_target_shape",b"_target_shape","target_shape",b"target_shape"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_target_shape",b"_target_shape","target_shape",b"target_shape","zones",b"zones"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_shape",b"_target_shape"]) -> typing.Optional[typing_extensions.Literal["target_shape"]]: ...
global___DistributionPolicy = DistributionPolicy

class DistributionPolicyZoneConfiguration(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ZONE_FIELD_NUMBER: builtins.int
    zone: typing.Text = ...
    """The URL of the zone. The zone must exist in the region where the managed instance group is located."""

    def __init__(self,
        *,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_zone",b"_zone","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_zone",b"_zone","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___DistributionPolicyZoneConfiguration = DistributionPolicyZoneConfiguration

class Duration(google.protobuf.message.Message):
    """A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". Range is approximately 10,000 years."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NANOS_FIELD_NUMBER: builtins.int
    SECONDS_FIELD_NUMBER: builtins.int
    nanos: builtins.int = ...
    """Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive."""

    seconds: builtins.int = ...
    """Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"""

    def __init__(self,
        *,
        nanos : typing.Optional[builtins.int] = ...,
        seconds : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_nanos",b"_nanos","_seconds",b"_seconds","nanos",b"nanos","seconds",b"seconds"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_nanos",b"_nanos","_seconds",b"_seconds","nanos",b"nanos","seconds",b"seconds"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_nanos",b"_nanos"]) -> typing.Optional[typing_extensions.Literal["nanos"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_seconds",b"_seconds"]) -> typing.Optional[typing_extensions.Literal["seconds"]]: ...
global___Duration = Duration

class EnableXpnHostProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.EnableXpnHost. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___EnableXpnHostProjectRequest = EnableXpnHostProjectRequest

class EnableXpnResourceProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.EnableXpnResource. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PROJECTS_ENABLE_XPN_RESOURCE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    @property
    def projects_enable_xpn_resource_request_resource(self) -> global___ProjectsEnableXpnResourceRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        projects_enable_xpn_resource_request_resource : typing.Optional[global___ProjectsEnableXpnResourceRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","projects_enable_xpn_resource_request_resource",b"projects_enable_xpn_resource_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","projects_enable_xpn_resource_request_resource",b"projects_enable_xpn_resource_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___EnableXpnResourceProjectRequest = EnableXpnResourceProjectRequest

class Error(google.protobuf.message.Message):
    """[Output Only] If errors are generated during processing of the operation, this field will be populated."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Errors]:
        """[Output Only] The array of errors encountered while processing this operation."""
        pass
    def __init__(self,
        *,
        errors : typing.Optional[typing.Iterable[global___Errors]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors",b"errors"]) -> None: ...
global___Error = Error

class Errors(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODE_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    code: typing.Text = ...
    """[Output Only] The error type identifier for this error."""

    location: typing.Text = ...
    """[Output Only] Indicates the field in the request that caused the error. This property is optional."""

    message: typing.Text = ...
    """[Output Only] An optional, human-readable error message."""

    def __init__(self,
        *,
        code : typing.Optional[typing.Text] = ...,
        location : typing.Optional[typing.Text] = ...,
        message : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_code",b"_code","_location",b"_location","_message",b"_message","code",b"code","location",b"location","message",b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_code",b"_code","_location",b"_location","_message",b"_message","code",b"code","location",b"location","message",b"message"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_code",b"_code"]) -> typing.Optional[typing_extensions.Literal["code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_location",b"_location"]) -> typing.Optional[typing_extensions.Literal["location"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message",b"_message"]) -> typing.Optional[typing_extensions.Literal["message"]]: ...
global___Errors = Errors

class ExchangedPeeringRoute(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: ExchangedPeeringRoute.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DYNAMIC_PEERING_ROUTE: ExchangedPeeringRoute.Type.ValueType = ...  # 469794858
        """For routes exported from local network."""

        STATIC_PEERING_ROUTE: ExchangedPeeringRoute.Type.ValueType = ...  # 473407545
        """The peering route."""

        SUBNET_PEERING_ROUTE: ExchangedPeeringRoute.Type.ValueType = ...  # 465782504
        """The peering route corresponding to subnetwork range."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The type of the peering route."""
        pass

    UNDEFINED_TYPE: ExchangedPeeringRoute.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DYNAMIC_PEERING_ROUTE: ExchangedPeeringRoute.Type.ValueType = ...  # 469794858
    """For routes exported from local network."""

    STATIC_PEERING_ROUTE: ExchangedPeeringRoute.Type.ValueType = ...  # 473407545
    """The peering route."""

    SUBNET_PEERING_ROUTE: ExchangedPeeringRoute.Type.ValueType = ...  # 465782504
    """The peering route corresponding to subnetwork range."""


    DEST_RANGE_FIELD_NUMBER: builtins.int
    IMPORTED_FIELD_NUMBER: builtins.int
    NEXT_HOP_REGION_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    dest_range: typing.Text = ...
    """The destination range of the route."""

    imported: builtins.bool = ...
    """True if the peering route has been imported from a peer. The actual import happens if the field networkPeering.importCustomRoutes is true for this network, and networkPeering.exportCustomRoutes is true for the peer network, and the import does not result in a route conflict."""

    next_hop_region: typing.Text = ...
    """The region of peering route next hop, only applies to dynamic routes."""

    priority: builtins.int = ...
    """The priority of the peering route."""

    type: typing.Text = ...
    """The type of the peering route.
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        dest_range : typing.Optional[typing.Text] = ...,
        imported : typing.Optional[builtins.bool] = ...,
        next_hop_region : typing.Optional[typing.Text] = ...,
        priority : typing.Optional[builtins.int] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_dest_range",b"_dest_range","_imported",b"_imported","_next_hop_region",b"_next_hop_region","_priority",b"_priority","_type",b"_type","dest_range",b"dest_range","imported",b"imported","next_hop_region",b"next_hop_region","priority",b"priority","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_dest_range",b"_dest_range","_imported",b"_imported","_next_hop_region",b"_next_hop_region","_priority",b"_priority","_type",b"_type","dest_range",b"dest_range","imported",b"imported","next_hop_region",b"next_hop_region","priority",b"priority","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_dest_range",b"_dest_range"]) -> typing.Optional[typing_extensions.Literal["dest_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_imported",b"_imported"]) -> typing.Optional[typing_extensions.Literal["imported"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_hop_region",b"_next_hop_region"]) -> typing.Optional[typing_extensions.Literal["next_hop_region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___ExchangedPeeringRoute = ExchangedPeeringRoute

class ExchangedPeeringRoutesList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExchangedPeeringRoute]:
        """A list of ExchangedPeeringRoute resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#exchangedPeeringRoutesList for exchanged peering routes lists."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___ExchangedPeeringRoute]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ExchangedPeeringRoutesList = ExchangedPeeringRoutesList

class ExpandIpCidrRangeSubnetworkRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.ExpandIpCidrRange. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    SUBNETWORKS_EXPAND_IP_CIDR_RANGE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    subnetwork: typing.Text = ...
    """Name of the Subnetwork resource to update."""

    @property
    def subnetworks_expand_ip_cidr_range_request_resource(self) -> global___SubnetworksExpandIpCidrRangeRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        subnetwork : typing.Text = ...,
        subnetworks_expand_ip_cidr_range_request_resource : typing.Optional[global___SubnetworksExpandIpCidrRangeRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","subnetworks_expand_ip_cidr_range_request_resource",b"subnetworks_expand_ip_cidr_range_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","subnetwork",b"subnetwork","subnetworks_expand_ip_cidr_range_request_resource",b"subnetworks_expand_ip_cidr_range_request_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___ExpandIpCidrRangeSubnetworkRequest = ExpandIpCidrRangeSubnetworkRequest

class Expr(google.protobuf.message.Message):
    """Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    description: typing.Text = ...
    """Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."""

    expression: typing.Text = ...
    """Textual representation of an expression in Common Expression Language syntax."""

    location: typing.Text = ...
    """Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."""

    title: typing.Text = ...
    """Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."""

    def __init__(self,
        *,
        description : typing.Optional[typing.Text] = ...,
        expression : typing.Optional[typing.Text] = ...,
        location : typing.Optional[typing.Text] = ...,
        title : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_expression",b"_expression","_location",b"_location","_title",b"_title","description",b"description","expression",b"expression","location",b"location","title",b"title"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_expression",b"_expression","_location",b"_location","_title",b"_title","description",b"description","expression",b"expression","location",b"location","title",b"title"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_expression",b"_expression"]) -> typing.Optional[typing_extensions.Literal["expression"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_location",b"_location"]) -> typing.Optional[typing_extensions.Literal["location"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_title",b"_title"]) -> typing.Optional[typing_extensions.Literal["title"]]: ...
global___Expr = Expr

class ExternalVpnGateway(google.protobuf.message.Message):
    """Represents an external VPN gateway. External VPN gateway is the on-premises VPN gateway(s) or another cloud provider's VPN gateway that connects to your Google Cloud VPN gateway. To create a highly available VPN from Google Cloud Platform to your VPN gateway or another cloud provider's VPN gateway, you must create a external VPN gateway resource with information about the other gateway. For more information about using external VPN gateways, see Creating an HA VPN gateway and tunnel pair to a peer VPN."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RedundancyType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RedundancyTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RedundancyType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_REDUNDANCY_TYPE: ExternalVpnGateway.RedundancyType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        FOUR_IPS_REDUNDANCY: ExternalVpnGateway.RedundancyType.ValueType = ...  # 520087913
        """The external VPN gateway has four public IP addresses; at the time of writing this API, the AWS virtual private gateway is an example which has four public IP addresses for high availability connections; there should be two VPN connections in the AWS virtual private gateway , each AWS VPN connection has two public IP addresses; please make sure to put two public IP addresses from one AWS VPN connection into interfaces 0 and 1 of this external VPN gateway, and put the other two public IP addresses from another AWS VPN connection into interfaces 2 and 3 of this external VPN gateway. When displaying highly available configuration status for the VPN tunnels connected to FOUR_IPS_REDUNDANCY external VPN gateway, Google will always detect whether interfaces 0 and 1 are connected on one interface of HA Cloud VPN gateway, and detect whether interfaces 2 and 3 are connected to another interface of the HA Cloud VPN gateway."""

        SINGLE_IP_INTERNALLY_REDUNDANT: ExternalVpnGateway.RedundancyType.ValueType = ...  # 133914873
        """The external VPN gateway has only one public IP address which internally provide redundancy or failover."""

        TWO_IPS_REDUNDANCY: ExternalVpnGateway.RedundancyType.ValueType = ...  # 367049635
        """The external VPN gateway has two public IP addresses which are redundant with each other, the following two types of setup on your on-premises side would have this type of redundancy: (1) Two separate on-premises gateways, each with one public IP address, the two on-premises gateways are redundant with each other. (2) A single on-premise gateway with two public IP addresses that are redundant with eatch other."""

    class RedundancyType(_RedundancyType, metaclass=_RedundancyTypeEnumTypeWrapper):
        """Indicates the user-supplied redundancy type of this external VPN gateway."""
        pass

    UNDEFINED_REDUNDANCY_TYPE: ExternalVpnGateway.RedundancyType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    FOUR_IPS_REDUNDANCY: ExternalVpnGateway.RedundancyType.ValueType = ...  # 520087913
    """The external VPN gateway has four public IP addresses; at the time of writing this API, the AWS virtual private gateway is an example which has four public IP addresses for high availability connections; there should be two VPN connections in the AWS virtual private gateway , each AWS VPN connection has two public IP addresses; please make sure to put two public IP addresses from one AWS VPN connection into interfaces 0 and 1 of this external VPN gateway, and put the other two public IP addresses from another AWS VPN connection into interfaces 2 and 3 of this external VPN gateway. When displaying highly available configuration status for the VPN tunnels connected to FOUR_IPS_REDUNDANCY external VPN gateway, Google will always detect whether interfaces 0 and 1 are connected on one interface of HA Cloud VPN gateway, and detect whether interfaces 2 and 3 are connected to another interface of the HA Cloud VPN gateway."""

    SINGLE_IP_INTERNALLY_REDUNDANT: ExternalVpnGateway.RedundancyType.ValueType = ...  # 133914873
    """The external VPN gateway has only one public IP address which internally provide redundancy or failover."""

    TWO_IPS_REDUNDANCY: ExternalVpnGateway.RedundancyType.ValueType = ...  # 367049635
    """The external VPN gateway has two public IP addresses which are redundant with each other, the following two types of setup on your on-premises side would have this type of redundancy: (1) Two separate on-premises gateways, each with one public IP address, the two on-premises gateways are redundant with each other. (2) A single on-premise gateway with two public IP addresses that are redundant with eatch other."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INTERFACES_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REDUNDANCY_TYPE_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def interfaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExternalVpnGatewayInterface]:
        """A list of interfaces for this external VPN gateway. If your peer-side gateway is an on-premises gateway and non-AWS cloud providers' gateway, at most two interfaces can be provided for an external VPN gateway. If your peer side is an AWS virtual private gateway, four interfaces should be provided for an external VPN gateway."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#externalVpnGateway for externalVpnGateways."""

    label_fingerprint: typing.Text = ...
    """A fingerprint for the labels being applied to this ExternalVpnGateway, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an ExternalVpnGateway."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty."""
        pass
    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    redundancy_type: typing.Text = ...
    """Indicates the user-supplied redundancy type of this external VPN gateway.
    Check the RedundancyType enum for the list of possible values.
    """

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        interfaces : typing.Optional[typing.Iterable[global___ExternalVpnGatewayInterface]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        name : typing.Optional[typing.Text] = ...,
        redundancy_type : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_name",b"_name","_redundancy_type",b"_redundancy_type","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","label_fingerprint",b"label_fingerprint","name",b"name","redundancy_type",b"redundancy_type","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_name",b"_name","_redundancy_type",b"_redundancy_type","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","interfaces",b"interfaces","kind",b"kind","label_fingerprint",b"label_fingerprint","labels",b"labels","name",b"name","redundancy_type",b"redundancy_type","self_link",b"self_link"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_redundancy_type",b"_redundancy_type"]) -> typing.Optional[typing_extensions.Literal["redundancy_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___ExternalVpnGateway = ExternalVpnGateway

class ExternalVpnGatewayInterface(google.protobuf.message.Message):
    """The interface for the external VPN gateway."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    id: builtins.int = ...
    """The numeric ID of this interface. The allowed input values for this id for different redundancy types of external VPN gateway: - SINGLE_IP_INTERNALLY_REDUNDANT - 0 - TWO_IPS_REDUNDANCY - 0, 1 - FOUR_IPS_REDUNDANCY - 0, 1, 2, 3"""

    ip_address: typing.Text = ...
    """IP address of the interface in the external VPN gateway. Only IPv4 is supported. This IP address can be either from your on-premise gateway or another Cloud provider's VPN gateway, it cannot be an IP address from Google Compute Engine."""

    def __init__(self,
        *,
        id : typing.Optional[builtins.int] = ...,
        ip_address : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_ip_address",b"_ip_address","id",b"id","ip_address",b"ip_address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_ip_address",b"_ip_address","id",b"id","ip_address",b"ip_address"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_address",b"_ip_address"]) -> typing.Optional[typing_extensions.Literal["ip_address"]]: ...
global___ExternalVpnGatewayInterface = ExternalVpnGatewayInterface

class ExternalVpnGatewayList(google.protobuf.message.Message):
    """Response to the list request, and contains a list of externalVpnGateways."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    etag: typing.Text = ...
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExternalVpnGateway]:
        """A list of ExternalVpnGateway resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#externalVpnGatewayList for lists of externalVpnGateways."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        etag : typing.Optional[typing.Text] = ...,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___ExternalVpnGateway]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","etag",b"etag","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","etag",b"etag","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_etag",b"_etag"]) -> typing.Optional[typing_extensions.Literal["etag"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ExternalVpnGatewayList = ExternalVpnGatewayList

class FileContentBuffer(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _FileType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FileTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FileType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_FILE_TYPE: FileContentBuffer.FileType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        BIN: FileContentBuffer.FileType.ValueType = ...  # 65767
        UNDEFINED: FileContentBuffer.FileType.ValueType = ...  # 137851184
        X509: FileContentBuffer.FileType.ValueType = ...  # 2674086
    class FileType(_FileType, metaclass=_FileTypeEnumTypeWrapper):
        """The file type of source file."""
        pass

    UNDEFINED_FILE_TYPE: FileContentBuffer.FileType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    BIN: FileContentBuffer.FileType.ValueType = ...  # 65767
    UNDEFINED: FileContentBuffer.FileType.ValueType = ...  # 137851184
    X509: FileContentBuffer.FileType.ValueType = ...  # 2674086

    CONTENT_FIELD_NUMBER: builtins.int
    FILE_TYPE_FIELD_NUMBER: builtins.int
    content: typing.Text = ...
    """The raw content in the secure keys file."""

    file_type: typing.Text = ...
    """The file type of source file.
    Check the FileType enum for the list of possible values.
    """

    def __init__(self,
        *,
        content : typing.Optional[typing.Text] = ...,
        file_type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_content",b"_content","_file_type",b"_file_type","content",b"content","file_type",b"file_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_content",b"_content","_file_type",b"_file_type","content",b"content","file_type",b"file_type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_content",b"_content"]) -> typing.Optional[typing_extensions.Literal["content"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_file_type",b"_file_type"]) -> typing.Optional[typing_extensions.Literal["file_type"]]: ...
global___FileContentBuffer = FileContentBuffer

class Firewall(google.protobuf.message.Message):
    """Represents a Firewall Rule resource. Firewall rules allow or deny ingress traffic to, and egress traffic from your instances. For more information, read Firewall rules."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Direction:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DirectionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Direction.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_DIRECTION: Firewall.Direction.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        EGRESS: Firewall.Direction.ValueType = ...  # 432880501
        """Indicates that firewall should apply to outgoing traffic."""

        INGRESS: Firewall.Direction.ValueType = ...  # 516931221
        """Indicates that firewall should apply to incoming traffic."""

    class Direction(_Direction, metaclass=_DirectionEnumTypeWrapper):
        """Direction of traffic to which this firewall applies, either `INGRESS` or `EGRESS`. The default is `INGRESS`. For `INGRESS` traffic, you cannot specify the destinationRanges field, and for `EGRESS` traffic, you cannot specify the sourceRanges or sourceTags fields."""
        pass

    UNDEFINED_DIRECTION: Firewall.Direction.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    EGRESS: Firewall.Direction.ValueType = ...  # 432880501
    """Indicates that firewall should apply to outgoing traffic."""

    INGRESS: Firewall.Direction.ValueType = ...  # 516931221
    """Indicates that firewall should apply to incoming traffic."""


    ALLOWED_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DENIED_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DESTINATION_RANGES_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LOG_CONFIG_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SOURCE_RANGES_FIELD_NUMBER: builtins.int
    SOURCE_SERVICE_ACCOUNTS_FIELD_NUMBER: builtins.int
    SOURCE_TAGS_FIELD_NUMBER: builtins.int
    TARGET_SERVICE_ACCOUNTS_FIELD_NUMBER: builtins.int
    TARGET_TAGS_FIELD_NUMBER: builtins.int
    @property
    def allowed(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Allowed]:
        """The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def denied(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Denied]:
        """The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a denied connection."""
        pass
    description: typing.Text = ...
    """An optional description of this resource. Provide this field when you create the resource."""

    @property
    def destination_ranges(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If destination ranges are specified, the firewall rule applies only to traffic that has destination IP address in these ranges. These ranges must be expressed in CIDR format. Both IPv4 and IPv6 are supported."""
        pass
    direction: typing.Text = ...
    """Direction of traffic to which this firewall applies, either `INGRESS` or `EGRESS`. The default is `INGRESS`. For `INGRESS` traffic, you cannot specify the destinationRanges field, and for `EGRESS` traffic, you cannot specify the sourceRanges or sourceTags fields.
    Check the Direction enum for the list of possible values.
    """

    disabled: builtins.bool = ...
    """Denotes whether the firewall rule is disabled. When set to true, the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall rule will be enabled."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#firewall for firewall rules."""

    @property
    def log_config(self) -> global___FirewallLogConfig:
        """This field denotes the logging options for a particular firewall rule. If logging is enabled, logs will be exported to Cloud Logging."""
        pass
    name: typing.Text = ...
    """Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit."""

    network: typing.Text = ...
    """URL of the network resource for this firewall rule. If not specified when creating a firewall rule, the default network is used: global/networks/default If you choose to specify this field, you can specify the network as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network - projects/myproject/global/networks/my-network - global/networks/default"""

    priority: builtins.int = ...
    """Priority for this rule. This is an integer between `0` and `65535`, both inclusive. The default value is `1000`. Relative priorities determine which rule takes effect if multiple rules apply. Lower values indicate higher priority. For example, a rule with priority `0` has higher precedence than a rule with priority `1`. DENY rules take precedence over ALLOW rules if they have equal priority. Note that VPC networks have implied rules with a priority of `65535`. To avoid conflicts with the implied rules, use a priority number less than `65535`."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def source_ranges(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If source ranges are specified, the firewall rule applies only to traffic that has a source IP address in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both fields are set, the rule applies to traffic that has a source IP address within sourceRanges OR a source IP from a resource with a matching tag listed in the sourceTags field. The connection does not need to match both fields for the rule to apply. Both IPv4 and IPv6 are supported."""
        pass
    @property
    def source_service_accounts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If source service accounts are specified, the firewall rules apply only to traffic originating from an instance with a service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same time as sourceServiceAccounts. If both are set, the firewall applies to traffic that has a source IP address within the sourceRanges OR a source IP that belongs to an instance with service account listed in sourceServiceAccount. The connection does not need to match both fields for the firewall to apply. sourceServiceAccounts cannot be used at the same time as sourceTags or targetTags."""
        pass
    @property
    def source_tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If source tags are specified, the firewall rule applies only to traffic with source IPs that match the primary network interfaces of VM instances that have the tag and are in the same VPC network. Source tags cannot be used to control traffic to an instance's external IP address, it only applies to traffic between instances in the same virtual network. Because tags are associated with instances, not IP addresses. One or both of sourceRanges and sourceTags may be set. If both fields are set, the firewall applies to traffic that has a source IP address within sourceRanges OR a source IP from a resource with a matching tag listed in the sourceTags field. The connection does not need to match both fields for the firewall to apply."""
        pass
    @property
    def target_service_accounts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of service accounts indicating sets of instances located in the network that may make network connections as specified in allowed[]. targetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network."""
        pass
    @property
    def target_tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of tags that controls which instances the firewall rule applies to. If targetTags are specified, then the firewall rule applies only to instances in the VPC network that have one of those tags. If no targetTags are specified, the firewall rule applies to all instances on the specified network."""
        pass
    def __init__(self,
        *,
        allowed : typing.Optional[typing.Iterable[global___Allowed]] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        denied : typing.Optional[typing.Iterable[global___Denied]] = ...,
        description : typing.Optional[typing.Text] = ...,
        destination_ranges : typing.Optional[typing.Iterable[typing.Text]] = ...,
        direction : typing.Optional[typing.Text] = ...,
        disabled : typing.Optional[builtins.bool] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        log_config : typing.Optional[global___FirewallLogConfig] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        priority : typing.Optional[builtins.int] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        source_ranges : typing.Optional[typing.Iterable[typing.Text]] = ...,
        source_service_accounts : typing.Optional[typing.Iterable[typing.Text]] = ...,
        source_tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        target_service_accounts : typing.Optional[typing.Iterable[typing.Text]] = ...,
        target_tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_direction",b"_direction","_disabled",b"_disabled","_id",b"_id","_kind",b"_kind","_log_config",b"_log_config","_name",b"_name","_network",b"_network","_priority",b"_priority","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","direction",b"direction","disabled",b"disabled","id",b"id","kind",b"kind","log_config",b"log_config","name",b"name","network",b"network","priority",b"priority","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_direction",b"_direction","_disabled",b"_disabled","_id",b"_id","_kind",b"_kind","_log_config",b"_log_config","_name",b"_name","_network",b"_network","_priority",b"_priority","_self_link",b"_self_link","allowed",b"allowed","creation_timestamp",b"creation_timestamp","denied",b"denied","description",b"description","destination_ranges",b"destination_ranges","direction",b"direction","disabled",b"disabled","id",b"id","kind",b"kind","log_config",b"log_config","name",b"name","network",b"network","priority",b"priority","self_link",b"self_link","source_ranges",b"source_ranges","source_service_accounts",b"source_service_accounts","source_tags",b"source_tags","target_service_accounts",b"target_service_accounts","target_tags",b"target_tags"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_direction",b"_direction"]) -> typing.Optional[typing_extensions.Literal["direction"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disabled",b"_disabled"]) -> typing.Optional[typing_extensions.Literal["disabled"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_log_config",b"_log_config"]) -> typing.Optional[typing_extensions.Literal["log_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___Firewall = Firewall

class FirewallList(google.protobuf.message.Message):
    """Contains a list of firewalls."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Firewall]:
        """A list of Firewall resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#firewallList for lists of firewalls."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Firewall]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___FirewallList = FirewallList

class FirewallLogConfig(google.protobuf.message.Message):
    """The available logging options for a firewall rule."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Metadata:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MetadataEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Metadata.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_METADATA: FirewallLogConfig.Metadata.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        EXCLUDE_ALL_METADATA: FirewallLogConfig.Metadata.ValueType = ...  # 334519954
        INCLUDE_ALL_METADATA: FirewallLogConfig.Metadata.ValueType = ...  # 164619908
    class Metadata(_Metadata, metaclass=_MetadataEnumTypeWrapper):
        """This field can only be specified for a particular firewall rule if logging is enabled for that rule. This field denotes whether to include or exclude metadata for firewall logs."""
        pass

    UNDEFINED_METADATA: FirewallLogConfig.Metadata.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    EXCLUDE_ALL_METADATA: FirewallLogConfig.Metadata.ValueType = ...  # 334519954
    INCLUDE_ALL_METADATA: FirewallLogConfig.Metadata.ValueType = ...  # 164619908

    ENABLE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    enable: builtins.bool = ...
    """This field denotes whether to enable logging for a particular firewall rule."""

    metadata: typing.Text = ...
    """This field can only be specified for a particular firewall rule if logging is enabled for that rule. This field denotes whether to include or exclude metadata for firewall logs.
    Check the Metadata enum for the list of possible values.
    """

    def __init__(self,
        *,
        enable : typing.Optional[builtins.bool] = ...,
        metadata : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enable",b"_enable","_metadata",b"_metadata","enable",b"enable","metadata",b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enable",b"_enable","_metadata",b"_metadata","enable",b"enable","metadata",b"metadata"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable",b"_enable"]) -> typing.Optional[typing_extensions.Literal["enable"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_metadata",b"_metadata"]) -> typing.Optional[typing_extensions.Literal["metadata"]]: ...
global___FirewallLogConfig = FirewallLogConfig

class FirewallPoliciesListAssociationsResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ASSOCIATIONS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    @property
    def associations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FirewallPolicyAssociation]:
        """A list of associations."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of firewallPolicy associations. Always compute#FirewallPoliciesListAssociations for lists of firewallPolicy associations."""

    def __init__(self,
        *,
        associations : typing.Optional[typing.Iterable[global___FirewallPolicyAssociation]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_kind",b"_kind","kind",b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_kind",b"_kind","associations",b"associations","kind",b"kind"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
global___FirewallPoliciesListAssociationsResponse = FirewallPoliciesListAssociationsResponse

class FirewallPolicy(google.protobuf.message.Message):
    """Represents a Firewall Policy resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ASSOCIATIONS_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    RULE_TUPLE_COUNT_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SELF_LINK_WITH_ID_FIELD_NUMBER: builtins.int
    SHORT_NAME_FIELD_NUMBER: builtins.int
    @property
    def associations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FirewallPolicyAssociation]:
        """A list of associations that belong to this firewall policy."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    display_name: typing.Text = ...
    """Deprecated, please use short name instead. User-provided name of the Organization firewall policy. The name should be unique in the organization in which the firewall policy is created. This name must be set on creation and cannot be changed. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    fingerprint: typing.Text = ...
    """Specifies a fingerprint for this resource, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make get() request to the firewall policy."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output only] Type of the resource. Always compute#firewallPolicyfor firewall policies"""

    name: typing.Text = ...
    """[Output Only] Name of the resource. It is a numeric ID allocated by GCP which uniquely identifies the Firewall Policy."""

    parent: typing.Text = ...
    """[Output Only] The parent of the firewall policy."""

    rule_tuple_count: builtins.int = ...
    """[Output Only] Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples."""

    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FirewallPolicyRule]:
        """A list of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a firewall policy, a default rule with action "allow" will be added."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    self_link_with_id: typing.Text = ...
    """[Output Only] Server-defined URL for this resource with the resource id."""

    short_name: typing.Text = ...
    """User-provided name of the Organization firewall plicy. The name should be unique in the organization in which the firewall policy is created. This name must be set on creation and cannot be changed. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    def __init__(self,
        *,
        associations : typing.Optional[typing.Iterable[global___FirewallPolicyAssociation]] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        display_name : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        parent : typing.Optional[typing.Text] = ...,
        rule_tuple_count : typing.Optional[builtins.int] = ...,
        rules : typing.Optional[typing.Iterable[global___FirewallPolicyRule]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        self_link_with_id : typing.Optional[typing.Text] = ...,
        short_name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_display_name",b"_display_name","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_parent",b"_parent","_rule_tuple_count",b"_rule_tuple_count","_self_link",b"_self_link","_self_link_with_id",b"_self_link_with_id","_short_name",b"_short_name","creation_timestamp",b"creation_timestamp","description",b"description","display_name",b"display_name","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","parent",b"parent","rule_tuple_count",b"rule_tuple_count","self_link",b"self_link","self_link_with_id",b"self_link_with_id","short_name",b"short_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_display_name",b"_display_name","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_parent",b"_parent","_rule_tuple_count",b"_rule_tuple_count","_self_link",b"_self_link","_self_link_with_id",b"_self_link_with_id","_short_name",b"_short_name","associations",b"associations","creation_timestamp",b"creation_timestamp","description",b"description","display_name",b"display_name","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","parent",b"parent","rule_tuple_count",b"rule_tuple_count","rules",b"rules","self_link",b"self_link","self_link_with_id",b"self_link_with_id","short_name",b"short_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_display_name",b"_display_name"]) -> typing.Optional[typing_extensions.Literal["display_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_parent",b"_parent"]) -> typing.Optional[typing_extensions.Literal["parent"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rule_tuple_count",b"_rule_tuple_count"]) -> typing.Optional[typing_extensions.Literal["rule_tuple_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link_with_id",b"_self_link_with_id"]) -> typing.Optional[typing_extensions.Literal["self_link_with_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_short_name",b"_short_name"]) -> typing.Optional[typing_extensions.Literal["short_name"]]: ...
global___FirewallPolicy = FirewallPolicy

class FirewallPolicyAssociation(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ATTACHMENT_TARGET_FIELD_NUMBER: builtins.int
    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    FIREWALL_POLICY_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SHORT_NAME_FIELD_NUMBER: builtins.int
    attachment_target: typing.Text = ...
    """The target that the firewall policy is attached to."""

    display_name: typing.Text = ...
    """[Output Only] Deprecated, please use short name instead. The display name of the firewall policy of the association."""

    firewall_policy_id: typing.Text = ...
    """[Output Only] The firewall policy ID of the association."""

    name: typing.Text = ...
    """The name for an association."""

    short_name: typing.Text = ...
    """[Output Only] The short name of the firewall policy of the association."""

    def __init__(self,
        *,
        attachment_target : typing.Optional[typing.Text] = ...,
        display_name : typing.Optional[typing.Text] = ...,
        firewall_policy_id : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        short_name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_attachment_target",b"_attachment_target","_display_name",b"_display_name","_firewall_policy_id",b"_firewall_policy_id","_name",b"_name","_short_name",b"_short_name","attachment_target",b"attachment_target","display_name",b"display_name","firewall_policy_id",b"firewall_policy_id","name",b"name","short_name",b"short_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_attachment_target",b"_attachment_target","_display_name",b"_display_name","_firewall_policy_id",b"_firewall_policy_id","_name",b"_name","_short_name",b"_short_name","attachment_target",b"attachment_target","display_name",b"display_name","firewall_policy_id",b"firewall_policy_id","name",b"name","short_name",b"short_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_attachment_target",b"_attachment_target"]) -> typing.Optional[typing_extensions.Literal["attachment_target"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_display_name",b"_display_name"]) -> typing.Optional[typing_extensions.Literal["display_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_firewall_policy_id",b"_firewall_policy_id"]) -> typing.Optional[typing_extensions.Literal["firewall_policy_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_short_name",b"_short_name"]) -> typing.Optional[typing_extensions.Literal["short_name"]]: ...
global___FirewallPolicyAssociation = FirewallPolicyAssociation

class FirewallPolicyList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FirewallPolicy]:
        """A list of FirewallPolicy resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#firewallPolicyList for listsof FirewallPolicies"""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___FirewallPolicy]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___FirewallPolicyList = FirewallPolicyList

class FirewallPolicyRule(google.protobuf.message.Message):
    """Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Direction:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DirectionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Direction.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_DIRECTION: FirewallPolicyRule.Direction.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        EGRESS: FirewallPolicyRule.Direction.ValueType = ...  # 432880501
        INGRESS: FirewallPolicyRule.Direction.ValueType = ...  # 516931221
    class Direction(_Direction, metaclass=_DirectionEnumTypeWrapper):
        """The direction in which this rule applies."""
        pass

    UNDEFINED_DIRECTION: FirewallPolicyRule.Direction.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    EGRESS: FirewallPolicyRule.Direction.ValueType = ...  # 432880501
    INGRESS: FirewallPolicyRule.Direction.ValueType = ...  # 516931221

    ACTION_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    DISABLED_FIELD_NUMBER: builtins.int
    ENABLE_LOGGING_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    MATCH_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    RULE_TUPLE_COUNT_FIELD_NUMBER: builtins.int
    TARGET_RESOURCES_FIELD_NUMBER: builtins.int
    TARGET_SERVICE_ACCOUNTS_FIELD_NUMBER: builtins.int
    action: typing.Text = ...
    """The Action to perform when the client connection triggers the rule. Can currently be either "allow" or "deny()" where valid values for status are 403, 404, and 502."""

    description: typing.Text = ...
    """An optional description for this resource."""

    direction: typing.Text = ...
    """The direction in which this rule applies.
    Check the Direction enum for the list of possible values.
    """

    disabled: builtins.bool = ...
    """Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled."""

    enable_logging: builtins.bool = ...
    """Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules."""

    kind: typing.Text = ...
    """[Output only] Type of the resource. Always compute#firewallPolicyRule for firewall policy rules"""

    @property
    def match(self) -> global___FirewallPolicyRuleMatcher:
        """A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced."""
        pass
    priority: builtins.int = ...
    """An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest prority."""

    rule_tuple_count: builtins.int = ...
    """[Output Only] Calculation of the complexity of a single firewall policy rule."""

    @property
    def target_resources(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule."""
        pass
    @property
    def target_service_accounts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of service accounts indicating the sets of instances that are applied with this rule."""
        pass
    def __init__(self,
        *,
        action : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        direction : typing.Optional[typing.Text] = ...,
        disabled : typing.Optional[builtins.bool] = ...,
        enable_logging : typing.Optional[builtins.bool] = ...,
        kind : typing.Optional[typing.Text] = ...,
        match : typing.Optional[global___FirewallPolicyRuleMatcher] = ...,
        priority : typing.Optional[builtins.int] = ...,
        rule_tuple_count : typing.Optional[builtins.int] = ...,
        target_resources : typing.Optional[typing.Iterable[typing.Text]] = ...,
        target_service_accounts : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_action",b"_action","_description",b"_description","_direction",b"_direction","_disabled",b"_disabled","_enable_logging",b"_enable_logging","_kind",b"_kind","_match",b"_match","_priority",b"_priority","_rule_tuple_count",b"_rule_tuple_count","action",b"action","description",b"description","direction",b"direction","disabled",b"disabled","enable_logging",b"enable_logging","kind",b"kind","match",b"match","priority",b"priority","rule_tuple_count",b"rule_tuple_count"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_action",b"_action","_description",b"_description","_direction",b"_direction","_disabled",b"_disabled","_enable_logging",b"_enable_logging","_kind",b"_kind","_match",b"_match","_priority",b"_priority","_rule_tuple_count",b"_rule_tuple_count","action",b"action","description",b"description","direction",b"direction","disabled",b"disabled","enable_logging",b"enable_logging","kind",b"kind","match",b"match","priority",b"priority","rule_tuple_count",b"rule_tuple_count","target_resources",b"target_resources","target_service_accounts",b"target_service_accounts"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_action",b"_action"]) -> typing.Optional[typing_extensions.Literal["action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_direction",b"_direction"]) -> typing.Optional[typing_extensions.Literal["direction"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disabled",b"_disabled"]) -> typing.Optional[typing_extensions.Literal["disabled"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_logging",b"_enable_logging"]) -> typing.Optional[typing_extensions.Literal["enable_logging"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_match",b"_match"]) -> typing.Optional[typing_extensions.Literal["match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rule_tuple_count",b"_rule_tuple_count"]) -> typing.Optional[typing_extensions.Literal["rule_tuple_count"]]: ...
global___FirewallPolicyRule = FirewallPolicyRule

class FirewallPolicyRuleMatcher(google.protobuf.message.Message):
    """Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEST_IP_RANGES_FIELD_NUMBER: builtins.int
    LAYER4_CONFIGS_FIELD_NUMBER: builtins.int
    SRC_IP_RANGES_FIELD_NUMBER: builtins.int
    @property
    def dest_ip_ranges(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """CIDR IP address range. Maximum number of destination CIDR IP ranges allowed is 5000."""
        pass
    @property
    def layer4_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FirewallPolicyRuleMatcherLayer4Config]:
        """Pairs of IP protocols and ports that the rule should match."""
        pass
    @property
    def src_ip_ranges(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """CIDR IP address range. Maximum number of source CIDR IP ranges allowed is 5000."""
        pass
    def __init__(self,
        *,
        dest_ip_ranges : typing.Optional[typing.Iterable[typing.Text]] = ...,
        layer4_configs : typing.Optional[typing.Iterable[global___FirewallPolicyRuleMatcherLayer4Config]] = ...,
        src_ip_ranges : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dest_ip_ranges",b"dest_ip_ranges","layer4_configs",b"layer4_configs","src_ip_ranges",b"src_ip_ranges"]) -> None: ...
global___FirewallPolicyRuleMatcher = FirewallPolicyRuleMatcher

class FirewallPolicyRuleMatcherLayer4Config(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IP_PROTOCOL_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    ip_protocol: typing.Text = ...
    """The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number."""

    @property
    def ports(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"]."""
        pass
    def __init__(self,
        *,
        ip_protocol : typing.Optional[typing.Text] = ...,
        ports : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ip_protocol",b"_ip_protocol","ip_protocol",b"ip_protocol"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ip_protocol",b"_ip_protocol","ip_protocol",b"ip_protocol","ports",b"ports"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_protocol",b"_ip_protocol"]) -> typing.Optional[typing_extensions.Literal["ip_protocol"]]: ...
global___FirewallPolicyRuleMatcherLayer4Config = FirewallPolicyRuleMatcherLayer4Config

class FixedOrPercent(google.protobuf.message.Message):
    """Encapsulates numeric value that can be either absolute or relative."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CALCULATED_FIELD_NUMBER: builtins.int
    FIXED_FIELD_NUMBER: builtins.int
    PERCENT_FIELD_NUMBER: builtins.int
    calculated: builtins.int = ...
    """[Output Only] Absolute value of VM instances calculated based on the specific mode. - If the value is fixed, then the calculated value is equal to the fixed value. - If the value is a percent, then the calculated value is percent/100 * targetSize. For example, the calculated value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded."""

    fixed: builtins.int = ...
    """Specifies a fixed number of VM instances. This must be a positive integer."""

    percent: builtins.int = ...
    """Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify 80 for 80%."""

    def __init__(self,
        *,
        calculated : typing.Optional[builtins.int] = ...,
        fixed : typing.Optional[builtins.int] = ...,
        percent : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_calculated",b"_calculated","_fixed",b"_fixed","_percent",b"_percent","calculated",b"calculated","fixed",b"fixed","percent",b"percent"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_calculated",b"_calculated","_fixed",b"_fixed","_percent",b"_percent","calculated",b"calculated","fixed",b"fixed","percent",b"percent"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_calculated",b"_calculated"]) -> typing.Optional[typing_extensions.Literal["calculated"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fixed",b"_fixed"]) -> typing.Optional[typing_extensions.Literal["fixed"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_percent",b"_percent"]) -> typing.Optional[typing_extensions.Literal["percent"]]: ...
global___FixedOrPercent = FixedOrPercent

class ForwardingRule(google.protobuf.message.Message):
    """Represents a Forwarding Rule resource. Forwarding rule resources in Google Cloud can be either regional or global in scope: * [Global](https://cloud.google.com/compute/docs/reference/rest/v1/globalForwardingRules) * [Regional](https://cloud.google.com/compute/docs/reference/rest/v1/forwardingRules) A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud Platform load balancer. Forwarding rules can also reference target instances and Cloud VPN Classic gateways (targetVpnGateway). For more information, read Forwarding rule concepts and Using protocol forwarding."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _IPProtocolEnum:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _IPProtocolEnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IPProtocolEnum.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_I_P_PROTOCOL_ENUM: ForwardingRule.IPProtocolEnum.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        AH: ForwardingRule.IPProtocolEnum.ValueType = ...  # 2087
        ESP: ForwardingRule.IPProtocolEnum.ValueType = ...  # 68962
        ICMP: ForwardingRule.IPProtocolEnum.ValueType = ...  # 2241597
        SCTP: ForwardingRule.IPProtocolEnum.ValueType = ...  # 2539724
        TCP: ForwardingRule.IPProtocolEnum.ValueType = ...  # 82881
        UDP: ForwardingRule.IPProtocolEnum.ValueType = ...  # 83873
    class IPProtocolEnum(_IPProtocolEnum, metaclass=_IPProtocolEnumEnumTypeWrapper):
        """The IP protocol to which this rule applies. For protocol forwarding, valid options are TCP, UDP, ESP, AH, SCTP, ICMP and L3_DEFAULT. The valid IP protocols are different for different load balancing products as described in [Load balancing features](https://cloud.google.com/load-balancing/docs/features#protocols_from_the_load_balancer_to_the_backends)."""
        pass

    UNDEFINED_I_P_PROTOCOL_ENUM: ForwardingRule.IPProtocolEnum.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    AH: ForwardingRule.IPProtocolEnum.ValueType = ...  # 2087
    ESP: ForwardingRule.IPProtocolEnum.ValueType = ...  # 68962
    ICMP: ForwardingRule.IPProtocolEnum.ValueType = ...  # 2241597
    SCTP: ForwardingRule.IPProtocolEnum.ValueType = ...  # 2539724
    TCP: ForwardingRule.IPProtocolEnum.ValueType = ...  # 82881
    UDP: ForwardingRule.IPProtocolEnum.ValueType = ...  # 83873

    class _IpVersion:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _IpVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IpVersion.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_IP_VERSION: ForwardingRule.IpVersion.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        IPV4: ForwardingRule.IpVersion.ValueType = ...  # 2254341
        IPV6: ForwardingRule.IpVersion.ValueType = ...  # 2254343
        UNSPECIFIED_VERSION: ForwardingRule.IpVersion.ValueType = ...  # 21850000
    class IpVersion(_IpVersion, metaclass=_IpVersionEnumTypeWrapper):
        """The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for an external global forwarding rule."""
        pass

    UNDEFINED_IP_VERSION: ForwardingRule.IpVersion.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    IPV4: ForwardingRule.IpVersion.ValueType = ...  # 2254341
    IPV6: ForwardingRule.IpVersion.ValueType = ...  # 2254343
    UNSPECIFIED_VERSION: ForwardingRule.IpVersion.ValueType = ...  # 21850000

    class _LoadBalancingScheme:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LoadBalancingSchemeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LoadBalancingScheme.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_LOAD_BALANCING_SCHEME: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        EXTERNAL: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 35607499
        INTERNAL: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 279295677
        INTERNAL_MANAGED: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 37350397
        INTERNAL_SELF_MANAGED: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 236211150
        INVALID: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 530283991
    class LoadBalancingScheme(_LoadBalancingScheme, metaclass=_LoadBalancingSchemeEnumTypeWrapper):
        """Specifies the forwarding rule type. For more information about forwarding rules, refer to Forwarding rule concepts."""
        pass

    UNDEFINED_LOAD_BALANCING_SCHEME: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    EXTERNAL: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 35607499
    INTERNAL: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 279295677
    INTERNAL_MANAGED: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 37350397
    INTERNAL_SELF_MANAGED: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 236211150
    INVALID: ForwardingRule.LoadBalancingScheme.ValueType = ...  # 530283991

    class _NetworkTier:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NetworkTierEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NetworkTier.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_NETWORK_TIER: ForwardingRule.NetworkTier.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        PREMIUM: ForwardingRule.NetworkTier.ValueType = ...  # 399530551
        """High quality, Google-grade network tier, support for all networking products."""

        STANDARD: ForwardingRule.NetworkTier.ValueType = ...  # 484642493
        """Public internet quality, only limited support for other networking products."""

    class NetworkTier(_NetworkTier, metaclass=_NetworkTierEnumTypeWrapper):
        """This signifies the networking tier used for configuring this load balancer and can only take the following values: PREMIUM, STANDARD. For regional ForwardingRule, the valid values are PREMIUM and STANDARD. For GlobalForwardingRule, the valid value is PREMIUM. If this field is not specified, it is assumed to be PREMIUM. If IPAddress is specified, this value must be equal to the networkTier of the Address."""
        pass

    UNDEFINED_NETWORK_TIER: ForwardingRule.NetworkTier.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    PREMIUM: ForwardingRule.NetworkTier.ValueType = ...  # 399530551
    """High quality, Google-grade network tier, support for all networking products."""

    STANDARD: ForwardingRule.NetworkTier.ValueType = ...  # 484642493
    """Public internet quality, only limited support for other networking products."""


    class _PscConnectionStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PscConnectionStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PscConnectionStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PSC_CONNECTION_STATUS: ForwardingRule.PscConnectionStatus.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACCEPTED: ForwardingRule.PscConnectionStatus.ValueType = ...  # 246714279
        """The connection has been accepted by the producer."""

        CLOSED: ForwardingRule.PscConnectionStatus.ValueType = ...  # 380163436
        """The connection has been closed by the producer and will not serve traffic going forward."""

        PENDING: ForwardingRule.PscConnectionStatus.ValueType = ...  # 35394935
        """The connection is pending acceptance by the producer."""

        REJECTED: ForwardingRule.PscConnectionStatus.ValueType = ...  # 174130302
        """The connection has been rejected by the producer."""

        STATUS_UNSPECIFIED: ForwardingRule.PscConnectionStatus.ValueType = ...  # 42133066
    class PscConnectionStatus(_PscConnectionStatus, metaclass=_PscConnectionStatusEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_PSC_CONNECTION_STATUS: ForwardingRule.PscConnectionStatus.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACCEPTED: ForwardingRule.PscConnectionStatus.ValueType = ...  # 246714279
    """The connection has been accepted by the producer."""

    CLOSED: ForwardingRule.PscConnectionStatus.ValueType = ...  # 380163436
    """The connection has been closed by the producer and will not serve traffic going forward."""

    PENDING: ForwardingRule.PscConnectionStatus.ValueType = ...  # 35394935
    """The connection is pending acceptance by the producer."""

    REJECTED: ForwardingRule.PscConnectionStatus.ValueType = ...  # 174130302
    """The connection has been rejected by the producer."""

    STATUS_UNSPECIFIED: ForwardingRule.PscConnectionStatus.ValueType = ...  # 42133066

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    I_P_ADDRESS_FIELD_NUMBER: builtins.int
    I_P_PROTOCOL_FIELD_NUMBER: builtins.int
    ALL_PORTS_FIELD_NUMBER: builtins.int
    ALLOW_GLOBAL_ACCESS_FIELD_NUMBER: builtins.int
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    IP_VERSION_FIELD_NUMBER: builtins.int
    IS_MIRRORING_COLLECTOR_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LOAD_BALANCING_SCHEME_FIELD_NUMBER: builtins.int
    METADATA_FILTERS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    NETWORK_TIER_FIELD_NUMBER: builtins.int
    PORT_RANGE_FIELD_NUMBER: builtins.int
    PORTS_FIELD_NUMBER: builtins.int
    PSC_CONNECTION_ID_FIELD_NUMBER: builtins.int
    PSC_CONNECTION_STATUS_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SERVICE_DIRECTORY_REGISTRATIONS_FIELD_NUMBER: builtins.int
    SERVICE_LABEL_FIELD_NUMBER: builtins.int
    SERVICE_NAME_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    I_p_address: typing.Text = ...
    """IP address that this forwarding rule serves. When a client sends traffic to this IP address, the forwarding rule directs the traffic to the target that you specify in the forwarding rule. If you don't specify a reserved IP address, an ephemeral IP address is assigned. Methods for specifying an IP address: * IPv4 dotted decimal, as in `100.1.2.3` * Full URL, as in https://www.googleapis.com/compute/v1/projects/project_id/regions/region /addresses/address-name * Partial URL or by name, as in: - projects/project_id/regions/region/addresses/address-name - regions/region/addresses/address-name - global/addresses/address-name - address-name The loadBalancingScheme and the forwarding rule's target determine the type of IP address that you can use. For detailed information, see [IP address specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications). Must be set to `0.0.0.0` when the target is targetGrpcProxy that has validateForProxyless field set to true. For Private Service Connect forwarding rules that forward traffic to Google APIs, IP address must be provided."""

    I_p_protocol: typing.Text = ...
    """The IP protocol to which this rule applies. For protocol forwarding, valid options are TCP, UDP, ESP, AH, SCTP, ICMP and L3_DEFAULT. The valid IP protocols are different for different load balancing products as described in [Load balancing features](https://cloud.google.com/load-balancing/docs/features#protocols_from_the_load_balancer_to_the_backends).
    Check the IPProtocolEnum enum for the list of possible values.
    """

    all_ports: builtins.bool = ...
    """This field is used along with the backend_service field for Internal TCP/UDP Load Balancing or Network Load Balancing, or with the target field for internal and external TargetInstance. You can only use one of ports and port_range, or allPorts. The three are mutually exclusive. For TCP, UDP and SCTP traffic, packets addressed to any ports will be forwarded to the target or backendService."""

    allow_global_access: builtins.bool = ...
    """This field is used along with the backend_service field for internal load balancing or with the target field for internal TargetInstance. If the field is set to TRUE, clients can access ILB from all regions. Otherwise only allows access from clients in the same region as the internal load balancer."""

    backend_service: typing.Text = ...
    """Identifies the backend service to which the forwarding rule sends traffic. Required for Internal TCP/UDP Load Balancing and Network Load Balancing; must be omitted for all other load balancer types."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a ForwardingRule. Include the fingerprint in patch request to ensure that you do not overwrite changes that were applied from another concurrent request. To see the latest fingerprint, make a get() request to retrieve a ForwardingRule."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    ip_version: typing.Text = ...
    """The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for an external global forwarding rule.
    Check the IpVersion enum for the list of possible values.
    """

    is_mirroring_collector: builtins.bool = ...
    """Indicates whether or not this load balancer can be used as a collector for packet mirroring. To prevent mirroring loops, instances behind this load balancer will not have their traffic mirrored even if a PacketMirroring rule applies to them. This can only be set to true for load balancers that have their loadBalancingScheme set to INTERNAL."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule resources."""

    label_fingerprint: typing.Text = ...
    """A fingerprint for the labels being applied to this resource, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a ForwardingRule."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty."""
        pass
    load_balancing_scheme: typing.Text = ...
    """Specifies the forwarding rule type. For more information about forwarding rules, refer to Forwarding rule concepts.
    Check the LoadBalancingScheme enum for the list of possible values.
    """

    @property
    def metadata_filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MetadataFilter]:
        """Opaque filter criteria used by load balancer to restrict routing configuration to a limited set of xDS compliant clients. In their xDS requests to load balancer, xDS clients present node metadata. When there is a match, the relevant configuration is made available to those proxies. Otherwise, all the resources (e.g. TargetHttpProxy, UrlMap) referenced by the ForwardingRule are not visible to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels provided in the metadata. If multiple metadataFilters are specified, all of them need to be satisfied in order to be considered a match. metadataFilters specified here will be applifed before those specified in the UrlMap that this ForwardingRule references. metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED."""
        pass
    name: typing.Text = ...
    """Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. For Private Service Connect forwarding rules that forward traffic to Google APIs, the forwarding rule name must be a 1-20 characters string with lowercase letters and numbers and must start with a letter."""

    network: typing.Text = ...
    """This field is not used for external load balancing. For Internal TCP/UDP Load Balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used. For Private Service Connect forwarding rules that forward traffic to Google APIs, a network must be provided."""

    network_tier: typing.Text = ...
    """This signifies the networking tier used for configuring this load balancer and can only take the following values: PREMIUM, STANDARD. For regional ForwardingRule, the valid values are PREMIUM and STANDARD. For GlobalForwardingRule, the valid value is PREMIUM. If this field is not specified, it is assumed to be PREMIUM. If IPAddress is specified, this value must be equal to the networkTier of the Address.
    Check the NetworkTier enum for the list of possible values.
    """

    port_range: typing.Text = ...
    """This field can be used only if: - Load balancing scheme is one of EXTERNAL, INTERNAL_SELF_MANAGED or INTERNAL_MANAGED - IPProtocol is one of TCP, UDP, or SCTP. Packets addressed to ports in the specified range will be forwarded to target or backend_service. You can only use one of ports, port_range, or allPorts. The three are mutually exclusive. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint ports. Some types of forwarding target have constraints on the acceptable ports. For more information, see [Port specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#port_specifications). @pattern: \\\\d+(?:-\\\\d+)?"""

    @property
    def ports(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The ports field is only supported when the forwarding rule references a backend_service directly. Only packets addressed to the [specified list of ports]((https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#port_specifications)) are forwarded to backends. You can only use one of ports and port_range, or allPorts. The three are mutually exclusive. You can specify a list of up to five ports, which can be non-contiguous. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint ports. @pattern: \\\\d+(?:-\\\\d+)?"""
        pass
    psc_connection_id: builtins.int = ...
    """[Output Only] The PSC connection id of the PSC Forwarding Rule."""

    psc_connection_status: typing.Text = ...
    """
    Check the PscConnectionStatus enum for the list of possible values.
    """

    region: typing.Text = ...
    """[Output Only] URL of the region where the regional forwarding rule resides. This field is not applicable to global forwarding rules. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def service_directory_registrations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ForwardingRuleServiceDirectoryRegistration]:
        """Service Directory resources to register this forwarding rule with. Currently, only supports a single Service Directory resource. It is only supported for internal load balancing."""
        pass
    service_label: typing.Text = ...
    """An optional prefix to the service name for this Forwarding Rule. If specified, the prefix is the first label of the fully qualified service name. The label must be 1-63 characters long, and comply with RFC1035. Specifically, the label must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. This field is only used for internal load balancing."""

    service_name: typing.Text = ...
    """[Output Only] The internal fully qualified service name for this Forwarding Rule. This field is only used for internal load balancing."""

    subnetwork: typing.Text = ...
    """This field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule, used in internal load balancing and network load balancing with IPv6. If the network specified is in auto subnet mode, this field is optional. However, a subnetwork must be specified if the network is in custom subnet mode or when creating external forwarding rule with IPv6."""

    target: typing.Text = ...
    def __init__(self,
        *,
        I_p_address : typing.Optional[typing.Text] = ...,
        I_p_protocol : typing.Optional[typing.Text] = ...,
        all_ports : typing.Optional[builtins.bool] = ...,
        allow_global_access : typing.Optional[builtins.bool] = ...,
        backend_service : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        ip_version : typing.Optional[typing.Text] = ...,
        is_mirroring_collector : typing.Optional[builtins.bool] = ...,
        kind : typing.Optional[typing.Text] = ...,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        load_balancing_scheme : typing.Optional[typing.Text] = ...,
        metadata_filters : typing.Optional[typing.Iterable[global___MetadataFilter]] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        network_tier : typing.Optional[typing.Text] = ...,
        port_range : typing.Optional[typing.Text] = ...,
        ports : typing.Optional[typing.Iterable[typing.Text]] = ...,
        psc_connection_id : typing.Optional[builtins.int] = ...,
        psc_connection_status : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        service_directory_registrations : typing.Optional[typing.Iterable[global___ForwardingRuleServiceDirectoryRegistration]] = ...,
        service_label : typing.Optional[typing.Text] = ...,
        service_name : typing.Optional[typing.Text] = ...,
        subnetwork : typing.Optional[typing.Text] = ...,
        target : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["I_p_address",b"I_p_address","I_p_protocol",b"I_p_protocol","_I_p_address",b"_I_p_address","_I_p_protocol",b"_I_p_protocol","_all_ports",b"_all_ports","_allow_global_access",b"_allow_global_access","_backend_service",b"_backend_service","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_ip_version",b"_ip_version","_is_mirroring_collector",b"_is_mirroring_collector","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_load_balancing_scheme",b"_load_balancing_scheme","_name",b"_name","_network",b"_network","_network_tier",b"_network_tier","_port_range",b"_port_range","_psc_connection_id",b"_psc_connection_id","_psc_connection_status",b"_psc_connection_status","_region",b"_region","_self_link",b"_self_link","_service_label",b"_service_label","_service_name",b"_service_name","_subnetwork",b"_subnetwork","_target",b"_target","all_ports",b"all_ports","allow_global_access",b"allow_global_access","backend_service",b"backend_service","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","ip_version",b"ip_version","is_mirroring_collector",b"is_mirroring_collector","kind",b"kind","label_fingerprint",b"label_fingerprint","load_balancing_scheme",b"load_balancing_scheme","name",b"name","network",b"network","network_tier",b"network_tier","port_range",b"port_range","psc_connection_id",b"psc_connection_id","psc_connection_status",b"psc_connection_status","region",b"region","self_link",b"self_link","service_label",b"service_label","service_name",b"service_name","subnetwork",b"subnetwork","target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["I_p_address",b"I_p_address","I_p_protocol",b"I_p_protocol","_I_p_address",b"_I_p_address","_I_p_protocol",b"_I_p_protocol","_all_ports",b"_all_ports","_allow_global_access",b"_allow_global_access","_backend_service",b"_backend_service","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_ip_version",b"_ip_version","_is_mirroring_collector",b"_is_mirroring_collector","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_load_balancing_scheme",b"_load_balancing_scheme","_name",b"_name","_network",b"_network","_network_tier",b"_network_tier","_port_range",b"_port_range","_psc_connection_id",b"_psc_connection_id","_psc_connection_status",b"_psc_connection_status","_region",b"_region","_self_link",b"_self_link","_service_label",b"_service_label","_service_name",b"_service_name","_subnetwork",b"_subnetwork","_target",b"_target","all_ports",b"all_ports","allow_global_access",b"allow_global_access","backend_service",b"backend_service","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","ip_version",b"ip_version","is_mirroring_collector",b"is_mirroring_collector","kind",b"kind","label_fingerprint",b"label_fingerprint","labels",b"labels","load_balancing_scheme",b"load_balancing_scheme","metadata_filters",b"metadata_filters","name",b"name","network",b"network","network_tier",b"network_tier","port_range",b"port_range","ports",b"ports","psc_connection_id",b"psc_connection_id","psc_connection_status",b"psc_connection_status","region",b"region","self_link",b"self_link","service_directory_registrations",b"service_directory_registrations","service_label",b"service_label","service_name",b"service_name","subnetwork",b"subnetwork","target",b"target"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_I_p_address",b"_I_p_address"]) -> typing.Optional[typing_extensions.Literal["I_p_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_I_p_protocol",b"_I_p_protocol"]) -> typing.Optional[typing_extensions.Literal["I_p_protocol"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_ports",b"_all_ports"]) -> typing.Optional[typing_extensions.Literal["all_ports"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_allow_global_access",b"_allow_global_access"]) -> typing.Optional[typing_extensions.Literal["allow_global_access"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_backend_service",b"_backend_service"]) -> typing.Optional[typing_extensions.Literal["backend_service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_version",b"_ip_version"]) -> typing.Optional[typing_extensions.Literal["ip_version"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_is_mirroring_collector",b"_is_mirroring_collector"]) -> typing.Optional[typing_extensions.Literal["is_mirroring_collector"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_load_balancing_scheme",b"_load_balancing_scheme"]) -> typing.Optional[typing_extensions.Literal["load_balancing_scheme"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_tier",b"_network_tier"]) -> typing.Optional[typing_extensions.Literal["network_tier"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_range",b"_port_range"]) -> typing.Optional[typing_extensions.Literal["port_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_psc_connection_id",b"_psc_connection_id"]) -> typing.Optional[typing_extensions.Literal["psc_connection_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_psc_connection_status",b"_psc_connection_status"]) -> typing.Optional[typing_extensions.Literal["psc_connection_status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service_label",b"_service_label"]) -> typing.Optional[typing_extensions.Literal["service_label"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service_name",b"_service_name"]) -> typing.Optional[typing_extensions.Literal["service_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_subnetwork",b"_subnetwork"]) -> typing.Optional[typing_extensions.Literal["subnetwork"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target",b"_target"]) -> typing.Optional[typing_extensions.Literal["target"]]: ...
global___ForwardingRule = ForwardingRule

class ForwardingRuleAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___ForwardingRulesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___ForwardingRulesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ForwardingRulesScopedList]:
        """A list of ForwardingRulesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#forwardingRuleAggregatedList for lists of forwarding rules."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___ForwardingRulesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ForwardingRuleAggregatedList = ForwardingRuleAggregatedList

class ForwardingRuleList(google.protobuf.message.Message):
    """Contains a list of ForwardingRule resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ForwardingRule]:
        """A list of ForwardingRule resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___ForwardingRule]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ForwardingRuleList = ForwardingRuleList

class ForwardingRuleReference(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    forwarding_rule: typing.Text = ...
    def __init__(self,
        *,
        forwarding_rule : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_forwarding_rule",b"_forwarding_rule","forwarding_rule",b"forwarding_rule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_forwarding_rule",b"_forwarding_rule","forwarding_rule",b"forwarding_rule"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_forwarding_rule",b"_forwarding_rule"]) -> typing.Optional[typing_extensions.Literal["forwarding_rule"]]: ...
global___ForwardingRuleReference = ForwardingRuleReference

class ForwardingRuleServiceDirectoryRegistration(google.protobuf.message.Message):
    """Describes the auto-registration of the Forwarding Rule to Service Directory. The region and project of the Service Directory resource generated from this registration will be the same as this Forwarding Rule."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAMESPACE_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    SERVICE_DIRECTORY_REGION_FIELD_NUMBER: builtins.int
    namespace: typing.Text = ...
    """Service Directory namespace to register the forwarding rule under."""

    service: typing.Text = ...
    """Service Directory service to register the forwarding rule under."""

    service_directory_region: typing.Text = ...
    """[Optional] Service Directory region to register this global forwarding rule under. Default to "us-central1". Only used for PSC for Google APIs. All PSC for Google APIs Forwarding Rules on the same network should use the same Service Directory region."""

    def __init__(self,
        *,
        namespace : typing.Optional[typing.Text] = ...,
        service : typing.Optional[typing.Text] = ...,
        service_directory_region : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_namespace",b"_namespace","_service",b"_service","_service_directory_region",b"_service_directory_region","namespace",b"namespace","service",b"service","service_directory_region",b"service_directory_region"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_namespace",b"_namespace","_service",b"_service","_service_directory_region",b"_service_directory_region","namespace",b"namespace","service",b"service","service_directory_region",b"service_directory_region"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_namespace",b"_namespace"]) -> typing.Optional[typing_extensions.Literal["namespace"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service_directory_region",b"_service_directory_region"]) -> typing.Optional[typing_extensions.Literal["service_directory_region"]]: ...
global___ForwardingRuleServiceDirectoryRegistration = ForwardingRuleServiceDirectoryRegistration

class ForwardingRulesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def forwarding_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ForwardingRule]:
        """A list of forwarding rules contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of forwarding rules when the list is empty."""
        pass
    def __init__(self,
        *,
        forwarding_rules : typing.Optional[typing.Iterable[global___ForwardingRule]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","forwarding_rules",b"forwarding_rules","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ForwardingRulesScopedList = ForwardingRulesScopedList

class GRPCHealthCheck(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PortSpecification:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PortSpecificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PortSpecification.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PORT_SPECIFICATION: GRPCHealthCheck.PortSpecification.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        USE_FIXED_PORT: GRPCHealthCheck.PortSpecification.ValueType = ...  # 190235748
        """The port number in port is used for health checking."""

        USE_NAMED_PORT: GRPCHealthCheck.PortSpecification.ValueType = ...  # 349300671
        """The portName is used for health checking."""

        USE_SERVING_PORT: GRPCHealthCheck.PortSpecification.ValueType = ...  # 362637516
        """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""

    class PortSpecification(_PortSpecification, metaclass=_PortSpecificationEnumTypeWrapper):
        """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, gRPC health check follows behavior specified in port and portName fields."""
        pass

    UNDEFINED_PORT_SPECIFICATION: GRPCHealthCheck.PortSpecification.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    USE_FIXED_PORT: GRPCHealthCheck.PortSpecification.ValueType = ...  # 190235748
    """The port number in port is used for health checking."""

    USE_NAMED_PORT: GRPCHealthCheck.PortSpecification.ValueType = ...  # 349300671
    """The portName is used for health checking."""

    USE_SERVING_PORT: GRPCHealthCheck.PortSpecification.ValueType = ...  # 362637516
    """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""


    GRPC_SERVICE_NAME_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    PORT_NAME_FIELD_NUMBER: builtins.int
    PORT_SPECIFICATION_FIELD_NUMBER: builtins.int
    grpc_service_name: typing.Text = ...
    """The gRPC service name for the health check. This field is optional. The value of grpc_service_name has the following meanings by convention: - Empty service_name means the overall status of all services at the backend. - Non-empty service_name means the health of that gRPC service, as defined by the owner of the service. The grpc_service_name can only be ASCII."""

    port: builtins.int = ...
    """The port number for the health check request. Must be specified if port_name and port_specification are not set or if port_specification is USE_FIXED_PORT. Valid values are 1 through 65535."""

    port_name: typing.Text = ...
    """Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence. The port_name should conform to RFC1035."""

    port_specification: typing.Text = ...
    """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, gRPC health check follows behavior specified in port and portName fields.
    Check the PortSpecification enum for the list of possible values.
    """

    def __init__(self,
        *,
        grpc_service_name : typing.Optional[typing.Text] = ...,
        port : typing.Optional[builtins.int] = ...,
        port_name : typing.Optional[typing.Text] = ...,
        port_specification : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_grpc_service_name",b"_grpc_service_name","_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","grpc_service_name",b"grpc_service_name","port",b"port","port_name",b"port_name","port_specification",b"port_specification"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_grpc_service_name",b"_grpc_service_name","_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","grpc_service_name",b"grpc_service_name","port",b"port","port_name",b"port_name","port_specification",b"port_specification"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_grpc_service_name",b"_grpc_service_name"]) -> typing.Optional[typing_extensions.Literal["grpc_service_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_name",b"_port_name"]) -> typing.Optional[typing_extensions.Literal["port_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_specification",b"_port_specification"]) -> typing.Optional[typing_extensions.Literal["port_specification"]]: ...
global___GRPCHealthCheck = GRPCHealthCheck

class GetAcceleratorTypeRequest(google.protobuf.message.Message):
    """A request message for AcceleratorTypes.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCELERATOR_TYPE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    accelerator_type: typing.Text = ...
    """Name of the accelerator type to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        accelerator_type : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accelerator_type",b"accelerator_type","project",b"project","zone",b"zone"]) -> None: ...
global___GetAcceleratorTypeRequest = GetAcceleratorTypeRequest

class GetAddressRequest(google.protobuf.message.Message):
    """A request message for Addresses.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ADDRESS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    address: typing.Text = ...
    """Name of the address resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    def __init__(self,
        *,
        address : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","project",b"project","region",b"region"]) -> None: ...
global___GetAddressRequest = GetAddressRequest

class GetAssociationFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.GetAssociation. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to which the queried rule belongs."""

    name: typing.Text = ...
    """The name of the association to get from the firewall policy."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","firewall_policy",b"firewall_policy","name",b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
global___GetAssociationFirewallPolicyRequest = GetAssociationFirewallPolicyRequest

class GetAutoscalerRequest(google.protobuf.message.Message):
    """A request message for Autoscalers.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    autoscaler: typing.Text = ...
    """Name of the autoscaler to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        autoscaler : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["autoscaler",b"autoscaler","project",b"project","zone",b"zone"]) -> None: ...
global___GetAutoscalerRequest = GetAutoscalerRequest

class GetBackendBucketRequest(google.protobuf.message.Message):
    """A request message for BackendBuckets.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_BUCKET_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    backend_bucket: typing.Text = ...
    """Name of the BackendBucket resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        backend_bucket : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backend_bucket",b"backend_bucket","project",b"project"]) -> None: ...
global___GetBackendBucketRequest = GetBackendBucketRequest

class GetBackendServiceRequest(google.protobuf.message.Message):
    """A request message for BackendServices.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backend_service",b"backend_service","project",b"project"]) -> None: ...
global___GetBackendServiceRequest = GetBackendServiceRequest

class GetDiagnosticsInterconnectRequest(google.protobuf.message.Message):
    """A request message for Interconnects.GetDiagnostics. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    interconnect: typing.Text = ...
    """Name of the interconnect resource to query."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        interconnect : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["interconnect",b"interconnect","project",b"project"]) -> None: ...
global___GetDiagnosticsInterconnectRequest = GetDiagnosticsInterconnectRequest

class GetDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """Name of the persistent disk to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk",b"disk","project",b"project","zone",b"zone"]) -> None: ...
global___GetDiskRequest = GetDiskRequest

class GetDiskTypeRequest(google.protobuf.message.Message):
    """A request message for DiskTypes.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_TYPE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    disk_type: typing.Text = ...
    """Name of the disk type to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        disk_type : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_type",b"disk_type","project",b"project","zone",b"zone"]) -> None: ...
global___GetDiskTypeRequest = GetDiskTypeRequest

class GetEffectiveFirewallsInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.GetEffectiveFirewalls. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    network_interface: typing.Text = ...
    """The name of the network interface to get the effective firewalls."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        network_interface : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance",b"instance","network_interface",b"network_interface","project",b"project","zone",b"zone"]) -> None: ...
global___GetEffectiveFirewallsInstanceRequest = GetEffectiveFirewallsInstanceRequest

class GetEffectiveFirewallsNetworkRequest(google.protobuf.message.Message):
    """A request message for Networks.GetEffectiveFirewalls. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    network: typing.Text = ...
    """Name of the network for this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        network : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network",b"network","project",b"project"]) -> None: ...
global___GetEffectiveFirewallsNetworkRequest = GetEffectiveFirewallsNetworkRequest

class GetExternalVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for ExternalVpnGateways.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXTERNAL_VPN_GATEWAY_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    external_vpn_gateway: typing.Text = ...
    """Name of the externalVpnGateway to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        external_vpn_gateway : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["external_vpn_gateway",b"external_vpn_gateway","project",b"project"]) -> None: ...
global___GetExternalVpnGatewayRequest = GetExternalVpnGatewayRequest

class GetFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to get."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["firewall_policy",b"firewall_policy"]) -> None: ...
global___GetFirewallPolicyRequest = GetFirewallPolicyRequest

class GetFirewallRequest(google.protobuf.message.Message):
    """A request message for Firewalls.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    firewall: typing.Text = ...
    """Name of the firewall rule to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        firewall : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["firewall",b"firewall","project",b"project"]) -> None: ...
global___GetFirewallRequest = GetFirewallRequest

class GetForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for ForwardingRules.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    forwarding_rule: typing.Text = ...
    """Name of the ForwardingRule resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    def __init__(self,
        *,
        forwarding_rule : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["forwarding_rule",b"forwarding_rule","project",b"project","region",b"region"]) -> None: ...
global___GetForwardingRuleRequest = GetForwardingRuleRequest

class GetFromFamilyImageRequest(google.protobuf.message.Message):
    """A request message for Images.GetFromFamily. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FAMILY_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    family: typing.Text = ...
    """Name of the image family to search for."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        family : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["family",b"family","project",b"project"]) -> None: ...
global___GetFromFamilyImageRequest = GetFromFamilyImageRequest

class GetGlobalAddressRequest(google.protobuf.message.Message):
    """A request message for GlobalAddresses.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ADDRESS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    address: typing.Text = ...
    """Name of the address resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        address : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","project",b"project"]) -> None: ...
global___GetGlobalAddressRequest = GetGlobalAddressRequest

class GetGlobalForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for GlobalForwardingRules.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    forwarding_rule: typing.Text = ...
    """Name of the ForwardingRule resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        forwarding_rule : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["forwarding_rule",b"forwarding_rule","project",b"project"]) -> None: ...
global___GetGlobalForwardingRuleRequest = GetGlobalForwardingRuleRequest

class GetGlobalNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for GlobalNetworkEndpointGroups.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group. It should comply with RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        network_endpoint_group : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_endpoint_group",b"network_endpoint_group","project",b"project"]) -> None: ...
global___GetGlobalNetworkEndpointGroupRequest = GetGlobalNetworkEndpointGroupRequest

class GetGlobalOperationRequest(google.protobuf.message.Message):
    """A request message for GlobalOperations.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation",b"operation","project",b"project"]) -> None: ...
global___GetGlobalOperationRequest = GetGlobalOperationRequest

class GetGlobalOrganizationOperationRequest(google.protobuf.message.Message):
    """A request message for GlobalOrganizationOperations.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PARENT_ID_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to return."""

    parent_id: typing.Text = ...
    """Parent ID for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        parent_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_parent_id",b"_parent_id","parent_id",b"parent_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_parent_id",b"_parent_id","operation",b"operation","parent_id",b"parent_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_parent_id",b"_parent_id"]) -> typing.Optional[typing_extensions.Literal["parent_id"]]: ...
global___GetGlobalOrganizationOperationRequest = GetGlobalOrganizationOperationRequest

class GetGlobalPublicDelegatedPrefixeRequest(google.protobuf.message.Message):
    """A request message for GlobalPublicDelegatedPrefixes.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIX_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    public_delegated_prefix: typing.Text = ...
    """Name of the PublicDelegatedPrefix resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_delegated_prefix : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","public_delegated_prefix",b"public_delegated_prefix"]) -> None: ...
global___GetGlobalPublicDelegatedPrefixeRequest = GetGlobalPublicDelegatedPrefixeRequest

class GetGuestAttributesInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.GetGuestAttributes. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    QUERY_PATH_FIELD_NUMBER: builtins.int
    VARIABLE_KEY_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    query_path: typing.Text = ...
    """Specifies the guest attributes path to be queried."""

    variable_key: typing.Text = ...
    """Specifies the key for the guest attributes entry."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        query_path : typing.Optional[typing.Text] = ...,
        variable_key : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_query_path",b"_query_path","_variable_key",b"_variable_key","query_path",b"query_path","variable_key",b"variable_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_query_path",b"_query_path","_variable_key",b"_variable_key","instance",b"instance","project",b"project","query_path",b"query_path","variable_key",b"variable_key","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_query_path",b"_query_path"]) -> typing.Optional[typing_extensions.Literal["query_path"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_variable_key",b"_variable_key"]) -> typing.Optional[typing_extensions.Literal["variable_key"]]: ...
global___GetGuestAttributesInstanceRequest = GetGuestAttributesInstanceRequest

class GetHealthBackendServiceRequest(google.protobuf.message.Message):
    """A request message for BackendServices.GetHealth. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_GROUP_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to which the queried instance belongs."""

    project: typing.Text = ...
    @property
    def resource_group_reference_resource(self) -> global___ResourceGroupReference:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        project : typing.Text = ...,
        resource_group_reference_resource : typing.Optional[global___ResourceGroupReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_group_reference_resource",b"resource_group_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backend_service",b"backend_service","project",b"project","resource_group_reference_resource",b"resource_group_reference_resource"]) -> None: ...
global___GetHealthBackendServiceRequest = GetHealthBackendServiceRequest

class GetHealthCheckRequest(google.protobuf.message.Message):
    """A request message for HealthChecks.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    health_check: typing.Text = ...
    """Name of the HealthCheck resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        health_check : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["health_check",b"health_check","project",b"project"]) -> None: ...
global___GetHealthCheckRequest = GetHealthCheckRequest

class GetHealthRegionBackendServiceRequest(google.protobuf.message.Message):
    """A request message for RegionBackendServices.GetHealth. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_GROUP_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource for which to get health."""

    project: typing.Text = ...
    region: typing.Text = ...
    """Name of the region scoping this request."""

    @property
    def resource_group_reference_resource(self) -> global___ResourceGroupReference:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource_group_reference_resource : typing.Optional[global___ResourceGroupReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["resource_group_reference_resource",b"resource_group_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["backend_service",b"backend_service","project",b"project","region",b"region","resource_group_reference_resource",b"resource_group_reference_resource"]) -> None: ...
global___GetHealthRegionBackendServiceRequest = GetHealthRegionBackendServiceRequest

class GetHealthTargetPoolRequest(google.protobuf.message.Message):
    """A request message for TargetPools.GetHealth. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    TARGET_POOL_FIELD_NUMBER: builtins.int
    @property
    def instance_reference_resource(self) -> global___InstanceReference:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    target_pool: typing.Text = ...
    """Name of the TargetPool resource to which the queried instance belongs."""

    def __init__(self,
        *,
        instance_reference_resource : typing.Optional[global___InstanceReference] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        target_pool : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["instance_reference_resource",b"instance_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_reference_resource",b"instance_reference_resource","project",b"project","region",b"region","target_pool",b"target_pool"]) -> None: ...
global___GetHealthTargetPoolRequest = GetHealthTargetPoolRequest

class GetIamPolicyDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","resource",b"resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyDiskRequest = GetIamPolicyDiskRequest

class GetIamPolicyFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyFirewallPolicyRequest = GetIamPolicyFirewallPolicyRequest

class GetIamPolicyImageRequest(google.protobuf.message.Message):
    """A request message for Images.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyImageRequest = GetIamPolicyImageRequest

class GetIamPolicyInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","resource",b"resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyInstanceRequest = GetIamPolicyInstanceRequest

class GetIamPolicyInstanceTemplateRequest(google.protobuf.message.Message):
    """A request message for InstanceTemplates.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyInstanceTemplateRequest = GetIamPolicyInstanceTemplateRequest

class GetIamPolicyLicenseRequest(google.protobuf.message.Message):
    """A request message for Licenses.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyLicenseRequest = GetIamPolicyLicenseRequest

class GetIamPolicyNodeGroupRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","resource",b"resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyNodeGroupRequest = GetIamPolicyNodeGroupRequest

class GetIamPolicyNodeTemplateRequest(google.protobuf.message.Message):
    """A request message for NodeTemplates.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","region",b"region","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyNodeTemplateRequest = GetIamPolicyNodeTemplateRequest

class GetIamPolicyRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","region",b"region","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyRegionDiskRequest = GetIamPolicyRegionDiskRequest

class GetIamPolicyReservationRequest(google.protobuf.message.Message):
    """A request message for Reservations.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","resource",b"resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyReservationRequest = GetIamPolicyReservationRequest

class GetIamPolicyResourcePolicyRequest(google.protobuf.message.Message):
    """A request message for ResourcePolicies.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","region",b"region","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyResourcePolicyRequest = GetIamPolicyResourcePolicyRequest

class GetIamPolicyServiceAttachmentRequest(google.protobuf.message.Message):
    """A request message for ServiceAttachments.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","region",b"region","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicyServiceAttachmentRequest = GetIamPolicyServiceAttachmentRequest

class GetIamPolicySnapshotRequest(google.protobuf.message.Message):
    """A request message for Snapshots.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicySnapshotRequest = GetIamPolicySnapshotRequest

class GetIamPolicySubnetworkRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.GetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPTIONS_REQUESTED_POLICY_VERSION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    options_requested_policy_version: builtins.int = ...
    """Requested IAM Policy version."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        options_requested_policy_version : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version","options_requested_policy_version",b"options_requested_policy_version","project",b"project","region",b"region","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_options_requested_policy_version",b"_options_requested_policy_version"]) -> typing.Optional[typing_extensions.Literal["options_requested_policy_version"]]: ...
global___GetIamPolicySubnetworkRequest = GetIamPolicySubnetworkRequest

class GetImageFamilyViewRequest(google.protobuf.message.Message):
    """A request message for ImageFamilyViews.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FAMILY_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    family: typing.Text = ...
    """Name of the image family to search for."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        family : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["family",b"family","project",b"project","zone",b"zone"]) -> None: ...
global___GetImageFamilyViewRequest = GetImageFamilyViewRequest

class GetImageRequest(google.protobuf.message.Message):
    """A request message for Images.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IMAGE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    image: typing.Text = ...
    """Name of the image resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        image : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["image",b"image","project",b"project"]) -> None: ...
global___GetImageRequest = GetImageRequest

class GetInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_group_manager",b"instance_group_manager","project",b"project","zone",b"zone"]) -> None: ...
global___GetInstanceGroupManagerRequest = GetInstanceGroupManagerRequest

class GetInstanceGroupRequest(google.protobuf.message.Message):
    """A request message for InstanceGroups.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group: typing.Text = ...
    """The name of the instance group."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone where the instance group is located."""

    def __init__(self,
        *,
        instance_group : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_group",b"instance_group","project",b"project","zone",b"zone"]) -> None: ...
global___GetInstanceGroupRequest = GetInstanceGroupRequest

class GetInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance",b"instance","project",b"project","zone",b"zone"]) -> None: ...
global___GetInstanceRequest = GetInstanceRequest

class GetInstanceTemplateRequest(google.protobuf.message.Message):
    """A request message for InstanceTemplates.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_TEMPLATE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    instance_template: typing.Text = ...
    """The name of the instance template."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        instance_template : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_template",b"instance_template","project",b"project"]) -> None: ...
global___GetInstanceTemplateRequest = GetInstanceTemplateRequest

class GetInterconnectAttachmentRequest(google.protobuf.message.Message):
    """A request message for InterconnectAttachments.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_ATTACHMENT_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    interconnect_attachment: typing.Text = ...
    """Name of the interconnect attachment to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    def __init__(self,
        *,
        interconnect_attachment : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["interconnect_attachment",b"interconnect_attachment","project",b"project","region",b"region"]) -> None: ...
global___GetInterconnectAttachmentRequest = GetInterconnectAttachmentRequest

class GetInterconnectLocationRequest(google.protobuf.message.Message):
    """A request message for InterconnectLocations.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_LOCATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    interconnect_location: typing.Text = ...
    """Name of the interconnect location to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        interconnect_location : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["interconnect_location",b"interconnect_location","project",b"project"]) -> None: ...
global___GetInterconnectLocationRequest = GetInterconnectLocationRequest

class GetInterconnectRequest(google.protobuf.message.Message):
    """A request message for Interconnects.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    interconnect: typing.Text = ...
    """Name of the interconnect to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        interconnect : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["interconnect",b"interconnect","project",b"project"]) -> None: ...
global___GetInterconnectRequest = GetInterconnectRequest

class GetLicenseCodeRequest(google.protobuf.message.Message):
    """A request message for LicenseCodes.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LICENSE_CODE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    license_code: typing.Text = ...
    """Number corresponding to the License code resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        license_code : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["license_code",b"license_code","project",b"project"]) -> None: ...
global___GetLicenseCodeRequest = GetLicenseCodeRequest

class GetLicenseRequest(google.protobuf.message.Message):
    """A request message for Licenses.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LICENSE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    license: typing.Text = ...
    """Name of the License resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        license : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["license",b"license","project",b"project"]) -> None: ...
global___GetLicenseRequest = GetLicenseRequest

class GetMachineTypeRequest(google.protobuf.message.Message):
    """A request message for MachineTypes.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    machine_type: typing.Text = ...
    """Name of the machine type to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        machine_type : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["machine_type",b"machine_type","project",b"project","zone",b"zone"]) -> None: ...
global___GetMachineTypeRequest = GetMachineTypeRequest

class GetNatMappingInfoRoutersRequest(google.protobuf.message.Message):
    """A request message for Routers.GetNatMappingInfo. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ROUTER_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    router: typing.Text = ...
    """Name of the Router resource to query for Nat Mapping information of VM endpoints."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        router : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success","router",b"router"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___GetNatMappingInfoRoutersRequest = GetNatMappingInfoRoutersRequest

class GetNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for NetworkEndpointGroups.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group. It should comply with RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone where the network endpoint group is located. It should comply with RFC1035."""

    def __init__(self,
        *,
        network_endpoint_group : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_endpoint_group",b"network_endpoint_group","project",b"project","zone",b"zone"]) -> None: ...
global___GetNetworkEndpointGroupRequest = GetNetworkEndpointGroupRequest

class GetNetworkRequest(google.protobuf.message.Message):
    """A request message for Networks.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    network: typing.Text = ...
    """Name of the network to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        network : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network",b"network","project",b"project"]) -> None: ...
global___GetNetworkRequest = GetNetworkRequest

class GetNodeGroupRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    node_group: typing.Text = ...
    """Name of the node group to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        node_group : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["node_group",b"node_group","project",b"project","zone",b"zone"]) -> None: ...
global___GetNodeGroupRequest = GetNodeGroupRequest

class GetNodeTemplateRequest(google.protobuf.message.Message):
    """A request message for NodeTemplates.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_TEMPLATE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    node_template: typing.Text = ...
    """Name of the node template to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    def __init__(self,
        *,
        node_template : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["node_template",b"node_template","project",b"project","region",b"region"]) -> None: ...
global___GetNodeTemplateRequest = GetNodeTemplateRequest

class GetNodeTypeRequest(google.protobuf.message.Message):
    """A request message for NodeTypes.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_TYPE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    node_type: typing.Text = ...
    """Name of the node type to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        node_type : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["node_type",b"node_type","project",b"project","zone",b"zone"]) -> None: ...
global___GetNodeTypeRequest = GetNodeTypeRequest

class GetPacketMirroringRequest(google.protobuf.message.Message):
    """A request message for PacketMirrorings.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PACKET_MIRRORING_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    packet_mirroring: typing.Text = ...
    """Name of the PacketMirroring resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    def __init__(self,
        *,
        packet_mirroring : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["packet_mirroring",b"packet_mirroring","project",b"project","region",b"region"]) -> None: ...
global___GetPacketMirroringRequest = GetPacketMirroringRequest

class GetProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project"]) -> None: ...
global___GetProjectRequest = GetProjectRequest

class GetPublicAdvertisedPrefixeRequest(google.protobuf.message.Message):
    """A request message for PublicAdvertisedPrefixes.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_ADVERTISED_PREFIX_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    public_advertised_prefix: typing.Text = ...
    """Name of the PublicAdvertisedPrefix resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_advertised_prefix : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","public_advertised_prefix",b"public_advertised_prefix"]) -> None: ...
global___GetPublicAdvertisedPrefixeRequest = GetPublicAdvertisedPrefixeRequest

class GetPublicDelegatedPrefixeRequest(google.protobuf.message.Message):
    """A request message for PublicDelegatedPrefixes.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIX_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    public_delegated_prefix: typing.Text = ...
    """Name of the PublicDelegatedPrefix resource to return."""

    region: typing.Text = ...
    """Name of the region of this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_delegated_prefix : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","public_delegated_prefix",b"public_delegated_prefix","region",b"region"]) -> None: ...
global___GetPublicDelegatedPrefixeRequest = GetPublicDelegatedPrefixeRequest

class GetRegionAutoscalerRequest(google.protobuf.message.Message):
    """A request message for RegionAutoscalers.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    autoscaler: typing.Text = ...
    """Name of the autoscaler to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    def __init__(self,
        *,
        autoscaler : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["autoscaler",b"autoscaler","project",b"project","region",b"region"]) -> None: ...
global___GetRegionAutoscalerRequest = GetRegionAutoscalerRequest

class GetRegionBackendServiceRequest(google.protobuf.message.Message):
    """A request message for RegionBackendServices.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["backend_service",b"backend_service","project",b"project","region",b"region"]) -> None: ...
global___GetRegionBackendServiceRequest = GetRegionBackendServiceRequest

class GetRegionCommitmentRequest(google.protobuf.message.Message):
    """A request message for RegionCommitments.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMMITMENT_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    commitment: typing.Text = ...
    """Name of the commitment to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    def __init__(self,
        *,
        commitment : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["commitment",b"commitment","project",b"project","region",b"region"]) -> None: ...
global___GetRegionCommitmentRequest = GetRegionCommitmentRequest

class GetRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """Name of the regional persistent disk to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk",b"disk","project",b"project","region",b"region"]) -> None: ...
global___GetRegionDiskRequest = GetRegionDiskRequest

class GetRegionDiskTypeRequest(google.protobuf.message.Message):
    """A request message for RegionDiskTypes.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_TYPE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    disk_type: typing.Text = ...
    """Name of the disk type to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    def __init__(self,
        *,
        disk_type : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_type",b"disk_type","project",b"project","region",b"region"]) -> None: ...
global___GetRegionDiskTypeRequest = GetRegionDiskTypeRequest

class GetRegionHealthCheckRequest(google.protobuf.message.Message):
    """A request message for RegionHealthChecks.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    health_check: typing.Text = ...
    """Name of the HealthCheck resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    def __init__(self,
        *,
        health_check : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["health_check",b"health_check","project",b"project","region",b"region"]) -> None: ...
global___GetRegionHealthCheckRequest = GetRegionHealthCheckRequest

class GetRegionHealthCheckServiceRequest(google.protobuf.message.Message):
    """A request message for RegionHealthCheckServices.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    health_check_service: typing.Text = ...
    """Name of the HealthCheckService to update. The name must be 1-63 characters long, and comply with RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    def __init__(self,
        *,
        health_check_service : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["health_check_service",b"health_check_service","project",b"project","region",b"region"]) -> None: ...
global___GetRegionHealthCheckServiceRequest = GetRegionHealthCheckServiceRequest

class GetRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """Name of the managed instance group to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_group_manager",b"instance_group_manager","project",b"project","region",b"region"]) -> None: ...
global___GetRegionInstanceGroupManagerRequest = GetRegionInstanceGroupManagerRequest

class GetRegionInstanceGroupRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroups.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    instance_group: typing.Text = ...
    """Name of the instance group resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    def __init__(self,
        *,
        instance_group : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance_group",b"instance_group","project",b"project","region",b"region"]) -> None: ...
global___GetRegionInstanceGroupRequest = GetRegionInstanceGroupRequest

class GetRegionNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for RegionNetworkEndpointGroups.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group. It should comply with RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region where the network endpoint group is located. It should comply with RFC1035."""

    def __init__(self,
        *,
        network_endpoint_group : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_endpoint_group",b"network_endpoint_group","project",b"project","region",b"region"]) -> None: ...
global___GetRegionNetworkEndpointGroupRequest = GetRegionNetworkEndpointGroupRequest

class GetRegionNotificationEndpointRequest(google.protobuf.message.Message):
    """A request message for RegionNotificationEndpoints.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NOTIFICATION_ENDPOINT_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    notification_endpoint: typing.Text = ...
    """Name of the NotificationEndpoint resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    def __init__(self,
        *,
        notification_endpoint : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["notification_endpoint",b"notification_endpoint","project",b"project","region",b"region"]) -> None: ...
global___GetRegionNotificationEndpointRequest = GetRegionNotificationEndpointRequest

class GetRegionOperationRequest(google.protobuf.message.Message):
    """A request message for RegionOperations.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation",b"operation","project",b"project","region",b"region"]) -> None: ...
global___GetRegionOperationRequest = GetRegionOperationRequest

class GetRegionRequest(google.protobuf.message.Message):
    """A request message for Regions.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region"]) -> None: ...
global___GetRegionRequest = GetRegionRequest

class GetRegionSslCertificateRequest(google.protobuf.message.Message):
    """A request message for RegionSslCertificates.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SSL_CERTIFICATE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    ssl_certificate: typing.Text = ...
    """Name of the SslCertificate resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ssl_certificate : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","ssl_certificate",b"ssl_certificate"]) -> None: ...
global___GetRegionSslCertificateRequest = GetRegionSslCertificateRequest

class GetRegionTargetHttpProxyRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpProxies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    TARGET_HTTP_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    target_http_proxy: typing.Text = ...
    """Name of the TargetHttpProxy resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        target_http_proxy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","target_http_proxy",b"target_http_proxy"]) -> None: ...
global___GetRegionTargetHttpProxyRequest = GetRegionTargetHttpProxyRequest

class GetRegionTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpsProxies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        target_https_proxy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","target_https_proxy",b"target_https_proxy"]) -> None: ...
global___GetRegionTargetHttpsProxyRequest = GetRegionTargetHttpsProxyRequest

class GetRegionUrlMapRequest(google.protobuf.message.Message):
    """A request message for RegionUrlMaps.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    url_map: typing.Text = ...
    """Name of the UrlMap resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        url_map : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","url_map",b"url_map"]) -> None: ...
global___GetRegionUrlMapRequest = GetRegionUrlMapRequest

class GetReservationRequest(google.protobuf.message.Message):
    """A request message for Reservations.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESERVATION_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    reservation: typing.Text = ...
    """Name of the reservation to retrieve."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        reservation : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","reservation",b"reservation","zone",b"zone"]) -> None: ...
global___GetReservationRequest = GetReservationRequest

class GetResourcePolicyRequest(google.protobuf.message.Message):
    """A request message for ResourcePolicies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_POLICY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    resource_policy: typing.Text = ...
    """Name of the resource policy to retrieve."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource_policy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","resource_policy",b"resource_policy"]) -> None: ...
global___GetResourcePolicyRequest = GetResourcePolicyRequest

class GetRouteRequest(google.protobuf.message.Message):
    """A request message for Routes.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    ROUTE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    route: typing.Text = ...
    """Name of the Route resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        route : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","route",b"route"]) -> None: ...
global___GetRouteRequest = GetRouteRequest

class GetRouterRequest(google.protobuf.message.Message):
    """A request message for Routers.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    ROUTER_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    router: typing.Text = ...
    """Name of the Router resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        router : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","router",b"router"]) -> None: ...
global___GetRouterRequest = GetRouterRequest

class GetRouterStatusRouterRequest(google.protobuf.message.Message):
    """A request message for Routers.GetRouterStatus. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    ROUTER_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    router: typing.Text = ...
    """Name of the Router resource to query."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        router : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","router",b"router"]) -> None: ...
global___GetRouterStatusRouterRequest = GetRouterStatusRouterRequest

class GetRuleFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.GetRule. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to which the queried rule belongs."""

    priority: builtins.int = ...
    """The priority of the rule to get from the firewall policy."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        priority : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_priority",b"_priority","priority",b"priority"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_priority",b"_priority","firewall_policy",b"firewall_policy","priority",b"priority"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
global___GetRuleFirewallPolicyRequest = GetRuleFirewallPolicyRequest

class GetRuleSecurityPolicyRequest(google.protobuf.message.Message):
    """A request message for SecurityPolicies.GetRule. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRIORITY_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_FIELD_NUMBER: builtins.int
    priority: builtins.int = ...
    """The priority of the rule to get from the security policy."""

    project: typing.Text = ...
    """Project ID for this request."""

    security_policy: typing.Text = ...
    """Name of the security policy to which the queried rule belongs."""

    def __init__(self,
        *,
        priority : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        security_policy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_priority",b"_priority","priority",b"priority"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_priority",b"_priority","priority",b"priority","project",b"project","security_policy",b"security_policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
global___GetRuleSecurityPolicyRequest = GetRuleSecurityPolicyRequest

class GetScreenshotInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.GetScreenshot. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance",b"instance","project",b"project","zone",b"zone"]) -> None: ...
global___GetScreenshotInstanceRequest = GetScreenshotInstanceRequest

class GetSecurityPolicyRequest(google.protobuf.message.Message):
    """A request message for SecurityPolicies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    security_policy: typing.Text = ...
    """Name of the security policy to get."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        security_policy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","security_policy",b"security_policy"]) -> None: ...
global___GetSecurityPolicyRequest = GetSecurityPolicyRequest

class GetSerialPortOutputInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.GetSerialPortOutput. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance for this request."""

    port: builtins.int = ...
    """Specifies which COM or serial port to retrieve data from."""

    project: typing.Text = ...
    """Project ID for this request."""

    start: builtins.int = ...
    """Specifies the starting byte position of the output to return. To start with the first byte of output to the specified port, omit this field or set it to `0`. If the output for that byte position is available, this field matches the `start` parameter sent with the request. If the amount of serial console output exceeds the size of the buffer (1 MB), the oldest output is discarded and is no longer available. If the requested start position refers to discarded output, the start position is adjusted to the oldest output still available, and the adjusted start position is returned as the `start` property value. You can also provide a negative start position, which translates to the most recent number of bytes written to the serial port. For example, -3 is interpreted as the most recent 3 bytes written to the serial console."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        port : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        start : typing.Optional[builtins.int] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_port",b"_port","_start",b"_start","port",b"port","start",b"start"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_port",b"_port","_start",b"_start","instance",b"instance","port",b"port","project",b"project","start",b"start","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start",b"_start"]) -> typing.Optional[typing_extensions.Literal["start"]]: ...
global___GetSerialPortOutputInstanceRequest = GetSerialPortOutputInstanceRequest

class GetServiceAttachmentRequest(google.protobuf.message.Message):
    """A request message for ServiceAttachments.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SERVICE_ATTACHMENT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region of this request."""

    service_attachment: typing.Text = ...
    """Name of the ServiceAttachment resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        service_attachment : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","service_attachment",b"service_attachment"]) -> None: ...
global___GetServiceAttachmentRequest = GetServiceAttachmentRequest

class GetShieldedInstanceIdentityInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.GetShieldedInstanceIdentity. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name or id of the instance scoping this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance",b"instance","project",b"project","zone",b"zone"]) -> None: ...
global___GetShieldedInstanceIdentityInstanceRequest = GetShieldedInstanceIdentityInstanceRequest

class GetSnapshotRequest(google.protobuf.message.Message):
    """A request message for Snapshots.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    SNAPSHOT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    snapshot: typing.Text = ...
    """Name of the Snapshot resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        snapshot : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","snapshot",b"snapshot"]) -> None: ...
global___GetSnapshotRequest = GetSnapshotRequest

class GetSslCertificateRequest(google.protobuf.message.Message):
    """A request message for SslCertificates.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    SSL_CERTIFICATE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    ssl_certificate: typing.Text = ...
    """Name of the SslCertificate resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ssl_certificate : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","ssl_certificate",b"ssl_certificate"]) -> None: ...
global___GetSslCertificateRequest = GetSslCertificateRequest

class GetSslPolicyRequest(google.protobuf.message.Message):
    """A request message for SslPolicies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    SSL_POLICY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    ssl_policy: typing.Text = ...
    """Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ssl_policy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","ssl_policy",b"ssl_policy"]) -> None: ...
global___GetSslPolicyRequest = GetSslPolicyRequest

class GetStatusVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for VpnGateways.GetStatus. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    VPN_GATEWAY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    vpn_gateway: typing.Text = ...
    """Name of the VPN gateway to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        vpn_gateway : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","vpn_gateway",b"vpn_gateway"]) -> None: ...
global___GetStatusVpnGatewayRequest = GetStatusVpnGatewayRequest

class GetSubnetworkRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    subnetwork: typing.Text = ...
    """Name of the Subnetwork resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        subnetwork : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","subnetwork",b"subnetwork"]) -> None: ...
global___GetSubnetworkRequest = GetSubnetworkRequest

class GetTargetGrpcProxyRequest(google.protobuf.message.Message):
    """A request message for TargetGrpcProxies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    TARGET_GRPC_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    target_grpc_proxy: typing.Text = ...
    """Name of the TargetGrpcProxy resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        target_grpc_proxy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","target_grpc_proxy",b"target_grpc_proxy"]) -> None: ...
global___GetTargetGrpcProxyRequest = GetTargetGrpcProxyRequest

class GetTargetHttpProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpProxies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    TARGET_HTTP_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    target_http_proxy: typing.Text = ...
    """Name of the TargetHttpProxy resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        target_http_proxy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","target_http_proxy",b"target_http_proxy"]) -> None: ...
global___GetTargetHttpProxyRequest = GetTargetHttpProxyRequest

class GetTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpsProxies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        target_https_proxy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","target_https_proxy",b"target_https_proxy"]) -> None: ...
global___GetTargetHttpsProxyRequest = GetTargetHttpsProxyRequest

class GetTargetInstanceRequest(google.protobuf.message.Message):
    """A request message for TargetInstances.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    TARGET_INSTANCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    target_instance: typing.Text = ...
    """Name of the TargetInstance resource to return."""

    zone: typing.Text = ...
    """Name of the zone scoping this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        target_instance : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","target_instance",b"target_instance","zone",b"zone"]) -> None: ...
global___GetTargetInstanceRequest = GetTargetInstanceRequest

class GetTargetPoolRequest(google.protobuf.message.Message):
    """A request message for TargetPools.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    TARGET_POOL_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    target_pool: typing.Text = ...
    """Name of the TargetPool resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        target_pool : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","target_pool",b"target_pool"]) -> None: ...
global___GetTargetPoolRequest = GetTargetPoolRequest

class GetTargetSslProxyRequest(google.protobuf.message.Message):
    """A request message for TargetSslProxies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    TARGET_SSL_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    target_ssl_proxy: typing.Text = ...
    """Name of the TargetSslProxy resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        target_ssl_proxy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","target_ssl_proxy",b"target_ssl_proxy"]) -> None: ...
global___GetTargetSslProxyRequest = GetTargetSslProxyRequest

class GetTargetTcpProxyRequest(google.protobuf.message.Message):
    """A request message for TargetTcpProxies.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    TARGET_TCP_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    target_tcp_proxy: typing.Text = ...
    """Name of the TargetTcpProxy resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        target_tcp_proxy : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","target_tcp_proxy",b"target_tcp_proxy"]) -> None: ...
global___GetTargetTcpProxyRequest = GetTargetTcpProxyRequest

class GetTargetVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for TargetVpnGateways.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    TARGET_VPN_GATEWAY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    target_vpn_gateway: typing.Text = ...
    """Name of the target VPN gateway to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        target_vpn_gateway : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","target_vpn_gateway",b"target_vpn_gateway"]) -> None: ...
global___GetTargetVpnGatewayRequest = GetTargetVpnGatewayRequest

class GetUrlMapRequest(google.protobuf.message.Message):
    """A request message for UrlMaps.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    url_map: typing.Text = ...
    """Name of the UrlMap resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        url_map : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","url_map",b"url_map"]) -> None: ...
global___GetUrlMapRequest = GetUrlMapRequest

class GetVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for VpnGateways.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    VPN_GATEWAY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    vpn_gateway: typing.Text = ...
    """Name of the VPN gateway to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        vpn_gateway : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","vpn_gateway",b"vpn_gateway"]) -> None: ...
global___GetVpnGatewayRequest = GetVpnGatewayRequest

class GetVpnTunnelRequest(google.protobuf.message.Message):
    """A request message for VpnTunnels.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    VPN_TUNNEL_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    vpn_tunnel: typing.Text = ...
    """Name of the VpnTunnel resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        vpn_tunnel : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","vpn_tunnel",b"vpn_tunnel"]) -> None: ...
global___GetVpnTunnelRequest = GetVpnTunnelRequest

class GetXpnHostProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.GetXpnHost. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project"]) -> None: ...
global___GetXpnHostProjectRequest = GetXpnHostProjectRequest

class GetXpnResourcesProjectsRequest(google.protobuf.message.Message):
    """A request message for Projects.GetXpnResources. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___GetXpnResourcesProjectsRequest = GetXpnResourcesProjectsRequest

class GetZoneOperationRequest(google.protobuf.message.Message):
    """A request message for ZoneOperations.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation",b"operation","project",b"project","zone",b"zone"]) -> None: ...
global___GetZoneOperationRequest = GetZoneOperationRequest

class GetZoneRequest(google.protobuf.message.Message):
    """A request message for Zones.Get. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """Name of the zone resource to return."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","zone",b"zone"]) -> None: ...
global___GetZoneRequest = GetZoneRequest

class GlobalNetworkEndpointGroupsAttachEndpointsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINTS_FIELD_NUMBER: builtins.int
    @property
    def network_endpoints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkEndpoint]:
        """The list of network endpoints to be attached."""
        pass
    def __init__(self,
        *,
        network_endpoints : typing.Optional[typing.Iterable[global___NetworkEndpoint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_endpoints",b"network_endpoints"]) -> None: ...
global___GlobalNetworkEndpointGroupsAttachEndpointsRequest = GlobalNetworkEndpointGroupsAttachEndpointsRequest

class GlobalNetworkEndpointGroupsDetachEndpointsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINTS_FIELD_NUMBER: builtins.int
    @property
    def network_endpoints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkEndpoint]:
        """The list of network endpoints to be detached."""
        pass
    def __init__(self,
        *,
        network_endpoints : typing.Optional[typing.Iterable[global___NetworkEndpoint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_endpoints",b"network_endpoints"]) -> None: ...
global___GlobalNetworkEndpointGroupsDetachEndpointsRequest = GlobalNetworkEndpointGroupsDetachEndpointsRequest

class GlobalOrganizationSetPolicyRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BINDINGS_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    POLICY_FIELD_NUMBER: builtins.int
    @property
    def bindings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Binding]:
        """Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify bindings."""
        pass
    etag: typing.Text = ...
    """Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag."""

    @property
    def policy(self) -> global___Policy:
        """REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them."""
        pass
    def __init__(self,
        *,
        bindings : typing.Optional[typing.Iterable[global___Binding]] = ...,
        etag : typing.Optional[typing.Text] = ...,
        policy : typing.Optional[global___Policy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_policy",b"_policy","etag",b"etag","policy",b"policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_policy",b"_policy","bindings",b"bindings","etag",b"etag","policy",b"policy"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_etag",b"_etag"]) -> typing.Optional[typing_extensions.Literal["etag"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_policy",b"_policy"]) -> typing.Optional[typing_extensions.Literal["policy"]]: ...
global___GlobalOrganizationSetPolicyRequest = GlobalOrganizationSetPolicyRequest

class GlobalSetLabelsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    label_fingerprint: typing.Text = ...
    """The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash when updating or changing labels, otherwise the request will fail with error 412 conditionNotMet. Make a get() request to the resource to get the latest fingerprint."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """A list of labels to apply for this resource. Each label key & value must comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. For example, "webserver-frontend": "images". A label value can also be empty (e.g. "my-label": "")."""
        pass
    def __init__(self,
        *,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint","label_fingerprint",b"label_fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint","label_fingerprint",b"label_fingerprint","labels",b"labels"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
global___GlobalSetLabelsRequest = GlobalSetLabelsRequest

class GlobalSetPolicyRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BINDINGS_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    POLICY_FIELD_NUMBER: builtins.int
    @property
    def bindings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Binding]:
        """Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify bindings."""
        pass
    etag: typing.Text = ...
    """Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag."""

    @property
    def policy(self) -> global___Policy:
        """REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them."""
        pass
    def __init__(self,
        *,
        bindings : typing.Optional[typing.Iterable[global___Binding]] = ...,
        etag : typing.Optional[typing.Text] = ...,
        policy : typing.Optional[global___Policy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_policy",b"_policy","etag",b"etag","policy",b"policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_policy",b"_policy","bindings",b"bindings","etag",b"etag","policy",b"policy"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_etag",b"_etag"]) -> typing.Optional[typing_extensions.Literal["etag"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_policy",b"_policy"]) -> typing.Optional[typing_extensions.Literal["policy"]]: ...
global___GlobalSetPolicyRequest = GlobalSetPolicyRequest

class GuestAttributes(google.protobuf.message.Message):
    """A guest attributes entry."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    QUERY_PATH_FIELD_NUMBER: builtins.int
    QUERY_VALUE_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    VARIABLE_KEY_FIELD_NUMBER: builtins.int
    VARIABLE_VALUE_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#guestAttributes for guest attributes entry."""

    query_path: typing.Text = ...
    """The path to be queried. This can be the default namespace ('') or a nested namespace ('\\/') or a specified key ('\\/\\')."""

    @property
    def query_value(self) -> global___GuestAttributesValue:
        """[Output Only] The value of the requested queried path."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    variable_key: typing.Text = ...
    """The key to search for."""

    variable_value: typing.Text = ...
    """[Output Only] The value found for the requested key."""

    def __init__(self,
        *,
        kind : typing.Optional[typing.Text] = ...,
        query_path : typing.Optional[typing.Text] = ...,
        query_value : typing.Optional[global___GuestAttributesValue] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        variable_key : typing.Optional[typing.Text] = ...,
        variable_value : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_kind",b"_kind","_query_path",b"_query_path","_query_value",b"_query_value","_self_link",b"_self_link","_variable_key",b"_variable_key","_variable_value",b"_variable_value","kind",b"kind","query_path",b"query_path","query_value",b"query_value","self_link",b"self_link","variable_key",b"variable_key","variable_value",b"variable_value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_kind",b"_kind","_query_path",b"_query_path","_query_value",b"_query_value","_self_link",b"_self_link","_variable_key",b"_variable_key","_variable_value",b"_variable_value","kind",b"kind","query_path",b"query_path","query_value",b"query_value","self_link",b"self_link","variable_key",b"variable_key","variable_value",b"variable_value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_query_path",b"_query_path"]) -> typing.Optional[typing_extensions.Literal["query_path"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_query_value",b"_query_value"]) -> typing.Optional[typing_extensions.Literal["query_value"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_variable_key",b"_variable_key"]) -> typing.Optional[typing_extensions.Literal["variable_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_variable_value",b"_variable_value"]) -> typing.Optional[typing_extensions.Literal["variable_value"]]: ...
global___GuestAttributes = GuestAttributes

class GuestAttributesEntry(google.protobuf.message.Message):
    """A guest attributes namespace/key/value entry."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """Key for the guest attribute entry."""

    namespace: typing.Text = ...
    """Namespace for the guest attribute entry."""

    value: typing.Text = ...
    """Value for the guest attribute entry."""

    def __init__(self,
        *,
        key : typing.Optional[typing.Text] = ...,
        namespace : typing.Optional[typing.Text] = ...,
        value : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_key",b"_key","_namespace",b"_namespace","_value",b"_value","key",b"key","namespace",b"namespace","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_key",b"_key","_namespace",b"_namespace","_value",b"_value","key",b"key","namespace",b"namespace","value",b"value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_key",b"_key"]) -> typing.Optional[typing_extensions.Literal["key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_namespace",b"_namespace"]) -> typing.Optional[typing_extensions.Literal["namespace"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value",b"_value"]) -> typing.Optional[typing_extensions.Literal["value"]]: ...
global___GuestAttributesEntry = GuestAttributesEntry

class GuestAttributesValue(google.protobuf.message.Message):
    """Array of guest attribute namespace/key/value tuples."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEMS_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GuestAttributesEntry]: ...
    def __init__(self,
        *,
        items : typing.Optional[typing.Iterable[global___GuestAttributesEntry]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["items",b"items"]) -> None: ...
global___GuestAttributesValue = GuestAttributesValue

class GuestOsFeature(google.protobuf.message.Message):
    """Guest OS features."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: GuestOsFeature.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        FEATURE_TYPE_UNSPECIFIED: GuestOsFeature.Type.ValueType = ...  # 531767259
        GVNIC: GuestOsFeature.Type.ValueType = ...  # 68209305
        MULTI_IP_SUBNET: GuestOsFeature.Type.ValueType = ...  # 151776719
        SECURE_BOOT: GuestOsFeature.Type.ValueType = ...  # 376811194
        SEV_CAPABLE: GuestOsFeature.Type.ValueType = ...  # 87083793
        UEFI_COMPATIBLE: GuestOsFeature.Type.ValueType = ...  # 195865408
        VIRTIO_SCSI_MULTIQUEUE: GuestOsFeature.Type.ValueType = ...  # 201597069
        WINDOWS: GuestOsFeature.Type.ValueType = ...  # 456863331
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The ID of a supported feature. Read Enabling guest operating system features to see a list of available options."""
        pass

    UNDEFINED_TYPE: GuestOsFeature.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    FEATURE_TYPE_UNSPECIFIED: GuestOsFeature.Type.ValueType = ...  # 531767259
    GVNIC: GuestOsFeature.Type.ValueType = ...  # 68209305
    MULTI_IP_SUBNET: GuestOsFeature.Type.ValueType = ...  # 151776719
    SECURE_BOOT: GuestOsFeature.Type.ValueType = ...  # 376811194
    SEV_CAPABLE: GuestOsFeature.Type.ValueType = ...  # 87083793
    UEFI_COMPATIBLE: GuestOsFeature.Type.ValueType = ...  # 195865408
    VIRTIO_SCSI_MULTIQUEUE: GuestOsFeature.Type.ValueType = ...  # 201597069
    WINDOWS: GuestOsFeature.Type.ValueType = ...  # 456863331

    TYPE_FIELD_NUMBER: builtins.int
    type: typing.Text = ...
    """The ID of a supported feature. Read Enabling guest operating system features to see a list of available options.
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_type",b"_type","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_type",b"_type","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___GuestOsFeature = GuestOsFeature

class HTTP2HealthCheck(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PortSpecification:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PortSpecificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PortSpecification.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PORT_SPECIFICATION: HTTP2HealthCheck.PortSpecification.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        USE_FIXED_PORT: HTTP2HealthCheck.PortSpecification.ValueType = ...  # 190235748
        """The port number in port is used for health checking."""

        USE_NAMED_PORT: HTTP2HealthCheck.PortSpecification.ValueType = ...  # 349300671
        """The portName is used for health checking."""

        USE_SERVING_PORT: HTTP2HealthCheck.PortSpecification.ValueType = ...  # 362637516
        """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""

    class PortSpecification(_PortSpecification, metaclass=_PortSpecificationEnumTypeWrapper):
        """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, HTTP2 health check follows behavior specified in port and portName fields."""
        pass

    UNDEFINED_PORT_SPECIFICATION: HTTP2HealthCheck.PortSpecification.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    USE_FIXED_PORT: HTTP2HealthCheck.PortSpecification.ValueType = ...  # 190235748
    """The port number in port is used for health checking."""

    USE_NAMED_PORT: HTTP2HealthCheck.PortSpecification.ValueType = ...  # 349300671
    """The portName is used for health checking."""

    USE_SERVING_PORT: HTTP2HealthCheck.PortSpecification.ValueType = ...  # 362637516
    """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""


    class _ProxyHeader:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProxyHeaderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProxyHeader.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROXY_HEADER: HTTP2HealthCheck.ProxyHeader.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NONE: HTTP2HealthCheck.ProxyHeader.ValueType = ...  # 2402104
        PROXY_V1: HTTP2HealthCheck.ProxyHeader.ValueType = ...  # 334352940
    class ProxyHeader(_ProxyHeader, metaclass=_ProxyHeaderEnumTypeWrapper):
        """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE."""
        pass

    UNDEFINED_PROXY_HEADER: HTTP2HealthCheck.ProxyHeader.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NONE: HTTP2HealthCheck.ProxyHeader.ValueType = ...  # 2402104
    PROXY_V1: HTTP2HealthCheck.ProxyHeader.ValueType = ...  # 334352940

    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    PORT_NAME_FIELD_NUMBER: builtins.int
    PORT_SPECIFICATION_FIELD_NUMBER: builtins.int
    PROXY_HEADER_FIELD_NUMBER: builtins.int
    REQUEST_PATH_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    host: typing.Text = ...
    """The value of the host header in the HTTP/2 health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used."""

    port: builtins.int = ...
    """The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535."""

    port_name: typing.Text = ...
    """Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence."""

    port_specification: typing.Text = ...
    """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, HTTP2 health check follows behavior specified in port and portName fields.
    Check the PortSpecification enum for the list of possible values.
    """

    proxy_header: typing.Text = ...
    """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    Check the ProxyHeader enum for the list of possible values.
    """

    request_path: typing.Text = ...
    """The request path of the HTTP/2 health check request. The default value is /."""

    response: typing.Text = ...
    """The string to match anywhere in the first 1024 bytes of the response body. If left empty (the default value), the status code determines health. The response data can only be ASCII."""

    def __init__(self,
        *,
        host : typing.Optional[typing.Text] = ...,
        port : typing.Optional[builtins.int] = ...,
        port_name : typing.Optional[typing.Text] = ...,
        port_specification : typing.Optional[typing.Text] = ...,
        proxy_header : typing.Optional[typing.Text] = ...,
        request_path : typing.Optional[typing.Text] = ...,
        response : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_host",b"_host","_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","_proxy_header",b"_proxy_header","_request_path",b"_request_path","_response",b"_response","host",b"host","port",b"port","port_name",b"port_name","port_specification",b"port_specification","proxy_header",b"proxy_header","request_path",b"request_path","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_host",b"_host","_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","_proxy_header",b"_proxy_header","_request_path",b"_request_path","_response",b"_response","host",b"host","port",b"port","port_name",b"port_name","port_specification",b"port_specification","proxy_header",b"proxy_header","request_path",b"request_path","response",b"response"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_host",b"_host"]) -> typing.Optional[typing_extensions.Literal["host"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_name",b"_port_name"]) -> typing.Optional[typing_extensions.Literal["port_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_specification",b"_port_specification"]) -> typing.Optional[typing_extensions.Literal["port_specification"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_header",b"_proxy_header"]) -> typing.Optional[typing_extensions.Literal["proxy_header"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_path",b"_request_path"]) -> typing.Optional[typing_extensions.Literal["request_path"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_response",b"_response"]) -> typing.Optional[typing_extensions.Literal["response"]]: ...
global___HTTP2HealthCheck = HTTP2HealthCheck

class HTTPHealthCheck(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PortSpecification:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PortSpecificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PortSpecification.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PORT_SPECIFICATION: HTTPHealthCheck.PortSpecification.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        USE_FIXED_PORT: HTTPHealthCheck.PortSpecification.ValueType = ...  # 190235748
        """The port number in port is used for health checking."""

        USE_NAMED_PORT: HTTPHealthCheck.PortSpecification.ValueType = ...  # 349300671
        """The portName is used for health checking."""

        USE_SERVING_PORT: HTTPHealthCheck.PortSpecification.ValueType = ...  # 362637516
        """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""

    class PortSpecification(_PortSpecification, metaclass=_PortSpecificationEnumTypeWrapper):
        """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, HTTP health check follows behavior specified in port and portName fields."""
        pass

    UNDEFINED_PORT_SPECIFICATION: HTTPHealthCheck.PortSpecification.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    USE_FIXED_PORT: HTTPHealthCheck.PortSpecification.ValueType = ...  # 190235748
    """The port number in port is used for health checking."""

    USE_NAMED_PORT: HTTPHealthCheck.PortSpecification.ValueType = ...  # 349300671
    """The portName is used for health checking."""

    USE_SERVING_PORT: HTTPHealthCheck.PortSpecification.ValueType = ...  # 362637516
    """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""


    class _ProxyHeader:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProxyHeaderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProxyHeader.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROXY_HEADER: HTTPHealthCheck.ProxyHeader.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NONE: HTTPHealthCheck.ProxyHeader.ValueType = ...  # 2402104
        PROXY_V1: HTTPHealthCheck.ProxyHeader.ValueType = ...  # 334352940
    class ProxyHeader(_ProxyHeader, metaclass=_ProxyHeaderEnumTypeWrapper):
        """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE."""
        pass

    UNDEFINED_PROXY_HEADER: HTTPHealthCheck.ProxyHeader.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NONE: HTTPHealthCheck.ProxyHeader.ValueType = ...  # 2402104
    PROXY_V1: HTTPHealthCheck.ProxyHeader.ValueType = ...  # 334352940

    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    PORT_NAME_FIELD_NUMBER: builtins.int
    PORT_SPECIFICATION_FIELD_NUMBER: builtins.int
    PROXY_HEADER_FIELD_NUMBER: builtins.int
    REQUEST_PATH_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    host: typing.Text = ...
    """The value of the host header in the HTTP health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used."""

    port: builtins.int = ...
    """The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535."""

    port_name: typing.Text = ...
    """Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence."""

    port_specification: typing.Text = ...
    """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, HTTP health check follows behavior specified in port and portName fields.
    Check the PortSpecification enum for the list of possible values.
    """

    proxy_header: typing.Text = ...
    """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    Check the ProxyHeader enum for the list of possible values.
    """

    request_path: typing.Text = ...
    """The request path of the HTTP health check request. The default value is /."""

    response: typing.Text = ...
    """The string to match anywhere in the first 1024 bytes of the response body. If left empty (the default value), the status code determines health. The response data can only be ASCII."""

    def __init__(self,
        *,
        host : typing.Optional[typing.Text] = ...,
        port : typing.Optional[builtins.int] = ...,
        port_name : typing.Optional[typing.Text] = ...,
        port_specification : typing.Optional[typing.Text] = ...,
        proxy_header : typing.Optional[typing.Text] = ...,
        request_path : typing.Optional[typing.Text] = ...,
        response : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_host",b"_host","_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","_proxy_header",b"_proxy_header","_request_path",b"_request_path","_response",b"_response","host",b"host","port",b"port","port_name",b"port_name","port_specification",b"port_specification","proxy_header",b"proxy_header","request_path",b"request_path","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_host",b"_host","_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","_proxy_header",b"_proxy_header","_request_path",b"_request_path","_response",b"_response","host",b"host","port",b"port","port_name",b"port_name","port_specification",b"port_specification","proxy_header",b"proxy_header","request_path",b"request_path","response",b"response"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_host",b"_host"]) -> typing.Optional[typing_extensions.Literal["host"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_name",b"_port_name"]) -> typing.Optional[typing_extensions.Literal["port_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_specification",b"_port_specification"]) -> typing.Optional[typing_extensions.Literal["port_specification"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_header",b"_proxy_header"]) -> typing.Optional[typing_extensions.Literal["proxy_header"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_path",b"_request_path"]) -> typing.Optional[typing_extensions.Literal["request_path"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_response",b"_response"]) -> typing.Optional[typing_extensions.Literal["response"]]: ...
global___HTTPHealthCheck = HTTPHealthCheck

class HTTPSHealthCheck(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PortSpecification:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PortSpecificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PortSpecification.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PORT_SPECIFICATION: HTTPSHealthCheck.PortSpecification.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        USE_FIXED_PORT: HTTPSHealthCheck.PortSpecification.ValueType = ...  # 190235748
        """The port number in port is used for health checking."""

        USE_NAMED_PORT: HTTPSHealthCheck.PortSpecification.ValueType = ...  # 349300671
        """The portName is used for health checking."""

        USE_SERVING_PORT: HTTPSHealthCheck.PortSpecification.ValueType = ...  # 362637516
        """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""

    class PortSpecification(_PortSpecification, metaclass=_PortSpecificationEnumTypeWrapper):
        """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, HTTPS health check follows behavior specified in port and portName fields."""
        pass

    UNDEFINED_PORT_SPECIFICATION: HTTPSHealthCheck.PortSpecification.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    USE_FIXED_PORT: HTTPSHealthCheck.PortSpecification.ValueType = ...  # 190235748
    """The port number in port is used for health checking."""

    USE_NAMED_PORT: HTTPSHealthCheck.PortSpecification.ValueType = ...  # 349300671
    """The portName is used for health checking."""

    USE_SERVING_PORT: HTTPSHealthCheck.PortSpecification.ValueType = ...  # 362637516
    """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""


    class _ProxyHeader:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProxyHeaderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProxyHeader.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROXY_HEADER: HTTPSHealthCheck.ProxyHeader.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NONE: HTTPSHealthCheck.ProxyHeader.ValueType = ...  # 2402104
        PROXY_V1: HTTPSHealthCheck.ProxyHeader.ValueType = ...  # 334352940
    class ProxyHeader(_ProxyHeader, metaclass=_ProxyHeaderEnumTypeWrapper):
        """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE."""
        pass

    UNDEFINED_PROXY_HEADER: HTTPSHealthCheck.ProxyHeader.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NONE: HTTPSHealthCheck.ProxyHeader.ValueType = ...  # 2402104
    PROXY_V1: HTTPSHealthCheck.ProxyHeader.ValueType = ...  # 334352940

    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    PORT_NAME_FIELD_NUMBER: builtins.int
    PORT_SPECIFICATION_FIELD_NUMBER: builtins.int
    PROXY_HEADER_FIELD_NUMBER: builtins.int
    REQUEST_PATH_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    host: typing.Text = ...
    """The value of the host header in the HTTPS health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used."""

    port: builtins.int = ...
    """The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535."""

    port_name: typing.Text = ...
    """Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence."""

    port_specification: typing.Text = ...
    """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, HTTPS health check follows behavior specified in port and portName fields.
    Check the PortSpecification enum for the list of possible values.
    """

    proxy_header: typing.Text = ...
    """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    Check the ProxyHeader enum for the list of possible values.
    """

    request_path: typing.Text = ...
    """The request path of the HTTPS health check request. The default value is /."""

    response: typing.Text = ...
    """The string to match anywhere in the first 1024 bytes of the response body. If left empty (the default value), the status code determines health. The response data can only be ASCII."""

    def __init__(self,
        *,
        host : typing.Optional[typing.Text] = ...,
        port : typing.Optional[builtins.int] = ...,
        port_name : typing.Optional[typing.Text] = ...,
        port_specification : typing.Optional[typing.Text] = ...,
        proxy_header : typing.Optional[typing.Text] = ...,
        request_path : typing.Optional[typing.Text] = ...,
        response : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_host",b"_host","_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","_proxy_header",b"_proxy_header","_request_path",b"_request_path","_response",b"_response","host",b"host","port",b"port","port_name",b"port_name","port_specification",b"port_specification","proxy_header",b"proxy_header","request_path",b"request_path","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_host",b"_host","_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","_proxy_header",b"_proxy_header","_request_path",b"_request_path","_response",b"_response","host",b"host","port",b"port","port_name",b"port_name","port_specification",b"port_specification","proxy_header",b"proxy_header","request_path",b"request_path","response",b"response"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_host",b"_host"]) -> typing.Optional[typing_extensions.Literal["host"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_name",b"_port_name"]) -> typing.Optional[typing_extensions.Literal["port_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_specification",b"_port_specification"]) -> typing.Optional[typing_extensions.Literal["port_specification"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_header",b"_proxy_header"]) -> typing.Optional[typing_extensions.Literal["proxy_header"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_path",b"_request_path"]) -> typing.Optional[typing_extensions.Literal["request_path"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_response",b"_response"]) -> typing.Optional[typing_extensions.Literal["response"]]: ...
global___HTTPSHealthCheck = HTTPSHealthCheck

class HealthCheck(google.protobuf.message.Message):
    """Represents a Health Check resource. Google Compute Engine has two Health Check resources: * [Global](/compute/docs/reference/rest/v1/healthChecks) * [Regional](/compute/docs/reference/rest/v1/regionHealthChecks) Internal HTTP(S) load balancers must use regional health checks (`compute.v1.regionHealthChecks`). Traffic Director must use global health checks (`compute.v1.HealthChecks`). Internal TCP/UDP load balancers can use either regional or global health checks (`compute.v1.regionHealthChecks` or `compute.v1.HealthChecks`). External HTTP(S), TCP proxy, and SSL proxy load balancers as well as managed instance group auto-healing must use global health checks (`compute.v1.HealthChecks`). Backend service-based network load balancers must use regional health checks (`compute.v1.regionHealthChecks`). Target pool-based network load balancers must use legacy HTTP health checks (`compute.v1.httpHealthChecks`). For more information, see Health checks overview."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: HealthCheck.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        GRPC: HealthCheck.Type.ValueType = ...  # 2196510
        HTTP: HealthCheck.Type.ValueType = ...  # 2228360
        HTTP2: HealthCheck.Type.ValueType = ...  # 69079210
        HTTPS: HealthCheck.Type.ValueType = ...  # 69079243
        INVALID: HealthCheck.Type.ValueType = ...  # 530283991
        SSL: HealthCheck.Type.ValueType = ...  # 82412
        TCP: HealthCheck.Type.ValueType = ...  # 82881
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS or HTTP2. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field."""
        pass

    UNDEFINED_TYPE: HealthCheck.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    GRPC: HealthCheck.Type.ValueType = ...  # 2196510
    HTTP: HealthCheck.Type.ValueType = ...  # 2228360
    HTTP2: HealthCheck.Type.ValueType = ...  # 69079210
    HTTPS: HealthCheck.Type.ValueType = ...  # 69079243
    INVALID: HealthCheck.Type.ValueType = ...  # 530283991
    SSL: HealthCheck.Type.ValueType = ...  # 82412
    TCP: HealthCheck.Type.ValueType = ...  # 82881

    CHECK_INTERVAL_SEC_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    GRPC_HEALTH_CHECK_FIELD_NUMBER: builtins.int
    HEALTHY_THRESHOLD_FIELD_NUMBER: builtins.int
    HTTP2_HEALTH_CHECK_FIELD_NUMBER: builtins.int
    HTTP_HEALTH_CHECK_FIELD_NUMBER: builtins.int
    HTTPS_HEALTH_CHECK_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LOG_CONFIG_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SSL_HEALTH_CHECK_FIELD_NUMBER: builtins.int
    TCP_HEALTH_CHECK_FIELD_NUMBER: builtins.int
    TIMEOUT_SEC_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    UNHEALTHY_THRESHOLD_FIELD_NUMBER: builtins.int
    check_interval_sec: builtins.int = ...
    """How often (in seconds) to send a health check. The default value is 5 seconds."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in 3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    @property
    def grpc_health_check(self) -> global___GRPCHealthCheck: ...
    healthy_threshold: builtins.int = ...
    """A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2."""

    @property
    def http2_health_check(self) -> global___HTTP2HealthCheck: ...
    @property
    def http_health_check(self) -> global___HTTPHealthCheck: ...
    @property
    def https_health_check(self) -> global___HTTPSHealthCheck: ...
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """Type of the resource."""

    @property
    def log_config(self) -> global___HealthCheckLogConfig:
        """Configure logging on this health check."""
        pass
    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. For example, a name that is 1-63 characters long, matches the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`, and otherwise complies with RFC1035. This regular expression describes a name where the first character is a lowercase letter, and all following characters are a dash, lowercase letter, or digit, except the last character, which isn't a dash."""

    region: typing.Text = ...
    """[Output Only] Region where the health check resides. Not applicable to global health checks."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def ssl_health_check(self) -> global___SSLHealthCheck: ...
    @property
    def tcp_health_check(self) -> global___TCPHealthCheck: ...
    timeout_sec: builtins.int = ...
    """How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec."""

    type: typing.Text = ...
    """Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS or HTTP2. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.
    Check the Type enum for the list of possible values.
    """

    unhealthy_threshold: builtins.int = ...
    """A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2."""

    def __init__(self,
        *,
        check_interval_sec : typing.Optional[builtins.int] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        grpc_health_check : typing.Optional[global___GRPCHealthCheck] = ...,
        healthy_threshold : typing.Optional[builtins.int] = ...,
        http2_health_check : typing.Optional[global___HTTP2HealthCheck] = ...,
        http_health_check : typing.Optional[global___HTTPHealthCheck] = ...,
        https_health_check : typing.Optional[global___HTTPSHealthCheck] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        log_config : typing.Optional[global___HealthCheckLogConfig] = ...,
        name : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        ssl_health_check : typing.Optional[global___SSLHealthCheck] = ...,
        tcp_health_check : typing.Optional[global___TCPHealthCheck] = ...,
        timeout_sec : typing.Optional[builtins.int] = ...,
        type : typing.Optional[typing.Text] = ...,
        unhealthy_threshold : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_check_interval_sec",b"_check_interval_sec","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_grpc_health_check",b"_grpc_health_check","_healthy_threshold",b"_healthy_threshold","_http2_health_check",b"_http2_health_check","_http_health_check",b"_http_health_check","_https_health_check",b"_https_health_check","_id",b"_id","_kind",b"_kind","_log_config",b"_log_config","_name",b"_name","_region",b"_region","_self_link",b"_self_link","_ssl_health_check",b"_ssl_health_check","_tcp_health_check",b"_tcp_health_check","_timeout_sec",b"_timeout_sec","_type",b"_type","_unhealthy_threshold",b"_unhealthy_threshold","check_interval_sec",b"check_interval_sec","creation_timestamp",b"creation_timestamp","description",b"description","grpc_health_check",b"grpc_health_check","healthy_threshold",b"healthy_threshold","http2_health_check",b"http2_health_check","http_health_check",b"http_health_check","https_health_check",b"https_health_check","id",b"id","kind",b"kind","log_config",b"log_config","name",b"name","region",b"region","self_link",b"self_link","ssl_health_check",b"ssl_health_check","tcp_health_check",b"tcp_health_check","timeout_sec",b"timeout_sec","type",b"type","unhealthy_threshold",b"unhealthy_threshold"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_check_interval_sec",b"_check_interval_sec","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_grpc_health_check",b"_grpc_health_check","_healthy_threshold",b"_healthy_threshold","_http2_health_check",b"_http2_health_check","_http_health_check",b"_http_health_check","_https_health_check",b"_https_health_check","_id",b"_id","_kind",b"_kind","_log_config",b"_log_config","_name",b"_name","_region",b"_region","_self_link",b"_self_link","_ssl_health_check",b"_ssl_health_check","_tcp_health_check",b"_tcp_health_check","_timeout_sec",b"_timeout_sec","_type",b"_type","_unhealthy_threshold",b"_unhealthy_threshold","check_interval_sec",b"check_interval_sec","creation_timestamp",b"creation_timestamp","description",b"description","grpc_health_check",b"grpc_health_check","healthy_threshold",b"healthy_threshold","http2_health_check",b"http2_health_check","http_health_check",b"http_health_check","https_health_check",b"https_health_check","id",b"id","kind",b"kind","log_config",b"log_config","name",b"name","region",b"region","self_link",b"self_link","ssl_health_check",b"ssl_health_check","tcp_health_check",b"tcp_health_check","timeout_sec",b"timeout_sec","type",b"type","unhealthy_threshold",b"unhealthy_threshold"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_check_interval_sec",b"_check_interval_sec"]) -> typing.Optional[typing_extensions.Literal["check_interval_sec"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_grpc_health_check",b"_grpc_health_check"]) -> typing.Optional[typing_extensions.Literal["grpc_health_check"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_healthy_threshold",b"_healthy_threshold"]) -> typing.Optional[typing_extensions.Literal["healthy_threshold"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_http2_health_check",b"_http2_health_check"]) -> typing.Optional[typing_extensions.Literal["http2_health_check"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_http_health_check",b"_http_health_check"]) -> typing.Optional[typing_extensions.Literal["http_health_check"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_https_health_check",b"_https_health_check"]) -> typing.Optional[typing_extensions.Literal["https_health_check"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_log_config",b"_log_config"]) -> typing.Optional[typing_extensions.Literal["log_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ssl_health_check",b"_ssl_health_check"]) -> typing.Optional[typing_extensions.Literal["ssl_health_check"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tcp_health_check",b"_tcp_health_check"]) -> typing.Optional[typing_extensions.Literal["tcp_health_check"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_timeout_sec",b"_timeout_sec"]) -> typing.Optional[typing_extensions.Literal["timeout_sec"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_unhealthy_threshold",b"_unhealthy_threshold"]) -> typing.Optional[typing_extensions.Literal["unhealthy_threshold"]]: ...
global___HealthCheck = HealthCheck

class HealthCheckList(google.protobuf.message.Message):
    """Contains a list of HealthCheck resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HealthCheck]:
        """A list of HealthCheck resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___HealthCheck]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___HealthCheckList = HealthCheckList

class HealthCheckLogConfig(google.protobuf.message.Message):
    """Configuration of logging on a health check. If logging is enabled, logs will be exported to Stackdriver."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_FIELD_NUMBER: builtins.int
    enable: builtins.bool = ...
    """Indicates whether or not to export logs. This is false by default, which means no health check logging will be done."""

    def __init__(self,
        *,
        enable : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enable",b"_enable","enable",b"enable"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enable",b"_enable","enable",b"enable"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable",b"_enable"]) -> typing.Optional[typing_extensions.Literal["enable"]]: ...
global___HealthCheckLogConfig = HealthCheckLogConfig

class HealthCheckReference(google.protobuf.message.Message):
    """A full or valid partial URL to a health check. For example, the following are valid URLs: - https://www.googleapis.com/compute/beta/projects/project-id/global/httpHealthChecks/health-check - projects/project-id/global/httpHealthChecks/health-check - global/httpHealthChecks/health-check"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    health_check: typing.Text = ...
    def __init__(self,
        *,
        health_check : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_health_check",b"_health_check","health_check",b"health_check"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_health_check",b"_health_check","health_check",b"health_check"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_health_check",b"_health_check"]) -> typing.Optional[typing_extensions.Literal["health_check"]]: ...
global___HealthCheckReference = HealthCheckReference

class HealthCheckService(google.protobuf.message.Message):
    """Represents a Health-Check as a Service resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _HealthStatusAggregationPolicy:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _HealthStatusAggregationPolicyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HealthStatusAggregationPolicy.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_HEALTH_STATUS_AGGREGATION_POLICY: HealthCheckService.HealthStatusAggregationPolicy.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        AND: HealthCheckService.HealthStatusAggregationPolicy.ValueType = ...  # 64951
        """If any backend's health check reports UNHEALTHY, then UNHEALTHY is the HealthState of the entire health check service. If all backend's are healthy, the HealthState of the health check service is HEALTHY."""

        NO_AGGREGATION: HealthCheckService.HealthStatusAggregationPolicy.ValueType = ...  # 426445124
        """An EndpointHealth message is returned for each backend in the health check service."""

    class HealthStatusAggregationPolicy(_HealthStatusAggregationPolicy, metaclass=_HealthStatusAggregationPolicyEnumTypeWrapper):
        """Optional. Policy for how the results from multiple health checks for the same endpoint are aggregated. Defaults to NO_AGGREGATION if unspecified. - NO_AGGREGATION. An EndpointHealth message is returned for each pair in the health check service. - AND. If any health check of an endpoint reports UNHEALTHY, then UNHEALTHY is the HealthState of the endpoint. If all health checks report HEALTHY, the HealthState of the endpoint is HEALTHY. ."""
        pass

    UNDEFINED_HEALTH_STATUS_AGGREGATION_POLICY: HealthCheckService.HealthStatusAggregationPolicy.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    AND: HealthCheckService.HealthStatusAggregationPolicy.ValueType = ...  # 64951
    """If any backend's health check reports UNHEALTHY, then UNHEALTHY is the HealthState of the entire health check service. If all backend's are healthy, the HealthState of the health check service is HEALTHY."""

    NO_AGGREGATION: HealthCheckService.HealthStatusAggregationPolicy.ValueType = ...  # 426445124
    """An EndpointHealth message is returned for each backend in the health check service."""


    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    HEALTH_CHECKS_FIELD_NUMBER: builtins.int
    HEALTH_STATUS_AGGREGATION_POLICY_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_ENDPOINT_GROUPS_FIELD_NUMBER: builtins.int
    NOTIFICATION_ENDPOINTS_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a HealthCheckService. An up-to-date fingerprint must be provided in order to patch/update the HealthCheckService; Otherwise, the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the HealthCheckService."""

    @property
    def health_checks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of URLs to the HealthCheck resources. Must have at least one HealthCheck, and not more than 10. HealthCheck resources must have portSpecification=USE_SERVING_PORT or portSpecification=USE_FIXED_PORT. For regional HealthCheckService, the HealthCheck must be regional and in the same region. For global HealthCheckService, HealthCheck must be global. Mix of regional and global HealthChecks is not supported. Multiple regional HealthChecks must belong to the same region. Regional HealthChecks must belong to the same region as zones of NEGs."""
        pass
    health_status_aggregation_policy: typing.Text = ...
    """Optional. Policy for how the results from multiple health checks for the same endpoint are aggregated. Defaults to NO_AGGREGATION if unspecified. - NO_AGGREGATION. An EndpointHealth message is returned for each pair in the health check service. - AND. If any health check of an endpoint reports UNHEALTHY, then UNHEALTHY is the HealthState of the endpoint. If all health checks report HEALTHY, the HealthState of the endpoint is HEALTHY. .
    Check the HealthStatusAggregationPolicy enum for the list of possible values.
    """

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output only] Type of the resource. Always compute#healthCheckServicefor health check services."""

    name: typing.Text = ...
    """Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def network_endpoint_groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of URLs to the NetworkEndpointGroup resources. Must not have more than 100. For regional HealthCheckService, NEGs must be in zones in the region of the HealthCheckService."""
        pass
    @property
    def notification_endpoints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of URLs to the NotificationEndpoint resources. Must not have more than 10. A list of endpoints for receiving notifications of change in health status. For regional HealthCheckService, NotificationEndpoint must be regional and in the same region. For global HealthCheckService, NotificationEndpoint must be global."""
        pass
    region: typing.Text = ...
    """[Output Only] URL of the region where the health check service resides. This field is not applicable to global health check services. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        health_checks : typing.Optional[typing.Iterable[typing.Text]] = ...,
        health_status_aggregation_policy : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        network_endpoint_groups : typing.Optional[typing.Iterable[typing.Text]] = ...,
        notification_endpoints : typing.Optional[typing.Iterable[typing.Text]] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_health_status_aggregation_policy",b"_health_status_aggregation_policy","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","health_status_aggregation_policy",b"health_status_aggregation_policy","id",b"id","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_health_status_aggregation_policy",b"_health_status_aggregation_policy","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","health_checks",b"health_checks","health_status_aggregation_policy",b"health_status_aggregation_policy","id",b"id","kind",b"kind","name",b"name","network_endpoint_groups",b"network_endpoint_groups","notification_endpoints",b"notification_endpoints","region",b"region","self_link",b"self_link"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_health_status_aggregation_policy",b"_health_status_aggregation_policy"]) -> typing.Optional[typing_extensions.Literal["health_status_aggregation_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___HealthCheckService = HealthCheckService

class HealthCheckServiceReference(google.protobuf.message.Message):
    """A full or valid partial URL to a health check service. For example, the following are valid URLs: - https://www.googleapis.com/compute/beta/projects/project-id/regions/us-west1/healthCheckServices/health-check-service - projects/project-id/regions/us-west1/healthCheckServices/health-check-service - regions/us-west1/healthCheckServices/health-check-service"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_SERVICE_FIELD_NUMBER: builtins.int
    health_check_service: typing.Text = ...
    def __init__(self,
        *,
        health_check_service : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_health_check_service",b"_health_check_service","health_check_service",b"health_check_service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_health_check_service",b"_health_check_service","health_check_service",b"health_check_service"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_health_check_service",b"_health_check_service"]) -> typing.Optional[typing_extensions.Literal["health_check_service"]]: ...
global___HealthCheckServiceReference = HealthCheckServiceReference

class HealthCheckServicesList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HealthCheckService]:
        """A list of HealthCheckService resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#healthCheckServicesList for lists of HealthCheckServices."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___HealthCheckService]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___HealthCheckServicesList = HealthCheckServicesList

class HealthChecksAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___HealthChecksScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___HealthChecksScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___HealthChecksScopedList]:
        """A list of HealthChecksScopedList resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___HealthChecksScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___HealthChecksAggregatedList = HealthChecksAggregatedList

class HealthChecksScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECKS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def health_checks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HealthCheck]:
        """A list of HealthChecks contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of backend services when the list is empty."""
        pass
    def __init__(self,
        *,
        health_checks : typing.Optional[typing.Iterable[global___HealthCheck]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","health_checks",b"health_checks","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___HealthChecksScopedList = HealthChecksScopedList

class HealthStatus(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _HealthState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _HealthStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HealthState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_HEALTH_STATE: HealthStatus.HealthState.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        HEALTHY: HealthStatus.HealthState.ValueType = ...  # 439801213
        UNHEALTHY: HealthStatus.HealthState.ValueType = ...  # 462118084
    class HealthState(_HealthState, metaclass=_HealthStateEnumTypeWrapper):
        """Health state of the instance."""
        pass

    UNDEFINED_HEALTH_STATE: HealthStatus.HealthState.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    HEALTHY: HealthStatus.HealthState.ValueType = ...  # 439801213
    UNHEALTHY: HealthStatus.HealthState.ValueType = ...  # 462118084

    class _WeightError:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _WeightErrorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_WeightError.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_WEIGHT_ERROR: HealthStatus.WeightError.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        INVALID_WEIGHT: HealthStatus.WeightError.ValueType = ...  # 383698400
        """The response to a Health Check probe had the HTTP response header field X-Load-Balancing-Endpoint-Weight, but its content was invalid (i.e., not a non-negative single-precision floating-point number in decimal string representation)."""

        MISSING_WEIGHT: HealthStatus.WeightError.ValueType = ...  # 384027537
        """The response to a Health Check probe did not have the HTTP response header field X-Load-Balancing-Endpoint-Weight."""

        UNAVAILABLE_WEIGHT: HealthStatus.WeightError.ValueType = ...  # 439464295
        """This is the value when the accompanied health status is either TIMEOUT (i.e.,the Health Check probe was not able to get a response in time) or UNKNOWN. For the latter, it should be typically because there has not been sufficient time to parse and report the weight for a new backend (which is with 0.0.0.0 ip address). However, it can be also due to an outage case for which the health status is explicitly reset to UNKNOWN."""

        WEIGHT_NONE: HealthStatus.WeightError.ValueType = ...  # 502428831
        """This is the default value when WeightReportMode is DISABLE, and is also the initial value when WeightReportMode has just updated to ENABLE or DRY_RUN and there has not been sufficient time to parse and report the backend weight."""

    class WeightError(_WeightError, metaclass=_WeightErrorEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_WEIGHT_ERROR: HealthStatus.WeightError.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    INVALID_WEIGHT: HealthStatus.WeightError.ValueType = ...  # 383698400
    """The response to a Health Check probe had the HTTP response header field X-Load-Balancing-Endpoint-Weight, but its content was invalid (i.e., not a non-negative single-precision floating-point number in decimal string representation)."""

    MISSING_WEIGHT: HealthStatus.WeightError.ValueType = ...  # 384027537
    """The response to a Health Check probe did not have the HTTP response header field X-Load-Balancing-Endpoint-Weight."""

    UNAVAILABLE_WEIGHT: HealthStatus.WeightError.ValueType = ...  # 439464295
    """This is the value when the accompanied health status is either TIMEOUT (i.e.,the Health Check probe was not able to get a response in time) or UNKNOWN. For the latter, it should be typically because there has not been sufficient time to parse and report the weight for a new backend (which is with 0.0.0.0 ip address). However, it can be also due to an outage case for which the health status is explicitly reset to UNKNOWN."""

    WEIGHT_NONE: HealthStatus.WeightError.ValueType = ...  # 502428831
    """This is the default value when WeightReportMode is DISABLE, and is also the initial value when WeightReportMode has just updated to ENABLE or DRY_RUN and there has not been sufficient time to parse and report the backend weight."""


    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    FORWARDING_RULE_IP_FIELD_NUMBER: builtins.int
    HEALTH_STATE_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    WEIGHT_FIELD_NUMBER: builtins.int
    WEIGHT_ERROR_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Metadata defined as annotations for network endpoint."""
        pass
    forwarding_rule: typing.Text = ...
    """URL of the forwarding rule associated with the health status of the instance."""

    forwarding_rule_ip: typing.Text = ...
    """A forwarding rule IP address assigned to this instance."""

    health_state: typing.Text = ...
    """Health state of the instance.
    Check the HealthState enum for the list of possible values.
    """

    instance: typing.Text = ...
    """URL of the instance resource."""

    ip_address: typing.Text = ...
    """For target pool based Network Load Balancing, it indicates the forwarding rule's IP address assigned to this instance. For other types of load balancing, the field indicates VM internal ip."""

    port: builtins.int = ...
    """The named port of the instance group, not necessarily the port that is health-checked."""

    weight: typing.Text = ...
    weight_error: typing.Text = ...
    """
    Check the WeightError enum for the list of possible values.
    """

    def __init__(self,
        *,
        annotations : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        forwarding_rule : typing.Optional[typing.Text] = ...,
        forwarding_rule_ip : typing.Optional[typing.Text] = ...,
        health_state : typing.Optional[typing.Text] = ...,
        instance : typing.Optional[typing.Text] = ...,
        ip_address : typing.Optional[typing.Text] = ...,
        port : typing.Optional[builtins.int] = ...,
        weight : typing.Optional[typing.Text] = ...,
        weight_error : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_forwarding_rule",b"_forwarding_rule","_forwarding_rule_ip",b"_forwarding_rule_ip","_health_state",b"_health_state","_instance",b"_instance","_ip_address",b"_ip_address","_port",b"_port","_weight",b"_weight","_weight_error",b"_weight_error","forwarding_rule",b"forwarding_rule","forwarding_rule_ip",b"forwarding_rule_ip","health_state",b"health_state","instance",b"instance","ip_address",b"ip_address","port",b"port","weight",b"weight","weight_error",b"weight_error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_forwarding_rule",b"_forwarding_rule","_forwarding_rule_ip",b"_forwarding_rule_ip","_health_state",b"_health_state","_instance",b"_instance","_ip_address",b"_ip_address","_port",b"_port","_weight",b"_weight","_weight_error",b"_weight_error","annotations",b"annotations","forwarding_rule",b"forwarding_rule","forwarding_rule_ip",b"forwarding_rule_ip","health_state",b"health_state","instance",b"instance","ip_address",b"ip_address","port",b"port","weight",b"weight","weight_error",b"weight_error"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_forwarding_rule",b"_forwarding_rule"]) -> typing.Optional[typing_extensions.Literal["forwarding_rule"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_forwarding_rule_ip",b"_forwarding_rule_ip"]) -> typing.Optional[typing_extensions.Literal["forwarding_rule_ip"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_health_state",b"_health_state"]) -> typing.Optional[typing_extensions.Literal["health_state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance",b"_instance"]) -> typing.Optional[typing_extensions.Literal["instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_address",b"_ip_address"]) -> typing.Optional[typing_extensions.Literal["ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_weight",b"_weight"]) -> typing.Optional[typing_extensions.Literal["weight"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_weight_error",b"_weight_error"]) -> typing.Optional[typing_extensions.Literal["weight_error"]]: ...
global___HealthStatus = HealthStatus

class HealthStatusForNetworkEndpoint(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _HealthState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _HealthStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HealthState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_HEALTH_STATE: HealthStatusForNetworkEndpoint.HealthState.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DRAINING: HealthStatusForNetworkEndpoint.HealthState.ValueType = ...  # 480455402
        HEALTHY: HealthStatusForNetworkEndpoint.HealthState.ValueType = ...  # 439801213
        UNHEALTHY: HealthStatusForNetworkEndpoint.HealthState.ValueType = ...  # 462118084
        UNKNOWN: HealthStatusForNetworkEndpoint.HealthState.ValueType = ...  # 433141802
    class HealthState(_HealthState, metaclass=_HealthStateEnumTypeWrapper):
        """Health state of the network endpoint determined based on the health checks configured."""
        pass

    UNDEFINED_HEALTH_STATE: HealthStatusForNetworkEndpoint.HealthState.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DRAINING: HealthStatusForNetworkEndpoint.HealthState.ValueType = ...  # 480455402
    HEALTHY: HealthStatusForNetworkEndpoint.HealthState.ValueType = ...  # 439801213
    UNHEALTHY: HealthStatusForNetworkEndpoint.HealthState.ValueType = ...  # 462118084
    UNKNOWN: HealthStatusForNetworkEndpoint.HealthState.ValueType = ...  # 433141802

    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    HEALTH_CHECK_SERVICE_FIELD_NUMBER: builtins.int
    HEALTH_STATE_FIELD_NUMBER: builtins.int
    @property
    def backend_service(self) -> global___BackendServiceReference:
        """URL of the backend service associated with the health state of the network endpoint."""
        pass
    @property
    def forwarding_rule(self) -> global___ForwardingRuleReference:
        """URL of the forwarding rule associated with the health state of the network endpoint."""
        pass
    @property
    def health_check(self) -> global___HealthCheckReference:
        """URL of the health check associated with the health state of the network endpoint."""
        pass
    @property
    def health_check_service(self) -> global___HealthCheckServiceReference:
        """URL of the health check service associated with the health state of the network endpoint."""
        pass
    health_state: typing.Text = ...
    """Health state of the network endpoint determined based on the health checks configured.
    Check the HealthState enum for the list of possible values.
    """

    def __init__(self,
        *,
        backend_service : typing.Optional[global___BackendServiceReference] = ...,
        forwarding_rule : typing.Optional[global___ForwardingRuleReference] = ...,
        health_check : typing.Optional[global___HealthCheckReference] = ...,
        health_check_service : typing.Optional[global___HealthCheckServiceReference] = ...,
        health_state : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_backend_service",b"_backend_service","_forwarding_rule",b"_forwarding_rule","_health_check",b"_health_check","_health_check_service",b"_health_check_service","_health_state",b"_health_state","backend_service",b"backend_service","forwarding_rule",b"forwarding_rule","health_check",b"health_check","health_check_service",b"health_check_service","health_state",b"health_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_backend_service",b"_backend_service","_forwarding_rule",b"_forwarding_rule","_health_check",b"_health_check","_health_check_service",b"_health_check_service","_health_state",b"_health_state","backend_service",b"backend_service","forwarding_rule",b"forwarding_rule","health_check",b"health_check","health_check_service",b"health_check_service","health_state",b"health_state"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_backend_service",b"_backend_service"]) -> typing.Optional[typing_extensions.Literal["backend_service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_forwarding_rule",b"_forwarding_rule"]) -> typing.Optional[typing_extensions.Literal["forwarding_rule"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_health_check",b"_health_check"]) -> typing.Optional[typing_extensions.Literal["health_check"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_health_check_service",b"_health_check_service"]) -> typing.Optional[typing_extensions.Literal["health_check_service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_health_state",b"_health_state"]) -> typing.Optional[typing_extensions.Literal["health_state"]]: ...
global___HealthStatusForNetworkEndpoint = HealthStatusForNetworkEndpoint

class HostRule(google.protobuf.message.Message):
    """UrlMaps A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESCRIPTION_FIELD_NUMBER: builtins.int
    HOSTS_FIELD_NUMBER: builtins.int
    PATH_MATCHER_FIELD_NUMBER: builtins.int
    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    @property
    def hosts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of host patterns to match. They must be valid hostnames with optional port numbers in the format host:port. * matches any string of ([a-z0-9-.]*). In that case, * must be the first character and must be followed in the pattern by either - or .. * based matching is not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    path_matcher: typing.Text = ...
    """The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion."""

    def __init__(self,
        *,
        description : typing.Optional[typing.Text] = ...,
        hosts : typing.Optional[typing.Iterable[typing.Text]] = ...,
        path_matcher : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_path_matcher",b"_path_matcher","description",b"description","path_matcher",b"path_matcher"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_path_matcher",b"_path_matcher","description",b"description","hosts",b"hosts","path_matcher",b"path_matcher"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path_matcher",b"_path_matcher"]) -> typing.Optional[typing_extensions.Literal["path_matcher"]]: ...
global___HostRule = HostRule

class HttpFaultAbort(google.protobuf.message.Message):
    """Specification for how requests are aborted as part of fault injection."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HTTP_STATUS_FIELD_NUMBER: builtins.int
    PERCENTAGE_FIELD_NUMBER: builtins.int
    http_status: builtins.int = ...
    """The HTTP status code used to abort the request. The value must be between 200 and 599 inclusive. For gRPC protocol, the gRPC status code is mapped to HTTP status code according to this mapping table. HTTP status 200 is mapped to gRPC status UNKNOWN. Injecting an OK status is currently not supported by Traffic Director."""

    percentage: builtins.float = ...
    """The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection. The value must be between 0.0 and 100.0 inclusive."""

    def __init__(self,
        *,
        http_status : typing.Optional[builtins.int] = ...,
        percentage : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_http_status",b"_http_status","_percentage",b"_percentage","http_status",b"http_status","percentage",b"percentage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_http_status",b"_http_status","_percentage",b"_percentage","http_status",b"http_status","percentage",b"percentage"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_http_status",b"_http_status"]) -> typing.Optional[typing_extensions.Literal["http_status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_percentage",b"_percentage"]) -> typing.Optional[typing_extensions.Literal["percentage"]]: ...
global___HttpFaultAbort = HttpFaultAbort

class HttpFaultDelay(google.protobuf.message.Message):
    """Specifies the delay introduced by Loadbalancer before forwarding the request to the backend service as part of fault injection."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIXED_DELAY_FIELD_NUMBER: builtins.int
    PERCENTAGE_FIELD_NUMBER: builtins.int
    @property
    def fixed_delay(self) -> global___Duration:
        """Specifies the value of the fixed delay interval."""
        pass
    percentage: builtins.float = ...
    """The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection. The value must be between 0.0 and 100.0 inclusive."""

    def __init__(self,
        *,
        fixed_delay : typing.Optional[global___Duration] = ...,
        percentage : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_fixed_delay",b"_fixed_delay","_percentage",b"_percentage","fixed_delay",b"fixed_delay","percentage",b"percentage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_fixed_delay",b"_fixed_delay","_percentage",b"_percentage","fixed_delay",b"fixed_delay","percentage",b"percentage"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fixed_delay",b"_fixed_delay"]) -> typing.Optional[typing_extensions.Literal["fixed_delay"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_percentage",b"_percentage"]) -> typing.Optional[typing_extensions.Literal["percentage"]]: ...
global___HttpFaultDelay = HttpFaultDelay

class HttpFaultInjection(google.protobuf.message.Message):
    """The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the Loadbalancer for a percentage of requests."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ABORT_FIELD_NUMBER: builtins.int
    DELAY_FIELD_NUMBER: builtins.int
    @property
    def abort(self) -> global___HttpFaultAbort:
        """The specification for how client requests are aborted as part of fault injection."""
        pass
    @property
    def delay(self) -> global___HttpFaultDelay:
        """The specification for how client requests are delayed as part of fault injection, before being sent to a backend service."""
        pass
    def __init__(self,
        *,
        abort : typing.Optional[global___HttpFaultAbort] = ...,
        delay : typing.Optional[global___HttpFaultDelay] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_abort",b"_abort","_delay",b"_delay","abort",b"abort","delay",b"delay"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_abort",b"_abort","_delay",b"_delay","abort",b"abort","delay",b"delay"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_abort",b"_abort"]) -> typing.Optional[typing_extensions.Literal["abort"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_delay",b"_delay"]) -> typing.Optional[typing_extensions.Literal["delay"]]: ...
global___HttpFaultInjection = HttpFaultInjection

class HttpHeaderAction(google.protobuf.message.Message):
    """The request and response header transformations that take effect before the request is passed along to the selected backendService."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_HEADERS_TO_ADD_FIELD_NUMBER: builtins.int
    REQUEST_HEADERS_TO_REMOVE_FIELD_NUMBER: builtins.int
    RESPONSE_HEADERS_TO_ADD_FIELD_NUMBER: builtins.int
    RESPONSE_HEADERS_TO_REMOVE_FIELD_NUMBER: builtins.int
    @property
    def request_headers_to_add(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HttpHeaderOption]:
        """Headers to add to a matching request prior to forwarding the request to the backendService."""
        pass
    @property
    def request_headers_to_remove(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService."""
        pass
    @property
    def response_headers_to_add(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HttpHeaderOption]:
        """Headers to add the response prior to sending the response back to the client."""
        pass
    @property
    def response_headers_to_remove(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of header names for headers that need to be removed from the response prior to sending the response back to the client."""
        pass
    def __init__(self,
        *,
        request_headers_to_add : typing.Optional[typing.Iterable[global___HttpHeaderOption]] = ...,
        request_headers_to_remove : typing.Optional[typing.Iterable[typing.Text]] = ...,
        response_headers_to_add : typing.Optional[typing.Iterable[global___HttpHeaderOption]] = ...,
        response_headers_to_remove : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["request_headers_to_add",b"request_headers_to_add","request_headers_to_remove",b"request_headers_to_remove","response_headers_to_add",b"response_headers_to_add","response_headers_to_remove",b"response_headers_to_remove"]) -> None: ...
global___HttpHeaderAction = HttpHeaderAction

class HttpHeaderMatch(google.protobuf.message.Message):
    """matchRule criteria for request header matches."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXACT_MATCH_FIELD_NUMBER: builtins.int
    HEADER_NAME_FIELD_NUMBER: builtins.int
    INVERT_MATCH_FIELD_NUMBER: builtins.int
    PREFIX_MATCH_FIELD_NUMBER: builtins.int
    PRESENT_MATCH_FIELD_NUMBER: builtins.int
    RANGE_MATCH_FIELD_NUMBER: builtins.int
    REGEX_MATCH_FIELD_NUMBER: builtins.int
    SUFFIX_MATCH_FIELD_NUMBER: builtins.int
    exact_match: typing.Text = ...
    """The value should exactly match contents of exactMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set."""

    header_name: typing.Text = ...
    """The name of the HTTP header to match. For matching against the HTTP request's authority, use a headerMatch with the header name ":authority". For matching a request's method, use the headerName ":method". When the URL map is bound to target gRPC proxy that has validateForProxyless field set to true, only non-binary user-specified custom metadata and the `content-type` header are supported. The following transport-level headers cannot be used in header matching rules: `:authority`, `:method`, `:path`, `:scheme`, `user-agent`, `accept-encoding`, `content-encoding`, `grpc-accept-encoding`, `grpc-encoding`, `grpc-previous-rpc-attempts`, `grpc-tags-bin`, `grpc-timeout` and `grpc-trace-bin."""

    invert_match: builtins.bool = ...
    """If set to false, the headerMatch is considered a match if the match criteria above are met. If set to true, the headerMatch is considered a match if the match criteria above are NOT met. The default setting is false."""

    prefix_match: typing.Text = ...
    """The value of the header must start with the contents of prefixMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set."""

    present_match: builtins.bool = ...
    """A header with the contents of headerName must exist. The match takes place whether or not the request's header has a value. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set."""

    @property
    def range_match(self) -> global___Int64RangeMatch:
        """The header value must be an integer and its value must be in the range specified in rangeMatch. If the header does not contain an integer, number or is empty, the match fails. For example for a range [-5, 0] - -3 will match. - 0 will not match. - 0.25 will not match. - -3someString will not match. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set. Note that rangeMatch is not supported for Loadbalancers that have their loadBalancingScheme set to EXTERNAL."""
        pass
    regex_match: typing.Text = ...
    """The value of the header must match the regular expression specified in regexMatch. For regular expression grammar, please see: github.com/google/re2/wiki/Syntax For matching against a port specified in the HTTP request, use a headerMatch with headerName set to PORT and a regular expression that satisfies the RFC2616 Host header's port specifier. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set. Note that regexMatch only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED."""

    suffix_match: typing.Text = ...
    """The value of the header must end with the contents of suffixMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set."""

    def __init__(self,
        *,
        exact_match : typing.Optional[typing.Text] = ...,
        header_name : typing.Optional[typing.Text] = ...,
        invert_match : typing.Optional[builtins.bool] = ...,
        prefix_match : typing.Optional[typing.Text] = ...,
        present_match : typing.Optional[builtins.bool] = ...,
        range_match : typing.Optional[global___Int64RangeMatch] = ...,
        regex_match : typing.Optional[typing.Text] = ...,
        suffix_match : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_exact_match",b"_exact_match","_header_name",b"_header_name","_invert_match",b"_invert_match","_prefix_match",b"_prefix_match","_present_match",b"_present_match","_range_match",b"_range_match","_regex_match",b"_regex_match","_suffix_match",b"_suffix_match","exact_match",b"exact_match","header_name",b"header_name","invert_match",b"invert_match","prefix_match",b"prefix_match","present_match",b"present_match","range_match",b"range_match","regex_match",b"regex_match","suffix_match",b"suffix_match"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_exact_match",b"_exact_match","_header_name",b"_header_name","_invert_match",b"_invert_match","_prefix_match",b"_prefix_match","_present_match",b"_present_match","_range_match",b"_range_match","_regex_match",b"_regex_match","_suffix_match",b"_suffix_match","exact_match",b"exact_match","header_name",b"header_name","invert_match",b"invert_match","prefix_match",b"prefix_match","present_match",b"present_match","range_match",b"range_match","regex_match",b"regex_match","suffix_match",b"suffix_match"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_exact_match",b"_exact_match"]) -> typing.Optional[typing_extensions.Literal["exact_match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_header_name",b"_header_name"]) -> typing.Optional[typing_extensions.Literal["header_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_invert_match",b"_invert_match"]) -> typing.Optional[typing_extensions.Literal["invert_match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_prefix_match",b"_prefix_match"]) -> typing.Optional[typing_extensions.Literal["prefix_match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_present_match",b"_present_match"]) -> typing.Optional[typing_extensions.Literal["present_match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_range_match",b"_range_match"]) -> typing.Optional[typing_extensions.Literal["range_match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_regex_match",b"_regex_match"]) -> typing.Optional[typing_extensions.Literal["regex_match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_suffix_match",b"_suffix_match"]) -> typing.Optional[typing_extensions.Literal["suffix_match"]]: ...
global___HttpHeaderMatch = HttpHeaderMatch

class HttpHeaderOption(google.protobuf.message.Message):
    """Specification determining how headers are added to requests or responses."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADER_NAME_FIELD_NUMBER: builtins.int
    HEADER_VALUE_FIELD_NUMBER: builtins.int
    REPLACE_FIELD_NUMBER: builtins.int
    header_name: typing.Text = ...
    """The name of the header."""

    header_value: typing.Text = ...
    """The value of the header to add."""

    replace: builtins.bool = ...
    """If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header. The default value is false."""

    def __init__(self,
        *,
        header_name : typing.Optional[typing.Text] = ...,
        header_value : typing.Optional[typing.Text] = ...,
        replace : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_header_name",b"_header_name","_header_value",b"_header_value","_replace",b"_replace","header_name",b"header_name","header_value",b"header_value","replace",b"replace"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_header_name",b"_header_name","_header_value",b"_header_value","_replace",b"_replace","header_name",b"header_name","header_value",b"header_value","replace",b"replace"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_header_name",b"_header_name"]) -> typing.Optional[typing_extensions.Literal["header_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_header_value",b"_header_value"]) -> typing.Optional[typing_extensions.Literal["header_value"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_replace",b"_replace"]) -> typing.Optional[typing_extensions.Literal["replace"]]: ...
global___HttpHeaderOption = HttpHeaderOption

class HttpQueryParameterMatch(google.protobuf.message.Message):
    """HttpRouteRuleMatch criteria for a request's query parameter."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXACT_MATCH_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PRESENT_MATCH_FIELD_NUMBER: builtins.int
    REGEX_MATCH_FIELD_NUMBER: builtins.int
    exact_match: typing.Text = ...
    """The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch. Only one of presentMatch, exactMatch or regexMatch must be set."""

    name: typing.Text = ...
    """The name of the query parameter to match. The query parameter must exist in the request, in the absence of which the request match fails."""

    present_match: builtins.bool = ...
    """Specifies that the queryParameterMatch matches if the request contains the query parameter, irrespective of whether the parameter has a value or not. Only one of presentMatch, exactMatch or regexMatch must be set."""

    regex_match: typing.Text = ...
    """The queryParameterMatch matches if the value of the parameter matches the regular expression specified by regexMatch. For the regular expression grammar, please see github.com/google/re2/wiki/Syntax Only one of presentMatch, exactMatch or regexMatch must be set. Note that regexMatch only applies when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED."""

    def __init__(self,
        *,
        exact_match : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        present_match : typing.Optional[builtins.bool] = ...,
        regex_match : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_exact_match",b"_exact_match","_name",b"_name","_present_match",b"_present_match","_regex_match",b"_regex_match","exact_match",b"exact_match","name",b"name","present_match",b"present_match","regex_match",b"regex_match"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_exact_match",b"_exact_match","_name",b"_name","_present_match",b"_present_match","_regex_match",b"_regex_match","exact_match",b"exact_match","name",b"name","present_match",b"present_match","regex_match",b"regex_match"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_exact_match",b"_exact_match"]) -> typing.Optional[typing_extensions.Literal["exact_match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_present_match",b"_present_match"]) -> typing.Optional[typing_extensions.Literal["present_match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_regex_match",b"_regex_match"]) -> typing.Optional[typing_extensions.Literal["regex_match"]]: ...
global___HttpQueryParameterMatch = HttpQueryParameterMatch

class HttpRedirectAction(google.protobuf.message.Message):
    """Specifies settings for an HTTP redirect."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RedirectResponseCode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RedirectResponseCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RedirectResponseCode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_REDIRECT_RESPONSE_CODE: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        FOUND: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 67084130
        """Http Status Code 302 - Found."""

        MOVED_PERMANENTLY_DEFAULT: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 386698449
        """Http Status Code 301 - Moved Permanently."""

        PERMANENT_REDIRECT: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 382006381
        """Http Status Code 308 - Permanent Redirect maintaining HTTP method."""

        SEE_OTHER: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 445380580
        """Http Status Code 303 - See Other."""

        TEMPORARY_REDIRECT: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 489550378
        """Http Status Code 307 - Temporary Redirect maintaining HTTP method."""

    class RedirectResponseCode(_RedirectResponseCode, metaclass=_RedirectResponseCodeEnumTypeWrapper):
        """The HTTP Status code to use for this RedirectAction. Supported values are: - MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301. - FOUND, which corresponds to 302. - SEE_OTHER which corresponds to 303. - TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained. - PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained."""
        pass

    UNDEFINED_REDIRECT_RESPONSE_CODE: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    FOUND: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 67084130
    """Http Status Code 302 - Found."""

    MOVED_PERMANENTLY_DEFAULT: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 386698449
    """Http Status Code 301 - Moved Permanently."""

    PERMANENT_REDIRECT: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 382006381
    """Http Status Code 308 - Permanent Redirect maintaining HTTP method."""

    SEE_OTHER: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 445380580
    """Http Status Code 303 - See Other."""

    TEMPORARY_REDIRECT: HttpRedirectAction.RedirectResponseCode.ValueType = ...  # 489550378
    """Http Status Code 307 - Temporary Redirect maintaining HTTP method."""


    HOST_REDIRECT_FIELD_NUMBER: builtins.int
    HTTPS_REDIRECT_FIELD_NUMBER: builtins.int
    PATH_REDIRECT_FIELD_NUMBER: builtins.int
    PREFIX_REDIRECT_FIELD_NUMBER: builtins.int
    REDIRECT_RESPONSE_CODE_FIELD_NUMBER: builtins.int
    STRIP_QUERY_FIELD_NUMBER: builtins.int
    host_redirect: typing.Text = ...
    """The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters."""

    https_redirect: builtins.bool = ...
    """If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false."""

    path_redirect: typing.Text = ...
    """The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters."""

    prefix_redirect: typing.Text = ...
    """The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request. prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters."""

    redirect_response_code: typing.Text = ...
    """The HTTP Status code to use for this RedirectAction. Supported values are: - MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301. - FOUND, which corresponds to 302. - SEE_OTHER which corresponds to 303. - TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained. - PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.
    Check the RedirectResponseCode enum for the list of possible values.
    """

    strip_query: builtins.bool = ...
    """If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained. The default is set to false."""

    def __init__(self,
        *,
        host_redirect : typing.Optional[typing.Text] = ...,
        https_redirect : typing.Optional[builtins.bool] = ...,
        path_redirect : typing.Optional[typing.Text] = ...,
        prefix_redirect : typing.Optional[typing.Text] = ...,
        redirect_response_code : typing.Optional[typing.Text] = ...,
        strip_query : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_host_redirect",b"_host_redirect","_https_redirect",b"_https_redirect","_path_redirect",b"_path_redirect","_prefix_redirect",b"_prefix_redirect","_redirect_response_code",b"_redirect_response_code","_strip_query",b"_strip_query","host_redirect",b"host_redirect","https_redirect",b"https_redirect","path_redirect",b"path_redirect","prefix_redirect",b"prefix_redirect","redirect_response_code",b"redirect_response_code","strip_query",b"strip_query"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_host_redirect",b"_host_redirect","_https_redirect",b"_https_redirect","_path_redirect",b"_path_redirect","_prefix_redirect",b"_prefix_redirect","_redirect_response_code",b"_redirect_response_code","_strip_query",b"_strip_query","host_redirect",b"host_redirect","https_redirect",b"https_redirect","path_redirect",b"path_redirect","prefix_redirect",b"prefix_redirect","redirect_response_code",b"redirect_response_code","strip_query",b"strip_query"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_host_redirect",b"_host_redirect"]) -> typing.Optional[typing_extensions.Literal["host_redirect"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_https_redirect",b"_https_redirect"]) -> typing.Optional[typing_extensions.Literal["https_redirect"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path_redirect",b"_path_redirect"]) -> typing.Optional[typing_extensions.Literal["path_redirect"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_prefix_redirect",b"_prefix_redirect"]) -> typing.Optional[typing_extensions.Literal["prefix_redirect"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_redirect_response_code",b"_redirect_response_code"]) -> typing.Optional[typing_extensions.Literal["redirect_response_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_strip_query",b"_strip_query"]) -> typing.Optional[typing_extensions.Literal["strip_query"]]: ...
global___HttpRedirectAction = HttpRedirectAction

class HttpRetryPolicy(google.protobuf.message.Message):
    """The retry policy associates with HttpRouteRule"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NUM_RETRIES_FIELD_NUMBER: builtins.int
    PER_TRY_TIMEOUT_FIELD_NUMBER: builtins.int
    RETRY_CONDITIONS_FIELD_NUMBER: builtins.int
    num_retries: builtins.int = ...
    """Specifies the allowed number retries. This number must be > 0. If not specified, defaults to 1."""

    @property
    def per_try_timeout(self) -> global___Duration:
        """Specifies a non-zero timeout per retry attempt. If not specified, will use the timeout set in HttpRouteAction. If timeout in HttpRouteAction is not set, will use the largest timeout among all backend services associated with the route."""
        pass
    @property
    def retry_conditions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Specifies one or more conditions when this retry policy applies. Valid values are: - 5xx: Retry will be attempted if the instance or endpoint responds with any 5xx response code, or if the instance or endpoint does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams. - gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504. - - connect-failure: A retry will be attempted on failures connecting to the instance or endpoint, for example due to connection timeouts. - retriable-4xx: A retry will be attempted if the instance or endpoint responds with a retriable 4xx response code. Currently the only retriable error supported is 409. - refused-stream: A retry will be attempted if the instance or endpoint resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry. - cancelled: A retry will be attempted if the gRPC status code in the response header is set to cancelled. - deadline-exceeded: A retry will be attempted if the gRPC status code in the response header is set to deadline-exceeded. - internal: A retry will be attempted if the gRPC status code in the response header is set to internal. - resource-exhausted: A retry will be attempted if the gRPC status code in the response header is set to resource-exhausted. - unavailable: A retry will be attempted if the gRPC status code in the response header is set to unavailable."""
        pass
    def __init__(self,
        *,
        num_retries : typing.Optional[builtins.int] = ...,
        per_try_timeout : typing.Optional[global___Duration] = ...,
        retry_conditions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_num_retries",b"_num_retries","_per_try_timeout",b"_per_try_timeout","num_retries",b"num_retries","per_try_timeout",b"per_try_timeout"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_num_retries",b"_num_retries","_per_try_timeout",b"_per_try_timeout","num_retries",b"num_retries","per_try_timeout",b"per_try_timeout","retry_conditions",b"retry_conditions"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_num_retries",b"_num_retries"]) -> typing.Optional[typing_extensions.Literal["num_retries"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_per_try_timeout",b"_per_try_timeout"]) -> typing.Optional[typing_extensions.Literal["per_try_timeout"]]: ...
global___HttpRetryPolicy = HttpRetryPolicy

class HttpRouteAction(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CORS_POLICY_FIELD_NUMBER: builtins.int
    FAULT_INJECTION_POLICY_FIELD_NUMBER: builtins.int
    MAX_STREAM_DURATION_FIELD_NUMBER: builtins.int
    REQUEST_MIRROR_POLICY_FIELD_NUMBER: builtins.int
    RETRY_POLICY_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    URL_REWRITE_FIELD_NUMBER: builtins.int
    WEIGHTED_BACKEND_SERVICES_FIELD_NUMBER: builtins.int
    @property
    def cors_policy(self) -> global___CorsPolicy:
        """The specification for allowing client side cross-origin requests. Please see W3C Recommendation for Cross Origin Resource Sharing Not supported when the URL map is bound to target gRPC proxy."""
        pass
    @property
    def fault_injection_policy(self) -> global___HttpFaultInjection:
        """The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the Loadbalancer for a percentage of requests. For the requests impacted by fault injection, timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy."""
        pass
    @property
    def max_stream_duration(self) -> global___Duration:
        """Specifies the maximum duration (timeout) for streams on the selected route. Unlike the timeout field where the timeout duration starts from the time the request has been fully processed (i.e. end-of-stream), the duration in this field is computed from the beginning of the stream until the response has been completely processed, including all retries. A stream that does not complete in this duration is closed. If not specified, will use the largest maxStreamDuration among all backend services associated with the route. This field is only allowed if the Url map is used with backend services with loadBalancingScheme set to INTERNAL_SELF_MANAGED."""
        pass
    @property
    def request_mirror_policy(self) -> global___RequestMirrorPolicy:
        """Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service. Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host / authority header is suffixed with -shadow. Not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    @property
    def retry_policy(self) -> global___HttpRetryPolicy:
        """Specifies the retry policy associated with this route. Not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    @property
    def timeout(self) -> global___Duration:
        """Specifies the timeout for the selected route. Timeout is computed from the time the request has been fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries. If not specified, will use the largest timeout among all backend services associated with the route. Not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    @property
    def url_rewrite(self) -> global___UrlRewrite:
        """The spec to modify the URL of the request, prior to forwarding the request to the matched service. urlRewrite is the only action supported in UrlMaps for external HTTP(S) load balancers. Not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    @property
    def weighted_backend_services(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WeightedBackendService]:
        """A list of weighted backend services to send traffic to when a route match occurs. The weights determine the fraction of traffic that flows to their corresponding backend service. If all traffic needs to go to a single backend service, there must be one weightedBackendService with weight set to a non-zero number. Once a backendService is identified and before forwarding the request to the backend service, advanced routing actions such as URL rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction."""
        pass
    def __init__(self,
        *,
        cors_policy : typing.Optional[global___CorsPolicy] = ...,
        fault_injection_policy : typing.Optional[global___HttpFaultInjection] = ...,
        max_stream_duration : typing.Optional[global___Duration] = ...,
        request_mirror_policy : typing.Optional[global___RequestMirrorPolicy] = ...,
        retry_policy : typing.Optional[global___HttpRetryPolicy] = ...,
        timeout : typing.Optional[global___Duration] = ...,
        url_rewrite : typing.Optional[global___UrlRewrite] = ...,
        weighted_backend_services : typing.Optional[typing.Iterable[global___WeightedBackendService]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cors_policy",b"_cors_policy","_fault_injection_policy",b"_fault_injection_policy","_max_stream_duration",b"_max_stream_duration","_request_mirror_policy",b"_request_mirror_policy","_retry_policy",b"_retry_policy","_timeout",b"_timeout","_url_rewrite",b"_url_rewrite","cors_policy",b"cors_policy","fault_injection_policy",b"fault_injection_policy","max_stream_duration",b"max_stream_duration","request_mirror_policy",b"request_mirror_policy","retry_policy",b"retry_policy","timeout",b"timeout","url_rewrite",b"url_rewrite"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cors_policy",b"_cors_policy","_fault_injection_policy",b"_fault_injection_policy","_max_stream_duration",b"_max_stream_duration","_request_mirror_policy",b"_request_mirror_policy","_retry_policy",b"_retry_policy","_timeout",b"_timeout","_url_rewrite",b"_url_rewrite","cors_policy",b"cors_policy","fault_injection_policy",b"fault_injection_policy","max_stream_duration",b"max_stream_duration","request_mirror_policy",b"request_mirror_policy","retry_policy",b"retry_policy","timeout",b"timeout","url_rewrite",b"url_rewrite","weighted_backend_services",b"weighted_backend_services"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cors_policy",b"_cors_policy"]) -> typing.Optional[typing_extensions.Literal["cors_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fault_injection_policy",b"_fault_injection_policy"]) -> typing.Optional[typing_extensions.Literal["fault_injection_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_stream_duration",b"_max_stream_duration"]) -> typing.Optional[typing_extensions.Literal["max_stream_duration"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_mirror_policy",b"_request_mirror_policy"]) -> typing.Optional[typing_extensions.Literal["request_mirror_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_retry_policy",b"_retry_policy"]) -> typing.Optional[typing_extensions.Literal["retry_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_timeout",b"_timeout"]) -> typing.Optional[typing_extensions.Literal["timeout"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_rewrite",b"_url_rewrite"]) -> typing.Optional[typing_extensions.Literal["url_rewrite"]]: ...
global___HttpRouteAction = HttpRouteAction

class HttpRouteRule(google.protobuf.message.Message):
    """An HttpRouteRule specifies how to match an HTTP request and the corresponding routing action that load balancing proxies will perform."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESCRIPTION_FIELD_NUMBER: builtins.int
    HEADER_ACTION_FIELD_NUMBER: builtins.int
    MATCH_RULES_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    ROUTE_ACTION_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    URL_REDIRECT_FIELD_NUMBER: builtins.int
    description: typing.Text = ...
    """The short description conveying the intent of this routeRule. The description can have a maximum length of 1024 characters."""

    @property
    def header_action(self) -> global___HttpHeaderAction:
        """Specifies changes to request and response headers that need to take effect for the selected backendService. The headerAction specified here are applied before the matching pathMatchers[].headerAction and after pathMatchers[].routeRules[].routeAction.weightedBackendService.backendServiceWeightAction[].headerAction Note that headerAction is not supported for Loadbalancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    @property
    def match_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HttpRouteRuleMatch]:
        """The list of criteria for matching attributes of a request to this routeRule. This list has OR semantics: the request matches this routeRule when any of the matchRules are satisfied. However predicates within a given matchRule have AND semantics. All predicates within a matchRule must match for the request to match the rule."""
        pass
    priority: builtins.int = ...
    """For routeRules within a given pathMatcher, priority determines the order in which load balancer will interpret routeRules. RouteRules are evaluated in order of priority, from the lowest to highest number. The priority of a rule decreases as its number increases (1, 2, 3, N+1). The first rule that matches the request is applied. You cannot configure two or more routeRules with the same priority. Priority for each rule must be set to a number between 0 and 2147483647 inclusive. Priority numbers can have gaps, which enable you to add or remove rules in the future without affecting the rest of the rules. For example, 1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the future without any impact on existing rules."""

    @property
    def route_action(self) -> global___HttpRouteAction:
        """In response to a matching matchRule, the load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If routeAction specifies any weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any weightedBackendServices. Only one of urlRedirect, service or routeAction.weightedBackendService must be set. UrlMaps for external HTTP(S) load balancers support only the urlRewrite action within a routeRule's routeAction."""
        pass
    service: typing.Text = ...
    """The full or partial URL of the backend service resource to which traffic is directed if this rule is matched. If routeAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendService s. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of urlRedirect, service or routeAction.weightedBackendService must be set."""

    @property
    def url_redirect(self) -> global___HttpRedirectAction:
        """When this rule is matched, the request is redirected to a URL specified by urlRedirect. If urlRedirect is specified, service or routeAction must not be set. Not supported when the URL map is bound to target gRPC proxy."""
        pass
    def __init__(self,
        *,
        description : typing.Optional[typing.Text] = ...,
        header_action : typing.Optional[global___HttpHeaderAction] = ...,
        match_rules : typing.Optional[typing.Iterable[global___HttpRouteRuleMatch]] = ...,
        priority : typing.Optional[builtins.int] = ...,
        route_action : typing.Optional[global___HttpRouteAction] = ...,
        service : typing.Optional[typing.Text] = ...,
        url_redirect : typing.Optional[global___HttpRedirectAction] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_header_action",b"_header_action","_priority",b"_priority","_route_action",b"_route_action","_service",b"_service","_url_redirect",b"_url_redirect","description",b"description","header_action",b"header_action","priority",b"priority","route_action",b"route_action","service",b"service","url_redirect",b"url_redirect"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_header_action",b"_header_action","_priority",b"_priority","_route_action",b"_route_action","_service",b"_service","_url_redirect",b"_url_redirect","description",b"description","header_action",b"header_action","match_rules",b"match_rules","priority",b"priority","route_action",b"route_action","service",b"service","url_redirect",b"url_redirect"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_header_action",b"_header_action"]) -> typing.Optional[typing_extensions.Literal["header_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_route_action",b"_route_action"]) -> typing.Optional[typing_extensions.Literal["route_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_redirect",b"_url_redirect"]) -> typing.Optional[typing_extensions.Literal["url_redirect"]]: ...
global___HttpRouteRule = HttpRouteRule

class HttpRouteRuleMatch(google.protobuf.message.Message):
    """HttpRouteRuleMatch specifies a set of criteria for matching requests to an HttpRouteRule. All specified criteria must be satisfied for a match to occur."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FULL_PATH_MATCH_FIELD_NUMBER: builtins.int
    HEADER_MATCHES_FIELD_NUMBER: builtins.int
    IGNORE_CASE_FIELD_NUMBER: builtins.int
    METADATA_FILTERS_FIELD_NUMBER: builtins.int
    PREFIX_MATCH_FIELD_NUMBER: builtins.int
    QUERY_PARAMETER_MATCHES_FIELD_NUMBER: builtins.int
    REGEX_MATCH_FIELD_NUMBER: builtins.int
    full_path_match: typing.Text = ...
    """For satisfying the matchRule condition, the path of the request must exactly match the value specified in fullPathMatch after removing any query parameters and anchor that may be part of the original URL. fullPathMatch must be between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must be specified."""

    @property
    def header_matches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HttpHeaderMatch]:
        """Specifies a list of header match criteria, all of which must match corresponding headers in the request."""
        pass
    ignore_case: builtins.bool = ...
    """Specifies that prefixMatch and fullPathMatch matches are case sensitive. The default value is false. ignoreCase must not be used with regexMatch. Not supported when the URL map is bound to target gRPC proxy."""

    @property
    def metadata_filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MetadataFilter]:
        """Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set of xDS compliant clients. In their xDS requests to Loadbalancer, xDS clients present node metadata. When there is a match, the relevant routing configuration is made available to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels provided in the metadata. If multiple metadataFilters are specified, all of them need to be satisfied in order to be considered a match. metadataFilters specified here will be applied after those specified in ForwardingRule that refers to the UrlMap this HttpRouteRuleMatch belongs to. metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED. Not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    prefix_match: typing.Text = ...
    """For satisfying the matchRule condition, the request's path must begin with the specified prefixMatch. prefixMatch must begin with a /. The value must be between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must be specified."""

    @property
    def query_parameter_matches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HttpQueryParameterMatch]:
        """Specifies a list of query parameter match criteria, all of which must match corresponding query parameters in the request. Not supported when the URL map is bound to target gRPC proxy."""
        pass
    regex_match: typing.Text = ...
    """For satisfying the matchRule condition, the path of the request must satisfy the regular expression specified in regexMatch after removing any query parameters and anchor supplied with the original URL. For regular expression grammar please see github.com/google/re2/wiki/Syntax Only one of prefixMatch, fullPathMatch or regexMatch must be specified. Note that regexMatch only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED."""

    def __init__(self,
        *,
        full_path_match : typing.Optional[typing.Text] = ...,
        header_matches : typing.Optional[typing.Iterable[global___HttpHeaderMatch]] = ...,
        ignore_case : typing.Optional[builtins.bool] = ...,
        metadata_filters : typing.Optional[typing.Iterable[global___MetadataFilter]] = ...,
        prefix_match : typing.Optional[typing.Text] = ...,
        query_parameter_matches : typing.Optional[typing.Iterable[global___HttpQueryParameterMatch]] = ...,
        regex_match : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_full_path_match",b"_full_path_match","_ignore_case",b"_ignore_case","_prefix_match",b"_prefix_match","_regex_match",b"_regex_match","full_path_match",b"full_path_match","ignore_case",b"ignore_case","prefix_match",b"prefix_match","regex_match",b"regex_match"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_full_path_match",b"_full_path_match","_ignore_case",b"_ignore_case","_prefix_match",b"_prefix_match","_regex_match",b"_regex_match","full_path_match",b"full_path_match","header_matches",b"header_matches","ignore_case",b"ignore_case","metadata_filters",b"metadata_filters","prefix_match",b"prefix_match","query_parameter_matches",b"query_parameter_matches","regex_match",b"regex_match"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_full_path_match",b"_full_path_match"]) -> typing.Optional[typing_extensions.Literal["full_path_match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ignore_case",b"_ignore_case"]) -> typing.Optional[typing_extensions.Literal["ignore_case"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_prefix_match",b"_prefix_match"]) -> typing.Optional[typing_extensions.Literal["prefix_match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_regex_match",b"_regex_match"]) -> typing.Optional[typing_extensions.Literal["regex_match"]]: ...
global___HttpRouteRuleMatch = HttpRouteRuleMatch

class Image(google.protobuf.message.Message):
    """Represents an Image resource. You can use images to create boot disks for your VM instances. For more information, read Images."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SourceType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SourceTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SourceType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_SOURCE_TYPE: Image.SourceType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        RAW: Image.SourceType.ValueType = ...  # 80904
    class SourceType(_SourceType, metaclass=_SourceTypeEnumTypeWrapper):
        """The type of the image used to create this disk. The default and only value is RAW"""
        pass

    UNDEFINED_SOURCE_TYPE: Image.SourceType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    RAW: Image.SourceType.ValueType = ...  # 80904

    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Image.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DELETING: Image.Status.ValueType = ...  # 528602024
        """Image is deleting."""

        FAILED: Image.Status.ValueType = ...  # 455706685
        """Image creation failed due to an error."""

        PENDING: Image.Status.ValueType = ...  # 35394935
        """Image hasn't been created as yet."""

        READY: Image.Status.ValueType = ...  # 77848963
        """Image has been successfully created."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY."""
        pass

    UNDEFINED_STATUS: Image.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DELETING: Image.Status.ValueType = ...  # 528602024
    """Image is deleting."""

    FAILED: Image.Status.ValueType = ...  # 455706685
    """Image creation failed due to an error."""

    PENDING: Image.Status.ValueType = ...  # 35394935
    """Image hasn't been created as yet."""

    READY: Image.Status.ValueType = ...  # 77848963
    """Image has been successfully created."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ARCHIVE_SIZE_BYTES_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEPRECATED_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    FAMILY_FIELD_NUMBER: builtins.int
    GUEST_OS_FEATURES_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    IMAGE_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LICENSE_CODES_FIELD_NUMBER: builtins.int
    LICENSES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    RAW_DISK_FIELD_NUMBER: builtins.int
    SATISFIES_PZS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SHIELDED_INSTANCE_INITIAL_STATE_FIELD_NUMBER: builtins.int
    SOURCE_DISK_FIELD_NUMBER: builtins.int
    SOURCE_DISK_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    SOURCE_DISK_ID_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_ID_FIELD_NUMBER: builtins.int
    SOURCE_SNAPSHOT_FIELD_NUMBER: builtins.int
    SOURCE_SNAPSHOT_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    SOURCE_SNAPSHOT_ID_FIELD_NUMBER: builtins.int
    SOURCE_TYPE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    STORAGE_LOCATIONS_FIELD_NUMBER: builtins.int
    archive_size_bytes: builtins.int = ...
    """Size of the image tar.gz archive stored in Google Cloud Storage (in bytes)."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def deprecated(self) -> global___DeprecationStatus:
        """The deprecation status associated with this image."""
        pass
    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    disk_size_gb: builtins.int = ...
    """Size of the image when restored onto a persistent disk (in GB)."""

    family: typing.Text = ...
    """The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035."""

    @property
    def guest_os_features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GuestOsFeature]:
        """A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options."""
        pass
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def image_encryption_key(self) -> global___CustomerEncryptionKey:
        """Encrypts the image using a customer-supplied encryption key. After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#image for images."""

    label_fingerprint: typing.Text = ...
    """A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an image."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels to apply to this image. These can be later modified by the setLabels method."""
        pass
    @property
    def license_codes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Integer license codes indicating which licenses are attached to this image."""
        pass
    @property
    def licenses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Any applicable license URI."""
        pass
    name: typing.Text = ...
    """Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def raw_disk(self) -> global___RawDisk:
        """The parameters of the raw disk image."""
        pass
    satisfies_pzs: builtins.bool = ...
    """[Output Only] Reserved for future use."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def shielded_instance_initial_state(self) -> global___InitialStateConfig:
        """Set the secure boot keys of shielded instance."""
        pass
    source_disk: typing.Text = ...
    """URL of the source disk used to create this image. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL"""

    @property
    def source_disk_encryption_key(self) -> global___CustomerEncryptionKey:
        """The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key."""
        pass
    source_disk_id: typing.Text = ...
    """[Output Only] The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name."""

    source_image: typing.Text = ...
    """URL of the source image used to create this image. The following are valid formats for the URL: - https://www.googleapis.com/compute/v1/projects/project_id/global/ images/image_name - projects/project_id/global/images/image_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL"""

    @property
    def source_image_encryption_key(self) -> global___CustomerEncryptionKey:
        """The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key."""
        pass
    source_image_id: typing.Text = ...
    """[Output Only] The ID value of the image used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given image name."""

    source_snapshot: typing.Text = ...
    """URL of the source snapshot used to create this image. The following are valid formats for the URL: - https://www.googleapis.com/compute/v1/projects/project_id/global/ snapshots/snapshot_name - projects/project_id/global/snapshots/snapshot_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL"""

    @property
    def source_snapshot_encryption_key(self) -> global___CustomerEncryptionKey:
        """The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key."""
        pass
    source_snapshot_id: typing.Text = ...
    """[Output Only] The ID value of the snapshot used to create this image. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given snapshot name."""

    source_type: typing.Text = ...
    """The type of the image used to create this disk. The default and only value is RAW
    Check the SourceType enum for the list of possible values.
    """

    status: typing.Text = ...
    """[Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
    Check the Status enum for the list of possible values.
    """

    @property
    def storage_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Cloud Storage bucket storage location of the image (regional or multi-regional)."""
        pass
    def __init__(self,
        *,
        archive_size_bytes : typing.Optional[builtins.int] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        deprecated : typing.Optional[global___DeprecationStatus] = ...,
        description : typing.Optional[typing.Text] = ...,
        disk_size_gb : typing.Optional[builtins.int] = ...,
        family : typing.Optional[typing.Text] = ...,
        guest_os_features : typing.Optional[typing.Iterable[global___GuestOsFeature]] = ...,
        id : typing.Optional[builtins.int] = ...,
        image_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        kind : typing.Optional[typing.Text] = ...,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        license_codes : typing.Optional[typing.Iterable[builtins.int]] = ...,
        licenses : typing.Optional[typing.Iterable[typing.Text]] = ...,
        name : typing.Optional[typing.Text] = ...,
        raw_disk : typing.Optional[global___RawDisk] = ...,
        satisfies_pzs : typing.Optional[builtins.bool] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        shielded_instance_initial_state : typing.Optional[global___InitialStateConfig] = ...,
        source_disk : typing.Optional[typing.Text] = ...,
        source_disk_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        source_disk_id : typing.Optional[typing.Text] = ...,
        source_image : typing.Optional[typing.Text] = ...,
        source_image_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        source_image_id : typing.Optional[typing.Text] = ...,
        source_snapshot : typing.Optional[typing.Text] = ...,
        source_snapshot_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        source_snapshot_id : typing.Optional[typing.Text] = ...,
        source_type : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        storage_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_archive_size_bytes",b"_archive_size_bytes","_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_disk_size_gb",b"_disk_size_gb","_family",b"_family","_id",b"_id","_image_encryption_key",b"_image_encryption_key","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_name",b"_name","_raw_disk",b"_raw_disk","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_shielded_instance_initial_state",b"_shielded_instance_initial_state","_source_disk",b"_source_disk","_source_disk_encryption_key",b"_source_disk_encryption_key","_source_disk_id",b"_source_disk_id","_source_image",b"_source_image","_source_image_encryption_key",b"_source_image_encryption_key","_source_image_id",b"_source_image_id","_source_snapshot",b"_source_snapshot","_source_snapshot_encryption_key",b"_source_snapshot_encryption_key","_source_snapshot_id",b"_source_snapshot_id","_source_type",b"_source_type","_status",b"_status","archive_size_bytes",b"archive_size_bytes","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","disk_size_gb",b"disk_size_gb","family",b"family","id",b"id","image_encryption_key",b"image_encryption_key","kind",b"kind","label_fingerprint",b"label_fingerprint","name",b"name","raw_disk",b"raw_disk","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","shielded_instance_initial_state",b"shielded_instance_initial_state","source_disk",b"source_disk","source_disk_encryption_key",b"source_disk_encryption_key","source_disk_id",b"source_disk_id","source_image",b"source_image","source_image_encryption_key",b"source_image_encryption_key","source_image_id",b"source_image_id","source_snapshot",b"source_snapshot","source_snapshot_encryption_key",b"source_snapshot_encryption_key","source_snapshot_id",b"source_snapshot_id","source_type",b"source_type","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_archive_size_bytes",b"_archive_size_bytes","_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_disk_size_gb",b"_disk_size_gb","_family",b"_family","_id",b"_id","_image_encryption_key",b"_image_encryption_key","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_name",b"_name","_raw_disk",b"_raw_disk","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_shielded_instance_initial_state",b"_shielded_instance_initial_state","_source_disk",b"_source_disk","_source_disk_encryption_key",b"_source_disk_encryption_key","_source_disk_id",b"_source_disk_id","_source_image",b"_source_image","_source_image_encryption_key",b"_source_image_encryption_key","_source_image_id",b"_source_image_id","_source_snapshot",b"_source_snapshot","_source_snapshot_encryption_key",b"_source_snapshot_encryption_key","_source_snapshot_id",b"_source_snapshot_id","_source_type",b"_source_type","_status",b"_status","archive_size_bytes",b"archive_size_bytes","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","disk_size_gb",b"disk_size_gb","family",b"family","guest_os_features",b"guest_os_features","id",b"id","image_encryption_key",b"image_encryption_key","kind",b"kind","label_fingerprint",b"label_fingerprint","labels",b"labels","license_codes",b"license_codes","licenses",b"licenses","name",b"name","raw_disk",b"raw_disk","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","shielded_instance_initial_state",b"shielded_instance_initial_state","source_disk",b"source_disk","source_disk_encryption_key",b"source_disk_encryption_key","source_disk_id",b"source_disk_id","source_image",b"source_image","source_image_encryption_key",b"source_image_encryption_key","source_image_id",b"source_image_id","source_snapshot",b"source_snapshot","source_snapshot_encryption_key",b"source_snapshot_encryption_key","source_snapshot_id",b"source_snapshot_id","source_type",b"source_type","status",b"status","storage_locations",b"storage_locations"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_archive_size_bytes",b"_archive_size_bytes"]) -> typing.Optional[typing_extensions.Literal["archive_size_bytes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deprecated",b"_deprecated"]) -> typing.Optional[typing_extensions.Literal["deprecated"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_size_gb",b"_disk_size_gb"]) -> typing.Optional[typing_extensions.Literal["disk_size_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_family",b"_family"]) -> typing.Optional[typing_extensions.Literal["family"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_image_encryption_key",b"_image_encryption_key"]) -> typing.Optional[typing_extensions.Literal["image_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_raw_disk",b"_raw_disk"]) -> typing.Optional[typing_extensions.Literal["raw_disk"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_satisfies_pzs",b"_satisfies_pzs"]) -> typing.Optional[typing_extensions.Literal["satisfies_pzs"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_shielded_instance_initial_state",b"_shielded_instance_initial_state"]) -> typing.Optional[typing_extensions.Literal["shielded_instance_initial_state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_disk",b"_source_disk"]) -> typing.Optional[typing_extensions.Literal["source_disk"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_disk_encryption_key",b"_source_disk_encryption_key"]) -> typing.Optional[typing_extensions.Literal["source_disk_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_disk_id",b"_source_disk_id"]) -> typing.Optional[typing_extensions.Literal["source_disk_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_image",b"_source_image"]) -> typing.Optional[typing_extensions.Literal["source_image"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_image_encryption_key",b"_source_image_encryption_key"]) -> typing.Optional[typing_extensions.Literal["source_image_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_image_id",b"_source_image_id"]) -> typing.Optional[typing_extensions.Literal["source_image_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_snapshot",b"_source_snapshot"]) -> typing.Optional[typing_extensions.Literal["source_snapshot"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_snapshot_encryption_key",b"_source_snapshot_encryption_key"]) -> typing.Optional[typing_extensions.Literal["source_snapshot_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_snapshot_id",b"_source_snapshot_id"]) -> typing.Optional[typing_extensions.Literal["source_snapshot_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_type",b"_source_type"]) -> typing.Optional[typing_extensions.Literal["source_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___Image = Image

class ImageFamilyView(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IMAGE_FIELD_NUMBER: builtins.int
    @property
    def image(self) -> global___Image:
        """The latest image that is part of the specified image family in the requested location, and that is not deprecated."""
        pass
    def __init__(self,
        *,
        image : typing.Optional[global___Image] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_image",b"_image","image",b"image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_image",b"_image","image",b"image"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_image",b"_image"]) -> typing.Optional[typing_extensions.Literal["image"]]: ...
global___ImageFamilyView = ImageFamilyView

class ImageList(google.protobuf.message.Message):
    """Contains a list of images."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Image]:
        """A list of Image resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Image]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ImageList = ImageList

class InitialStateConfig(google.protobuf.message.Message):
    """Initial State for shielded instance, these are public keys which are safe to store in public"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DBS_FIELD_NUMBER: builtins.int
    DBXS_FIELD_NUMBER: builtins.int
    KEKS_FIELD_NUMBER: builtins.int
    PK_FIELD_NUMBER: builtins.int
    @property
    def dbs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileContentBuffer]:
        """The Key Database (db)."""
        pass
    @property
    def dbxs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileContentBuffer]:
        """The forbidden key database (dbx)."""
        pass
    @property
    def keks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FileContentBuffer]:
        """The Key Exchange Key (KEK)."""
        pass
    @property
    def pk(self) -> global___FileContentBuffer:
        """The Platform Key (PK)."""
        pass
    def __init__(self,
        *,
        dbs : typing.Optional[typing.Iterable[global___FileContentBuffer]] = ...,
        dbxs : typing.Optional[typing.Iterable[global___FileContentBuffer]] = ...,
        keks : typing.Optional[typing.Iterable[global___FileContentBuffer]] = ...,
        pk : typing.Optional[global___FileContentBuffer] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_pk",b"_pk","pk",b"pk"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_pk",b"_pk","dbs",b"dbs","dbxs",b"dbxs","keks",b"keks","pk",b"pk"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pk",b"_pk"]) -> typing.Optional[typing_extensions.Literal["pk"]]: ...
global___InitialStateConfig = InitialStateConfig

class InsertAddressRequest(google.protobuf.message.Message):
    """A request message for Addresses.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ADDRESS_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def address_resource(self) -> global___Address:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        address_resource : typing.Optional[global___Address] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","address_resource",b"address_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","address_resource",b"address_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertAddressRequest = InsertAddressRequest

class InsertAutoscalerRequest(google.protobuf.message.Message):
    """A request message for Autoscalers.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def autoscaler_resource(self) -> global___Autoscaler:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        autoscaler_resource : typing.Optional[global___Autoscaler] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","autoscaler_resource",b"autoscaler_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","autoscaler_resource",b"autoscaler_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertAutoscalerRequest = InsertAutoscalerRequest

class InsertBackendBucketRequest(google.protobuf.message.Message):
    """A request message for BackendBuckets.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_BUCKET_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def backend_bucket_resource(self) -> global___BackendBucket:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_bucket_resource : typing.Optional[global___BackendBucket] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_bucket_resource",b"backend_bucket_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_bucket_resource",b"backend_bucket_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertBackendBucketRequest = InsertBackendBucketRequest

class InsertBackendServiceRequest(google.protobuf.message.Message):
    """A request message for BackendServices.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def backend_service_resource(self) -> global___BackendService:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_service_resource : typing.Optional[global___BackendService] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service_resource",b"backend_service_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service_resource",b"backend_service_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertBackendServiceRequest = InsertBackendServiceRequest

class InsertDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def disk_resource(self) -> global___Disk:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    source_image: typing.Text = ...
    """Source image to restore onto a disk. This field is optional."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        disk_resource : typing.Optional[global___Disk] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        source_image : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","_source_image",b"_source_image","disk_resource",b"disk_resource","request_id",b"request_id","source_image",b"source_image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","_source_image",b"_source_image","disk_resource",b"disk_resource","project",b"project","request_id",b"request_id","source_image",b"source_image","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_image",b"_source_image"]) -> typing.Optional[typing_extensions.Literal["source_image"]]: ...
global___InsertDiskRequest = InsertDiskRequest

class InsertExternalVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for ExternalVpnGateways.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXTERNAL_VPN_GATEWAY_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def external_vpn_gateway_resource(self) -> global___ExternalVpnGateway:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        external_vpn_gateway_resource : typing.Optional[global___ExternalVpnGateway] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","external_vpn_gateway_resource",b"external_vpn_gateway_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","external_vpn_gateway_resource",b"external_vpn_gateway_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertExternalVpnGatewayRequest = InsertExternalVpnGatewayRequest

class InsertFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_RESOURCE_FIELD_NUMBER: builtins.int
    PARENT_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def firewall_policy_resource(self) -> global___FirewallPolicy:
        """The body resource for this request"""
        pass
    parent_id: typing.Text = ...
    """Parent ID for this request. The ID can be either be "folders/[FOLDER_ID]" if the parent is a folder or "organizations/[ORGANIZATION_ID]" if the parent is an organization."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall_policy_resource : typing.Optional[global___FirewallPolicy] = ...,
        parent_id : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_policy_resource",b"firewall_policy_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_policy_resource",b"firewall_policy_resource","parent_id",b"parent_id","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertFirewallPolicyRequest = InsertFirewallPolicyRequest

class InsertFirewallRequest(google.protobuf.message.Message):
    """A request message for Firewalls.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def firewall_resource(self) -> global___Firewall:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall_resource : typing.Optional[global___Firewall] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_resource",b"firewall_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_resource",b"firewall_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertFirewallRequest = InsertFirewallRequest

class InsertForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for ForwardingRules.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def forwarding_rule_resource(self) -> global___ForwardingRule:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        forwarding_rule_resource : typing.Optional[global___ForwardingRule] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule_resource",b"forwarding_rule_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule_resource",b"forwarding_rule_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertForwardingRuleRequest = InsertForwardingRuleRequest

class InsertGlobalAddressRequest(google.protobuf.message.Message):
    """A request message for GlobalAddresses.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ADDRESS_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def address_resource(self) -> global___Address:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        address_resource : typing.Optional[global___Address] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","address_resource",b"address_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","address_resource",b"address_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertGlobalAddressRequest = InsertGlobalAddressRequest

class InsertGlobalForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for GlobalForwardingRules.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def forwarding_rule_resource(self) -> global___ForwardingRule:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        forwarding_rule_resource : typing.Optional[global___ForwardingRule] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule_resource",b"forwarding_rule_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule_resource",b"forwarding_rule_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertGlobalForwardingRuleRequest = InsertGlobalForwardingRuleRequest

class InsertGlobalNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for GlobalNetworkEndpointGroups.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def network_endpoint_group_resource(self) -> global___NetworkEndpointGroup:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network_endpoint_group_resource : typing.Optional[global___NetworkEndpointGroup] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group_resource",b"network_endpoint_group_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group_resource",b"network_endpoint_group_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertGlobalNetworkEndpointGroupRequest = InsertGlobalNetworkEndpointGroupRequest

class InsertGlobalPublicDelegatedPrefixeRequest(google.protobuf.message.Message):
    """A request message for GlobalPublicDelegatedPrefixes.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIX_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    @property
    def public_delegated_prefix_resource(self) -> global___PublicDelegatedPrefix:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_delegated_prefix_resource : typing.Optional[global___PublicDelegatedPrefix] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","public_delegated_prefix_resource",b"public_delegated_prefix_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","public_delegated_prefix_resource",b"public_delegated_prefix_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertGlobalPublicDelegatedPrefixeRequest = InsertGlobalPublicDelegatedPrefixeRequest

class InsertHealthCheckRequest(google.protobuf.message.Message):
    """A request message for HealthChecks.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def health_check_resource(self) -> global___HealthCheck:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check_resource : typing.Optional[global___HealthCheck] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_resource",b"health_check_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_resource",b"health_check_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertHealthCheckRequest = InsertHealthCheckRequest

class InsertImageRequest(google.protobuf.message.Message):
    """A request message for Images.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORCE_CREATE_FIELD_NUMBER: builtins.int
    IMAGE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    force_create: builtins.bool = ...
    """Force image creation if true."""

    @property
    def image_resource(self) -> global___Image:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        force_create : typing.Optional[builtins.bool] = ...,
        image_resource : typing.Optional[global___Image] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_force_create",b"_force_create","_request_id",b"_request_id","force_create",b"force_create","image_resource",b"image_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_force_create",b"_force_create","_request_id",b"_request_id","force_create",b"force_create","image_resource",b"image_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_force_create",b"_force_create"]) -> typing.Optional[typing_extensions.Literal["force_create"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertImageRequest = InsertImageRequest

class InsertInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def instance_group_manager_resource(self) -> global___InstanceGroupManager:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where you want to create the managed instance group."""

    def __init__(self,
        *,
        instance_group_manager_resource : typing.Optional[global___InstanceGroupManager] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager_resource",b"instance_group_manager_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager_resource",b"instance_group_manager_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertInstanceGroupManagerRequest = InsertInstanceGroupManagerRequest

class InsertInstanceGroupRequest(google.protobuf.message.Message):
    """A request message for InstanceGroups.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def instance_group_resource(self) -> global___InstanceGroup:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where you want to create the instance group."""

    def __init__(self,
        *,
        instance_group_resource : typing.Optional[global___InstanceGroup] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_resource",b"instance_group_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_resource",b"instance_group_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertInstanceGroupRequest = InsertInstanceGroupRequest

class InsertInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SOURCE_INSTANCE_TEMPLATE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def instance_resource(self) -> global___Instance:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    source_instance_template: typing.Text = ...
    """Specifies instance template to create the instance. This field is optional. It can be a full or partial URL. For example, the following are all valid URLs to an instance template: - https://www.googleapis.com/compute/v1/projects/project /global/instanceTemplates/instanceTemplate - projects/project/global/instanceTemplates/instanceTemplate - global/instanceTemplates/instanceTemplate"""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance_resource : typing.Optional[global___Instance] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        source_instance_template : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","_source_instance_template",b"_source_instance_template","instance_resource",b"instance_resource","request_id",b"request_id","source_instance_template",b"source_instance_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","_source_instance_template",b"_source_instance_template","instance_resource",b"instance_resource","project",b"project","request_id",b"request_id","source_instance_template",b"source_instance_template","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_instance_template",b"_source_instance_template"]) -> typing.Optional[typing_extensions.Literal["source_instance_template"]]: ...
global___InsertInstanceRequest = InsertInstanceRequest

class InsertInstanceTemplateRequest(google.protobuf.message.Message):
    """A request message for InstanceTemplates.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_TEMPLATE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def instance_template_resource(self) -> global___InstanceTemplate:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_template_resource : typing.Optional[global___InstanceTemplate] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_template_resource",b"instance_template_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_template_resource",b"instance_template_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertInstanceTemplateRequest = InsertInstanceTemplateRequest

class InsertInterconnectAttachmentRequest(google.protobuf.message.Message):
    """A request message for InterconnectAttachments.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_ATTACHMENT_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    @property
    def interconnect_attachment_resource(self) -> global___InterconnectAttachment:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    validate_only: builtins.bool = ...
    """If true, the request will not be committed."""

    def __init__(self,
        *,
        interconnect_attachment_resource : typing.Optional[global___InterconnectAttachment] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        validate_only : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","_validate_only",b"_validate_only","interconnect_attachment_resource",b"interconnect_attachment_resource","request_id",b"request_id","validate_only",b"validate_only"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","_validate_only",b"_validate_only","interconnect_attachment_resource",b"interconnect_attachment_resource","project",b"project","region",b"region","request_id",b"request_id","validate_only",b"validate_only"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_validate_only",b"_validate_only"]) -> typing.Optional[typing_extensions.Literal["validate_only"]]: ...
global___InsertInterconnectAttachmentRequest = InsertInterconnectAttachmentRequest

class InsertInterconnectRequest(google.protobuf.message.Message):
    """A request message for Interconnects.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def interconnect_resource(self) -> global___Interconnect:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        interconnect_resource : typing.Optional[global___Interconnect] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","interconnect_resource",b"interconnect_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","interconnect_resource",b"interconnect_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertInterconnectRequest = InsertInterconnectRequest

class InsertLicenseRequest(google.protobuf.message.Message):
    """A request message for Licenses.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LICENSE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def license_resource(self) -> global___License:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        license_resource : typing.Optional[global___License] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","license_resource",b"license_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","license_resource",b"license_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertLicenseRequest = InsertLicenseRequest

class InsertNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for NetworkEndpointGroups.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def network_endpoint_group_resource(self) -> global___NetworkEndpointGroup:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where you want to create the network endpoint group. It should comply with RFC1035."""

    def __init__(self,
        *,
        network_endpoint_group_resource : typing.Optional[global___NetworkEndpointGroup] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group_resource",b"network_endpoint_group_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group_resource",b"network_endpoint_group_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertNetworkEndpointGroupRequest = InsertNetworkEndpointGroupRequest

class InsertNetworkRequest(google.protobuf.message.Message):
    """A request message for Networks.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def network_resource(self) -> global___Network:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network_resource : typing.Optional[global___Network] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_resource",b"network_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_resource",b"network_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertNetworkRequest = InsertNetworkRequest

class InsertNodeGroupRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INITIAL_NODE_COUNT_FIELD_NUMBER: builtins.int
    NODE_GROUP_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    initial_node_count: builtins.int = ...
    """Initial count of nodes in the node group."""

    @property
    def node_group_resource(self) -> global___NodeGroup:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        initial_node_count : builtins.int = ...,
        node_group_resource : typing.Optional[global___NodeGroup] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_group_resource",b"node_group_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","initial_node_count",b"initial_node_count","node_group_resource",b"node_group_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertNodeGroupRequest = InsertNodeGroupRequest

class InsertNodeTemplateRequest(google.protobuf.message.Message):
    """A request message for NodeTemplates.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_TEMPLATE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def node_template_resource(self) -> global___NodeTemplate:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        node_template_resource : typing.Optional[global___NodeTemplate] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_template_resource",b"node_template_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_template_resource",b"node_template_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertNodeTemplateRequest = InsertNodeTemplateRequest

class InsertPacketMirroringRequest(google.protobuf.message.Message):
    """A request message for PacketMirrorings.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PACKET_MIRRORING_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def packet_mirroring_resource(self) -> global___PacketMirroring:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        packet_mirroring_resource : typing.Optional[global___PacketMirroring] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","packet_mirroring_resource",b"packet_mirroring_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","packet_mirroring_resource",b"packet_mirroring_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertPacketMirroringRequest = InsertPacketMirroringRequest

class InsertPublicAdvertisedPrefixeRequest(google.protobuf.message.Message):
    """A request message for PublicAdvertisedPrefixes.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_ADVERTISED_PREFIX_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    @property
    def public_advertised_prefix_resource(self) -> global___PublicAdvertisedPrefix:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_advertised_prefix_resource : typing.Optional[global___PublicAdvertisedPrefix] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","public_advertised_prefix_resource",b"public_advertised_prefix_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","public_advertised_prefix_resource",b"public_advertised_prefix_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertPublicAdvertisedPrefixeRequest = InsertPublicAdvertisedPrefixeRequest

class InsertPublicDelegatedPrefixeRequest(google.protobuf.message.Message):
    """A request message for PublicDelegatedPrefixes.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIX_RESOURCE_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    @property
    def public_delegated_prefix_resource(self) -> global___PublicDelegatedPrefix:
        """The body resource for this request"""
        pass
    region: typing.Text = ...
    """Name of the region of this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_delegated_prefix_resource : typing.Optional[global___PublicDelegatedPrefix] = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","public_delegated_prefix_resource",b"public_delegated_prefix_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","public_delegated_prefix_resource",b"public_delegated_prefix_resource","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertPublicDelegatedPrefixeRequest = InsertPublicDelegatedPrefixeRequest

class InsertRegionAutoscalerRequest(google.protobuf.message.Message):
    """A request message for RegionAutoscalers.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def autoscaler_resource(self) -> global___Autoscaler:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        autoscaler_resource : typing.Optional[global___Autoscaler] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","autoscaler_resource",b"autoscaler_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","autoscaler_resource",b"autoscaler_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionAutoscalerRequest = InsertRegionAutoscalerRequest

class InsertRegionBackendServiceRequest(google.protobuf.message.Message):
    """A request message for RegionBackendServices.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def backend_service_resource(self) -> global___BackendService:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_service_resource : typing.Optional[global___BackendService] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service_resource",b"backend_service_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service_resource",b"backend_service_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionBackendServiceRequest = InsertRegionBackendServiceRequest

class InsertRegionCommitmentRequest(google.protobuf.message.Message):
    """A request message for RegionCommitments.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMMITMENT_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def commitment_resource(self) -> global___Commitment:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        commitment_resource : typing.Optional[global___Commitment] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","commitment_resource",b"commitment_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","commitment_resource",b"commitment_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionCommitmentRequest = InsertRegionCommitmentRequest

class InsertRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SOURCE_IMAGE_FIELD_NUMBER: builtins.int
    @property
    def disk_resource(self) -> global___Disk:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    source_image: typing.Text = ...
    """Source image to restore onto a disk. This field is optional."""

    def __init__(self,
        *,
        disk_resource : typing.Optional[global___Disk] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        source_image : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","_source_image",b"_source_image","disk_resource",b"disk_resource","request_id",b"request_id","source_image",b"source_image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","_source_image",b"_source_image","disk_resource",b"disk_resource","project",b"project","region",b"region","request_id",b"request_id","source_image",b"source_image"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_image",b"_source_image"]) -> typing.Optional[typing_extensions.Literal["source_image"]]: ...
global___InsertRegionDiskRequest = InsertRegionDiskRequest

class InsertRegionHealthCheckRequest(google.protobuf.message.Message):
    """A request message for RegionHealthChecks.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def health_check_resource(self) -> global___HealthCheck:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check_resource : typing.Optional[global___HealthCheck] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_resource",b"health_check_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_resource",b"health_check_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionHealthCheckRequest = InsertRegionHealthCheckRequest

class InsertRegionHealthCheckServiceRequest(google.protobuf.message.Message):
    """A request message for RegionHealthCheckServices.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_SERVICE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def health_check_service_resource(self) -> global___HealthCheckService:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check_service_resource : typing.Optional[global___HealthCheckService] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_service_resource",b"health_check_service_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_service_resource",b"health_check_service_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionHealthCheckServiceRequest = InsertRegionHealthCheckServiceRequest

class InsertRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def instance_group_manager_resource(self) -> global___InstanceGroupManager:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager_resource : typing.Optional[global___InstanceGroupManager] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager_resource",b"instance_group_manager_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager_resource",b"instance_group_manager_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionInstanceGroupManagerRequest = InsertRegionInstanceGroupManagerRequest

class InsertRegionNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for RegionNetworkEndpointGroups.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUP_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def network_endpoint_group_resource(self) -> global___NetworkEndpointGroup:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region where you want to create the network endpoint group. It should comply with RFC1035."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network_endpoint_group_resource : typing.Optional[global___NetworkEndpointGroup] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group_resource",b"network_endpoint_group_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_endpoint_group_resource",b"network_endpoint_group_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionNetworkEndpointGroupRequest = InsertRegionNetworkEndpointGroupRequest

class InsertRegionNotificationEndpointRequest(google.protobuf.message.Message):
    """A request message for RegionNotificationEndpoints.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NOTIFICATION_ENDPOINT_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def notification_endpoint_resource(self) -> global___NotificationEndpoint:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        notification_endpoint_resource : typing.Optional[global___NotificationEndpoint] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","notification_endpoint_resource",b"notification_endpoint_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","notification_endpoint_resource",b"notification_endpoint_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionNotificationEndpointRequest = InsertRegionNotificationEndpointRequest

class InsertRegionSslCertificateRequest(google.protobuf.message.Message):
    """A request message for RegionSslCertificates.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SSL_CERTIFICATE_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    @property
    def ssl_certificate_resource(self) -> global___SslCertificate:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ssl_certificate_resource : typing.Optional[global___SslCertificate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","ssl_certificate_resource",b"ssl_certificate_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","ssl_certificate_resource",b"ssl_certificate_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionSslCertificateRequest = InsertRegionSslCertificateRequest

class InsertRegionTargetHttpProxyRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpProxies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTP_PROXY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_http_proxy_resource(self) -> global___TargetHttpProxy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_http_proxy_resource : typing.Optional[global___TargetHttpProxy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_http_proxy_resource",b"target_http_proxy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_http_proxy_resource",b"target_http_proxy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionTargetHttpProxyRequest = InsertRegionTargetHttpProxyRequest

class InsertRegionTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpsProxies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    @property
    def target_https_proxy_resource(self) -> global___TargetHttpsProxy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_https_proxy_resource : typing.Optional[global___TargetHttpsProxy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_https_proxy_resource",b"target_https_proxy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_https_proxy_resource",b"target_https_proxy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionTargetHttpsProxyRequest = InsertRegionTargetHttpsProxyRequest

class InsertRegionUrlMapRequest(google.protobuf.message.Message):
    """A request message for RegionUrlMaps.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    URL_MAP_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """begin_interface: MixerMutationRequestBuilder Request ID to support idempotency."""

    @property
    def url_map_resource(self) -> global___UrlMap:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        url_map_resource : typing.Optional[global___UrlMap] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","url_map_resource",b"url_map_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","url_map_resource",b"url_map_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRegionUrlMapRequest = InsertRegionUrlMapRequest

class InsertReservationRequest(google.protobuf.message.Message):
    """A request message for Reservations.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESERVATION_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def reservation_resource(self) -> global___Reservation:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        reservation_resource : typing.Optional[global___Reservation] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","reservation_resource",b"reservation_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","reservation_resource",b"reservation_resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertReservationRequest = InsertReservationRequest

class InsertResourcePolicyRequest(google.protobuf.message.Message):
    """A request message for ResourcePolicies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESOURCE_POLICY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def resource_policy_resource(self) -> global___ResourcePolicy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        resource_policy_resource : typing.Optional[global___ResourcePolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","resource_policy_resource",b"resource_policy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","resource_policy_resource",b"resource_policy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertResourcePolicyRequest = InsertResourcePolicyRequest

class InsertRouteRequest(google.protobuf.message.Message):
    """A request message for Routes.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ROUTE_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def route_resource(self) -> global___Route:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        route_resource : typing.Optional[global___Route] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","route_resource",b"route_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","route_resource",b"route_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRouteRequest = InsertRouteRequest

class InsertRouterRequest(google.protobuf.message.Message):
    """A request message for Routers.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ROUTER_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def router_resource(self) -> global___Router:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        router_resource : typing.Optional[global___Router] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","router_resource",b"router_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","router_resource",b"router_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertRouterRequest = InsertRouterRequest

class InsertSecurityPolicyRequest(google.protobuf.message.Message):
    """A request message for SecurityPolicies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def security_policy_resource(self) -> global___SecurityPolicy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        security_policy_resource : typing.Optional[global___SecurityPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","security_policy_resource",b"security_policy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","security_policy_resource",b"security_policy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertSecurityPolicyRequest = InsertSecurityPolicyRequest

class InsertServiceAttachmentRequest(google.protobuf.message.Message):
    """A request message for ServiceAttachments.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SERVICE_ATTACHMENT_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region of this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    @property
    def service_attachment_resource(self) -> global___ServiceAttachment:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        service_attachment_resource : typing.Optional[global___ServiceAttachment] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","service_attachment_resource",b"service_attachment_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","service_attachment_resource",b"service_attachment_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertServiceAttachmentRequest = InsertServiceAttachmentRequest

class InsertSslCertificateRequest(google.protobuf.message.Message):
    """A request message for SslCertificates.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SSL_CERTIFICATE_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    @property
    def ssl_certificate_resource(self) -> global___SslCertificate:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ssl_certificate_resource : typing.Optional[global___SslCertificate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","ssl_certificate_resource",b"ssl_certificate_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","ssl_certificate_resource",b"ssl_certificate_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertSslCertificateRequest = InsertSslCertificateRequest

class InsertSslPolicyRequest(google.protobuf.message.Message):
    """A request message for SslPolicies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SSL_POLICY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def ssl_policy_resource(self) -> global___SslPolicy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ssl_policy_resource : typing.Optional[global___SslPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","ssl_policy_resource",b"ssl_policy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","ssl_policy_resource",b"ssl_policy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertSslPolicyRequest = InsertSslPolicyRequest

class InsertSubnetworkRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SUBNETWORK_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def subnetwork_resource(self) -> global___Subnetwork:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        subnetwork_resource : typing.Optional[global___Subnetwork] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","subnetwork_resource",b"subnetwork_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","subnetwork_resource",b"subnetwork_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertSubnetworkRequest = InsertSubnetworkRequest

class InsertTargetGrpcProxyRequest(google.protobuf.message.Message):
    """A request message for TargetGrpcProxies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_GRPC_PROXY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    @property
    def target_grpc_proxy_resource(self) -> global___TargetGrpcProxy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_grpc_proxy_resource : typing.Optional[global___TargetGrpcProxy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_grpc_proxy_resource",b"target_grpc_proxy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_grpc_proxy_resource",b"target_grpc_proxy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertTargetGrpcProxyRequest = InsertTargetGrpcProxyRequest

class InsertTargetHttpProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpProxies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTP_PROXY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_http_proxy_resource(self) -> global___TargetHttpProxy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_http_proxy_resource : typing.Optional[global___TargetHttpProxy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_http_proxy_resource",b"target_http_proxy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_http_proxy_resource",b"target_http_proxy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertTargetHttpProxyRequest = InsertTargetHttpProxyRequest

class InsertTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpsProxies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_https_proxy_resource(self) -> global___TargetHttpsProxy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_https_proxy_resource : typing.Optional[global___TargetHttpsProxy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_https_proxy_resource",b"target_https_proxy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_https_proxy_resource",b"target_https_proxy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertTargetHttpsProxyRequest = InsertTargetHttpsProxyRequest

class InsertTargetInstanceRequest(google.protobuf.message.Message):
    """A request message for TargetInstances.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_INSTANCE_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_instance_resource(self) -> global___TargetInstance:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """Name of the zone scoping this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_instance_resource : typing.Optional[global___TargetInstance] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_instance_resource",b"target_instance_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_instance_resource",b"target_instance_resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertTargetInstanceRequest = InsertTargetInstanceRequest

class InsertTargetPoolRequest(google.protobuf.message.Message):
    """A request message for TargetPools.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_POOL_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_pool_resource(self) -> global___TargetPool:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_pool_resource : typing.Optional[global___TargetPool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_pool_resource",b"target_pool_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_pool_resource",b"target_pool_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertTargetPoolRequest = InsertTargetPoolRequest

class InsertTargetSslProxyRequest(google.protobuf.message.Message):
    """A request message for TargetSslProxies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_SSL_PROXY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_ssl_proxy_resource(self) -> global___TargetSslProxy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_ssl_proxy_resource : typing.Optional[global___TargetSslProxy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_ssl_proxy_resource",b"target_ssl_proxy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_ssl_proxy_resource",b"target_ssl_proxy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertTargetSslProxyRequest = InsertTargetSslProxyRequest

class InsertTargetTcpProxyRequest(google.protobuf.message.Message):
    """A request message for TargetTcpProxies.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_TCP_PROXY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_tcp_proxy_resource(self) -> global___TargetTcpProxy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_tcp_proxy_resource : typing.Optional[global___TargetTcpProxy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_tcp_proxy_resource",b"target_tcp_proxy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_tcp_proxy_resource",b"target_tcp_proxy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertTargetTcpProxyRequest = InsertTargetTcpProxyRequest

class InsertTargetVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for TargetVpnGateways.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_VPN_GATEWAY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_vpn_gateway_resource(self) -> global___TargetVpnGateway:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_vpn_gateway_resource : typing.Optional[global___TargetVpnGateway] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_vpn_gateway_resource",b"target_vpn_gateway_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_vpn_gateway_resource",b"target_vpn_gateway_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertTargetVpnGatewayRequest = InsertTargetVpnGatewayRequest

class InsertUrlMapRequest(google.protobuf.message.Message):
    """A request message for UrlMaps.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    URL_MAP_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def url_map_resource(self) -> global___UrlMap:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        url_map_resource : typing.Optional[global___UrlMap] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","url_map_resource",b"url_map_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","url_map_resource",b"url_map_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertUrlMapRequest = InsertUrlMapRequest

class InsertVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for VpnGateways.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    VPN_GATEWAY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def vpn_gateway_resource(self) -> global___VpnGateway:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        vpn_gateway_resource : typing.Optional[global___VpnGateway] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","vpn_gateway_resource",b"vpn_gateway_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","vpn_gateway_resource",b"vpn_gateway_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertVpnGatewayRequest = InsertVpnGatewayRequest

class InsertVpnTunnelRequest(google.protobuf.message.Message):
    """A request message for VpnTunnels.Insert. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    VPN_TUNNEL_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def vpn_tunnel_resource(self) -> global___VpnTunnel:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        vpn_tunnel_resource : typing.Optional[global___VpnTunnel] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","vpn_tunnel_resource",b"vpn_tunnel_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","vpn_tunnel_resource",b"vpn_tunnel_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InsertVpnTunnelRequest = InsertVpnTunnelRequest

class Instance(google.protobuf.message.Message):
    """Represents an Instance resource. An instance is a virtual machine that is hosted on Google Cloud Platform. For more information, read Virtual Machine Instances."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PrivateIpv6GoogleAccess:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PrivateIpv6GoogleAccessEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PrivateIpv6GoogleAccess.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PRIVATE_IPV6_GOOGLE_ACCESS: Instance.PrivateIpv6GoogleAccess.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE: Instance.PrivateIpv6GoogleAccess.ValueType = ...  # 427975994
        """Bidirectional private IPv6 access to/from Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before."""

        ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE: Instance.PrivateIpv6GoogleAccess.ValueType = ...  # 288210263
        """Outbound private IPv6 access from VMs in this subnet to Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before."""

        INHERIT_FROM_SUBNETWORK: Instance.PrivateIpv6GoogleAccess.ValueType = ...  # 530256959
        """Each network interface inherits PrivateIpv6GoogleAccess from its subnetwork."""

    class PrivateIpv6GoogleAccess(_PrivateIpv6GoogleAccess, metaclass=_PrivateIpv6GoogleAccessEnumTypeWrapper):
        """The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default."""
        pass

    UNDEFINED_PRIVATE_IPV6_GOOGLE_ACCESS: Instance.PrivateIpv6GoogleAccess.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE: Instance.PrivateIpv6GoogleAccess.ValueType = ...  # 427975994
    """Bidirectional private IPv6 access to/from Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before."""

    ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE: Instance.PrivateIpv6GoogleAccess.ValueType = ...  # 288210263
    """Outbound private IPv6 access from VMs in this subnet to Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before."""

    INHERIT_FROM_SUBNETWORK: Instance.PrivateIpv6GoogleAccess.ValueType = ...  # 530256959
    """Each network interface inherits PrivateIpv6GoogleAccess from its subnetwork."""


    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Instance.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DEPROVISIONING: Instance.Status.ValueType = ...  # 428935662
        """The Nanny is halted and we are performing tear down tasks like network deprogramming, releasing quota, IP, tearing down disks etc."""

        PROVISIONING: Instance.Status.ValueType = ...  # 290896621
        """Resources are being allocated for the instance."""

        REPAIRING: Instance.Status.ValueType = ...  # 413483285
        """The instance is in repair."""

        RUNNING: Instance.Status.ValueType = ...  # 121282975
        """The instance is running."""

        STAGING: Instance.Status.ValueType = ...  # 431072283
        """All required resources have been allocated and the instance is being started."""

        STOPPED: Instance.Status.ValueType = ...  # 444276141
        """The instance has stopped successfully."""

        STOPPING: Instance.Status.ValueType = ...  # 350791796
        """The instance is currently stopping (either being deleted or killed)."""

        SUSPENDED: Instance.Status.ValueType = ...  # 51223995
        """The instance has suspended."""

        SUSPENDING: Instance.Status.ValueType = ...  # 514206246
        """The instance is suspending."""

        TERMINATED: Instance.Status.ValueType = ...  # 250018339
        """The instance has stopped (either by explicit action or underlying failure)."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle."""
        pass

    UNDEFINED_STATUS: Instance.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DEPROVISIONING: Instance.Status.ValueType = ...  # 428935662
    """The Nanny is halted and we are performing tear down tasks like network deprogramming, releasing quota, IP, tearing down disks etc."""

    PROVISIONING: Instance.Status.ValueType = ...  # 290896621
    """Resources are being allocated for the instance."""

    REPAIRING: Instance.Status.ValueType = ...  # 413483285
    """The instance is in repair."""

    RUNNING: Instance.Status.ValueType = ...  # 121282975
    """The instance is running."""

    STAGING: Instance.Status.ValueType = ...  # 431072283
    """All required resources have been allocated and the instance is being started."""

    STOPPED: Instance.Status.ValueType = ...  # 444276141
    """The instance has stopped successfully."""

    STOPPING: Instance.Status.ValueType = ...  # 350791796
    """The instance is currently stopping (either being deleted or killed)."""

    SUSPENDED: Instance.Status.ValueType = ...  # 51223995
    """The instance has suspended."""

    SUSPENDING: Instance.Status.ValueType = ...  # 514206246
    """The instance is suspending."""

    TERMINATED: Instance.Status.ValueType = ...  # 250018339
    """The instance has stopped (either by explicit action or underlying failure)."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ADVANCED_MACHINE_FEATURES_FIELD_NUMBER: builtins.int
    CAN_IP_FORWARD_FIELD_NUMBER: builtins.int
    CONFIDENTIAL_INSTANCE_CONFIG_FIELD_NUMBER: builtins.int
    CPU_PLATFORM_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISKS_FIELD_NUMBER: builtins.int
    DISPLAY_DEVICE_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    GUEST_ACCELERATORS_FIELD_NUMBER: builtins.int
    HOSTNAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LAST_START_TIMESTAMP_FIELD_NUMBER: builtins.int
    LAST_STOP_TIMESTAMP_FIELD_NUMBER: builtins.int
    LAST_SUSPENDED_TIMESTAMP_FIELD_NUMBER: builtins.int
    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    MIN_CPU_PLATFORM_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACES_FIELD_NUMBER: builtins.int
    PRIVATE_IPV6_GOOGLE_ACCESS_FIELD_NUMBER: builtins.int
    RESERVATION_AFFINITY_FIELD_NUMBER: builtins.int
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    SATISFIES_PZS_FIELD_NUMBER: builtins.int
    SCHEDULING_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNTS_FIELD_NUMBER: builtins.int
    SHIELDED_INSTANCE_CONFIG_FIELD_NUMBER: builtins.int
    SHIELDED_INSTANCE_INTEGRITY_POLICY_FIELD_NUMBER: builtins.int
    START_RESTRICTED_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def advanced_machine_features(self) -> global___AdvancedMachineFeatures:
        """Controls for advanced machine-related behavior features."""
        pass
    can_ip_forward: builtins.bool = ...
    """Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding ."""

    @property
    def confidential_instance_config(self) -> global___ConfidentialInstanceConfig: ...
    cpu_platform: typing.Text = ...
    """[Output Only] The CPU platform used by this instance."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    deletion_protection: builtins.bool = ...
    """Whether the resource should be protected against deletion."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    @property
    def disks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttachedDisk]:
        """Array of disks associated with this instance. Persistent disks must be created before you can assign them."""
        pass
    @property
    def display_device(self) -> global___DisplayDevice:
        """Enables display device for the instance."""
        pass
    fingerprint: typing.Text = ...
    """Specifies a fingerprint for this resource, which is essentially a hash of the instance's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance. To see the latest fingerprint, make get() request to the instance."""

    @property
    def guest_accelerators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AcceleratorConfig]:
        """A list of the type and count of accelerator cards attached to the instance."""
        pass
    hostname: typing.Text = ...
    """Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#instance for instances."""

    label_fingerprint: typing.Text = ...
    """A fingerprint for this request, which is essentially a hash of the label's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the instance."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels to apply to this instance. These can be later modified by the setLabels method."""
        pass
    last_start_timestamp: typing.Text = ...
    """[Output Only] Last start timestamp in RFC3339 text format."""

    last_stop_timestamp: typing.Text = ...
    """[Output Only] Last stop timestamp in RFC3339 text format."""

    last_suspended_timestamp: typing.Text = ...
    """[Output Only] Last suspended timestamp in RFC3339 text format."""

    machine_type: typing.Text = ...
    """Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types."""

    @property
    def metadata(self) -> global___Metadata:
        """The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys."""
        pass
    min_cpu_platform: typing.Text = ...
    """Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge"."""

    name: typing.Text = ...
    """The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def network_interfaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkInterface]:
        """An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance."""
        pass
    private_ipv6_google_access: typing.Text = ...
    """The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.
    Check the PrivateIpv6GoogleAccess enum for the list of possible values.
    """

    @property
    def reservation_affinity(self) -> global___ReservationAffinity:
        """Specifies the reservations that this instance can consume from."""
        pass
    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Resource policies applied to this instance."""
        pass
    satisfies_pzs: builtins.bool = ...
    """[Output Only] Reserved for future use."""

    @property
    def scheduling(self) -> global___Scheduling:
        """Sets the scheduling options for this instance."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def service_accounts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServiceAccount]:
        """A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information."""
        pass
    @property
    def shielded_instance_config(self) -> global___ShieldedInstanceConfig: ...
    @property
    def shielded_instance_integrity_policy(self) -> global___ShieldedInstanceIntegrityPolicy: ...
    start_restricted: builtins.bool = ...
    """[Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity."""

    status: typing.Text = ...
    """[Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.
    Check the Status enum for the list of possible values.
    """

    status_message: typing.Text = ...
    """[Output Only] An optional, human-readable explanation of the status."""

    @property
    def tags(self) -> global___Tags:
        """Tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035. Multiple tags can be specified via the 'tags.items' field."""
        pass
    zone: typing.Text = ...
    """[Output Only] URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    def __init__(self,
        *,
        advanced_machine_features : typing.Optional[global___AdvancedMachineFeatures] = ...,
        can_ip_forward : typing.Optional[builtins.bool] = ...,
        confidential_instance_config : typing.Optional[global___ConfidentialInstanceConfig] = ...,
        cpu_platform : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        deletion_protection : typing.Optional[builtins.bool] = ...,
        description : typing.Optional[typing.Text] = ...,
        disks : typing.Optional[typing.Iterable[global___AttachedDisk]] = ...,
        display_device : typing.Optional[global___DisplayDevice] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        guest_accelerators : typing.Optional[typing.Iterable[global___AcceleratorConfig]] = ...,
        hostname : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        last_start_timestamp : typing.Optional[typing.Text] = ...,
        last_stop_timestamp : typing.Optional[typing.Text] = ...,
        last_suspended_timestamp : typing.Optional[typing.Text] = ...,
        machine_type : typing.Optional[typing.Text] = ...,
        metadata : typing.Optional[global___Metadata] = ...,
        min_cpu_platform : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        network_interfaces : typing.Optional[typing.Iterable[global___NetworkInterface]] = ...,
        private_ipv6_google_access : typing.Optional[typing.Text] = ...,
        reservation_affinity : typing.Optional[global___ReservationAffinity] = ...,
        resource_policies : typing.Optional[typing.Iterable[typing.Text]] = ...,
        satisfies_pzs : typing.Optional[builtins.bool] = ...,
        scheduling : typing.Optional[global___Scheduling] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        service_accounts : typing.Optional[typing.Iterable[global___ServiceAccount]] = ...,
        shielded_instance_config : typing.Optional[global___ShieldedInstanceConfig] = ...,
        shielded_instance_integrity_policy : typing.Optional[global___ShieldedInstanceIntegrityPolicy] = ...,
        start_restricted : typing.Optional[builtins.bool] = ...,
        status : typing.Optional[typing.Text] = ...,
        status_message : typing.Optional[typing.Text] = ...,
        tags : typing.Optional[global___Tags] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_advanced_machine_features",b"_advanced_machine_features","_can_ip_forward",b"_can_ip_forward","_confidential_instance_config",b"_confidential_instance_config","_cpu_platform",b"_cpu_platform","_creation_timestamp",b"_creation_timestamp","_deletion_protection",b"_deletion_protection","_description",b"_description","_display_device",b"_display_device","_fingerprint",b"_fingerprint","_hostname",b"_hostname","_id",b"_id","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_last_start_timestamp",b"_last_start_timestamp","_last_stop_timestamp",b"_last_stop_timestamp","_last_suspended_timestamp",b"_last_suspended_timestamp","_machine_type",b"_machine_type","_metadata",b"_metadata","_min_cpu_platform",b"_min_cpu_platform","_name",b"_name","_private_ipv6_google_access",b"_private_ipv6_google_access","_reservation_affinity",b"_reservation_affinity","_satisfies_pzs",b"_satisfies_pzs","_scheduling",b"_scheduling","_self_link",b"_self_link","_shielded_instance_config",b"_shielded_instance_config","_shielded_instance_integrity_policy",b"_shielded_instance_integrity_policy","_start_restricted",b"_start_restricted","_status",b"_status","_status_message",b"_status_message","_tags",b"_tags","_zone",b"_zone","advanced_machine_features",b"advanced_machine_features","can_ip_forward",b"can_ip_forward","confidential_instance_config",b"confidential_instance_config","cpu_platform",b"cpu_platform","creation_timestamp",b"creation_timestamp","deletion_protection",b"deletion_protection","description",b"description","display_device",b"display_device","fingerprint",b"fingerprint","hostname",b"hostname","id",b"id","kind",b"kind","label_fingerprint",b"label_fingerprint","last_start_timestamp",b"last_start_timestamp","last_stop_timestamp",b"last_stop_timestamp","last_suspended_timestamp",b"last_suspended_timestamp","machine_type",b"machine_type","metadata",b"metadata","min_cpu_platform",b"min_cpu_platform","name",b"name","private_ipv6_google_access",b"private_ipv6_google_access","reservation_affinity",b"reservation_affinity","satisfies_pzs",b"satisfies_pzs","scheduling",b"scheduling","self_link",b"self_link","shielded_instance_config",b"shielded_instance_config","shielded_instance_integrity_policy",b"shielded_instance_integrity_policy","start_restricted",b"start_restricted","status",b"status","status_message",b"status_message","tags",b"tags","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_advanced_machine_features",b"_advanced_machine_features","_can_ip_forward",b"_can_ip_forward","_confidential_instance_config",b"_confidential_instance_config","_cpu_platform",b"_cpu_platform","_creation_timestamp",b"_creation_timestamp","_deletion_protection",b"_deletion_protection","_description",b"_description","_display_device",b"_display_device","_fingerprint",b"_fingerprint","_hostname",b"_hostname","_id",b"_id","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_last_start_timestamp",b"_last_start_timestamp","_last_stop_timestamp",b"_last_stop_timestamp","_last_suspended_timestamp",b"_last_suspended_timestamp","_machine_type",b"_machine_type","_metadata",b"_metadata","_min_cpu_platform",b"_min_cpu_platform","_name",b"_name","_private_ipv6_google_access",b"_private_ipv6_google_access","_reservation_affinity",b"_reservation_affinity","_satisfies_pzs",b"_satisfies_pzs","_scheduling",b"_scheduling","_self_link",b"_self_link","_shielded_instance_config",b"_shielded_instance_config","_shielded_instance_integrity_policy",b"_shielded_instance_integrity_policy","_start_restricted",b"_start_restricted","_status",b"_status","_status_message",b"_status_message","_tags",b"_tags","_zone",b"_zone","advanced_machine_features",b"advanced_machine_features","can_ip_forward",b"can_ip_forward","confidential_instance_config",b"confidential_instance_config","cpu_platform",b"cpu_platform","creation_timestamp",b"creation_timestamp","deletion_protection",b"deletion_protection","description",b"description","disks",b"disks","display_device",b"display_device","fingerprint",b"fingerprint","guest_accelerators",b"guest_accelerators","hostname",b"hostname","id",b"id","kind",b"kind","label_fingerprint",b"label_fingerprint","labels",b"labels","last_start_timestamp",b"last_start_timestamp","last_stop_timestamp",b"last_stop_timestamp","last_suspended_timestamp",b"last_suspended_timestamp","machine_type",b"machine_type","metadata",b"metadata","min_cpu_platform",b"min_cpu_platform","name",b"name","network_interfaces",b"network_interfaces","private_ipv6_google_access",b"private_ipv6_google_access","reservation_affinity",b"reservation_affinity","resource_policies",b"resource_policies","satisfies_pzs",b"satisfies_pzs","scheduling",b"scheduling","self_link",b"self_link","service_accounts",b"service_accounts","shielded_instance_config",b"shielded_instance_config","shielded_instance_integrity_policy",b"shielded_instance_integrity_policy","start_restricted",b"start_restricted","status",b"status","status_message",b"status_message","tags",b"tags","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_advanced_machine_features",b"_advanced_machine_features"]) -> typing.Optional[typing_extensions.Literal["advanced_machine_features"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_can_ip_forward",b"_can_ip_forward"]) -> typing.Optional[typing_extensions.Literal["can_ip_forward"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_confidential_instance_config",b"_confidential_instance_config"]) -> typing.Optional[typing_extensions.Literal["confidential_instance_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cpu_platform",b"_cpu_platform"]) -> typing.Optional[typing_extensions.Literal["cpu_platform"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deletion_protection",b"_deletion_protection"]) -> typing.Optional[typing_extensions.Literal["deletion_protection"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_display_device",b"_display_device"]) -> typing.Optional[typing_extensions.Literal["display_device"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_hostname",b"_hostname"]) -> typing.Optional[typing_extensions.Literal["hostname"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_last_start_timestamp",b"_last_start_timestamp"]) -> typing.Optional[typing_extensions.Literal["last_start_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_last_stop_timestamp",b"_last_stop_timestamp"]) -> typing.Optional[typing_extensions.Literal["last_stop_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_last_suspended_timestamp",b"_last_suspended_timestamp"]) -> typing.Optional[typing_extensions.Literal["last_suspended_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_machine_type",b"_machine_type"]) -> typing.Optional[typing_extensions.Literal["machine_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_metadata",b"_metadata"]) -> typing.Optional[typing_extensions.Literal["metadata"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_cpu_platform",b"_min_cpu_platform"]) -> typing.Optional[typing_extensions.Literal["min_cpu_platform"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_private_ipv6_google_access",b"_private_ipv6_google_access"]) -> typing.Optional[typing_extensions.Literal["private_ipv6_google_access"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_reservation_affinity",b"_reservation_affinity"]) -> typing.Optional[typing_extensions.Literal["reservation_affinity"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_satisfies_pzs",b"_satisfies_pzs"]) -> typing.Optional[typing_extensions.Literal["satisfies_pzs"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_scheduling",b"_scheduling"]) -> typing.Optional[typing_extensions.Literal["scheduling"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_shielded_instance_config",b"_shielded_instance_config"]) -> typing.Optional[typing_extensions.Literal["shielded_instance_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_shielded_instance_integrity_policy",b"_shielded_instance_integrity_policy"]) -> typing.Optional[typing_extensions.Literal["shielded_instance_integrity_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_restricted",b"_start_restricted"]) -> typing.Optional[typing_extensions.Literal["start_restricted"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status_message",b"_status_message"]) -> typing.Optional[typing_extensions.Literal["status_message"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tags",b"_tags"]) -> typing.Optional[typing_extensions.Literal["tags"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___Instance = Instance

class InstanceAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___InstancesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___InstancesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___InstancesScopedList]:
        """An object that contains a list of instances scoped by zone."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#instanceAggregatedList for aggregated lists of Instance resources."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___InstancesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceAggregatedList = InstanceAggregatedList

class InstanceGroup(google.protobuf.message.Message):
    """Represents an Instance Group resource. Instance Groups can be used to configure a target for load balancing. Instance groups can either be managed or unmanaged. To create managed instance groups, use the instanceGroupManager or regionInstanceGroupManager resource instead. Use zonal unmanaged instance groups if you need to apply load balancing to groups of heterogeneous instances or if you need to manage the instances yourself. You cannot create regional unmanaged instance groups. For more information, read Instance groups."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NAMED_PORTS_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] The creation timestamp for this instance group in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    fingerprint: typing.Text = ...
    """[Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently."""

    id: builtins.int = ...
    """[Output Only] A unique identifier for this instance group, generated by the server."""

    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#instanceGroup for instance groups."""

    name: typing.Text = ...
    """The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035."""

    @property
    def named_ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPort]:
        """ Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group."""
        pass
    network: typing.Text = ...
    """[Output Only] The URL of the network to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0)."""

    region: typing.Text = ...
    """[Output Only] The URL of the region where the instance group is located (for regional resources)."""

    self_link: typing.Text = ...
    """[Output Only] The URL for this instance group. The server generates this URL."""

    size: builtins.int = ...
    """[Output Only] The total number of instances in the instance group."""

    subnetwork: typing.Text = ...
    """[Output Only] The URL of the subnetwork to which all instances in the instance group belong. If your instance has multiple network interfaces, then the network and subnetwork fields only refer to the network and subnet used by your primary interface (nic0)."""

    zone: typing.Text = ...
    """[Output Only] The URL of the zone where the instance group is located (for zonal resources)."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        named_ports : typing.Optional[typing.Iterable[global___NamedPort]] = ...,
        network : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        size : typing.Optional[builtins.int] = ...,
        subnetwork : typing.Optional[typing.Text] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_network",b"_network","_region",b"_region","_self_link",b"_self_link","_size",b"_size","_subnetwork",b"_subnetwork","_zone",b"_zone","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","network",b"network","region",b"region","self_link",b"self_link","size",b"size","subnetwork",b"subnetwork","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_network",b"_network","_region",b"_region","_self_link",b"_self_link","_size",b"_size","_subnetwork",b"_subnetwork","_zone",b"_zone","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","named_ports",b"named_ports","network",b"network","region",b"region","self_link",b"self_link","size",b"size","subnetwork",b"subnetwork","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_size",b"_size"]) -> typing.Optional[typing_extensions.Literal["size"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_subnetwork",b"_subnetwork"]) -> typing.Optional[typing_extensions.Literal["subnetwork"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___InstanceGroup = InstanceGroup

class InstanceGroupAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___InstanceGroupsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___InstanceGroupsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___InstanceGroupsScopedList]:
        """A list of InstanceGroupsScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#instanceGroupAggregatedList for aggregated lists of instance groups."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___InstanceGroupsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceGroupAggregatedList = InstanceGroupAggregatedList

class InstanceGroupList(google.protobuf.message.Message):
    """A list of InstanceGroup resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceGroup]:
        """A list of InstanceGroup resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#instanceGroupList for instance group lists."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___InstanceGroup]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceGroupList = InstanceGroupList

class InstanceGroupManager(google.protobuf.message.Message):
    """Represents a Managed Instance Group resource. An instance group is a collection of VM instances that you can manage as a single entity. For more information, read Instance groups. For zonal Managed Instance Group, use the instanceGroupManagers resource. For regional Managed Instance Group, use the regionInstanceGroupManagers resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTO_HEALING_POLICIES_FIELD_NUMBER: builtins.int
    BASE_INSTANCE_NAME_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    CURRENT_ACTIONS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISTRIBUTION_POLICY_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_FIELD_NUMBER: builtins.int
    INSTANCE_TEMPLATE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NAMED_PORTS_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATEFUL_POLICY_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    TARGET_POOLS_FIELD_NUMBER: builtins.int
    TARGET_SIZE_FIELD_NUMBER: builtins.int
    UPDATE_POLICY_FIELD_NUMBER: builtins.int
    VERSIONS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def auto_healing_policies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceGroupManagerAutoHealingPolicy]:
        """The autohealing policy for this managed instance group. You can specify only one value."""
        pass
    base_instance_name: typing.Text = ...
    """The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with RFC1035."""

    creation_timestamp: typing.Text = ...
    """[Output Only] The creation timestamp for this managed instance group in RFC3339 text format."""

    @property
    def current_actions(self) -> global___InstanceGroupManagerActionsSummary:
        """[Output Only] The list of instance actions and the number of instances in this managed instance group that are scheduled for each of those actions."""
        pass
    description: typing.Text = ...
    """An optional description of this resource."""

    @property
    def distribution_policy(self) -> global___DistributionPolicy:
        """Policy specifying the intended distribution of managed instances across zones in a regional managed instance group."""
        pass
    fingerprint: typing.Text = ...
    """Fingerprint of this resource. This field may be used in optimistic locking. It will be ignored when inserting an InstanceGroupManager. An up-to-date fingerprint must be provided in order to update the InstanceGroupManager, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an InstanceGroupManager."""

    id: builtins.int = ...
    """[Output Only] A unique identifier for this resource type. The server generates this identifier."""

    instance_group: typing.Text = ...
    """[Output Only] The URL of the Instance Group resource."""

    instance_template: typing.Text = ...
    """The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE."""

    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#instanceGroupManager for managed instance groups."""

    name: typing.Text = ...
    """The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035."""

    @property
    def named_ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPort]:
        """Named ports configured for the Instance Groups complementary to this Instance Group Manager."""
        pass
    region: typing.Text = ...
    """[Output Only] The URL of the region where the managed instance group resides (for regional resources)."""

    self_link: typing.Text = ...
    """[Output Only] The URL for this managed instance group. The server defines this URL."""

    @property
    def stateful_policy(self) -> global___StatefulPolicy:
        """Stateful configuration for this Instanced Group Manager"""
        pass
    @property
    def status(self) -> global___InstanceGroupManagerStatus:
        """[Output Only] The status of this managed instance group."""
        pass
    @property
    def target_pools(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group."""
        pass
    target_size: builtins.int = ...
    """The target number of running instances for this managed instance group. You can reduce this number by using the instanceGroupManager deleteInstances or abandonInstances methods. Resizing the group also changes this number."""

    @property
    def update_policy(self) -> global___InstanceGroupManagerUpdatePolicy:
        """The update policy for this managed instance group."""
        pass
    @property
    def versions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceGroupManagerVersion]:
        """Specifies the instance templates used by this managed instance group to create instances. Each version is defined by an instanceTemplate and a name. Every version can appear at most once per instance group. This field overrides the top-level instanceTemplate field. Read more about the relationships between these fields. Exactly one version must leave the targetSize field unset. That version will be applied to all remaining instances. For more information, read about canary updates."""
        pass
    zone: typing.Text = ...
    """[Output Only] The URL of a zone where the managed instance group is located (for zonal resources)."""

    def __init__(self,
        *,
        auto_healing_policies : typing.Optional[typing.Iterable[global___InstanceGroupManagerAutoHealingPolicy]] = ...,
        base_instance_name : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        current_actions : typing.Optional[global___InstanceGroupManagerActionsSummary] = ...,
        description : typing.Optional[typing.Text] = ...,
        distribution_policy : typing.Optional[global___DistributionPolicy] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        instance_group : typing.Optional[typing.Text] = ...,
        instance_template : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        named_ports : typing.Optional[typing.Iterable[global___NamedPort]] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        stateful_policy : typing.Optional[global___StatefulPolicy] = ...,
        status : typing.Optional[global___InstanceGroupManagerStatus] = ...,
        target_pools : typing.Optional[typing.Iterable[typing.Text]] = ...,
        target_size : typing.Optional[builtins.int] = ...,
        update_policy : typing.Optional[global___InstanceGroupManagerUpdatePolicy] = ...,
        versions : typing.Optional[typing.Iterable[global___InstanceGroupManagerVersion]] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_base_instance_name",b"_base_instance_name","_creation_timestamp",b"_creation_timestamp","_current_actions",b"_current_actions","_description",b"_description","_distribution_policy",b"_distribution_policy","_fingerprint",b"_fingerprint","_id",b"_id","_instance_group",b"_instance_group","_instance_template",b"_instance_template","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","_stateful_policy",b"_stateful_policy","_status",b"_status","_target_size",b"_target_size","_update_policy",b"_update_policy","_zone",b"_zone","base_instance_name",b"base_instance_name","creation_timestamp",b"creation_timestamp","current_actions",b"current_actions","description",b"description","distribution_policy",b"distribution_policy","fingerprint",b"fingerprint","id",b"id","instance_group",b"instance_group","instance_template",b"instance_template","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link","stateful_policy",b"stateful_policy","status",b"status","target_size",b"target_size","update_policy",b"update_policy","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_base_instance_name",b"_base_instance_name","_creation_timestamp",b"_creation_timestamp","_current_actions",b"_current_actions","_description",b"_description","_distribution_policy",b"_distribution_policy","_fingerprint",b"_fingerprint","_id",b"_id","_instance_group",b"_instance_group","_instance_template",b"_instance_template","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","_stateful_policy",b"_stateful_policy","_status",b"_status","_target_size",b"_target_size","_update_policy",b"_update_policy","_zone",b"_zone","auto_healing_policies",b"auto_healing_policies","base_instance_name",b"base_instance_name","creation_timestamp",b"creation_timestamp","current_actions",b"current_actions","description",b"description","distribution_policy",b"distribution_policy","fingerprint",b"fingerprint","id",b"id","instance_group",b"instance_group","instance_template",b"instance_template","kind",b"kind","name",b"name","named_ports",b"named_ports","region",b"region","self_link",b"self_link","stateful_policy",b"stateful_policy","status",b"status","target_pools",b"target_pools","target_size",b"target_size","update_policy",b"update_policy","versions",b"versions","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_base_instance_name",b"_base_instance_name"]) -> typing.Optional[typing_extensions.Literal["base_instance_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_current_actions",b"_current_actions"]) -> typing.Optional[typing_extensions.Literal["current_actions"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_distribution_policy",b"_distribution_policy"]) -> typing.Optional[typing_extensions.Literal["distribution_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_group",b"_instance_group"]) -> typing.Optional[typing_extensions.Literal["instance_group"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_template",b"_instance_template"]) -> typing.Optional[typing_extensions.Literal["instance_template"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_stateful_policy",b"_stateful_policy"]) -> typing.Optional[typing_extensions.Literal["stateful_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_size",b"_target_size"]) -> typing.Optional[typing_extensions.Literal["target_size"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_update_policy",b"_update_policy"]) -> typing.Optional[typing_extensions.Literal["update_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___InstanceGroupManager = InstanceGroupManager

class InstanceGroupManagerActionsSummary(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ABANDONING_FIELD_NUMBER: builtins.int
    CREATING_FIELD_NUMBER: builtins.int
    CREATING_WITHOUT_RETRIES_FIELD_NUMBER: builtins.int
    DELETING_FIELD_NUMBER: builtins.int
    NONE_FIELD_NUMBER: builtins.int
    RECREATING_FIELD_NUMBER: builtins.int
    REFRESHING_FIELD_NUMBER: builtins.int
    RESTARTING_FIELD_NUMBER: builtins.int
    VERIFYING_FIELD_NUMBER: builtins.int
    abandoning: builtins.int = ...
    """[Output Only] The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it."""

    creating: builtins.int = ...
    """[Output Only] The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully. If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated."""

    creating_without_retries: builtins.int = ...
    """[Output Only] The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group's targetSize value accordingly."""

    deleting: builtins.int = ...
    """[Output Only] The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted."""

    none: builtins.int = ...
    """[Output Only] The number of instances in the managed instance group that are running and have no scheduled actions."""

    recreating: builtins.int = ...
    """[Output Only] The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template."""

    refreshing: builtins.int = ...
    """[Output Only] The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance."""

    restarting: builtins.int = ...
    """[Output Only] The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted."""

    verifying: builtins.int = ...
    """[Output Only] The number of instances in the managed instance group that are being verified. See the managedInstances[].currentAction property in the listManagedInstances method documentation."""

    def __init__(self,
        *,
        abandoning : typing.Optional[builtins.int] = ...,
        creating : typing.Optional[builtins.int] = ...,
        creating_without_retries : typing.Optional[builtins.int] = ...,
        deleting : typing.Optional[builtins.int] = ...,
        none : typing.Optional[builtins.int] = ...,
        recreating : typing.Optional[builtins.int] = ...,
        refreshing : typing.Optional[builtins.int] = ...,
        restarting : typing.Optional[builtins.int] = ...,
        verifying : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_abandoning",b"_abandoning","_creating",b"_creating","_creating_without_retries",b"_creating_without_retries","_deleting",b"_deleting","_none",b"_none","_recreating",b"_recreating","_refreshing",b"_refreshing","_restarting",b"_restarting","_verifying",b"_verifying","abandoning",b"abandoning","creating",b"creating","creating_without_retries",b"creating_without_retries","deleting",b"deleting","none",b"none","recreating",b"recreating","refreshing",b"refreshing","restarting",b"restarting","verifying",b"verifying"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_abandoning",b"_abandoning","_creating",b"_creating","_creating_without_retries",b"_creating_without_retries","_deleting",b"_deleting","_none",b"_none","_recreating",b"_recreating","_refreshing",b"_refreshing","_restarting",b"_restarting","_verifying",b"_verifying","abandoning",b"abandoning","creating",b"creating","creating_without_retries",b"creating_without_retries","deleting",b"deleting","none",b"none","recreating",b"recreating","refreshing",b"refreshing","restarting",b"restarting","verifying",b"verifying"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_abandoning",b"_abandoning"]) -> typing.Optional[typing_extensions.Literal["abandoning"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creating",b"_creating"]) -> typing.Optional[typing_extensions.Literal["creating"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creating_without_retries",b"_creating_without_retries"]) -> typing.Optional[typing_extensions.Literal["creating_without_retries"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deleting",b"_deleting"]) -> typing.Optional[typing_extensions.Literal["deleting"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_none",b"_none"]) -> typing.Optional[typing_extensions.Literal["none"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_recreating",b"_recreating"]) -> typing.Optional[typing_extensions.Literal["recreating"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_refreshing",b"_refreshing"]) -> typing.Optional[typing_extensions.Literal["refreshing"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_restarting",b"_restarting"]) -> typing.Optional[typing_extensions.Literal["restarting"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_verifying",b"_verifying"]) -> typing.Optional[typing_extensions.Literal["verifying"]]: ...
global___InstanceGroupManagerActionsSummary = InstanceGroupManagerActionsSummary

class InstanceGroupManagerAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___InstanceGroupManagersScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___InstanceGroupManagersScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___InstanceGroupManagersScopedList]:
        """A list of InstanceGroupManagersScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#instanceGroupManagerAggregatedList for an aggregated list of managed instance groups."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___InstanceGroupManagersScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceGroupManagerAggregatedList = InstanceGroupManagerAggregatedList

class InstanceGroupManagerAutoHealingPolicy(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    INITIAL_DELAY_SEC_FIELD_NUMBER: builtins.int
    health_check: typing.Text = ...
    """The URL for the health check that signals autohealing."""

    initial_delay_sec: builtins.int = ...
    """The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600]."""

    def __init__(self,
        *,
        health_check : typing.Optional[typing.Text] = ...,
        initial_delay_sec : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_health_check",b"_health_check","_initial_delay_sec",b"_initial_delay_sec","health_check",b"health_check","initial_delay_sec",b"initial_delay_sec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_health_check",b"_health_check","_initial_delay_sec",b"_initial_delay_sec","health_check",b"health_check","initial_delay_sec",b"initial_delay_sec"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_health_check",b"_health_check"]) -> typing.Optional[typing_extensions.Literal["health_check"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_initial_delay_sec",b"_initial_delay_sec"]) -> typing.Optional[typing_extensions.Literal["initial_delay_sec"]]: ...
global___InstanceGroupManagerAutoHealingPolicy = InstanceGroupManagerAutoHealingPolicy

class InstanceGroupManagerList(google.protobuf.message.Message):
    """[Output Only] A list of managed instance groups."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceGroupManager]:
        """A list of InstanceGroupManager resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#instanceGroupManagerList for a list of managed instance groups."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___InstanceGroupManager]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceGroupManagerList = InstanceGroupManagerList

class InstanceGroupManagerStatus(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_FIELD_NUMBER: builtins.int
    IS_STABLE_FIELD_NUMBER: builtins.int
    STATEFUL_FIELD_NUMBER: builtins.int
    VERSION_TARGET_FIELD_NUMBER: builtins.int
    autoscaler: typing.Text = ...
    """[Output Only] The URL of the Autoscaler that targets this instance group manager."""

    is_stable: builtins.bool = ...
    """[Output Only] A bit indicating whether the managed instance group is in a stable state. A stable state means that: none of the instances in the managed instance group is currently undergoing any type of change (for example, creation, restart, or deletion); no future changes are scheduled for instances in the managed instance group; and the managed instance group itself is not being modified."""

    @property
    def stateful(self) -> global___InstanceGroupManagerStatusStateful:
        """[Output Only] Stateful status of the given Instance Group Manager."""
        pass
    @property
    def version_target(self) -> global___InstanceGroupManagerStatusVersionTarget:
        """[Output Only] A status of consistency of Instances' versions with their target version specified by version field on Instance Group Manager."""
        pass
    def __init__(self,
        *,
        autoscaler : typing.Optional[typing.Text] = ...,
        is_stable : typing.Optional[builtins.bool] = ...,
        stateful : typing.Optional[global___InstanceGroupManagerStatusStateful] = ...,
        version_target : typing.Optional[global___InstanceGroupManagerStatusVersionTarget] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_autoscaler",b"_autoscaler","_is_stable",b"_is_stable","_stateful",b"_stateful","_version_target",b"_version_target","autoscaler",b"autoscaler","is_stable",b"is_stable","stateful",b"stateful","version_target",b"version_target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_autoscaler",b"_autoscaler","_is_stable",b"_is_stable","_stateful",b"_stateful","_version_target",b"_version_target","autoscaler",b"autoscaler","is_stable",b"is_stable","stateful",b"stateful","version_target",b"version_target"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_autoscaler",b"_autoscaler"]) -> typing.Optional[typing_extensions.Literal["autoscaler"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_is_stable",b"_is_stable"]) -> typing.Optional[typing_extensions.Literal["is_stable"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_stateful",b"_stateful"]) -> typing.Optional[typing_extensions.Literal["stateful"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_version_target",b"_version_target"]) -> typing.Optional[typing_extensions.Literal["version_target"]]: ...
global___InstanceGroupManagerStatus = InstanceGroupManagerStatus

class InstanceGroupManagerStatusStateful(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HAS_STATEFUL_CONFIG_FIELD_NUMBER: builtins.int
    PER_INSTANCE_CONFIGS_FIELD_NUMBER: builtins.int
    has_stateful_config: builtins.bool = ...
    """[Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful config even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions."""

    @property
    def per_instance_configs(self) -> global___InstanceGroupManagerStatusStatefulPerInstanceConfigs:
        """[Output Only] Status of per-instance configs on the instance."""
        pass
    def __init__(self,
        *,
        has_stateful_config : typing.Optional[builtins.bool] = ...,
        per_instance_configs : typing.Optional[global___InstanceGroupManagerStatusStatefulPerInstanceConfigs] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_has_stateful_config",b"_has_stateful_config","_per_instance_configs",b"_per_instance_configs","has_stateful_config",b"has_stateful_config","per_instance_configs",b"per_instance_configs"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_has_stateful_config",b"_has_stateful_config","_per_instance_configs",b"_per_instance_configs","has_stateful_config",b"has_stateful_config","per_instance_configs",b"per_instance_configs"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_has_stateful_config",b"_has_stateful_config"]) -> typing.Optional[typing_extensions.Literal["has_stateful_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_per_instance_configs",b"_per_instance_configs"]) -> typing.Optional[typing_extensions.Literal["per_instance_configs"]]: ...
global___InstanceGroupManagerStatusStateful = InstanceGroupManagerStatusStateful

class InstanceGroupManagerStatusStatefulPerInstanceConfigs(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ALL_EFFECTIVE_FIELD_NUMBER: builtins.int
    all_effective: builtins.bool = ...
    """A bit indicating if all of the group's per-instance configs (listed in the output of a listPerInstanceConfigs API call) have status EFFECTIVE or there are no per-instance-configs."""

    def __init__(self,
        *,
        all_effective : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_all_effective",b"_all_effective","all_effective",b"all_effective"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_all_effective",b"_all_effective","all_effective",b"all_effective"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_effective",b"_all_effective"]) -> typing.Optional[typing_extensions.Literal["all_effective"]]: ...
global___InstanceGroupManagerStatusStatefulPerInstanceConfigs = InstanceGroupManagerStatusStatefulPerInstanceConfigs

class InstanceGroupManagerStatusVersionTarget(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IS_REACHED_FIELD_NUMBER: builtins.int
    is_reached: builtins.bool = ...
    """[Output Only] A bit indicating whether version target has been reached in this managed instance group, i.e. all instances are in their target version. Instances' target version are specified by version field on Instance Group Manager."""

    def __init__(self,
        *,
        is_reached : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_is_reached",b"_is_reached","is_reached",b"is_reached"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_is_reached",b"_is_reached","is_reached",b"is_reached"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_is_reached",b"_is_reached"]) -> typing.Optional[typing_extensions.Literal["is_reached"]]: ...
global___InstanceGroupManagerStatusVersionTarget = InstanceGroupManagerStatusVersionTarget

class InstanceGroupManagerUpdatePolicy(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_REDISTRIBUTION_TYPE_FIELD_NUMBER: builtins.int
    MAX_SURGE_FIELD_NUMBER: builtins.int
    MAX_UNAVAILABLE_FIELD_NUMBER: builtins.int
    MINIMAL_ACTION_FIELD_NUMBER: builtins.int
    REPLACEMENT_METHOD_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    instance_redistribution_type: typing.Text = ...
    """The instance redistribution policy for regional managed instance groups. Valid values are: - PROACTIVE (default): The group attempts to maintain an even distribution of VM instances across zones in the region. - NONE: For non-autoscaled groups, proactive redistribution is disabled."""

    @property
    def max_surge(self) -> global___FixedOrPercent:
        """The maximum number of instances that can be created above the specified targetSize during the update process. This value can be either a fixed number or, if the group has 10 or more instances, a percentage. If you set a percentage, the number of instances is rounded if necessary. The default value for maxSurge is a fixed value equal to the number of zones in which the managed instance group operates. At least one of either maxSurge or maxUnavailable must be greater than 0. Learn more about maxSurge."""
        pass
    @property
    def max_unavailable(self) -> global___FixedOrPercent:
        """The maximum number of instances that can be unavailable during the update process. An instance is considered available if all of the following conditions are satisfied: - The instance's status is RUNNING. - If there is a health check on the instance group, the instance's health check status must be HEALTHY at least once. If there is no health check on the group, then the instance only needs to have a status of RUNNING to be considered available. This value can be either a fixed number or, if the group has 10 or more instances, a percentage. If you set a percentage, the number of instances is rounded if necessary. The default value for maxUnavailable is a fixed value equal to the number of zones in which the managed instance group operates. At least one of either maxSurge or maxUnavailable must be greater than 0. Learn more about maxUnavailable."""
        pass
    minimal_action: typing.Text = ...
    """Minimal action to be taken on an instance. You can specify either RESTART to restart existing instances or REPLACE to delete and create new instances from the target template. If you specify a RESTART, the Updater will attempt to perform that action only. However, if the Updater determines that the minimal action you specify is not enough to perform the update, it might perform a more disruptive action."""

    replacement_method: typing.Text = ...
    """What action should be used to replace instances. See minimal_action.REPLACE"""

    type: typing.Text = ...
    """The type of update process. You can specify either PROACTIVE so that the instance group manager proactively executes actions in order to bring instances to their target versions or OPPORTUNISTIC so that no action is proactively executed but the update will be performed as part of other actions (for example, resizes or recreateInstances calls)."""

    def __init__(self,
        *,
        instance_redistribution_type : typing.Optional[typing.Text] = ...,
        max_surge : typing.Optional[global___FixedOrPercent] = ...,
        max_unavailable : typing.Optional[global___FixedOrPercent] = ...,
        minimal_action : typing.Optional[typing.Text] = ...,
        replacement_method : typing.Optional[typing.Text] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance_redistribution_type",b"_instance_redistribution_type","_max_surge",b"_max_surge","_max_unavailable",b"_max_unavailable","_minimal_action",b"_minimal_action","_replacement_method",b"_replacement_method","_type",b"_type","instance_redistribution_type",b"instance_redistribution_type","max_surge",b"max_surge","max_unavailable",b"max_unavailable","minimal_action",b"minimal_action","replacement_method",b"replacement_method","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance_redistribution_type",b"_instance_redistribution_type","_max_surge",b"_max_surge","_max_unavailable",b"_max_unavailable","_minimal_action",b"_minimal_action","_replacement_method",b"_replacement_method","_type",b"_type","instance_redistribution_type",b"instance_redistribution_type","max_surge",b"max_surge","max_unavailable",b"max_unavailable","minimal_action",b"minimal_action","replacement_method",b"replacement_method","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_redistribution_type",b"_instance_redistribution_type"]) -> typing.Optional[typing_extensions.Literal["instance_redistribution_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_surge",b"_max_surge"]) -> typing.Optional[typing_extensions.Literal["max_surge"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_unavailable",b"_max_unavailable"]) -> typing.Optional[typing_extensions.Literal["max_unavailable"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_minimal_action",b"_minimal_action"]) -> typing.Optional[typing_extensions.Literal["minimal_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_replacement_method",b"_replacement_method"]) -> typing.Optional[typing_extensions.Literal["replacement_method"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___InstanceGroupManagerUpdatePolicy = InstanceGroupManagerUpdatePolicy

class InstanceGroupManagerVersion(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_TEMPLATE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TARGET_SIZE_FIELD_NUMBER: builtins.int
    instance_template: typing.Text = ...
    """The URL of the instance template that is specified for this managed instance group. The group uses this template to create new instances in the managed instance group until the `targetSize` for this version is reached. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE; in those cases, existing instances are updated until the `targetSize` for this version is reached."""

    name: typing.Text = ...
    """Name of the version. Unique among all versions in the scope of this managed instance group."""

    @property
    def target_size(self) -> global___FixedOrPercent:
        """Specifies the intended number of instances to be created from the instanceTemplate. The final number of instances created from the template will be equal to: - If expressed as a fixed number, the minimum of either targetSize.fixed or instanceGroupManager.targetSize is used. - if expressed as a percent, the targetSize would be (targetSize.percent/100 * InstanceGroupManager.targetSize) If there is a remainder, the number is rounded. If unset, this version will update any remaining instances not updated by another version. Read Starting a canary update for more information."""
        pass
    def __init__(self,
        *,
        instance_template : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        target_size : typing.Optional[global___FixedOrPercent] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance_template",b"_instance_template","_name",b"_name","_target_size",b"_target_size","instance_template",b"instance_template","name",b"name","target_size",b"target_size"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance_template",b"_instance_template","_name",b"_name","_target_size",b"_target_size","instance_template",b"instance_template","name",b"name","target_size",b"target_size"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_template",b"_instance_template"]) -> typing.Optional[typing_extensions.Literal["instance_template"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_size",b"_target_size"]) -> typing.Optional[typing_extensions.Literal["target_size"]]: ...
global___InstanceGroupManagerVersion = InstanceGroupManagerVersion

class InstanceGroupManagersAbandonInstancesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URLs of one or more instances to abandon. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME]."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___InstanceGroupManagersAbandonInstancesRequest = InstanceGroupManagersAbandonInstancesRequest

class InstanceGroupManagersApplyUpdatesRequest(google.protobuf.message.Message):
    """InstanceGroupManagers.applyUpdatesToInstances"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ALL_INSTANCES_FIELD_NUMBER: builtins.int
    INSTANCES_FIELD_NUMBER: builtins.int
    MINIMAL_ACTION_FIELD_NUMBER: builtins.int
    MOST_DISRUPTIVE_ALLOWED_ACTION_FIELD_NUMBER: builtins.int
    all_instances: builtins.bool = ...
    """Flag to update all instances instead of specified list of “instances”. If the flag is set to true then the instances may not be specified in the request."""

    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of URLs of one or more instances for which you want to apply updates. Each URL can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME]."""
        pass
    minimal_action: typing.Text = ...
    """The minimal action that you want to perform on each instance during the update: - REPLACE: At minimum, delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the minimum action is NONE. If your update requires a more disruptive action than you set with this flag, the necessary action is performed to execute the update."""

    most_disruptive_allowed_action: typing.Text = ...
    """The most disruptive action that you want to perform on each instance during the update: - REPLACE: Delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the most disruptive allowed action is REPLACE. If your update requires a more disruptive action than you set with this flag, the update request will fail."""

    def __init__(self,
        *,
        all_instances : typing.Optional[builtins.bool] = ...,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        minimal_action : typing.Optional[typing.Text] = ...,
        most_disruptive_allowed_action : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_all_instances",b"_all_instances","_minimal_action",b"_minimal_action","_most_disruptive_allowed_action",b"_most_disruptive_allowed_action","all_instances",b"all_instances","minimal_action",b"minimal_action","most_disruptive_allowed_action",b"most_disruptive_allowed_action"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_all_instances",b"_all_instances","_minimal_action",b"_minimal_action","_most_disruptive_allowed_action",b"_most_disruptive_allowed_action","all_instances",b"all_instances","instances",b"instances","minimal_action",b"minimal_action","most_disruptive_allowed_action",b"most_disruptive_allowed_action"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_instances",b"_all_instances"]) -> typing.Optional[typing_extensions.Literal["all_instances"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_minimal_action",b"_minimal_action"]) -> typing.Optional[typing_extensions.Literal["minimal_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_most_disruptive_allowed_action",b"_most_disruptive_allowed_action"]) -> typing.Optional[typing_extensions.Literal["most_disruptive_allowed_action"]]: ...
global___InstanceGroupManagersApplyUpdatesRequest = InstanceGroupManagersApplyUpdatesRequest

class InstanceGroupManagersCreateInstancesRequest(google.protobuf.message.Message):
    """InstanceGroupManagers.createInstances"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerInstanceConfig]:
        """[Required] List of specifications of per-instance configs."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[global___PerInstanceConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___InstanceGroupManagersCreateInstancesRequest = InstanceGroupManagersCreateInstancesRequest

class InstanceGroupManagersDeleteInstancesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    SKIP_INSTANCES_ON_VALIDATION_ERROR_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URLs of one or more instances to delete. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME]."""
        pass
    skip_instances_on_validation_error: builtins.bool = ...
    """Specifies whether the request should proceed despite the inclusion of instances that are not members of the group or that are already in the process of being deleted or abandoned. If this field is set to `false` and such an instance is specified in the request, the operation fails. The operation always fails if the request contains a malformed instance URL or a reference to an instance that exists in a zone or region other than the group's zone or region."""

    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        skip_instances_on_validation_error : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_skip_instances_on_validation_error",b"_skip_instances_on_validation_error","skip_instances_on_validation_error",b"skip_instances_on_validation_error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_skip_instances_on_validation_error",b"_skip_instances_on_validation_error","instances",b"instances","skip_instances_on_validation_error",b"skip_instances_on_validation_error"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_skip_instances_on_validation_error",b"_skip_instances_on_validation_error"]) -> typing.Optional[typing_extensions.Literal["skip_instances_on_validation_error"]]: ...
global___InstanceGroupManagersDeleteInstancesRequest = InstanceGroupManagersDeleteInstancesRequest

class InstanceGroupManagersDeletePerInstanceConfigsReq(google.protobuf.message.Message):
    """InstanceGroupManagers.deletePerInstanceConfigs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAMES_FIELD_NUMBER: builtins.int
    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of instance names for which we want to delete per-instance configs on this managed instance group."""
        pass
    def __init__(self,
        *,
        names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["names",b"names"]) -> None: ...
global___InstanceGroupManagersDeletePerInstanceConfigsReq = InstanceGroupManagersDeletePerInstanceConfigsReq

class InstanceGroupManagersListErrorsResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEMS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceManagedByIgmError]:
        """[Output Only] The list of errors of the managed instance group."""
        pass
    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    def __init__(self,
        *,
        items : typing.Optional[typing.Iterable[global___InstanceManagedByIgmError]] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","next_page_token",b"next_page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","items",b"items","next_page_token",b"next_page_token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
global___InstanceGroupManagersListErrorsResponse = InstanceGroupManagersListErrorsResponse

class InstanceGroupManagersListManagedInstancesResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MANAGED_INSTANCES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def managed_instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ManagedInstance]:
        """[Output Only] The list of instances in the managed instance group."""
        pass
    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    def __init__(self,
        *,
        managed_instances : typing.Optional[typing.Iterable[global___ManagedInstance]] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","next_page_token",b"next_page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","managed_instances",b"managed_instances","next_page_token",b"next_page_token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
global___InstanceGroupManagersListManagedInstancesResponse = InstanceGroupManagersListManagedInstancesResponse

class InstanceGroupManagersListPerInstanceConfigsResp(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEMS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerInstanceConfig]:
        """[Output Only] The list of PerInstanceConfig."""
        pass
    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        items : typing.Optional[typing.Iterable[global___PerInstanceConfig]] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","_warning",b"_warning","next_page_token",b"next_page_token","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","_warning",b"_warning","items",b"items","next_page_token",b"next_page_token","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceGroupManagersListPerInstanceConfigsResp = InstanceGroupManagersListPerInstanceConfigsResp

class InstanceGroupManagersPatchPerInstanceConfigsReq(google.protobuf.message.Message):
    """InstanceGroupManagers.patchPerInstanceConfigs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PER_INSTANCE_CONFIGS_FIELD_NUMBER: builtins.int
    @property
    def per_instance_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerInstanceConfig]:
        """The list of per-instance configs to insert or patch on this managed instance group."""
        pass
    def __init__(self,
        *,
        per_instance_configs : typing.Optional[typing.Iterable[global___PerInstanceConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["per_instance_configs",b"per_instance_configs"]) -> None: ...
global___InstanceGroupManagersPatchPerInstanceConfigsReq = InstanceGroupManagersPatchPerInstanceConfigsReq

class InstanceGroupManagersRecreateInstancesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URLs of one or more instances to recreate. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME]."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___InstanceGroupManagersRecreateInstancesRequest = InstanceGroupManagersRecreateInstancesRequest

class InstanceGroupManagersScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGERS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def instance_group_managers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceGroupManager]:
        """[Output Only] The list of managed instance groups that are contained in the specified project and zone."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] The warning that replaces the list of managed instance groups when the list is empty."""
        pass
    def __init__(self,
        *,
        instance_group_managers : typing.Optional[typing.Iterable[global___InstanceGroupManager]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","instance_group_managers",b"instance_group_managers","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceGroupManagersScopedList = InstanceGroupManagersScopedList

class InstanceGroupManagersSetInstanceTemplateRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_TEMPLATE_FIELD_NUMBER: builtins.int
    instance_template: typing.Text = ...
    """The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE."""

    def __init__(self,
        *,
        instance_template : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance_template",b"_instance_template","instance_template",b"instance_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance_template",b"_instance_template","instance_template",b"instance_template"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_template",b"_instance_template"]) -> typing.Optional[typing_extensions.Literal["instance_template"]]: ...
global___InstanceGroupManagersSetInstanceTemplateRequest = InstanceGroupManagersSetInstanceTemplateRequest

class InstanceGroupManagersSetTargetPoolsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FINGERPRINT_FIELD_NUMBER: builtins.int
    TARGET_POOLS_FIELD_NUMBER: builtins.int
    fingerprint: typing.Text = ...
    """The fingerprint of the target pools information. Use this optional property to prevent conflicts when multiple users change the target pools settings concurrently. Obtain the fingerprint with the instanceGroupManagers.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request."""

    @property
    def target_pools(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of target pool URLs that instances in this managed instance group belong to. The managed instance group applies these target pools to all of the instances in the group. Existing instances and new instances in the group all receive these target pool settings."""
        pass
    def __init__(self,
        *,
        fingerprint : typing.Optional[typing.Text] = ...,
        target_pools : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","fingerprint",b"fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","fingerprint",b"fingerprint","target_pools",b"target_pools"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
global___InstanceGroupManagersSetTargetPoolsRequest = InstanceGroupManagersSetTargetPoolsRequest

class InstanceGroupManagersUpdatePerInstanceConfigsReq(google.protobuf.message.Message):
    """InstanceGroupManagers.updatePerInstanceConfigs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PER_INSTANCE_CONFIGS_FIELD_NUMBER: builtins.int
    @property
    def per_instance_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerInstanceConfig]:
        """The list of per-instance configs to insert or patch on this managed instance group."""
        pass
    def __init__(self,
        *,
        per_instance_configs : typing.Optional[typing.Iterable[global___PerInstanceConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["per_instance_configs",b"per_instance_configs"]) -> None: ...
global___InstanceGroupManagersUpdatePerInstanceConfigsReq = InstanceGroupManagersUpdatePerInstanceConfigsReq

class InstanceGroupsAddInstancesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceReference]:
        """The list of instances to add to the instance group."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[global___InstanceReference]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___InstanceGroupsAddInstancesRequest = InstanceGroupsAddInstancesRequest

class InstanceGroupsListInstances(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceWithNamedPorts]:
        """A list of InstanceWithNamedPorts resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#instanceGroupsListInstances for the list of instances in the specified instance group."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___InstanceWithNamedPorts]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceGroupsListInstances = InstanceGroupsListInstances

class InstanceGroupsListInstancesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _InstanceState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InstanceStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InstanceState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_INSTANCE_STATE: InstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALL: InstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 64897
        """Includes all instances in the generated list regardless of their state."""

        RUNNING: InstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 121282975
        """Includes instances in the generated list only if they have a RUNNING state."""

    class InstanceState(_InstanceState, metaclass=_InstanceStateEnumTypeWrapper):
        """A filter for the state of the instances in the instance group. Valid options are ALL or RUNNING. If you do not specify this parameter the list includes all instances regardless of their state."""
        pass

    UNDEFINED_INSTANCE_STATE: InstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALL: InstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 64897
    """Includes all instances in the generated list regardless of their state."""

    RUNNING: InstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 121282975
    """Includes instances in the generated list only if they have a RUNNING state."""


    INSTANCE_STATE_FIELD_NUMBER: builtins.int
    instance_state: typing.Text = ...
    """A filter for the state of the instances in the instance group. Valid options are ALL or RUNNING. If you do not specify this parameter the list includes all instances regardless of their state.
    Check the InstanceState enum for the list of possible values.
    """

    def __init__(self,
        *,
        instance_state : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance_state",b"_instance_state","instance_state",b"instance_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance_state",b"_instance_state","instance_state",b"instance_state"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_state",b"_instance_state"]) -> typing.Optional[typing_extensions.Literal["instance_state"]]: ...
global___InstanceGroupsListInstancesRequest = InstanceGroupsListInstancesRequest

class InstanceGroupsRemoveInstancesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceReference]:
        """The list of instances to remove from the instance group."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[global___InstanceReference]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___InstanceGroupsRemoveInstancesRequest = InstanceGroupsRemoveInstancesRequest

class InstanceGroupsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUPS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def instance_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceGroup]:
        """[Output Only] The list of instance groups that are contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] An informational warning that replaces the list of instance groups when the list is empty."""
        pass
    def __init__(self,
        *,
        instance_groups : typing.Optional[typing.Iterable[global___InstanceGroup]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","instance_groups",b"instance_groups","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceGroupsScopedList = InstanceGroupsScopedList

class InstanceGroupsSetNamedPortsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FINGERPRINT_FIELD_NUMBER: builtins.int
    NAMED_PORTS_FIELD_NUMBER: builtins.int
    fingerprint: typing.Text = ...
    """The fingerprint of the named ports information for this instance group. Use this optional property to prevent conflicts when multiple users change the named ports settings concurrently. Obtain the fingerprint with the instanceGroups.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request. A request with an incorrect fingerprint will fail with error 412 conditionNotMet."""

    @property
    def named_ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPort]:
        """The list of named ports to set for this instance group."""
        pass
    def __init__(self,
        *,
        fingerprint : typing.Optional[typing.Text] = ...,
        named_ports : typing.Optional[typing.Iterable[global___NamedPort]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","fingerprint",b"fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","fingerprint",b"fingerprint","named_ports",b"named_ports"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
global___InstanceGroupsSetNamedPortsRequest = InstanceGroupsSetNamedPortsRequest

class InstanceList(google.protobuf.message.Message):
    """Contains a list of instances."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Instance]:
        """A list of Instance resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#instanceList for lists of Instance resources."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Instance]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceList = InstanceList

class InstanceListReferrers(google.protobuf.message.Message):
    """Contains a list of instance referrers."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Reference]:
        """A list of Reference resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#instanceListReferrers for lists of Instance referrers."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Reference]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceListReferrers = InstanceListReferrers

class InstanceManagedByIgmError(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ERROR_FIELD_NUMBER: builtins.int
    INSTANCE_ACTION_DETAILS_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    @property
    def error(self) -> global___InstanceManagedByIgmErrorManagedInstanceError:
        """[Output Only] Contents of the error."""
        pass
    @property
    def instance_action_details(self) -> global___InstanceManagedByIgmErrorInstanceActionDetails:
        """[Output Only] Details of the instance action that triggered this error. May be null, if the error was not caused by an action on an instance. This field is optional."""
        pass
    timestamp: typing.Text = ...
    """[Output Only] The time that this error occurred. This value is in RFC3339 text format."""

    def __init__(self,
        *,
        error : typing.Optional[global___InstanceManagedByIgmErrorManagedInstanceError] = ...,
        instance_action_details : typing.Optional[global___InstanceManagedByIgmErrorInstanceActionDetails] = ...,
        timestamp : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_error",b"_error","_instance_action_details",b"_instance_action_details","_timestamp",b"_timestamp","error",b"error","instance_action_details",b"instance_action_details","timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_error",b"_error","_instance_action_details",b"_instance_action_details","_timestamp",b"_timestamp","error",b"error","instance_action_details",b"instance_action_details","timestamp",b"timestamp"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_error",b"_error"]) -> typing.Optional[typing_extensions.Literal["error"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_action_details",b"_instance_action_details"]) -> typing.Optional[typing_extensions.Literal["instance_action_details"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_timestamp",b"_timestamp"]) -> typing.Optional[typing_extensions.Literal["timestamp"]]: ...
global___InstanceManagedByIgmError = InstanceManagedByIgmError

class InstanceManagedByIgmErrorInstanceActionDetails(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Action:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Action.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ACTION: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ABANDONING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 388244813
        """The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group."""

        CREATING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 455564985
        """The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful."""

        CREATING_WITHOUT_RETRIES: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 428843785
        """The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased."""

        DELETING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 528602024
        """The managed instance group is permanently deleting this instance."""

        NONE: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 2402104
        """The managed instance group has not scheduled any actions for this instance."""

        RECREATING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 287278572
        """The managed instance group is recreating this instance."""

        REFRESHING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 163266343
        """The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance."""

        RESTARTING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 320534387
        """The managed instance group is restarting this instance."""

        VERIFYING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 16982185
        """The managed instance group is verifying this already created instance. Verification happens every time the instance is (re)created or restarted and consists of: 1. Waiting until health check specified as part of this managed instance group's autohealing policy reports HEALTHY. Note: Applies only if autohealing policy has a health check specified 2. Waiting for addition verification steps performed as post-instance creation (subject to future extensions)."""

    class Action(_Action, metaclass=_ActionEnumTypeWrapper):
        """[Output Only] Action that managed instance group was executing on the instance when the error occurred. Possible values:"""
        pass

    UNDEFINED_ACTION: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ABANDONING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 388244813
    """The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group."""

    CREATING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 455564985
    """The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful."""

    CREATING_WITHOUT_RETRIES: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 428843785
    """The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased."""

    DELETING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 528602024
    """The managed instance group is permanently deleting this instance."""

    NONE: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 2402104
    """The managed instance group has not scheduled any actions for this instance."""

    RECREATING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 287278572
    """The managed instance group is recreating this instance."""

    REFRESHING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 163266343
    """The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance."""

    RESTARTING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 320534387
    """The managed instance group is restarting this instance."""

    VERIFYING: InstanceManagedByIgmErrorInstanceActionDetails.Action.ValueType = ...  # 16982185
    """The managed instance group is verifying this already created instance. Verification happens every time the instance is (re)created or restarted and consists of: 1. Waiting until health check specified as part of this managed instance group's autohealing policy reports HEALTHY. Note: Applies only if autohealing policy has a health check specified 2. Waiting for addition verification steps performed as post-instance creation (subject to future extensions)."""


    ACTION_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    action: typing.Text = ...
    """[Output Only] Action that managed instance group was executing on the instance when the error occurred. Possible values:
    Check the Action enum for the list of possible values.
    """

    instance: typing.Text = ...
    """[Output Only] The URL of the instance. The URL can be set even if the instance has not yet been created."""

    @property
    def version(self) -> global___ManagedInstanceVersion:
        """[Output Only] Version this instance was created from, or was being created from, but the creation failed. Corresponds to one of the versions that were set on the Instance Group Manager resource at the time this instance was being created."""
        pass
    def __init__(self,
        *,
        action : typing.Optional[typing.Text] = ...,
        instance : typing.Optional[typing.Text] = ...,
        version : typing.Optional[global___ManagedInstanceVersion] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_action",b"_action","_instance",b"_instance","_version",b"_version","action",b"action","instance",b"instance","version",b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_action",b"_action","_instance",b"_instance","_version",b"_version","action",b"action","instance",b"instance","version",b"version"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_action",b"_action"]) -> typing.Optional[typing_extensions.Literal["action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance",b"_instance"]) -> typing.Optional[typing_extensions.Literal["instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_version",b"_version"]) -> typing.Optional[typing_extensions.Literal["version"]]: ...
global___InstanceManagedByIgmErrorInstanceActionDetails = InstanceManagedByIgmErrorInstanceActionDetails

class InstanceManagedByIgmErrorManagedInstanceError(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    code: typing.Text = ...
    """[Output Only] Error code."""

    message: typing.Text = ...
    """[Output Only] Error message."""

    def __init__(self,
        *,
        code : typing.Optional[typing.Text] = ...,
        message : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_code",b"_code","_message",b"_message","code",b"code","message",b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_code",b"_code","_message",b"_message","code",b"code","message",b"message"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_code",b"_code"]) -> typing.Optional[typing_extensions.Literal["code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message",b"_message"]) -> typing.Optional[typing_extensions.Literal["message"]]: ...
global___InstanceManagedByIgmErrorManagedInstanceError = InstanceManagedByIgmErrorManagedInstanceError

class InstanceMoveRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESTINATION_ZONE_FIELD_NUMBER: builtins.int
    TARGET_INSTANCE_FIELD_NUMBER: builtins.int
    destination_zone: typing.Text = ...
    """The URL of the destination zone to move the instance. This can be a full or partial URL. For example, the following are all valid URLs to a zone: - https://www.googleapis.com/compute/v1/projects/project/zones/zone - projects/project/zones/zone - zones/zone"""

    target_instance: typing.Text = ...
    """The URL of the target instance to move. This can be a full or partial URL. For example, the following are all valid URLs to an instance: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance - zones/zone/instances/instance"""

    def __init__(self,
        *,
        destination_zone : typing.Optional[typing.Text] = ...,
        target_instance : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_destination_zone",b"_destination_zone","_target_instance",b"_target_instance","destination_zone",b"destination_zone","target_instance",b"target_instance"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_destination_zone",b"_destination_zone","_target_instance",b"_target_instance","destination_zone",b"destination_zone","target_instance",b"target_instance"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_destination_zone",b"_destination_zone"]) -> typing.Optional[typing_extensions.Literal["destination_zone"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_instance",b"_target_instance"]) -> typing.Optional[typing_extensions.Literal["target_instance"]]: ...
global___InstanceMoveRequest = InstanceMoveRequest

class InstanceProperties(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PrivateIpv6GoogleAccess:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PrivateIpv6GoogleAccessEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PrivateIpv6GoogleAccess.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PRIVATE_IPV6_GOOGLE_ACCESS: InstanceProperties.PrivateIpv6GoogleAccess.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE: InstanceProperties.PrivateIpv6GoogleAccess.ValueType = ...  # 427975994
        """Bidirectional private IPv6 access to/from Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before."""

        ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE: InstanceProperties.PrivateIpv6GoogleAccess.ValueType = ...  # 288210263
        """Outbound private IPv6 access from VMs in this subnet to Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before."""

        INHERIT_FROM_SUBNETWORK: InstanceProperties.PrivateIpv6GoogleAccess.ValueType = ...  # 530256959
        """Each network interface inherits PrivateIpv6GoogleAccess from its subnetwork."""

    class PrivateIpv6GoogleAccess(_PrivateIpv6GoogleAccess, metaclass=_PrivateIpv6GoogleAccessEnumTypeWrapper):
        """The private IPv6 google access type for VMs. If not specified, use INHERIT_FROM_SUBNETWORK as default."""
        pass

    UNDEFINED_PRIVATE_IPV6_GOOGLE_ACCESS: InstanceProperties.PrivateIpv6GoogleAccess.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE: InstanceProperties.PrivateIpv6GoogleAccess.ValueType = ...  # 427975994
    """Bidirectional private IPv6 access to/from Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before."""

    ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE: InstanceProperties.PrivateIpv6GoogleAccess.ValueType = ...  # 288210263
    """Outbound private IPv6 access from VMs in this subnet to Google services. If specified, the subnetwork who is attached to the instance's default network interface will be assigned an internal IPv6 prefix if it doesn't have before."""

    INHERIT_FROM_SUBNETWORK: InstanceProperties.PrivateIpv6GoogleAccess.ValueType = ...  # 530256959
    """Each network interface inherits PrivateIpv6GoogleAccess from its subnetwork."""


    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ADVANCED_MACHINE_FEATURES_FIELD_NUMBER: builtins.int
    CAN_IP_FORWARD_FIELD_NUMBER: builtins.int
    CONFIDENTIAL_INSTANCE_CONFIG_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISKS_FIELD_NUMBER: builtins.int
    GUEST_ACCELERATORS_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    MIN_CPU_PLATFORM_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACES_FIELD_NUMBER: builtins.int
    PRIVATE_IPV6_GOOGLE_ACCESS_FIELD_NUMBER: builtins.int
    RESERVATION_AFFINITY_FIELD_NUMBER: builtins.int
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    SCHEDULING_FIELD_NUMBER: builtins.int
    SERVICE_ACCOUNTS_FIELD_NUMBER: builtins.int
    SHIELDED_INSTANCE_CONFIG_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def advanced_machine_features(self) -> global___AdvancedMachineFeatures:
        """Controls for advanced machine-related behavior features."""
        pass
    can_ip_forward: builtins.bool = ...
    """Enables instances created based on these properties to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information."""

    @property
    def confidential_instance_config(self) -> global___ConfidentialInstanceConfig:
        """Specifies the Confidential Instance options."""
        pass
    description: typing.Text = ...
    """An optional text description for the instances that are created from these properties."""

    @property
    def disks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttachedDisk]:
        """An array of disks that are associated with the instances that are created from these properties."""
        pass
    @property
    def guest_accelerators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AcceleratorConfig]:
        """A list of guest accelerator cards' type and count to use for instances created from these properties."""
        pass
    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels to apply to instances that are created from these properties."""
        pass
    machine_type: typing.Text = ...
    """The machine type to use for instances that are created from these properties."""

    @property
    def metadata(self) -> global___Metadata:
        """The metadata key/value pairs to assign to instances that are created from these properties. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information."""
        pass
    min_cpu_platform: typing.Text = ...
    """Minimum cpu/platform to be used by instances. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying a Minimum CPU Platform."""

    @property
    def network_interfaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkInterface]:
        """An array of network access configurations for this interface."""
        pass
    private_ipv6_google_access: typing.Text = ...
    """The private IPv6 google access type for VMs. If not specified, use INHERIT_FROM_SUBNETWORK as default.
    Check the PrivateIpv6GoogleAccess enum for the list of possible values.
    """

    @property
    def reservation_affinity(self) -> global___ReservationAffinity:
        """Specifies the reservations that instances can consume from."""
        pass
    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Resource policies (names, not ULRs) applied to instances created from these properties."""
        pass
    @property
    def scheduling(self) -> global___Scheduling:
        """Specifies the scheduling options for the instances that are created from these properties."""
        pass
    @property
    def service_accounts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServiceAccount]:
        """A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from these properties. Use metadata queries to obtain the access tokens for these instances."""
        pass
    @property
    def shielded_instance_config(self) -> global___ShieldedInstanceConfig: ...
    @property
    def tags(self) -> global___Tags:
        """A list of tags to apply to the instances that are created from these properties. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035."""
        pass
    def __init__(self,
        *,
        advanced_machine_features : typing.Optional[global___AdvancedMachineFeatures] = ...,
        can_ip_forward : typing.Optional[builtins.bool] = ...,
        confidential_instance_config : typing.Optional[global___ConfidentialInstanceConfig] = ...,
        description : typing.Optional[typing.Text] = ...,
        disks : typing.Optional[typing.Iterable[global___AttachedDisk]] = ...,
        guest_accelerators : typing.Optional[typing.Iterable[global___AcceleratorConfig]] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        machine_type : typing.Optional[typing.Text] = ...,
        metadata : typing.Optional[global___Metadata] = ...,
        min_cpu_platform : typing.Optional[typing.Text] = ...,
        network_interfaces : typing.Optional[typing.Iterable[global___NetworkInterface]] = ...,
        private_ipv6_google_access : typing.Optional[typing.Text] = ...,
        reservation_affinity : typing.Optional[global___ReservationAffinity] = ...,
        resource_policies : typing.Optional[typing.Iterable[typing.Text]] = ...,
        scheduling : typing.Optional[global___Scheduling] = ...,
        service_accounts : typing.Optional[typing.Iterable[global___ServiceAccount]] = ...,
        shielded_instance_config : typing.Optional[global___ShieldedInstanceConfig] = ...,
        tags : typing.Optional[global___Tags] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_advanced_machine_features",b"_advanced_machine_features","_can_ip_forward",b"_can_ip_forward","_confidential_instance_config",b"_confidential_instance_config","_description",b"_description","_machine_type",b"_machine_type","_metadata",b"_metadata","_min_cpu_platform",b"_min_cpu_platform","_private_ipv6_google_access",b"_private_ipv6_google_access","_reservation_affinity",b"_reservation_affinity","_scheduling",b"_scheduling","_shielded_instance_config",b"_shielded_instance_config","_tags",b"_tags","advanced_machine_features",b"advanced_machine_features","can_ip_forward",b"can_ip_forward","confidential_instance_config",b"confidential_instance_config","description",b"description","machine_type",b"machine_type","metadata",b"metadata","min_cpu_platform",b"min_cpu_platform","private_ipv6_google_access",b"private_ipv6_google_access","reservation_affinity",b"reservation_affinity","scheduling",b"scheduling","shielded_instance_config",b"shielded_instance_config","tags",b"tags"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_advanced_machine_features",b"_advanced_machine_features","_can_ip_forward",b"_can_ip_forward","_confidential_instance_config",b"_confidential_instance_config","_description",b"_description","_machine_type",b"_machine_type","_metadata",b"_metadata","_min_cpu_platform",b"_min_cpu_platform","_private_ipv6_google_access",b"_private_ipv6_google_access","_reservation_affinity",b"_reservation_affinity","_scheduling",b"_scheduling","_shielded_instance_config",b"_shielded_instance_config","_tags",b"_tags","advanced_machine_features",b"advanced_machine_features","can_ip_forward",b"can_ip_forward","confidential_instance_config",b"confidential_instance_config","description",b"description","disks",b"disks","guest_accelerators",b"guest_accelerators","labels",b"labels","machine_type",b"machine_type","metadata",b"metadata","min_cpu_platform",b"min_cpu_platform","network_interfaces",b"network_interfaces","private_ipv6_google_access",b"private_ipv6_google_access","reservation_affinity",b"reservation_affinity","resource_policies",b"resource_policies","scheduling",b"scheduling","service_accounts",b"service_accounts","shielded_instance_config",b"shielded_instance_config","tags",b"tags"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_advanced_machine_features",b"_advanced_machine_features"]) -> typing.Optional[typing_extensions.Literal["advanced_machine_features"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_can_ip_forward",b"_can_ip_forward"]) -> typing.Optional[typing_extensions.Literal["can_ip_forward"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_confidential_instance_config",b"_confidential_instance_config"]) -> typing.Optional[typing_extensions.Literal["confidential_instance_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_machine_type",b"_machine_type"]) -> typing.Optional[typing_extensions.Literal["machine_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_metadata",b"_metadata"]) -> typing.Optional[typing_extensions.Literal["metadata"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_cpu_platform",b"_min_cpu_platform"]) -> typing.Optional[typing_extensions.Literal["min_cpu_platform"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_private_ipv6_google_access",b"_private_ipv6_google_access"]) -> typing.Optional[typing_extensions.Literal["private_ipv6_google_access"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_reservation_affinity",b"_reservation_affinity"]) -> typing.Optional[typing_extensions.Literal["reservation_affinity"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_scheduling",b"_scheduling"]) -> typing.Optional[typing_extensions.Literal["scheduling"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_shielded_instance_config",b"_shielded_instance_config"]) -> typing.Optional[typing_extensions.Literal["shielded_instance_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tags",b"_tags"]) -> typing.Optional[typing_extensions.Literal["tags"]]: ...
global___InstanceProperties = InstanceProperties

class InstanceReference(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """The URL for a specific instance. @required compute.instancegroups.addInstances/removeInstances"""

    def __init__(self,
        *,
        instance : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance",b"_instance","instance",b"instance"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance",b"_instance","instance",b"instance"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance",b"_instance"]) -> typing.Optional[typing_extensions.Literal["instance"]]: ...
global___InstanceReference = InstanceReference

class InstanceTemplate(google.protobuf.message.Message):
    """Represents an Instance Template resource. You can use instance templates to create VM instances and managed instance groups. For more information, read Instance Templates."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SOURCE_INSTANCE_FIELD_NUMBER: builtins.int
    SOURCE_INSTANCE_PARAMS_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] The creation timestamp for this instance template in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    id: builtins.int = ...
    """[Output Only] A unique identifier for this instance template. The server defines this identifier."""

    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#instanceTemplate for instance templates."""

    name: typing.Text = ...
    """Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def properties(self) -> global___InstanceProperties:
        """The instance properties for this instance template."""
        pass
    self_link: typing.Text = ...
    """[Output Only] The URL for this instance template. The server defines this URL."""

    source_instance: typing.Text = ...
    """The source instance used to create the template. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance"""

    @property
    def source_instance_params(self) -> global___SourceInstanceParams:
        """The source instance params to use to create this instance template."""
        pass
    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        properties : typing.Optional[global___InstanceProperties] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        source_instance : typing.Optional[typing.Text] = ...,
        source_instance_params : typing.Optional[global___SourceInstanceParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_properties",b"_properties","_self_link",b"_self_link","_source_instance",b"_source_instance","_source_instance_params",b"_source_instance_params","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","properties",b"properties","self_link",b"self_link","source_instance",b"source_instance","source_instance_params",b"source_instance_params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_properties",b"_properties","_self_link",b"_self_link","_source_instance",b"_source_instance","_source_instance_params",b"_source_instance_params","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","properties",b"properties","self_link",b"self_link","source_instance",b"source_instance","source_instance_params",b"source_instance_params"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_properties",b"_properties"]) -> typing.Optional[typing_extensions.Literal["properties"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_instance",b"_source_instance"]) -> typing.Optional[typing_extensions.Literal["source_instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_instance_params",b"_source_instance_params"]) -> typing.Optional[typing_extensions.Literal["source_instance_params"]]: ...
global___InstanceTemplate = InstanceTemplate

class InstanceTemplateList(google.protobuf.message.Message):
    """A list of instance templates."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceTemplate]:
        """A list of InstanceTemplate resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#instanceTemplatesListResponse for instance template lists."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___InstanceTemplate]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstanceTemplateList = InstanceTemplateList

class InstanceWithNamedPorts(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: InstanceWithNamedPorts.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DEPROVISIONING: InstanceWithNamedPorts.Status.ValueType = ...  # 428935662
        """The Nanny is halted and we are performing tear down tasks like network deprogramming, releasing quota, IP, tearing down disks etc."""

        PROVISIONING: InstanceWithNamedPorts.Status.ValueType = ...  # 290896621
        """Resources are being allocated for the instance."""

        REPAIRING: InstanceWithNamedPorts.Status.ValueType = ...  # 413483285
        """The instance is in repair."""

        RUNNING: InstanceWithNamedPorts.Status.ValueType = ...  # 121282975
        """The instance is running."""

        STAGING: InstanceWithNamedPorts.Status.ValueType = ...  # 431072283
        """All required resources have been allocated and the instance is being started."""

        STOPPED: InstanceWithNamedPorts.Status.ValueType = ...  # 444276141
        """The instance has stopped successfully."""

        STOPPING: InstanceWithNamedPorts.Status.ValueType = ...  # 350791796
        """The instance is currently stopping (either being deleted or killed)."""

        SUSPENDED: InstanceWithNamedPorts.Status.ValueType = ...  # 51223995
        """The instance has suspended."""

        SUSPENDING: InstanceWithNamedPorts.Status.ValueType = ...  # 514206246
        """The instance is suspending."""

        TERMINATED: InstanceWithNamedPorts.Status.ValueType = ...  # 250018339
        """The instance has stopped (either by explicit action or underlying failure)."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the instance."""
        pass

    UNDEFINED_STATUS: InstanceWithNamedPorts.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DEPROVISIONING: InstanceWithNamedPorts.Status.ValueType = ...  # 428935662
    """The Nanny is halted and we are performing tear down tasks like network deprogramming, releasing quota, IP, tearing down disks etc."""

    PROVISIONING: InstanceWithNamedPorts.Status.ValueType = ...  # 290896621
    """Resources are being allocated for the instance."""

    REPAIRING: InstanceWithNamedPorts.Status.ValueType = ...  # 413483285
    """The instance is in repair."""

    RUNNING: InstanceWithNamedPorts.Status.ValueType = ...  # 121282975
    """The instance is running."""

    STAGING: InstanceWithNamedPorts.Status.ValueType = ...  # 431072283
    """All required resources have been allocated and the instance is being started."""

    STOPPED: InstanceWithNamedPorts.Status.ValueType = ...  # 444276141
    """The instance has stopped successfully."""

    STOPPING: InstanceWithNamedPorts.Status.ValueType = ...  # 350791796
    """The instance is currently stopping (either being deleted or killed)."""

    SUSPENDED: InstanceWithNamedPorts.Status.ValueType = ...  # 51223995
    """The instance has suspended."""

    SUSPENDING: InstanceWithNamedPorts.Status.ValueType = ...  # 514206246
    """The instance is suspending."""

    TERMINATED: InstanceWithNamedPorts.Status.ValueType = ...  # 250018339
    """The instance has stopped (either by explicit action or underlying failure)."""


    INSTANCE_FIELD_NUMBER: builtins.int
    NAMED_PORTS_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """[Output Only] The URL of the instance."""

    @property
    def named_ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPort]:
        """[Output Only] The named ports that belong to this instance group."""
        pass
    status: typing.Text = ...
    """[Output Only] The status of the instance.
    Check the Status enum for the list of possible values.
    """

    def __init__(self,
        *,
        instance : typing.Optional[typing.Text] = ...,
        named_ports : typing.Optional[typing.Iterable[global___NamedPort]] = ...,
        status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance",b"_instance","_status",b"_status","instance",b"instance","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance",b"_instance","_status",b"_status","instance",b"instance","named_ports",b"named_ports","status",b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance",b"_instance"]) -> typing.Optional[typing_extensions.Literal["instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___InstanceWithNamedPorts = InstanceWithNamedPorts

class InstancesAddResourcePoliciesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Resource policies to be added to this instance."""
        pass
    def __init__(self,
        *,
        resource_policies : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_policies",b"resource_policies"]) -> None: ...
global___InstancesAddResourcePoliciesRequest = InstancesAddResourcePoliciesRequest

class InstancesGetEffectiveFirewallsResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICYS_FIELD_NUMBER: builtins.int
    FIREWALLS_FIELD_NUMBER: builtins.int
    @property
    def firewall_policys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy]:
        """Effective firewalls from firewall policies."""
        pass
    @property
    def firewalls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Firewall]:
        """Effective firewalls on the instance."""
        pass
    def __init__(self,
        *,
        firewall_policys : typing.Optional[typing.Iterable[global___InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy]] = ...,
        firewalls : typing.Optional[typing.Iterable[global___Firewall]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["firewall_policys",b"firewall_policys","firewalls",b"firewalls"]) -> None: ...
global___InstancesGetEffectiveFirewallsResponse = InstancesGetEffectiveFirewallsResponse

class InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        HIERARCHY: InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 69902869
        UNSPECIFIED: InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 526786327
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """[Output Only] The type of the firewall policy."""
        pass

    UNDEFINED_TYPE: InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    HIERARCHY: InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 69902869
    UNSPECIFIED: InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 526786327

    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    SHORT_NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    display_name: typing.Text = ...
    """[Output Only] Deprecated, please use short name instead. The display name of the firewall policy."""

    name: typing.Text = ...
    """[Output Only] The name of the firewall policy."""

    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FirewallPolicyRule]:
        """The rules that apply to the network."""
        pass
    short_name: typing.Text = ...
    """[Output Only] The short name of the firewall policy."""

    type: typing.Text = ...
    """[Output Only] The type of the firewall policy.
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        display_name : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        rules : typing.Optional[typing.Iterable[global___FirewallPolicyRule]] = ...,
        short_name : typing.Optional[typing.Text] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_display_name",b"_display_name","_name",b"_name","_short_name",b"_short_name","_type",b"_type","display_name",b"display_name","name",b"name","short_name",b"short_name","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_display_name",b"_display_name","_name",b"_name","_short_name",b"_short_name","_type",b"_type","display_name",b"display_name","name",b"name","rules",b"rules","short_name",b"short_name","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_display_name",b"_display_name"]) -> typing.Optional[typing_extensions.Literal["display_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_short_name",b"_short_name"]) -> typing.Optional[typing_extensions.Literal["short_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy = InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy

class InstancesRemoveResourcePoliciesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Resource policies to be removed from this instance."""
        pass
    def __init__(self,
        *,
        resource_policies : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_policies",b"resource_policies"]) -> None: ...
global___InstancesRemoveResourcePoliciesRequest = InstancesRemoveResourcePoliciesRequest

class InstancesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Instance]:
        """[Output Only] A list of instances contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning which replaces the list of instances when the list is empty."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[global___Instance]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","instances",b"instances","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InstancesScopedList = InstancesScopedList

class InstancesSetLabelsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    label_fingerprint: typing.Text = ...
    """Fingerprint of the previous set of labels for this resource, used to prevent conflicts. Provide the latest fingerprint value when making a request to add or change labels."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint","label_fingerprint",b"label_fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint","label_fingerprint",b"label_fingerprint","labels",b"labels"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
global___InstancesSetLabelsRequest = InstancesSetLabelsRequest

class InstancesSetMachineResourcesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUEST_ACCELERATORS_FIELD_NUMBER: builtins.int
    @property
    def guest_accelerators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AcceleratorConfig]:
        """A list of the type and count of accelerator cards attached to the instance."""
        pass
    def __init__(self,
        *,
        guest_accelerators : typing.Optional[typing.Iterable[global___AcceleratorConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guest_accelerators",b"guest_accelerators"]) -> None: ...
global___InstancesSetMachineResourcesRequest = InstancesSetMachineResourcesRequest

class InstancesSetMachineTypeRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MACHINE_TYPE_FIELD_NUMBER: builtins.int
    machine_type: typing.Text = ...
    """Full or partial URL of the machine type resource. See Machine Types for a full list of machine types. For example: zones/us-central1-f/machineTypes/n1-standard-1"""

    def __init__(self,
        *,
        machine_type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_machine_type",b"_machine_type","machine_type",b"machine_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_machine_type",b"_machine_type","machine_type",b"machine_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_machine_type",b"_machine_type"]) -> typing.Optional[typing_extensions.Literal["machine_type"]]: ...
global___InstancesSetMachineTypeRequest = InstancesSetMachineTypeRequest

class InstancesSetMinCpuPlatformRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MIN_CPU_PLATFORM_FIELD_NUMBER: builtins.int
    min_cpu_platform: typing.Text = ...
    """Minimum cpu/platform this instance should be started at."""

    def __init__(self,
        *,
        min_cpu_platform : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_min_cpu_platform",b"_min_cpu_platform","min_cpu_platform",b"min_cpu_platform"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_min_cpu_platform",b"_min_cpu_platform","min_cpu_platform",b"min_cpu_platform"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_cpu_platform",b"_min_cpu_platform"]) -> typing.Optional[typing_extensions.Literal["min_cpu_platform"]]: ...
global___InstancesSetMinCpuPlatformRequest = InstancesSetMinCpuPlatformRequest

class InstancesSetServiceAccountRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EMAIL_FIELD_NUMBER: builtins.int
    SCOPES_FIELD_NUMBER: builtins.int
    email: typing.Text = ...
    """Email address of the service account."""

    @property
    def scopes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of scopes to be made available for this service account."""
        pass
    def __init__(self,
        *,
        email : typing.Optional[typing.Text] = ...,
        scopes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_email",b"_email","email",b"email"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_email",b"_email","email",b"email","scopes",b"scopes"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_email",b"_email"]) -> typing.Optional[typing_extensions.Literal["email"]]: ...
global___InstancesSetServiceAccountRequest = InstancesSetServiceAccountRequest

class InstancesStartWithEncryptionKeyRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISKS_FIELD_NUMBER: builtins.int
    @property
    def disks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CustomerEncryptionKeyProtectedDisk]:
        """Array of disks associated with this instance that are protected with a customer-supplied encryption key. In order to start the instance, the disk url and its corresponding key must be provided. If the disk is not protected with a customer-supplied encryption key it should not be specified."""
        pass
    def __init__(self,
        *,
        disks : typing.Optional[typing.Iterable[global___CustomerEncryptionKeyProtectedDisk]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disks",b"disks"]) -> None: ...
global___InstancesStartWithEncryptionKeyRequest = InstancesStartWithEncryptionKeyRequest

class Int64RangeMatch(google.protobuf.message.Message):
    """HttpRouteRuleMatch criteria for field values that must stay within the specified integer range."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RANGE_END_FIELD_NUMBER: builtins.int
    RANGE_START_FIELD_NUMBER: builtins.int
    range_end: builtins.int = ...
    """The end of the range (exclusive) in signed long integer format."""

    range_start: builtins.int = ...
    """The start of the range (inclusive) in signed long integer format."""

    def __init__(self,
        *,
        range_end : typing.Optional[builtins.int] = ...,
        range_start : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_range_end",b"_range_end","_range_start",b"_range_start","range_end",b"range_end","range_start",b"range_start"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_range_end",b"_range_end","_range_start",b"_range_start","range_end",b"range_end","range_start",b"range_start"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_range_end",b"_range_end"]) -> typing.Optional[typing_extensions.Literal["range_end"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_range_start",b"_range_start"]) -> typing.Optional[typing_extensions.Literal["range_start"]]: ...
global___Int64RangeMatch = Int64RangeMatch

class Interconnect(google.protobuf.message.Message):
    """Represents an Interconnect resource. An Interconnect resource is a dedicated connection between the GCP network and your on-premises network. For more information, read the Dedicated Interconnect Overview."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _InterconnectType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InterconnectTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InterconnectType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_INTERCONNECT_TYPE: Interconnect.InterconnectType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DEDICATED: Interconnect.InterconnectType.ValueType = ...  # 258411983
        """A dedicated physical interconnection with the customer."""

        IT_PRIVATE: Interconnect.InterconnectType.ValueType = ...  # 335677007
        """[Deprecated] A private, physical interconnection with the customer."""

        PARTNER: Interconnect.InterconnectType.ValueType = ...  # 461924520
        """A partner-managed interconnection shared between customers via partner."""

    class InterconnectType(_InterconnectType, metaclass=_InterconnectTypeEnumTypeWrapper):
        """Type of interconnect, which can take one of the following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A dedicated physical interconnection with the customer. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED."""
        pass

    UNDEFINED_INTERCONNECT_TYPE: Interconnect.InterconnectType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DEDICATED: Interconnect.InterconnectType.ValueType = ...  # 258411983
    """A dedicated physical interconnection with the customer."""

    IT_PRIVATE: Interconnect.InterconnectType.ValueType = ...  # 335677007
    """[Deprecated] A private, physical interconnection with the customer."""

    PARTNER: Interconnect.InterconnectType.ValueType = ...  # 461924520
    """A partner-managed interconnection shared between customers via partner."""


    class _LinkType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LinkTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LinkType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_LINK_TYPE: Interconnect.LinkType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        LINK_TYPE_ETHERNET_100G_LR: Interconnect.LinkType.ValueType = ...  # 337672551
        """100G Ethernet, LR Optics."""

        LINK_TYPE_ETHERNET_10G_LR: Interconnect.LinkType.ValueType = ...  # 236739749
        """10G Ethernet, LR Optics. [(rate_bps) = 10000000000];"""

    class LinkType(_LinkType, metaclass=_LinkTypeEnumTypeWrapper):
        """Type of link requested, which can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this field indicates the speed of each of the links in the bundle, not the speed of the entire bundle."""
        pass

    UNDEFINED_LINK_TYPE: Interconnect.LinkType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    LINK_TYPE_ETHERNET_100G_LR: Interconnect.LinkType.ValueType = ...  # 337672551
    """100G Ethernet, LR Optics."""

    LINK_TYPE_ETHERNET_10G_LR: Interconnect.LinkType.ValueType = ...  # 236739749
    """10G Ethernet, LR Optics. [(rate_bps) = 10000000000];"""


    class _OperationalStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _OperationalStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OperationalStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_OPERATIONAL_STATUS: Interconnect.OperationalStatus.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        OS_ACTIVE: Interconnect.OperationalStatus.ValueType = ...  # 55721409
        """The interconnect is valid, turned up, and ready to use. Attachments may be provisioned on this interconnect."""

        OS_UNPROVISIONED: Interconnect.OperationalStatus.ValueType = ...  # 239771840
        """The interconnect has not completed turnup. No attachments may be provisioned on this interconnect."""

    class OperationalStatus(_OperationalStatus, metaclass=_OperationalStatusEnumTypeWrapper):
        """[Output Only] The current status of this Interconnect's functionality, which can take one of the following values: - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect. - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect."""
        pass

    UNDEFINED_OPERATIONAL_STATUS: Interconnect.OperationalStatus.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    OS_ACTIVE: Interconnect.OperationalStatus.ValueType = ...  # 55721409
    """The interconnect is valid, turned up, and ready to use. Attachments may be provisioned on this interconnect."""

    OS_UNPROVISIONED: Interconnect.OperationalStatus.ValueType = ...  # 239771840
    """The interconnect has not completed turnup. No attachments may be provisioned on this interconnect."""


    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: Interconnect.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: Interconnect.State.ValueType = ...  # 314733318
        """The interconnect is valid, turned up, and ready to use. Attachments may be provisioned on this interconnect."""

        UNPROVISIONED: Interconnect.State.ValueType = ...  # 517333979
        """The interconnect has not completed turnup. No attachments may be provisioned on this interconnect."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """[Output Only] The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The Interconnect has not completed turnup. No attachments may be provisioned on this Interconnect. - UNDER_MAINTENANCE: The Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect."""
        pass

    UNDEFINED_STATE: Interconnect.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: Interconnect.State.ValueType = ...  # 314733318
    """The interconnect is valid, turned up, and ready to use. Attachments may be provisioned on this interconnect."""

    UNPROVISIONED: Interconnect.State.ValueType = ...  # 517333979
    """The interconnect has not completed turnup. No attachments may be provisioned on this interconnect."""


    ADMIN_ENABLED_FIELD_NUMBER: builtins.int
    CIRCUIT_INFOS_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    CUSTOMER_NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPECTED_OUTAGES_FIELD_NUMBER: builtins.int
    GOOGLE_IP_ADDRESS_FIELD_NUMBER: builtins.int
    GOOGLE_REFERENCE_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INTERCONNECT_ATTACHMENTS_FIELD_NUMBER: builtins.int
    INTERCONNECT_TYPE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LINK_TYPE_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NOC_CONTACT_EMAIL_FIELD_NUMBER: builtins.int
    OPERATIONAL_STATUS_FIELD_NUMBER: builtins.int
    PEER_IP_ADDRESS_FIELD_NUMBER: builtins.int
    PROVISIONED_LINK_COUNT_FIELD_NUMBER: builtins.int
    REQUESTED_LINK_COUNT_FIELD_NUMBER: builtins.int
    SATISFIES_PZS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    admin_enabled: builtins.bool = ...
    """Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By default, the status is set to true."""

    @property
    def circuit_infos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InterconnectCircuitInfo]:
        """[Output Only] A list of CircuitInfo objects, that describe the individual circuits in this LAG."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    customer_name: typing.Text = ...
    """Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    @property
    def expected_outages(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InterconnectOutageNotification]:
        """[Output Only] A list of outages expected for this Interconnect."""
        pass
    google_ip_address: typing.Text = ...
    """[Output Only] IP address configured on the Google side of the Interconnect link. This can be used only for ping tests."""

    google_reference_id: typing.Text = ...
    """[Output Only] Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity issues."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def interconnect_attachments(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] A list of the URLs of all InterconnectAttachments configured to use this Interconnect."""
        pass
    interconnect_type: typing.Text = ...
    """Type of interconnect, which can take one of the following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A dedicated physical interconnection with the customer. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
    Check the InterconnectType enum for the list of possible values.
    """

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#interconnect for interconnects."""

    link_type: typing.Text = ...
    """Type of link requested, which can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this field indicates the speed of each of the links in the bundle, not the speed of the entire bundle.
    Check the LinkType enum for the list of possible values.
    """

    location: typing.Text = ...
    """URL of the InterconnectLocation object that represents where this connection is to be provisioned."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    noc_contact_email: typing.Text = ...
    """Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If specified, this will be used for notifications in addition to all other forms described, such as Stackdriver logs alerting and Cloud Notifications."""

    operational_status: typing.Text = ...
    """[Output Only] The current status of this Interconnect's functionality, which can take one of the following values: - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect. - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
    Check the OperationalStatus enum for the list of possible values.
    """

    peer_ip_address: typing.Text = ...
    """[Output Only] IP address configured on the customer side of the Interconnect link. The customer should configure this IP address during turnup when prompted by Google NOC. This can be used only for ping tests."""

    provisioned_link_count: builtins.int = ...
    """[Output Only] Number of links actually provisioned in this interconnect."""

    requested_link_count: builtins.int = ...
    """Target number of physical links in the link bundle, as requested by the customer."""

    satisfies_pzs: builtins.bool = ...
    """[Output Only] Set to true if the resource satisfies the zone separation organization policy constraints and false otherwise. Defaults to false if the field is not present."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    state: typing.Text = ...
    """[Output Only] The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The Interconnect has not completed turnup. No attachments may be provisioned on this Interconnect. - UNDER_MAINTENANCE: The Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
    Check the State enum for the list of possible values.
    """

    def __init__(self,
        *,
        admin_enabled : typing.Optional[builtins.bool] = ...,
        circuit_infos : typing.Optional[typing.Iterable[global___InterconnectCircuitInfo]] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        customer_name : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        expected_outages : typing.Optional[typing.Iterable[global___InterconnectOutageNotification]] = ...,
        google_ip_address : typing.Optional[typing.Text] = ...,
        google_reference_id : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        interconnect_attachments : typing.Optional[typing.Iterable[typing.Text]] = ...,
        interconnect_type : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        link_type : typing.Optional[typing.Text] = ...,
        location : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        noc_contact_email : typing.Optional[typing.Text] = ...,
        operational_status : typing.Optional[typing.Text] = ...,
        peer_ip_address : typing.Optional[typing.Text] = ...,
        provisioned_link_count : typing.Optional[builtins.int] = ...,
        requested_link_count : typing.Optional[builtins.int] = ...,
        satisfies_pzs : typing.Optional[builtins.bool] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        state : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_admin_enabled",b"_admin_enabled","_creation_timestamp",b"_creation_timestamp","_customer_name",b"_customer_name","_description",b"_description","_google_ip_address",b"_google_ip_address","_google_reference_id",b"_google_reference_id","_id",b"_id","_interconnect_type",b"_interconnect_type","_kind",b"_kind","_link_type",b"_link_type","_location",b"_location","_name",b"_name","_noc_contact_email",b"_noc_contact_email","_operational_status",b"_operational_status","_peer_ip_address",b"_peer_ip_address","_provisioned_link_count",b"_provisioned_link_count","_requested_link_count",b"_requested_link_count","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_state",b"_state","admin_enabled",b"admin_enabled","creation_timestamp",b"creation_timestamp","customer_name",b"customer_name","description",b"description","google_ip_address",b"google_ip_address","google_reference_id",b"google_reference_id","id",b"id","interconnect_type",b"interconnect_type","kind",b"kind","link_type",b"link_type","location",b"location","name",b"name","noc_contact_email",b"noc_contact_email","operational_status",b"operational_status","peer_ip_address",b"peer_ip_address","provisioned_link_count",b"provisioned_link_count","requested_link_count",b"requested_link_count","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_admin_enabled",b"_admin_enabled","_creation_timestamp",b"_creation_timestamp","_customer_name",b"_customer_name","_description",b"_description","_google_ip_address",b"_google_ip_address","_google_reference_id",b"_google_reference_id","_id",b"_id","_interconnect_type",b"_interconnect_type","_kind",b"_kind","_link_type",b"_link_type","_location",b"_location","_name",b"_name","_noc_contact_email",b"_noc_contact_email","_operational_status",b"_operational_status","_peer_ip_address",b"_peer_ip_address","_provisioned_link_count",b"_provisioned_link_count","_requested_link_count",b"_requested_link_count","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_state",b"_state","admin_enabled",b"admin_enabled","circuit_infos",b"circuit_infos","creation_timestamp",b"creation_timestamp","customer_name",b"customer_name","description",b"description","expected_outages",b"expected_outages","google_ip_address",b"google_ip_address","google_reference_id",b"google_reference_id","id",b"id","interconnect_attachments",b"interconnect_attachments","interconnect_type",b"interconnect_type","kind",b"kind","link_type",b"link_type","location",b"location","name",b"name","noc_contact_email",b"noc_contact_email","operational_status",b"operational_status","peer_ip_address",b"peer_ip_address","provisioned_link_count",b"provisioned_link_count","requested_link_count",b"requested_link_count","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","state",b"state"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_admin_enabled",b"_admin_enabled"]) -> typing.Optional[typing_extensions.Literal["admin_enabled"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_customer_name",b"_customer_name"]) -> typing.Optional[typing_extensions.Literal["customer_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_google_ip_address",b"_google_ip_address"]) -> typing.Optional[typing_extensions.Literal["google_ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_google_reference_id",b"_google_reference_id"]) -> typing.Optional[typing_extensions.Literal["google_reference_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_interconnect_type",b"_interconnect_type"]) -> typing.Optional[typing_extensions.Literal["interconnect_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_link_type",b"_link_type"]) -> typing.Optional[typing_extensions.Literal["link_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_location",b"_location"]) -> typing.Optional[typing_extensions.Literal["location"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_noc_contact_email",b"_noc_contact_email"]) -> typing.Optional[typing_extensions.Literal["noc_contact_email"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_operational_status",b"_operational_status"]) -> typing.Optional[typing_extensions.Literal["operational_status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_ip_address",b"_peer_ip_address"]) -> typing.Optional[typing_extensions.Literal["peer_ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_provisioned_link_count",b"_provisioned_link_count"]) -> typing.Optional[typing_extensions.Literal["provisioned_link_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_requested_link_count",b"_requested_link_count"]) -> typing.Optional[typing_extensions.Literal["requested_link_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_satisfies_pzs",b"_satisfies_pzs"]) -> typing.Optional[typing_extensions.Literal["satisfies_pzs"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
global___Interconnect = Interconnect

class InterconnectAttachment(google.protobuf.message.Message):
    """Represents an Interconnect Attachment (VLAN) resource. You can use Interconnect attachments (VLANS) to connect your Virtual Private Cloud networks to your on-premises networks through an Interconnect. For more information, read Creating VLAN Attachments."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Bandwidth:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _BandwidthEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Bandwidth.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_BANDWIDTH: InterconnectAttachment.Bandwidth.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        BPS_100M: InterconnectAttachment.Bandwidth.ValueType = ...  # 49547958
        """100 Mbit/s"""

        BPS_10G: InterconnectAttachment.Bandwidth.ValueType = ...  # 278693006
        """10 Gbit/s"""

        BPS_1G: InterconnectAttachment.Bandwidth.ValueType = ...  # 355358448
        """1 Gbit/s"""

        BPS_200M: InterconnectAttachment.Bandwidth.ValueType = ...  # 49577749
        """200 Mbit/s"""

        BPS_20G: InterconnectAttachment.Bandwidth.ValueType = ...  # 278693967
        """20 Gbit/s"""

        BPS_2G: InterconnectAttachment.Bandwidth.ValueType = ...  # 355358479
        """2 Gbit/s"""

        BPS_300M: InterconnectAttachment.Bandwidth.ValueType = ...  # 49607540
        """300 Mbit/s"""

        BPS_400M: InterconnectAttachment.Bandwidth.ValueType = ...  # 49637331
        """400 Mbit/s"""

        BPS_500M: InterconnectAttachment.Bandwidth.ValueType = ...  # 49667122
        """500 Mbit/s"""

        BPS_50G: InterconnectAttachment.Bandwidth.ValueType = ...  # 278696850
        """50 Gbit/s"""

        BPS_50M: InterconnectAttachment.Bandwidth.ValueType = ...  # 278696856
        """50 Mbit/s"""

        BPS_5G: InterconnectAttachment.Bandwidth.ValueType = ...  # 355358572
        """5 Gbit/s"""

    class Bandwidth(_Bandwidth, metaclass=_BandwidthEnumTypeWrapper):
        """Provisioned bandwidth capacity for the interconnect attachment. For attachments of type DEDICATED, the user can set the bandwidth. For attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth. Output only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED, and can take one of the following values: - BPS_50M: 50 Mbit/s - BPS_100M: 100 Mbit/s - BPS_200M: 200 Mbit/s - BPS_300M: 300 Mbit/s - BPS_400M: 400 Mbit/s - BPS_500M: 500 Mbit/s - BPS_1G: 1 Gbit/s - BPS_2G: 2 Gbit/s - BPS_5G: 5 Gbit/s - BPS_10G: 10 Gbit/s - BPS_20G: 20 Gbit/s - BPS_50G: 50 Gbit/s"""
        pass

    UNDEFINED_BANDWIDTH: InterconnectAttachment.Bandwidth.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    BPS_100M: InterconnectAttachment.Bandwidth.ValueType = ...  # 49547958
    """100 Mbit/s"""

    BPS_10G: InterconnectAttachment.Bandwidth.ValueType = ...  # 278693006
    """10 Gbit/s"""

    BPS_1G: InterconnectAttachment.Bandwidth.ValueType = ...  # 355358448
    """1 Gbit/s"""

    BPS_200M: InterconnectAttachment.Bandwidth.ValueType = ...  # 49577749
    """200 Mbit/s"""

    BPS_20G: InterconnectAttachment.Bandwidth.ValueType = ...  # 278693967
    """20 Gbit/s"""

    BPS_2G: InterconnectAttachment.Bandwidth.ValueType = ...  # 355358479
    """2 Gbit/s"""

    BPS_300M: InterconnectAttachment.Bandwidth.ValueType = ...  # 49607540
    """300 Mbit/s"""

    BPS_400M: InterconnectAttachment.Bandwidth.ValueType = ...  # 49637331
    """400 Mbit/s"""

    BPS_500M: InterconnectAttachment.Bandwidth.ValueType = ...  # 49667122
    """500 Mbit/s"""

    BPS_50G: InterconnectAttachment.Bandwidth.ValueType = ...  # 278696850
    """50 Gbit/s"""

    BPS_50M: InterconnectAttachment.Bandwidth.ValueType = ...  # 278696856
    """50 Mbit/s"""

    BPS_5G: InterconnectAttachment.Bandwidth.ValueType = ...  # 355358572
    """5 Gbit/s"""


    class _EdgeAvailabilityDomain:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EdgeAvailabilityDomainEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EdgeAvailabilityDomain.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_EDGE_AVAILABILITY_DOMAIN: InterconnectAttachment.EdgeAvailabilityDomain.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        AVAILABILITY_DOMAIN_1: InterconnectAttachment.EdgeAvailabilityDomain.ValueType = ...  # 349552090
        AVAILABILITY_DOMAIN_2: InterconnectAttachment.EdgeAvailabilityDomain.ValueType = ...  # 349552091
        AVAILABILITY_DOMAIN_ANY: InterconnectAttachment.EdgeAvailabilityDomain.ValueType = ...  # 375256373
    class EdgeAvailabilityDomain(_EdgeAvailabilityDomain, metaclass=_EdgeAvailabilityDomainEnumTypeWrapper):
        """Desired availability domain for the attachment. Only available for type PARTNER, at creation time, and can take one of the following values: - AVAILABILITY_DOMAIN_ANY - AVAILABILITY_DOMAIN_1 - AVAILABILITY_DOMAIN_2 For improved reliability, customers should configure a pair of attachments, one per availability domain. The selected availability domain will be provided to the Partner via the pairing key, so that the provisioned circuit will lie in the specified domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY."""
        pass

    UNDEFINED_EDGE_AVAILABILITY_DOMAIN: InterconnectAttachment.EdgeAvailabilityDomain.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    AVAILABILITY_DOMAIN_1: InterconnectAttachment.EdgeAvailabilityDomain.ValueType = ...  # 349552090
    AVAILABILITY_DOMAIN_2: InterconnectAttachment.EdgeAvailabilityDomain.ValueType = ...  # 349552091
    AVAILABILITY_DOMAIN_ANY: InterconnectAttachment.EdgeAvailabilityDomain.ValueType = ...  # 375256373

    class _Encryption:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EncryptionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Encryption.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ENCRYPTION: InterconnectAttachment.Encryption.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        IPSEC: InterconnectAttachment.Encryption.ValueType = ...  # 69882282
        """The interconnect attachment will carry only encrypted traffic that is encrypted by an IPsec device such as HA VPN gateway; VMs cannot directly send traffic to or receive traffic from such an interconnect attachment. To use IPsec-encrypted Cloud Interconnect, the interconnect attachment must be created with this option."""

        NONE: InterconnectAttachment.Encryption.ValueType = ...  # 2402104
        """This is the default value, which means the Interconnect Attachment will carry unencrypted traffic. VMs will be able to send traffic to or receive traffic from such interconnect attachment."""

    class Encryption(_Encryption, metaclass=_EncryptionEnumTypeWrapper):
        """Indicates the user-supplied encryption option of this VLAN attachment (interconnectAttachment). Can only be specified at attachment creation for PARTNER or DEDICATED attachments. Possible values are: - NONE - This is the default value, which means that the VLAN attachment carries unencrypted traffic. VMs are able to send traffic to, or receive traffic from, such a VLAN attachment. - IPSEC - The VLAN attachment carries only encrypted traffic that is encrypted by an IPsec device, such as an HA VPN gateway or third-party IPsec VPN. VMs cannot directly send traffic to, or receive traffic from, such a VLAN attachment. To use *IPsec-encrypted Cloud Interconnect*, the VLAN attachment must be created with this option. Not currently available publicly."""
        pass

    UNDEFINED_ENCRYPTION: InterconnectAttachment.Encryption.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    IPSEC: InterconnectAttachment.Encryption.ValueType = ...  # 69882282
    """The interconnect attachment will carry only encrypted traffic that is encrypted by an IPsec device such as HA VPN gateway; VMs cannot directly send traffic to or receive traffic from such an interconnect attachment. To use IPsec-encrypted Cloud Interconnect, the interconnect attachment must be created with this option."""

    NONE: InterconnectAttachment.Encryption.ValueType = ...  # 2402104
    """This is the default value, which means the Interconnect Attachment will carry unencrypted traffic. VMs will be able to send traffic to or receive traffic from such interconnect attachment."""


    class _OperationalStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _OperationalStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OperationalStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_OPERATIONAL_STATUS: InterconnectAttachment.OperationalStatus.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        OS_ACTIVE: InterconnectAttachment.OperationalStatus.ValueType = ...  # 55721409
        """Indicates that attachment has been turned up and is ready to use."""

        OS_UNPROVISIONED: InterconnectAttachment.OperationalStatus.ValueType = ...  # 239771840
        """Indicates that attachment is not ready to use yet, because turnup is not complete."""

    class OperationalStatus(_OperationalStatus, metaclass=_OperationalStatusEnumTypeWrapper):
        """[Output Only] The current status of whether or not this interconnect attachment is functional, which can take one of the following values: - OS_ACTIVE: The attachment has been turned up and is ready to use. - OS_UNPROVISIONED: The attachment is not ready to use yet, because turnup is not complete."""
        pass

    UNDEFINED_OPERATIONAL_STATUS: InterconnectAttachment.OperationalStatus.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    OS_ACTIVE: InterconnectAttachment.OperationalStatus.ValueType = ...  # 55721409
    """Indicates that attachment has been turned up and is ready to use."""

    OS_UNPROVISIONED: InterconnectAttachment.OperationalStatus.ValueType = ...  # 239771840
    """Indicates that attachment is not ready to use yet, because turnup is not complete."""


    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: InterconnectAttachment.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: InterconnectAttachment.State.ValueType = ...  # 314733318
        """Indicates that attachment has been turned up and is ready to use."""

        DEFUNCT: InterconnectAttachment.State.ValueType = ...  # 115891759
        """The attachment was deleted externally and is no longer functional. This could be because the associated Interconnect was wiped out, or because the other side of a Partner attachment was deleted."""

        PARTNER_REQUEST_RECEIVED: InterconnectAttachment.State.ValueType = ...  # 513587304
        """A PARTNER attachment is in the process of provisioning after a PARTNER_PROVIDER attachment was created that references it."""

        PENDING_CUSTOMER: InterconnectAttachment.State.ValueType = ...  # 167494054
        """PARTNER or PARTNER_PROVIDER attachment that is waiting for the customer to activate."""

        PENDING_PARTNER: InterconnectAttachment.State.ValueType = ...  # 387890656
        """A newly created PARTNER attachment that has not yet been configured on the Partner side."""

        STATE_UNSPECIFIED: InterconnectAttachment.State.ValueType = ...  # 470755401
        UNPROVISIONED: InterconnectAttachment.State.ValueType = ...  # 517333979
        """Indicates that attachment is not ready to use yet, because turnup is not complete."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """[Output Only] The current state of this attachment's functionality. Enum values ACTIVE and UNPROVISIONED are shared by DEDICATED/PRIVATE, PARTNER, and PARTNER_PROVIDER interconnect attachments, while enum values PENDING_PARTNER, PARTNER_REQUEST_RECEIVED, and PENDING_CUSTOMER are used for only PARTNER and PARTNER_PROVIDER interconnect attachments. This state can take one of the following values: - ACTIVE: The attachment has been turned up and is ready to use. - UNPROVISIONED: The attachment is not ready to use yet, because turnup is not complete. - PENDING_PARTNER: A newly-created PARTNER attachment that has not yet been configured on the Partner side. - PARTNER_REQUEST_RECEIVED: A PARTNER attachment is in the process of provisioning after a PARTNER_PROVIDER attachment was created that references it. - PENDING_CUSTOMER: A PARTNER or PARTNER_PROVIDER attachment that is waiting for a customer to activate it. - DEFUNCT: The attachment was deleted externally and is no longer functional. This could be because the associated Interconnect was removed, or because the other side of a Partner attachment was deleted."""
        pass

    UNDEFINED_STATE: InterconnectAttachment.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: InterconnectAttachment.State.ValueType = ...  # 314733318
    """Indicates that attachment has been turned up and is ready to use."""

    DEFUNCT: InterconnectAttachment.State.ValueType = ...  # 115891759
    """The attachment was deleted externally and is no longer functional. This could be because the associated Interconnect was wiped out, or because the other side of a Partner attachment was deleted."""

    PARTNER_REQUEST_RECEIVED: InterconnectAttachment.State.ValueType = ...  # 513587304
    """A PARTNER attachment is in the process of provisioning after a PARTNER_PROVIDER attachment was created that references it."""

    PENDING_CUSTOMER: InterconnectAttachment.State.ValueType = ...  # 167494054
    """PARTNER or PARTNER_PROVIDER attachment that is waiting for the customer to activate."""

    PENDING_PARTNER: InterconnectAttachment.State.ValueType = ...  # 387890656
    """A newly created PARTNER attachment that has not yet been configured on the Partner side."""

    STATE_UNSPECIFIED: InterconnectAttachment.State.ValueType = ...  # 470755401
    UNPROVISIONED: InterconnectAttachment.State.ValueType = ...  # 517333979
    """Indicates that attachment is not ready to use yet, because turnup is not complete."""


    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: InterconnectAttachment.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DEDICATED: InterconnectAttachment.Type.ValueType = ...  # 258411983
        """Attachment to a dedicated interconnect."""

        PARTNER: InterconnectAttachment.Type.ValueType = ...  # 461924520
        """Attachment to a partner interconnect, created by the customer."""

        PARTNER_PROVIDER: InterconnectAttachment.Type.ValueType = ...  # 483261352
        """Attachment to a partner interconnect, created by the partner."""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The type of interconnect attachment this is, which can take one of the following values: - DEDICATED: an attachment to a Dedicated Interconnect. - PARTNER: an attachment to a Partner Interconnect, created by the customer. - PARTNER_PROVIDER: an attachment to a Partner Interconnect, created by the partner."""
        pass

    UNDEFINED_TYPE: InterconnectAttachment.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DEDICATED: InterconnectAttachment.Type.ValueType = ...  # 258411983
    """Attachment to a dedicated interconnect."""

    PARTNER: InterconnectAttachment.Type.ValueType = ...  # 461924520
    """Attachment to a partner interconnect, created by the customer."""

    PARTNER_PROVIDER: InterconnectAttachment.Type.ValueType = ...  # 483261352
    """Attachment to a partner interconnect, created by the partner."""


    ADMIN_ENABLED_FIELD_NUMBER: builtins.int
    BANDWIDTH_FIELD_NUMBER: builtins.int
    CANDIDATE_SUBNETS_FIELD_NUMBER: builtins.int
    CLOUD_ROUTER_IP_ADDRESS_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    CUSTOMER_ROUTER_IP_ADDRESS_FIELD_NUMBER: builtins.int
    DATAPLANE_VERSION_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    EDGE_AVAILABILITY_DOMAIN_FIELD_NUMBER: builtins.int
    ENCRYPTION_FIELD_NUMBER: builtins.int
    GOOGLE_REFERENCE_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INTERCONNECT_FIELD_NUMBER: builtins.int
    IPSEC_INTERNAL_ADDRESSES_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    MTU_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    OPERATIONAL_STATUS_FIELD_NUMBER: builtins.int
    PAIRING_KEY_FIELD_NUMBER: builtins.int
    PARTNER_ASN_FIELD_NUMBER: builtins.int
    PARTNER_METADATA_FIELD_NUMBER: builtins.int
    PRIVATE_INTERCONNECT_INFO_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    ROUTER_FIELD_NUMBER: builtins.int
    SATISFIES_PZS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    VLAN_TAG8021Q_FIELD_NUMBER: builtins.int
    admin_enabled: builtins.bool = ...
    """Determines whether this Attachment will carry packets. Not present for PARTNER_PROVIDER."""

    bandwidth: typing.Text = ...
    """Provisioned bandwidth capacity for the interconnect attachment. For attachments of type DEDICATED, the user can set the bandwidth. For attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth. Output only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED, and can take one of the following values: - BPS_50M: 50 Mbit/s - BPS_100M: 100 Mbit/s - BPS_200M: 200 Mbit/s - BPS_300M: 300 Mbit/s - BPS_400M: 400 Mbit/s - BPS_500M: 500 Mbit/s - BPS_1G: 1 Gbit/s - BPS_2G: 2 Gbit/s - BPS_5G: 5 Gbit/s - BPS_10G: 10 Gbit/s - BPS_20G: 20 Gbit/s - BPS_50G: 50 Gbit/s
    Check the Bandwidth enum for the list of possible values.
    """

    @property
    def candidate_subnets(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Up to 16 candidate prefixes that can be used to restrict the allocation of cloudRouterIpAddress and customerRouterIpAddress for this attachment. All prefixes must be within link-local address space (169.254.0.0/16) and must be /29 or shorter (/28, /27, etc). Google will attempt to select an unused /29 from the supplied candidate prefix(es). The request will fail if all possible /29s are in use on Google's edge. If not supplied, Google will randomly select an unused /29 from all of link-local space."""
        pass
    cloud_router_ip_address: typing.Text = ...
    """[Output Only] IPv4 address + prefix length to be configured on Cloud Router Interface for this interconnect attachment."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    customer_router_ip_address: typing.Text = ...
    """[Output Only] IPv4 address + prefix length to be configured on the customer router subinterface for this interconnect attachment."""

    dataplane_version: builtins.int = ...
    """[Output Only] Dataplane version for this InterconnectAttachment."""

    description: typing.Text = ...
    """An optional description of this resource."""

    edge_availability_domain: typing.Text = ...
    """Desired availability domain for the attachment. Only available for type PARTNER, at creation time, and can take one of the following values: - AVAILABILITY_DOMAIN_ANY - AVAILABILITY_DOMAIN_1 - AVAILABILITY_DOMAIN_2 For improved reliability, customers should configure a pair of attachments, one per availability domain. The selected availability domain will be provided to the Partner via the pairing key, so that the provisioned circuit will lie in the specified domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
    Check the EdgeAvailabilityDomain enum for the list of possible values.
    """

    encryption: typing.Text = ...
    """Indicates the user-supplied encryption option of this VLAN attachment (interconnectAttachment). Can only be specified at attachment creation for PARTNER or DEDICATED attachments. Possible values are: - NONE - This is the default value, which means that the VLAN attachment carries unencrypted traffic. VMs are able to send traffic to, or receive traffic from, such a VLAN attachment. - IPSEC - The VLAN attachment carries only encrypted traffic that is encrypted by an IPsec device, such as an HA VPN gateway or third-party IPsec VPN. VMs cannot directly send traffic to, or receive traffic from, such a VLAN attachment. To use *IPsec-encrypted Cloud Interconnect*, the VLAN attachment must be created with this option. Not currently available publicly.
    Check the Encryption enum for the list of possible values.
    """

    google_reference_id: typing.Text = ...
    """[Output Only] Google reference ID, to be used when raising support tickets with Google or otherwise to debug backend connectivity issues. [Deprecated] This field is not used."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    interconnect: typing.Text = ...
    """URL of the underlying Interconnect object that this attachment's traffic will traverse through."""

    @property
    def ipsec_internal_addresses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of URLs of addresses that have been reserved for the VLAN attachment. Used only for the VLAN attachment that has the encryption option as IPSEC. The addresses must be regional internal IP address ranges. When creating an HA VPN gateway over the VLAN attachment, if the attachment is configured to use a regional internal IP address, then the VPN gateway's IP address is allocated from the IP address range specified here. For example, if the HA VPN gateway's interface 0 is paired to this VLAN attachment, then a regional internal IP address for the VPN gateway interface 0 will be allocated from the IP address specified for this VLAN attachment. If this field is not specified when creating the VLAN attachment, then later on when creating an HA VPN gateway on this VLAN attachment, the HA VPN gateway's IP address is allocated from the regional external IP address pool. Not currently available publicly."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#interconnectAttachment for interconnect attachments."""

    mtu: builtins.int = ...
    """Maximum Transmission Unit (MTU), in bytes, of packets passing through this interconnect attachment. Only 1440 and 1500 are allowed. If not specified, the value will default to 1440."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    operational_status: typing.Text = ...
    """[Output Only] The current status of whether or not this interconnect attachment is functional, which can take one of the following values: - OS_ACTIVE: The attachment has been turned up and is ready to use. - OS_UNPROVISIONED: The attachment is not ready to use yet, because turnup is not complete.
    Check the OperationalStatus enum for the list of possible values.
    """

    pairing_key: typing.Text = ...
    """[Output only for type PARTNER. Input only for PARTNER_PROVIDER. Not present for DEDICATED]. The opaque identifier of an PARTNER attachment used to initiate provisioning with a selected partner. Of the form "XXXXX/region/domain" """

    partner_asn: builtins.int = ...
    """Optional BGP ASN for the router supplied by a Layer 3 Partner if they configured BGP on behalf of the customer. Output only for PARTNER type, input only for PARTNER_PROVIDER, not available for DEDICATED."""

    @property
    def partner_metadata(self) -> global___InterconnectAttachmentPartnerMetadata:
        """Informational metadata about Partner attachments from Partners to display to customers. Output only for for PARTNER type, mutable for PARTNER_PROVIDER, not available for DEDICATED."""
        pass
    @property
    def private_interconnect_info(self) -> global___InterconnectAttachmentPrivateInfo:
        """[Output Only] Information specific to an InterconnectAttachment. This property is populated if the interconnect that this is attached to is of type DEDICATED."""
        pass
    region: typing.Text = ...
    """[Output Only] URL of the region where the regional interconnect attachment resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    router: typing.Text = ...
    """URL of the Cloud Router to be used for dynamic routing. This router must be in the same region as this InterconnectAttachment. The InterconnectAttachment will automatically connect the Interconnect to the network & region within which the Cloud Router is configured."""

    satisfies_pzs: builtins.bool = ...
    """[Output Only] Set to true if the resource satisfies the zone separation organization policy constraints and false otherwise. Defaults to false if the field is not present."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    state: typing.Text = ...
    """[Output Only] The current state of this attachment's functionality. Enum values ACTIVE and UNPROVISIONED are shared by DEDICATED/PRIVATE, PARTNER, and PARTNER_PROVIDER interconnect attachments, while enum values PENDING_PARTNER, PARTNER_REQUEST_RECEIVED, and PENDING_CUSTOMER are used for only PARTNER and PARTNER_PROVIDER interconnect attachments. This state can take one of the following values: - ACTIVE: The attachment has been turned up and is ready to use. - UNPROVISIONED: The attachment is not ready to use yet, because turnup is not complete. - PENDING_PARTNER: A newly-created PARTNER attachment that has not yet been configured on the Partner side. - PARTNER_REQUEST_RECEIVED: A PARTNER attachment is in the process of provisioning after a PARTNER_PROVIDER attachment was created that references it. - PENDING_CUSTOMER: A PARTNER or PARTNER_PROVIDER attachment that is waiting for a customer to activate it. - DEFUNCT: The attachment was deleted externally and is no longer functional. This could be because the associated Interconnect was removed, or because the other side of a Partner attachment was deleted.
    Check the State enum for the list of possible values.
    """

    type: typing.Text = ...
    """The type of interconnect attachment this is, which can take one of the following values: - DEDICATED: an attachment to a Dedicated Interconnect. - PARTNER: an attachment to a Partner Interconnect, created by the customer. - PARTNER_PROVIDER: an attachment to a Partner Interconnect, created by the partner.
    Check the Type enum for the list of possible values.
    """

    vlan_tag8021q: builtins.int = ...
    """The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094. Only specified at creation time."""

    def __init__(self,
        *,
        admin_enabled : typing.Optional[builtins.bool] = ...,
        bandwidth : typing.Optional[typing.Text] = ...,
        candidate_subnets : typing.Optional[typing.Iterable[typing.Text]] = ...,
        cloud_router_ip_address : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        customer_router_ip_address : typing.Optional[typing.Text] = ...,
        dataplane_version : typing.Optional[builtins.int] = ...,
        description : typing.Optional[typing.Text] = ...,
        edge_availability_domain : typing.Optional[typing.Text] = ...,
        encryption : typing.Optional[typing.Text] = ...,
        google_reference_id : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        interconnect : typing.Optional[typing.Text] = ...,
        ipsec_internal_addresses : typing.Optional[typing.Iterable[typing.Text]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        mtu : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        operational_status : typing.Optional[typing.Text] = ...,
        pairing_key : typing.Optional[typing.Text] = ...,
        partner_asn : typing.Optional[builtins.int] = ...,
        partner_metadata : typing.Optional[global___InterconnectAttachmentPartnerMetadata] = ...,
        private_interconnect_info : typing.Optional[global___InterconnectAttachmentPrivateInfo] = ...,
        region : typing.Optional[typing.Text] = ...,
        router : typing.Optional[typing.Text] = ...,
        satisfies_pzs : typing.Optional[builtins.bool] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        state : typing.Optional[typing.Text] = ...,
        type : typing.Optional[typing.Text] = ...,
        vlan_tag8021q : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_admin_enabled",b"_admin_enabled","_bandwidth",b"_bandwidth","_cloud_router_ip_address",b"_cloud_router_ip_address","_creation_timestamp",b"_creation_timestamp","_customer_router_ip_address",b"_customer_router_ip_address","_dataplane_version",b"_dataplane_version","_description",b"_description","_edge_availability_domain",b"_edge_availability_domain","_encryption",b"_encryption","_google_reference_id",b"_google_reference_id","_id",b"_id","_interconnect",b"_interconnect","_kind",b"_kind","_mtu",b"_mtu","_name",b"_name","_operational_status",b"_operational_status","_pairing_key",b"_pairing_key","_partner_asn",b"_partner_asn","_partner_metadata",b"_partner_metadata","_private_interconnect_info",b"_private_interconnect_info","_region",b"_region","_router",b"_router","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_state",b"_state","_type",b"_type","_vlan_tag8021q",b"_vlan_tag8021q","admin_enabled",b"admin_enabled","bandwidth",b"bandwidth","cloud_router_ip_address",b"cloud_router_ip_address","creation_timestamp",b"creation_timestamp","customer_router_ip_address",b"customer_router_ip_address","dataplane_version",b"dataplane_version","description",b"description","edge_availability_domain",b"edge_availability_domain","encryption",b"encryption","google_reference_id",b"google_reference_id","id",b"id","interconnect",b"interconnect","kind",b"kind","mtu",b"mtu","name",b"name","operational_status",b"operational_status","pairing_key",b"pairing_key","partner_asn",b"partner_asn","partner_metadata",b"partner_metadata","private_interconnect_info",b"private_interconnect_info","region",b"region","router",b"router","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","state",b"state","type",b"type","vlan_tag8021q",b"vlan_tag8021q"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_admin_enabled",b"_admin_enabled","_bandwidth",b"_bandwidth","_cloud_router_ip_address",b"_cloud_router_ip_address","_creation_timestamp",b"_creation_timestamp","_customer_router_ip_address",b"_customer_router_ip_address","_dataplane_version",b"_dataplane_version","_description",b"_description","_edge_availability_domain",b"_edge_availability_domain","_encryption",b"_encryption","_google_reference_id",b"_google_reference_id","_id",b"_id","_interconnect",b"_interconnect","_kind",b"_kind","_mtu",b"_mtu","_name",b"_name","_operational_status",b"_operational_status","_pairing_key",b"_pairing_key","_partner_asn",b"_partner_asn","_partner_metadata",b"_partner_metadata","_private_interconnect_info",b"_private_interconnect_info","_region",b"_region","_router",b"_router","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_state",b"_state","_type",b"_type","_vlan_tag8021q",b"_vlan_tag8021q","admin_enabled",b"admin_enabled","bandwidth",b"bandwidth","candidate_subnets",b"candidate_subnets","cloud_router_ip_address",b"cloud_router_ip_address","creation_timestamp",b"creation_timestamp","customer_router_ip_address",b"customer_router_ip_address","dataplane_version",b"dataplane_version","description",b"description","edge_availability_domain",b"edge_availability_domain","encryption",b"encryption","google_reference_id",b"google_reference_id","id",b"id","interconnect",b"interconnect","ipsec_internal_addresses",b"ipsec_internal_addresses","kind",b"kind","mtu",b"mtu","name",b"name","operational_status",b"operational_status","pairing_key",b"pairing_key","partner_asn",b"partner_asn","partner_metadata",b"partner_metadata","private_interconnect_info",b"private_interconnect_info","region",b"region","router",b"router","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","state",b"state","type",b"type","vlan_tag8021q",b"vlan_tag8021q"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_admin_enabled",b"_admin_enabled"]) -> typing.Optional[typing_extensions.Literal["admin_enabled"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_bandwidth",b"_bandwidth"]) -> typing.Optional[typing_extensions.Literal["bandwidth"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cloud_router_ip_address",b"_cloud_router_ip_address"]) -> typing.Optional[typing_extensions.Literal["cloud_router_ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_customer_router_ip_address",b"_customer_router_ip_address"]) -> typing.Optional[typing_extensions.Literal["customer_router_ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_dataplane_version",b"_dataplane_version"]) -> typing.Optional[typing_extensions.Literal["dataplane_version"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_edge_availability_domain",b"_edge_availability_domain"]) -> typing.Optional[typing_extensions.Literal["edge_availability_domain"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_encryption",b"_encryption"]) -> typing.Optional[typing_extensions.Literal["encryption"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_google_reference_id",b"_google_reference_id"]) -> typing.Optional[typing_extensions.Literal["google_reference_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_interconnect",b"_interconnect"]) -> typing.Optional[typing_extensions.Literal["interconnect"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mtu",b"_mtu"]) -> typing.Optional[typing_extensions.Literal["mtu"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_operational_status",b"_operational_status"]) -> typing.Optional[typing_extensions.Literal["operational_status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pairing_key",b"_pairing_key"]) -> typing.Optional[typing_extensions.Literal["pairing_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partner_asn",b"_partner_asn"]) -> typing.Optional[typing_extensions.Literal["partner_asn"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partner_metadata",b"_partner_metadata"]) -> typing.Optional[typing_extensions.Literal["partner_metadata"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_private_interconnect_info",b"_private_interconnect_info"]) -> typing.Optional[typing_extensions.Literal["private_interconnect_info"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_router",b"_router"]) -> typing.Optional[typing_extensions.Literal["router"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_satisfies_pzs",b"_satisfies_pzs"]) -> typing.Optional[typing_extensions.Literal["satisfies_pzs"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_vlan_tag8021q",b"_vlan_tag8021q"]) -> typing.Optional[typing_extensions.Literal["vlan_tag8021q"]]: ...
global___InterconnectAttachment = InterconnectAttachment

class InterconnectAttachmentAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___InterconnectAttachmentsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___InterconnectAttachmentsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___InterconnectAttachmentsScopedList]:
        """A list of InterconnectAttachmentsScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#interconnectAttachmentAggregatedList for aggregated lists of interconnect attachments."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___InterconnectAttachmentsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InterconnectAttachmentAggregatedList = InterconnectAttachmentAggregatedList

class InterconnectAttachmentList(google.protobuf.message.Message):
    """Response to the list request, and contains a list of interconnect attachments."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InterconnectAttachment]:
        """A list of InterconnectAttachment resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#interconnectAttachmentList for lists of interconnect attachments."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___InterconnectAttachment]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InterconnectAttachmentList = InterconnectAttachmentList

class InterconnectAttachmentPartnerMetadata(google.protobuf.message.Message):
    """Informational metadata about Partner attachments from Partners to display to customers. These fields are propagated from PARTNER_PROVIDER attachments to their corresponding PARTNER attachments."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_NAME_FIELD_NUMBER: builtins.int
    PARTNER_NAME_FIELD_NUMBER: builtins.int
    PORTAL_URL_FIELD_NUMBER: builtins.int
    interconnect_name: typing.Text = ...
    """Plain text name of the Interconnect this attachment is connected to, as displayed in the Partner's portal. For instance "Chicago 1". This value may be validated to match approved Partner values."""

    partner_name: typing.Text = ...
    """Plain text name of the Partner providing this attachment. This value may be validated to match approved Partner values."""

    portal_url: typing.Text = ...
    """URL of the Partner's portal for this Attachment. Partners may customise this to be a deep link to the specific resource on the Partner portal. This value may be validated to match approved Partner values."""

    def __init__(self,
        *,
        interconnect_name : typing.Optional[typing.Text] = ...,
        partner_name : typing.Optional[typing.Text] = ...,
        portal_url : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_interconnect_name",b"_interconnect_name","_partner_name",b"_partner_name","_portal_url",b"_portal_url","interconnect_name",b"interconnect_name","partner_name",b"partner_name","portal_url",b"portal_url"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_interconnect_name",b"_interconnect_name","_partner_name",b"_partner_name","_portal_url",b"_portal_url","interconnect_name",b"interconnect_name","partner_name",b"partner_name","portal_url",b"portal_url"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_interconnect_name",b"_interconnect_name"]) -> typing.Optional[typing_extensions.Literal["interconnect_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_partner_name",b"_partner_name"]) -> typing.Optional[typing_extensions.Literal["partner_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_portal_url",b"_portal_url"]) -> typing.Optional[typing_extensions.Literal["portal_url"]]: ...
global___InterconnectAttachmentPartnerMetadata = InterconnectAttachmentPartnerMetadata

class InterconnectAttachmentPrivateInfo(google.protobuf.message.Message):
    """Information for an interconnect attachment when this belongs to an interconnect of type DEDICATED."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TAG8021Q_FIELD_NUMBER: builtins.int
    tag8021q: builtins.int = ...
    """[Output Only] 802.1q encapsulation tag to be used for traffic between Google and the customer, going to and from this network and region."""

    def __init__(self,
        *,
        tag8021q : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_tag8021q",b"_tag8021q","tag8021q",b"tag8021q"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_tag8021q",b"_tag8021q","tag8021q",b"tag8021q"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tag8021q",b"_tag8021q"]) -> typing.Optional[typing_extensions.Literal["tag8021q"]]: ...
global___InterconnectAttachmentPrivateInfo = InterconnectAttachmentPrivateInfo

class InterconnectAttachmentsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_ATTACHMENTS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def interconnect_attachments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InterconnectAttachment]:
        """A list of interconnect attachments contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of addresses when the list is empty."""
        pass
    def __init__(self,
        *,
        interconnect_attachments : typing.Optional[typing.Iterable[global___InterconnectAttachment]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","interconnect_attachments",b"interconnect_attachments","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InterconnectAttachmentsScopedList = InterconnectAttachmentsScopedList

class InterconnectCircuitInfo(google.protobuf.message.Message):
    """Describes a single physical circuit between the Customer and Google. CircuitInfo objects are created by Google, so all fields are output only."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CUSTOMER_DEMARC_ID_FIELD_NUMBER: builtins.int
    GOOGLE_CIRCUIT_ID_FIELD_NUMBER: builtins.int
    GOOGLE_DEMARC_ID_FIELD_NUMBER: builtins.int
    customer_demarc_id: typing.Text = ...
    """Customer-side demarc ID for this circuit."""

    google_circuit_id: typing.Text = ...
    """Google-assigned unique ID for this circuit. Assigned at circuit turn-up."""

    google_demarc_id: typing.Text = ...
    """Google-side demarc ID for this circuit. Assigned at circuit turn-up and provided by Google to the customer in the LOA."""

    def __init__(self,
        *,
        customer_demarc_id : typing.Optional[typing.Text] = ...,
        google_circuit_id : typing.Optional[typing.Text] = ...,
        google_demarc_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_customer_demarc_id",b"_customer_demarc_id","_google_circuit_id",b"_google_circuit_id","_google_demarc_id",b"_google_demarc_id","customer_demarc_id",b"customer_demarc_id","google_circuit_id",b"google_circuit_id","google_demarc_id",b"google_demarc_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_customer_demarc_id",b"_customer_demarc_id","_google_circuit_id",b"_google_circuit_id","_google_demarc_id",b"_google_demarc_id","customer_demarc_id",b"customer_demarc_id","google_circuit_id",b"google_circuit_id","google_demarc_id",b"google_demarc_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_customer_demarc_id",b"_customer_demarc_id"]) -> typing.Optional[typing_extensions.Literal["customer_demarc_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_google_circuit_id",b"_google_circuit_id"]) -> typing.Optional[typing_extensions.Literal["google_circuit_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_google_demarc_id",b"_google_demarc_id"]) -> typing.Optional[typing_extensions.Literal["google_demarc_id"]]: ...
global___InterconnectCircuitInfo = InterconnectCircuitInfo

class InterconnectDiagnostics(google.protobuf.message.Message):
    """Diagnostics information about interconnect, contains detailed and current technical information about Google's side of the connection."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ARP_CACHES_FIELD_NUMBER: builtins.int
    LINKS_FIELD_NUMBER: builtins.int
    MAC_ADDRESS_FIELD_NUMBER: builtins.int
    @property
    def arp_caches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InterconnectDiagnosticsARPEntry]:
        """A list of InterconnectDiagnostics.ARPEntry objects, describing individual neighbors currently seen by the Google router in the ARP cache for the Interconnect. This will be empty when the Interconnect is not bundled."""
        pass
    @property
    def links(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InterconnectDiagnosticsLinkStatus]:
        """A list of InterconnectDiagnostics.LinkStatus objects, describing the status for each link on the Interconnect."""
        pass
    mac_address: typing.Text = ...
    """The MAC address of the Interconnect's bundle interface."""

    def __init__(self,
        *,
        arp_caches : typing.Optional[typing.Iterable[global___InterconnectDiagnosticsARPEntry]] = ...,
        links : typing.Optional[typing.Iterable[global___InterconnectDiagnosticsLinkStatus]] = ...,
        mac_address : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_mac_address",b"_mac_address","mac_address",b"mac_address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_mac_address",b"_mac_address","arp_caches",b"arp_caches","links",b"links","mac_address",b"mac_address"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mac_address",b"_mac_address"]) -> typing.Optional[typing_extensions.Literal["mac_address"]]: ...
global___InterconnectDiagnostics = InterconnectDiagnostics

class InterconnectDiagnosticsARPEntry(google.protobuf.message.Message):
    """Describing the ARP neighbor entries seen on this link"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    MAC_ADDRESS_FIELD_NUMBER: builtins.int
    ip_address: typing.Text = ...
    """The IP address of this ARP neighbor."""

    mac_address: typing.Text = ...
    """The MAC address of this ARP neighbor."""

    def __init__(self,
        *,
        ip_address : typing.Optional[typing.Text] = ...,
        mac_address : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ip_address",b"_ip_address","_mac_address",b"_mac_address","ip_address",b"ip_address","mac_address",b"mac_address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ip_address",b"_ip_address","_mac_address",b"_mac_address","ip_address",b"ip_address","mac_address",b"mac_address"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_address",b"_ip_address"]) -> typing.Optional[typing_extensions.Literal["ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mac_address",b"_mac_address"]) -> typing.Optional[typing_extensions.Literal["mac_address"]]: ...
global___InterconnectDiagnosticsARPEntry = InterconnectDiagnosticsARPEntry

class InterconnectDiagnosticsLinkLACPStatus(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: InterconnectDiagnosticsLinkLACPStatus.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: InterconnectDiagnosticsLinkLACPStatus.State.ValueType = ...  # 314733318
        """The link is configured and active within the bundle."""

        DETACHED: InterconnectDiagnosticsLinkLACPStatus.State.ValueType = ...  # 216562546
        """The link is not configured within the bundle, this means the rest of the object should be empty."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The state of a LACP link, which can take one of the following values: - ACTIVE: The link is configured and active within the bundle. - DETACHED: The link is not configured within the bundle. This means that the rest of the object should be empty."""
        pass

    UNDEFINED_STATE: InterconnectDiagnosticsLinkLACPStatus.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: InterconnectDiagnosticsLinkLACPStatus.State.ValueType = ...  # 314733318
    """The link is configured and active within the bundle."""

    DETACHED: InterconnectDiagnosticsLinkLACPStatus.State.ValueType = ...  # 216562546
    """The link is not configured within the bundle, this means the rest of the object should be empty."""


    GOOGLE_SYSTEM_ID_FIELD_NUMBER: builtins.int
    NEIGHBOR_SYSTEM_ID_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    google_system_id: typing.Text = ...
    """System ID of the port on Google's side of the LACP exchange."""

    neighbor_system_id: typing.Text = ...
    """System ID of the port on the neighbor's side of the LACP exchange."""

    state: typing.Text = ...
    """The state of a LACP link, which can take one of the following values: - ACTIVE: The link is configured and active within the bundle. - DETACHED: The link is not configured within the bundle. This means that the rest of the object should be empty.
    Check the State enum for the list of possible values.
    """

    def __init__(self,
        *,
        google_system_id : typing.Optional[typing.Text] = ...,
        neighbor_system_id : typing.Optional[typing.Text] = ...,
        state : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_google_system_id",b"_google_system_id","_neighbor_system_id",b"_neighbor_system_id","_state",b"_state","google_system_id",b"google_system_id","neighbor_system_id",b"neighbor_system_id","state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_google_system_id",b"_google_system_id","_neighbor_system_id",b"_neighbor_system_id","_state",b"_state","google_system_id",b"google_system_id","neighbor_system_id",b"neighbor_system_id","state",b"state"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_google_system_id",b"_google_system_id"]) -> typing.Optional[typing_extensions.Literal["google_system_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_neighbor_system_id",b"_neighbor_system_id"]) -> typing.Optional[typing_extensions.Literal["neighbor_system_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
global___InterconnectDiagnosticsLinkLACPStatus = InterconnectDiagnosticsLinkLACPStatus

class InterconnectDiagnosticsLinkOpticalPower(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        HIGH_ALARM: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 305363284
        """The value has crossed above the high alarm threshold."""

        HIGH_WARNING: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 220984799
        """The value of the current optical power has crossed above the high warning threshold."""

        LOW_ALARM: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 316659046
        """The value of the current optical power has crossed below the low alarm threshold."""

        LOW_WARNING: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 338793841
        """The value of the current optical power has crossed below the low warning threshold."""

        OK: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 2524
        """The value of the current optical power has not crossed a warning threshold."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """The status of the current value when compared to the warning and alarm levels for the receiving or transmitting transceiver. Possible states include: - OK: The value has not crossed a warning threshold. - LOW_WARNING: The value has crossed below the low warning threshold. - HIGH_WARNING: The value has crossed above the high warning threshold. - LOW_ALARM: The value has crossed below the low alarm threshold. - HIGH_ALARM: The value has crossed above the high alarm threshold."""
        pass

    UNDEFINED_STATE: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    HIGH_ALARM: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 305363284
    """The value has crossed above the high alarm threshold."""

    HIGH_WARNING: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 220984799
    """The value of the current optical power has crossed above the high warning threshold."""

    LOW_ALARM: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 316659046
    """The value of the current optical power has crossed below the low alarm threshold."""

    LOW_WARNING: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 338793841
    """The value of the current optical power has crossed below the low warning threshold."""

    OK: InterconnectDiagnosticsLinkOpticalPower.State.ValueType = ...  # 2524
    """The value of the current optical power has not crossed a warning threshold."""


    STATE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    state: typing.Text = ...
    """The status of the current value when compared to the warning and alarm levels for the receiving or transmitting transceiver. Possible states include: - OK: The value has not crossed a warning threshold. - LOW_WARNING: The value has crossed below the low warning threshold. - HIGH_WARNING: The value has crossed above the high warning threshold. - LOW_ALARM: The value has crossed below the low alarm threshold. - HIGH_ALARM: The value has crossed above the high alarm threshold.
    Check the State enum for the list of possible values.
    """

    value: builtins.float = ...
    """Value of the current receiving or transmitting optical power, read in dBm. Take a known good optical value, give it a 10% margin and trigger warnings relative to that value. In general, a -7dBm warning and a -11dBm alarm are good optical value estimates for most links."""

    def __init__(self,
        *,
        state : typing.Optional[typing.Text] = ...,
        value : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_state",b"_state","_value",b"_value","state",b"state","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_state",b"_state","_value",b"_value","state",b"state","value",b"value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value",b"_value"]) -> typing.Optional[typing_extensions.Literal["value"]]: ...
global___InterconnectDiagnosticsLinkOpticalPower = InterconnectDiagnosticsLinkOpticalPower

class InterconnectDiagnosticsLinkStatus(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ARP_CACHES_FIELD_NUMBER: builtins.int
    CIRCUIT_ID_FIELD_NUMBER: builtins.int
    GOOGLE_DEMARC_FIELD_NUMBER: builtins.int
    LACP_STATUS_FIELD_NUMBER: builtins.int
    RECEIVING_OPTICAL_POWER_FIELD_NUMBER: builtins.int
    TRANSMITTING_OPTICAL_POWER_FIELD_NUMBER: builtins.int
    @property
    def arp_caches(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InterconnectDiagnosticsARPEntry]:
        """A list of InterconnectDiagnostics.ARPEntry objects, describing the ARP neighbor entries seen on this link. This will be empty if the link is bundled"""
        pass
    circuit_id: typing.Text = ...
    """The unique ID for this link assigned during turn up by Google."""

    google_demarc: typing.Text = ...
    """The Demarc address assigned by Google and provided in the LoA."""

    @property
    def lacp_status(self) -> global___InterconnectDiagnosticsLinkLACPStatus: ...
    @property
    def receiving_optical_power(self) -> global___InterconnectDiagnosticsLinkOpticalPower:
        """An InterconnectDiagnostics.LinkOpticalPower object, describing the current value and status of the received light level."""
        pass
    @property
    def transmitting_optical_power(self) -> global___InterconnectDiagnosticsLinkOpticalPower:
        """An InterconnectDiagnostics.LinkOpticalPower object, describing the current value and status of the transmitted light level."""
        pass
    def __init__(self,
        *,
        arp_caches : typing.Optional[typing.Iterable[global___InterconnectDiagnosticsARPEntry]] = ...,
        circuit_id : typing.Optional[typing.Text] = ...,
        google_demarc : typing.Optional[typing.Text] = ...,
        lacp_status : typing.Optional[global___InterconnectDiagnosticsLinkLACPStatus] = ...,
        receiving_optical_power : typing.Optional[global___InterconnectDiagnosticsLinkOpticalPower] = ...,
        transmitting_optical_power : typing.Optional[global___InterconnectDiagnosticsLinkOpticalPower] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_circuit_id",b"_circuit_id","_google_demarc",b"_google_demarc","_lacp_status",b"_lacp_status","_receiving_optical_power",b"_receiving_optical_power","_transmitting_optical_power",b"_transmitting_optical_power","circuit_id",b"circuit_id","google_demarc",b"google_demarc","lacp_status",b"lacp_status","receiving_optical_power",b"receiving_optical_power","transmitting_optical_power",b"transmitting_optical_power"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_circuit_id",b"_circuit_id","_google_demarc",b"_google_demarc","_lacp_status",b"_lacp_status","_receiving_optical_power",b"_receiving_optical_power","_transmitting_optical_power",b"_transmitting_optical_power","arp_caches",b"arp_caches","circuit_id",b"circuit_id","google_demarc",b"google_demarc","lacp_status",b"lacp_status","receiving_optical_power",b"receiving_optical_power","transmitting_optical_power",b"transmitting_optical_power"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_circuit_id",b"_circuit_id"]) -> typing.Optional[typing_extensions.Literal["circuit_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_google_demarc",b"_google_demarc"]) -> typing.Optional[typing_extensions.Literal["google_demarc"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_lacp_status",b"_lacp_status"]) -> typing.Optional[typing_extensions.Literal["lacp_status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_receiving_optical_power",b"_receiving_optical_power"]) -> typing.Optional[typing_extensions.Literal["receiving_optical_power"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_transmitting_optical_power",b"_transmitting_optical_power"]) -> typing.Optional[typing_extensions.Literal["transmitting_optical_power"]]: ...
global___InterconnectDiagnosticsLinkStatus = InterconnectDiagnosticsLinkStatus

class InterconnectList(google.protobuf.message.Message):
    """Response to the list request, and contains a list of interconnects."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Interconnect]:
        """A list of Interconnect resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#interconnectList for lists of interconnects."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Interconnect]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InterconnectList = InterconnectList

class InterconnectLocation(google.protobuf.message.Message):
    """Represents an Interconnect Attachment (VLAN) Location resource. You can use this resource to find location details about an Interconnect attachment (VLAN). For more information about interconnect attachments, read Creating VLAN Attachments."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Continent:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ContinentEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Continent.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CONTINENT: InterconnectLocation.Continent.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        AFRICA: InterconnectLocation.Continent.ValueType = ...  # 317443706
        ASIA_PAC: InterconnectLocation.Continent.ValueType = ...  # 119782269
        C_AFRICA: InterconnectLocation.Continent.ValueType = ...  # 71993846
        C_ASIA_PAC: InterconnectLocation.Continent.ValueType = ...  # 465668089
        C_EUROPE: InterconnectLocation.Continent.ValueType = ...  # 200369438
        C_NORTH_AMERICA: InterconnectLocation.Continent.ValueType = ...  # 275697048
        C_SOUTH_AMERICA: InterconnectLocation.Continent.ValueType = ...  # 397149792
        EUROPE: InterconnectLocation.Continent.ValueType = ...  # 445819298
        NORTH_AMERICA: InterconnectLocation.Continent.ValueType = ...  # 448015508
        SOUTH_AMERICA: InterconnectLocation.Continent.ValueType = ...  # 32597340
    class Continent(_Continent, metaclass=_ContinentEnumTypeWrapper):
        """[Output Only] Continent for this location, which can take one of the following values: - AFRICA - ASIA_PAC - EUROPE - NORTH_AMERICA - SOUTH_AMERICA"""
        pass

    UNDEFINED_CONTINENT: InterconnectLocation.Continent.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    AFRICA: InterconnectLocation.Continent.ValueType = ...  # 317443706
    ASIA_PAC: InterconnectLocation.Continent.ValueType = ...  # 119782269
    C_AFRICA: InterconnectLocation.Continent.ValueType = ...  # 71993846
    C_ASIA_PAC: InterconnectLocation.Continent.ValueType = ...  # 465668089
    C_EUROPE: InterconnectLocation.Continent.ValueType = ...  # 200369438
    C_NORTH_AMERICA: InterconnectLocation.Continent.ValueType = ...  # 275697048
    C_SOUTH_AMERICA: InterconnectLocation.Continent.ValueType = ...  # 397149792
    EUROPE: InterconnectLocation.Continent.ValueType = ...  # 445819298
    NORTH_AMERICA: InterconnectLocation.Continent.ValueType = ...  # 448015508
    SOUTH_AMERICA: InterconnectLocation.Continent.ValueType = ...  # 32597340

    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: InterconnectLocation.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        AVAILABLE: InterconnectLocation.Status.ValueType = ...  # 442079913
        """The InterconnectLocation is available for provisioning new Interconnects."""

        CLOSED: InterconnectLocation.Status.ValueType = ...  # 380163436
        """The InterconnectLocation is closed for provisioning new Interconnects."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of this InterconnectLocation, which can take one of the following values: - CLOSED: The InterconnectLocation is closed and is unavailable for provisioning new Interconnects. - AVAILABLE: The InterconnectLocation is available for provisioning new Interconnects."""
        pass

    UNDEFINED_STATUS: InterconnectLocation.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    AVAILABLE: InterconnectLocation.Status.ValueType = ...  # 442079913
    """The InterconnectLocation is available for provisioning new Interconnects."""

    CLOSED: InterconnectLocation.Status.ValueType = ...  # 380163436
    """The InterconnectLocation is closed for provisioning new Interconnects."""


    ADDRESS_FIELD_NUMBER: builtins.int
    AVAILABILITY_ZONE_FIELD_NUMBER: builtins.int
    CITY_FIELD_NUMBER: builtins.int
    CONTINENT_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FACILITY_PROVIDER_FIELD_NUMBER: builtins.int
    FACILITY_PROVIDER_FACILITY_ID_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PEERINGDB_FACILITY_ID_FIELD_NUMBER: builtins.int
    REGION_INFOS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    SUPPORTS_PZS_FIELD_NUMBER: builtins.int
    address: typing.Text = ...
    """[Output Only] The postal address of the Point of Presence, each line in the address is separated by a newline character."""

    availability_zone: typing.Text = ...
    """[Output Only] Availability zone for this InterconnectLocation. Within a metropolitan area (metro), maintenance will not be simultaneously scheduled in more than one availability zone. Example: "zone1" or "zone2"."""

    city: typing.Text = ...
    """[Output Only] Metropolitan area designator that indicates which city an interconnect is located. For example: "Chicago, IL", "Amsterdam, Netherlands"."""

    continent: typing.Text = ...
    """[Output Only] Continent for this location, which can take one of the following values: - AFRICA - ASIA_PAC - EUROPE - NORTH_AMERICA - SOUTH_AMERICA
    Check the Continent enum for the list of possible values.
    """

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """[Output Only] An optional description of the resource."""

    facility_provider: typing.Text = ...
    """[Output Only] The name of the provider for this facility (e.g., EQUINIX)."""

    facility_provider_facility_id: typing.Text = ...
    """[Output Only] A provider-assigned Identifier for this facility (e.g., Ashburn-DC1)."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#interconnectLocation for interconnect locations."""

    name: typing.Text = ...
    """[Output Only] Name of the resource."""

    peeringdb_facility_id: typing.Text = ...
    """[Output Only] The peeringdb identifier for this facility (corresponding with a netfac type in peeringdb)."""

    @property
    def region_infos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InterconnectLocationRegionInfo]:
        """[Output Only] A list of InterconnectLocation.RegionInfo objects, that describe parameters pertaining to the relation between this InterconnectLocation and various Google Cloud regions."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    status: typing.Text = ...
    """[Output Only] The status of this InterconnectLocation, which can take one of the following values: - CLOSED: The InterconnectLocation is closed and is unavailable for provisioning new Interconnects. - AVAILABLE: The InterconnectLocation is available for provisioning new Interconnects.
    Check the Status enum for the list of possible values.
    """

    supports_pzs: builtins.bool = ...
    """[Output Only] Set to true for locations that support physical zone separation. Defaults to false if the field is not present."""

    def __init__(self,
        *,
        address : typing.Optional[typing.Text] = ...,
        availability_zone : typing.Optional[typing.Text] = ...,
        city : typing.Optional[typing.Text] = ...,
        continent : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        facility_provider : typing.Optional[typing.Text] = ...,
        facility_provider_facility_id : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        peeringdb_facility_id : typing.Optional[typing.Text] = ...,
        region_infos : typing.Optional[typing.Iterable[global___InterconnectLocationRegionInfo]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        supports_pzs : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_address",b"_address","_availability_zone",b"_availability_zone","_city",b"_city","_continent",b"_continent","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_facility_provider",b"_facility_provider","_facility_provider_facility_id",b"_facility_provider_facility_id","_id",b"_id","_kind",b"_kind","_name",b"_name","_peeringdb_facility_id",b"_peeringdb_facility_id","_self_link",b"_self_link","_status",b"_status","_supports_pzs",b"_supports_pzs","address",b"address","availability_zone",b"availability_zone","city",b"city","continent",b"continent","creation_timestamp",b"creation_timestamp","description",b"description","facility_provider",b"facility_provider","facility_provider_facility_id",b"facility_provider_facility_id","id",b"id","kind",b"kind","name",b"name","peeringdb_facility_id",b"peeringdb_facility_id","self_link",b"self_link","status",b"status","supports_pzs",b"supports_pzs"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_address",b"_address","_availability_zone",b"_availability_zone","_city",b"_city","_continent",b"_continent","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_facility_provider",b"_facility_provider","_facility_provider_facility_id",b"_facility_provider_facility_id","_id",b"_id","_kind",b"_kind","_name",b"_name","_peeringdb_facility_id",b"_peeringdb_facility_id","_self_link",b"_self_link","_status",b"_status","_supports_pzs",b"_supports_pzs","address",b"address","availability_zone",b"availability_zone","city",b"city","continent",b"continent","creation_timestamp",b"creation_timestamp","description",b"description","facility_provider",b"facility_provider","facility_provider_facility_id",b"facility_provider_facility_id","id",b"id","kind",b"kind","name",b"name","peeringdb_facility_id",b"peeringdb_facility_id","region_infos",b"region_infos","self_link",b"self_link","status",b"status","supports_pzs",b"supports_pzs"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_address",b"_address"]) -> typing.Optional[typing_extensions.Literal["address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_availability_zone",b"_availability_zone"]) -> typing.Optional[typing_extensions.Literal["availability_zone"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_city",b"_city"]) -> typing.Optional[typing_extensions.Literal["city"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_continent",b"_continent"]) -> typing.Optional[typing_extensions.Literal["continent"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_facility_provider",b"_facility_provider"]) -> typing.Optional[typing_extensions.Literal["facility_provider"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_facility_provider_facility_id",b"_facility_provider_facility_id"]) -> typing.Optional[typing_extensions.Literal["facility_provider_facility_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peeringdb_facility_id",b"_peeringdb_facility_id"]) -> typing.Optional[typing_extensions.Literal["peeringdb_facility_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_supports_pzs",b"_supports_pzs"]) -> typing.Optional[typing_extensions.Literal["supports_pzs"]]: ...
global___InterconnectLocation = InterconnectLocation

class InterconnectLocationList(google.protobuf.message.Message):
    """Response to the list request, and contains a list of interconnect locations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InterconnectLocation]:
        """A list of InterconnectLocation resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#interconnectLocationList for lists of interconnect locations."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___InterconnectLocation]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___InterconnectLocationList = InterconnectLocationList

class InterconnectLocationRegionInfo(google.protobuf.message.Message):
    """Information about any potential InterconnectAttachments between an Interconnect at a specific InterconnectLocation, and a specific Cloud Region."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _LocationPresence:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LocationPresenceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LocationPresence.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_LOCATION_PRESENCE: InterconnectLocationRegionInfo.LocationPresence.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        GLOBAL: InterconnectLocationRegionInfo.LocationPresence.ValueType = ...  # 494663587
        """This region is not in any common network presence with this InterconnectLocation."""

        LOCAL_REGION: InterconnectLocationRegionInfo.LocationPresence.ValueType = ...  # 403535464
        """This region shares the same regional network presence as this InterconnectLocation."""

        LP_GLOBAL: InterconnectLocationRegionInfo.LocationPresence.ValueType = ...  # 429584062
        """[Deprecated] This region is not in any common network presence with this InterconnectLocation."""

        LP_LOCAL_REGION: InterconnectLocationRegionInfo.LocationPresence.ValueType = ...  # 488598851
        """[Deprecated] This region shares the same regional network presence as this InterconnectLocation."""

    class LocationPresence(_LocationPresence, metaclass=_LocationPresenceEnumTypeWrapper):
        """Identifies the network presence of this location."""
        pass

    UNDEFINED_LOCATION_PRESENCE: InterconnectLocationRegionInfo.LocationPresence.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    GLOBAL: InterconnectLocationRegionInfo.LocationPresence.ValueType = ...  # 494663587
    """This region is not in any common network presence with this InterconnectLocation."""

    LOCAL_REGION: InterconnectLocationRegionInfo.LocationPresence.ValueType = ...  # 403535464
    """This region shares the same regional network presence as this InterconnectLocation."""

    LP_GLOBAL: InterconnectLocationRegionInfo.LocationPresence.ValueType = ...  # 429584062
    """[Deprecated] This region is not in any common network presence with this InterconnectLocation."""

    LP_LOCAL_REGION: InterconnectLocationRegionInfo.LocationPresence.ValueType = ...  # 488598851
    """[Deprecated] This region shares the same regional network presence as this InterconnectLocation."""


    EXPECTED_RTT_MS_FIELD_NUMBER: builtins.int
    LOCATION_PRESENCE_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    expected_rtt_ms: builtins.int = ...
    """Expected round-trip time in milliseconds, from this InterconnectLocation to a VM in this region."""

    location_presence: typing.Text = ...
    """Identifies the network presence of this location.
    Check the LocationPresence enum for the list of possible values.
    """

    region: typing.Text = ...
    """URL for the region of this location."""

    def __init__(self,
        *,
        expected_rtt_ms : typing.Optional[builtins.int] = ...,
        location_presence : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_expected_rtt_ms",b"_expected_rtt_ms","_location_presence",b"_location_presence","_region",b"_region","expected_rtt_ms",b"expected_rtt_ms","location_presence",b"location_presence","region",b"region"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_expected_rtt_ms",b"_expected_rtt_ms","_location_presence",b"_location_presence","_region",b"_region","expected_rtt_ms",b"expected_rtt_ms","location_presence",b"location_presence","region",b"region"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_expected_rtt_ms",b"_expected_rtt_ms"]) -> typing.Optional[typing_extensions.Literal["expected_rtt_ms"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_location_presence",b"_location_presence"]) -> typing.Optional[typing_extensions.Literal["location_presence"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
global___InterconnectLocationRegionInfo = InterconnectLocationRegionInfo

class InterconnectOutageNotification(google.protobuf.message.Message):
    """Description of a planned outage on this Interconnect."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _IssueType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _IssueTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IssueType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ISSUE_TYPE: InterconnectOutageNotification.IssueType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        IT_OUTAGE: InterconnectOutageNotification.IssueType.ValueType = ...  # 175779973
        """[Deprecated] The Interconnect may be completely out of service for some or all of the specified window."""

        IT_PARTIAL_OUTAGE: InterconnectOutageNotification.IssueType.ValueType = ...  # 92103971
        """[Deprecated] Some circuits comprising the Interconnect will be out of service during the expected window. The interconnect as a whole should remain up, albeit with reduced bandwidth."""

        OUTAGE: InterconnectOutageNotification.IssueType.ValueType = ...  # 195285745
        """The Interconnect may be completely out of service for some or all of the specified window."""

        PARTIAL_OUTAGE: InterconnectOutageNotification.IssueType.ValueType = ...  # 147053455
        """Some circuits comprising the Interconnect will be out of service during the expected window. The interconnect as a whole should remain up, albeit with reduced bandwidth."""

    class IssueType(_IssueType, metaclass=_IssueTypeEnumTypeWrapper):
        """Form this outage is expected to take, which can take one of the following values: - OUTAGE: The Interconnect may be completely out of service for some or all of the specified window. - PARTIAL_OUTAGE: Some circuits comprising the Interconnect as a whole should remain up, but with reduced bandwidth. Note that the versions of this enum prefixed with "IT_" have been deprecated in favor of the unprefixed values."""
        pass

    UNDEFINED_ISSUE_TYPE: InterconnectOutageNotification.IssueType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    IT_OUTAGE: InterconnectOutageNotification.IssueType.ValueType = ...  # 175779973
    """[Deprecated] The Interconnect may be completely out of service for some or all of the specified window."""

    IT_PARTIAL_OUTAGE: InterconnectOutageNotification.IssueType.ValueType = ...  # 92103971
    """[Deprecated] Some circuits comprising the Interconnect will be out of service during the expected window. The interconnect as a whole should remain up, albeit with reduced bandwidth."""

    OUTAGE: InterconnectOutageNotification.IssueType.ValueType = ...  # 195285745
    """The Interconnect may be completely out of service for some or all of the specified window."""

    PARTIAL_OUTAGE: InterconnectOutageNotification.IssueType.ValueType = ...  # 147053455
    """Some circuits comprising the Interconnect will be out of service during the expected window. The interconnect as a whole should remain up, albeit with reduced bandwidth."""


    class _Source:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SourceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Source.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_SOURCE: InterconnectOutageNotification.Source.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        GOOGLE: InterconnectOutageNotification.Source.ValueType = ...  # 497439289
        """This notification was generated by Google."""

        NSRC_GOOGLE: InterconnectOutageNotification.Source.ValueType = ...  # 510574562
        """[Deprecated] This notification was generated by Google."""

    class Source(_Source, metaclass=_SourceEnumTypeWrapper):
        """The party that generated this notification, which can take the following value: - GOOGLE: this notification as generated by Google. Note that the value of NSRC_GOOGLE has been deprecated in favor of GOOGLE."""
        pass

    UNDEFINED_SOURCE: InterconnectOutageNotification.Source.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    GOOGLE: InterconnectOutageNotification.Source.ValueType = ...  # 497439289
    """This notification was generated by Google."""

    NSRC_GOOGLE: InterconnectOutageNotification.Source.ValueType = ...  # 510574562
    """[Deprecated] This notification was generated by Google."""


    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: InterconnectOutageNotification.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: InterconnectOutageNotification.State.ValueType = ...  # 314733318
        """This outage notification is active. The event could be in the future, present, or past. See start_time and end_time for scheduling."""

        CANCELLED: InterconnectOutageNotification.State.ValueType = ...  # 41957681
        """The outage associated with this notification was cancelled before the outage was due to start."""

        COMPLETED: InterconnectOutageNotification.State.ValueType = ...  # 309921323
        """The outage associated with this notification is complete."""

        NS_ACTIVE: InterconnectOutageNotification.State.ValueType = ...  # 252563136
        """[Deprecated] This outage notification is active. The event could be in the future, present, or past. See start_time and end_time for scheduling."""

        NS_CANCELED: InterconnectOutageNotification.State.ValueType = ...  # 506579411
        """[Deprecated] The outage associated with this notification was canceled before the outage was due to start."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """State of this notification, which can take one of the following values: - ACTIVE: This outage notification is active. The event could be in the past, present, or future. See start_time and end_time for scheduling. - CANCELLED: The outage associated with this notification was cancelled before the outage was due to start. - COMPLETED: The outage associated with this notification is complete. Note that the versions of this enum prefixed with "NS_" have been deprecated in favor of the unprefixed values."""
        pass

    UNDEFINED_STATE: InterconnectOutageNotification.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: InterconnectOutageNotification.State.ValueType = ...  # 314733318
    """This outage notification is active. The event could be in the future, present, or past. See start_time and end_time for scheduling."""

    CANCELLED: InterconnectOutageNotification.State.ValueType = ...  # 41957681
    """The outage associated with this notification was cancelled before the outage was due to start."""

    COMPLETED: InterconnectOutageNotification.State.ValueType = ...  # 309921323
    """The outage associated with this notification is complete."""

    NS_ACTIVE: InterconnectOutageNotification.State.ValueType = ...  # 252563136
    """[Deprecated] This outage notification is active. The event could be in the future, present, or past. See start_time and end_time for scheduling."""

    NS_CANCELED: InterconnectOutageNotification.State.ValueType = ...  # 506579411
    """[Deprecated] The outage associated with this notification was canceled before the outage was due to start."""


    AFFECTED_CIRCUITS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    ISSUE_TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    @property
    def affected_circuits(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """If issue_type is IT_PARTIAL_OUTAGE, a list of the Google-side circuit IDs that will be affected."""
        pass
    description: typing.Text = ...
    """A description about the purpose of the outage."""

    end_time: builtins.int = ...
    """Scheduled end time for the outage (milliseconds since Unix epoch)."""

    issue_type: typing.Text = ...
    """Form this outage is expected to take, which can take one of the following values: - OUTAGE: The Interconnect may be completely out of service for some or all of the specified window. - PARTIAL_OUTAGE: Some circuits comprising the Interconnect as a whole should remain up, but with reduced bandwidth. Note that the versions of this enum prefixed with "IT_" have been deprecated in favor of the unprefixed values.
    Check the IssueType enum for the list of possible values.
    """

    name: typing.Text = ...
    """Unique identifier for this outage notification."""

    source: typing.Text = ...
    """The party that generated this notification, which can take the following value: - GOOGLE: this notification as generated by Google. Note that the value of NSRC_GOOGLE has been deprecated in favor of GOOGLE.
    Check the Source enum for the list of possible values.
    """

    start_time: builtins.int = ...
    """Scheduled start time for the outage (milliseconds since Unix epoch)."""

    state: typing.Text = ...
    """State of this notification, which can take one of the following values: - ACTIVE: This outage notification is active. The event could be in the past, present, or future. See start_time and end_time for scheduling. - CANCELLED: The outage associated with this notification was cancelled before the outage was due to start. - COMPLETED: The outage associated with this notification is complete. Note that the versions of this enum prefixed with "NS_" have been deprecated in favor of the unprefixed values.
    Check the State enum for the list of possible values.
    """

    def __init__(self,
        *,
        affected_circuits : typing.Optional[typing.Iterable[typing.Text]] = ...,
        description : typing.Optional[typing.Text] = ...,
        end_time : typing.Optional[builtins.int] = ...,
        issue_type : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        source : typing.Optional[typing.Text] = ...,
        start_time : typing.Optional[builtins.int] = ...,
        state : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_end_time",b"_end_time","_issue_type",b"_issue_type","_name",b"_name","_source",b"_source","_start_time",b"_start_time","_state",b"_state","description",b"description","end_time",b"end_time","issue_type",b"issue_type","name",b"name","source",b"source","start_time",b"start_time","state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_end_time",b"_end_time","_issue_type",b"_issue_type","_name",b"_name","_source",b"_source","_start_time",b"_start_time","_state",b"_state","affected_circuits",b"affected_circuits","description",b"description","end_time",b"end_time","issue_type",b"issue_type","name",b"name","source",b"source","start_time",b"start_time","state",b"state"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_end_time",b"_end_time"]) -> typing.Optional[typing_extensions.Literal["end_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_issue_type",b"_issue_type"]) -> typing.Optional[typing_extensions.Literal["issue_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source",b"_source"]) -> typing.Optional[typing_extensions.Literal["source"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_time",b"_start_time"]) -> typing.Optional[typing_extensions.Literal["start_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
global___InterconnectOutageNotification = InterconnectOutageNotification

class InterconnectsGetDiagnosticsResponse(google.protobuf.message.Message):
    """Response for the InterconnectsGetDiagnosticsRequest."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULT_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> global___InterconnectDiagnostics: ...
    def __init__(self,
        *,
        result : typing.Optional[global___InterconnectDiagnostics] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_result",b"_result","result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_result",b"_result","result",b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_result",b"_result"]) -> typing.Optional[typing_extensions.Literal["result"]]: ...
global___InterconnectsGetDiagnosticsResponse = InterconnectsGetDiagnosticsResponse

class InvalidateCacheUrlMapRequest(google.protobuf.message.Message):
    """A request message for UrlMaps.InvalidateCache. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CACHE_INVALIDATION_RULE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    @property
    def cache_invalidation_rule_resource(self) -> global___CacheInvalidationRule:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    url_map: typing.Text = ...
    """Name of the UrlMap scoping this request."""

    def __init__(self,
        *,
        cache_invalidation_rule_resource : typing.Optional[global___CacheInvalidationRule] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        url_map : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","cache_invalidation_rule_resource",b"cache_invalidation_rule_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","cache_invalidation_rule_resource",b"cache_invalidation_rule_resource","project",b"project","request_id",b"request_id","url_map",b"url_map"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___InvalidateCacheUrlMapRequest = InvalidateCacheUrlMapRequest

class Items(google.protobuf.message.Message):
    """Metadata"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project."""

    value: typing.Text = ...
    """Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 262144 bytes (256 KiB)."""

    def __init__(self,
        *,
        key : typing.Optional[typing.Text] = ...,
        value : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_key",b"_key","_value",b"_value","key",b"key","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_key",b"_key","_value",b"_value","key",b"key","value",b"value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_key",b"_key"]) -> typing.Optional[typing_extensions.Literal["key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value",b"_value"]) -> typing.Optional[typing_extensions.Literal["value"]]: ...
global___Items = Items

class License(google.protobuf.message.Message):
    """Represents a License resource. A License represents billing and aggregate usage data for public and marketplace images. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CHARGES_USE_FEE_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LICENSE_CODE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    RESOURCE_REQUIREMENTS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    TRANSFERABLE_FIELD_NUMBER: builtins.int
    charges_use_fee: builtins.bool = ...
    """[Output Only] Deprecated. This field no longer reflects whether a license charges a usage fee."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional textual description of the resource; provided by the client when the resource is created."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#license for licenses."""

    license_code: builtins.int = ...
    """[Output Only] The unique code used to attach this license to images, snapshots, and disks."""

    name: typing.Text = ...
    """Name of the resource. The name must be 1-63 characters long and comply with RFC1035."""

    @property
    def resource_requirements(self) -> global___LicenseResourceRequirements: ...
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    transferable: builtins.bool = ...
    """If false, licenses will not be copied from the source resource when creating an image from a disk, disk from snapshot, or snapshot from disk."""

    def __init__(self,
        *,
        charges_use_fee : typing.Optional[builtins.bool] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        license_code : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        resource_requirements : typing.Optional[global___LicenseResourceRequirements] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        transferable : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_charges_use_fee",b"_charges_use_fee","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_license_code",b"_license_code","_name",b"_name","_resource_requirements",b"_resource_requirements","_self_link",b"_self_link","_transferable",b"_transferable","charges_use_fee",b"charges_use_fee","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","license_code",b"license_code","name",b"name","resource_requirements",b"resource_requirements","self_link",b"self_link","transferable",b"transferable"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_charges_use_fee",b"_charges_use_fee","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_license_code",b"_license_code","_name",b"_name","_resource_requirements",b"_resource_requirements","_self_link",b"_self_link","_transferable",b"_transferable","charges_use_fee",b"charges_use_fee","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","license_code",b"license_code","name",b"name","resource_requirements",b"resource_requirements","self_link",b"self_link","transferable",b"transferable"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_charges_use_fee",b"_charges_use_fee"]) -> typing.Optional[typing_extensions.Literal["charges_use_fee"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_license_code",b"_license_code"]) -> typing.Optional[typing_extensions.Literal["license_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_resource_requirements",b"_resource_requirements"]) -> typing.Optional[typing_extensions.Literal["resource_requirements"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_transferable",b"_transferable"]) -> typing.Optional[typing_extensions.Literal["transferable"]]: ...
global___License = License

class LicenseCode(google.protobuf.message.Message):
    """Represents a License Code resource. A License Code is a unique identifier used to represent a license resource. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: LicenseCode.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DISABLED: LicenseCode.State.ValueType = ...  # 516696700
        """Machines are not allowed to attach boot disks with this License Code. Requests to create new resources with this license will be rejected."""

        ENABLED: LicenseCode.State.ValueType = ...  # 182130465
        """Use is allowed for anyone with USE_READ_ONLY access to this License Code."""

        RESTRICTED: LicenseCode.State.ValueType = ...  # 261551195
        """Use of this license is limited to a project whitelist."""

        STATE_UNSPECIFIED: LicenseCode.State.ValueType = ...  # 470755401
        TERMINATED: LicenseCode.State.ValueType = ...  # 250018339
        """Reserved state."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """[Output Only] Current state of this License Code."""
        pass

    UNDEFINED_STATE: LicenseCode.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DISABLED: LicenseCode.State.ValueType = ...  # 516696700
    """Machines are not allowed to attach boot disks with this License Code. Requests to create new resources with this license will be rejected."""

    ENABLED: LicenseCode.State.ValueType = ...  # 182130465
    """Use is allowed for anyone with USE_READ_ONLY access to this License Code."""

    RESTRICTED: LicenseCode.State.ValueType = ...  # 261551195
    """Use of this license is limited to a project whitelist."""

    STATE_UNSPECIFIED: LicenseCode.State.ValueType = ...  # 470755401
    TERMINATED: LicenseCode.State.ValueType = ...  # 250018339
    """Reserved state."""


    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LICENSE_ALIAS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    TRANSFERABLE_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """[Output Only] Description of this License Code."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#licenseCode for licenses."""

    @property
    def license_alias(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LicenseCodeLicenseAlias]:
        """[Output Only] URL and description aliases of Licenses with the same License Code."""
        pass
    name: typing.Text = ...
    """[Output Only] Name of the resource. The name is 1-20 characters long and must be a valid 64 bit integer."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    state: typing.Text = ...
    """[Output Only] Current state of this License Code.
    Check the State enum for the list of possible values.
    """

    transferable: builtins.bool = ...
    """[Output Only] If true, the license will remain attached when creating images or snapshots from disks. Otherwise, the license is not transferred."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        license_alias : typing.Optional[typing.Iterable[global___LicenseCodeLicenseAlias]] = ...,
        name : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        state : typing.Optional[typing.Text] = ...,
        transferable : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","_state",b"_state","_transferable",b"_transferable","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","self_link",b"self_link","state",b"state","transferable",b"transferable"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","_state",b"_state","_transferable",b"_transferable","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","license_alias",b"license_alias","name",b"name","self_link",b"self_link","state",b"state","transferable",b"transferable"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_transferable",b"_transferable"]) -> typing.Optional[typing_extensions.Literal["transferable"]]: ...
global___LicenseCode = LicenseCode

class LicenseCodeLicenseAlias(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESCRIPTION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    description: typing.Text = ...
    """[Output Only] Description of this License Code."""

    self_link: typing.Text = ...
    """[Output Only] URL of license corresponding to this License Code."""

    def __init__(self,
        *,
        description : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_self_link",b"_self_link","description",b"description","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_self_link",b"_self_link","description",b"description","self_link",b"self_link"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___LicenseCodeLicenseAlias = LicenseCodeLicenseAlias

class LicenseResourceCommitment(google.protobuf.message.Message):
    """Commitment for a particular license resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AMOUNT_FIELD_NUMBER: builtins.int
    CORES_PER_LICENSE_FIELD_NUMBER: builtins.int
    LICENSE_FIELD_NUMBER: builtins.int
    amount: builtins.int = ...
    """The number of licenses purchased."""

    cores_per_license: typing.Text = ...
    """Specifies the core range of the instance for which this license applies."""

    license: typing.Text = ...
    """Any applicable license URI."""

    def __init__(self,
        *,
        amount : typing.Optional[builtins.int] = ...,
        cores_per_license : typing.Optional[typing.Text] = ...,
        license : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_amount",b"_amount","_cores_per_license",b"_cores_per_license","_license",b"_license","amount",b"amount","cores_per_license",b"cores_per_license","license",b"license"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_amount",b"_amount","_cores_per_license",b"_cores_per_license","_license",b"_license","amount",b"amount","cores_per_license",b"cores_per_license","license",b"license"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_amount",b"_amount"]) -> typing.Optional[typing_extensions.Literal["amount"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cores_per_license",b"_cores_per_license"]) -> typing.Optional[typing_extensions.Literal["cores_per_license"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_license",b"_license"]) -> typing.Optional[typing_extensions.Literal["license"]]: ...
global___LicenseResourceCommitment = LicenseResourceCommitment

class LicenseResourceRequirements(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MIN_GUEST_CPU_COUNT_FIELD_NUMBER: builtins.int
    MIN_MEMORY_MB_FIELD_NUMBER: builtins.int
    min_guest_cpu_count: builtins.int = ...
    """Minimum number of guest cpus required to use the Instance. Enforced at Instance creation and Instance start."""

    min_memory_mb: builtins.int = ...
    """Minimum memory required to use the Instance. Enforced at Instance creation and Instance start."""

    def __init__(self,
        *,
        min_guest_cpu_count : typing.Optional[builtins.int] = ...,
        min_memory_mb : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_min_guest_cpu_count",b"_min_guest_cpu_count","_min_memory_mb",b"_min_memory_mb","min_guest_cpu_count",b"min_guest_cpu_count","min_memory_mb",b"min_memory_mb"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_min_guest_cpu_count",b"_min_guest_cpu_count","_min_memory_mb",b"_min_memory_mb","min_guest_cpu_count",b"min_guest_cpu_count","min_memory_mb",b"min_memory_mb"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_guest_cpu_count",b"_min_guest_cpu_count"]) -> typing.Optional[typing_extensions.Literal["min_guest_cpu_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_memory_mb",b"_min_memory_mb"]) -> typing.Optional[typing_extensions.Literal["min_memory_mb"]]: ...
global___LicenseResourceRequirements = LicenseResourceRequirements

class LicensesListResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___License]:
        """A list of License resources."""
        pass
    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___License]] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___LicensesListResponse = LicensesListResponse

class ListAcceleratorTypesRequest(google.protobuf.message.Message):
    """A request message for AcceleratorTypes.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListAcceleratorTypesRequest = ListAcceleratorTypesRequest

class ListAddressesRequest(google.protobuf.message.Message):
    """A request message for Addresses.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListAddressesRequest = ListAddressesRequest

class ListAssociationsFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.ListAssociations. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_RESOURCE_FIELD_NUMBER: builtins.int
    target_resource: typing.Text = ...
    """The target resource to list associations. It is an organization, or a folder."""

    def __init__(self,
        *,
        target_resource : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_target_resource",b"_target_resource","target_resource",b"target_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_target_resource",b"_target_resource","target_resource",b"target_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_resource",b"_target_resource"]) -> typing.Optional[typing_extensions.Literal["target_resource"]]: ...
global___ListAssociationsFirewallPolicyRequest = ListAssociationsFirewallPolicyRequest

class ListAutoscalersRequest(google.protobuf.message.Message):
    """A request message for Autoscalers.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListAutoscalersRequest = ListAutoscalersRequest

class ListAvailableFeaturesSslPoliciesRequest(google.protobuf.message.Message):
    """A request message for SslPolicies.ListAvailableFeatures. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListAvailableFeaturesSslPoliciesRequest = ListAvailableFeaturesSslPoliciesRequest

class ListBackendBucketsRequest(google.protobuf.message.Message):
    """A request message for BackendBuckets.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListBackendBucketsRequest = ListBackendBucketsRequest

class ListBackendServicesRequest(google.protobuf.message.Message):
    """A request message for BackendServices.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListBackendServicesRequest = ListBackendServicesRequest

class ListDiskTypesRequest(google.protobuf.message.Message):
    """A request message for DiskTypes.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListDiskTypesRequest = ListDiskTypesRequest

class ListDisksRequest(google.protobuf.message.Message):
    """A request message for Disks.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListDisksRequest = ListDisksRequest

class ListErrorsInstanceGroupManagersRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.ListErrors. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It must be a string that meets the requirements in RFC1035, or an unsigned long integer: must match regexp pattern: (?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)|1-9{0,19}."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located. It should conform to RFC1035."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        instance_group_manager : typing.Text = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","instance_group_manager",b"instance_group_manager","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListErrorsInstanceGroupManagersRequest = ListErrorsInstanceGroupManagersRequest

class ListErrorsRegionInstanceGroupManagersRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.ListErrors. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It must be a string that meets the requirements in RFC1035, or an unsigned long integer: must match regexp pattern: (?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)|1-9{0,19}."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request. This should conform to RFC1035."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        instance_group_manager : typing.Text = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","instance_group_manager",b"instance_group_manager","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListErrorsRegionInstanceGroupManagersRequest = ListErrorsRegionInstanceGroupManagersRequest

class ListExternalVpnGatewaysRequest(google.protobuf.message.Message):
    """A request message for ExternalVpnGateways.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListExternalVpnGatewaysRequest = ListExternalVpnGatewaysRequest

class ListFirewallPoliciesRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PARENT_ID_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    parent_id: typing.Text = ...
    """Parent ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        parent_id : typing.Optional[typing.Text] = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_parent_id",b"_parent_id","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","parent_id",b"parent_id","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_parent_id",b"_parent_id","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","parent_id",b"parent_id","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_parent_id",b"_parent_id"]) -> typing.Optional[typing_extensions.Literal["parent_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListFirewallPoliciesRequest = ListFirewallPoliciesRequest

class ListFirewallsRequest(google.protobuf.message.Message):
    """A request message for Firewalls.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListFirewallsRequest = ListFirewallsRequest

class ListForwardingRulesRequest(google.protobuf.message.Message):
    """A request message for ForwardingRules.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListForwardingRulesRequest = ListForwardingRulesRequest

class ListGlobalAddressesRequest(google.protobuf.message.Message):
    """A request message for GlobalAddresses.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListGlobalAddressesRequest = ListGlobalAddressesRequest

class ListGlobalForwardingRulesRequest(google.protobuf.message.Message):
    """A request message for GlobalForwardingRules.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListGlobalForwardingRulesRequest = ListGlobalForwardingRulesRequest

class ListGlobalNetworkEndpointGroupsRequest(google.protobuf.message.Message):
    """A request message for GlobalNetworkEndpointGroups.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListGlobalNetworkEndpointGroupsRequest = ListGlobalNetworkEndpointGroupsRequest

class ListGlobalOperationsRequest(google.protobuf.message.Message):
    """A request message for GlobalOperations.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListGlobalOperationsRequest = ListGlobalOperationsRequest

class ListGlobalOrganizationOperationsRequest(google.protobuf.message.Message):
    """A request message for GlobalOrganizationOperations.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PARENT_ID_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    parent_id: typing.Text = ...
    """Parent ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        parent_id : typing.Optional[typing.Text] = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_parent_id",b"_parent_id","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","parent_id",b"parent_id","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_parent_id",b"_parent_id","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","parent_id",b"parent_id","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_parent_id",b"_parent_id"]) -> typing.Optional[typing_extensions.Literal["parent_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListGlobalOrganizationOperationsRequest = ListGlobalOrganizationOperationsRequest

class ListGlobalPublicDelegatedPrefixesRequest(google.protobuf.message.Message):
    """A request message for GlobalPublicDelegatedPrefixes.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListGlobalPublicDelegatedPrefixesRequest = ListGlobalPublicDelegatedPrefixesRequest

class ListHealthChecksRequest(google.protobuf.message.Message):
    """A request message for HealthChecks.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListHealthChecksRequest = ListHealthChecksRequest

class ListImagesRequest(google.protobuf.message.Message):
    """A request message for Images.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListImagesRequest = ListImagesRequest

class ListInstanceGroupManagersRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListInstanceGroupManagersRequest = ListInstanceGroupManagersRequest

class ListInstanceGroupsRequest(google.protobuf.message.Message):
    """A request message for InstanceGroups.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone where the instance group is located."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListInstanceGroupsRequest = ListInstanceGroupsRequest

class ListInstanceTemplatesRequest(google.protobuf.message.Message):
    """A request message for InstanceTemplates.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListInstanceTemplatesRequest = ListInstanceTemplatesRequest

class ListInstancesInstanceGroupsRequest(google.protobuf.message.Message):
    """A request message for InstanceGroups.ListInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_FIELD_NUMBER: builtins.int
    INSTANCE_GROUPS_LIST_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    instance_group: typing.Text = ...
    """The name of the instance group from which you want to generate a list of included instances."""

    @property
    def instance_groups_list_instances_request_resource(self) -> global___InstanceGroupsListInstancesRequest:
        """The body resource for this request"""
        pass
    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone where the instance group is located."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        instance_group : typing.Text = ...,
        instance_groups_list_instances_request_resource : typing.Optional[global___InstanceGroupsListInstancesRequest] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","instance_groups_list_instances_request_resource",b"instance_groups_list_instances_request_resource","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","instance_group",b"instance_group","instance_groups_list_instances_request_resource",b"instance_groups_list_instances_request_resource","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListInstancesInstanceGroupsRequest = ListInstancesInstanceGroupsRequest

class ListInstancesRegionInstanceGroupsRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroups.ListInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUPS_LIST_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    instance_group: typing.Text = ...
    """Name of the regional instance group for which we want to list the instances."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    @property
    def region_instance_groups_list_instances_request_resource(self) -> global___RegionInstanceGroupsListInstancesRequest:
        """The body resource for this request"""
        pass
    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        instance_group : typing.Text = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_groups_list_instances_request_resource : typing.Optional[global___RegionInstanceGroupsListInstancesRequest] = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","region_instance_groups_list_instances_request_resource",b"region_instance_groups_list_instances_request_resource","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","instance_group",b"instance_group","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","region_instance_groups_list_instances_request_resource",b"region_instance_groups_list_instances_request_resource","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListInstancesRegionInstanceGroupsRequest = ListInstancesRegionInstanceGroupsRequest

class ListInstancesRequest(google.protobuf.message.Message):
    """A request message for Instances.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListInstancesRequest = ListInstancesRequest

class ListInterconnectAttachmentsRequest(google.protobuf.message.Message):
    """A request message for InterconnectAttachments.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListInterconnectAttachmentsRequest = ListInterconnectAttachmentsRequest

class ListInterconnectLocationsRequest(google.protobuf.message.Message):
    """A request message for InterconnectLocations.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListInterconnectLocationsRequest = ListInterconnectLocationsRequest

class ListInterconnectsRequest(google.protobuf.message.Message):
    """A request message for Interconnects.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListInterconnectsRequest = ListInterconnectsRequest

class ListLicensesRequest(google.protobuf.message.Message):
    """A request message for Licenses.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListLicensesRequest = ListLicensesRequest

class ListMachineTypesRequest(google.protobuf.message.Message):
    """A request message for MachineTypes.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListMachineTypesRequest = ListMachineTypesRequest

class ListManagedInstancesInstanceGroupManagersRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.ListManagedInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    instance_group_manager: typing.Text = ...
    """The name of the managed instance group."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        instance_group_manager : typing.Text = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","instance_group_manager",b"instance_group_manager","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListManagedInstancesInstanceGroupManagersRequest = ListManagedInstancesInstanceGroupManagersRequest

class ListManagedInstancesRegionInstanceGroupManagersRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.ListManagedInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    instance_group_manager: typing.Text = ...
    """The name of the managed instance group."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        instance_group_manager : typing.Text = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","instance_group_manager",b"instance_group_manager","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListManagedInstancesRegionInstanceGroupManagersRequest = ListManagedInstancesRegionInstanceGroupManagersRequest

class ListNetworkEndpointGroupsRequest(google.protobuf.message.Message):
    """A request message for NetworkEndpointGroups.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone where the network endpoint group is located. It should comply with RFC1035."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListNetworkEndpointGroupsRequest = ListNetworkEndpointGroupsRequest

class ListNetworkEndpointsGlobalNetworkEndpointGroupsRequest(google.protobuf.message.Message):
    """A request message for GlobalNetworkEndpointGroups.ListNetworkEndpoints. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group from which you want to generate a list of included network endpoints. It should comply with RFC1035."""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        network_endpoint_group : typing.Text = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","network_endpoint_group",b"network_endpoint_group","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListNetworkEndpointsGlobalNetworkEndpointGroupsRequest = ListNetworkEndpointsGlobalNetworkEndpointGroupsRequest

class ListNetworkEndpointsNetworkEndpointGroupsRequest(google.protobuf.message.Message):
    """A request message for NetworkEndpointGroups.ListNetworkEndpoints. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    NETWORK_ENDPOINT_GROUP_FIELD_NUMBER: builtins.int
    NETWORK_ENDPOINT_GROUPS_LIST_ENDPOINTS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    network_endpoint_group: typing.Text = ...
    """The name of the network endpoint group from which you want to generate a list of included network endpoints. It should comply with RFC1035."""

    @property
    def network_endpoint_groups_list_endpoints_request_resource(self) -> global___NetworkEndpointGroupsListEndpointsRequest:
        """The body resource for this request"""
        pass
    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone where the network endpoint group is located. It should comply with RFC1035."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        network_endpoint_group : typing.Text = ...,
        network_endpoint_groups_list_endpoints_request_resource : typing.Optional[global___NetworkEndpointGroupsListEndpointsRequest] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","network_endpoint_groups_list_endpoints_request_resource",b"network_endpoint_groups_list_endpoints_request_resource","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","network_endpoint_group",b"network_endpoint_group","network_endpoint_groups_list_endpoints_request_resource",b"network_endpoint_groups_list_endpoints_request_resource","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListNetworkEndpointsNetworkEndpointGroupsRequest = ListNetworkEndpointsNetworkEndpointGroupsRequest

class ListNetworksRequest(google.protobuf.message.Message):
    """A request message for Networks.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListNetworksRequest = ListNetworksRequest

class ListNodeGroupsRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListNodeGroupsRequest = ListNodeGroupsRequest

class ListNodeTemplatesRequest(google.protobuf.message.Message):
    """A request message for NodeTemplates.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListNodeTemplatesRequest = ListNodeTemplatesRequest

class ListNodeTypesRequest(google.protobuf.message.Message):
    """A request message for NodeTypes.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListNodeTypesRequest = ListNodeTypesRequest

class ListNodesNodeGroupsRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.ListNodes. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    NODE_GROUP_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    node_group: typing.Text = ...
    """Name of the NodeGroup resource whose nodes you want to list."""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        node_group : typing.Text = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","node_group",b"node_group","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListNodesNodeGroupsRequest = ListNodesNodeGroupsRequest

class ListPacketMirroringsRequest(google.protobuf.message.Message):
    """A request message for PacketMirrorings.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListPacketMirroringsRequest = ListPacketMirroringsRequest

class ListPeeringRoutesNetworksRequest(google.protobuf.message.Message):
    """A request message for Networks.ListPeeringRoutes. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Direction:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DirectionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Direction.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_DIRECTION: ListPeeringRoutesNetworksRequest.Direction.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        INCOMING: ListPeeringRoutesNetworksRequest.Direction.ValueType = ...  # 338552870
        """For routes exported from peer network."""

        OUTGOING: ListPeeringRoutesNetworksRequest.Direction.ValueType = ...  # 307438444
        """For routes exported from local network."""

    class Direction(_Direction, metaclass=_DirectionEnumTypeWrapper):
        """The direction of the exchanged routes."""
        pass

    UNDEFINED_DIRECTION: ListPeeringRoutesNetworksRequest.Direction.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    INCOMING: ListPeeringRoutesNetworksRequest.Direction.ValueType = ...  # 338552870
    """For routes exported from peer network."""

    OUTGOING: ListPeeringRoutesNetworksRequest.Direction.ValueType = ...  # 307438444
    """For routes exported from local network."""


    DIRECTION_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PEERING_NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    direction: typing.Text = ...
    """The direction of the exchanged routes.
    Check the Direction enum for the list of possible values.
    """

    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    network: typing.Text = ...
    """Name of the network for this request."""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    peering_name: typing.Text = ...
    """The response will show routes exchanged over the given peering connection."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The region of the request. The response will include all subnet routes, static routes and dynamic routes in the region."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        direction : typing.Optional[typing.Text] = ...,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        network : typing.Text = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        peering_name : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Optional[typing.Text] = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_direction",b"_direction","_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_peering_name",b"_peering_name","_region",b"_region","_return_partial_success",b"_return_partial_success","direction",b"direction","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","peering_name",b"peering_name","region",b"region","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_direction",b"_direction","_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_peering_name",b"_peering_name","_region",b"_region","_return_partial_success",b"_return_partial_success","direction",b"direction","filter",b"filter","max_results",b"max_results","network",b"network","order_by",b"order_by","page_token",b"page_token","peering_name",b"peering_name","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_direction",b"_direction"]) -> typing.Optional[typing_extensions.Literal["direction"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peering_name",b"_peering_name"]) -> typing.Optional[typing_extensions.Literal["peering_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListPeeringRoutesNetworksRequest = ListPeeringRoutesNetworksRequest

class ListPerInstanceConfigsInstanceGroupManagersRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.ListPerInstanceConfigs. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It should conform to RFC1035."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located. It should conform to RFC1035."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        instance_group_manager : typing.Text = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","instance_group_manager",b"instance_group_manager","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListPerInstanceConfigsInstanceGroupManagersRequest = ListPerInstanceConfigsInstanceGroupManagersRequest

class ListPerInstanceConfigsRegionInstanceGroupManagersRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.ListPerInstanceConfigs. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It should conform to RFC1035."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request, should conform to RFC1035."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        instance_group_manager : typing.Text = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","instance_group_manager",b"instance_group_manager","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListPerInstanceConfigsRegionInstanceGroupManagersRequest = ListPerInstanceConfigsRegionInstanceGroupManagersRequest

class ListPreconfiguredExpressionSetsSecurityPoliciesRequest(google.protobuf.message.Message):
    """A request message for SecurityPolicies.ListPreconfiguredExpressionSets. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListPreconfiguredExpressionSetsSecurityPoliciesRequest = ListPreconfiguredExpressionSetsSecurityPoliciesRequest

class ListPublicAdvertisedPrefixesRequest(google.protobuf.message.Message):
    """A request message for PublicAdvertisedPrefixes.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListPublicAdvertisedPrefixesRequest = ListPublicAdvertisedPrefixesRequest

class ListPublicDelegatedPrefixesRequest(google.protobuf.message.Message):
    """A request message for PublicDelegatedPrefixes.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region of this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListPublicDelegatedPrefixesRequest = ListPublicDelegatedPrefixesRequest

class ListReferrersInstancesRequest(google.protobuf.message.Message):
    """A request message for Instances.ListReferrers. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    instance: typing.Text = ...
    """Name of the target instance scoping this request, or '-' if the request should span over all instances in the container."""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        instance : typing.Text = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","instance",b"instance","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListReferrersInstancesRequest = ListReferrersInstancesRequest

class ListRegionAutoscalersRequest(google.protobuf.message.Message):
    """A request message for RegionAutoscalers.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionAutoscalersRequest = ListRegionAutoscalersRequest

class ListRegionBackendServicesRequest(google.protobuf.message.Message):
    """A request message for RegionBackendServices.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionBackendServicesRequest = ListRegionBackendServicesRequest

class ListRegionCommitmentsRequest(google.protobuf.message.Message):
    """A request message for RegionCommitments.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionCommitmentsRequest = ListRegionCommitmentsRequest

class ListRegionDiskTypesRequest(google.protobuf.message.Message):
    """A request message for RegionDiskTypes.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionDiskTypesRequest = ListRegionDiskTypesRequest

class ListRegionDisksRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionDisksRequest = ListRegionDisksRequest

class ListRegionHealthCheckServicesRequest(google.protobuf.message.Message):
    """A request message for RegionHealthCheckServices.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionHealthCheckServicesRequest = ListRegionHealthCheckServicesRequest

class ListRegionHealthChecksRequest(google.protobuf.message.Message):
    """A request message for RegionHealthChecks.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionHealthChecksRequest = ListRegionHealthChecksRequest

class ListRegionInstanceGroupManagersRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionInstanceGroupManagersRequest = ListRegionInstanceGroupManagersRequest

class ListRegionInstanceGroupsRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroups.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionInstanceGroupsRequest = ListRegionInstanceGroupsRequest

class ListRegionNetworkEndpointGroupsRequest(google.protobuf.message.Message):
    """A request message for RegionNetworkEndpointGroups.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region where the network endpoint group is located. It should comply with RFC1035."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionNetworkEndpointGroupsRequest = ListRegionNetworkEndpointGroupsRequest

class ListRegionNotificationEndpointsRequest(google.protobuf.message.Message):
    """A request message for RegionNotificationEndpoints.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionNotificationEndpointsRequest = ListRegionNotificationEndpointsRequest

class ListRegionOperationsRequest(google.protobuf.message.Message):
    """A request message for RegionOperations.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionOperationsRequest = ListRegionOperationsRequest

class ListRegionSslCertificatesRequest(google.protobuf.message.Message):
    """A request message for RegionSslCertificates.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionSslCertificatesRequest = ListRegionSslCertificatesRequest

class ListRegionTargetHttpProxiesRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpProxies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionTargetHttpProxiesRequest = ListRegionTargetHttpProxiesRequest

class ListRegionTargetHttpsProxiesRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpsProxies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionTargetHttpsProxiesRequest = ListRegionTargetHttpsProxiesRequest

class ListRegionUrlMapsRequest(google.protobuf.message.Message):
    """A request message for RegionUrlMaps.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionUrlMapsRequest = ListRegionUrlMapsRequest

class ListRegionsRequest(google.protobuf.message.Message):
    """A request message for Regions.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRegionsRequest = ListRegionsRequest

class ListReservationsRequest(google.protobuf.message.Message):
    """A request message for Reservations.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListReservationsRequest = ListReservationsRequest

class ListResourcePoliciesRequest(google.protobuf.message.Message):
    """A request message for ResourcePolicies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListResourcePoliciesRequest = ListResourcePoliciesRequest

class ListRoutersRequest(google.protobuf.message.Message):
    """A request message for Routers.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRoutersRequest = ListRoutersRequest

class ListRoutesRequest(google.protobuf.message.Message):
    """A request message for Routes.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListRoutesRequest = ListRoutesRequest

class ListSecurityPoliciesRequest(google.protobuf.message.Message):
    """A request message for SecurityPolicies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListSecurityPoliciesRequest = ListSecurityPoliciesRequest

class ListServiceAttachmentsRequest(google.protobuf.message.Message):
    """A request message for ServiceAttachments.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region of this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListServiceAttachmentsRequest = ListServiceAttachmentsRequest

class ListSnapshotsRequest(google.protobuf.message.Message):
    """A request message for Snapshots.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListSnapshotsRequest = ListSnapshotsRequest

class ListSslCertificatesRequest(google.protobuf.message.Message):
    """A request message for SslCertificates.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListSslCertificatesRequest = ListSslCertificatesRequest

class ListSslPoliciesRequest(google.protobuf.message.Message):
    """A request message for SslPolicies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListSslPoliciesRequest = ListSslPoliciesRequest

class ListSubnetworksRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListSubnetworksRequest = ListSubnetworksRequest

class ListTargetGrpcProxiesRequest(google.protobuf.message.Message):
    """A request message for TargetGrpcProxies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListTargetGrpcProxiesRequest = ListTargetGrpcProxiesRequest

class ListTargetHttpProxiesRequest(google.protobuf.message.Message):
    """A request message for TargetHttpProxies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListTargetHttpProxiesRequest = ListTargetHttpProxiesRequest

class ListTargetHttpsProxiesRequest(google.protobuf.message.Message):
    """A request message for TargetHttpsProxies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListTargetHttpsProxiesRequest = ListTargetHttpsProxiesRequest

class ListTargetInstancesRequest(google.protobuf.message.Message):
    """A request message for TargetInstances.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """Name of the zone scoping this request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListTargetInstancesRequest = ListTargetInstancesRequest

class ListTargetPoolsRequest(google.protobuf.message.Message):
    """A request message for TargetPools.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListTargetPoolsRequest = ListTargetPoolsRequest

class ListTargetSslProxiesRequest(google.protobuf.message.Message):
    """A request message for TargetSslProxies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListTargetSslProxiesRequest = ListTargetSslProxiesRequest

class ListTargetTcpProxiesRequest(google.protobuf.message.Message):
    """A request message for TargetTcpProxies.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListTargetTcpProxiesRequest = ListTargetTcpProxiesRequest

class ListTargetVpnGatewaysRequest(google.protobuf.message.Message):
    """A request message for TargetVpnGateways.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListTargetVpnGatewaysRequest = ListTargetVpnGatewaysRequest

class ListUrlMapsRequest(google.protobuf.message.Message):
    """A request message for UrlMaps.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListUrlMapsRequest = ListUrlMapsRequest

class ListUsableSubnetworksRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.ListUsable. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListUsableSubnetworksRequest = ListUsableSubnetworksRequest

class ListVpnGatewaysRequest(google.protobuf.message.Message):
    """A request message for VpnGateways.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListVpnGatewaysRequest = ListVpnGatewaysRequest

class ListVpnTunnelsRequest(google.protobuf.message.Message):
    """A request message for VpnTunnels.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","region",b"region","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListVpnTunnelsRequest = ListVpnTunnelsRequest

class ListXpnHostsProjectsRequest(google.protobuf.message.Message):
    """A request message for Projects.ListXpnHosts. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    PROJECTS_LIST_XPN_HOSTS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    @property
    def projects_list_xpn_hosts_request_resource(self) -> global___ProjectsListXpnHostsRequest:
        """The body resource for this request"""
        pass
    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        projects_list_xpn_hosts_request_resource : typing.Optional[global___ProjectsListXpnHostsRequest] = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","projects_list_xpn_hosts_request_resource",b"projects_list_xpn_hosts_request_resource","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","projects_list_xpn_hosts_request_resource",b"projects_list_xpn_hosts_request_resource","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListXpnHostsProjectsRequest = ListXpnHostsProjectsRequest

class ListZoneOperationsRequest(google.protobuf.message.Message):
    """A request message for ZoneOperations.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    zone: typing.Text = ...
    """Name of the zone for request."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListZoneOperationsRequest = ListZoneOperationsRequest

class ListZonesRequest(google.protobuf.message.Message):
    """A request message for Zones.List. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FILTER_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RETURN_PARTIAL_SUCCESS_FIELD_NUMBER: builtins.int
    filter: typing.Text = ...
    """A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either `=`, `!=`, `>`, or `<`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```"""

    max_results: builtins.int = ...
    """The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"""

    order_by: typing.Text = ...
    """Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported."""

    page_token: typing.Text = ...
    """Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results."""

    project: typing.Text = ...
    """Project ID for this request."""

    return_partial_success: builtins.bool = ...
    """Opt-in for partial success behavior which provides partial results in case of failure. The default value is false."""

    def __init__(self,
        *,
        filter : typing.Optional[typing.Text] = ...,
        max_results : typing.Optional[builtins.int] = ...,
        order_by : typing.Optional[typing.Text] = ...,
        page_token : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        return_partial_success : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","return_partial_success",b"return_partial_success"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter",b"_filter","_max_results",b"_max_results","_order_by",b"_order_by","_page_token",b"_page_token","_return_partial_success",b"_return_partial_success","filter",b"filter","max_results",b"max_results","order_by",b"order_by","page_token",b"page_token","project",b"project","return_partial_success",b"return_partial_success"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_results",b"_max_results"]) -> typing.Optional[typing_extensions.Literal["max_results"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_by",b"_order_by"]) -> typing.Optional[typing_extensions.Literal["order_by"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_token",b"_page_token"]) -> typing.Optional[typing_extensions.Literal["page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_return_partial_success",b"_return_partial_success"]) -> typing.Optional[typing_extensions.Literal["return_partial_success"]]: ...
global___ListZonesRequest = ListZonesRequest

class LocalDisk(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_COUNT_FIELD_NUMBER: builtins.int
    DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    DISK_TYPE_FIELD_NUMBER: builtins.int
    disk_count: builtins.int = ...
    """Specifies the number of such disks."""

    disk_size_gb: builtins.int = ...
    """Specifies the size of the disk in base-2 GB."""

    disk_type: typing.Text = ...
    """Specifies the desired disk type on the node. This disk type must be a local storage type (e.g.: local-ssd). Note that for nodeTemplates, this should be the name of the disk type and not its URL."""

    def __init__(self,
        *,
        disk_count : typing.Optional[builtins.int] = ...,
        disk_size_gb : typing.Optional[builtins.int] = ...,
        disk_type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_disk_count",b"_disk_count","_disk_size_gb",b"_disk_size_gb","_disk_type",b"_disk_type","disk_count",b"disk_count","disk_size_gb",b"disk_size_gb","disk_type",b"disk_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_disk_count",b"_disk_count","_disk_size_gb",b"_disk_size_gb","_disk_type",b"_disk_type","disk_count",b"disk_count","disk_size_gb",b"disk_size_gb","disk_type",b"disk_type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_count",b"_disk_count"]) -> typing.Optional[typing_extensions.Literal["disk_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_size_gb",b"_disk_size_gb"]) -> typing.Optional[typing_extensions.Literal["disk_size_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_type",b"_disk_type"]) -> typing.Optional[typing_extensions.Literal["disk_type"]]: ...
global___LocalDisk = LocalDisk

class LocationPolicy(google.protobuf.message.Message):
    """Configuration for location policy among multiple possible locations (e.g. preferences for zone selection among zones in a single region)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LocationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___LocationPolicyLocation: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___LocationPolicyLocation] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    LOCATIONS_FIELD_NUMBER: builtins.int
    @property
    def locations(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___LocationPolicyLocation]:
        """Location configurations mapped by location name. Currently only zone names are supported and must be represented as valid internal URLs, such as zones/us-central1-a."""
        pass
    def __init__(self,
        *,
        locations : typing.Optional[typing.Mapping[typing.Text, global___LocationPolicyLocation]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["locations",b"locations"]) -> None: ...
global___LocationPolicy = LocationPolicy

class LocationPolicyLocation(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Preference:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PreferenceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Preference.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PREFERENCE: LocationPolicyLocation.Preference.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALLOW: LocationPolicyLocation.Preference.ValueType = ...  # 62368553
        """Location is allowed for use."""

        DENY: LocationPolicyLocation.Preference.ValueType = ...  # 2094604
        """Location is prohibited."""

        PREFERENCE_UNSPECIFIED: LocationPolicyLocation.Preference.ValueType = ...  # 496219571
        """Default value, unused."""

    class Preference(_Preference, metaclass=_PreferenceEnumTypeWrapper):
        """Preference for a given location: ALLOW or DENY."""
        pass

    UNDEFINED_PREFERENCE: LocationPolicyLocation.Preference.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALLOW: LocationPolicyLocation.Preference.ValueType = ...  # 62368553
    """Location is allowed for use."""

    DENY: LocationPolicyLocation.Preference.ValueType = ...  # 2094604
    """Location is prohibited."""

    PREFERENCE_UNSPECIFIED: LocationPolicyLocation.Preference.ValueType = ...  # 496219571
    """Default value, unused."""


    PREFERENCE_FIELD_NUMBER: builtins.int
    preference: typing.Text = ...
    """Preference for a given location: ALLOW or DENY.
    Check the Preference enum for the list of possible values.
    """

    def __init__(self,
        *,
        preference : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_preference",b"_preference","preference",b"preference"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_preference",b"_preference","preference",b"preference"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preference",b"_preference"]) -> typing.Optional[typing_extensions.Literal["preference"]]: ...
global___LocationPolicyLocation = LocationPolicyLocation

class LogConfig(google.protobuf.message.Message):
    """This is deprecated and has no effect. Do not use."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLOUD_AUDIT_FIELD_NUMBER: builtins.int
    COUNTER_FIELD_NUMBER: builtins.int
    DATA_ACCESS_FIELD_NUMBER: builtins.int
    @property
    def cloud_audit(self) -> global___LogConfigCloudAuditOptions:
        """This is deprecated and has no effect. Do not use."""
        pass
    @property
    def counter(self) -> global___LogConfigCounterOptions:
        """This is deprecated and has no effect. Do not use."""
        pass
    @property
    def data_access(self) -> global___LogConfigDataAccessOptions:
        """This is deprecated and has no effect. Do not use."""
        pass
    def __init__(self,
        *,
        cloud_audit : typing.Optional[global___LogConfigCloudAuditOptions] = ...,
        counter : typing.Optional[global___LogConfigCounterOptions] = ...,
        data_access : typing.Optional[global___LogConfigDataAccessOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cloud_audit",b"_cloud_audit","_counter",b"_counter","_data_access",b"_data_access","cloud_audit",b"cloud_audit","counter",b"counter","data_access",b"data_access"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cloud_audit",b"_cloud_audit","_counter",b"_counter","_data_access",b"_data_access","cloud_audit",b"cloud_audit","counter",b"counter","data_access",b"data_access"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cloud_audit",b"_cloud_audit"]) -> typing.Optional[typing_extensions.Literal["cloud_audit"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_counter",b"_counter"]) -> typing.Optional[typing_extensions.Literal["counter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_data_access",b"_data_access"]) -> typing.Optional[typing_extensions.Literal["data_access"]]: ...
global___LogConfig = LogConfig

class LogConfigCloudAuditOptions(google.protobuf.message.Message):
    """This is deprecated and has no effect. Do not use."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _LogName:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LogNameEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LogName.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_LOG_NAME: LogConfigCloudAuditOptions.LogName.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ADMIN_ACTIVITY: LogConfigCloudAuditOptions.LogName.ValueType = ...  # 427503135
        """This is deprecated and has no effect. Do not use."""

        DATA_ACCESS: LogConfigCloudAuditOptions.LogName.ValueType = ...  # 238070681
        """This is deprecated and has no effect. Do not use."""

        UNSPECIFIED_LOG_NAME: LogConfigCloudAuditOptions.LogName.ValueType = ...  # 410515182
        """This is deprecated and has no effect. Do not use."""

    class LogName(_LogName, metaclass=_LogNameEnumTypeWrapper):
        """This is deprecated and has no effect. Do not use."""
        pass

    UNDEFINED_LOG_NAME: LogConfigCloudAuditOptions.LogName.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ADMIN_ACTIVITY: LogConfigCloudAuditOptions.LogName.ValueType = ...  # 427503135
    """This is deprecated and has no effect. Do not use."""

    DATA_ACCESS: LogConfigCloudAuditOptions.LogName.ValueType = ...  # 238070681
    """This is deprecated and has no effect. Do not use."""

    UNSPECIFIED_LOG_NAME: LogConfigCloudAuditOptions.LogName.ValueType = ...  # 410515182
    """This is deprecated and has no effect. Do not use."""


    AUTHORIZATION_LOGGING_OPTIONS_FIELD_NUMBER: builtins.int
    LOG_NAME_FIELD_NUMBER: builtins.int
    @property
    def authorization_logging_options(self) -> global___AuthorizationLoggingOptions:
        """This is deprecated and has no effect. Do not use."""
        pass
    log_name: typing.Text = ...
    """This is deprecated and has no effect. Do not use.
    Check the LogName enum for the list of possible values.
    """

    def __init__(self,
        *,
        authorization_logging_options : typing.Optional[global___AuthorizationLoggingOptions] = ...,
        log_name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_authorization_logging_options",b"_authorization_logging_options","_log_name",b"_log_name","authorization_logging_options",b"authorization_logging_options","log_name",b"log_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_authorization_logging_options",b"_authorization_logging_options","_log_name",b"_log_name","authorization_logging_options",b"authorization_logging_options","log_name",b"log_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_authorization_logging_options",b"_authorization_logging_options"]) -> typing.Optional[typing_extensions.Literal["authorization_logging_options"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_log_name",b"_log_name"]) -> typing.Optional[typing_extensions.Literal["log_name"]]: ...
global___LogConfigCloudAuditOptions = LogConfigCloudAuditOptions

class LogConfigCounterOptions(google.protobuf.message.Message):
    """This is deprecated and has no effect. Do not use."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CUSTOM_FIELDS_FIELD_NUMBER: builtins.int
    FIELD_FIELD_NUMBER: builtins.int
    METRIC_FIELD_NUMBER: builtins.int
    @property
    def custom_fields(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogConfigCounterOptionsCustomField]:
        """This is deprecated and has no effect. Do not use."""
        pass
    field: typing.Text = ...
    """This is deprecated and has no effect. Do not use."""

    metric: typing.Text = ...
    """This is deprecated and has no effect. Do not use."""

    def __init__(self,
        *,
        custom_fields : typing.Optional[typing.Iterable[global___LogConfigCounterOptionsCustomField]] = ...,
        field : typing.Optional[typing.Text] = ...,
        metric : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_field",b"_field","_metric",b"_metric","field",b"field","metric",b"metric"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_field",b"_field","_metric",b"_metric","custom_fields",b"custom_fields","field",b"field","metric",b"metric"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_field",b"_field"]) -> typing.Optional[typing_extensions.Literal["field"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_metric",b"_metric"]) -> typing.Optional[typing_extensions.Literal["metric"]]: ...
global___LogConfigCounterOptions = LogConfigCounterOptions

class LogConfigCounterOptionsCustomField(google.protobuf.message.Message):
    """This is deprecated and has no effect. Do not use."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """This is deprecated and has no effect. Do not use."""

    value: typing.Text = ...
    """This is deprecated and has no effect. Do not use."""

    def __init__(self,
        *,
        name : typing.Optional[typing.Text] = ...,
        value : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","_value",b"_value","name",b"name","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","_value",b"_value","name",b"name","value",b"value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value",b"_value"]) -> typing.Optional[typing_extensions.Literal["value"]]: ...
global___LogConfigCounterOptionsCustomField = LogConfigCounterOptionsCustomField

class LogConfigDataAccessOptions(google.protobuf.message.Message):
    """This is deprecated and has no effect. Do not use."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _LogMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LogModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LogMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_LOG_MODE: LogConfigDataAccessOptions.LogMode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        LOG_FAIL_CLOSED: LogConfigDataAccessOptions.LogMode.ValueType = ...  # 360469778
        """This is deprecated and has no effect. Do not use."""

        LOG_MODE_UNSPECIFIED: LogConfigDataAccessOptions.LogMode.ValueType = ...  # 88160822
        """This is deprecated and has no effect. Do not use."""

    class LogMode(_LogMode, metaclass=_LogModeEnumTypeWrapper):
        """This is deprecated and has no effect. Do not use."""
        pass

    UNDEFINED_LOG_MODE: LogConfigDataAccessOptions.LogMode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    LOG_FAIL_CLOSED: LogConfigDataAccessOptions.LogMode.ValueType = ...  # 360469778
    """This is deprecated and has no effect. Do not use."""

    LOG_MODE_UNSPECIFIED: LogConfigDataAccessOptions.LogMode.ValueType = ...  # 88160822
    """This is deprecated and has no effect. Do not use."""


    LOG_MODE_FIELD_NUMBER: builtins.int
    log_mode: typing.Text = ...
    """This is deprecated and has no effect. Do not use.
    Check the LogMode enum for the list of possible values.
    """

    def __init__(self,
        *,
        log_mode : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_log_mode",b"_log_mode","log_mode",b"log_mode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_log_mode",b"_log_mode","log_mode",b"log_mode"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_log_mode",b"_log_mode"]) -> typing.Optional[typing_extensions.Literal["log_mode"]]: ...
global___LogConfigDataAccessOptions = LogConfigDataAccessOptions

class MachineType(google.protobuf.message.Message):
    """Represents a Machine Type resource. You can use specific machine types for your VM instances based on performance and pricing requirements. For more information, read Machine Types."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCELERATORS_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEPRECATED_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    GUEST_CPUS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    IMAGE_SPACE_GB_FIELD_NUMBER: builtins.int
    IS_SHARED_CPU_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    MAXIMUM_PERSISTENT_DISKS_FIELD_NUMBER: builtins.int
    MAXIMUM_PERSISTENT_DISKS_SIZE_GB_FIELD_NUMBER: builtins.int
    MEMORY_MB_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SCRATCH_DISKS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def accelerators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Accelerators]:
        """[Output Only] A list of accelerator configurations assigned to this machine type."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def deprecated(self) -> global___DeprecationStatus:
        """[Output Only] The deprecation status associated with this machine type. Only applicable if the machine type is unavailable."""
        pass
    description: typing.Text = ...
    """[Output Only] An optional textual description of the resource."""

    guest_cpus: builtins.int = ...
    """[Output Only] The number of virtual CPUs that are available to the instance."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    image_space_gb: builtins.int = ...
    """[Deprecated] This property is deprecated and will never be populated with any relevant values."""

    is_shared_cpu: builtins.bool = ...
    """[Output Only] Whether this machine type has a shared CPU. See Shared-core machine types for more information."""

    kind: typing.Text = ...
    """[Output Only] The type of the resource. Always compute#machineType for machine types."""

    maximum_persistent_disks: builtins.int = ...
    """[Output Only] Maximum persistent disks allowed."""

    maximum_persistent_disks_size_gb: builtins.int = ...
    """[Output Only] Maximum total persistent disks size (GB) allowed."""

    memory_mb: builtins.int = ...
    """[Output Only] The amount of physical memory available to the instance, defined in MB."""

    name: typing.Text = ...
    """[Output Only] Name of the resource."""

    @property
    def scratch_disks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ScratchDisks]:
        """[Output Only] A list of extended scratch disks assigned to the instance."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    zone: typing.Text = ...
    """[Output Only] The name of the zone where the machine type resides, such as us-central1-a."""

    def __init__(self,
        *,
        accelerators : typing.Optional[typing.Iterable[global___Accelerators]] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        deprecated : typing.Optional[global___DeprecationStatus] = ...,
        description : typing.Optional[typing.Text] = ...,
        guest_cpus : typing.Optional[builtins.int] = ...,
        id : typing.Optional[builtins.int] = ...,
        image_space_gb : typing.Optional[builtins.int] = ...,
        is_shared_cpu : typing.Optional[builtins.bool] = ...,
        kind : typing.Optional[typing.Text] = ...,
        maximum_persistent_disks : typing.Optional[builtins.int] = ...,
        maximum_persistent_disks_size_gb : typing.Optional[builtins.int] = ...,
        memory_mb : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        scratch_disks : typing.Optional[typing.Iterable[global___ScratchDisks]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_guest_cpus",b"_guest_cpus","_id",b"_id","_image_space_gb",b"_image_space_gb","_is_shared_cpu",b"_is_shared_cpu","_kind",b"_kind","_maximum_persistent_disks",b"_maximum_persistent_disks","_maximum_persistent_disks_size_gb",b"_maximum_persistent_disks_size_gb","_memory_mb",b"_memory_mb","_name",b"_name","_self_link",b"_self_link","_zone",b"_zone","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","guest_cpus",b"guest_cpus","id",b"id","image_space_gb",b"image_space_gb","is_shared_cpu",b"is_shared_cpu","kind",b"kind","maximum_persistent_disks",b"maximum_persistent_disks","maximum_persistent_disks_size_gb",b"maximum_persistent_disks_size_gb","memory_mb",b"memory_mb","name",b"name","self_link",b"self_link","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_guest_cpus",b"_guest_cpus","_id",b"_id","_image_space_gb",b"_image_space_gb","_is_shared_cpu",b"_is_shared_cpu","_kind",b"_kind","_maximum_persistent_disks",b"_maximum_persistent_disks","_maximum_persistent_disks_size_gb",b"_maximum_persistent_disks_size_gb","_memory_mb",b"_memory_mb","_name",b"_name","_self_link",b"_self_link","_zone",b"_zone","accelerators",b"accelerators","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","guest_cpus",b"guest_cpus","id",b"id","image_space_gb",b"image_space_gb","is_shared_cpu",b"is_shared_cpu","kind",b"kind","maximum_persistent_disks",b"maximum_persistent_disks","maximum_persistent_disks_size_gb",b"maximum_persistent_disks_size_gb","memory_mb",b"memory_mb","name",b"name","scratch_disks",b"scratch_disks","self_link",b"self_link","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deprecated",b"_deprecated"]) -> typing.Optional[typing_extensions.Literal["deprecated"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_guest_cpus",b"_guest_cpus"]) -> typing.Optional[typing_extensions.Literal["guest_cpus"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_image_space_gb",b"_image_space_gb"]) -> typing.Optional[typing_extensions.Literal["image_space_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_is_shared_cpu",b"_is_shared_cpu"]) -> typing.Optional[typing_extensions.Literal["is_shared_cpu"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_maximum_persistent_disks",b"_maximum_persistent_disks"]) -> typing.Optional[typing_extensions.Literal["maximum_persistent_disks"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_maximum_persistent_disks_size_gb",b"_maximum_persistent_disks_size_gb"]) -> typing.Optional[typing_extensions.Literal["maximum_persistent_disks_size_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_memory_mb",b"_memory_mb"]) -> typing.Optional[typing_extensions.Literal["memory_mb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___MachineType = MachineType

class MachineTypeAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___MachineTypesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___MachineTypesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___MachineTypesScopedList]:
        """A list of MachineTypesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#machineTypeAggregatedList for aggregated lists of machine types."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___MachineTypesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___MachineTypeAggregatedList = MachineTypeAggregatedList

class MachineTypeList(google.protobuf.message.Message):
    """Contains a list of machine types."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MachineType]:
        """A list of MachineType resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#machineTypeList for lists of machine types."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___MachineType]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___MachineTypeList = MachineTypeList

class MachineTypesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MACHINE_TYPES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def machine_types(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MachineType]:
        """[Output Only] A list of machine types contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] An informational warning that appears when the machine types list is empty."""
        pass
    def __init__(self,
        *,
        machine_types : typing.Optional[typing.Iterable[global___MachineType]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","machine_types",b"machine_types","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___MachineTypesScopedList = MachineTypesScopedList

class ManagedInstance(google.protobuf.message.Message):
    """A Managed Instance resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CurrentAction:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CurrentActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CurrentAction.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CURRENT_ACTION: ManagedInstance.CurrentAction.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ABANDONING: ManagedInstance.CurrentAction.ValueType = ...  # 388244813
        """The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group."""

        CREATING: ManagedInstance.CurrentAction.ValueType = ...  # 455564985
        """The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful."""

        CREATING_WITHOUT_RETRIES: ManagedInstance.CurrentAction.ValueType = ...  # 428843785
        """The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased."""

        DELETING: ManagedInstance.CurrentAction.ValueType = ...  # 528602024
        """The managed instance group is permanently deleting this instance."""

        NONE: ManagedInstance.CurrentAction.ValueType = ...  # 2402104
        """The managed instance group has not scheduled any actions for this instance."""

        RECREATING: ManagedInstance.CurrentAction.ValueType = ...  # 287278572
        """The managed instance group is recreating this instance."""

        REFRESHING: ManagedInstance.CurrentAction.ValueType = ...  # 163266343
        """The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance."""

        RESTARTING: ManagedInstance.CurrentAction.ValueType = ...  # 320534387
        """The managed instance group is restarting this instance."""

        VERIFYING: ManagedInstance.CurrentAction.ValueType = ...  # 16982185
        """The managed instance group is verifying this already created instance. Verification happens every time the instance is (re)created or restarted and consists of: 1. Waiting until health check specified as part of this managed instance group's autohealing policy reports HEALTHY. Note: Applies only if autohealing policy has a health check specified 2. Waiting for addition verification steps performed as post-instance creation (subject to future extensions)."""

    class CurrentAction(_CurrentAction, metaclass=_CurrentActionEnumTypeWrapper):
        """[Output Only] The current action that the managed instance group has scheduled for the instance. Possible values: - NONE The instance is running, and the managed instance group does not have any scheduled actions for this instance. - CREATING The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful. - CREATING_WITHOUT_RETRIES The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased instead. - RECREATING The managed instance group is recreating this instance. - DELETING The managed instance group is permanently deleting this instance. - ABANDONING The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group. - RESTARTING The managed instance group is restarting the instance. - REFRESHING The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance. - VERIFYING The managed instance group has created the instance and it is in the process of being verified."""
        pass

    UNDEFINED_CURRENT_ACTION: ManagedInstance.CurrentAction.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ABANDONING: ManagedInstance.CurrentAction.ValueType = ...  # 388244813
    """The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group."""

    CREATING: ManagedInstance.CurrentAction.ValueType = ...  # 455564985
    """The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful."""

    CREATING_WITHOUT_RETRIES: ManagedInstance.CurrentAction.ValueType = ...  # 428843785
    """The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased."""

    DELETING: ManagedInstance.CurrentAction.ValueType = ...  # 528602024
    """The managed instance group is permanently deleting this instance."""

    NONE: ManagedInstance.CurrentAction.ValueType = ...  # 2402104
    """The managed instance group has not scheduled any actions for this instance."""

    RECREATING: ManagedInstance.CurrentAction.ValueType = ...  # 287278572
    """The managed instance group is recreating this instance."""

    REFRESHING: ManagedInstance.CurrentAction.ValueType = ...  # 163266343
    """The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance."""

    RESTARTING: ManagedInstance.CurrentAction.ValueType = ...  # 320534387
    """The managed instance group is restarting this instance."""

    VERIFYING: ManagedInstance.CurrentAction.ValueType = ...  # 16982185
    """The managed instance group is verifying this already created instance. Verification happens every time the instance is (re)created or restarted and consists of: 1. Waiting until health check specified as part of this managed instance group's autohealing policy reports HEALTHY. Note: Applies only if autohealing policy has a health check specified 2. Waiting for addition verification steps performed as post-instance creation (subject to future extensions)."""


    class _InstanceStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InstanceStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InstanceStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_INSTANCE_STATUS: ManagedInstance.InstanceStatus.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DEPROVISIONING: ManagedInstance.InstanceStatus.ValueType = ...  # 428935662
        """The Nanny is halted and we are performing tear down tasks like network deprogramming, releasing quota, IP, tearing down disks etc."""

        PROVISIONING: ManagedInstance.InstanceStatus.ValueType = ...  # 290896621
        """Resources are being allocated for the instance."""

        REPAIRING: ManagedInstance.InstanceStatus.ValueType = ...  # 413483285
        """The instance is in repair."""

        RUNNING: ManagedInstance.InstanceStatus.ValueType = ...  # 121282975
        """The instance is running."""

        STAGING: ManagedInstance.InstanceStatus.ValueType = ...  # 431072283
        """All required resources have been allocated and the instance is being started."""

        STOPPED: ManagedInstance.InstanceStatus.ValueType = ...  # 444276141
        """The instance has stopped successfully."""

        STOPPING: ManagedInstance.InstanceStatus.ValueType = ...  # 350791796
        """The instance is currently stopping (either being deleted or killed)."""

        SUSPENDED: ManagedInstance.InstanceStatus.ValueType = ...  # 51223995
        """The instance has suspended."""

        SUSPENDING: ManagedInstance.InstanceStatus.ValueType = ...  # 514206246
        """The instance is suspending."""

        TERMINATED: ManagedInstance.InstanceStatus.ValueType = ...  # 250018339
        """The instance has stopped (either by explicit action or underlying failure)."""

    class InstanceStatus(_InstanceStatus, metaclass=_InstanceStatusEnumTypeWrapper):
        """[Output Only] The status of the instance. This field is empty when the instance does not exist."""
        pass

    UNDEFINED_INSTANCE_STATUS: ManagedInstance.InstanceStatus.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DEPROVISIONING: ManagedInstance.InstanceStatus.ValueType = ...  # 428935662
    """The Nanny is halted and we are performing tear down tasks like network deprogramming, releasing quota, IP, tearing down disks etc."""

    PROVISIONING: ManagedInstance.InstanceStatus.ValueType = ...  # 290896621
    """Resources are being allocated for the instance."""

    REPAIRING: ManagedInstance.InstanceStatus.ValueType = ...  # 413483285
    """The instance is in repair."""

    RUNNING: ManagedInstance.InstanceStatus.ValueType = ...  # 121282975
    """The instance is running."""

    STAGING: ManagedInstance.InstanceStatus.ValueType = ...  # 431072283
    """All required resources have been allocated and the instance is being started."""

    STOPPED: ManagedInstance.InstanceStatus.ValueType = ...  # 444276141
    """The instance has stopped successfully."""

    STOPPING: ManagedInstance.InstanceStatus.ValueType = ...  # 350791796
    """The instance is currently stopping (either being deleted or killed)."""

    SUSPENDED: ManagedInstance.InstanceStatus.ValueType = ...  # 51223995
    """The instance has suspended."""

    SUSPENDING: ManagedInstance.InstanceStatus.ValueType = ...  # 514206246
    """The instance is suspending."""

    TERMINATED: ManagedInstance.InstanceStatus.ValueType = ...  # 250018339
    """The instance has stopped (either by explicit action or underlying failure)."""


    CURRENT_ACTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    INSTANCE_HEALTH_FIELD_NUMBER: builtins.int
    INSTANCE_STATUS_FIELD_NUMBER: builtins.int
    LAST_ATTEMPT_FIELD_NUMBER: builtins.int
    PRESERVED_STATE_FROM_CONFIG_FIELD_NUMBER: builtins.int
    PRESERVED_STATE_FROM_POLICY_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    current_action: typing.Text = ...
    """[Output Only] The current action that the managed instance group has scheduled for the instance. Possible values: - NONE The instance is running, and the managed instance group does not have any scheduled actions for this instance. - CREATING The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful. - CREATING_WITHOUT_RETRIES The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased instead. - RECREATING The managed instance group is recreating this instance. - DELETING The managed instance group is permanently deleting this instance. - ABANDONING The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group. - RESTARTING The managed instance group is restarting the instance. - REFRESHING The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance. - VERIFYING The managed instance group has created the instance and it is in the process of being verified.
    Check the CurrentAction enum for the list of possible values.
    """

    id: builtins.int = ...
    """[Output only] The unique identifier for this resource. This field is empty when instance does not exist."""

    instance: typing.Text = ...
    """[Output Only] The URL of the instance. The URL can exist even if the instance has not yet been created."""

    @property
    def instance_health(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ManagedInstanceInstanceHealth]:
        """[Output Only] Health state of the instance per health-check."""
        pass
    instance_status: typing.Text = ...
    """[Output Only] The status of the instance. This field is empty when the instance does not exist.
    Check the InstanceStatus enum for the list of possible values.
    """

    @property
    def last_attempt(self) -> global___ManagedInstanceLastAttempt:
        """[Output Only] Information about the last attempt to create or delete the instance."""
        pass
    @property
    def preserved_state_from_config(self) -> global___PreservedState:
        """[Output Only] Preserved state applied from per-instance config for this instance."""
        pass
    @property
    def preserved_state_from_policy(self) -> global___PreservedState:
        """[Output Only] Preserved state generated based on stateful policy for this instance."""
        pass
    @property
    def version(self) -> global___ManagedInstanceVersion:
        """[Output Only] Intended version of this instance."""
        pass
    def __init__(self,
        *,
        current_action : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        instance : typing.Optional[typing.Text] = ...,
        instance_health : typing.Optional[typing.Iterable[global___ManagedInstanceInstanceHealth]] = ...,
        instance_status : typing.Optional[typing.Text] = ...,
        last_attempt : typing.Optional[global___ManagedInstanceLastAttempt] = ...,
        preserved_state_from_config : typing.Optional[global___PreservedState] = ...,
        preserved_state_from_policy : typing.Optional[global___PreservedState] = ...,
        version : typing.Optional[global___ManagedInstanceVersion] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_current_action",b"_current_action","_id",b"_id","_instance",b"_instance","_instance_status",b"_instance_status","_last_attempt",b"_last_attempt","_preserved_state_from_config",b"_preserved_state_from_config","_preserved_state_from_policy",b"_preserved_state_from_policy","_version",b"_version","current_action",b"current_action","id",b"id","instance",b"instance","instance_status",b"instance_status","last_attempt",b"last_attempt","preserved_state_from_config",b"preserved_state_from_config","preserved_state_from_policy",b"preserved_state_from_policy","version",b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_current_action",b"_current_action","_id",b"_id","_instance",b"_instance","_instance_status",b"_instance_status","_last_attempt",b"_last_attempt","_preserved_state_from_config",b"_preserved_state_from_config","_preserved_state_from_policy",b"_preserved_state_from_policy","_version",b"_version","current_action",b"current_action","id",b"id","instance",b"instance","instance_health",b"instance_health","instance_status",b"instance_status","last_attempt",b"last_attempt","preserved_state_from_config",b"preserved_state_from_config","preserved_state_from_policy",b"preserved_state_from_policy","version",b"version"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_current_action",b"_current_action"]) -> typing.Optional[typing_extensions.Literal["current_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance",b"_instance"]) -> typing.Optional[typing_extensions.Literal["instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_status",b"_instance_status"]) -> typing.Optional[typing_extensions.Literal["instance_status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_last_attempt",b"_last_attempt"]) -> typing.Optional[typing_extensions.Literal["last_attempt"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preserved_state_from_config",b"_preserved_state_from_config"]) -> typing.Optional[typing_extensions.Literal["preserved_state_from_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preserved_state_from_policy",b"_preserved_state_from_policy"]) -> typing.Optional[typing_extensions.Literal["preserved_state_from_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_version",b"_version"]) -> typing.Optional[typing_extensions.Literal["version"]]: ...
global___ManagedInstance = ManagedInstance

class ManagedInstanceInstanceHealth(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DetailedHealthState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DetailedHealthStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DetailedHealthState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_DETAILED_HEALTH_STATE: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DRAINING: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 480455402
        """The instance is being drained. The existing connections to the instance have time to complete, but the new ones are being refused."""

        HEALTHY: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 439801213
        """The instance is reachable i.e. a connection to the application health checking endpoint can be established, and conforms to the requirements defined by the health check."""

        TIMEOUT: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 477813057
        """The instance is unreachable i.e. a connection to the application health checking endpoint cannot be established, or the server does not respond within the specified timeout."""

        UNHEALTHY: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 462118084
        """The instance is reachable, but does not conform to the requirements defined by the health check."""

        UNKNOWN: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 433141802
        """The health checking system is aware of the instance but its health is not known at the moment."""

    class DetailedHealthState(_DetailedHealthState, metaclass=_DetailedHealthStateEnumTypeWrapper):
        """[Output Only] The current detailed instance health state."""
        pass

    UNDEFINED_DETAILED_HEALTH_STATE: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DRAINING: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 480455402
    """The instance is being drained. The existing connections to the instance have time to complete, but the new ones are being refused."""

    HEALTHY: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 439801213
    """The instance is reachable i.e. a connection to the application health checking endpoint can be established, and conforms to the requirements defined by the health check."""

    TIMEOUT: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 477813057
    """The instance is unreachable i.e. a connection to the application health checking endpoint cannot be established, or the server does not respond within the specified timeout."""

    UNHEALTHY: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 462118084
    """The instance is reachable, but does not conform to the requirements defined by the health check."""

    UNKNOWN: ManagedInstanceInstanceHealth.DetailedHealthState.ValueType = ...  # 433141802
    """The health checking system is aware of the instance but its health is not known at the moment."""


    DETAILED_HEALTH_STATE_FIELD_NUMBER: builtins.int
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    detailed_health_state: typing.Text = ...
    """[Output Only] The current detailed instance health state.
    Check the DetailedHealthState enum for the list of possible values.
    """

    health_check: typing.Text = ...
    """[Output Only] The URL for the health check that verifies whether the instance is healthy."""

    def __init__(self,
        *,
        detailed_health_state : typing.Optional[typing.Text] = ...,
        health_check : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_detailed_health_state",b"_detailed_health_state","_health_check",b"_health_check","detailed_health_state",b"detailed_health_state","health_check",b"health_check"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_detailed_health_state",b"_detailed_health_state","_health_check",b"_health_check","detailed_health_state",b"detailed_health_state","health_check",b"health_check"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_detailed_health_state",b"_detailed_health_state"]) -> typing.Optional[typing_extensions.Literal["detailed_health_state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_health_check",b"_health_check"]) -> typing.Optional[typing_extensions.Literal["health_check"]]: ...
global___ManagedInstanceInstanceHealth = ManagedInstanceInstanceHealth

class ManagedInstanceLastAttempt(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def errors(self) -> global___Errors:
        """[Output Only] Encountered errors during the last attempt to create or delete the instance."""
        pass
    def __init__(self,
        *,
        errors : typing.Optional[global___Errors] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_errors",b"_errors","errors",b"errors"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_errors",b"_errors","errors",b"errors"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_errors",b"_errors"]) -> typing.Optional[typing_extensions.Literal["errors"]]: ...
global___ManagedInstanceLastAttempt = ManagedInstanceLastAttempt

class ManagedInstanceVersion(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_TEMPLATE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    instance_template: typing.Text = ...
    """[Output Only] The intended template of the instance. This field is empty when current_action is one of { DELETING, ABANDONING }."""

    name: typing.Text = ...
    """[Output Only] Name of the version."""

    def __init__(self,
        *,
        instance_template : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance_template",b"_instance_template","_name",b"_name","instance_template",b"instance_template","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance_template",b"_instance_template","_name",b"_name","instance_template",b"instance_template","name",b"name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_template",b"_instance_template"]) -> typing.Optional[typing_extensions.Literal["instance_template"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
global___ManagedInstanceVersion = ManagedInstanceVersion

class Metadata(google.protobuf.message.Message):
    """A metadata key/value entry."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    fingerprint: typing.Text = ...
    """Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the resource."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Items]:
        """Array of key/value pairs. The total size of all keys and values must be less than 512 KB."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#metadata for metadata."""

    def __init__(self,
        *,
        fingerprint : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Items]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","_kind",b"_kind","fingerprint",b"fingerprint","kind",b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","_kind",b"_kind","fingerprint",b"fingerprint","items",b"items","kind",b"kind"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
global___Metadata = Metadata

class MetadataFilter(google.protobuf.message.Message):
    """Opaque filter criteria used by loadbalancers to restrict routing configuration to a limited set of loadbalancing proxies. Proxies and sidecars involved in loadbalancing would typically present metadata to the loadbalancers which need to match criteria specified here. If a match takes place, the relevant configuration is made available to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels provided in the metadata. An example for using metadataFilters would be: if loadbalancing involves Envoys, they will only receive routing configuration when values in metadataFilters match values supplied in of their XDS requests to loadbalancers."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _FilterMatchCriteria:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FilterMatchCriteriaEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FilterMatchCriteria.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_FILTER_MATCH_CRITERIA: MetadataFilter.FilterMatchCriteria.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        MATCH_ALL: MetadataFilter.FilterMatchCriteria.ValueType = ...  # 180663271
        """Specifies that all filterLabels must match for the metadataFilter to be considered a match."""

        MATCH_ANY: MetadataFilter.FilterMatchCriteria.ValueType = ...  # 180663346
        """Specifies that any filterLabel must match for the metadataFilter to be considered a match."""

        NOT_SET: MetadataFilter.FilterMatchCriteria.ValueType = ...  # 163646646
        """Indicates that the match criteria was not set. A metadataFilter must never be created with this value."""

    class FilterMatchCriteria(_FilterMatchCriteria, metaclass=_FilterMatchCriteriaEnumTypeWrapper):
        """Specifies how individual filterLabel matches within the list of filterLabels contribute towards the overall metadataFilter match. Supported values are: - MATCH_ANY: At least one of the filterLabels must have a matching label in the provided metadata. - MATCH_ALL: All filterLabels must have matching labels in the provided metadata."""
        pass

    UNDEFINED_FILTER_MATCH_CRITERIA: MetadataFilter.FilterMatchCriteria.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    MATCH_ALL: MetadataFilter.FilterMatchCriteria.ValueType = ...  # 180663271
    """Specifies that all filterLabels must match for the metadataFilter to be considered a match."""

    MATCH_ANY: MetadataFilter.FilterMatchCriteria.ValueType = ...  # 180663346
    """Specifies that any filterLabel must match for the metadataFilter to be considered a match."""

    NOT_SET: MetadataFilter.FilterMatchCriteria.ValueType = ...  # 163646646
    """Indicates that the match criteria was not set. A metadataFilter must never be created with this value."""


    FILTER_LABELS_FIELD_NUMBER: builtins.int
    FILTER_MATCH_CRITERIA_FIELD_NUMBER: builtins.int
    @property
    def filter_labels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MetadataFilterLabelMatch]:
        """The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list must not be empty and can have at the most 64 entries."""
        pass
    filter_match_criteria: typing.Text = ...
    """Specifies how individual filterLabel matches within the list of filterLabels contribute towards the overall metadataFilter match. Supported values are: - MATCH_ANY: At least one of the filterLabels must have a matching label in the provided metadata. - MATCH_ALL: All filterLabels must have matching labels in the provided metadata.
    Check the FilterMatchCriteria enum for the list of possible values.
    """

    def __init__(self,
        *,
        filter_labels : typing.Optional[typing.Iterable[global___MetadataFilterLabelMatch]] = ...,
        filter_match_criteria : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_filter_match_criteria",b"_filter_match_criteria","filter_match_criteria",b"filter_match_criteria"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_filter_match_criteria",b"_filter_match_criteria","filter_labels",b"filter_labels","filter_match_criteria",b"filter_match_criteria"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter_match_criteria",b"_filter_match_criteria"]) -> typing.Optional[typing_extensions.Literal["filter_match_criteria"]]: ...
global___MetadataFilter = MetadataFilter

class MetadataFilterLabelMatch(google.protobuf.message.Message):
    """MetadataFilter label name value pairs that are expected to match corresponding labels presented as metadata to the loadbalancer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of metadata label. The name can have a maximum length of 1024 characters and must be at least 1 character long."""

    value: typing.Text = ...
    """The value of the label must match the specified value. value can have a maximum length of 1024 characters."""

    def __init__(self,
        *,
        name : typing.Optional[typing.Text] = ...,
        value : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","_value",b"_value","name",b"name","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","_value",b"_value","name",b"name","value",b"value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value",b"_value"]) -> typing.Optional[typing_extensions.Literal["value"]]: ...
global___MetadataFilterLabelMatch = MetadataFilterLabelMatch

class MoveDiskProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.MoveDisk. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_MOVE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def disk_move_request_resource(self) -> global___DiskMoveRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        disk_move_request_resource : typing.Optional[global___DiskMoveRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk_move_request_resource",b"disk_move_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk_move_request_resource",b"disk_move_request_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___MoveDiskProjectRequest = MoveDiskProjectRequest

class MoveFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.Move. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    PARENT_ID_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to update."""

    parent_id: typing.Text = ...
    """The new parent of the firewall policy."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        parent_id : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_policy",b"firewall_policy","parent_id",b"parent_id","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___MoveFirewallPolicyRequest = MoveFirewallPolicyRequest

class MoveInstanceProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.MoveInstance. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_MOVE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def instance_move_request_resource(self) -> global___InstanceMoveRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_move_request_resource : typing.Optional[global___InstanceMoveRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_move_request_resource",b"instance_move_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_move_request_resource",b"instance_move_request_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___MoveInstanceProjectRequest = MoveInstanceProjectRequest

class NamedPort(google.protobuf.message.Message):
    """The named port. For example: <"http", 80>."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """The name for this named port. The name must be 1-63 characters long, and comply with RFC1035."""

    port: builtins.int = ...
    """The port number, which can be a value between 1 and 65535."""

    def __init__(self,
        *,
        name : typing.Optional[typing.Text] = ...,
        port : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","_port",b"_port","name",b"name","port",b"port"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","_port",b"_port","name",b"name","port",b"port"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
global___NamedPort = NamedPort

class Network(google.protobuf.message.Message):
    """Represents a VPC Network resource. Networks connect resources to each other and to the internet. For more information, read Virtual Private Cloud (VPC) Network."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    I_PV4_RANGE_FIELD_NUMBER: builtins.int
    AUTO_CREATE_SUBNETWORKS_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    GATEWAY_I_PV4_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    MTU_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PEERINGS_FIELD_NUMBER: builtins.int
    ROUTING_CONFIG_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SUBNETWORKS_FIELD_NUMBER: builtins.int
    I_pv4_range: typing.Text = ...
    """Deprecated in favor of subnet mode networks. The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created."""

    auto_create_subnetworks: builtins.bool = ...
    """Must be set to create a VPC network. If not set, a legacy network is created. When set to true, the VPC network is created in auto mode. When set to false, the VPC network is created in custom mode. An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges. For custom mode VPC networks, you can add subnets using the subnetworks insert method."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this field when you create the resource."""

    gateway_i_pv4: typing.Text = ...
    """[Output Only] The gateway address for default routing out of the network, selected by GCP."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#network for networks."""

    mtu: builtins.int = ...
    """Maximum Transmission Unit in bytes. The minimum value for this field is 1460 and the maximum value is 1500 bytes. If unspecified, defaults to 1460."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit."""

    @property
    def peerings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkPeering]:
        """[Output Only] A list of network peerings for the resource."""
        pass
    @property
    def routing_config(self) -> global___NetworkRoutingConfig:
        """The network-level routing configuration for this network. Used by Cloud Router to determine what type of network-wide routing behavior to enforce."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def subnetworks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Server-defined fully-qualified URLs for all subnetworks in this VPC network."""
        pass
    def __init__(self,
        *,
        I_pv4_range : typing.Optional[typing.Text] = ...,
        auto_create_subnetworks : typing.Optional[builtins.bool] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        gateway_i_pv4 : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        mtu : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        peerings : typing.Optional[typing.Iterable[global___NetworkPeering]] = ...,
        routing_config : typing.Optional[global___NetworkRoutingConfig] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        subnetworks : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["I_pv4_range",b"I_pv4_range","_I_pv4_range",b"_I_pv4_range","_auto_create_subnetworks",b"_auto_create_subnetworks","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_gateway_i_pv4",b"_gateway_i_pv4","_id",b"_id","_kind",b"_kind","_mtu",b"_mtu","_name",b"_name","_routing_config",b"_routing_config","_self_link",b"_self_link","auto_create_subnetworks",b"auto_create_subnetworks","creation_timestamp",b"creation_timestamp","description",b"description","gateway_i_pv4",b"gateway_i_pv4","id",b"id","kind",b"kind","mtu",b"mtu","name",b"name","routing_config",b"routing_config","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["I_pv4_range",b"I_pv4_range","_I_pv4_range",b"_I_pv4_range","_auto_create_subnetworks",b"_auto_create_subnetworks","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_gateway_i_pv4",b"_gateway_i_pv4","_id",b"_id","_kind",b"_kind","_mtu",b"_mtu","_name",b"_name","_routing_config",b"_routing_config","_self_link",b"_self_link","auto_create_subnetworks",b"auto_create_subnetworks","creation_timestamp",b"creation_timestamp","description",b"description","gateway_i_pv4",b"gateway_i_pv4","id",b"id","kind",b"kind","mtu",b"mtu","name",b"name","peerings",b"peerings","routing_config",b"routing_config","self_link",b"self_link","subnetworks",b"subnetworks"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_I_pv4_range",b"_I_pv4_range"]) -> typing.Optional[typing_extensions.Literal["I_pv4_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_auto_create_subnetworks",b"_auto_create_subnetworks"]) -> typing.Optional[typing_extensions.Literal["auto_create_subnetworks"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gateway_i_pv4",b"_gateway_i_pv4"]) -> typing.Optional[typing_extensions.Literal["gateway_i_pv4"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mtu",b"_mtu"]) -> typing.Optional[typing_extensions.Literal["mtu"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_routing_config",b"_routing_config"]) -> typing.Optional[typing_extensions.Literal["routing_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___Network = Network

class NetworkEndpoint(google.protobuf.message.Message):
    """The network endpoint."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    FQDN_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Metadata defined as annotations on the network endpoint."""
        pass
    fqdn: typing.Text = ...
    """Optional fully qualified domain name of network endpoint. This can only be specified when NetworkEndpointGroup.network_endpoint_type is NON_GCP_FQDN_PORT."""

    instance: typing.Text = ...
    """The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type GCE_VM_IP_PORT. The instance must be in the same zone of network endpoint group. The name must be 1-63 characters long, and comply with RFC1035."""

    ip_address: typing.Text = ...
    """Optional IPv4 address of network endpoint. The IP address must belong to a VM in Compute Engine (either the primary IP or as part of an aliased IP range). If the IP address is not specified, then the primary IP address for the VM instance in the network that the network endpoint group belongs to will be used."""

    port: builtins.int = ...
    """Optional port number of network endpoint. If not specified, the defaultPort for the network endpoint group will be used."""

    def __init__(self,
        *,
        annotations : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        fqdn : typing.Optional[typing.Text] = ...,
        instance : typing.Optional[typing.Text] = ...,
        ip_address : typing.Optional[typing.Text] = ...,
        port : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_fqdn",b"_fqdn","_instance",b"_instance","_ip_address",b"_ip_address","_port",b"_port","fqdn",b"fqdn","instance",b"instance","ip_address",b"ip_address","port",b"port"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_fqdn",b"_fqdn","_instance",b"_instance","_ip_address",b"_ip_address","_port",b"_port","annotations",b"annotations","fqdn",b"fqdn","instance",b"instance","ip_address",b"ip_address","port",b"port"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fqdn",b"_fqdn"]) -> typing.Optional[typing_extensions.Literal["fqdn"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance",b"_instance"]) -> typing.Optional[typing_extensions.Literal["instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_address",b"_ip_address"]) -> typing.Optional[typing_extensions.Literal["ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
global___NetworkEndpoint = NetworkEndpoint

class NetworkEndpointGroup(google.protobuf.message.Message):
    """Represents a collection of network endpoints. A network endpoint group (NEG) defines how a set of endpoints should be reached, whether they are reachable, and where they are located. For more information about using NEGs, see Setting up external HTTP(S) Load Balancing with internet NEGs, Setting up zonal NEGs, or Setting up external HTTP(S) Load Balancing with serverless NEGs."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _NetworkEndpointType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NetworkEndpointTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NetworkEndpointType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_NETWORK_ENDPOINT_TYPE: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        GCE_VM_IP: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 401880793
        """The network endpoint is represented by an IP address."""

        GCE_VM_IP_PORT: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 501838375
        """The network endpoint is represented by IP address and port pair."""

        INTERNET_FQDN_PORT: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 404154477
        """The network endpoint is represented by fully qualified domain name and port."""

        INTERNET_IP_PORT: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 477719963
        """The network endpoint is represented by an internet IP address and port."""

        NON_GCP_PRIVATE_IP_PORT: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 336447968
        """The network endpoint is represented by an IP address and port. The endpoint belongs to a VM or pod running in a customer's on-premises."""

        SERVERLESS: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 270492508
        """The network endpoint is handled by specified serverless infrastructure."""

    class NetworkEndpointType(_NetworkEndpointType, metaclass=_NetworkEndpointTypeEnumTypeWrapper):
        """Type of network endpoints in this network endpoint group. Can be one of GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_FQDN_PORT, INTERNET_IP_PORT, SERVERLESS, PRIVATE_SERVICE_CONNECT."""
        pass

    UNDEFINED_NETWORK_ENDPOINT_TYPE: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    GCE_VM_IP: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 401880793
    """The network endpoint is represented by an IP address."""

    GCE_VM_IP_PORT: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 501838375
    """The network endpoint is represented by IP address and port pair."""

    INTERNET_FQDN_PORT: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 404154477
    """The network endpoint is represented by fully qualified domain name and port."""

    INTERNET_IP_PORT: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 477719963
    """The network endpoint is represented by an internet IP address and port."""

    NON_GCP_PRIVATE_IP_PORT: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 336447968
    """The network endpoint is represented by an IP address and port. The endpoint belongs to a VM or pod running in a customer's on-premises."""

    SERVERLESS: NetworkEndpointGroup.NetworkEndpointType.ValueType = ...  # 270492508
    """The network endpoint is handled by specified serverless infrastructure."""


    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    APP_ENGINE_FIELD_NUMBER: builtins.int
    CLOUD_FUNCTION_FIELD_NUMBER: builtins.int
    CLOUD_RUN_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEFAULT_PORT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    NETWORK_ENDPOINT_TYPE_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Metadata defined as annotations on the network endpoint group."""
        pass
    @property
    def app_engine(self) -> global___NetworkEndpointGroupAppEngine:
        """Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun, appEngine or cloudFunction may be set."""
        pass
    @property
    def cloud_function(self) -> global___NetworkEndpointGroupCloudFunction:
        """Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun, appEngine or cloudFunction may be set."""
        pass
    @property
    def cloud_run(self) -> global___NetworkEndpointGroupCloudRun:
        """Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun, appEngine or cloudFunction may be set."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    default_port: builtins.int = ...
    """The default port used if the port number is not specified in the network endpoint."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#networkEndpointGroup for network endpoint group."""

    name: typing.Text = ...
    """Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    network: typing.Text = ...
    """The URL of the network to which all network endpoints in the NEG belong. Uses "default" project network if unspecified."""

    network_endpoint_type: typing.Text = ...
    """Type of network endpoints in this network endpoint group. Can be one of GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_FQDN_PORT, INTERNET_IP_PORT, SERVERLESS, PRIVATE_SERVICE_CONNECT.
    Check the NetworkEndpointType enum for the list of possible values.
    """

    region: typing.Text = ...
    """[Output Only] The URL of the region where the network endpoint group is located."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    size: builtins.int = ...
    """[Output only] Number of network endpoints in the network endpoint group."""

    subnetwork: typing.Text = ...
    """Optional URL of the subnetwork to which all network endpoints in the NEG belong."""

    zone: typing.Text = ...
    """[Output Only] The URL of the zone where the network endpoint group is located."""

    def __init__(self,
        *,
        annotations : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        app_engine : typing.Optional[global___NetworkEndpointGroupAppEngine] = ...,
        cloud_function : typing.Optional[global___NetworkEndpointGroupCloudFunction] = ...,
        cloud_run : typing.Optional[global___NetworkEndpointGroupCloudRun] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        default_port : typing.Optional[builtins.int] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        network_endpoint_type : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        size : typing.Optional[builtins.int] = ...,
        subnetwork : typing.Optional[typing.Text] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_app_engine",b"_app_engine","_cloud_function",b"_cloud_function","_cloud_run",b"_cloud_run","_creation_timestamp",b"_creation_timestamp","_default_port",b"_default_port","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_network",b"_network","_network_endpoint_type",b"_network_endpoint_type","_region",b"_region","_self_link",b"_self_link","_size",b"_size","_subnetwork",b"_subnetwork","_zone",b"_zone","app_engine",b"app_engine","cloud_function",b"cloud_function","cloud_run",b"cloud_run","creation_timestamp",b"creation_timestamp","default_port",b"default_port","description",b"description","id",b"id","kind",b"kind","name",b"name","network",b"network","network_endpoint_type",b"network_endpoint_type","region",b"region","self_link",b"self_link","size",b"size","subnetwork",b"subnetwork","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_app_engine",b"_app_engine","_cloud_function",b"_cloud_function","_cloud_run",b"_cloud_run","_creation_timestamp",b"_creation_timestamp","_default_port",b"_default_port","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_network",b"_network","_network_endpoint_type",b"_network_endpoint_type","_region",b"_region","_self_link",b"_self_link","_size",b"_size","_subnetwork",b"_subnetwork","_zone",b"_zone","annotations",b"annotations","app_engine",b"app_engine","cloud_function",b"cloud_function","cloud_run",b"cloud_run","creation_timestamp",b"creation_timestamp","default_port",b"default_port","description",b"description","id",b"id","kind",b"kind","name",b"name","network",b"network","network_endpoint_type",b"network_endpoint_type","region",b"region","self_link",b"self_link","size",b"size","subnetwork",b"subnetwork","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_app_engine",b"_app_engine"]) -> typing.Optional[typing_extensions.Literal["app_engine"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cloud_function",b"_cloud_function"]) -> typing.Optional[typing_extensions.Literal["cloud_function"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cloud_run",b"_cloud_run"]) -> typing.Optional[typing_extensions.Literal["cloud_run"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_port",b"_default_port"]) -> typing.Optional[typing_extensions.Literal["default_port"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_endpoint_type",b"_network_endpoint_type"]) -> typing.Optional[typing_extensions.Literal["network_endpoint_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_size",b"_size"]) -> typing.Optional[typing_extensions.Literal["size"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_subnetwork",b"_subnetwork"]) -> typing.Optional[typing_extensions.Literal["subnetwork"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___NetworkEndpointGroup = NetworkEndpointGroup

class NetworkEndpointGroupAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___NetworkEndpointGroupsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___NetworkEndpointGroupsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___NetworkEndpointGroupsScopedList]:
        """A list of NetworkEndpointGroupsScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#networkEndpointGroupAggregatedList for aggregated lists of network endpoint groups."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___NetworkEndpointGroupsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NetworkEndpointGroupAggregatedList = NetworkEndpointGroupAggregatedList

class NetworkEndpointGroupAppEngine(google.protobuf.message.Message):
    """Configuration for an App Engine network endpoint group (NEG). The service is optional, may be provided explicitly or in the URL mask. The version is optional and can only be provided explicitly or in the URL mask when service is present. Note: App Engine service must be in the same project and located in the same region as the Serverless NEG."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_FIELD_NUMBER: builtins.int
    URL_MASK_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    service: typing.Text = ...
    """Optional serving service. The service name is case-sensitive and must be 1-63 characters long. Example value: "default", "my-service"."""

    url_mask: typing.Text = ...
    """A template to parse service and version fields from a request URL. URL mask allows for routing to multiple App Engine services without having to create multiple Network Endpoint Groups and backend services. For example, the request URLs "foo1-dot-appname.appspot.com/v1" and "foo1-dot-appname.appspot.com/v2" can be backed by the same Serverless NEG with URL mask "-dot-appname.appspot.com/". The URL mask will parse them to { service = "foo1", version = "v1" } and { service = "foo1", version = "v2" } respectively."""

    version: typing.Text = ...
    """Optional serving version. The version name is case-sensitive and must be 1-100 characters long. Example value: "v1", "v2"."""

    def __init__(self,
        *,
        service : typing.Optional[typing.Text] = ...,
        url_mask : typing.Optional[typing.Text] = ...,
        version : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_service",b"_service","_url_mask",b"_url_mask","_version",b"_version","service",b"service","url_mask",b"url_mask","version",b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_service",b"_service","_url_mask",b"_url_mask","_version",b"_version","service",b"service","url_mask",b"url_mask","version",b"version"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_mask",b"_url_mask"]) -> typing.Optional[typing_extensions.Literal["url_mask"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_version",b"_version"]) -> typing.Optional[typing_extensions.Literal["version"]]: ...
global___NetworkEndpointGroupAppEngine = NetworkEndpointGroupAppEngine

class NetworkEndpointGroupCloudFunction(google.protobuf.message.Message):
    """Configuration for a Cloud Function network endpoint group (NEG). The function must be provided explicitly or in the URL mask. Note: Cloud Function must be in the same project and located in the same region as the Serverless NEG."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FUNCTION_FIELD_NUMBER: builtins.int
    URL_MASK_FIELD_NUMBER: builtins.int
    function: typing.Text = ...
    """A user-defined name of the Cloud Function. The function name is case-sensitive and must be 1-63 characters long. Example value: "func1"."""

    url_mask: typing.Text = ...
    """A template to parse function field from a request URL. URL mask allows for routing to multiple Cloud Functions without having to create multiple Network Endpoint Groups and backend services. For example, request URLs " mydomain.com/function1" and "mydomain.com/function2" can be backed by the same Serverless NEG with URL mask "/". The URL mask will parse them to { function = "function1" } and { function = "function2" } respectively."""

    def __init__(self,
        *,
        function : typing.Optional[typing.Text] = ...,
        url_mask : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_function",b"_function","_url_mask",b"_url_mask","function",b"function","url_mask",b"url_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_function",b"_function","_url_mask",b"_url_mask","function",b"function","url_mask",b"url_mask"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_function",b"_function"]) -> typing.Optional[typing_extensions.Literal["function"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_mask",b"_url_mask"]) -> typing.Optional[typing_extensions.Literal["url_mask"]]: ...
global___NetworkEndpointGroupCloudFunction = NetworkEndpointGroupCloudFunction

class NetworkEndpointGroupCloudRun(google.protobuf.message.Message):
    """Configuration for a Cloud Run network endpoint group (NEG). The service must be provided explicitly or in the URL mask. The tag is optional, may be provided explicitly or in the URL mask. Note: Cloud Run service must be in the same project and located in the same region as the Serverless NEG."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    URL_MASK_FIELD_NUMBER: builtins.int
    service: typing.Text = ...
    """Cloud Run service is the main resource of Cloud Run. The service must be 1-63 characters long, and comply with RFC1035. Example value: "run-service"."""

    tag: typing.Text = ...
    """Optional Cloud Run tag represents the "named-revision" to provide additional fine-grained traffic routing information. The tag must be 1-63 characters long, and comply with RFC1035. Example value: "revision-0010"."""

    url_mask: typing.Text = ...
    """A template to parse service and tag fields from a request URL. URL mask allows for routing to multiple Run services without having to create multiple network endpoint groups and backend services. For example, request URLs "foo1.domain.com/bar1" and "foo1.domain.com/bar2" can be backed by the same Serverless Network Endpoint Group (NEG) with URL mask ".domain.com/". The URL mask will parse them to { service="bar1", tag="foo1" } and { service="bar2", tag="foo2" } respectively."""

    def __init__(self,
        *,
        service : typing.Optional[typing.Text] = ...,
        tag : typing.Optional[typing.Text] = ...,
        url_mask : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_service",b"_service","_tag",b"_tag","_url_mask",b"_url_mask","service",b"service","tag",b"tag","url_mask",b"url_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_service",b"_service","_tag",b"_tag","_url_mask",b"_url_mask","service",b"service","tag",b"tag","url_mask",b"url_mask"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tag",b"_tag"]) -> typing.Optional[typing_extensions.Literal["tag"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_mask",b"_url_mask"]) -> typing.Optional[typing_extensions.Literal["url_mask"]]: ...
global___NetworkEndpointGroupCloudRun = NetworkEndpointGroupCloudRun

class NetworkEndpointGroupList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkEndpointGroup]:
        """A list of NetworkEndpointGroup resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#networkEndpointGroupList for network endpoint group lists."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___NetworkEndpointGroup]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NetworkEndpointGroupList = NetworkEndpointGroupList

class NetworkEndpointGroupsAttachEndpointsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINTS_FIELD_NUMBER: builtins.int
    @property
    def network_endpoints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkEndpoint]:
        """The list of network endpoints to be attached."""
        pass
    def __init__(self,
        *,
        network_endpoints : typing.Optional[typing.Iterable[global___NetworkEndpoint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_endpoints",b"network_endpoints"]) -> None: ...
global___NetworkEndpointGroupsAttachEndpointsRequest = NetworkEndpointGroupsAttachEndpointsRequest

class NetworkEndpointGroupsDetachEndpointsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINTS_FIELD_NUMBER: builtins.int
    @property
    def network_endpoints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkEndpoint]:
        """The list of network endpoints to be detached."""
        pass
    def __init__(self,
        *,
        network_endpoints : typing.Optional[typing.Iterable[global___NetworkEndpoint]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["network_endpoints",b"network_endpoints"]) -> None: ...
global___NetworkEndpointGroupsDetachEndpointsRequest = NetworkEndpointGroupsDetachEndpointsRequest

class NetworkEndpointGroupsListEndpointsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _HealthStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _HealthStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_HealthStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_HEALTH_STATUS: NetworkEndpointGroupsListEndpointsRequest.HealthStatus.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        SHOW: NetworkEndpointGroupsListEndpointsRequest.HealthStatus.ValueType = ...  # 2544381
        """Show the health status for each network endpoint. Impacts latency of the call."""

        SKIP: NetworkEndpointGroupsListEndpointsRequest.HealthStatus.ValueType = ...  # 2547071
        """Health status for network endpoints will not be provided."""

    class HealthStatus(_HealthStatus, metaclass=_HealthStatusEnumTypeWrapper):
        """Optional query parameter for showing the health status of each network endpoint. Valid options are SKIP or SHOW. If you don't specify this parameter, the health status of network endpoints will not be provided."""
        pass

    UNDEFINED_HEALTH_STATUS: NetworkEndpointGroupsListEndpointsRequest.HealthStatus.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    SHOW: NetworkEndpointGroupsListEndpointsRequest.HealthStatus.ValueType = ...  # 2544381
    """Show the health status for each network endpoint. Impacts latency of the call."""

    SKIP: NetworkEndpointGroupsListEndpointsRequest.HealthStatus.ValueType = ...  # 2547071
    """Health status for network endpoints will not be provided."""


    HEALTH_STATUS_FIELD_NUMBER: builtins.int
    health_status: typing.Text = ...
    """Optional query parameter for showing the health status of each network endpoint. Valid options are SKIP or SHOW. If you don't specify this parameter, the health status of network endpoints will not be provided.
    Check the HealthStatus enum for the list of possible values.
    """

    def __init__(self,
        *,
        health_status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_health_status",b"_health_status","health_status",b"health_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_health_status",b"_health_status","health_status",b"health_status"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_health_status",b"_health_status"]) -> typing.Optional[typing_extensions.Literal["health_status"]]: ...
global___NetworkEndpointGroupsListEndpointsRequest = NetworkEndpointGroupsListEndpointsRequest

class NetworkEndpointGroupsListNetworkEndpoints(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkEndpointWithHealthStatus]:
        """A list of NetworkEndpointWithHealthStatus resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#networkEndpointGroupsListNetworkEndpoints for the list of network endpoints in the specified network endpoint group."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___NetworkEndpointWithHealthStatus]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NetworkEndpointGroupsListNetworkEndpoints = NetworkEndpointGroupsListNetworkEndpoints

class NetworkEndpointGroupsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_ENDPOINT_GROUPS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def network_endpoint_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworkEndpointGroup]:
        """[Output Only] The list of network endpoint groups that are contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] An informational warning that replaces the list of network endpoint groups when the list is empty."""
        pass
    def __init__(self,
        *,
        network_endpoint_groups : typing.Optional[typing.Iterable[global___NetworkEndpointGroup]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","network_endpoint_groups",b"network_endpoint_groups","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NetworkEndpointGroupsScopedList = NetworkEndpointGroupsScopedList

class NetworkEndpointWithHealthStatus(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTHS_FIELD_NUMBER: builtins.int
    NETWORK_ENDPOINT_FIELD_NUMBER: builtins.int
    @property
    def healths(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HealthStatusForNetworkEndpoint]:
        """[Output only] The health status of network endpoint;"""
        pass
    @property
    def network_endpoint(self) -> global___NetworkEndpoint:
        """[Output only] The network endpoint;"""
        pass
    def __init__(self,
        *,
        healths : typing.Optional[typing.Iterable[global___HealthStatusForNetworkEndpoint]] = ...,
        network_endpoint : typing.Optional[global___NetworkEndpoint] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_network_endpoint",b"_network_endpoint","network_endpoint",b"network_endpoint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_network_endpoint",b"_network_endpoint","healths",b"healths","network_endpoint",b"network_endpoint"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_endpoint",b"_network_endpoint"]) -> typing.Optional[typing_extensions.Literal["network_endpoint"]]: ...
global___NetworkEndpointWithHealthStatus = NetworkEndpointWithHealthStatus

class NetworkInterface(google.protobuf.message.Message):
    """A network interface resource attached to an instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Ipv6AccessType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _Ipv6AccessTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Ipv6AccessType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_IPV6_ACCESS_TYPE: NetworkInterface.Ipv6AccessType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        EXTERNAL: NetworkInterface.Ipv6AccessType.ValueType = ...  # 35607499
        """This network interface can have external IPv6."""

        UNSPECIFIED_IPV6_ACCESS_TYPE: NetworkInterface.Ipv6AccessType.ValueType = ...  # 313080613
        """IPv6 access type not set. Means this network interface hasn't been turned on IPv6 yet."""

    class Ipv6AccessType(_Ipv6AccessType, metaclass=_Ipv6AccessTypeEnumTypeWrapper):
        """[Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork. Valid only if stackType is IPV4_IPV6."""
        pass

    UNDEFINED_IPV6_ACCESS_TYPE: NetworkInterface.Ipv6AccessType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    EXTERNAL: NetworkInterface.Ipv6AccessType.ValueType = ...  # 35607499
    """This network interface can have external IPv6."""

    UNSPECIFIED_IPV6_ACCESS_TYPE: NetworkInterface.Ipv6AccessType.ValueType = ...  # 313080613
    """IPv6 access type not set. Means this network interface hasn't been turned on IPv6 yet."""


    class _NicType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NicTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NicType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_NIC_TYPE: NetworkInterface.NicType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        GVNIC: NetworkInterface.NicType.ValueType = ...  # 68209305
        """GVNIC"""

        UNSPECIFIED_NIC_TYPE: NetworkInterface.NicType.ValueType = ...  # 67411801
        """No type specified."""

        VIRTIO_NET: NetworkInterface.NicType.ValueType = ...  # 452123481
        """VIRTIO"""

    class NicType(_NicType, metaclass=_NicTypeEnumTypeWrapper):
        """The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet."""
        pass

    UNDEFINED_NIC_TYPE: NetworkInterface.NicType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    GVNIC: NetworkInterface.NicType.ValueType = ...  # 68209305
    """GVNIC"""

    UNSPECIFIED_NIC_TYPE: NetworkInterface.NicType.ValueType = ...  # 67411801
    """No type specified."""

    VIRTIO_NET: NetworkInterface.NicType.ValueType = ...  # 452123481
    """VIRTIO"""


    class _StackType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StackTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_StackType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STACK_TYPE: NetworkInterface.StackType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        IPV4_IPV6: NetworkInterface.StackType.ValueType = ...  # 22197249
        """The network interface can have both IPv4 and IPv6 addresses."""

        IPV4_ONLY: NetworkInterface.StackType.ValueType = ...  # 22373798
        """The network interface will be assigned IPv4 address."""

        UNSPECIFIED_STACK_TYPE: NetworkInterface.StackType.ValueType = ...  # 298084569
    class StackType(_StackType, metaclass=_StackTypeEnumTypeWrapper):
        """The stack type for this network interface to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used. This field can be both set at instance creation and update network interface operations."""
        pass

    UNDEFINED_STACK_TYPE: NetworkInterface.StackType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    IPV4_IPV6: NetworkInterface.StackType.ValueType = ...  # 22197249
    """The network interface can have both IPv4 and IPv6 addresses."""

    IPV4_ONLY: NetworkInterface.StackType.ValueType = ...  # 22373798
    """The network interface will be assigned IPv4 address."""

    UNSPECIFIED_STACK_TYPE: NetworkInterface.StackType.ValueType = ...  # 298084569

    ACCESS_CONFIGS_FIELD_NUMBER: builtins.int
    ALIAS_IP_RANGES_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    IPV6_ACCESS_CONFIGS_FIELD_NUMBER: builtins.int
    IPV6_ACCESS_TYPE_FIELD_NUMBER: builtins.int
    IPV6_ADDRESS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    NETWORK_I_P_FIELD_NUMBER: builtins.int
    NIC_TYPE_FIELD_NUMBER: builtins.int
    QUEUE_COUNT_FIELD_NUMBER: builtins.int
    STACK_TYPE_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    @property
    def access_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AccessConfig]:
        """An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access."""
        pass
    @property
    def alias_ip_ranges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AliasIpRange]:
        """An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks."""
        pass
    fingerprint: typing.Text = ...
    """Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface. The request will fail with error 400 Bad Request if the fingerprint is not provided, or 412 Precondition Failed if the fingerprint is out of date."""

    @property
    def ipv6_access_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AccessConfig]:
        """An array of IPv6 access configurations for this interface. Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig specified, then this instance will have no external IPv6 Internet access."""
        pass
    ipv6_access_type: typing.Text = ...
    """[Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork. Valid only if stackType is IPV4_IPV6.
    Check the Ipv6AccessType enum for the list of possible values.
    """

    ipv6_address: typing.Text = ...
    """[Output Only] An IPv6 internal network address for this network interface."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#networkInterface for network interfaces."""

    name: typing.Text = ...
    """[Output Only] The name of the network interface, which is generated by the server. For network devices, these are eth0, eth1, etc."""

    network: typing.Text = ...
    """URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred. If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/global/networks/ network - projects/project/global/networks/network - global/networks/default"""

    network_i_p: typing.Text = ...
    """An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system."""

    nic_type: typing.Text = ...
    """The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
    Check the NicType enum for the list of possible values.
    """

    queue_count: builtins.int = ...
    """The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It'll be empty if not specified by the users."""

    stack_type: typing.Text = ...
    """The stack type for this network interface to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used. This field can be both set at instance creation and update network interface operations.
    Check the StackType enum for the list of possible values.
    """

    subnetwork: typing.Text = ...
    """The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/regions/region /subnetworks/subnetwork - regions/region/subnetworks/subnetwork"""

    def __init__(self,
        *,
        access_configs : typing.Optional[typing.Iterable[global___AccessConfig]] = ...,
        alias_ip_ranges : typing.Optional[typing.Iterable[global___AliasIpRange]] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        ipv6_access_configs : typing.Optional[typing.Iterable[global___AccessConfig]] = ...,
        ipv6_access_type : typing.Optional[typing.Text] = ...,
        ipv6_address : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        network_i_p : typing.Optional[typing.Text] = ...,
        nic_type : typing.Optional[typing.Text] = ...,
        queue_count : typing.Optional[builtins.int] = ...,
        stack_type : typing.Optional[typing.Text] = ...,
        subnetwork : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","_ipv6_access_type",b"_ipv6_access_type","_ipv6_address",b"_ipv6_address","_kind",b"_kind","_name",b"_name","_network",b"_network","_network_i_p",b"_network_i_p","_nic_type",b"_nic_type","_queue_count",b"_queue_count","_stack_type",b"_stack_type","_subnetwork",b"_subnetwork","fingerprint",b"fingerprint","ipv6_access_type",b"ipv6_access_type","ipv6_address",b"ipv6_address","kind",b"kind","name",b"name","network",b"network","network_i_p",b"network_i_p","nic_type",b"nic_type","queue_count",b"queue_count","stack_type",b"stack_type","subnetwork",b"subnetwork"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","_ipv6_access_type",b"_ipv6_access_type","_ipv6_address",b"_ipv6_address","_kind",b"_kind","_name",b"_name","_network",b"_network","_network_i_p",b"_network_i_p","_nic_type",b"_nic_type","_queue_count",b"_queue_count","_stack_type",b"_stack_type","_subnetwork",b"_subnetwork","access_configs",b"access_configs","alias_ip_ranges",b"alias_ip_ranges","fingerprint",b"fingerprint","ipv6_access_configs",b"ipv6_access_configs","ipv6_access_type",b"ipv6_access_type","ipv6_address",b"ipv6_address","kind",b"kind","name",b"name","network",b"network","network_i_p",b"network_i_p","nic_type",b"nic_type","queue_count",b"queue_count","stack_type",b"stack_type","subnetwork",b"subnetwork"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ipv6_access_type",b"_ipv6_access_type"]) -> typing.Optional[typing_extensions.Literal["ipv6_access_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ipv6_address",b"_ipv6_address"]) -> typing.Optional[typing_extensions.Literal["ipv6_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_i_p",b"_network_i_p"]) -> typing.Optional[typing_extensions.Literal["network_i_p"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_nic_type",b"_nic_type"]) -> typing.Optional[typing_extensions.Literal["nic_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_queue_count",b"_queue_count"]) -> typing.Optional[typing_extensions.Literal["queue_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_stack_type",b"_stack_type"]) -> typing.Optional[typing_extensions.Literal["stack_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_subnetwork",b"_subnetwork"]) -> typing.Optional[typing_extensions.Literal["subnetwork"]]: ...
global___NetworkInterface = NetworkInterface

class NetworkList(google.protobuf.message.Message):
    """Contains a list of networks."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Network]:
        """A list of Network resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#networkList for lists of networks."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Network]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NetworkList = NetworkList

class NetworkPeering(google.protobuf.message.Message):
    """A network peering attached to a network resource. The message includes the peering name, peer network, peering state, and a flag indicating whether Google Compute Engine should automatically create routes for the peering."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: NetworkPeering.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: NetworkPeering.State.ValueType = ...  # 314733318
        """Matching configuration exists on the peer."""

        INACTIVE: NetworkPeering.State.ValueType = ...  # 270421099
        """There is no matching configuration on the peer, including the case when peer does not exist."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """[Output Only] State for the peering, either `ACTIVE` or `INACTIVE`. The peering is `ACTIVE` when there's a matching configuration in the peer network."""
        pass

    UNDEFINED_STATE: NetworkPeering.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: NetworkPeering.State.ValueType = ...  # 314733318
    """Matching configuration exists on the peer."""

    INACTIVE: NetworkPeering.State.ValueType = ...  # 270421099
    """There is no matching configuration on the peer, including the case when peer does not exist."""


    AUTO_CREATE_ROUTES_FIELD_NUMBER: builtins.int
    EXCHANGE_SUBNET_ROUTES_FIELD_NUMBER: builtins.int
    EXPORT_CUSTOM_ROUTES_FIELD_NUMBER: builtins.int
    EXPORT_SUBNET_ROUTES_WITH_PUBLIC_IP_FIELD_NUMBER: builtins.int
    IMPORT_CUSTOM_ROUTES_FIELD_NUMBER: builtins.int
    IMPORT_SUBNET_ROUTES_WITH_PUBLIC_IP_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    PEER_MTU_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    STATE_DETAILS_FIELD_NUMBER: builtins.int
    auto_create_routes: builtins.bool = ...
    """This field will be deprecated soon. Use the exchange_subnet_routes field instead. Indicates whether full mesh connectivity is created and managed automatically between peered networks. Currently this field should always be true since Google Compute Engine will automatically create and manage subnetwork routes between two networks when peering state is ACTIVE."""

    exchange_subnet_routes: builtins.bool = ...
    """Indicates whether full mesh connectivity is created and managed automatically between peered networks. Currently this field should always be true since Google Compute Engine will automatically create and manage subnetwork routes between two networks when peering state is ACTIVE."""

    export_custom_routes: builtins.bool = ...
    """Whether to export the custom routes to peer network."""

    export_subnet_routes_with_public_ip: builtins.bool = ...
    """Whether subnet routes with public IP range are exported. The default value is true, all subnet routes are exported. IPv4 special-use ranges are always exported to peers and are not controlled by this field."""

    import_custom_routes: builtins.bool = ...
    """Whether to import the custom routes from peer network."""

    import_subnet_routes_with_public_ip: builtins.bool = ...
    """Whether subnet routes with public IP range are imported. The default value is false. IPv4 special-use ranges are always imported from peers and are not controlled by this field."""

    name: typing.Text = ...
    """Name of this peering. Provided by the client when the peering is created. The name must comply with RFC1035. Specifically, the name must be 1-63 characters long and match regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all the following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    network: typing.Text = ...
    """The URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a different project. If the partial URL does not contain project, it is assumed that the peer network is in the same project as the current network."""

    peer_mtu: builtins.int = ...
    """Maximum Transmission Unit in bytes."""

    state: typing.Text = ...
    """[Output Only] State for the peering, either `ACTIVE` or `INACTIVE`. The peering is `ACTIVE` when there's a matching configuration in the peer network.
    Check the State enum for the list of possible values.
    """

    state_details: typing.Text = ...
    """[Output Only] Details about the current state of the peering."""

    def __init__(self,
        *,
        auto_create_routes : typing.Optional[builtins.bool] = ...,
        exchange_subnet_routes : typing.Optional[builtins.bool] = ...,
        export_custom_routes : typing.Optional[builtins.bool] = ...,
        export_subnet_routes_with_public_ip : typing.Optional[builtins.bool] = ...,
        import_custom_routes : typing.Optional[builtins.bool] = ...,
        import_subnet_routes_with_public_ip : typing.Optional[builtins.bool] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        peer_mtu : typing.Optional[builtins.int] = ...,
        state : typing.Optional[typing.Text] = ...,
        state_details : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_auto_create_routes",b"_auto_create_routes","_exchange_subnet_routes",b"_exchange_subnet_routes","_export_custom_routes",b"_export_custom_routes","_export_subnet_routes_with_public_ip",b"_export_subnet_routes_with_public_ip","_import_custom_routes",b"_import_custom_routes","_import_subnet_routes_with_public_ip",b"_import_subnet_routes_with_public_ip","_name",b"_name","_network",b"_network","_peer_mtu",b"_peer_mtu","_state",b"_state","_state_details",b"_state_details","auto_create_routes",b"auto_create_routes","exchange_subnet_routes",b"exchange_subnet_routes","export_custom_routes",b"export_custom_routes","export_subnet_routes_with_public_ip",b"export_subnet_routes_with_public_ip","import_custom_routes",b"import_custom_routes","import_subnet_routes_with_public_ip",b"import_subnet_routes_with_public_ip","name",b"name","network",b"network","peer_mtu",b"peer_mtu","state",b"state","state_details",b"state_details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_auto_create_routes",b"_auto_create_routes","_exchange_subnet_routes",b"_exchange_subnet_routes","_export_custom_routes",b"_export_custom_routes","_export_subnet_routes_with_public_ip",b"_export_subnet_routes_with_public_ip","_import_custom_routes",b"_import_custom_routes","_import_subnet_routes_with_public_ip",b"_import_subnet_routes_with_public_ip","_name",b"_name","_network",b"_network","_peer_mtu",b"_peer_mtu","_state",b"_state","_state_details",b"_state_details","auto_create_routes",b"auto_create_routes","exchange_subnet_routes",b"exchange_subnet_routes","export_custom_routes",b"export_custom_routes","export_subnet_routes_with_public_ip",b"export_subnet_routes_with_public_ip","import_custom_routes",b"import_custom_routes","import_subnet_routes_with_public_ip",b"import_subnet_routes_with_public_ip","name",b"name","network",b"network","peer_mtu",b"peer_mtu","state",b"state","state_details",b"state_details"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_auto_create_routes",b"_auto_create_routes"]) -> typing.Optional[typing_extensions.Literal["auto_create_routes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_exchange_subnet_routes",b"_exchange_subnet_routes"]) -> typing.Optional[typing_extensions.Literal["exchange_subnet_routes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_export_custom_routes",b"_export_custom_routes"]) -> typing.Optional[typing_extensions.Literal["export_custom_routes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_export_subnet_routes_with_public_ip",b"_export_subnet_routes_with_public_ip"]) -> typing.Optional[typing_extensions.Literal["export_subnet_routes_with_public_ip"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_import_custom_routes",b"_import_custom_routes"]) -> typing.Optional[typing_extensions.Literal["import_custom_routes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_import_subnet_routes_with_public_ip",b"_import_subnet_routes_with_public_ip"]) -> typing.Optional[typing_extensions.Literal["import_subnet_routes_with_public_ip"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_mtu",b"_peer_mtu"]) -> typing.Optional[typing_extensions.Literal["peer_mtu"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state_details",b"_state_details"]) -> typing.Optional[typing_extensions.Literal["state_details"]]: ...
global___NetworkPeering = NetworkPeering

class NetworkRoutingConfig(google.protobuf.message.Message):
    """A routing configuration attached to a network resource. The message includes the list of routers associated with the network, and a flag indicating the type of routing behavior to enforce network-wide."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RoutingMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RoutingModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RoutingMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ROUTING_MODE: NetworkRoutingConfig.RoutingMode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        GLOBAL: NetworkRoutingConfig.RoutingMode.ValueType = ...  # 494663587
        REGIONAL: NetworkRoutingConfig.RoutingMode.ValueType = ...  # 92288543
    class RoutingMode(_RoutingMode, metaclass=_RoutingModeEnumTypeWrapper):
        """The network-wide routing mode to use. If set to REGIONAL, this network's Cloud Routers will only advertise routes with subnets of this network in the same region as the router. If set to GLOBAL, this network's Cloud Routers will advertise routes with all subnets of this network, across regions."""
        pass

    UNDEFINED_ROUTING_MODE: NetworkRoutingConfig.RoutingMode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    GLOBAL: NetworkRoutingConfig.RoutingMode.ValueType = ...  # 494663587
    REGIONAL: NetworkRoutingConfig.RoutingMode.ValueType = ...  # 92288543

    ROUTING_MODE_FIELD_NUMBER: builtins.int
    routing_mode: typing.Text = ...
    """The network-wide routing mode to use. If set to REGIONAL, this network's Cloud Routers will only advertise routes with subnets of this network in the same region as the router. If set to GLOBAL, this network's Cloud Routers will advertise routes with all subnets of this network, across regions.
    Check the RoutingMode enum for the list of possible values.
    """

    def __init__(self,
        *,
        routing_mode : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_routing_mode",b"_routing_mode","routing_mode",b"routing_mode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_routing_mode",b"_routing_mode","routing_mode",b"routing_mode"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_routing_mode",b"_routing_mode"]) -> typing.Optional[typing_extensions.Literal["routing_mode"]]: ...
global___NetworkRoutingConfig = NetworkRoutingConfig

class NetworksAddPeeringRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTO_CREATE_ROUTES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_PEERING_FIELD_NUMBER: builtins.int
    PEER_NETWORK_FIELD_NUMBER: builtins.int
    auto_create_routes: builtins.bool = ...
    """This field will be deprecated soon. Use exchange_subnet_routes in network_peering instead. Indicates whether full mesh connectivity is created and managed automatically between peered networks. Currently this field should always be true since Google Compute Engine will automatically create and manage subnetwork routes between two networks when peering state is ACTIVE."""

    name: typing.Text = ...
    """Name of the peering, which should conform to RFC1035."""

    @property
    def network_peering(self) -> global___NetworkPeering:
        """Network peering parameters. In order to specify route policies for peering using import and export custom routes, you must specify all peering related parameters (name, peer network, exchange_subnet_routes) in the network_peering field. The corresponding fields in NetworksAddPeeringRequest will be deprecated soon."""
        pass
    peer_network: typing.Text = ...
    """URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a different project. If the partial URL does not contain project, it is assumed that the peer network is in the same project as the current network."""

    def __init__(self,
        *,
        auto_create_routes : typing.Optional[builtins.bool] = ...,
        name : typing.Optional[typing.Text] = ...,
        network_peering : typing.Optional[global___NetworkPeering] = ...,
        peer_network : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_auto_create_routes",b"_auto_create_routes","_name",b"_name","_network_peering",b"_network_peering","_peer_network",b"_peer_network","auto_create_routes",b"auto_create_routes","name",b"name","network_peering",b"network_peering","peer_network",b"peer_network"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_auto_create_routes",b"_auto_create_routes","_name",b"_name","_network_peering",b"_network_peering","_peer_network",b"_peer_network","auto_create_routes",b"auto_create_routes","name",b"name","network_peering",b"network_peering","peer_network",b"peer_network"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_auto_create_routes",b"_auto_create_routes"]) -> typing.Optional[typing_extensions.Literal["auto_create_routes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_peering",b"_network_peering"]) -> typing.Optional[typing_extensions.Literal["network_peering"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_network",b"_peer_network"]) -> typing.Optional[typing_extensions.Literal["peer_network"]]: ...
global___NetworksAddPeeringRequest = NetworksAddPeeringRequest

class NetworksGetEffectiveFirewallsResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICYS_FIELD_NUMBER: builtins.int
    FIREWALLS_FIELD_NUMBER: builtins.int
    @property
    def firewall_policys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy]:
        """Effective firewalls from firewall policy."""
        pass
    @property
    def firewalls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Firewall]:
        """Effective firewalls on the network."""
        pass
    def __init__(self,
        *,
        firewall_policys : typing.Optional[typing.Iterable[global___NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy]] = ...,
        firewalls : typing.Optional[typing.Iterable[global___Firewall]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["firewall_policys",b"firewall_policys","firewalls",b"firewalls"]) -> None: ...
global___NetworksGetEffectiveFirewallsResponse = NetworksGetEffectiveFirewallsResponse

class NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        HIERARCHY: NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 69902869
        NETWORK: NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 413984270
        UNSPECIFIED: NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 526786327
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """[Output Only] The type of the firewall policy."""
        pass

    UNDEFINED_TYPE: NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    HIERARCHY: NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 69902869
    NETWORK: NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 413984270
    UNSPECIFIED: NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy.Type.ValueType = ...  # 526786327

    DISPLAY_NAME_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    SHORT_NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    display_name: typing.Text = ...
    """[Output Only] Deprecated, please use short name instead. The display name of the firewall policy."""

    name: typing.Text = ...
    """[Output Only] The name of the firewall policy."""

    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FirewallPolicyRule]:
        """The rules that apply to the network."""
        pass
    short_name: typing.Text = ...
    """[Output Only] The short name of the firewall policy."""

    type: typing.Text = ...
    """[Output Only] The type of the firewall policy.
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        display_name : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        rules : typing.Optional[typing.Iterable[global___FirewallPolicyRule]] = ...,
        short_name : typing.Optional[typing.Text] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_display_name",b"_display_name","_name",b"_name","_short_name",b"_short_name","_type",b"_type","display_name",b"display_name","name",b"name","short_name",b"short_name","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_display_name",b"_display_name","_name",b"_name","_short_name",b"_short_name","_type",b"_type","display_name",b"display_name","name",b"name","rules",b"rules","short_name",b"short_name","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_display_name",b"_display_name"]) -> typing.Optional[typing_extensions.Literal["display_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_short_name",b"_short_name"]) -> typing.Optional[typing_extensions.Literal["short_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy = NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy

class NetworksRemovePeeringRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Name of the peering, which should conform to RFC1035."""

    def __init__(self,
        *,
        name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","name",b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
global___NetworksRemovePeeringRequest = NetworksRemovePeeringRequest

class NetworksUpdatePeeringRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_PEERING_FIELD_NUMBER: builtins.int
    @property
    def network_peering(self) -> global___NetworkPeering: ...
    def __init__(self,
        *,
        network_peering : typing.Optional[global___NetworkPeering] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_network_peering",b"_network_peering","network_peering",b"network_peering"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_network_peering",b"_network_peering","network_peering",b"network_peering"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_peering",b"_network_peering"]) -> typing.Optional[typing_extensions.Literal["network_peering"]]: ...
global___NetworksUpdatePeeringRequest = NetworksUpdatePeeringRequest

class NodeGroup(google.protobuf.message.Message):
    """Represents a sole-tenant Node Group resource. A sole-tenant node is a physical server that is dedicated to hosting VM instances only for your specific project. Use sole-tenant nodes to keep your instances physically separated from instances in other projects, or to group your instances together on the same host hardware. For more information, read Sole-tenant nodes."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _MaintenancePolicy:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MaintenancePolicyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MaintenancePolicy.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_MAINTENANCE_POLICY: NodeGroup.MaintenancePolicy.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DEFAULT: NodeGroup.MaintenancePolicy.ValueType = ...  # 115302945
        """Allow the node and corresponding instances to retain default maintenance behavior."""

        MAINTENANCE_POLICY_UNSPECIFIED: NodeGroup.MaintenancePolicy.ValueType = ...  # 72964182
        MIGRATE_WITHIN_NODE_GROUP: NodeGroup.MaintenancePolicy.ValueType = ...  # 153483394
        """When maintenance must be done on a node, the instances on that node will be moved to other nodes in the group. Instances with onHostMaintenance = MIGRATE will live migrate to their destinations while instances with onHostMaintenance = TERMINATE will terminate and then restart on their destination nodes if automaticRestart = true."""

        RESTART_IN_PLACE: NodeGroup.MaintenancePolicy.ValueType = ...  # 228647325
        """Instances in this group will restart on the same node when maintenance has completed. Instances must have onHostMaintenance = TERMINATE, and they will only restart if automaticRestart = true."""

    class MaintenancePolicy(_MaintenancePolicy, metaclass=_MaintenancePolicyEnumTypeWrapper):
        """Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies."""
        pass

    UNDEFINED_MAINTENANCE_POLICY: NodeGroup.MaintenancePolicy.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DEFAULT: NodeGroup.MaintenancePolicy.ValueType = ...  # 115302945
    """Allow the node and corresponding instances to retain default maintenance behavior."""

    MAINTENANCE_POLICY_UNSPECIFIED: NodeGroup.MaintenancePolicy.ValueType = ...  # 72964182
    MIGRATE_WITHIN_NODE_GROUP: NodeGroup.MaintenancePolicy.ValueType = ...  # 153483394
    """When maintenance must be done on a node, the instances on that node will be moved to other nodes in the group. Instances with onHostMaintenance = MIGRATE will live migrate to their destinations while instances with onHostMaintenance = TERMINATE will terminate and then restart on their destination nodes if automaticRestart = true."""

    RESTART_IN_PLACE: NodeGroup.MaintenancePolicy.ValueType = ...  # 228647325
    """Instances in this group will restart on the same node when maintenance has completed. Instances must have onHostMaintenance = TERMINATE, and they will only restart if automaticRestart = true."""


    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: NodeGroup.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CREATING: NodeGroup.Status.ValueType = ...  # 455564985
        DELETING: NodeGroup.Status.ValueType = ...  # 528602024
        INVALID: NodeGroup.Status.ValueType = ...  # 530283991
        READY: NodeGroup.Status.ValueType = ...  # 77848963
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_STATUS: NodeGroup.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CREATING: NodeGroup.Status.ValueType = ...  # 455564985
    DELETING: NodeGroup.Status.ValueType = ...  # 528602024
    INVALID: NodeGroup.Status.ValueType = ...  # 530283991
    READY: NodeGroup.Status.ValueType = ...  # 77848963

    AUTOSCALING_POLICY_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LOCATION_HINT_FIELD_NUMBER: builtins.int
    MAINTENANCE_POLICY_FIELD_NUMBER: builtins.int
    MAINTENANCE_WINDOW_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NODE_TEMPLATE_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def autoscaling_policy(self) -> global___NodeGroupAutoscalingPolicy:
        """Specifies how autoscaling should behave."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    fingerprint: typing.Text = ...
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] The type of the resource. Always compute#nodeGroup for node group."""

    location_hint: typing.Text = ...
    """An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate."""

    maintenance_policy: typing.Text = ...
    """Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies.
    Check the MaintenancePolicy enum for the list of possible values.
    """

    @property
    def maintenance_window(self) -> global___NodeGroupMaintenanceWindow: ...
    name: typing.Text = ...
    """The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    node_template: typing.Text = ...
    """URL of the node template to create the node group from."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    size: builtins.int = ...
    """[Output Only] The total number of nodes in the node group."""

    status: typing.Text = ...
    """
    Check the Status enum for the list of possible values.
    """

    zone: typing.Text = ...
    """[Output Only] The name of the zone where the node group resides, such as us-central1-a."""

    def __init__(self,
        *,
        autoscaling_policy : typing.Optional[global___NodeGroupAutoscalingPolicy] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        location_hint : typing.Optional[typing.Text] = ...,
        maintenance_policy : typing.Optional[typing.Text] = ...,
        maintenance_window : typing.Optional[global___NodeGroupMaintenanceWindow] = ...,
        name : typing.Optional[typing.Text] = ...,
        node_template : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        size : typing.Optional[builtins.int] = ...,
        status : typing.Optional[typing.Text] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_autoscaling_policy",b"_autoscaling_policy","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_location_hint",b"_location_hint","_maintenance_policy",b"_maintenance_policy","_maintenance_window",b"_maintenance_window","_name",b"_name","_node_template",b"_node_template","_self_link",b"_self_link","_size",b"_size","_status",b"_status","_zone",b"_zone","autoscaling_policy",b"autoscaling_policy","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","location_hint",b"location_hint","maintenance_policy",b"maintenance_policy","maintenance_window",b"maintenance_window","name",b"name","node_template",b"node_template","self_link",b"self_link","size",b"size","status",b"status","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_autoscaling_policy",b"_autoscaling_policy","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_location_hint",b"_location_hint","_maintenance_policy",b"_maintenance_policy","_maintenance_window",b"_maintenance_window","_name",b"_name","_node_template",b"_node_template","_self_link",b"_self_link","_size",b"_size","_status",b"_status","_zone",b"_zone","autoscaling_policy",b"autoscaling_policy","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","location_hint",b"location_hint","maintenance_policy",b"maintenance_policy","maintenance_window",b"maintenance_window","name",b"name","node_template",b"node_template","self_link",b"self_link","size",b"size","status",b"status","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_autoscaling_policy",b"_autoscaling_policy"]) -> typing.Optional[typing_extensions.Literal["autoscaling_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_location_hint",b"_location_hint"]) -> typing.Optional[typing_extensions.Literal["location_hint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_maintenance_policy",b"_maintenance_policy"]) -> typing.Optional[typing_extensions.Literal["maintenance_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_maintenance_window",b"_maintenance_window"]) -> typing.Optional[typing_extensions.Literal["maintenance_window"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_node_template",b"_node_template"]) -> typing.Optional[typing_extensions.Literal["node_template"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_size",b"_size"]) -> typing.Optional[typing_extensions.Literal["size"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___NodeGroup = NodeGroup

class NodeGroupAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___NodeGroupsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___NodeGroupsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___NodeGroupsScopedList]:
        """A list of NodeGroupsScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource.Always compute#nodeGroupAggregatedList for aggregated lists of node groups."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___NodeGroupsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NodeGroupAggregatedList = NodeGroupAggregatedList

class NodeGroupAutoscalingPolicy(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Mode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_MODE: NodeGroupAutoscalingPolicy.Mode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        MODE_UNSPECIFIED: NodeGroupAutoscalingPolicy.Mode.ValueType = ...  # 371348091
        OFF: NodeGroupAutoscalingPolicy.Mode.ValueType = ...  # 78159
        """Autoscaling is disabled."""

        ON: NodeGroupAutoscalingPolicy.Mode.ValueType = ...  # 2527
        """Autocaling is fully enabled."""

        ONLY_SCALE_OUT: NodeGroupAutoscalingPolicy.Mode.ValueType = ...  # 152713670
        """Autoscaling will only scale out and will not remove nodes."""

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper):
        """The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes."""
        pass

    UNDEFINED_MODE: NodeGroupAutoscalingPolicy.Mode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    MODE_UNSPECIFIED: NodeGroupAutoscalingPolicy.Mode.ValueType = ...  # 371348091
    OFF: NodeGroupAutoscalingPolicy.Mode.ValueType = ...  # 78159
    """Autoscaling is disabled."""

    ON: NodeGroupAutoscalingPolicy.Mode.ValueType = ...  # 2527
    """Autocaling is fully enabled."""

    ONLY_SCALE_OUT: NodeGroupAutoscalingPolicy.Mode.ValueType = ...  # 152713670
    """Autoscaling will only scale out and will not remove nodes."""


    MAX_NODES_FIELD_NUMBER: builtins.int
    MIN_NODES_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    max_nodes: builtins.int = ...
    """The maximum number of nodes that the group should have. Must be set if autoscaling is enabled. Maximum value allowed is 100."""

    min_nodes: builtins.int = ...
    """The minimum number of nodes that the group should have."""

    mode: typing.Text = ...
    """The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more information, see Autoscaler modes.
    Check the Mode enum for the list of possible values.
    """

    def __init__(self,
        *,
        max_nodes : typing.Optional[builtins.int] = ...,
        min_nodes : typing.Optional[builtins.int] = ...,
        mode : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_max_nodes",b"_max_nodes","_min_nodes",b"_min_nodes","_mode",b"_mode","max_nodes",b"max_nodes","min_nodes",b"min_nodes","mode",b"mode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_max_nodes",b"_max_nodes","_min_nodes",b"_min_nodes","_mode",b"_mode","max_nodes",b"max_nodes","min_nodes",b"min_nodes","mode",b"mode"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_nodes",b"_max_nodes"]) -> typing.Optional[typing_extensions.Literal["max_nodes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_nodes",b"_min_nodes"]) -> typing.Optional[typing_extensions.Literal["min_nodes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mode",b"_mode"]) -> typing.Optional[typing_extensions.Literal["mode"]]: ...
global___NodeGroupAutoscalingPolicy = NodeGroupAutoscalingPolicy

class NodeGroupList(google.protobuf.message.Message):
    """Contains a list of nodeGroups."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeGroup]:
        """A list of NodeGroup resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource.Always compute#nodeGroupList for lists of node groups."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___NodeGroup]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NodeGroupList = NodeGroupList

class NodeGroupMaintenanceWindow(google.protobuf.message.Message):
    """Time window specified for daily maintenance operations. GCE's internal maintenance will be performed within this window."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MAINTENANCE_DURATION_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    @property
    def maintenance_duration(self) -> global___Duration:
        """[Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario."""
        pass
    start_time: typing.Text = ...
    """Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid."""

    def __init__(self,
        *,
        maintenance_duration : typing.Optional[global___Duration] = ...,
        start_time : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_maintenance_duration",b"_maintenance_duration","_start_time",b"_start_time","maintenance_duration",b"maintenance_duration","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_maintenance_duration",b"_maintenance_duration","_start_time",b"_start_time","maintenance_duration",b"maintenance_duration","start_time",b"start_time"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_maintenance_duration",b"_maintenance_duration"]) -> typing.Optional[typing_extensions.Literal["maintenance_duration"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_time",b"_start_time"]) -> typing.Optional[typing_extensions.Literal["start_time"]]: ...
global___NodeGroupMaintenanceWindow = NodeGroupMaintenanceWindow

class NodeGroupNode(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CpuOvercommitType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CpuOvercommitTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CpuOvercommitType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CPU_OVERCOMMIT_TYPE: NodeGroupNode.CpuOvercommitType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CPU_OVERCOMMIT_TYPE_UNSPECIFIED: NodeGroupNode.CpuOvercommitType.ValueType = ...  # 520665615
        ENABLED: NodeGroupNode.CpuOvercommitType.ValueType = ...  # 182130465
        NONE: NodeGroupNode.CpuOvercommitType.ValueType = ...  # 2402104
    class CpuOvercommitType(_CpuOvercommitType, metaclass=_CpuOvercommitTypeEnumTypeWrapper):
        """CPU overcommit."""
        pass

    UNDEFINED_CPU_OVERCOMMIT_TYPE: NodeGroupNode.CpuOvercommitType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CPU_OVERCOMMIT_TYPE_UNSPECIFIED: NodeGroupNode.CpuOvercommitType.ValueType = ...  # 520665615
    ENABLED: NodeGroupNode.CpuOvercommitType.ValueType = ...  # 182130465
    NONE: NodeGroupNode.CpuOvercommitType.ValueType = ...  # 2402104

    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: NodeGroupNode.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CREATING: NodeGroupNode.Status.ValueType = ...  # 455564985
        DELETING: NodeGroupNode.Status.ValueType = ...  # 528602024
        INVALID: NodeGroupNode.Status.ValueType = ...  # 530283991
        READY: NodeGroupNode.Status.ValueType = ...  # 77848963
        REPAIRING: NodeGroupNode.Status.ValueType = ...  # 413483285
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_STATUS: NodeGroupNode.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CREATING: NodeGroupNode.Status.ValueType = ...  # 455564985
    DELETING: NodeGroupNode.Status.ValueType = ...  # 528602024
    INVALID: NodeGroupNode.Status.ValueType = ...  # 530283991
    READY: NodeGroupNode.Status.ValueType = ...  # 77848963
    REPAIRING: NodeGroupNode.Status.ValueType = ...  # 413483285

    ACCELERATORS_FIELD_NUMBER: builtins.int
    CPU_OVERCOMMIT_TYPE_FIELD_NUMBER: builtins.int
    DISKS_FIELD_NUMBER: builtins.int
    INSTANCES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NODE_TYPE_FIELD_NUMBER: builtins.int
    SATISFIES_PZS_FIELD_NUMBER: builtins.int
    SERVER_BINDING_FIELD_NUMBER: builtins.int
    SERVER_ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def accelerators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AcceleratorConfig]:
        """Accelerators for this node."""
        pass
    cpu_overcommit_type: typing.Text = ...
    """CPU overcommit.
    Check the CpuOvercommitType enum for the list of possible values.
    """

    @property
    def disks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocalDisk]:
        """Local disk configurations."""
        pass
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Instances scheduled on this node."""
        pass
    name: typing.Text = ...
    """The name of the node."""

    node_type: typing.Text = ...
    """The type of this node."""

    satisfies_pzs: builtins.bool = ...
    """[Output Only] Reserved for future use."""

    @property
    def server_binding(self) -> global___ServerBinding:
        """Binding properties for the physical server."""
        pass
    server_id: typing.Text = ...
    """Server ID associated with this node."""

    status: typing.Text = ...
    """
    Check the Status enum for the list of possible values.
    """

    def __init__(self,
        *,
        accelerators : typing.Optional[typing.Iterable[global___AcceleratorConfig]] = ...,
        cpu_overcommit_type : typing.Optional[typing.Text] = ...,
        disks : typing.Optional[typing.Iterable[global___LocalDisk]] = ...,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        name : typing.Optional[typing.Text] = ...,
        node_type : typing.Optional[typing.Text] = ...,
        satisfies_pzs : typing.Optional[builtins.bool] = ...,
        server_binding : typing.Optional[global___ServerBinding] = ...,
        server_id : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cpu_overcommit_type",b"_cpu_overcommit_type","_name",b"_name","_node_type",b"_node_type","_satisfies_pzs",b"_satisfies_pzs","_server_binding",b"_server_binding","_server_id",b"_server_id","_status",b"_status","cpu_overcommit_type",b"cpu_overcommit_type","name",b"name","node_type",b"node_type","satisfies_pzs",b"satisfies_pzs","server_binding",b"server_binding","server_id",b"server_id","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cpu_overcommit_type",b"_cpu_overcommit_type","_name",b"_name","_node_type",b"_node_type","_satisfies_pzs",b"_satisfies_pzs","_server_binding",b"_server_binding","_server_id",b"_server_id","_status",b"_status","accelerators",b"accelerators","cpu_overcommit_type",b"cpu_overcommit_type","disks",b"disks","instances",b"instances","name",b"name","node_type",b"node_type","satisfies_pzs",b"satisfies_pzs","server_binding",b"server_binding","server_id",b"server_id","status",b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cpu_overcommit_type",b"_cpu_overcommit_type"]) -> typing.Optional[typing_extensions.Literal["cpu_overcommit_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_node_type",b"_node_type"]) -> typing.Optional[typing_extensions.Literal["node_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_satisfies_pzs",b"_satisfies_pzs"]) -> typing.Optional[typing_extensions.Literal["satisfies_pzs"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_server_binding",b"_server_binding"]) -> typing.Optional[typing_extensions.Literal["server_binding"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_server_id",b"_server_id"]) -> typing.Optional[typing_extensions.Literal["server_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___NodeGroupNode = NodeGroupNode

class NodeGroupsAddNodesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ADDITIONAL_NODE_COUNT_FIELD_NUMBER: builtins.int
    additional_node_count: builtins.int = ...
    """Count of additional nodes to be added to the node group."""

    def __init__(self,
        *,
        additional_node_count : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_additional_node_count",b"_additional_node_count","additional_node_count",b"additional_node_count"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_additional_node_count",b"_additional_node_count","additional_node_count",b"additional_node_count"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_additional_node_count",b"_additional_node_count"]) -> typing.Optional[typing_extensions.Literal["additional_node_count"]]: ...
global___NodeGroupsAddNodesRequest = NodeGroupsAddNodesRequest

class NodeGroupsDeleteNodesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODES_FIELD_NUMBER: builtins.int
    @property
    def nodes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Names of the nodes to delete."""
        pass
    def __init__(self,
        *,
        nodes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["nodes",b"nodes"]) -> None: ...
global___NodeGroupsDeleteNodesRequest = NodeGroupsDeleteNodesRequest

class NodeGroupsListNodes(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeGroupNode]:
        """A list of Node resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute.nodeGroupsListNodes for the list of nodes in the specified node group."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___NodeGroupNode]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NodeGroupsListNodes = NodeGroupsListNodes

class NodeGroupsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_GROUPS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def node_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeGroup]:
        """[Output Only] A list of node groups contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] An informational warning that appears when the nodeGroup list is empty."""
        pass
    def __init__(self,
        *,
        node_groups : typing.Optional[typing.Iterable[global___NodeGroup]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","node_groups",b"node_groups","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NodeGroupsScopedList = NodeGroupsScopedList

class NodeGroupsSetNodeTemplateRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_TEMPLATE_FIELD_NUMBER: builtins.int
    node_template: typing.Text = ...
    """Full or partial URL of the node template resource to be updated for this node group."""

    def __init__(self,
        *,
        node_template : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_node_template",b"_node_template","node_template",b"node_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_node_template",b"_node_template","node_template",b"node_template"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_node_template",b"_node_template"]) -> typing.Optional[typing_extensions.Literal["node_template"]]: ...
global___NodeGroupsSetNodeTemplateRequest = NodeGroupsSetNodeTemplateRequest

class NodeTemplate(google.protobuf.message.Message):
    """Represent a sole-tenant Node Template resource. You can use a template to define properties for nodes in a node group. For more information, read Creating node groups and instances."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CpuOvercommitType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CpuOvercommitTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CpuOvercommitType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CPU_OVERCOMMIT_TYPE: NodeTemplate.CpuOvercommitType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CPU_OVERCOMMIT_TYPE_UNSPECIFIED: NodeTemplate.CpuOvercommitType.ValueType = ...  # 520665615
        ENABLED: NodeTemplate.CpuOvercommitType.ValueType = ...  # 182130465
        NONE: NodeTemplate.CpuOvercommitType.ValueType = ...  # 2402104
    class CpuOvercommitType(_CpuOvercommitType, metaclass=_CpuOvercommitTypeEnumTypeWrapper):
        """CPU overcommit."""
        pass

    UNDEFINED_CPU_OVERCOMMIT_TYPE: NodeTemplate.CpuOvercommitType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CPU_OVERCOMMIT_TYPE_UNSPECIFIED: NodeTemplate.CpuOvercommitType.ValueType = ...  # 520665615
    ENABLED: NodeTemplate.CpuOvercommitType.ValueType = ...  # 182130465
    NONE: NodeTemplate.CpuOvercommitType.ValueType = ...  # 2402104

    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: NodeTemplate.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CREATING: NodeTemplate.Status.ValueType = ...  # 455564985
        """Resources are being allocated."""

        DELETING: NodeTemplate.Status.ValueType = ...  # 528602024
        """The node template is currently being deleted."""

        INVALID: NodeTemplate.Status.ValueType = ...  # 530283991
        """Invalid status."""

        READY: NodeTemplate.Status.ValueType = ...  # 77848963
        """The node template is ready."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the node template. One of the following values: CREATING, READY, and DELETING."""
        pass

    UNDEFINED_STATUS: NodeTemplate.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CREATING: NodeTemplate.Status.ValueType = ...  # 455564985
    """Resources are being allocated."""

    DELETING: NodeTemplate.Status.ValueType = ...  # 528602024
    """The node template is currently being deleted."""

    INVALID: NodeTemplate.Status.ValueType = ...  # 530283991
    """Invalid status."""

    READY: NodeTemplate.Status.ValueType = ...  # 77848963
    """The node template is ready."""


    class NodeAffinityLabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ACCELERATORS_FIELD_NUMBER: builtins.int
    CPU_OVERCOMMIT_TYPE_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISKS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NODE_AFFINITY_LABELS_FIELD_NUMBER: builtins.int
    NODE_TYPE_FIELD_NUMBER: builtins.int
    NODE_TYPE_FLEXIBILITY_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SERVER_BINDING_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def accelerators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AcceleratorConfig]: ...
    cpu_overcommit_type: typing.Text = ...
    """CPU overcommit.
    Check the CpuOvercommitType enum for the list of possible values.
    """

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    @property
    def disks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocalDisk]: ...
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] The type of the resource. Always compute#nodeTemplate for node templates."""

    name: typing.Text = ...
    """The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def node_affinity_labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels to use for node affinity, which will be used in instance scheduling."""
        pass
    node_type: typing.Text = ...
    """The node type to use for nodes group that are created from this template."""

    @property
    def node_type_flexibility(self) -> global___NodeTemplateNodeTypeFlexibility:
        """The flexible properties of the desired node type. Node groups that use this node template will create nodes of a type that matches these properties. This field is mutually exclusive with the node_type property; you can only define one or the other, but not both."""
        pass
    region: typing.Text = ...
    """[Output Only] The name of the region where the node template resides, such as us-central1."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def server_binding(self) -> global___ServerBinding:
        """Sets the binding properties for the physical server. Valid values include: - *[Default]* RESTART_NODE_ON_ANY_SERVER: Restarts VMs on any available physical server - RESTART_NODE_ON_MINIMAL_SERVER: Restarts VMs on the same physical server whenever possible See Sole-tenant node options for more information."""
        pass
    status: typing.Text = ...
    """[Output Only] The status of the node template. One of the following values: CREATING, READY, and DELETING.
    Check the Status enum for the list of possible values.
    """

    status_message: typing.Text = ...
    """[Output Only] An optional, human-readable explanation of the status."""

    def __init__(self,
        *,
        accelerators : typing.Optional[typing.Iterable[global___AcceleratorConfig]] = ...,
        cpu_overcommit_type : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        disks : typing.Optional[typing.Iterable[global___LocalDisk]] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        node_affinity_labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        node_type : typing.Optional[typing.Text] = ...,
        node_type_flexibility : typing.Optional[global___NodeTemplateNodeTypeFlexibility] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        server_binding : typing.Optional[global___ServerBinding] = ...,
        status : typing.Optional[typing.Text] = ...,
        status_message : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cpu_overcommit_type",b"_cpu_overcommit_type","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_node_type",b"_node_type","_node_type_flexibility",b"_node_type_flexibility","_region",b"_region","_self_link",b"_self_link","_server_binding",b"_server_binding","_status",b"_status","_status_message",b"_status_message","cpu_overcommit_type",b"cpu_overcommit_type","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","node_type",b"node_type","node_type_flexibility",b"node_type_flexibility","region",b"region","self_link",b"self_link","server_binding",b"server_binding","status",b"status","status_message",b"status_message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cpu_overcommit_type",b"_cpu_overcommit_type","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_node_type",b"_node_type","_node_type_flexibility",b"_node_type_flexibility","_region",b"_region","_self_link",b"_self_link","_server_binding",b"_server_binding","_status",b"_status","_status_message",b"_status_message","accelerators",b"accelerators","cpu_overcommit_type",b"cpu_overcommit_type","creation_timestamp",b"creation_timestamp","description",b"description","disks",b"disks","id",b"id","kind",b"kind","name",b"name","node_affinity_labels",b"node_affinity_labels","node_type",b"node_type","node_type_flexibility",b"node_type_flexibility","region",b"region","self_link",b"self_link","server_binding",b"server_binding","status",b"status","status_message",b"status_message"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cpu_overcommit_type",b"_cpu_overcommit_type"]) -> typing.Optional[typing_extensions.Literal["cpu_overcommit_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_node_type",b"_node_type"]) -> typing.Optional[typing_extensions.Literal["node_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_node_type_flexibility",b"_node_type_flexibility"]) -> typing.Optional[typing_extensions.Literal["node_type_flexibility"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_server_binding",b"_server_binding"]) -> typing.Optional[typing_extensions.Literal["server_binding"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status_message",b"_status_message"]) -> typing.Optional[typing_extensions.Literal["status_message"]]: ...
global___NodeTemplate = NodeTemplate

class NodeTemplateAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___NodeTemplatesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___NodeTemplatesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___NodeTemplatesScopedList]:
        """A list of NodeTemplatesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource.Always compute#nodeTemplateAggregatedList for aggregated lists of node templates."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___NodeTemplatesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NodeTemplateAggregatedList = NodeTemplateAggregatedList

class NodeTemplateList(google.protobuf.message.Message):
    """Contains a list of node templates."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeTemplate]:
        """A list of NodeTemplate resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource.Always compute#nodeTemplateList for lists of node templates."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___NodeTemplate]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NodeTemplateList = NodeTemplateList

class NodeTemplateNodeTypeFlexibility(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CPUS_FIELD_NUMBER: builtins.int
    LOCAL_SSD_FIELD_NUMBER: builtins.int
    MEMORY_FIELD_NUMBER: builtins.int
    cpus: typing.Text = ...
    local_ssd: typing.Text = ...
    memory: typing.Text = ...
    def __init__(self,
        *,
        cpus : typing.Optional[typing.Text] = ...,
        local_ssd : typing.Optional[typing.Text] = ...,
        memory : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cpus",b"_cpus","_local_ssd",b"_local_ssd","_memory",b"_memory","cpus",b"cpus","local_ssd",b"local_ssd","memory",b"memory"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cpus",b"_cpus","_local_ssd",b"_local_ssd","_memory",b"_memory","cpus",b"cpus","local_ssd",b"local_ssd","memory",b"memory"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cpus",b"_cpus"]) -> typing.Optional[typing_extensions.Literal["cpus"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_local_ssd",b"_local_ssd"]) -> typing.Optional[typing_extensions.Literal["local_ssd"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_memory",b"_memory"]) -> typing.Optional[typing_extensions.Literal["memory"]]: ...
global___NodeTemplateNodeTypeFlexibility = NodeTemplateNodeTypeFlexibility

class NodeTemplatesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_TEMPLATES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def node_templates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeTemplate]:
        """[Output Only] A list of node templates contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] An informational warning that appears when the node templates list is empty."""
        pass
    def __init__(self,
        *,
        node_templates : typing.Optional[typing.Iterable[global___NodeTemplate]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","node_templates",b"node_templates","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NodeTemplatesScopedList = NodeTemplatesScopedList

class NodeType(google.protobuf.message.Message):
    """Represent a sole-tenant Node Type resource. Each node within a node group must have a node type. A node type specifies the total amount of cores and memory for that node. Currently, the only available node type is n1-node-96-624 node type that has 96 vCPUs and 624 GB of memory, available in multiple zones. For more information read Node types."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CPU_PLATFORM_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEPRECATED_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    GUEST_CPUS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LOCAL_SSD_GB_FIELD_NUMBER: builtins.int
    MEMORY_MB_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    cpu_platform: typing.Text = ...
    """[Output Only] The CPU platform used by this node type."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def deprecated(self) -> global___DeprecationStatus:
        """[Output Only] The deprecation status associated with this node type."""
        pass
    description: typing.Text = ...
    """[Output Only] An optional textual description of the resource."""

    guest_cpus: builtins.int = ...
    """[Output Only] The number of virtual CPUs that are available to the node type."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] The type of the resource. Always compute#nodeType for node types."""

    local_ssd_gb: builtins.int = ...
    """[Output Only] Local SSD available to the node type, defined in GB."""

    memory_mb: builtins.int = ...
    """[Output Only] The amount of physical memory available to the node type, defined in MB."""

    name: typing.Text = ...
    """[Output Only] Name of the resource."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    zone: typing.Text = ...
    """[Output Only] The name of the zone where the node type resides, such as us-central1-a."""

    def __init__(self,
        *,
        cpu_platform : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        deprecated : typing.Optional[global___DeprecationStatus] = ...,
        description : typing.Optional[typing.Text] = ...,
        guest_cpus : typing.Optional[builtins.int] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        local_ssd_gb : typing.Optional[builtins.int] = ...,
        memory_mb : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_cpu_platform",b"_cpu_platform","_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_guest_cpus",b"_guest_cpus","_id",b"_id","_kind",b"_kind","_local_ssd_gb",b"_local_ssd_gb","_memory_mb",b"_memory_mb","_name",b"_name","_self_link",b"_self_link","_zone",b"_zone","cpu_platform",b"cpu_platform","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","guest_cpus",b"guest_cpus","id",b"id","kind",b"kind","local_ssd_gb",b"local_ssd_gb","memory_mb",b"memory_mb","name",b"name","self_link",b"self_link","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_cpu_platform",b"_cpu_platform","_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_guest_cpus",b"_guest_cpus","_id",b"_id","_kind",b"_kind","_local_ssd_gb",b"_local_ssd_gb","_memory_mb",b"_memory_mb","_name",b"_name","_self_link",b"_self_link","_zone",b"_zone","cpu_platform",b"cpu_platform","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","guest_cpus",b"guest_cpus","id",b"id","kind",b"kind","local_ssd_gb",b"local_ssd_gb","memory_mb",b"memory_mb","name",b"name","self_link",b"self_link","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_cpu_platform",b"_cpu_platform"]) -> typing.Optional[typing_extensions.Literal["cpu_platform"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deprecated",b"_deprecated"]) -> typing.Optional[typing_extensions.Literal["deprecated"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_guest_cpus",b"_guest_cpus"]) -> typing.Optional[typing_extensions.Literal["guest_cpus"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_local_ssd_gb",b"_local_ssd_gb"]) -> typing.Optional[typing_extensions.Literal["local_ssd_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_memory_mb",b"_memory_mb"]) -> typing.Optional[typing_extensions.Literal["memory_mb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___NodeType = NodeType

class NodeTypeAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___NodeTypesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___NodeTypesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___NodeTypesScopedList]:
        """A list of NodeTypesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource.Always compute#nodeTypeAggregatedList for aggregated lists of node types."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___NodeTypesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NodeTypeAggregatedList = NodeTypeAggregatedList

class NodeTypeList(google.protobuf.message.Message):
    """Contains a list of node types."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeType]:
        """A list of NodeType resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource.Always compute#nodeTypeList for lists of node types."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___NodeType]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NodeTypeList = NodeTypeList

class NodeTypesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_TYPES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def node_types(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeType]:
        """[Output Only] A list of node types contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] An informational warning that appears when the node types list is empty."""
        pass
    def __init__(self,
        *,
        node_types : typing.Optional[typing.Iterable[global___NodeType]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","node_types",b"node_types","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NodeTypesScopedList = NodeTypesScopedList

class NotificationEndpoint(google.protobuf.message.Message):
    """Represents a notification endpoint. A notification endpoint resource defines an endpoint to receive notifications when there are status changes detected by the associated health check service. For more information, see Health checks overview."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    GRPC_SETTINGS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    @property
    def grpc_settings(self) -> global___NotificationEndpointGrpcSettings:
        """Settings of the gRPC notification endpoint including the endpoint URL and the retry duration."""
        pass
    id: builtins.int = ...
    """[Output Only] A unique identifier for this resource type. The server generates this identifier."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#notificationEndpoint for notification endpoints."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    region: typing.Text = ...
    """[Output Only] URL of the region where the notification endpoint resides. This field applies only to the regional resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        grpc_settings : typing.Optional[global___NotificationEndpointGrpcSettings] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_grpc_settings",b"_grpc_settings","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","grpc_settings",b"grpc_settings","id",b"id","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_grpc_settings",b"_grpc_settings","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","grpc_settings",b"grpc_settings","id",b"id","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_grpc_settings",b"_grpc_settings"]) -> typing.Optional[typing_extensions.Literal["grpc_settings"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___NotificationEndpoint = NotificationEndpoint

class NotificationEndpointGrpcSettings(google.protobuf.message.Message):
    """Represents a gRPC setting that describes one gRPC notification endpoint and the retry duration attempting to send notification to this endpoint."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTHORITY_FIELD_NUMBER: builtins.int
    ENDPOINT_FIELD_NUMBER: builtins.int
    PAYLOAD_NAME_FIELD_NUMBER: builtins.int
    RESEND_INTERVAL_FIELD_NUMBER: builtins.int
    RETRY_DURATION_SEC_FIELD_NUMBER: builtins.int
    authority: typing.Text = ...
    """Optional. If specified, this field is used to set the authority header by the sender of notifications. See https://tools.ietf.org/html/rfc7540#section-8.1.2.3"""

    endpoint: typing.Text = ...
    """Endpoint to which gRPC notifications are sent. This must be a valid gRPCLB DNS name."""

    payload_name: typing.Text = ...
    """Optional. If specified, this field is used to populate the "name" field in gRPC requests."""

    @property
    def resend_interval(self) -> global___Duration:
        """Optional. This field is used to configure how often to send a full update of all non-healthy backends. If unspecified, full updates are not sent. If specified, must be in the range between 600 seconds to 3600 seconds. Nanos are disallowed."""
        pass
    retry_duration_sec: builtins.int = ...
    """How much time (in seconds) is spent attempting notification retries until a successful response is received. Default is 30s. Limit is 20m (1200s). Must be a positive number."""

    def __init__(self,
        *,
        authority : typing.Optional[typing.Text] = ...,
        endpoint : typing.Optional[typing.Text] = ...,
        payload_name : typing.Optional[typing.Text] = ...,
        resend_interval : typing.Optional[global___Duration] = ...,
        retry_duration_sec : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_authority",b"_authority","_endpoint",b"_endpoint","_payload_name",b"_payload_name","_resend_interval",b"_resend_interval","_retry_duration_sec",b"_retry_duration_sec","authority",b"authority","endpoint",b"endpoint","payload_name",b"payload_name","resend_interval",b"resend_interval","retry_duration_sec",b"retry_duration_sec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_authority",b"_authority","_endpoint",b"_endpoint","_payload_name",b"_payload_name","_resend_interval",b"_resend_interval","_retry_duration_sec",b"_retry_duration_sec","authority",b"authority","endpoint",b"endpoint","payload_name",b"payload_name","resend_interval",b"resend_interval","retry_duration_sec",b"retry_duration_sec"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_authority",b"_authority"]) -> typing.Optional[typing_extensions.Literal["authority"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_endpoint",b"_endpoint"]) -> typing.Optional[typing_extensions.Literal["endpoint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_payload_name",b"_payload_name"]) -> typing.Optional[typing_extensions.Literal["payload_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_resend_interval",b"_resend_interval"]) -> typing.Optional[typing_extensions.Literal["resend_interval"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_retry_duration_sec",b"_retry_duration_sec"]) -> typing.Optional[typing_extensions.Literal["retry_duration_sec"]]: ...
global___NotificationEndpointGrpcSettings = NotificationEndpointGrpcSettings

class NotificationEndpointList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NotificationEndpoint]:
        """A list of NotificationEndpoint resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#notificationEndpoint for notification endpoints."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___NotificationEndpoint]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___NotificationEndpointList = NotificationEndpointList

class Operation(google.protobuf.message.Message):
    """Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/v1/globalOperations) * [Regional](/compute/docs/reference/rest/v1/regionOperations) * [Zonal](/compute/docs/reference/rest/v1/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Operation.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DONE: Operation.Status.ValueType = ...  # 2104194
        PENDING: Operation.Status.ValueType = ...  # 35394935
        RUNNING: Operation.Status.ValueType = ...  # 121282975
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`."""
        pass

    UNDEFINED_STATUS: Operation.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DONE: Operation.Status.ValueType = ...  # 2104194
    PENDING: Operation.Status.ValueType = ...  # 35394935
    RUNNING: Operation.Status.ValueType = ...  # 121282975

    CLIENT_OPERATION_ID_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    HTTP_ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    HTTP_ERROR_STATUS_CODE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INSERT_TIME_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    OPERATION_GROUP_ID_FIELD_NUMBER: builtins.int
    OPERATION_TYPE_FIELD_NUMBER: builtins.int
    PROGRESS_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    STATUS_MESSAGE_FIELD_NUMBER: builtins.int
    TARGET_ID_FIELD_NUMBER: builtins.int
    TARGET_LINK_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    WARNINGS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    client_operation_id: typing.Text = ...
    """[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."""

    creation_timestamp: typing.Text = ...
    """[Deprecated] This field is deprecated."""

    description: typing.Text = ...
    """[Output Only] A textual description of the operation, which is set when the operation is created."""

    end_time: typing.Text = ...
    """[Output Only] The time that this operation was completed. This value is in RFC3339 text format."""

    @property
    def error(self) -> global___Error:
        """[Output Only] If errors are generated during processing of the operation, this field will be populated."""
        pass
    http_error_message: typing.Text = ...
    """[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."""

    http_error_status_code: builtins.int = ...
    """[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the operation. This identifier is defined by the server."""

    insert_time: typing.Text = ...
    """[Output Only] The time that this operation was requested. This value is in RFC3339 text format."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always `compute#operation` for Operation resources."""

    name: typing.Text = ...
    """[Output Only] Name of the operation."""

    operation_group_id: typing.Text = ...
    """[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."""

    operation_type: typing.Text = ...
    """[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."""

    progress: builtins.int = ...
    """[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."""

    region: typing.Text = ...
    """[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    start_time: typing.Text = ...
    """[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."""

    status: global___Operation.Status.ValueType = ...
    """[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`."""

    status_message: typing.Text = ...
    """[Output Only] An optional textual description of the current status of the operation."""

    target_id: builtins.int = ...
    """[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."""

    target_link: typing.Text = ...
    """[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."""

    user: typing.Text = ...
    """[Output Only] User who requested the operation, for example: `user@example.com`."""

    @property
    def warnings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Warnings]:
        """[Output Only] If warning messages are generated during processing of the operation, this field will be populated."""
        pass
    zone: typing.Text = ...
    """[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."""

    def __init__(self,
        *,
        client_operation_id : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        end_time : typing.Optional[typing.Text] = ...,
        error : typing.Optional[global___Error] = ...,
        http_error_message : typing.Optional[typing.Text] = ...,
        http_error_status_code : typing.Optional[builtins.int] = ...,
        id : typing.Optional[builtins.int] = ...,
        insert_time : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        operation_group_id : typing.Optional[typing.Text] = ...,
        operation_type : typing.Optional[typing.Text] = ...,
        progress : typing.Optional[builtins.int] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        start_time : typing.Optional[typing.Text] = ...,
        status : typing.Optional[global___Operation.Status.ValueType] = ...,
        status_message : typing.Optional[typing.Text] = ...,
        target_id : typing.Optional[builtins.int] = ...,
        target_link : typing.Optional[typing.Text] = ...,
        user : typing.Optional[typing.Text] = ...,
        warnings : typing.Optional[typing.Iterable[global___Warnings]] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_client_operation_id",b"_client_operation_id","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_end_time",b"_end_time","_error",b"_error","_http_error_message",b"_http_error_message","_http_error_status_code",b"_http_error_status_code","_id",b"_id","_insert_time",b"_insert_time","_kind",b"_kind","_name",b"_name","_operation_group_id",b"_operation_group_id","_operation_type",b"_operation_type","_progress",b"_progress","_region",b"_region","_self_link",b"_self_link","_start_time",b"_start_time","_status",b"_status","_status_message",b"_status_message","_target_id",b"_target_id","_target_link",b"_target_link","_user",b"_user","_zone",b"_zone","client_operation_id",b"client_operation_id","creation_timestamp",b"creation_timestamp","description",b"description","end_time",b"end_time","error",b"error","http_error_message",b"http_error_message","http_error_status_code",b"http_error_status_code","id",b"id","insert_time",b"insert_time","kind",b"kind","name",b"name","operation_group_id",b"operation_group_id","operation_type",b"operation_type","progress",b"progress","region",b"region","self_link",b"self_link","start_time",b"start_time","status",b"status","status_message",b"status_message","target_id",b"target_id","target_link",b"target_link","user",b"user","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_client_operation_id",b"_client_operation_id","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_end_time",b"_end_time","_error",b"_error","_http_error_message",b"_http_error_message","_http_error_status_code",b"_http_error_status_code","_id",b"_id","_insert_time",b"_insert_time","_kind",b"_kind","_name",b"_name","_operation_group_id",b"_operation_group_id","_operation_type",b"_operation_type","_progress",b"_progress","_region",b"_region","_self_link",b"_self_link","_start_time",b"_start_time","_status",b"_status","_status_message",b"_status_message","_target_id",b"_target_id","_target_link",b"_target_link","_user",b"_user","_zone",b"_zone","client_operation_id",b"client_operation_id","creation_timestamp",b"creation_timestamp","description",b"description","end_time",b"end_time","error",b"error","http_error_message",b"http_error_message","http_error_status_code",b"http_error_status_code","id",b"id","insert_time",b"insert_time","kind",b"kind","name",b"name","operation_group_id",b"operation_group_id","operation_type",b"operation_type","progress",b"progress","region",b"region","self_link",b"self_link","start_time",b"start_time","status",b"status","status_message",b"status_message","target_id",b"target_id","target_link",b"target_link","user",b"user","warnings",b"warnings","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_client_operation_id",b"_client_operation_id"]) -> typing.Optional[typing_extensions.Literal["client_operation_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_end_time",b"_end_time"]) -> typing.Optional[typing_extensions.Literal["end_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_error",b"_error"]) -> typing.Optional[typing_extensions.Literal["error"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_http_error_message",b"_http_error_message"]) -> typing.Optional[typing_extensions.Literal["http_error_message"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_http_error_status_code",b"_http_error_status_code"]) -> typing.Optional[typing_extensions.Literal["http_error_status_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_insert_time",b"_insert_time"]) -> typing.Optional[typing_extensions.Literal["insert_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_operation_group_id",b"_operation_group_id"]) -> typing.Optional[typing_extensions.Literal["operation_group_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_operation_type",b"_operation_type"]) -> typing.Optional[typing_extensions.Literal["operation_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_progress",b"_progress"]) -> typing.Optional[typing_extensions.Literal["progress"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_time",b"_start_time"]) -> typing.Optional[typing_extensions.Literal["start_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status_message",b"_status_message"]) -> typing.Optional[typing_extensions.Literal["status_message"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_id",b"_target_id"]) -> typing.Optional[typing_extensions.Literal["target_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_link",b"_target_link"]) -> typing.Optional[typing_extensions.Literal["target_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_user",b"_user"]) -> typing.Optional[typing_extensions.Literal["user"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___Operation = Operation

class OperationAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___OperationsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___OperationsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___OperationsScopedList]:
        """[Output Only] A map of scoped operation lists."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always `compute#operationAggregatedList` for aggregated lists of operations."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than `maxResults`, use the `nextPageToken` as a value for the query parameter `pageToken` in the next list request. Subsequent list requests will have their own `nextPageToken` to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___OperationsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___OperationAggregatedList = OperationAggregatedList

class OperationList(google.protobuf.message.Message):
    """Contains a list of Operation resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operation]:
        """[Output Only] A list of Operation resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always `compute#operations` for Operations resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than `maxResults`, use the `nextPageToken` as a value for the query parameter `pageToken` in the next list request. Subsequent list requests will have their own `nextPageToken` to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Operation]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___OperationList = OperationList

class OperationsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATIONS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operation]:
        """[Output Only] A list of operations contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning which replaces the list of operations when the list is empty."""
        pass
    def __init__(self,
        *,
        operations : typing.Optional[typing.Iterable[global___Operation]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","operations",b"operations","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___OperationsScopedList = OperationsScopedList

class OutlierDetection(google.protobuf.message.Message):
    """Settings controlling the eviction of unhealthy hosts from the load balancing pool for the backend service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BASE_EJECTION_TIME_FIELD_NUMBER: builtins.int
    CONSECUTIVE_ERRORS_FIELD_NUMBER: builtins.int
    CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER: builtins.int
    ENFORCING_CONSECUTIVE_ERRORS_FIELD_NUMBER: builtins.int
    ENFORCING_CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER: builtins.int
    ENFORCING_SUCCESS_RATE_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    MAX_EJECTION_PERCENT_FIELD_NUMBER: builtins.int
    SUCCESS_RATE_MINIMUM_HOSTS_FIELD_NUMBER: builtins.int
    SUCCESS_RATE_REQUEST_VOLUME_FIELD_NUMBER: builtins.int
    SUCCESS_RATE_STDEV_FACTOR_FIELD_NUMBER: builtins.int
    @property
    def base_ejection_time(self) -> global___Duration:
        """The base time that a host is ejected for. The real ejection time is equal to the base ejection time multiplied by the number of times the host has been ejected. Defaults to 30000ms or 30s."""
        pass
    consecutive_errors: builtins.int = ...
    """Number of errors before a host is ejected from the connection pool. When the backend host is accessed over HTTP, a 5xx return code qualifies as an error. Defaults to 5."""

    consecutive_gateway_failure: builtins.int = ...
    """The number of consecutive gateway failures (502, 503, 504 status or connection errors that are mapped to one of those status codes) before a consecutive gateway failure ejection occurs. Defaults to 3."""

    enforcing_consecutive_errors: builtins.int = ...
    """The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive 5xx. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 0."""

    enforcing_consecutive_gateway_failure: builtins.int = ...
    """The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive gateway failures. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100."""

    enforcing_success_rate: builtins.int = ...
    """The percentage chance that a host will be actually ejected when an outlier status is detected through success rate statistics. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100."""

    @property
    def interval(self) -> global___Duration:
        """Time interval between ejection analysis sweeps. This can result in both new ejections as well as hosts being returned to service. Defaults to 1 second."""
        pass
    max_ejection_percent: builtins.int = ...
    """Maximum percentage of hosts in the load balancing pool for the backend service that can be ejected. Defaults to 50%."""

    success_rate_minimum_hosts: builtins.int = ...
    """The number of hosts in a cluster that must have enough request volume to detect success rate outliers. If the number of hosts is less than this setting, outlier detection via success rate statistics is not performed for any host in the cluster. Defaults to 5."""

    success_rate_request_volume: builtins.int = ...
    """The minimum number of total requests that must be collected in one interval (as defined by the interval duration above) to include this host in success rate based outlier detection. If the volume is lower than this setting, outlier detection via success rate statistics is not performed for that host. Defaults to 100."""

    success_rate_stdev_factor: builtins.int = ...
    """This factor is used to determine the ejection threshold for success rate outlier ejection. The ejection threshold is the difference between the mean success rate, and the product of this factor and the standard deviation of the mean success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided by a thousand to get a double. That is, if the desired factor is 1.9, the runtime value should be 1900. Defaults to 1900."""

    def __init__(self,
        *,
        base_ejection_time : typing.Optional[global___Duration] = ...,
        consecutive_errors : typing.Optional[builtins.int] = ...,
        consecutive_gateway_failure : typing.Optional[builtins.int] = ...,
        enforcing_consecutive_errors : typing.Optional[builtins.int] = ...,
        enforcing_consecutive_gateway_failure : typing.Optional[builtins.int] = ...,
        enforcing_success_rate : typing.Optional[builtins.int] = ...,
        interval : typing.Optional[global___Duration] = ...,
        max_ejection_percent : typing.Optional[builtins.int] = ...,
        success_rate_minimum_hosts : typing.Optional[builtins.int] = ...,
        success_rate_request_volume : typing.Optional[builtins.int] = ...,
        success_rate_stdev_factor : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_base_ejection_time",b"_base_ejection_time","_consecutive_errors",b"_consecutive_errors","_consecutive_gateway_failure",b"_consecutive_gateway_failure","_enforcing_consecutive_errors",b"_enforcing_consecutive_errors","_enforcing_consecutive_gateway_failure",b"_enforcing_consecutive_gateway_failure","_enforcing_success_rate",b"_enforcing_success_rate","_interval",b"_interval","_max_ejection_percent",b"_max_ejection_percent","_success_rate_minimum_hosts",b"_success_rate_minimum_hosts","_success_rate_request_volume",b"_success_rate_request_volume","_success_rate_stdev_factor",b"_success_rate_stdev_factor","base_ejection_time",b"base_ejection_time","consecutive_errors",b"consecutive_errors","consecutive_gateway_failure",b"consecutive_gateway_failure","enforcing_consecutive_errors",b"enforcing_consecutive_errors","enforcing_consecutive_gateway_failure",b"enforcing_consecutive_gateway_failure","enforcing_success_rate",b"enforcing_success_rate","interval",b"interval","max_ejection_percent",b"max_ejection_percent","success_rate_minimum_hosts",b"success_rate_minimum_hosts","success_rate_request_volume",b"success_rate_request_volume","success_rate_stdev_factor",b"success_rate_stdev_factor"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_base_ejection_time",b"_base_ejection_time","_consecutive_errors",b"_consecutive_errors","_consecutive_gateway_failure",b"_consecutive_gateway_failure","_enforcing_consecutive_errors",b"_enforcing_consecutive_errors","_enforcing_consecutive_gateway_failure",b"_enforcing_consecutive_gateway_failure","_enforcing_success_rate",b"_enforcing_success_rate","_interval",b"_interval","_max_ejection_percent",b"_max_ejection_percent","_success_rate_minimum_hosts",b"_success_rate_minimum_hosts","_success_rate_request_volume",b"_success_rate_request_volume","_success_rate_stdev_factor",b"_success_rate_stdev_factor","base_ejection_time",b"base_ejection_time","consecutive_errors",b"consecutive_errors","consecutive_gateway_failure",b"consecutive_gateway_failure","enforcing_consecutive_errors",b"enforcing_consecutive_errors","enforcing_consecutive_gateway_failure",b"enforcing_consecutive_gateway_failure","enforcing_success_rate",b"enforcing_success_rate","interval",b"interval","max_ejection_percent",b"max_ejection_percent","success_rate_minimum_hosts",b"success_rate_minimum_hosts","success_rate_request_volume",b"success_rate_request_volume","success_rate_stdev_factor",b"success_rate_stdev_factor"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_base_ejection_time",b"_base_ejection_time"]) -> typing.Optional[typing_extensions.Literal["base_ejection_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_consecutive_errors",b"_consecutive_errors"]) -> typing.Optional[typing_extensions.Literal["consecutive_errors"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_consecutive_gateway_failure",b"_consecutive_gateway_failure"]) -> typing.Optional[typing_extensions.Literal["consecutive_gateway_failure"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enforcing_consecutive_errors",b"_enforcing_consecutive_errors"]) -> typing.Optional[typing_extensions.Literal["enforcing_consecutive_errors"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enforcing_consecutive_gateway_failure",b"_enforcing_consecutive_gateway_failure"]) -> typing.Optional[typing_extensions.Literal["enforcing_consecutive_gateway_failure"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enforcing_success_rate",b"_enforcing_success_rate"]) -> typing.Optional[typing_extensions.Literal["enforcing_success_rate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_interval",b"_interval"]) -> typing.Optional[typing_extensions.Literal["interval"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_ejection_percent",b"_max_ejection_percent"]) -> typing.Optional[typing_extensions.Literal["max_ejection_percent"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_success_rate_minimum_hosts",b"_success_rate_minimum_hosts"]) -> typing.Optional[typing_extensions.Literal["success_rate_minimum_hosts"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_success_rate_request_volume",b"_success_rate_request_volume"]) -> typing.Optional[typing_extensions.Literal["success_rate_request_volume"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_success_rate_stdev_factor",b"_success_rate_stdev_factor"]) -> typing.Optional[typing_extensions.Literal["success_rate_stdev_factor"]]: ...
global___OutlierDetection = OutlierDetection

class PacketMirroring(google.protobuf.message.Message):
    """Represents a Packet Mirroring resource. Packet Mirroring clones the traffic of specified instances in your Virtual Private Cloud (VPC) network and forwards it to a collector destination, such as an instance group of an internal TCP/UDP load balancer, for analysis or examination. For more information about setting up Packet Mirroring, see Using Packet Mirroring."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Enable:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EnableEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Enable.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ENABLE: PacketMirroring.Enable.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        FALSE: PacketMirroring.Enable.ValueType = ...  # 66658563
        TRUE: PacketMirroring.Enable.ValueType = ...  # 2583950
    class Enable(_Enable, metaclass=_EnableEnumTypeWrapper):
        """Indicates whether or not this packet mirroring takes effect. If set to FALSE, this packet mirroring policy will not be enforced on the network. The default is TRUE."""
        pass

    UNDEFINED_ENABLE: PacketMirroring.Enable.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    FALSE: PacketMirroring.Enable.ValueType = ...  # 66658563
    TRUE: PacketMirroring.Enable.ValueType = ...  # 2583950

    COLLECTOR_ILB_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ENABLE_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    MIRRORED_RESOURCES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    @property
    def collector_ilb(self) -> global___PacketMirroringForwardingRuleInfo:
        """The Forwarding Rule resource of type loadBalancingScheme=INTERNAL that will be used as collector for mirrored traffic. The specified forwarding rule must have isMirroringCollector set to true."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    enable: typing.Text = ...
    """Indicates whether or not this packet mirroring takes effect. If set to FALSE, this packet mirroring policy will not be enforced on the network. The default is TRUE.
    Check the Enable enum for the list of possible values.
    """

    @property
    def filter(self) -> global___PacketMirroringFilter:
        """Filter for mirrored traffic. If unspecified, all traffic is mirrored."""
        pass
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#packetMirroring for packet mirrorings."""

    @property
    def mirrored_resources(self) -> global___PacketMirroringMirroredResourceInfo:
        """PacketMirroring mirroredResourceInfos. MirroredResourceInfo specifies a set of mirrored VM instances, subnetworks and/or tags for which traffic from/to all VM instances will be mirrored."""
        pass
    name: typing.Text = ...
    """Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def network(self) -> global___PacketMirroringNetworkInfo:
        """Specifies the mirrored VPC network. Only packets in this network will be mirrored. All mirrored VMs should have a NIC in the given network. All mirrored subnetworks should belong to the given network."""
        pass
    priority: builtins.int = ...
    """The priority of applying this configuration. Priority is used to break ties in cases where there is more than one matching rule. In the case of two rules that apply for a given Instance, the one with the lowest-numbered priority value wins. Default value is 1000. Valid range is 0 through 65535."""

    region: typing.Text = ...
    """[Output Only] URI of the region where the packetMirroring resides."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    def __init__(self,
        *,
        collector_ilb : typing.Optional[global___PacketMirroringForwardingRuleInfo] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        enable : typing.Optional[typing.Text] = ...,
        filter : typing.Optional[global___PacketMirroringFilter] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        mirrored_resources : typing.Optional[global___PacketMirroringMirroredResourceInfo] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[global___PacketMirroringNetworkInfo] = ...,
        priority : typing.Optional[builtins.int] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_collector_ilb",b"_collector_ilb","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_enable",b"_enable","_filter",b"_filter","_id",b"_id","_kind",b"_kind","_mirrored_resources",b"_mirrored_resources","_name",b"_name","_network",b"_network","_priority",b"_priority","_region",b"_region","_self_link",b"_self_link","collector_ilb",b"collector_ilb","creation_timestamp",b"creation_timestamp","description",b"description","enable",b"enable","filter",b"filter","id",b"id","kind",b"kind","mirrored_resources",b"mirrored_resources","name",b"name","network",b"network","priority",b"priority","region",b"region","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_collector_ilb",b"_collector_ilb","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_enable",b"_enable","_filter",b"_filter","_id",b"_id","_kind",b"_kind","_mirrored_resources",b"_mirrored_resources","_name",b"_name","_network",b"_network","_priority",b"_priority","_region",b"_region","_self_link",b"_self_link","collector_ilb",b"collector_ilb","creation_timestamp",b"creation_timestamp","description",b"description","enable",b"enable","filter",b"filter","id",b"id","kind",b"kind","mirrored_resources",b"mirrored_resources","name",b"name","network",b"network","priority",b"priority","region",b"region","self_link",b"self_link"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_collector_ilb",b"_collector_ilb"]) -> typing.Optional[typing_extensions.Literal["collector_ilb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable",b"_enable"]) -> typing.Optional[typing_extensions.Literal["enable"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mirrored_resources",b"_mirrored_resources"]) -> typing.Optional[typing_extensions.Literal["mirrored_resources"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___PacketMirroring = PacketMirroring

class PacketMirroringAggregatedList(google.protobuf.message.Message):
    """Contains a list of packetMirrorings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___PacketMirroringsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___PacketMirroringsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___PacketMirroringsScopedList]:
        """A list of PacketMirroring resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___PacketMirroringsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___PacketMirroringAggregatedList = PacketMirroringAggregatedList

class PacketMirroringFilter(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Direction:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DirectionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Direction.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_DIRECTION: PacketMirroringFilter.Direction.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        BOTH: PacketMirroringFilter.Direction.ValueType = ...  # 2044801
        """Default, both directions are mirrored."""

        EGRESS: PacketMirroringFilter.Direction.ValueType = ...  # 432880501
        """Only egress traffic is mirrored."""

        INGRESS: PacketMirroringFilter.Direction.ValueType = ...  # 516931221
        """Only ingress traffic is mirrored."""

    class Direction(_Direction, metaclass=_DirectionEnumTypeWrapper):
        """Direction of traffic to mirror, either INGRESS, EGRESS, or BOTH. The default is BOTH."""
        pass

    UNDEFINED_DIRECTION: PacketMirroringFilter.Direction.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    BOTH: PacketMirroringFilter.Direction.ValueType = ...  # 2044801
    """Default, both directions are mirrored."""

    EGRESS: PacketMirroringFilter.Direction.ValueType = ...  # 432880501
    """Only egress traffic is mirrored."""

    INGRESS: PacketMirroringFilter.Direction.ValueType = ...  # 516931221
    """Only ingress traffic is mirrored."""


    I_P_PROTOCOLS_FIELD_NUMBER: builtins.int
    CIDR_RANGES_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    @property
    def I_p_protocols(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Protocols that apply as filter on mirrored traffic. If no protocols are specified, all traffic that matches the specified CIDR ranges is mirrored. If neither cidrRanges nor IPProtocols is specified, all traffic is mirrored."""
        pass
    @property
    def cidr_ranges(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """IP CIDR ranges that apply as filter on the source (ingress) or destination (egress) IP in the IP header. Only IPv4 is supported. If no ranges are specified, all traffic that matches the specified IPProtocols is mirrored. If neither cidrRanges nor IPProtocols is specified, all traffic is mirrored."""
        pass
    direction: typing.Text = ...
    """Direction of traffic to mirror, either INGRESS, EGRESS, or BOTH. The default is BOTH.
    Check the Direction enum for the list of possible values.
    """

    def __init__(self,
        *,
        I_p_protocols : typing.Optional[typing.Iterable[typing.Text]] = ...,
        cidr_ranges : typing.Optional[typing.Iterable[typing.Text]] = ...,
        direction : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_direction",b"_direction","direction",b"direction"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["I_p_protocols",b"I_p_protocols","_direction",b"_direction","cidr_ranges",b"cidr_ranges","direction",b"direction"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_direction",b"_direction"]) -> typing.Optional[typing_extensions.Literal["direction"]]: ...
global___PacketMirroringFilter = PacketMirroringFilter

class PacketMirroringForwardingRuleInfo(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CANONICAL_URL_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    canonical_url: typing.Text = ...
    """[Output Only] Unique identifier for the forwarding rule; defined by the server."""

    url: typing.Text = ...
    """Resource URL to the forwarding rule representing the ILB configured as destination of the mirrored traffic."""

    def __init__(self,
        *,
        canonical_url : typing.Optional[typing.Text] = ...,
        url : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_canonical_url",b"_canonical_url","_url",b"_url","canonical_url",b"canonical_url","url",b"url"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_canonical_url",b"_canonical_url","_url",b"_url","canonical_url",b"canonical_url","url",b"url"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_canonical_url",b"_canonical_url"]) -> typing.Optional[typing_extensions.Literal["canonical_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url",b"_url"]) -> typing.Optional[typing_extensions.Literal["url"]]: ...
global___PacketMirroringForwardingRuleInfo = PacketMirroringForwardingRuleInfo

class PacketMirroringList(google.protobuf.message.Message):
    """Contains a list of PacketMirroring resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PacketMirroring]:
        """A list of PacketMirroring resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#packetMirroring for packetMirrorings."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___PacketMirroring]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___PacketMirroringList = PacketMirroringList

class PacketMirroringMirroredResourceInfo(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    SUBNETWORKS_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PacketMirroringMirroredResourceInfoInstanceInfo]:
        """A set of virtual machine instances that are being mirrored. They must live in zones contained in the same region as this packetMirroring. Note that this config will apply only to those network interfaces of the Instances that belong to the network specified in this packetMirroring. You may specify a maximum of 50 Instances."""
        pass
    @property
    def subnetworks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PacketMirroringMirroredResourceInfoSubnetInfo]:
        """A set of subnetworks for which traffic from/to all VM instances will be mirrored. They must live in the same region as this packetMirroring. You may specify a maximum of 5 subnetworks."""
        pass
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A set of mirrored tags. Traffic from/to all VM instances that have one or more of these tags will be mirrored."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[global___PacketMirroringMirroredResourceInfoInstanceInfo]] = ...,
        subnetworks : typing.Optional[typing.Iterable[global___PacketMirroringMirroredResourceInfoSubnetInfo]] = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances","subnetworks",b"subnetworks","tags",b"tags"]) -> None: ...
global___PacketMirroringMirroredResourceInfo = PacketMirroringMirroredResourceInfo

class PacketMirroringMirroredResourceInfoInstanceInfo(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CANONICAL_URL_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    canonical_url: typing.Text = ...
    """[Output Only] Unique identifier for the instance; defined by the server."""

    url: typing.Text = ...
    """Resource URL to the virtual machine instance which is being mirrored."""

    def __init__(self,
        *,
        canonical_url : typing.Optional[typing.Text] = ...,
        url : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_canonical_url",b"_canonical_url","_url",b"_url","canonical_url",b"canonical_url","url",b"url"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_canonical_url",b"_canonical_url","_url",b"_url","canonical_url",b"canonical_url","url",b"url"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_canonical_url",b"_canonical_url"]) -> typing.Optional[typing_extensions.Literal["canonical_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url",b"_url"]) -> typing.Optional[typing_extensions.Literal["url"]]: ...
global___PacketMirroringMirroredResourceInfoInstanceInfo = PacketMirroringMirroredResourceInfoInstanceInfo

class PacketMirroringMirroredResourceInfoSubnetInfo(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CANONICAL_URL_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    canonical_url: typing.Text = ...
    """[Output Only] Unique identifier for the subnetwork; defined by the server."""

    url: typing.Text = ...
    """Resource URL to the subnetwork for which traffic from/to all VM instances will be mirrored."""

    def __init__(self,
        *,
        canonical_url : typing.Optional[typing.Text] = ...,
        url : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_canonical_url",b"_canonical_url","_url",b"_url","canonical_url",b"canonical_url","url",b"url"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_canonical_url",b"_canonical_url","_url",b"_url","canonical_url",b"canonical_url","url",b"url"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_canonical_url",b"_canonical_url"]) -> typing.Optional[typing_extensions.Literal["canonical_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url",b"_url"]) -> typing.Optional[typing_extensions.Literal["url"]]: ...
global___PacketMirroringMirroredResourceInfoSubnetInfo = PacketMirroringMirroredResourceInfoSubnetInfo

class PacketMirroringNetworkInfo(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CANONICAL_URL_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    canonical_url: typing.Text = ...
    """[Output Only] Unique identifier for the network; defined by the server."""

    url: typing.Text = ...
    """URL of the network resource."""

    def __init__(self,
        *,
        canonical_url : typing.Optional[typing.Text] = ...,
        url : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_canonical_url",b"_canonical_url","_url",b"_url","canonical_url",b"canonical_url","url",b"url"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_canonical_url",b"_canonical_url","_url",b"_url","canonical_url",b"canonical_url","url",b"url"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_canonical_url",b"_canonical_url"]) -> typing.Optional[typing_extensions.Literal["canonical_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url",b"_url"]) -> typing.Optional[typing_extensions.Literal["url"]]: ...
global___PacketMirroringNetworkInfo = PacketMirroringNetworkInfo

class PacketMirroringsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PACKET_MIRRORINGS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def packet_mirrorings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PacketMirroring]:
        """A list of packetMirrorings contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of packetMirrorings when the list is empty."""
        pass
    def __init__(self,
        *,
        packet_mirrorings : typing.Optional[typing.Iterable[global___PacketMirroring]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","packet_mirrorings",b"packet_mirrorings","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___PacketMirroringsScopedList = PacketMirroringsScopedList

class PatchAutoscalerRequest(google.protobuf.message.Message):
    """A request message for Autoscalers.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_FIELD_NUMBER: builtins.int
    AUTOSCALER_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    autoscaler: typing.Text = ...
    """Name of the autoscaler to patch."""

    @property
    def autoscaler_resource(self) -> global___Autoscaler:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        autoscaler : typing.Optional[typing.Text] = ...,
        autoscaler_resource : typing.Optional[global___Autoscaler] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_autoscaler",b"_autoscaler","_request_id",b"_request_id","autoscaler",b"autoscaler","autoscaler_resource",b"autoscaler_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_autoscaler",b"_autoscaler","_request_id",b"_request_id","autoscaler",b"autoscaler","autoscaler_resource",b"autoscaler_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_autoscaler",b"_autoscaler"]) -> typing.Optional[typing_extensions.Literal["autoscaler"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchAutoscalerRequest = PatchAutoscalerRequest

class PatchBackendBucketRequest(google.protobuf.message.Message):
    """A request message for BackendBuckets.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_BUCKET_FIELD_NUMBER: builtins.int
    BACKEND_BUCKET_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_bucket: typing.Text = ...
    """Name of the BackendBucket resource to patch."""

    @property
    def backend_bucket_resource(self) -> global___BackendBucket:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_bucket : typing.Text = ...,
        backend_bucket_resource : typing.Optional[global___BackendBucket] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_bucket_resource",b"backend_bucket_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_bucket",b"backend_bucket","backend_bucket_resource",b"backend_bucket_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchBackendBucketRequest = PatchBackendBucketRequest

class PatchBackendServiceRequest(google.protobuf.message.Message):
    """A request message for BackendServices.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    BACKEND_SERVICE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to patch."""

    @property
    def backend_service_resource(self) -> global___BackendService:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        backend_service_resource : typing.Optional[global___BackendService] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service_resource",b"backend_service_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service",b"backend_service","backend_service_resource",b"backend_service_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchBackendServiceRequest = PatchBackendServiceRequest

class PatchFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    FIREWALL_POLICY_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to update."""

    @property
    def firewall_policy_resource(self) -> global___FirewallPolicy:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        firewall_policy_resource : typing.Optional[global___FirewallPolicy] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_policy_resource",b"firewall_policy_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_policy",b"firewall_policy","firewall_policy_resource",b"firewall_policy_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchFirewallPolicyRequest = PatchFirewallPolicyRequest

class PatchFirewallRequest(google.protobuf.message.Message):
    """A request message for Firewalls.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_FIELD_NUMBER: builtins.int
    FIREWALL_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall: typing.Text = ...
    """Name of the firewall rule to patch."""

    @property
    def firewall_resource(self) -> global___Firewall:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall : typing.Text = ...,
        firewall_resource : typing.Optional[global___Firewall] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_resource",b"firewall_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall",b"firewall","firewall_resource",b"firewall_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchFirewallRequest = PatchFirewallRequest

class PatchForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for ForwardingRules.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    FORWARDING_RULE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    forwarding_rule: typing.Text = ...
    """Name of the ForwardingRule resource to patch."""

    @property
    def forwarding_rule_resource(self) -> global___ForwardingRule:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        forwarding_rule : typing.Text = ...,
        forwarding_rule_resource : typing.Optional[global___ForwardingRule] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule_resource",b"forwarding_rule_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule",b"forwarding_rule","forwarding_rule_resource",b"forwarding_rule_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchForwardingRuleRequest = PatchForwardingRuleRequest

class PatchGlobalForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for GlobalForwardingRules.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    FORWARDING_RULE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    forwarding_rule: typing.Text = ...
    """Name of the ForwardingRule resource to patch."""

    @property
    def forwarding_rule_resource(self) -> global___ForwardingRule:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        forwarding_rule : typing.Text = ...,
        forwarding_rule_resource : typing.Optional[global___ForwardingRule] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule_resource",b"forwarding_rule_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule",b"forwarding_rule","forwarding_rule_resource",b"forwarding_rule_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchGlobalForwardingRuleRequest = PatchGlobalForwardingRuleRequest

class PatchGlobalPublicDelegatedPrefixeRequest(google.protobuf.message.Message):
    """A request message for GlobalPublicDelegatedPrefixes.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIX_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIX_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    public_delegated_prefix: typing.Text = ...
    """Name of the PublicDelegatedPrefix resource to patch."""

    @property
    def public_delegated_prefix_resource(self) -> global___PublicDelegatedPrefix:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_delegated_prefix : typing.Text = ...,
        public_delegated_prefix_resource : typing.Optional[global___PublicDelegatedPrefix] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","public_delegated_prefix_resource",b"public_delegated_prefix_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","public_delegated_prefix",b"public_delegated_prefix","public_delegated_prefix_resource",b"public_delegated_prefix_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchGlobalPublicDelegatedPrefixeRequest = PatchGlobalPublicDelegatedPrefixeRequest

class PatchHealthCheckRequest(google.protobuf.message.Message):
    """A request message for HealthChecks.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    HEALTH_CHECK_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    health_check: typing.Text = ...
    """Name of the HealthCheck resource to patch."""

    @property
    def health_check_resource(self) -> global___HealthCheck:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check : typing.Text = ...,
        health_check_resource : typing.Optional[global___HealthCheck] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_resource",b"health_check_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check",b"health_check","health_check_resource",b"health_check_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchHealthCheckRequest = PatchHealthCheckRequest

class PatchImageRequest(google.protobuf.message.Message):
    """A request message for Images.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IMAGE_FIELD_NUMBER: builtins.int
    IMAGE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    image: typing.Text = ...
    """Name of the image resource to patch."""

    @property
    def image_resource(self) -> global___Image:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        image : typing.Text = ...,
        image_resource : typing.Optional[global___Image] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","image_resource",b"image_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","image",b"image","image_resource",b"image_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchImageRequest = PatchImageRequest

class PatchInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGER_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the instance group manager."""

    @property
    def instance_group_manager_resource(self) -> global___InstanceGroupManager:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where you want to create the managed instance group."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_manager_resource : typing.Optional[global___InstanceGroupManager] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager_resource",b"instance_group_manager_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","instance_group_manager_resource",b"instance_group_manager_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchInstanceGroupManagerRequest = PatchInstanceGroupManagerRequest

class PatchInterconnectAttachmentRequest(google.protobuf.message.Message):
    """A request message for InterconnectAttachments.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_ATTACHMENT_FIELD_NUMBER: builtins.int
    INTERCONNECT_ATTACHMENT_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    interconnect_attachment: typing.Text = ...
    """Name of the interconnect attachment to patch."""

    @property
    def interconnect_attachment_resource(self) -> global___InterconnectAttachment:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        interconnect_attachment : typing.Text = ...,
        interconnect_attachment_resource : typing.Optional[global___InterconnectAttachment] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","interconnect_attachment_resource",b"interconnect_attachment_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","interconnect_attachment",b"interconnect_attachment","interconnect_attachment_resource",b"interconnect_attachment_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchInterconnectAttachmentRequest = PatchInterconnectAttachmentRequest

class PatchInterconnectRequest(google.protobuf.message.Message):
    """A request message for Interconnects.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INTERCONNECT_FIELD_NUMBER: builtins.int
    INTERCONNECT_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    interconnect: typing.Text = ...
    """Name of the interconnect to update."""

    @property
    def interconnect_resource(self) -> global___Interconnect:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        interconnect : typing.Text = ...,
        interconnect_resource : typing.Optional[global___Interconnect] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","interconnect_resource",b"interconnect_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","interconnect",b"interconnect","interconnect_resource",b"interconnect_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchInterconnectRequest = PatchInterconnectRequest

class PatchNetworkRequest(google.protobuf.message.Message):
    """A request message for Networks.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_FIELD_NUMBER: builtins.int
    NETWORK_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    network: typing.Text = ...
    """Name of the network to update."""

    @property
    def network_resource(self) -> global___Network:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network : typing.Text = ...,
        network_resource : typing.Optional[global___Network] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_resource",b"network_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network",b"network","network_resource",b"network_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchNetworkRequest = PatchNetworkRequest

class PatchNodeGroupRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_GROUP_FIELD_NUMBER: builtins.int
    NODE_GROUP_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    node_group: typing.Text = ...
    """Name of the NodeGroup resource to update."""

    @property
    def node_group_resource(self) -> global___NodeGroup:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        node_group : typing.Text = ...,
        node_group_resource : typing.Optional[global___NodeGroup] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_group_resource",b"node_group_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_group",b"node_group","node_group_resource",b"node_group_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchNodeGroupRequest = PatchNodeGroupRequest

class PatchPacketMirroringRequest(google.protobuf.message.Message):
    """A request message for PacketMirrorings.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PACKET_MIRRORING_FIELD_NUMBER: builtins.int
    PACKET_MIRRORING_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    packet_mirroring: typing.Text = ...
    """Name of the PacketMirroring resource to patch."""

    @property
    def packet_mirroring_resource(self) -> global___PacketMirroring:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        packet_mirroring : typing.Text = ...,
        packet_mirroring_resource : typing.Optional[global___PacketMirroring] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","packet_mirroring_resource",b"packet_mirroring_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","packet_mirroring",b"packet_mirroring","packet_mirroring_resource",b"packet_mirroring_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchPacketMirroringRequest = PatchPacketMirroringRequest

class PatchPerInstanceConfigsInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.PatchPerInstanceConfigs. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGERS_PATCH_PER_INSTANCE_CONFIGS_REQ_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It should conform to RFC1035."""

    @property
    def instance_group_managers_patch_per_instance_configs_req_resource(self) -> global___InstanceGroupManagersPatchPerInstanceConfigsReq:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located. It should conform to RFC1035."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_managers_patch_per_instance_configs_req_resource : typing.Optional[global___InstanceGroupManagersPatchPerInstanceConfigsReq] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_managers_patch_per_instance_configs_req_resource",b"instance_group_managers_patch_per_instance_configs_req_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","instance_group_managers_patch_per_instance_configs_req_resource",b"instance_group_managers_patch_per_instance_configs_req_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchPerInstanceConfigsInstanceGroupManagerRequest = PatchPerInstanceConfigsInstanceGroupManagerRequest

class PatchPerInstanceConfigsRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.PatchPerInstanceConfigs. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUP_MANAGER_PATCH_INSTANCE_CONFIG_REQ_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It should conform to RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request, should conform to RFC1035."""

    @property
    def region_instance_group_manager_patch_instance_config_req_resource(self) -> global___RegionInstanceGroupManagerPatchInstanceConfigReq:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_group_manager_patch_instance_config_req_resource : typing.Optional[global___RegionInstanceGroupManagerPatchInstanceConfigReq] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_instance_group_manager_patch_instance_config_req_resource",b"region_instance_group_manager_patch_instance_config_req_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","region_instance_group_manager_patch_instance_config_req_resource",b"region_instance_group_manager_patch_instance_config_req_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchPerInstanceConfigsRegionInstanceGroupManagerRequest = PatchPerInstanceConfigsRegionInstanceGroupManagerRequest

class PatchPublicAdvertisedPrefixeRequest(google.protobuf.message.Message):
    """A request message for PublicAdvertisedPrefixes.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_ADVERTISED_PREFIX_FIELD_NUMBER: builtins.int
    PUBLIC_ADVERTISED_PREFIX_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    public_advertised_prefix: typing.Text = ...
    """Name of the PublicAdvertisedPrefix resource to patch."""

    @property
    def public_advertised_prefix_resource(self) -> global___PublicAdvertisedPrefix:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_advertised_prefix : typing.Text = ...,
        public_advertised_prefix_resource : typing.Optional[global___PublicAdvertisedPrefix] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","public_advertised_prefix_resource",b"public_advertised_prefix_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","public_advertised_prefix",b"public_advertised_prefix","public_advertised_prefix_resource",b"public_advertised_prefix_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchPublicAdvertisedPrefixeRequest = PatchPublicAdvertisedPrefixeRequest

class PatchPublicDelegatedPrefixeRequest(google.protobuf.message.Message):
    """A request message for PublicDelegatedPrefixes.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIX_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIX_RESOURCE_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    public_delegated_prefix: typing.Text = ...
    """Name of the PublicDelegatedPrefix resource to patch."""

    @property
    def public_delegated_prefix_resource(self) -> global___PublicDelegatedPrefix:
        """The body resource for this request"""
        pass
    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    def __init__(self,
        *,
        project : typing.Text = ...,
        public_delegated_prefix : typing.Text = ...,
        public_delegated_prefix_resource : typing.Optional[global___PublicDelegatedPrefix] = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","public_delegated_prefix_resource",b"public_delegated_prefix_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","public_delegated_prefix",b"public_delegated_prefix","public_delegated_prefix_resource",b"public_delegated_prefix_resource","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchPublicDelegatedPrefixeRequest = PatchPublicDelegatedPrefixeRequest

class PatchRegionAutoscalerRequest(google.protobuf.message.Message):
    """A request message for RegionAutoscalers.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_FIELD_NUMBER: builtins.int
    AUTOSCALER_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    autoscaler: typing.Text = ...
    """Name of the autoscaler to patch."""

    @property
    def autoscaler_resource(self) -> global___Autoscaler:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        autoscaler : typing.Optional[typing.Text] = ...,
        autoscaler_resource : typing.Optional[global___Autoscaler] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_autoscaler",b"_autoscaler","_request_id",b"_request_id","autoscaler",b"autoscaler","autoscaler_resource",b"autoscaler_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_autoscaler",b"_autoscaler","_request_id",b"_request_id","autoscaler",b"autoscaler","autoscaler_resource",b"autoscaler_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_autoscaler",b"_autoscaler"]) -> typing.Optional[typing_extensions.Literal["autoscaler"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchRegionAutoscalerRequest = PatchRegionAutoscalerRequest

class PatchRegionBackendServiceRequest(google.protobuf.message.Message):
    """A request message for RegionBackendServices.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    BACKEND_SERVICE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to patch."""

    @property
    def backend_service_resource(self) -> global___BackendService:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        backend_service_resource : typing.Optional[global___BackendService] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service_resource",b"backend_service_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service",b"backend_service","backend_service_resource",b"backend_service_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchRegionBackendServiceRequest = PatchRegionBackendServiceRequest

class PatchRegionHealthCheckRequest(google.protobuf.message.Message):
    """A request message for RegionHealthChecks.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    HEALTH_CHECK_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    health_check: typing.Text = ...
    """Name of the HealthCheck resource to patch."""

    @property
    def health_check_resource(self) -> global___HealthCheck:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check : typing.Text = ...,
        health_check_resource : typing.Optional[global___HealthCheck] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_resource",b"health_check_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check",b"health_check","health_check_resource",b"health_check_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchRegionHealthCheckRequest = PatchRegionHealthCheckRequest

class PatchRegionHealthCheckServiceRequest(google.protobuf.message.Message):
    """A request message for RegionHealthCheckServices.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_SERVICE_FIELD_NUMBER: builtins.int
    HEALTH_CHECK_SERVICE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    health_check_service: typing.Text = ...
    """Name of the HealthCheckService to update. The name must be 1-63 characters long, and comply with RFC1035."""

    @property
    def health_check_service_resource(self) -> global___HealthCheckService:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check_service : typing.Text = ...,
        health_check_service_resource : typing.Optional[global___HealthCheckService] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_service_resource",b"health_check_service_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_service",b"health_check_service","health_check_service_resource",b"health_check_service_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchRegionHealthCheckServiceRequest = PatchRegionHealthCheckServiceRequest

class PatchRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGER_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the instance group manager."""

    @property
    def instance_group_manager_resource(self) -> global___InstanceGroupManager:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_manager_resource : typing.Optional[global___InstanceGroupManager] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager_resource",b"instance_group_manager_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","instance_group_manager_resource",b"instance_group_manager_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchRegionInstanceGroupManagerRequest = PatchRegionInstanceGroupManagerRequest

class PatchRegionUrlMapRequest(google.protobuf.message.Message):
    """A request message for RegionUrlMaps.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    URL_MAP_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """begin_interface: MixerMutationRequestBuilder Request ID to support idempotency."""

    url_map: typing.Text = ...
    """Name of the UrlMap resource to patch."""

    @property
    def url_map_resource(self) -> global___UrlMap:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        url_map : typing.Text = ...,
        url_map_resource : typing.Optional[global___UrlMap] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","url_map_resource",b"url_map_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","url_map",b"url_map","url_map_resource",b"url_map_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchRegionUrlMapRequest = PatchRegionUrlMapRequest

class PatchRouterRequest(google.protobuf.message.Message):
    """A request message for Routers.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ROUTER_FIELD_NUMBER: builtins.int
    ROUTER_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    router: typing.Text = ...
    """Name of the Router resource to patch."""

    @property
    def router_resource(self) -> global___Router:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        router : typing.Text = ...,
        router_resource : typing.Optional[global___Router] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","router_resource",b"router_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","router",b"router","router_resource",b"router_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchRouterRequest = PatchRouterRequest

class PatchRuleFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.PatchRule. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    FIREWALL_POLICY_RULE_RESOURCE_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to update."""

    @property
    def firewall_policy_rule_resource(self) -> global___FirewallPolicyRule:
        """The body resource for this request"""
        pass
    priority: builtins.int = ...
    """The priority of the rule to patch."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        firewall_policy_rule_resource : typing.Optional[global___FirewallPolicyRule] = ...,
        priority : typing.Optional[builtins.int] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_priority",b"_priority","_request_id",b"_request_id","firewall_policy_rule_resource",b"firewall_policy_rule_resource","priority",b"priority","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_priority",b"_priority","_request_id",b"_request_id","firewall_policy",b"firewall_policy","firewall_policy_rule_resource",b"firewall_policy_rule_resource","priority",b"priority","request_id",b"request_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchRuleFirewallPolicyRequest = PatchRuleFirewallPolicyRequest

class PatchRuleSecurityPolicyRequest(google.protobuf.message.Message):
    """A request message for SecurityPolicies.PatchRule. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRIORITY_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_RULE_RESOURCE_FIELD_NUMBER: builtins.int
    priority: builtins.int = ...
    """The priority of the rule to patch."""

    project: typing.Text = ...
    """Project ID for this request."""

    security_policy: typing.Text = ...
    """Name of the security policy to update."""

    @property
    def security_policy_rule_resource(self) -> global___SecurityPolicyRule:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        priority : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        security_policy : typing.Text = ...,
        security_policy_rule_resource : typing.Optional[global___SecurityPolicyRule] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_priority",b"_priority","priority",b"priority","security_policy_rule_resource",b"security_policy_rule_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_priority",b"_priority","priority",b"priority","project",b"project","security_policy",b"security_policy","security_policy_rule_resource",b"security_policy_rule_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
global___PatchRuleSecurityPolicyRequest = PatchRuleSecurityPolicyRequest

class PatchSecurityPolicyRequest(google.protobuf.message.Message):
    """A request message for SecurityPolicies.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    security_policy: typing.Text = ...
    """Name of the security policy to update."""

    @property
    def security_policy_resource(self) -> global___SecurityPolicy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        security_policy : typing.Text = ...,
        security_policy_resource : typing.Optional[global___SecurityPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","security_policy_resource",b"security_policy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","security_policy",b"security_policy","security_policy_resource",b"security_policy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchSecurityPolicyRequest = PatchSecurityPolicyRequest

class PatchServiceAttachmentRequest(google.protobuf.message.Message):
    """A request message for ServiceAttachments.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SERVICE_ATTACHMENT_FIELD_NUMBER: builtins.int
    SERVICE_ATTACHMENT_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The region scoping this request and should conform to RFC1035."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    service_attachment: typing.Text = ...
    """The resource id of the ServiceAttachment to patch. It should conform to RFC1035 resource name or be a string form on an unsigned long number."""

    @property
    def service_attachment_resource(self) -> global___ServiceAttachment:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        service_attachment : typing.Text = ...,
        service_attachment_resource : typing.Optional[global___ServiceAttachment] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","service_attachment_resource",b"service_attachment_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","service_attachment",b"service_attachment","service_attachment_resource",b"service_attachment_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchServiceAttachmentRequest = PatchServiceAttachmentRequest

class PatchSslPolicyRequest(google.protobuf.message.Message):
    """A request message for SslPolicies.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SSL_POLICY_FIELD_NUMBER: builtins.int
    SSL_POLICY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    ssl_policy: typing.Text = ...
    """Name of the SSL policy to update. The name must be 1-63 characters long, and comply with RFC1035."""

    @property
    def ssl_policy_resource(self) -> global___SslPolicy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ssl_policy : typing.Text = ...,
        ssl_policy_resource : typing.Optional[global___SslPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","ssl_policy_resource",b"ssl_policy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","ssl_policy",b"ssl_policy","ssl_policy_resource",b"ssl_policy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchSslPolicyRequest = PatchSslPolicyRequest

class PatchSubnetworkRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DRAIN_TIMEOUT_SECONDS_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    SUBNETWORK_RESOURCE_FIELD_NUMBER: builtins.int
    drain_timeout_seconds: builtins.int = ...
    """The drain timeout specifies the upper bound in seconds on the amount of time allowed to drain connections from the current ACTIVE subnetwork to the current BACKUP subnetwork. The drain timeout is only applicable when the following conditions are true: - the subnetwork being patched has purpose = INTERNAL_HTTPS_LOAD_BALANCER - the subnetwork being patched has role = BACKUP - the patch request is setting the role to ACTIVE. Note that after this patch operation the roles of the ACTIVE and BACKUP subnetworks will be swapped."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    subnetwork: typing.Text = ...
    """Name of the Subnetwork resource to patch."""

    @property
    def subnetwork_resource(self) -> global___Subnetwork:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        drain_timeout_seconds : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        subnetwork : typing.Text = ...,
        subnetwork_resource : typing.Optional[global___Subnetwork] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_drain_timeout_seconds",b"_drain_timeout_seconds","_request_id",b"_request_id","drain_timeout_seconds",b"drain_timeout_seconds","request_id",b"request_id","subnetwork_resource",b"subnetwork_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_drain_timeout_seconds",b"_drain_timeout_seconds","_request_id",b"_request_id","drain_timeout_seconds",b"drain_timeout_seconds","project",b"project","region",b"region","request_id",b"request_id","subnetwork",b"subnetwork","subnetwork_resource",b"subnetwork_resource"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_drain_timeout_seconds",b"_drain_timeout_seconds"]) -> typing.Optional[typing_extensions.Literal["drain_timeout_seconds"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchSubnetworkRequest = PatchSubnetworkRequest

class PatchTargetGrpcProxyRequest(google.protobuf.message.Message):
    """A request message for TargetGrpcProxies.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_GRPC_PROXY_FIELD_NUMBER: builtins.int
    TARGET_GRPC_PROXY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    target_grpc_proxy: typing.Text = ...
    """Name of the TargetGrpcProxy resource to patch."""

    @property
    def target_grpc_proxy_resource(self) -> global___TargetGrpcProxy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_grpc_proxy : typing.Text = ...,
        target_grpc_proxy_resource : typing.Optional[global___TargetGrpcProxy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_grpc_proxy_resource",b"target_grpc_proxy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_grpc_proxy",b"target_grpc_proxy","target_grpc_proxy_resource",b"target_grpc_proxy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchTargetGrpcProxyRequest = PatchTargetGrpcProxyRequest

class PatchTargetHttpProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpProxies.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTP_PROXY_FIELD_NUMBER: builtins.int
    TARGET_HTTP_PROXY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    target_http_proxy: typing.Text = ...
    """Name of the TargetHttpProxy resource to patch."""

    @property
    def target_http_proxy_resource(self) -> global___TargetHttpProxy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_http_proxy : typing.Text = ...,
        target_http_proxy_resource : typing.Optional[global___TargetHttpProxy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_http_proxy_resource",b"target_http_proxy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_http_proxy",b"target_http_proxy","target_http_proxy_resource",b"target_http_proxy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchTargetHttpProxyRequest = PatchTargetHttpProxyRequest

class PatchTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpsProxies.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy resource to patch."""

    @property
    def target_https_proxy_resource(self) -> global___TargetHttpsProxy:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_https_proxy : typing.Text = ...,
        target_https_proxy_resource : typing.Optional[global___TargetHttpsProxy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_https_proxy_resource",b"target_https_proxy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_https_proxy",b"target_https_proxy","target_https_proxy_resource",b"target_https_proxy_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchTargetHttpsProxyRequest = PatchTargetHttpsProxyRequest

class PatchUrlMapRequest(google.protobuf.message.Message):
    """A request message for UrlMaps.Patch. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    URL_MAP_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    url_map: typing.Text = ...
    """Name of the UrlMap resource to patch."""

    @property
    def url_map_resource(self) -> global___UrlMap:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        url_map : typing.Text = ...,
        url_map_resource : typing.Optional[global___UrlMap] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","url_map_resource",b"url_map_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","url_map",b"url_map","url_map_resource",b"url_map_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___PatchUrlMapRequest = PatchUrlMapRequest

class PathMatcher(google.protobuf.message.Message):
    """A matcher for the path portion of the URL. The BackendService from the longest-matched rule will serve the URL. If no rule was matched, the default service will be used."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEFAULT_ROUTE_ACTION_FIELD_NUMBER: builtins.int
    DEFAULT_SERVICE_FIELD_NUMBER: builtins.int
    DEFAULT_URL_REDIRECT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    HEADER_ACTION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PATH_RULES_FIELD_NUMBER: builtins.int
    ROUTE_RULES_FIELD_NUMBER: builtins.int
    @property
    def default_route_action(self) -> global___HttpRouteAction:
        """defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices. Only one of defaultRouteAction or defaultUrlRedirect must be set. UrlMaps for external HTTP(S) load balancers support only the urlRewrite action within a pathMatcher's defaultRouteAction."""
        pass
    default_service: typing.Text = ...
    """The full or partial URL to the BackendService resource. This will be used if none of the pathRules or routeRules defined by this PathMatcher are matched. For example, the following are all valid URLs to a BackendService resource: - https://www.googleapis.com/compute/v1/projects/project /global/backendServices/backendService - compute/v1/projects/project/global/backendServices/backendService - global/backendServices/backendService If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if defaultRouteAction specifies any weightedBackendServices, defaultService must not be specified. Only one of defaultService, defaultUrlRedirect or defaultRouteAction.weightedBackendService must be set. Authorization requires one or more of the following Google IAM permissions on the specified resource default_service: - compute.backendBuckets.use - compute.backendServices.use"""

    @property
    def default_url_redirect(self) -> global___HttpRedirectAction:
        """When none of the specified pathRules or routeRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set. Not supported when the URL map is bound to target gRPC proxy."""
        pass
    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    @property
    def header_action(self) -> global___HttpHeaderAction:
        """Specifies changes to request and response headers that need to take effect for the selected backendService. HeaderAction specified here are applied after the matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap Note that headerAction is not supported for Loadbalancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    name: typing.Text = ...
    """The name to which this PathMatcher is referred by the HostRule."""

    @property
    def path_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PathRule]:
        """The list of path rules. Use this list instead of routeRules when routing based on simple path matching is all that's required. The order by which path rules are specified does not matter. Matches are always done on the longest-path-first basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/* irrespective of the order in which those paths appear in this list. Within a given pathMatcher, only one of pathRules or routeRules must be set."""
        pass
    @property
    def route_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HttpRouteRule]:
        """The list of HTTP route rules. Use this list instead of pathRules when advanced route matching and routing actions are desired. routeRules are evaluated in order of priority, from the lowest to highest number. Within a given pathMatcher, you can set only one of pathRules or routeRules."""
        pass
    def __init__(self,
        *,
        default_route_action : typing.Optional[global___HttpRouteAction] = ...,
        default_service : typing.Optional[typing.Text] = ...,
        default_url_redirect : typing.Optional[global___HttpRedirectAction] = ...,
        description : typing.Optional[typing.Text] = ...,
        header_action : typing.Optional[global___HttpHeaderAction] = ...,
        name : typing.Optional[typing.Text] = ...,
        path_rules : typing.Optional[typing.Iterable[global___PathRule]] = ...,
        route_rules : typing.Optional[typing.Iterable[global___HttpRouteRule]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_default_route_action",b"_default_route_action","_default_service",b"_default_service","_default_url_redirect",b"_default_url_redirect","_description",b"_description","_header_action",b"_header_action","_name",b"_name","default_route_action",b"default_route_action","default_service",b"default_service","default_url_redirect",b"default_url_redirect","description",b"description","header_action",b"header_action","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_default_route_action",b"_default_route_action","_default_service",b"_default_service","_default_url_redirect",b"_default_url_redirect","_description",b"_description","_header_action",b"_header_action","_name",b"_name","default_route_action",b"default_route_action","default_service",b"default_service","default_url_redirect",b"default_url_redirect","description",b"description","header_action",b"header_action","name",b"name","path_rules",b"path_rules","route_rules",b"route_rules"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_route_action",b"_default_route_action"]) -> typing.Optional[typing_extensions.Literal["default_route_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_service",b"_default_service"]) -> typing.Optional[typing_extensions.Literal["default_service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_url_redirect",b"_default_url_redirect"]) -> typing.Optional[typing_extensions.Literal["default_url_redirect"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_header_action",b"_header_action"]) -> typing.Optional[typing_extensions.Literal["header_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
global___PathMatcher = PathMatcher

class PathRule(google.protobuf.message.Message):
    """A path-matching rule for a URL. If matched, will use the specified BackendService to handle the traffic arriving at this URL."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PATHS_FIELD_NUMBER: builtins.int
    ROUTE_ACTION_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    URL_REDIRECT_FIELD_NUMBER: builtins.int
    @property
    def paths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here."""
        pass
    @property
    def route_action(self) -> global___HttpRouteAction:
        """In response to a matching path, the load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If routeAction specifies any weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any weightedBackendServices. Only one of routeAction or urlRedirect must be set. UrlMaps for external HTTP(S) load balancers support only the urlRewrite action within a pathRule's routeAction."""
        pass
    service: typing.Text = ...
    """The full or partial URL of the backend service resource to which traffic is directed if this rule is matched. If routeAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendService s. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of urlRedirect, service or routeAction.weightedBackendService must be set."""

    @property
    def url_redirect(self) -> global___HttpRedirectAction:
        """When a path pattern is matched, the request is redirected to a URL specified by urlRedirect. If urlRedirect is specified, service or routeAction must not be set. Not supported when the URL map is bound to target gRPC proxy."""
        pass
    def __init__(self,
        *,
        paths : typing.Optional[typing.Iterable[typing.Text]] = ...,
        route_action : typing.Optional[global___HttpRouteAction] = ...,
        service : typing.Optional[typing.Text] = ...,
        url_redirect : typing.Optional[global___HttpRedirectAction] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_route_action",b"_route_action","_service",b"_service","_url_redirect",b"_url_redirect","route_action",b"route_action","service",b"service","url_redirect",b"url_redirect"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_route_action",b"_route_action","_service",b"_service","_url_redirect",b"_url_redirect","paths",b"paths","route_action",b"route_action","service",b"service","url_redirect",b"url_redirect"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_route_action",b"_route_action"]) -> typing.Optional[typing_extensions.Literal["route_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_redirect",b"_url_redirect"]) -> typing.Optional[typing_extensions.Literal["url_redirect"]]: ...
global___PathRule = PathRule

class PerInstanceConfig(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: PerInstanceConfig.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        APPLYING: PerInstanceConfig.Status.ValueType = ...  # 352003508
        """The per-instance config is being applied to the instance, but is not yet effective, possibly waiting for the instance to, for example, REFRESH."""

        DELETING: PerInstanceConfig.Status.ValueType = ...  # 528602024
        """The per-instance config deletion is being applied on the instance, possibly waiting for the instance to, for example, REFRESH."""

        EFFECTIVE: PerInstanceConfig.Status.ValueType = ...  # 244201863
        """The per-instance config is effective on the instance, meaning that all disks, ips and metadata specified in this config are attached or set on the instance."""

        NONE: PerInstanceConfig.Status.ValueType = ...  # 2402104
        """*[Default]* The default status, when no per-instance config exists."""

        UNAPPLIED: PerInstanceConfig.Status.ValueType = ...  # 483935140
        """The per-instance config is set on an instance but not been applied yet."""

        UNAPPLIED_DELETION: PerInstanceConfig.Status.ValueType = ...  # 313956873
        """The per-instance config has been deleted, but the deletion is not yet applied."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """The status of applying this per-instance config on the corresponding managed instance."""
        pass

    UNDEFINED_STATUS: PerInstanceConfig.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    APPLYING: PerInstanceConfig.Status.ValueType = ...  # 352003508
    """The per-instance config is being applied to the instance, but is not yet effective, possibly waiting for the instance to, for example, REFRESH."""

    DELETING: PerInstanceConfig.Status.ValueType = ...  # 528602024
    """The per-instance config deletion is being applied on the instance, possibly waiting for the instance to, for example, REFRESH."""

    EFFECTIVE: PerInstanceConfig.Status.ValueType = ...  # 244201863
    """The per-instance config is effective on the instance, meaning that all disks, ips and metadata specified in this config are attached or set on the instance."""

    NONE: PerInstanceConfig.Status.ValueType = ...  # 2402104
    """*[Default]* The default status, when no per-instance config exists."""

    UNAPPLIED: PerInstanceConfig.Status.ValueType = ...  # 483935140
    """The per-instance config is set on an instance but not been applied yet."""

    UNAPPLIED_DELETION: PerInstanceConfig.Status.ValueType = ...  # 313956873
    """The per-instance config has been deleted, but the deletion is not yet applied."""


    FINGERPRINT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PRESERVED_STATE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    fingerprint: typing.Text = ...
    """Fingerprint of this per-instance config. This field can be used in optimistic locking. It is ignored when inserting a per-instance config. An up-to-date fingerprint must be provided in order to update an existing per-instance config or the field needs to be unset."""

    name: typing.Text = ...
    """The name of a per-instance config and its corresponding instance. Serves as a merge key during UpdatePerInstanceConfigs operations, that is, if a per-instance config with the same name exists then it will be updated, otherwise a new one will be created for the VM instance with the same name. An attempt to create a per-instance config for a VM instance that either doesn't exist or is not part of the group will result in an error."""

    @property
    def preserved_state(self) -> global___PreservedState:
        """The intended preserved state for the given instance. Does not contain preserved state generated from a stateful policy."""
        pass
    status: typing.Text = ...
    """The status of applying this per-instance config on the corresponding managed instance.
    Check the Status enum for the list of possible values.
    """

    def __init__(self,
        *,
        fingerprint : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        preserved_state : typing.Optional[global___PreservedState] = ...,
        status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","_name",b"_name","_preserved_state",b"_preserved_state","_status",b"_status","fingerprint",b"fingerprint","name",b"name","preserved_state",b"preserved_state","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","_name",b"_name","_preserved_state",b"_preserved_state","_status",b"_status","fingerprint",b"fingerprint","name",b"name","preserved_state",b"preserved_state","status",b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preserved_state",b"_preserved_state"]) -> typing.Optional[typing_extensions.Literal["preserved_state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___PerInstanceConfig = PerInstanceConfig

class Policy(google.protobuf.message.Message):
    """An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUDIT_CONFIGS_FIELD_NUMBER: builtins.int
    BINDINGS_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    IAM_OWNED_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    @property
    def audit_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AuditConfig]:
        """Specifies cloud audit logging configuration for this policy."""
        pass
    @property
    def bindings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Binding]:
        """Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."""
        pass
    etag: typing.Text = ...
    """`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."""

    iam_owned: builtins.bool = ...
    """This is deprecated and has no effect. Do not use."""

    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Rule]:
        """This is deprecated and has no effect. Do not use."""
        pass
    version: builtins.int = ...
    """Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."""

    def __init__(self,
        *,
        audit_configs : typing.Optional[typing.Iterable[global___AuditConfig]] = ...,
        bindings : typing.Optional[typing.Iterable[global___Binding]] = ...,
        etag : typing.Optional[typing.Text] = ...,
        iam_owned : typing.Optional[builtins.bool] = ...,
        rules : typing.Optional[typing.Iterable[global___Rule]] = ...,
        version : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_iam_owned",b"_iam_owned","_version",b"_version","etag",b"etag","iam_owned",b"iam_owned","version",b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_iam_owned",b"_iam_owned","_version",b"_version","audit_configs",b"audit_configs","bindings",b"bindings","etag",b"etag","iam_owned",b"iam_owned","rules",b"rules","version",b"version"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_etag",b"_etag"]) -> typing.Optional[typing_extensions.Literal["etag"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_iam_owned",b"_iam_owned"]) -> typing.Optional[typing_extensions.Literal["iam_owned"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_version",b"_version"]) -> typing.Optional[typing_extensions.Literal["version"]]: ...
global___Policy = Policy

class PreconfiguredWafSet(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXPRESSION_SETS_FIELD_NUMBER: builtins.int
    @property
    def expression_sets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WafExpressionSet]:
        """List of entities that are currently supported for WAF rules."""
        pass
    def __init__(self,
        *,
        expression_sets : typing.Optional[typing.Iterable[global___WafExpressionSet]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["expression_sets",b"expression_sets"]) -> None: ...
global___PreconfiguredWafSet = PreconfiguredWafSet

class PreservedState(google.protobuf.message.Message):
    """Preserved state for a given instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class DisksEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___PreservedStatePreservedDisk: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___PreservedStatePreservedDisk] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DISKS_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    @property
    def disks(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___PreservedStatePreservedDisk]:
        """Preserved disks defined for this instance. This map is keyed with the device names of the disks."""
        pass
    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Preserved metadata defined for this instance."""
        pass
    def __init__(self,
        *,
        disks : typing.Optional[typing.Mapping[typing.Text, global___PreservedStatePreservedDisk]] = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disks",b"disks","metadata",b"metadata"]) -> None: ...
global___PreservedState = PreservedState

class PreservedStatePreservedDisk(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AutoDelete:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AutoDeleteEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AutoDelete.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_AUTO_DELETE: PreservedStatePreservedDisk.AutoDelete.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NEVER: PreservedStatePreservedDisk.AutoDelete.ValueType = ...  # 74175084
        ON_PERMANENT_INSTANCE_DELETION: PreservedStatePreservedDisk.AutoDelete.ValueType = ...  # 95727719
    class AutoDelete(_AutoDelete, metaclass=_AutoDeleteEnumTypeWrapper):
        """These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted."""
        pass

    UNDEFINED_AUTO_DELETE: PreservedStatePreservedDisk.AutoDelete.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NEVER: PreservedStatePreservedDisk.AutoDelete.ValueType = ...  # 74175084
    ON_PERMANENT_INSTANCE_DELETION: PreservedStatePreservedDisk.AutoDelete.ValueType = ...  # 95727719

    class _Mode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Mode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_MODE: PreservedStatePreservedDisk.Mode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        READ_ONLY: PreservedStatePreservedDisk.Mode.ValueType = ...  # 91950261
        """Attaches this disk in read-only mode. Multiple VM instances can use a disk in READ_ONLY mode at a time."""

        READ_WRITE: PreservedStatePreservedDisk.Mode.ValueType = ...  # 173607894
        """*[Default]* Attaches this disk in READ_WRITE mode. Only one VM instance at a time can be attached to a disk in READ_WRITE mode."""

    class Mode(_Mode, metaclass=_ModeEnumTypeWrapper):
        """The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode."""
        pass

    UNDEFINED_MODE: PreservedStatePreservedDisk.Mode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    READ_ONLY: PreservedStatePreservedDisk.Mode.ValueType = ...  # 91950261
    """Attaches this disk in read-only mode. Multiple VM instances can use a disk in READ_ONLY mode at a time."""

    READ_WRITE: PreservedStatePreservedDisk.Mode.ValueType = ...  # 173607894
    """*[Default]* Attaches this disk in READ_WRITE mode. Only one VM instance at a time can be attached to a disk in READ_WRITE mode."""


    AUTO_DELETE_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    auto_delete: typing.Text = ...
    """These stateful disks will never be deleted during autohealing, update, instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole MIG is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
    Check the AutoDelete enum for the list of possible values.
    """

    mode: typing.Text = ...
    """The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
    Check the Mode enum for the list of possible values.
    """

    source: typing.Text = ...
    """The URL of the disk resource that is stateful and should be attached to the VM instance."""

    def __init__(self,
        *,
        auto_delete : typing.Optional[typing.Text] = ...,
        mode : typing.Optional[typing.Text] = ...,
        source : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_auto_delete",b"_auto_delete","_mode",b"_mode","_source",b"_source","auto_delete",b"auto_delete","mode",b"mode","source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_auto_delete",b"_auto_delete","_mode",b"_mode","_source",b"_source","auto_delete",b"auto_delete","mode",b"mode","source",b"source"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_auto_delete",b"_auto_delete"]) -> typing.Optional[typing_extensions.Literal["auto_delete"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_mode",b"_mode"]) -> typing.Optional[typing_extensions.Literal["mode"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source",b"_source"]) -> typing.Optional[typing_extensions.Literal["source"]]: ...
global___PreservedStatePreservedDisk = PreservedStatePreservedDisk

class PreviewRouterRequest(google.protobuf.message.Message):
    """A request message for Routers.Preview. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    ROUTER_FIELD_NUMBER: builtins.int
    ROUTER_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    router: typing.Text = ...
    """Name of the Router resource to query."""

    @property
    def router_resource(self) -> global___Router:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        router : typing.Text = ...,
        router_resource : typing.Optional[global___Router] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["router_resource",b"router_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","router",b"router","router_resource",b"router_resource"]) -> None: ...
global___PreviewRouterRequest = PreviewRouterRequest

class Project(google.protobuf.message.Message):
    """Represents a Project resource. A project is used to organize resources in a Google Cloud Platform environment. For more information, read about the Resource Hierarchy."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DefaultNetworkTier:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DefaultNetworkTierEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DefaultNetworkTier.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_DEFAULT_NETWORK_TIER: Project.DefaultNetworkTier.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        PREMIUM: Project.DefaultNetworkTier.ValueType = ...  # 399530551
        """High quality, Google-grade network tier, support for all networking products."""

        STANDARD: Project.DefaultNetworkTier.ValueType = ...  # 484642493
        """Public internet quality, only limited support for other networking products."""

    class DefaultNetworkTier(_DefaultNetworkTier, metaclass=_DefaultNetworkTierEnumTypeWrapper):
        """This signifies the default network tier used for configuring resources of the project and can only take the following values: PREMIUM, STANDARD. Initially the default network tier is PREMIUM."""
        pass

    UNDEFINED_DEFAULT_NETWORK_TIER: Project.DefaultNetworkTier.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    PREMIUM: Project.DefaultNetworkTier.ValueType = ...  # 399530551
    """High quality, Google-grade network tier, support for all networking products."""

    STANDARD: Project.DefaultNetworkTier.ValueType = ...  # 484642493
    """Public internet quality, only limited support for other networking products."""


    class _XpnProjectStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _XpnProjectStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_XpnProjectStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_XPN_PROJECT_STATUS: Project.XpnProjectStatus.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        HOST: Project.XpnProjectStatus.ValueType = ...  # 2223528
        UNSPECIFIED_XPN_PROJECT_STATUS: Project.XpnProjectStatus.ValueType = ...  # 340393257
    class XpnProjectStatus(_XpnProjectStatus, metaclass=_XpnProjectStatusEnumTypeWrapper):
        """[Output Only] The role this project has in a shared VPC configuration. Currently, only projects with the host role, which is specified by the value HOST, are differentiated."""
        pass

    UNDEFINED_XPN_PROJECT_STATUS: Project.XpnProjectStatus.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    HOST: Project.XpnProjectStatus.ValueType = ...  # 2223528
    UNSPECIFIED_XPN_PROJECT_STATUS: Project.XpnProjectStatus.ValueType = ...  # 340393257

    COMMON_INSTANCE_METADATA_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEFAULT_NETWORK_TIER_FIELD_NUMBER: builtins.int
    DEFAULT_SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ENABLED_FEATURES_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    QUOTAS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    USAGE_EXPORT_LOCATION_FIELD_NUMBER: builtins.int
    XPN_PROJECT_STATUS_FIELD_NUMBER: builtins.int
    @property
    def common_instance_metadata(self) -> global___Metadata:
        """Metadata key/value pairs available to all instances contained in this project. See Custom metadata for more information."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    default_network_tier: typing.Text = ...
    """This signifies the default network tier used for configuring resources of the project and can only take the following values: PREMIUM, STANDARD. Initially the default network tier is PREMIUM.
    Check the DefaultNetworkTier enum for the list of possible values.
    """

    default_service_account: typing.Text = ...
    """[Output Only] Default service account used by VMs running in this project."""

    description: typing.Text = ...
    """An optional textual description of the resource."""

    @property
    def enabled_features(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Restricted features enabled for use on this project."""
        pass
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server. This is *not* the project ID, and is just a unique ID used by Compute Engine to identify resources."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#project for projects."""

    name: typing.Text = ...
    """The project ID. For example: my-example-project. Use the project ID to make requests to Compute Engine."""

    @property
    def quotas(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Quota]:
        """[Output Only] Quotas assigned to this project."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def usage_export_location(self) -> global___UsageExportLocation:
        """The naming prefix for daily usage reports and the Google Cloud Storage bucket where they are stored."""
        pass
    xpn_project_status: typing.Text = ...
    """[Output Only] The role this project has in a shared VPC configuration. Currently, only projects with the host role, which is specified by the value HOST, are differentiated.
    Check the XpnProjectStatus enum for the list of possible values.
    """

    def __init__(self,
        *,
        common_instance_metadata : typing.Optional[global___Metadata] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        default_network_tier : typing.Optional[typing.Text] = ...,
        default_service_account : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        enabled_features : typing.Optional[typing.Iterable[typing.Text]] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        quotas : typing.Optional[typing.Iterable[global___Quota]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        usage_export_location : typing.Optional[global___UsageExportLocation] = ...,
        xpn_project_status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_common_instance_metadata",b"_common_instance_metadata","_creation_timestamp",b"_creation_timestamp","_default_network_tier",b"_default_network_tier","_default_service_account",b"_default_service_account","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","_usage_export_location",b"_usage_export_location","_xpn_project_status",b"_xpn_project_status","common_instance_metadata",b"common_instance_metadata","creation_timestamp",b"creation_timestamp","default_network_tier",b"default_network_tier","default_service_account",b"default_service_account","description",b"description","id",b"id","kind",b"kind","name",b"name","self_link",b"self_link","usage_export_location",b"usage_export_location","xpn_project_status",b"xpn_project_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_common_instance_metadata",b"_common_instance_metadata","_creation_timestamp",b"_creation_timestamp","_default_network_tier",b"_default_network_tier","_default_service_account",b"_default_service_account","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","_usage_export_location",b"_usage_export_location","_xpn_project_status",b"_xpn_project_status","common_instance_metadata",b"common_instance_metadata","creation_timestamp",b"creation_timestamp","default_network_tier",b"default_network_tier","default_service_account",b"default_service_account","description",b"description","enabled_features",b"enabled_features","id",b"id","kind",b"kind","name",b"name","quotas",b"quotas","self_link",b"self_link","usage_export_location",b"usage_export_location","xpn_project_status",b"xpn_project_status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_common_instance_metadata",b"_common_instance_metadata"]) -> typing.Optional[typing_extensions.Literal["common_instance_metadata"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_network_tier",b"_default_network_tier"]) -> typing.Optional[typing_extensions.Literal["default_network_tier"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_service_account",b"_default_service_account"]) -> typing.Optional[typing_extensions.Literal["default_service_account"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_usage_export_location",b"_usage_export_location"]) -> typing.Optional[typing_extensions.Literal["usage_export_location"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_xpn_project_status",b"_xpn_project_status"]) -> typing.Optional[typing_extensions.Literal["xpn_project_status"]]: ...
global___Project = Project

class ProjectsDisableXpnResourceRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    XPN_RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def xpn_resource(self) -> global___XpnResourceId:
        """Service resource (a.k.a service project) ID."""
        pass
    def __init__(self,
        *,
        xpn_resource : typing.Optional[global___XpnResourceId] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_xpn_resource",b"_xpn_resource","xpn_resource",b"xpn_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_xpn_resource",b"_xpn_resource","xpn_resource",b"xpn_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_xpn_resource",b"_xpn_resource"]) -> typing.Optional[typing_extensions.Literal["xpn_resource"]]: ...
global___ProjectsDisableXpnResourceRequest = ProjectsDisableXpnResourceRequest

class ProjectsEnableXpnResourceRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    XPN_RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def xpn_resource(self) -> global___XpnResourceId:
        """Service resource (a.k.a service project) ID."""
        pass
    def __init__(self,
        *,
        xpn_resource : typing.Optional[global___XpnResourceId] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_xpn_resource",b"_xpn_resource","xpn_resource",b"xpn_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_xpn_resource",b"_xpn_resource","xpn_resource",b"xpn_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_xpn_resource",b"_xpn_resource"]) -> typing.Optional[typing_extensions.Literal["xpn_resource"]]: ...
global___ProjectsEnableXpnResourceRequest = ProjectsEnableXpnResourceRequest

class ProjectsGetXpnResources(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    RESOURCES_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#projectsGetXpnResources for lists of service resources (a.k.a service projects)"""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    @property
    def resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___XpnResourceId]:
        """Service resources (a.k.a service projects) attached to this project as their shared VPC host."""
        pass
    def __init__(self,
        *,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        resources : typing.Optional[typing.Iterable[global___XpnResourceId]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_kind",b"_kind","_next_page_token",b"_next_page_token","kind",b"kind","next_page_token",b"next_page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_kind",b"_kind","_next_page_token",b"_next_page_token","kind",b"kind","next_page_token",b"next_page_token","resources",b"resources"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
global___ProjectsGetXpnResources = ProjectsGetXpnResources

class ProjectsListXpnHostsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ORGANIZATION_FIELD_NUMBER: builtins.int
    organization: typing.Text = ...
    """Optional organization ID managed by Cloud Resource Manager, for which to list shared VPC host projects. If not specified, the organization will be inferred from the project."""

    def __init__(self,
        *,
        organization : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_organization",b"_organization","organization",b"organization"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_organization",b"_organization","organization",b"organization"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_organization",b"_organization"]) -> typing.Optional[typing_extensions.Literal["organization"]]: ...
global___ProjectsListXpnHostsRequest = ProjectsListXpnHostsRequest

class ProjectsSetDefaultNetworkTierRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _NetworkTier:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NetworkTierEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NetworkTier.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_NETWORK_TIER: ProjectsSetDefaultNetworkTierRequest.NetworkTier.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        PREMIUM: ProjectsSetDefaultNetworkTierRequest.NetworkTier.ValueType = ...  # 399530551
        """High quality, Google-grade network tier, support for all networking products."""

        STANDARD: ProjectsSetDefaultNetworkTierRequest.NetworkTier.ValueType = ...  # 484642493
        """Public internet quality, only limited support for other networking products."""

    class NetworkTier(_NetworkTier, metaclass=_NetworkTierEnumTypeWrapper):
        """Default network tier to be set."""
        pass

    UNDEFINED_NETWORK_TIER: ProjectsSetDefaultNetworkTierRequest.NetworkTier.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    PREMIUM: ProjectsSetDefaultNetworkTierRequest.NetworkTier.ValueType = ...  # 399530551
    """High quality, Google-grade network tier, support for all networking products."""

    STANDARD: ProjectsSetDefaultNetworkTierRequest.NetworkTier.ValueType = ...  # 484642493
    """Public internet quality, only limited support for other networking products."""


    NETWORK_TIER_FIELD_NUMBER: builtins.int
    network_tier: typing.Text = ...
    """Default network tier to be set.
    Check the NetworkTier enum for the list of possible values.
    """

    def __init__(self,
        *,
        network_tier : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_network_tier",b"_network_tier","network_tier",b"network_tier"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_network_tier",b"_network_tier","network_tier",b"network_tier"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network_tier",b"_network_tier"]) -> typing.Optional[typing_extensions.Literal["network_tier"]]: ...
global___ProjectsSetDefaultNetworkTierRequest = ProjectsSetDefaultNetworkTierRequest

class PublicAdvertisedPrefix(google.protobuf.message.Message):
    """A public advertised prefix represents an aggregated IP prefix or netblock which customers bring to cloud. The IP prefix is a single unit of route advertisement and is announced globally to the internet."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: PublicAdvertisedPrefix.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        INITIAL: PublicAdvertisedPrefix.Status.ValueType = ...  # 518841124
        PREFIX_CONFIGURATION_COMPLETE: PublicAdvertisedPrefix.Status.ValueType = ...  # 480889551
        PREFIX_CONFIGURATION_IN_PROGRESS: PublicAdvertisedPrefix.Status.ValueType = ...  # 378550961
        PREFIX_REMOVAL_IN_PROGRESS: PublicAdvertisedPrefix.Status.ValueType = ...  # 284375783
        PTR_CONFIGURED: PublicAdvertisedPrefix.Status.ValueType = ...  # 513497167
        REVERSE_DNS_LOOKUP_FAILED: PublicAdvertisedPrefix.Status.ValueType = ...  # 295755183
        VALIDATED: PublicAdvertisedPrefix.Status.ValueType = ...  # 66197998
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """The status of the public advertised prefix."""
        pass

    UNDEFINED_STATUS: PublicAdvertisedPrefix.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    INITIAL: PublicAdvertisedPrefix.Status.ValueType = ...  # 518841124
    PREFIX_CONFIGURATION_COMPLETE: PublicAdvertisedPrefix.Status.ValueType = ...  # 480889551
    PREFIX_CONFIGURATION_IN_PROGRESS: PublicAdvertisedPrefix.Status.ValueType = ...  # 378550961
    PREFIX_REMOVAL_IN_PROGRESS: PublicAdvertisedPrefix.Status.ValueType = ...  # 284375783
    PTR_CONFIGURED: PublicAdvertisedPrefix.Status.ValueType = ...  # 513497167
    REVERSE_DNS_LOOKUP_FAILED: PublicAdvertisedPrefix.Status.ValueType = ...  # 295755183
    VALIDATED: PublicAdvertisedPrefix.Status.ValueType = ...  # 66197998

    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DNS_VERIFICATION_IP_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_PREFIXS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SHARED_SECRET_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    dns_verification_ip: typing.Text = ...
    """The IPv4 address to be used for reverse DNS verification."""

    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a new PublicAdvertisedPrefix. An up-to-date fingerprint must be provided in order to update the PublicAdvertisedPrefix, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a PublicAdvertisedPrefix."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource type. The server generates this identifier."""

    ip_cidr_range: typing.Text = ...
    """The IPv4 address range, in CIDR format, represented by this public advertised prefix."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#publicAdvertisedPrefix for public advertised prefixes."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def public_delegated_prefixs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PublicAdvertisedPrefixPublicDelegatedPrefix]:
        """[Output Only] The list of public delegated prefixes that exist for this public advertised prefix."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    shared_secret: typing.Text = ...
    """[Output Only] The shared secret to be used for reverse DNS verification."""

    status: typing.Text = ...
    """The status of the public advertised prefix.
    Check the Status enum for the list of possible values.
    """

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        dns_verification_ip : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        ip_cidr_range : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        public_delegated_prefixs : typing.Optional[typing.Iterable[global___PublicAdvertisedPrefixPublicDelegatedPrefix]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        shared_secret : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_dns_verification_ip",b"_dns_verification_ip","_fingerprint",b"_fingerprint","_id",b"_id","_ip_cidr_range",b"_ip_cidr_range","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","_shared_secret",b"_shared_secret","_status",b"_status","creation_timestamp",b"creation_timestamp","description",b"description","dns_verification_ip",b"dns_verification_ip","fingerprint",b"fingerprint","id",b"id","ip_cidr_range",b"ip_cidr_range","kind",b"kind","name",b"name","self_link",b"self_link","shared_secret",b"shared_secret","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_dns_verification_ip",b"_dns_verification_ip","_fingerprint",b"_fingerprint","_id",b"_id","_ip_cidr_range",b"_ip_cidr_range","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","_shared_secret",b"_shared_secret","_status",b"_status","creation_timestamp",b"creation_timestamp","description",b"description","dns_verification_ip",b"dns_verification_ip","fingerprint",b"fingerprint","id",b"id","ip_cidr_range",b"ip_cidr_range","kind",b"kind","name",b"name","public_delegated_prefixs",b"public_delegated_prefixs","self_link",b"self_link","shared_secret",b"shared_secret","status",b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_dns_verification_ip",b"_dns_verification_ip"]) -> typing.Optional[typing_extensions.Literal["dns_verification_ip"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range"]) -> typing.Optional[typing_extensions.Literal["ip_cidr_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_shared_secret",b"_shared_secret"]) -> typing.Optional[typing_extensions.Literal["shared_secret"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___PublicAdvertisedPrefix = PublicAdvertisedPrefix

class PublicAdvertisedPrefixList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PublicAdvertisedPrefix]:
        """A list of PublicAdvertisedPrefix resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#publicAdvertisedPrefix for public advertised prefixes."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___PublicAdvertisedPrefix]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___PublicAdvertisedPrefixList = PublicAdvertisedPrefixList

class PublicAdvertisedPrefixPublicDelegatedPrefix(google.protobuf.message.Message):
    """Represents a CIDR range which can be used to assign addresses."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IP_RANGE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    ip_range: typing.Text = ...
    """The IP address range of the public delegated prefix"""

    name: typing.Text = ...
    """The name of the public delegated prefix"""

    project: typing.Text = ...
    """The project number of the public delegated prefix"""

    region: typing.Text = ...
    """The region of the public delegated prefix if it is regional. If absent, the prefix is global."""

    status: typing.Text = ...
    """The status of the public delegated prefix. Possible values are: INITIALIZING: The public delegated prefix is being initialized and addresses cannot be created yet. ANNOUNCED: The public delegated prefix is active."""

    def __init__(self,
        *,
        ip_range : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        project : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ip_range",b"_ip_range","_name",b"_name","_project",b"_project","_region",b"_region","_status",b"_status","ip_range",b"ip_range","name",b"name","project",b"project","region",b"region","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ip_range",b"_ip_range","_name",b"_name","_project",b"_project","_region",b"_region","_status",b"_status","ip_range",b"ip_range","name",b"name","project",b"project","region",b"region","status",b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_range",b"_ip_range"]) -> typing.Optional[typing_extensions.Literal["ip_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_project",b"_project"]) -> typing.Optional[typing_extensions.Literal["project"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___PublicAdvertisedPrefixPublicDelegatedPrefix = PublicAdvertisedPrefixPublicDelegatedPrefix

class PublicDelegatedPrefix(google.protobuf.message.Message):
    """A PublicDelegatedPrefix resource represents an IP block within a PublicAdvertisedPrefix that is configured within a single cloud scope (global or region). IPs in the block can be allocated to resources within that scope. Public delegated prefixes may be further broken up into smaller IP blocks in the same scope as the parent block."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: PublicDelegatedPrefix.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ANNOUNCED: PublicDelegatedPrefix.Status.ValueType = ...  # 365103355
        DELETING: PublicDelegatedPrefix.Status.ValueType = ...  # 528602024
        INITIALIZING: PublicDelegatedPrefix.Status.ValueType = ...  # 306588749
        READY_TO_ANNOUNCE: PublicDelegatedPrefix.Status.ValueType = ...  # 64641265
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the public delegated prefix."""
        pass

    UNDEFINED_STATUS: PublicDelegatedPrefix.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ANNOUNCED: PublicDelegatedPrefix.Status.ValueType = ...  # 365103355
    DELETING: PublicDelegatedPrefix.Status.ValueType = ...  # 528602024
    INITIALIZING: PublicDelegatedPrefix.Status.ValueType = ...  # 306588749
    READY_TO_ANNOUNCE: PublicDelegatedPrefix.Status.ValueType = ...  # 64641265

    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    IS_LIVE_MIGRATION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PARENT_PREFIX_FIELD_NUMBER: builtins.int
    PUBLIC_DELEGATED_SUB_PREFIXS_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a new PublicDelegatedPrefix. An up-to-date fingerprint must be provided in order to update the PublicDelegatedPrefix, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a PublicDelegatedPrefix."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource type. The server generates this identifier."""

    ip_cidr_range: typing.Text = ...
    """The IPv4 address range, in CIDR format, represented by this public delegated prefix."""

    is_live_migration: builtins.bool = ...
    """If true, the prefix will be live migrated."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#publicDelegatedPrefix for public delegated prefixes."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    parent_prefix: typing.Text = ...
    """The URL of parent prefix. Either PublicAdvertisedPrefix or PublicDelegatedPrefix."""

    @property
    def public_delegated_sub_prefixs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PublicDelegatedPrefixPublicDelegatedSubPrefix]:
        """The list of sub public delegated prefixes that exist for this public delegated prefix."""
        pass
    region: typing.Text = ...
    """[Output Only] URL of the region where the public delegated prefix resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    status: typing.Text = ...
    """[Output Only] The status of the public delegated prefix.
    Check the Status enum for the list of possible values.
    """

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        ip_cidr_range : typing.Optional[typing.Text] = ...,
        is_live_migration : typing.Optional[builtins.bool] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        parent_prefix : typing.Optional[typing.Text] = ...,
        public_delegated_sub_prefixs : typing.Optional[typing.Iterable[global___PublicDelegatedPrefixPublicDelegatedSubPrefix]] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_ip_cidr_range",b"_ip_cidr_range","_is_live_migration",b"_is_live_migration","_kind",b"_kind","_name",b"_name","_parent_prefix",b"_parent_prefix","_region",b"_region","_self_link",b"_self_link","_status",b"_status","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","ip_cidr_range",b"ip_cidr_range","is_live_migration",b"is_live_migration","kind",b"kind","name",b"name","parent_prefix",b"parent_prefix","region",b"region","self_link",b"self_link","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_ip_cidr_range",b"_ip_cidr_range","_is_live_migration",b"_is_live_migration","_kind",b"_kind","_name",b"_name","_parent_prefix",b"_parent_prefix","_region",b"_region","_self_link",b"_self_link","_status",b"_status","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","ip_cidr_range",b"ip_cidr_range","is_live_migration",b"is_live_migration","kind",b"kind","name",b"name","parent_prefix",b"parent_prefix","public_delegated_sub_prefixs",b"public_delegated_sub_prefixs","region",b"region","self_link",b"self_link","status",b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range"]) -> typing.Optional[typing_extensions.Literal["ip_cidr_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_is_live_migration",b"_is_live_migration"]) -> typing.Optional[typing_extensions.Literal["is_live_migration"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_parent_prefix",b"_parent_prefix"]) -> typing.Optional[typing_extensions.Literal["parent_prefix"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___PublicDelegatedPrefix = PublicDelegatedPrefix

class PublicDelegatedPrefixAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___PublicDelegatedPrefixesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___PublicDelegatedPrefixesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___PublicDelegatedPrefixesScopedList]:
        """A list of PublicDelegatedPrefixesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#publicDelegatedPrefixAggregatedList for aggregated lists of public delegated prefixes."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___PublicDelegatedPrefixesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___PublicDelegatedPrefixAggregatedList = PublicDelegatedPrefixAggregatedList

class PublicDelegatedPrefixList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PublicDelegatedPrefix]:
        """A list of PublicDelegatedPrefix resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#publicDelegatedPrefixList for public delegated prefixes."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___PublicDelegatedPrefix]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___PublicDelegatedPrefixList = PublicDelegatedPrefixList

class PublicDelegatedPrefixPublicDelegatedSubPrefix(google.protobuf.message.Message):
    """Represents a sub PublicDelegatedPrefix."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: PublicDelegatedPrefixPublicDelegatedSubPrefix.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: PublicDelegatedPrefixPublicDelegatedSubPrefix.Status.ValueType = ...  # 314733318
        INACTIVE: PublicDelegatedPrefixPublicDelegatedSubPrefix.Status.ValueType = ...  # 270421099
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the sub public delegated prefix."""
        pass

    UNDEFINED_STATUS: PublicDelegatedPrefixPublicDelegatedSubPrefix.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: PublicDelegatedPrefixPublicDelegatedSubPrefix.Status.ValueType = ...  # 314733318
    INACTIVE: PublicDelegatedPrefixPublicDelegatedSubPrefix.Status.ValueType = ...  # 270421099

    DELEGATEE_PROJECT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    IS_ADDRESS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    delegatee_project: typing.Text = ...
    """Name of the project scoping this PublicDelegatedSubPrefix."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    ip_cidr_range: typing.Text = ...
    """The IPv4 address range, in CIDR format, represented by this sub public delegated prefix."""

    is_address: builtins.bool = ...
    """Whether the sub prefix is delegated to create Address resources in the delegatee project."""

    name: typing.Text = ...
    """The name of the sub public delegated prefix."""

    region: typing.Text = ...
    """[Output Only] The region of the sub public delegated prefix if it is regional. If absent, the sub prefix is global."""

    status: typing.Text = ...
    """[Output Only] The status of the sub public delegated prefix.
    Check the Status enum for the list of possible values.
    """

    def __init__(self,
        *,
        delegatee_project : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        ip_cidr_range : typing.Optional[typing.Text] = ...,
        is_address : typing.Optional[builtins.bool] = ...,
        name : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_delegatee_project",b"_delegatee_project","_description",b"_description","_ip_cidr_range",b"_ip_cidr_range","_is_address",b"_is_address","_name",b"_name","_region",b"_region","_status",b"_status","delegatee_project",b"delegatee_project","description",b"description","ip_cidr_range",b"ip_cidr_range","is_address",b"is_address","name",b"name","region",b"region","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_delegatee_project",b"_delegatee_project","_description",b"_description","_ip_cidr_range",b"_ip_cidr_range","_is_address",b"_is_address","_name",b"_name","_region",b"_region","_status",b"_status","delegatee_project",b"delegatee_project","description",b"description","ip_cidr_range",b"ip_cidr_range","is_address",b"is_address","name",b"name","region",b"region","status",b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_delegatee_project",b"_delegatee_project"]) -> typing.Optional[typing_extensions.Literal["delegatee_project"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range"]) -> typing.Optional[typing_extensions.Literal["ip_cidr_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_is_address",b"_is_address"]) -> typing.Optional[typing_extensions.Literal["is_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___PublicDelegatedPrefixPublicDelegatedSubPrefix = PublicDelegatedPrefixPublicDelegatedSubPrefix

class PublicDelegatedPrefixesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PUBLIC_DELEGATED_PREFIXES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def public_delegated_prefixes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PublicDelegatedPrefix]:
        """[Output Only] A list of PublicDelegatedPrefixes contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning which replaces the list of public delegated prefixes when the list is empty."""
        pass
    def __init__(self,
        *,
        public_delegated_prefixes : typing.Optional[typing.Iterable[global___PublicDelegatedPrefix]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","public_delegated_prefixes",b"public_delegated_prefixes","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___PublicDelegatedPrefixesScopedList = PublicDelegatedPrefixesScopedList

class Quota(google.protobuf.message.Message):
    """A quotas entry."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Metric:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MetricEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Metric.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_METRIC: Quota.Metric.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        A2_CPUS: Quota.Metric.ValueType = ...  # 153206585
        AFFINITY_GROUPS: Quota.Metric.ValueType = ...  # 108303563
        AUTOSCALERS: Quota.Metric.ValueType = ...  # 471248988
        BACKEND_BUCKETS: Quota.Metric.ValueType = ...  # 137626846
        BACKEND_SERVICES: Quota.Metric.ValueType = ...  # 269623753
        C2D_CPUS: Quota.Metric.ValueType = ...  # 508182517
        C2_CPUS: Quota.Metric.ValueType = ...  # 317601211
        C3_CPUS: Quota.Metric.ValueType = ...  # 346230362
        COMMITMENTS: Quota.Metric.ValueType = ...  # 456141790
        COMMITTED_A2_CPUS: Quota.Metric.ValueType = ...  # 59330902
        COMMITTED_C2D_CPUS: Quota.Metric.ValueType = ...  # 282390904
        COMMITTED_C2_CPUS: Quota.Metric.ValueType = ...  # 223725528
        COMMITTED_C3_CPUS: Quota.Metric.ValueType = ...  # 252354679
        COMMITTED_CPUS: Quota.Metric.ValueType = ...  # 292394702
        COMMITTED_E2_CPUS: Quota.Metric.ValueType = ...  # 388120154
        COMMITTED_LICENSES: Quota.Metric.ValueType = ...  # 357606869
        COMMITTED_LOCAL_SSD_TOTAL_GB: Quota.Metric.ValueType = ...  # 308393480
        COMMITTED_MEMORY_OPTIMIZED_CPUS: Quota.Metric.ValueType = ...  # 489057886
        COMMITTED_N2A_CPUS: Quota.Metric.ValueType = ...  # 40064304
        COMMITTED_N2D_CPUS: Quota.Metric.ValueType = ...  # 125951757
        COMMITTED_N2_CPUS: Quota.Metric.ValueType = ...  # 322589603
        COMMITTED_NVIDIA_A100_GPUS: Quota.Metric.ValueType = ...  # 375799445
        COMMITTED_NVIDIA_K80_GPUS: Quota.Metric.ValueType = ...  # 3857188
        COMMITTED_NVIDIA_P100_GPUS: Quota.Metric.ValueType = ...  # 107528100
        COMMITTED_NVIDIA_P4_GPUS: Quota.Metric.ValueType = ...  # 347952897
        COMMITTED_NVIDIA_T4_GPUS: Quota.Metric.ValueType = ...  # 139871237
        COMMITTED_NVIDIA_V100_GPUS: Quota.Metric.ValueType = ...  # 219562
        COMMITTED_T2D_CPUS: Quota.Metric.ValueType = ...  # 382266439
        CPUS: Quota.Metric.ValueType = ...  # 2075595
        """Guest CPUs"""

        CPUS_ALL_REGIONS: Quota.Metric.ValueType = ...  # 470911149
        DISKS_TOTAL_GB: Quota.Metric.ValueType = ...  # 353520543
        E2_CPUS: Quota.Metric.ValueType = ...  # 481995837
        EXTERNAL_NETWORK_LB_FORWARDING_RULES: Quota.Metric.ValueType = ...  # 374298265
        EXTERNAL_PROTOCOL_FORWARDING_RULES: Quota.Metric.ValueType = ...  # 63478888
        EXTERNAL_VPN_GATEWAYS: Quota.Metric.ValueType = ...  # 272457134
        FIREWALLS: Quota.Metric.ValueType = ...  # 374485843
        FORWARDING_RULES: Quota.Metric.ValueType = ...  # 432668949
        GLOBAL_INTERNAL_ADDRESSES: Quota.Metric.ValueType = ...  # 42738332
        GPUS_ALL_REGIONS: Quota.Metric.ValueType = ...  # 39387177
        HEALTH_CHECKS: Quota.Metric.ValueType = ...  # 289347502
        IMAGES: Quota.Metric.ValueType = ...  # 15562360
        INSTANCES: Quota.Metric.ValueType = ...  # 131337822
        INSTANCE_GROUPS: Quota.Metric.ValueType = ...  # 355919038
        INSTANCE_GROUP_MANAGERS: Quota.Metric.ValueType = ...  # 101798192
        INSTANCE_TEMPLATES: Quota.Metric.ValueType = ...  # 226188271
        INTERCONNECTS: Quota.Metric.ValueType = ...  # 415204741
        INTERCONNECT_ATTACHMENTS_PER_REGION: Quota.Metric.ValueType = ...  # 159968086
        INTERCONNECT_ATTACHMENTS_TOTAL_MBPS: Quota.Metric.ValueType = ...  # 425090419
        INTERCONNECT_TOTAL_GBPS: Quota.Metric.ValueType = ...  # 285341866
        INTERNAL_ADDRESSES: Quota.Metric.ValueType = ...  # 197899392
        INTERNAL_TRAFFIC_DIRECTOR_FORWARDING_RULES: Quota.Metric.ValueType = ...  # 266433668
        IN_PLACE_SNAPSHOTS: Quota.Metric.ValueType = ...  # 151359133
        IN_USE_ADDRESSES: Quota.Metric.ValueType = ...  # 402125072
        IN_USE_BACKUP_SCHEDULES: Quota.Metric.ValueType = ...  # 32786705
        IN_USE_SNAPSHOT_SCHEDULES: Quota.Metric.ValueType = ...  # 462104083
        LOCAL_SSD_TOTAL_GB: Quota.Metric.ValueType = ...  # 330878021
        M1_CPUS: Quota.Metric.ValueType = ...  # 37203366
        M2_CPUS: Quota.Metric.ValueType = ...  # 65832517
        MACHINE_IMAGES: Quota.Metric.ValueType = ...  # 446986640
        N2A_CPUS: Quota.Metric.ValueType = ...  # 265855917
        N2D_CPUS: Quota.Metric.ValueType = ...  # 351743370
        N2_CPUS: Quota.Metric.ValueType = ...  # 416465286
        NETWORKS: Quota.Metric.ValueType = ...  # 485481477
        NETWORK_ENDPOINT_GROUPS: Quota.Metric.ValueType = ...  # 102144909
        NETWORK_FIREWALL_POLICIES: Quota.Metric.ValueType = ...  # 101117374
        NODE_GROUPS: Quota.Metric.ValueType = ...  # 24624817
        NODE_TEMPLATES: Quota.Metric.ValueType = ...  # 474896668
        NVIDIA_A100_GPUS: Quota.Metric.ValueType = ...  # 504872978
        NVIDIA_K80_GPUS: Quota.Metric.ValueType = ...  # 163886599
        NVIDIA_P100_GPUS: Quota.Metric.ValueType = ...  # 236601633
        NVIDIA_P100_VWS_GPUS: Quota.Metric.ValueType = ...  # 213970574
        NVIDIA_P4_GPUS: Quota.Metric.ValueType = ...  # 283841470
        NVIDIA_P4_VWS_GPUS: Quota.Metric.ValueType = ...  # 528296619
        NVIDIA_T4_GPUS: Quota.Metric.ValueType = ...  # 75759810
        NVIDIA_T4_VWS_GPUS: Quota.Metric.ValueType = ...  # 319813039
        NVIDIA_V100_GPUS: Quota.Metric.ValueType = ...  # 129293095
        PACKET_MIRRORINGS: Quota.Metric.ValueType = ...  # 15578407
        PD_EXTREME_TOTAL_PROVISIONED_IOPS: Quota.Metric.ValueType = ...  # 69593965
        PREEMPTIBLE_CPUS: Quota.Metric.ValueType = ...  # 251184841
        PREEMPTIBLE_LOCAL_SSD_GB: Quota.Metric.ValueType = ...  # 260819336
        PREEMPTIBLE_NVIDIA_A100_GPUS: Quota.Metric.ValueType = ...  # 68832784
        PREEMPTIBLE_NVIDIA_K80_GPUS: Quota.Metric.ValueType = ...  # 374960201
        PREEMPTIBLE_NVIDIA_P100_GPUS: Quota.Metric.ValueType = ...  # 337432351
        PREEMPTIBLE_NVIDIA_P100_VWS_GPUS: Quota.Metric.ValueType = ...  # 313544076
        PREEMPTIBLE_NVIDIA_P4_GPUS: Quota.Metric.ValueType = ...  # 429197628
        PREEMPTIBLE_NVIDIA_P4_VWS_GPUS: Quota.Metric.ValueType = ...  # 252981545
        PREEMPTIBLE_NVIDIA_T4_GPUS: Quota.Metric.ValueType = ...  # 221115968
        PREEMPTIBLE_NVIDIA_T4_VWS_GPUS: Quota.Metric.ValueType = ...  # 44497965
        PREEMPTIBLE_NVIDIA_V100_GPUS: Quota.Metric.ValueType = ...  # 230123813
        PSC_ILB_CONSUMER_FORWARDING_RULES_PER_PRODUCER_NETWORK: Quota.Metric.ValueType = ...  # 231164291
        PSC_INTERNAL_LB_FORWARDING_RULES: Quota.Metric.ValueType = ...  # 169005435
        PUBLIC_ADVERTISED_PREFIXES: Quota.Metric.ValueType = ...  # 471371980
        PUBLIC_DELEGATED_PREFIXES: Quota.Metric.ValueType = ...  # 532465974
        REGIONAL_AUTOSCALERS: Quota.Metric.ValueType = ...  # 29363772
        REGIONAL_INSTANCE_GROUP_MANAGERS: Quota.Metric.ValueType = ...  # 37543696
        RESERVATIONS: Quota.Metric.ValueType = ...  # 32644647
        RESOURCE_POLICIES: Quota.Metric.ValueType = ...  # 83955297
        ROUTERS: Quota.Metric.ValueType = ...  # 493018666
        ROUTES: Quota.Metric.ValueType = ...  # 275680074
        SECURITY_POLICIES: Quota.Metric.ValueType = ...  # 189518703
        SECURITY_POLICIES_PER_REGION: Quota.Metric.ValueType = ...  # 249041734
        SECURITY_POLICY_CEVAL_RULES: Quota.Metric.ValueType = ...  # 470815689
        SECURITY_POLICY_RULES: Quota.Metric.ValueType = ...  # 203549225
        SECURITY_POLICY_RULES_PER_REGION: Quota.Metric.ValueType = ...  # 126510156
        SERVICE_ATTACHMENTS: Quota.Metric.ValueType = ...  # 471521510
        SNAPSHOTS: Quota.Metric.ValueType = ...  # 343405327
        """The total number of snapshots allowed for a single project."""

        SSD_TOTAL_GB: Quota.Metric.ValueType = ...  # 161732561
        SSL_CERTIFICATES: Quota.Metric.ValueType = ...  # 378372399
        STATIC_ADDRESSES: Quota.Metric.ValueType = ...  # 93624049
        STATIC_BYOIP_ADDRESSES: Quota.Metric.ValueType = ...  # 275809649
        SUBNETWORKS: Quota.Metric.ValueType = ...  # 421330469
        T2D_CPUS: Quota.Metric.ValueType = ...  # 71187140
        TARGET_HTTPS_PROXIES: Quota.Metric.ValueType = ...  # 219522506
        TARGET_HTTP_PROXIES: Quota.Metric.ValueType = ...  # 164117155
        TARGET_INSTANCES: Quota.Metric.ValueType = ...  # 284519728
        TARGET_POOLS: Quota.Metric.ValueType = ...  # 348261257
        TARGET_SSL_PROXIES: Quota.Metric.ValueType = ...  # 159216235
        TARGET_TCP_PROXIES: Quota.Metric.ValueType = ...  # 182243136
        TARGET_VPN_GATEWAYS: Quota.Metric.ValueType = ...  # 75029928
        URL_MAPS: Quota.Metric.ValueType = ...  # 378660743
        VPN_GATEWAYS: Quota.Metric.ValueType = ...  # 35620282
        VPN_TUNNELS: Quota.Metric.ValueType = ...  # 104327296
        XPN_SERVICE_PROJECTS: Quota.Metric.ValueType = ...  # 95191981
    class Metric(_Metric, metaclass=_MetricEnumTypeWrapper):
        """[Output Only] Name of the quota metric."""
        pass

    UNDEFINED_METRIC: Quota.Metric.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    A2_CPUS: Quota.Metric.ValueType = ...  # 153206585
    AFFINITY_GROUPS: Quota.Metric.ValueType = ...  # 108303563
    AUTOSCALERS: Quota.Metric.ValueType = ...  # 471248988
    BACKEND_BUCKETS: Quota.Metric.ValueType = ...  # 137626846
    BACKEND_SERVICES: Quota.Metric.ValueType = ...  # 269623753
    C2D_CPUS: Quota.Metric.ValueType = ...  # 508182517
    C2_CPUS: Quota.Metric.ValueType = ...  # 317601211
    C3_CPUS: Quota.Metric.ValueType = ...  # 346230362
    COMMITMENTS: Quota.Metric.ValueType = ...  # 456141790
    COMMITTED_A2_CPUS: Quota.Metric.ValueType = ...  # 59330902
    COMMITTED_C2D_CPUS: Quota.Metric.ValueType = ...  # 282390904
    COMMITTED_C2_CPUS: Quota.Metric.ValueType = ...  # 223725528
    COMMITTED_C3_CPUS: Quota.Metric.ValueType = ...  # 252354679
    COMMITTED_CPUS: Quota.Metric.ValueType = ...  # 292394702
    COMMITTED_E2_CPUS: Quota.Metric.ValueType = ...  # 388120154
    COMMITTED_LICENSES: Quota.Metric.ValueType = ...  # 357606869
    COMMITTED_LOCAL_SSD_TOTAL_GB: Quota.Metric.ValueType = ...  # 308393480
    COMMITTED_MEMORY_OPTIMIZED_CPUS: Quota.Metric.ValueType = ...  # 489057886
    COMMITTED_N2A_CPUS: Quota.Metric.ValueType = ...  # 40064304
    COMMITTED_N2D_CPUS: Quota.Metric.ValueType = ...  # 125951757
    COMMITTED_N2_CPUS: Quota.Metric.ValueType = ...  # 322589603
    COMMITTED_NVIDIA_A100_GPUS: Quota.Metric.ValueType = ...  # 375799445
    COMMITTED_NVIDIA_K80_GPUS: Quota.Metric.ValueType = ...  # 3857188
    COMMITTED_NVIDIA_P100_GPUS: Quota.Metric.ValueType = ...  # 107528100
    COMMITTED_NVIDIA_P4_GPUS: Quota.Metric.ValueType = ...  # 347952897
    COMMITTED_NVIDIA_T4_GPUS: Quota.Metric.ValueType = ...  # 139871237
    COMMITTED_NVIDIA_V100_GPUS: Quota.Metric.ValueType = ...  # 219562
    COMMITTED_T2D_CPUS: Quota.Metric.ValueType = ...  # 382266439
    CPUS: Quota.Metric.ValueType = ...  # 2075595
    """Guest CPUs"""

    CPUS_ALL_REGIONS: Quota.Metric.ValueType = ...  # 470911149
    DISKS_TOTAL_GB: Quota.Metric.ValueType = ...  # 353520543
    E2_CPUS: Quota.Metric.ValueType = ...  # 481995837
    EXTERNAL_NETWORK_LB_FORWARDING_RULES: Quota.Metric.ValueType = ...  # 374298265
    EXTERNAL_PROTOCOL_FORWARDING_RULES: Quota.Metric.ValueType = ...  # 63478888
    EXTERNAL_VPN_GATEWAYS: Quota.Metric.ValueType = ...  # 272457134
    FIREWALLS: Quota.Metric.ValueType = ...  # 374485843
    FORWARDING_RULES: Quota.Metric.ValueType = ...  # 432668949
    GLOBAL_INTERNAL_ADDRESSES: Quota.Metric.ValueType = ...  # 42738332
    GPUS_ALL_REGIONS: Quota.Metric.ValueType = ...  # 39387177
    HEALTH_CHECKS: Quota.Metric.ValueType = ...  # 289347502
    IMAGES: Quota.Metric.ValueType = ...  # 15562360
    INSTANCES: Quota.Metric.ValueType = ...  # 131337822
    INSTANCE_GROUPS: Quota.Metric.ValueType = ...  # 355919038
    INSTANCE_GROUP_MANAGERS: Quota.Metric.ValueType = ...  # 101798192
    INSTANCE_TEMPLATES: Quota.Metric.ValueType = ...  # 226188271
    INTERCONNECTS: Quota.Metric.ValueType = ...  # 415204741
    INTERCONNECT_ATTACHMENTS_PER_REGION: Quota.Metric.ValueType = ...  # 159968086
    INTERCONNECT_ATTACHMENTS_TOTAL_MBPS: Quota.Metric.ValueType = ...  # 425090419
    INTERCONNECT_TOTAL_GBPS: Quota.Metric.ValueType = ...  # 285341866
    INTERNAL_ADDRESSES: Quota.Metric.ValueType = ...  # 197899392
    INTERNAL_TRAFFIC_DIRECTOR_FORWARDING_RULES: Quota.Metric.ValueType = ...  # 266433668
    IN_PLACE_SNAPSHOTS: Quota.Metric.ValueType = ...  # 151359133
    IN_USE_ADDRESSES: Quota.Metric.ValueType = ...  # 402125072
    IN_USE_BACKUP_SCHEDULES: Quota.Metric.ValueType = ...  # 32786705
    IN_USE_SNAPSHOT_SCHEDULES: Quota.Metric.ValueType = ...  # 462104083
    LOCAL_SSD_TOTAL_GB: Quota.Metric.ValueType = ...  # 330878021
    M1_CPUS: Quota.Metric.ValueType = ...  # 37203366
    M2_CPUS: Quota.Metric.ValueType = ...  # 65832517
    MACHINE_IMAGES: Quota.Metric.ValueType = ...  # 446986640
    N2A_CPUS: Quota.Metric.ValueType = ...  # 265855917
    N2D_CPUS: Quota.Metric.ValueType = ...  # 351743370
    N2_CPUS: Quota.Metric.ValueType = ...  # 416465286
    NETWORKS: Quota.Metric.ValueType = ...  # 485481477
    NETWORK_ENDPOINT_GROUPS: Quota.Metric.ValueType = ...  # 102144909
    NETWORK_FIREWALL_POLICIES: Quota.Metric.ValueType = ...  # 101117374
    NODE_GROUPS: Quota.Metric.ValueType = ...  # 24624817
    NODE_TEMPLATES: Quota.Metric.ValueType = ...  # 474896668
    NVIDIA_A100_GPUS: Quota.Metric.ValueType = ...  # 504872978
    NVIDIA_K80_GPUS: Quota.Metric.ValueType = ...  # 163886599
    NVIDIA_P100_GPUS: Quota.Metric.ValueType = ...  # 236601633
    NVIDIA_P100_VWS_GPUS: Quota.Metric.ValueType = ...  # 213970574
    NVIDIA_P4_GPUS: Quota.Metric.ValueType = ...  # 283841470
    NVIDIA_P4_VWS_GPUS: Quota.Metric.ValueType = ...  # 528296619
    NVIDIA_T4_GPUS: Quota.Metric.ValueType = ...  # 75759810
    NVIDIA_T4_VWS_GPUS: Quota.Metric.ValueType = ...  # 319813039
    NVIDIA_V100_GPUS: Quota.Metric.ValueType = ...  # 129293095
    PACKET_MIRRORINGS: Quota.Metric.ValueType = ...  # 15578407
    PD_EXTREME_TOTAL_PROVISIONED_IOPS: Quota.Metric.ValueType = ...  # 69593965
    PREEMPTIBLE_CPUS: Quota.Metric.ValueType = ...  # 251184841
    PREEMPTIBLE_LOCAL_SSD_GB: Quota.Metric.ValueType = ...  # 260819336
    PREEMPTIBLE_NVIDIA_A100_GPUS: Quota.Metric.ValueType = ...  # 68832784
    PREEMPTIBLE_NVIDIA_K80_GPUS: Quota.Metric.ValueType = ...  # 374960201
    PREEMPTIBLE_NVIDIA_P100_GPUS: Quota.Metric.ValueType = ...  # 337432351
    PREEMPTIBLE_NVIDIA_P100_VWS_GPUS: Quota.Metric.ValueType = ...  # 313544076
    PREEMPTIBLE_NVIDIA_P4_GPUS: Quota.Metric.ValueType = ...  # 429197628
    PREEMPTIBLE_NVIDIA_P4_VWS_GPUS: Quota.Metric.ValueType = ...  # 252981545
    PREEMPTIBLE_NVIDIA_T4_GPUS: Quota.Metric.ValueType = ...  # 221115968
    PREEMPTIBLE_NVIDIA_T4_VWS_GPUS: Quota.Metric.ValueType = ...  # 44497965
    PREEMPTIBLE_NVIDIA_V100_GPUS: Quota.Metric.ValueType = ...  # 230123813
    PSC_ILB_CONSUMER_FORWARDING_RULES_PER_PRODUCER_NETWORK: Quota.Metric.ValueType = ...  # 231164291
    PSC_INTERNAL_LB_FORWARDING_RULES: Quota.Metric.ValueType = ...  # 169005435
    PUBLIC_ADVERTISED_PREFIXES: Quota.Metric.ValueType = ...  # 471371980
    PUBLIC_DELEGATED_PREFIXES: Quota.Metric.ValueType = ...  # 532465974
    REGIONAL_AUTOSCALERS: Quota.Metric.ValueType = ...  # 29363772
    REGIONAL_INSTANCE_GROUP_MANAGERS: Quota.Metric.ValueType = ...  # 37543696
    RESERVATIONS: Quota.Metric.ValueType = ...  # 32644647
    RESOURCE_POLICIES: Quota.Metric.ValueType = ...  # 83955297
    ROUTERS: Quota.Metric.ValueType = ...  # 493018666
    ROUTES: Quota.Metric.ValueType = ...  # 275680074
    SECURITY_POLICIES: Quota.Metric.ValueType = ...  # 189518703
    SECURITY_POLICIES_PER_REGION: Quota.Metric.ValueType = ...  # 249041734
    SECURITY_POLICY_CEVAL_RULES: Quota.Metric.ValueType = ...  # 470815689
    SECURITY_POLICY_RULES: Quota.Metric.ValueType = ...  # 203549225
    SECURITY_POLICY_RULES_PER_REGION: Quota.Metric.ValueType = ...  # 126510156
    SERVICE_ATTACHMENTS: Quota.Metric.ValueType = ...  # 471521510
    SNAPSHOTS: Quota.Metric.ValueType = ...  # 343405327
    """The total number of snapshots allowed for a single project."""

    SSD_TOTAL_GB: Quota.Metric.ValueType = ...  # 161732561
    SSL_CERTIFICATES: Quota.Metric.ValueType = ...  # 378372399
    STATIC_ADDRESSES: Quota.Metric.ValueType = ...  # 93624049
    STATIC_BYOIP_ADDRESSES: Quota.Metric.ValueType = ...  # 275809649
    SUBNETWORKS: Quota.Metric.ValueType = ...  # 421330469
    T2D_CPUS: Quota.Metric.ValueType = ...  # 71187140
    TARGET_HTTPS_PROXIES: Quota.Metric.ValueType = ...  # 219522506
    TARGET_HTTP_PROXIES: Quota.Metric.ValueType = ...  # 164117155
    TARGET_INSTANCES: Quota.Metric.ValueType = ...  # 284519728
    TARGET_POOLS: Quota.Metric.ValueType = ...  # 348261257
    TARGET_SSL_PROXIES: Quota.Metric.ValueType = ...  # 159216235
    TARGET_TCP_PROXIES: Quota.Metric.ValueType = ...  # 182243136
    TARGET_VPN_GATEWAYS: Quota.Metric.ValueType = ...  # 75029928
    URL_MAPS: Quota.Metric.ValueType = ...  # 378660743
    VPN_GATEWAYS: Quota.Metric.ValueType = ...  # 35620282
    VPN_TUNNELS: Quota.Metric.ValueType = ...  # 104327296
    XPN_SERVICE_PROJECTS: Quota.Metric.ValueType = ...  # 95191981

    LIMIT_FIELD_NUMBER: builtins.int
    METRIC_FIELD_NUMBER: builtins.int
    OWNER_FIELD_NUMBER: builtins.int
    USAGE_FIELD_NUMBER: builtins.int
    limit: builtins.float = ...
    """[Output Only] Quota limit for this metric."""

    metric: typing.Text = ...
    """[Output Only] Name of the quota metric.
    Check the Metric enum for the list of possible values.
    """

    owner: typing.Text = ...
    """[Output Only] Owning resource. This is the resource on which this quota is applied."""

    usage: builtins.float = ...
    """[Output Only] Current usage of this metric."""

    def __init__(self,
        *,
        limit : typing.Optional[builtins.float] = ...,
        metric : typing.Optional[typing.Text] = ...,
        owner : typing.Optional[typing.Text] = ...,
        usage : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_limit",b"_limit","_metric",b"_metric","_owner",b"_owner","_usage",b"_usage","limit",b"limit","metric",b"metric","owner",b"owner","usage",b"usage"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_limit",b"_limit","_metric",b"_metric","_owner",b"_owner","_usage",b"_usage","limit",b"limit","metric",b"metric","owner",b"owner","usage",b"usage"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_limit",b"_limit"]) -> typing.Optional[typing_extensions.Literal["limit"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_metric",b"_metric"]) -> typing.Optional[typing_extensions.Literal["metric"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_owner",b"_owner"]) -> typing.Optional[typing_extensions.Literal["owner"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_usage",b"_usage"]) -> typing.Optional[typing_extensions.Literal["usage"]]: ...
global___Quota = Quota

class RawDisk(google.protobuf.message.Message):
    """The parameters of the raw disk image."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ContainerType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ContainerTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ContainerType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CONTAINER_TYPE: RawDisk.ContainerType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        TAR: RawDisk.ContainerType.ValueType = ...  # 82821
    class ContainerType(_ContainerType, metaclass=_ContainerTypeEnumTypeWrapper):
        """The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created."""
        pass

    UNDEFINED_CONTAINER_TYPE: RawDisk.ContainerType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    TAR: RawDisk.ContainerType.ValueType = ...  # 82821

    CONTAINER_TYPE_FIELD_NUMBER: builtins.int
    SHA1_CHECKSUM_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    container_type: typing.Text = ...
    """The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
    Check the ContainerType enum for the list of possible values.
    """

    sha1_checksum: typing.Text = ...
    """[Deprecated] This field is deprecated. An optional SHA1 checksum of the disk image before unpackaging provided by the client when the disk image is created."""

    source: typing.Text = ...
    """The full Google Cloud Storage URL where the raw disk image archive is stored. The following are valid formats for the URL: - https://storage.googleapis.com/bucket_name/image_archive_name - https://storage.googleapis.com/bucket_name/folder_name/ image_archive_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL"""

    def __init__(self,
        *,
        container_type : typing.Optional[typing.Text] = ...,
        sha1_checksum : typing.Optional[typing.Text] = ...,
        source : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_container_type",b"_container_type","_sha1_checksum",b"_sha1_checksum","_source",b"_source","container_type",b"container_type","sha1_checksum",b"sha1_checksum","source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_container_type",b"_container_type","_sha1_checksum",b"_sha1_checksum","_source",b"_source","container_type",b"container_type","sha1_checksum",b"sha1_checksum","source",b"source"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_container_type",b"_container_type"]) -> typing.Optional[typing_extensions.Literal["container_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_sha1_checksum",b"_sha1_checksum"]) -> typing.Optional[typing_extensions.Literal["sha1_checksum"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source",b"_source"]) -> typing.Optional[typing_extensions.Literal["source"]]: ...
global___RawDisk = RawDisk

class RecreateInstancesInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.RecreateInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGERS_RECREATE_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group."""

    @property
    def instance_group_managers_recreate_instances_request_resource(self) -> global___InstanceGroupManagersRecreateInstancesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_managers_recreate_instances_request_resource : typing.Optional[global___InstanceGroupManagersRecreateInstancesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_managers_recreate_instances_request_resource",b"instance_group_managers_recreate_instances_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","instance_group_managers_recreate_instances_request_resource",b"instance_group_managers_recreate_instances_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RecreateInstancesInstanceGroupManagerRequest = RecreateInstancesInstanceGroupManagerRequest

class RecreateInstancesRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.RecreateInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUP_MANAGERS_RECREATE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """Name of the managed instance group."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    @property
    def region_instance_group_managers_recreate_request_resource(self) -> global___RegionInstanceGroupManagersRecreateRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_group_managers_recreate_request_resource : typing.Optional[global___RegionInstanceGroupManagersRecreateRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_instance_group_managers_recreate_request_resource",b"region_instance_group_managers_recreate_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","region_instance_group_managers_recreate_request_resource",b"region_instance_group_managers_recreate_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RecreateInstancesRegionInstanceGroupManagerRequest = RecreateInstancesRegionInstanceGroupManagerRequest

class Reference(google.protobuf.message.Message):
    """Represents a reference to a resource."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    REFERENCE_TYPE_FIELD_NUMBER: builtins.int
    REFERRER_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#reference for references."""

    reference_type: typing.Text = ...
    """A description of the reference type with no implied semantics. Possible values include: 1. MEMBER_OF"""

    referrer: typing.Text = ...
    """URL of the resource which refers to the target."""

    target: typing.Text = ...
    """URL of the resource to which this reference points."""

    def __init__(self,
        *,
        kind : typing.Optional[typing.Text] = ...,
        reference_type : typing.Optional[typing.Text] = ...,
        referrer : typing.Optional[typing.Text] = ...,
        target : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_kind",b"_kind","_reference_type",b"_reference_type","_referrer",b"_referrer","_target",b"_target","kind",b"kind","reference_type",b"reference_type","referrer",b"referrer","target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_kind",b"_kind","_reference_type",b"_reference_type","_referrer",b"_referrer","_target",b"_target","kind",b"kind","reference_type",b"reference_type","referrer",b"referrer","target",b"target"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_reference_type",b"_reference_type"]) -> typing.Optional[typing_extensions.Literal["reference_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_referrer",b"_referrer"]) -> typing.Optional[typing_extensions.Literal["referrer"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target",b"_target"]) -> typing.Optional[typing_extensions.Literal["target"]]: ...
global___Reference = Reference

class Region(google.protobuf.message.Message):
    """Represents a Region resource. A region is a geographical area where a resource is located. For more information, read Regions and Zones."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Region.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DOWN: Region.Status.ValueType = ...  # 2104482
        UP: Region.Status.ValueType = ...  # 2715
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] Status of the region, either UP or DOWN."""
        pass

    UNDEFINED_STATUS: Region.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DOWN: Region.Status.ValueType = ...  # 2104482
    UP: Region.Status.ValueType = ...  # 2715

    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEPRECATED_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    QUOTAS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    SUPPORTS_PZS_FIELD_NUMBER: builtins.int
    ZONES_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def deprecated(self) -> global___DeprecationStatus:
        """[Output Only] The deprecation status associated with this region."""
        pass
    description: typing.Text = ...
    """[Output Only] Textual description of the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#region for regions."""

    name: typing.Text = ...
    """[Output Only] Name of the resource."""

    @property
    def quotas(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Quota]:
        """[Output Only] Quotas assigned to this region."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    status: typing.Text = ...
    """[Output Only] Status of the region, either UP or DOWN.
    Check the Status enum for the list of possible values.
    """

    supports_pzs: builtins.bool = ...
    """[Output Only] Reserved for future use."""

    @property
    def zones(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] A list of zones available in this region, in the form of resource URLs."""
        pass
    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        deprecated : typing.Optional[global___DeprecationStatus] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        quotas : typing.Optional[typing.Iterable[global___Quota]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        supports_pzs : typing.Optional[builtins.bool] = ...,
        zones : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","_status",b"_status","_supports_pzs",b"_supports_pzs","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","id",b"id","kind",b"kind","name",b"name","self_link",b"self_link","status",b"status","supports_pzs",b"supports_pzs"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","_status",b"_status","_supports_pzs",b"_supports_pzs","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","id",b"id","kind",b"kind","name",b"name","quotas",b"quotas","self_link",b"self_link","status",b"status","supports_pzs",b"supports_pzs","zones",b"zones"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deprecated",b"_deprecated"]) -> typing.Optional[typing_extensions.Literal["deprecated"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_supports_pzs",b"_supports_pzs"]) -> typing.Optional[typing_extensions.Literal["supports_pzs"]]: ...
global___Region = Region

class RegionAutoscalerList(google.protobuf.message.Message):
    """Contains a list of autoscalers."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Autoscaler]:
        """A list of Autoscaler resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Autoscaler]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RegionAutoscalerList = RegionAutoscalerList

class RegionDiskTypeList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DiskType]:
        """A list of DiskType resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#regionDiskTypeList for region disk types."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___DiskType]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RegionDiskTypeList = RegionDiskTypeList

class RegionDisksAddResourcePoliciesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Resource policies to be added to this disk."""
        pass
    def __init__(self,
        *,
        resource_policies : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_policies",b"resource_policies"]) -> None: ...
global___RegionDisksAddResourcePoliciesRequest = RegionDisksAddResourcePoliciesRequest

class RegionDisksRemoveResourcePoliciesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Resource policies to be removed from this disk."""
        pass
    def __init__(self,
        *,
        resource_policies : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_policies",b"resource_policies"]) -> None: ...
global___RegionDisksRemoveResourcePoliciesRequest = RegionDisksRemoveResourcePoliciesRequest

class RegionDisksResizeRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SIZE_GB_FIELD_NUMBER: builtins.int
    size_gb: builtins.int = ...
    """The new size of the regional persistent disk, which is specified in GB."""

    def __init__(self,
        *,
        size_gb : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_size_gb",b"_size_gb","size_gb",b"size_gb"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_size_gb",b"_size_gb","size_gb",b"size_gb"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_size_gb",b"_size_gb"]) -> typing.Optional[typing_extensions.Literal["size_gb"]]: ...
global___RegionDisksResizeRequest = RegionDisksResizeRequest

class RegionInstanceGroupList(google.protobuf.message.Message):
    """Contains a list of InstanceGroup resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceGroup]:
        """A list of InstanceGroup resources."""
        pass
    kind: typing.Text = ...
    """The resource type."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___InstanceGroup]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RegionInstanceGroupList = RegionInstanceGroupList

class RegionInstanceGroupManagerDeleteInstanceConfigReq(google.protobuf.message.Message):
    """RegionInstanceGroupManagers.deletePerInstanceConfigs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAMES_FIELD_NUMBER: builtins.int
    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of instance names for which we want to delete per-instance configs on this managed instance group."""
        pass
    def __init__(self,
        *,
        names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["names",b"names"]) -> None: ...
global___RegionInstanceGroupManagerDeleteInstanceConfigReq = RegionInstanceGroupManagerDeleteInstanceConfigReq

class RegionInstanceGroupManagerList(google.protobuf.message.Message):
    """Contains a list of managed instance groups."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceGroupManager]:
        """A list of InstanceGroupManager resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] The resource type, which is always compute#instanceGroupManagerList for a list of managed instance groups that exist in th regional scope."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___InstanceGroupManager]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RegionInstanceGroupManagerList = RegionInstanceGroupManagerList

class RegionInstanceGroupManagerPatchInstanceConfigReq(google.protobuf.message.Message):
    """RegionInstanceGroupManagers.patchPerInstanceConfigs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PER_INSTANCE_CONFIGS_FIELD_NUMBER: builtins.int
    @property
    def per_instance_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerInstanceConfig]:
        """The list of per-instance configs to insert or patch on this managed instance group."""
        pass
    def __init__(self,
        *,
        per_instance_configs : typing.Optional[typing.Iterable[global___PerInstanceConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["per_instance_configs",b"per_instance_configs"]) -> None: ...
global___RegionInstanceGroupManagerPatchInstanceConfigReq = RegionInstanceGroupManagerPatchInstanceConfigReq

class RegionInstanceGroupManagerUpdateInstanceConfigReq(google.protobuf.message.Message):
    """RegionInstanceGroupManagers.updatePerInstanceConfigs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PER_INSTANCE_CONFIGS_FIELD_NUMBER: builtins.int
    @property
    def per_instance_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerInstanceConfig]:
        """The list of per-instance configs to insert or patch on this managed instance group."""
        pass
    def __init__(self,
        *,
        per_instance_configs : typing.Optional[typing.Iterable[global___PerInstanceConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["per_instance_configs",b"per_instance_configs"]) -> None: ...
global___RegionInstanceGroupManagerUpdateInstanceConfigReq = RegionInstanceGroupManagerUpdateInstanceConfigReq

class RegionInstanceGroupManagersAbandonInstancesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URLs of one or more instances to abandon. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME]."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___RegionInstanceGroupManagersAbandonInstancesRequest = RegionInstanceGroupManagersAbandonInstancesRequest

class RegionInstanceGroupManagersApplyUpdatesRequest(google.protobuf.message.Message):
    """RegionInstanceGroupManagers.applyUpdatesToInstances"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ALL_INSTANCES_FIELD_NUMBER: builtins.int
    INSTANCES_FIELD_NUMBER: builtins.int
    MINIMAL_ACTION_FIELD_NUMBER: builtins.int
    MOST_DISRUPTIVE_ALLOWED_ACTION_FIELD_NUMBER: builtins.int
    all_instances: builtins.bool = ...
    """Flag to update all instances instead of specified list of “instances”. If the flag is set to true then the instances may not be specified in the request."""

    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of URLs of one or more instances for which you want to apply updates. Each URL can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME]."""
        pass
    minimal_action: typing.Text = ...
    """The minimal action that you want to perform on each instance during the update: - REPLACE: At minimum, delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the minimum action is NONE. If your update requires a more disruptive action than you set with this flag, the necessary action is performed to execute the update."""

    most_disruptive_allowed_action: typing.Text = ...
    """The most disruptive action that you want to perform on each instance during the update: - REPLACE: Delete the instance and create it again. - RESTART: Stop the instance and start it again. - REFRESH: Do not stop the instance. - NONE: Do not disrupt the instance at all. By default, the most disruptive allowed action is REPLACE. If your update requires a more disruptive action than you set with this flag, the update request will fail."""

    def __init__(self,
        *,
        all_instances : typing.Optional[builtins.bool] = ...,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        minimal_action : typing.Optional[typing.Text] = ...,
        most_disruptive_allowed_action : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_all_instances",b"_all_instances","_minimal_action",b"_minimal_action","_most_disruptive_allowed_action",b"_most_disruptive_allowed_action","all_instances",b"all_instances","minimal_action",b"minimal_action","most_disruptive_allowed_action",b"most_disruptive_allowed_action"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_all_instances",b"_all_instances","_minimal_action",b"_minimal_action","_most_disruptive_allowed_action",b"_most_disruptive_allowed_action","all_instances",b"all_instances","instances",b"instances","minimal_action",b"minimal_action","most_disruptive_allowed_action",b"most_disruptive_allowed_action"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_all_instances",b"_all_instances"]) -> typing.Optional[typing_extensions.Literal["all_instances"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_minimal_action",b"_minimal_action"]) -> typing.Optional[typing_extensions.Literal["minimal_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_most_disruptive_allowed_action",b"_most_disruptive_allowed_action"]) -> typing.Optional[typing_extensions.Literal["most_disruptive_allowed_action"]]: ...
global___RegionInstanceGroupManagersApplyUpdatesRequest = RegionInstanceGroupManagersApplyUpdatesRequest

class RegionInstanceGroupManagersCreateInstancesRequest(google.protobuf.message.Message):
    """RegionInstanceGroupManagers.createInstances"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerInstanceConfig]:
        """[Required] List of specifications of per-instance configs."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[global___PerInstanceConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___RegionInstanceGroupManagersCreateInstancesRequest = RegionInstanceGroupManagersCreateInstancesRequest

class RegionInstanceGroupManagersDeleteInstancesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    SKIP_INSTANCES_ON_VALIDATION_ERROR_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URLs of one or more instances to delete. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME]."""
        pass
    skip_instances_on_validation_error: builtins.bool = ...
    """Specifies whether the request should proceed despite the inclusion of instances that are not members of the group or that are already in the process of being deleted or abandoned. If this field is set to `false` and such an instance is specified in the request, the operation fails. The operation always fails if the request contains a malformed instance URL or a reference to an instance that exists in a zone or region other than the group's zone or region."""

    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        skip_instances_on_validation_error : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_skip_instances_on_validation_error",b"_skip_instances_on_validation_error","skip_instances_on_validation_error",b"skip_instances_on_validation_error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_skip_instances_on_validation_error",b"_skip_instances_on_validation_error","instances",b"instances","skip_instances_on_validation_error",b"skip_instances_on_validation_error"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_skip_instances_on_validation_error",b"_skip_instances_on_validation_error"]) -> typing.Optional[typing_extensions.Literal["skip_instances_on_validation_error"]]: ...
global___RegionInstanceGroupManagersDeleteInstancesRequest = RegionInstanceGroupManagersDeleteInstancesRequest

class RegionInstanceGroupManagersListErrorsResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEMS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceManagedByIgmError]:
        """[Output Only] The list of errors of the managed instance group."""
        pass
    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    def __init__(self,
        *,
        items : typing.Optional[typing.Iterable[global___InstanceManagedByIgmError]] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","next_page_token",b"next_page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","items",b"items","next_page_token",b"next_page_token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
global___RegionInstanceGroupManagersListErrorsResponse = RegionInstanceGroupManagersListErrorsResponse

class RegionInstanceGroupManagersListInstanceConfigsResp(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEMS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerInstanceConfig]:
        """[Output Only] The list of PerInstanceConfig."""
        pass
    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        items : typing.Optional[typing.Iterable[global___PerInstanceConfig]] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","_warning",b"_warning","next_page_token",b"next_page_token","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","_warning",b"_warning","items",b"items","next_page_token",b"next_page_token","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RegionInstanceGroupManagersListInstanceConfigsResp = RegionInstanceGroupManagersListInstanceConfigsResp

class RegionInstanceGroupManagersListInstancesResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MANAGED_INSTANCES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def managed_instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ManagedInstance]:
        """A list of managed instances."""
        pass
    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    def __init__(self,
        *,
        managed_instances : typing.Optional[typing.Iterable[global___ManagedInstance]] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","next_page_token",b"next_page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_next_page_token",b"_next_page_token","managed_instances",b"managed_instances","next_page_token",b"next_page_token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
global___RegionInstanceGroupManagersListInstancesResponse = RegionInstanceGroupManagersListInstancesResponse

class RegionInstanceGroupManagersRecreateRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URLs of one or more instances to recreate. This can be a full URL or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME]."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___RegionInstanceGroupManagersRecreateRequest = RegionInstanceGroupManagersRecreateRequest

class RegionInstanceGroupManagersSetTargetPoolsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FINGERPRINT_FIELD_NUMBER: builtins.int
    TARGET_POOLS_FIELD_NUMBER: builtins.int
    fingerprint: typing.Text = ...
    """Fingerprint of the target pools information, which is a hash of the contents. This field is used for optimistic locking when you update the target pool entries. This field is optional."""

    @property
    def target_pools(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URL of all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group."""
        pass
    def __init__(self,
        *,
        fingerprint : typing.Optional[typing.Text] = ...,
        target_pools : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","fingerprint",b"fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","fingerprint",b"fingerprint","target_pools",b"target_pools"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
global___RegionInstanceGroupManagersSetTargetPoolsRequest = RegionInstanceGroupManagersSetTargetPoolsRequest

class RegionInstanceGroupManagersSetTemplateRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_TEMPLATE_FIELD_NUMBER: builtins.int
    instance_template: typing.Text = ...
    """URL of the InstanceTemplate resource from which all new instances will be created."""

    def __init__(self,
        *,
        instance_template : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance_template",b"_instance_template","instance_template",b"instance_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance_template",b"_instance_template","instance_template",b"instance_template"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_template",b"_instance_template"]) -> typing.Optional[typing_extensions.Literal["instance_template"]]: ...
global___RegionInstanceGroupManagersSetTemplateRequest = RegionInstanceGroupManagersSetTemplateRequest

class RegionInstanceGroupsListInstances(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceWithNamedPorts]:
        """A list of InstanceWithNamedPorts resources."""
        pass
    kind: typing.Text = ...
    """The resource type."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___InstanceWithNamedPorts]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RegionInstanceGroupsListInstances = RegionInstanceGroupsListInstances

class RegionInstanceGroupsListInstancesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _InstanceState:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _InstanceStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_InstanceState.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_INSTANCE_STATE: RegionInstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALL: RegionInstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 64897
        """Matches any status of the instances, running, non-running and others."""

        RUNNING: RegionInstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 121282975
        """Instance is in RUNNING state if it is running."""

    class InstanceState(_InstanceState, metaclass=_InstanceStateEnumTypeWrapper):
        """Instances in which state should be returned. Valid options are: 'ALL', 'RUNNING'. By default, it lists all instances."""
        pass

    UNDEFINED_INSTANCE_STATE: RegionInstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALL: RegionInstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 64897
    """Matches any status of the instances, running, non-running and others."""

    RUNNING: RegionInstanceGroupsListInstancesRequest.InstanceState.ValueType = ...  # 121282975
    """Instance is in RUNNING state if it is running."""


    INSTANCE_STATE_FIELD_NUMBER: builtins.int
    PORT_NAME_FIELD_NUMBER: builtins.int
    instance_state: typing.Text = ...
    """Instances in which state should be returned. Valid options are: 'ALL', 'RUNNING'. By default, it lists all instances.
    Check the InstanceState enum for the list of possible values.
    """

    port_name: typing.Text = ...
    """Name of port user is interested in. It is optional. If it is set, only information about this ports will be returned. If it is not set, all the named ports will be returned. Always lists all instances."""

    def __init__(self,
        *,
        instance_state : typing.Optional[typing.Text] = ...,
        port_name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance_state",b"_instance_state","_port_name",b"_port_name","instance_state",b"instance_state","port_name",b"port_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance_state",b"_instance_state","_port_name",b"_port_name","instance_state",b"instance_state","port_name",b"port_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_state",b"_instance_state"]) -> typing.Optional[typing_extensions.Literal["instance_state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_name",b"_port_name"]) -> typing.Optional[typing_extensions.Literal["port_name"]]: ...
global___RegionInstanceGroupsListInstancesRequest = RegionInstanceGroupsListInstancesRequest

class RegionInstanceGroupsSetNamedPortsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FINGERPRINT_FIELD_NUMBER: builtins.int
    NAMED_PORTS_FIELD_NUMBER: builtins.int
    fingerprint: typing.Text = ...
    """The fingerprint of the named ports information for this instance group. Use this optional property to prevent conflicts when multiple users change the named ports settings concurrently. Obtain the fingerprint with the instanceGroups.get method. Then, include the fingerprint in your request to ensure that you do not overwrite changes that were applied from another concurrent request."""

    @property
    def named_ports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NamedPort]:
        """The list of named ports to set for this instance group."""
        pass
    def __init__(self,
        *,
        fingerprint : typing.Optional[typing.Text] = ...,
        named_ports : typing.Optional[typing.Iterable[global___NamedPort]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","fingerprint",b"fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","fingerprint",b"fingerprint","named_ports",b"named_ports"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
global___RegionInstanceGroupsSetNamedPortsRequest = RegionInstanceGroupsSetNamedPortsRequest

class RegionList(google.protobuf.message.Message):
    """Contains a list of region resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Region]:
        """A list of Region resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#regionList for lists of regions."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Region]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RegionList = RegionList

class RegionSetLabelsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    label_fingerprint: typing.Text = ...
    """The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. Make a get() request to the resource to get the latest fingerprint."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The labels to set for this resource."""
        pass
    def __init__(self,
        *,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint","label_fingerprint",b"label_fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint","label_fingerprint",b"label_fingerprint","labels",b"labels"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
global___RegionSetLabelsRequest = RegionSetLabelsRequest

class RegionSetPolicyRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BINDINGS_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    POLICY_FIELD_NUMBER: builtins.int
    @property
    def bindings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Binding]:
        """Flatten Policy to create a backwacd compatible wire-format. Deprecated. Use 'policy' to specify bindings."""
        pass
    etag: typing.Text = ...
    """Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag."""

    @property
    def policy(self) -> global___Policy:
        """REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them."""
        pass
    def __init__(self,
        *,
        bindings : typing.Optional[typing.Iterable[global___Binding]] = ...,
        etag : typing.Optional[typing.Text] = ...,
        policy : typing.Optional[global___Policy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_policy",b"_policy","etag",b"etag","policy",b"policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_policy",b"_policy","bindings",b"bindings","etag",b"etag","policy",b"policy"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_etag",b"_etag"]) -> typing.Optional[typing_extensions.Literal["etag"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_policy",b"_policy"]) -> typing.Optional[typing_extensions.Literal["policy"]]: ...
global___RegionSetPolicyRequest = RegionSetPolicyRequest

class RegionTargetHttpsProxiesSetSslCertificatesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SSL_CERTIFICATES_FIELD_NUMBER: builtins.int
    @property
    def ssl_certificates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """New set of SslCertificate resources to associate with this TargetHttpsProxy resource. Currently exactly one SslCertificate resource must be specified."""
        pass
    def __init__(self,
        *,
        ssl_certificates : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ssl_certificates",b"ssl_certificates"]) -> None: ...
global___RegionTargetHttpsProxiesSetSslCertificatesRequest = RegionTargetHttpsProxiesSetSslCertificatesRequest

class RegionUrlMapsValidateRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___UrlMap:
        """Content of the UrlMap to be validated."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___UrlMap] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_resource",b"_resource","resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_resource",b"_resource","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_resource",b"_resource"]) -> typing.Optional[typing_extensions.Literal["resource"]]: ...
global___RegionUrlMapsValidateRequest = RegionUrlMapsValidateRequest

class RemoveAssociationFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.RemoveAssociation. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to update."""

    name: typing.Text = ...
    """Name for the attachment that will be removed."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        name : typing.Optional[typing.Text] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","_request_id",b"_request_id","name",b"name","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","_request_id",b"_request_id","firewall_policy",b"firewall_policy","name",b"name","request_id",b"request_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RemoveAssociationFirewallPolicyRequest = RemoveAssociationFirewallPolicyRequest

class RemoveHealthCheckTargetPoolRequest(google.protobuf.message.Message):
    """A request message for TargetPools.RemoveHealthCheck. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_POOL_FIELD_NUMBER: builtins.int
    TARGET_POOLS_REMOVE_HEALTH_CHECK_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_pool: typing.Text = ...
    """Name of the target pool to remove health checks from."""

    @property
    def target_pools_remove_health_check_request_resource(self) -> global___TargetPoolsRemoveHealthCheckRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_pool : typing.Text = ...,
        target_pools_remove_health_check_request_resource : typing.Optional[global___TargetPoolsRemoveHealthCheckRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_pools_remove_health_check_request_resource",b"target_pools_remove_health_check_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_pool",b"target_pool","target_pools_remove_health_check_request_resource",b"target_pools_remove_health_check_request_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RemoveHealthCheckTargetPoolRequest = RemoveHealthCheckTargetPoolRequest

class RemoveInstanceTargetPoolRequest(google.protobuf.message.Message):
    """A request message for TargetPools.RemoveInstance. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_POOL_FIELD_NUMBER: builtins.int
    TARGET_POOLS_REMOVE_INSTANCE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_pool: typing.Text = ...
    """Name of the TargetPool resource to remove instances from."""

    @property
    def target_pools_remove_instance_request_resource(self) -> global___TargetPoolsRemoveInstanceRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_pool : typing.Text = ...,
        target_pools_remove_instance_request_resource : typing.Optional[global___TargetPoolsRemoveInstanceRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_pools_remove_instance_request_resource",b"target_pools_remove_instance_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_pool",b"target_pool","target_pools_remove_instance_request_resource",b"target_pools_remove_instance_request_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RemoveInstanceTargetPoolRequest = RemoveInstanceTargetPoolRequest

class RemoveInstancesInstanceGroupRequest(google.protobuf.message.Message):
    """A request message for InstanceGroups.RemoveInstances. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_FIELD_NUMBER: builtins.int
    INSTANCE_GROUPS_REMOVE_INSTANCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group: typing.Text = ...
    """The name of the instance group where the specified instances will be removed."""

    @property
    def instance_groups_remove_instances_request_resource(self) -> global___InstanceGroupsRemoveInstancesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the instance group is located."""

    def __init__(self,
        *,
        instance_group : typing.Text = ...,
        instance_groups_remove_instances_request_resource : typing.Optional[global___InstanceGroupsRemoveInstancesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_groups_remove_instances_request_resource",b"instance_groups_remove_instances_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group",b"instance_group","instance_groups_remove_instances_request_resource",b"instance_groups_remove_instances_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RemoveInstancesInstanceGroupRequest = RemoveInstancesInstanceGroupRequest

class RemovePeeringNetworkRequest(google.protobuf.message.Message):
    """A request message for Networks.RemovePeering. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_FIELD_NUMBER: builtins.int
    NETWORKS_REMOVE_PEERING_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    network: typing.Text = ...
    """Name of the network resource to remove peering from."""

    @property
    def networks_remove_peering_request_resource(self) -> global___NetworksRemovePeeringRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network : typing.Text = ...,
        networks_remove_peering_request_resource : typing.Optional[global___NetworksRemovePeeringRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","networks_remove_peering_request_resource",b"networks_remove_peering_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network",b"network","networks_remove_peering_request_resource",b"networks_remove_peering_request_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RemovePeeringNetworkRequest = RemovePeeringNetworkRequest

class RemoveResourcePoliciesDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.RemoveResourcePolicies. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    DISKS_REMOVE_RESOURCE_POLICIES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """The disk name for this request."""

    @property
    def disks_remove_resource_policies_request_resource(self) -> global___DisksRemoveResourcePoliciesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        disks_remove_resource_policies_request_resource : typing.Optional[global___DisksRemoveResourcePoliciesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disks_remove_resource_policies_request_resource",b"disks_remove_resource_policies_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk",b"disk","disks_remove_resource_policies_request_resource",b"disks_remove_resource_policies_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RemoveResourcePoliciesDiskRequest = RemoveResourcePoliciesDiskRequest

class RemoveResourcePoliciesInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.RemoveResourcePolicies. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    INSTANCES_REMOVE_RESOURCE_POLICIES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """The instance name for this request."""

    @property
    def instances_remove_resource_policies_request_resource(self) -> global___InstancesRemoveResourcePoliciesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        instances_remove_resource_policies_request_resource : typing.Optional[global___InstancesRemoveResourcePoliciesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instances_remove_resource_policies_request_resource",b"instances_remove_resource_policies_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","instances_remove_resource_policies_request_resource",b"instances_remove_resource_policies_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RemoveResourcePoliciesInstanceRequest = RemoveResourcePoliciesInstanceRequest

class RemoveResourcePoliciesRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.RemoveResourcePolicies. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_DISKS_REMOVE_RESOURCE_POLICIES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """The disk name for this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    @property
    def region_disks_remove_resource_policies_request_resource(self) -> global___RegionDisksRemoveResourcePoliciesRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_disks_remove_resource_policies_request_resource : typing.Optional[global___RegionDisksRemoveResourcePoliciesRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_disks_remove_resource_policies_request_resource",b"region_disks_remove_resource_policies_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk",b"disk","project",b"project","region",b"region","region_disks_remove_resource_policies_request_resource",b"region_disks_remove_resource_policies_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RemoveResourcePoliciesRegionDiskRequest = RemoveResourcePoliciesRegionDiskRequest

class RemoveRuleFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.RemoveRule. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_POLICY_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall_policy: typing.Text = ...
    """Name of the firewall policy to update."""

    priority: builtins.int = ...
    """The priority of the rule to remove from the firewall policy."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall_policy : typing.Text = ...,
        priority : typing.Optional[builtins.int] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_priority",b"_priority","_request_id",b"_request_id","priority",b"priority","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_priority",b"_priority","_request_id",b"_request_id","firewall_policy",b"firewall_policy","priority",b"priority","request_id",b"request_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___RemoveRuleFirewallPolicyRequest = RemoveRuleFirewallPolicyRequest

class RemoveRuleSecurityPolicyRequest(google.protobuf.message.Message):
    """A request message for SecurityPolicies.RemoveRule. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRIORITY_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_FIELD_NUMBER: builtins.int
    priority: builtins.int = ...
    """The priority of the rule to remove from the security policy."""

    project: typing.Text = ...
    """Project ID for this request."""

    security_policy: typing.Text = ...
    """Name of the security policy to update."""

    def __init__(self,
        *,
        priority : typing.Optional[builtins.int] = ...,
        project : typing.Text = ...,
        security_policy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_priority",b"_priority","priority",b"priority"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_priority",b"_priority","priority",b"priority","project",b"project","security_policy",b"security_policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
global___RemoveRuleSecurityPolicyRequest = RemoveRuleSecurityPolicyRequest

class RequestMirrorPolicy(google.protobuf.message.Message):
    """A policy that specifies how requests intended for the route's backends are shadowed to a separate mirrored backend service. Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host / authority header is suffixed with -shadow."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """The full or partial URL to the BackendService resource being mirrored to."""

    def __init__(self,
        *,
        backend_service : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_backend_service",b"_backend_service","backend_service",b"backend_service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_backend_service",b"_backend_service","backend_service",b"backend_service"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_backend_service",b"_backend_service"]) -> typing.Optional[typing_extensions.Literal["backend_service"]]: ...
global___RequestMirrorPolicy = RequestMirrorPolicy

class Reservation(google.protobuf.message.Message):
    """Represents a reservation resource. A reservation ensures that capacity is held in a specific zone even if the reserved VMs are not running. For more information, read Reserving zonal resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Reservation.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CREATING: Reservation.Status.ValueType = ...  # 455564985
        """Resources are being allocated for the reservation."""

        DELETING: Reservation.Status.ValueType = ...  # 528602024
        """Reservation is currently being deleted."""

        INVALID: Reservation.Status.ValueType = ...  # 530283991
        READY: Reservation.Status.ValueType = ...  # 77848963
        """Reservation has allocated all its resources."""

        UPDATING: Reservation.Status.ValueType = ...  # 494614342
        """Reservation is currently being resized."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the reservation."""
        pass

    UNDEFINED_STATUS: Reservation.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CREATING: Reservation.Status.ValueType = ...  # 455564985
    """Resources are being allocated for the reservation."""

    DELETING: Reservation.Status.ValueType = ...  # 528602024
    """Reservation is currently being deleted."""

    INVALID: Reservation.Status.ValueType = ...  # 530283991
    READY: Reservation.Status.ValueType = ...  # 77848963
    """Reservation has allocated all its resources."""

    UPDATING: Reservation.Status.ValueType = ...  # 494614342
    """Reservation is currently being resized."""


    COMMITMENT_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SATISFIES_PZS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SPECIFIC_RESERVATION_FIELD_NUMBER: builtins.int
    SPECIFIC_RESERVATION_REQUIRED_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    commitment: typing.Text = ...
    """[Output Only] Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#reservations for reservations."""

    name: typing.Text = ...
    """The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    satisfies_pzs: builtins.bool = ...
    """[Output Only] Reserved for future use."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined fully-qualified URL for this resource."""

    @property
    def specific_reservation(self) -> global___AllocationSpecificSKUReservation:
        """Reservation for instances with specific machine shapes."""
        pass
    specific_reservation_required: builtins.bool = ...
    """Indicates whether the reservation can be consumed by VMs with affinity for "any" reservation. If the field is set, then only VMs that target the reservation by name can consume from this reservation."""

    status: typing.Text = ...
    """[Output Only] The status of the reservation.
    Check the Status enum for the list of possible values.
    """

    zone: typing.Text = ...
    """Zone in which the reservation resides. A zone must be provided if the reservation is created within a commitment."""

    def __init__(self,
        *,
        commitment : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        satisfies_pzs : typing.Optional[builtins.bool] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        specific_reservation : typing.Optional[global___AllocationSpecificSKUReservation] = ...,
        specific_reservation_required : typing.Optional[builtins.bool] = ...,
        status : typing.Optional[typing.Text] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_commitment",b"_commitment","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_specific_reservation",b"_specific_reservation","_specific_reservation_required",b"_specific_reservation_required","_status",b"_status","_zone",b"_zone","commitment",b"commitment","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","specific_reservation",b"specific_reservation","specific_reservation_required",b"specific_reservation_required","status",b"status","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_commitment",b"_commitment","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_specific_reservation",b"_specific_reservation","_specific_reservation_required",b"_specific_reservation_required","_status",b"_status","_zone",b"_zone","commitment",b"commitment","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","specific_reservation",b"specific_reservation","specific_reservation_required",b"specific_reservation_required","status",b"status","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_commitment",b"_commitment"]) -> typing.Optional[typing_extensions.Literal["commitment"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_satisfies_pzs",b"_satisfies_pzs"]) -> typing.Optional[typing_extensions.Literal["satisfies_pzs"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_specific_reservation",b"_specific_reservation"]) -> typing.Optional[typing_extensions.Literal["specific_reservation"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_specific_reservation_required",b"_specific_reservation_required"]) -> typing.Optional[typing_extensions.Literal["specific_reservation_required"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___Reservation = Reservation

class ReservationAffinity(google.protobuf.message.Message):
    """Specifies the reservations that this instance can consume from."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ConsumeReservationType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ConsumeReservationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ConsumeReservationType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CONSUME_RESERVATION_TYPE: ReservationAffinity.ConsumeReservationType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ANY_RESERVATION: ReservationAffinity.ConsumeReservationType.ValueType = ...  # 200008121
        """Consume any allocation available."""

        NO_RESERVATION: ReservationAffinity.ConsumeReservationType.ValueType = ...  # 169322030
        """Do not consume from any allocated capacity."""

        SPECIFIC_RESERVATION: ReservationAffinity.ConsumeReservationType.ValueType = ...  # 229889055
        """Must consume from a specific reservation. Must specify key value fields for specifying the reservations."""

        UNSPECIFIED: ReservationAffinity.ConsumeReservationType.ValueType = ...  # 526786327
    class ConsumeReservationType(_ConsumeReservationType, metaclass=_ConsumeReservationTypeEnumTypeWrapper):
        """Specifies the type of reservation from which this instance can consume resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or NO_RESERVATION. See Consuming reserved instances for examples."""
        pass

    UNDEFINED_CONSUME_RESERVATION_TYPE: ReservationAffinity.ConsumeReservationType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ANY_RESERVATION: ReservationAffinity.ConsumeReservationType.ValueType = ...  # 200008121
    """Consume any allocation available."""

    NO_RESERVATION: ReservationAffinity.ConsumeReservationType.ValueType = ...  # 169322030
    """Do not consume from any allocated capacity."""

    SPECIFIC_RESERVATION: ReservationAffinity.ConsumeReservationType.ValueType = ...  # 229889055
    """Must consume from a specific reservation. Must specify key value fields for specifying the reservations."""

    UNSPECIFIED: ReservationAffinity.ConsumeReservationType.ValueType = ...  # 526786327

    CONSUME_RESERVATION_TYPE_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    consume_reservation_type: typing.Text = ...
    """Specifies the type of reservation from which this instance can consume resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or NO_RESERVATION. See Consuming reserved instances for examples.
    Check the ConsumeReservationType enum for the list of possible values.
    """

    key: typing.Text = ...
    """Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify googleapis.com/reservation-name as the key and specify the name of your reservation as its value."""

    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Corresponds to the label values of a reservation resource. This can be either a name to a reservation in the same project or "projects/different-project/reservations/some-reservation-name" to target a shared reservation in the same zone but in a different project."""
        pass
    def __init__(self,
        *,
        consume_reservation_type : typing.Optional[typing.Text] = ...,
        key : typing.Optional[typing.Text] = ...,
        values : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_consume_reservation_type",b"_consume_reservation_type","_key",b"_key","consume_reservation_type",b"consume_reservation_type","key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_consume_reservation_type",b"_consume_reservation_type","_key",b"_key","consume_reservation_type",b"consume_reservation_type","key",b"key","values",b"values"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_consume_reservation_type",b"_consume_reservation_type"]) -> typing.Optional[typing_extensions.Literal["consume_reservation_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_key",b"_key"]) -> typing.Optional[typing_extensions.Literal["key"]]: ...
global___ReservationAffinity = ReservationAffinity

class ReservationAggregatedList(google.protobuf.message.Message):
    """Contains a list of reservations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___ReservationsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___ReservationsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ReservationsScopedList]:
        """A list of Allocation resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___ReservationsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ReservationAggregatedList = ReservationAggregatedList

class ReservationList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Reservation]:
        """[Output Only] A list of Allocation resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource.Always compute#reservationsList for listsof reservations"""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Reservation]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ReservationList = ReservationList

class ReservationsResizeRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SPECIFIC_SKU_COUNT_FIELD_NUMBER: builtins.int
    specific_sku_count: builtins.int = ...
    """Number of allocated resources can be resized with minimum = 1 and maximum = 1000."""

    def __init__(self,
        *,
        specific_sku_count : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_specific_sku_count",b"_specific_sku_count","specific_sku_count",b"specific_sku_count"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_specific_sku_count",b"_specific_sku_count","specific_sku_count",b"specific_sku_count"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_specific_sku_count",b"_specific_sku_count"]) -> typing.Optional[typing_extensions.Literal["specific_sku_count"]]: ...
global___ReservationsResizeRequest = ReservationsResizeRequest

class ReservationsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESERVATIONS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def reservations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Reservation]:
        """A list of reservations contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of reservations when the list is empty."""
        pass
    def __init__(self,
        *,
        reservations : typing.Optional[typing.Iterable[global___Reservation]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","reservations",b"reservations","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ReservationsScopedList = ReservationsScopedList

class ResetInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.Reset. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___ResetInstanceRequest = ResetInstanceRequest

class ResizeDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.Resize. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    DISKS_RESIZE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """The name of the persistent disk."""

    @property
    def disks_resize_request_resource(self) -> global___DisksResizeRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        disks_resize_request_resource : typing.Optional[global___DisksResizeRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disks_resize_request_resource",b"disks_resize_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk",b"disk","disks_resize_request_resource",b"disks_resize_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___ResizeDiskRequest = ResizeDiskRequest

class ResizeInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.Resize. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    size: builtins.int = ...
    """The number of running instances that the managed instance group should maintain at any given time. The group automatically adds or removes instances to maintain the number of instances specified by this parameter."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        size : builtins.int = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","request_id",b"request_id","size",b"size","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___ResizeInstanceGroupManagerRequest = ResizeInstanceGroupManagerRequest

class ResizeRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.Resize. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_DISKS_RESIZE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    disk: typing.Text = ...
    """Name of the regional persistent disk."""

    project: typing.Text = ...
    """The project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    @property
    def region_disks_resize_request_resource(self) -> global___RegionDisksResizeRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        disk : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_disks_resize_request_resource : typing.Optional[global___RegionDisksResizeRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_disks_resize_request_resource",b"region_disks_resize_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","disk",b"disk","project",b"project","region",b"region","region_disks_resize_request_resource",b"region_disks_resize_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___ResizeRegionDiskRequest = ResizeRegionDiskRequest

class ResizeRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.Resize. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """Name of the managed instance group."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    size: builtins.int = ...
    """Number of instances that should exist in this instance group manager."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        size : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","request_id",b"request_id","size",b"size"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___ResizeRegionInstanceGroupManagerRequest = ResizeRegionInstanceGroupManagerRequest

class ResizeReservationRequest(google.protobuf.message.Message):
    """A request message for Reservations.Resize. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESERVATION_FIELD_NUMBER: builtins.int
    RESERVATIONS_RESIZE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    reservation: typing.Text = ...
    """Name of the reservation to update."""

    @property
    def reservations_resize_request_resource(self) -> global___ReservationsResizeRequest:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        reservation : typing.Text = ...,
        reservations_resize_request_resource : typing.Optional[global___ReservationsResizeRequest] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","reservations_resize_request_resource",b"reservations_resize_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","reservation",b"reservation","reservations_resize_request_resource",b"reservations_resize_request_resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___ResizeReservationRequest = ResizeReservationRequest

class ResourceCommitment(google.protobuf.message.Message):
    """Commitment for a particular resource (a Commitment is composed of one or more of these)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: ResourceCommitment.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACCELERATOR: ResourceCommitment.Type.ValueType = ...  # 429815371
        LOCAL_SSD: ResourceCommitment.Type.ValueType = ...  # 508934896
        MEMORY: ResourceCommitment.Type.ValueType = ...  # 123056385
        UNSPECIFIED: ResourceCommitment.Type.ValueType = ...  # 526786327
        VCPU: ResourceCommitment.Type.ValueType = ...  # 2628978
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """Type of resource for which this commitment applies. Possible values are VCPU and MEMORY"""
        pass

    UNDEFINED_TYPE: ResourceCommitment.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACCELERATOR: ResourceCommitment.Type.ValueType = ...  # 429815371
    LOCAL_SSD: ResourceCommitment.Type.ValueType = ...  # 508934896
    MEMORY: ResourceCommitment.Type.ValueType = ...  # 123056385
    UNSPECIFIED: ResourceCommitment.Type.ValueType = ...  # 526786327
    VCPU: ResourceCommitment.Type.ValueType = ...  # 2628978

    ACCELERATOR_TYPE_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    accelerator_type: typing.Text = ...
    """Name of the accelerator type resource. Applicable only when the type is ACCELERATOR."""

    amount: builtins.int = ...
    """The amount of the resource purchased (in a type-dependent unit, such as bytes). For vCPUs, this can just be an integer. For memory, this must be provided in MB. Memory must be a multiple of 256 MB, with up to 6.5GB of memory per every vCPU."""

    type: typing.Text = ...
    """Type of resource for which this commitment applies. Possible values are VCPU and MEMORY
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        accelerator_type : typing.Optional[typing.Text] = ...,
        amount : typing.Optional[builtins.int] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_accelerator_type",b"_accelerator_type","_amount",b"_amount","_type",b"_type","accelerator_type",b"accelerator_type","amount",b"amount","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_accelerator_type",b"_accelerator_type","_amount",b"_amount","_type",b"_type","accelerator_type",b"accelerator_type","amount",b"amount","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_accelerator_type",b"_accelerator_type"]) -> typing.Optional[typing_extensions.Literal["accelerator_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_amount",b"_amount"]) -> typing.Optional[typing_extensions.Literal["amount"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___ResourceCommitment = ResourceCommitment

class ResourceGroupReference(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GROUP_FIELD_NUMBER: builtins.int
    group: typing.Text = ...
    """A URI referencing one of the instance groups or network endpoint groups listed in the backend service."""

    def __init__(self,
        *,
        group : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_group",b"_group","group",b"group"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_group",b"_group","group",b"group"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_group",b"_group"]) -> typing.Optional[typing_extensions.Literal["group"]]: ...
global___ResourceGroupReference = ResourceGroupReference

class ResourcePoliciesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_POLICIES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def resource_policies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourcePolicy]:
        """A list of resourcePolicies contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of resourcePolicies when the list is empty."""
        pass
    def __init__(self,
        *,
        resource_policies : typing.Optional[typing.Iterable[global___ResourcePolicy]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","resource_policies",b"resource_policies","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ResourcePoliciesScopedList = ResourcePoliciesScopedList

class ResourcePolicy(google.protobuf.message.Message):
    """Represents a Resource Policy resource. You can use resource policies to schedule actions for some Compute Engine resources. For example, you can use them to schedule persistent disk snapshots."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: ResourcePolicy.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CREATING: ResourcePolicy.Status.ValueType = ...  # 455564985
        """Resource policy is being created."""

        DELETING: ResourcePolicy.Status.ValueType = ...  # 528602024
        """Resource policy is being deleted."""

        EXPIRED: ResourcePolicy.Status.ValueType = ...  # 482489093
        """Resource policy is expired and will not run again."""

        INVALID: ResourcePolicy.Status.ValueType = ...  # 530283991
        READY: ResourcePolicy.Status.ValueType = ...  # 77848963
        """Resource policy is ready to be used."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of resource policy creation."""
        pass

    UNDEFINED_STATUS: ResourcePolicy.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CREATING: ResourcePolicy.Status.ValueType = ...  # 455564985
    """Resource policy is being created."""

    DELETING: ResourcePolicy.Status.ValueType = ...  # 528602024
    """Resource policy is being deleted."""

    EXPIRED: ResourcePolicy.Status.ValueType = ...  # 482489093
    """Resource policy is expired and will not run again."""

    INVALID: ResourcePolicy.Status.ValueType = ...  # 530283991
    READY: ResourcePolicy.Status.ValueType = ...  # 77848963
    """Resource policy is ready to be used."""


    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    GROUP_PLACEMENT_POLICY_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INSTANCE_SCHEDULE_POLICY_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_STATUS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SNAPSHOT_SCHEDULE_POLICY_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    @property
    def group_placement_policy(self) -> global___ResourcePolicyGroupPlacementPolicy:
        """Resource policy for instances for placement configuration."""
        pass
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def instance_schedule_policy(self) -> global___ResourcePolicyInstanceSchedulePolicy:
        """Resource policy for scheduling instance operations."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#resource_policies for resource policies."""

    name: typing.Text = ...
    """The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    region: typing.Text = ...
    @property
    def resource_status(self) -> global___ResourcePolicyResourceStatus:
        """[Output Only] The system status of the resource policy."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined fully-qualified URL for this resource."""

    @property
    def snapshot_schedule_policy(self) -> global___ResourcePolicySnapshotSchedulePolicy:
        """Resource policy for persistent disks for creating snapshots."""
        pass
    status: typing.Text = ...
    """[Output Only] The status of resource policy creation.
    Check the Status enum for the list of possible values.
    """

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        group_placement_policy : typing.Optional[global___ResourcePolicyGroupPlacementPolicy] = ...,
        id : typing.Optional[builtins.int] = ...,
        instance_schedule_policy : typing.Optional[global___ResourcePolicyInstanceSchedulePolicy] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        resource_status : typing.Optional[global___ResourcePolicyResourceStatus] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        snapshot_schedule_policy : typing.Optional[global___ResourcePolicySnapshotSchedulePolicy] = ...,
        status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_group_placement_policy",b"_group_placement_policy","_id",b"_id","_instance_schedule_policy",b"_instance_schedule_policy","_kind",b"_kind","_name",b"_name","_region",b"_region","_resource_status",b"_resource_status","_self_link",b"_self_link","_snapshot_schedule_policy",b"_snapshot_schedule_policy","_status",b"_status","creation_timestamp",b"creation_timestamp","description",b"description","group_placement_policy",b"group_placement_policy","id",b"id","instance_schedule_policy",b"instance_schedule_policy","kind",b"kind","name",b"name","region",b"region","resource_status",b"resource_status","self_link",b"self_link","snapshot_schedule_policy",b"snapshot_schedule_policy","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_group_placement_policy",b"_group_placement_policy","_id",b"_id","_instance_schedule_policy",b"_instance_schedule_policy","_kind",b"_kind","_name",b"_name","_region",b"_region","_resource_status",b"_resource_status","_self_link",b"_self_link","_snapshot_schedule_policy",b"_snapshot_schedule_policy","_status",b"_status","creation_timestamp",b"creation_timestamp","description",b"description","group_placement_policy",b"group_placement_policy","id",b"id","instance_schedule_policy",b"instance_schedule_policy","kind",b"kind","name",b"name","region",b"region","resource_status",b"resource_status","self_link",b"self_link","snapshot_schedule_policy",b"snapshot_schedule_policy","status",b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_group_placement_policy",b"_group_placement_policy"]) -> typing.Optional[typing_extensions.Literal["group_placement_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_schedule_policy",b"_instance_schedule_policy"]) -> typing.Optional[typing_extensions.Literal["instance_schedule_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_resource_status",b"_resource_status"]) -> typing.Optional[typing_extensions.Literal["resource_status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_snapshot_schedule_policy",b"_snapshot_schedule_policy"]) -> typing.Optional[typing_extensions.Literal["snapshot_schedule_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___ResourcePolicy = ResourcePolicy

class ResourcePolicyAggregatedList(google.protobuf.message.Message):
    """Contains a list of resourcePolicies."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___ResourcePoliciesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___ResourcePoliciesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    etag: typing.Text = ...
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ResourcePoliciesScopedList]:
        """A list of ResourcePolicy resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        etag : typing.Optional[typing.Text] = ...,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___ResourcePoliciesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","etag",b"etag","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","etag",b"etag","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_etag",b"_etag"]) -> typing.Optional[typing_extensions.Literal["etag"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ResourcePolicyAggregatedList = ResourcePolicyAggregatedList

class ResourcePolicyDailyCycle(google.protobuf.message.Message):
    """Time window specified for daily operations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DAYS_IN_CYCLE_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    days_in_cycle: builtins.int = ...
    """Defines a schedule with units measured in months. The value determines how many months pass between the start of each cycle."""

    duration: typing.Text = ...
    """[Output only] A predetermined duration for the window, automatically chosen to be the smallest possible in the given scenario."""

    start_time: typing.Text = ...
    """Start time of the window. This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid."""

    def __init__(self,
        *,
        days_in_cycle : typing.Optional[builtins.int] = ...,
        duration : typing.Optional[typing.Text] = ...,
        start_time : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_days_in_cycle",b"_days_in_cycle","_duration",b"_duration","_start_time",b"_start_time","days_in_cycle",b"days_in_cycle","duration",b"duration","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_days_in_cycle",b"_days_in_cycle","_duration",b"_duration","_start_time",b"_start_time","days_in_cycle",b"days_in_cycle","duration",b"duration","start_time",b"start_time"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_days_in_cycle",b"_days_in_cycle"]) -> typing.Optional[typing_extensions.Literal["days_in_cycle"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_duration",b"_duration"]) -> typing.Optional[typing_extensions.Literal["duration"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_time",b"_start_time"]) -> typing.Optional[typing_extensions.Literal["start_time"]]: ...
global___ResourcePolicyDailyCycle = ResourcePolicyDailyCycle

class ResourcePolicyGroupPlacementPolicy(google.protobuf.message.Message):
    """A GroupPlacementPolicy specifies resource placement configuration. It specifies the failure bucket separation as well as network locality"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Collocation:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CollocationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Collocation.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_COLLOCATION: ResourcePolicyGroupPlacementPolicy.Collocation.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        COLLOCATED: ResourcePolicyGroupPlacementPolicy.Collocation.ValueType = ...  # 103257554
        UNSPECIFIED_COLLOCATION: ResourcePolicyGroupPlacementPolicy.Collocation.ValueType = ...  # 464308205
    class Collocation(_Collocation, metaclass=_CollocationEnumTypeWrapper):
        """Specifies network collocation"""
        pass

    UNDEFINED_COLLOCATION: ResourcePolicyGroupPlacementPolicy.Collocation.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    COLLOCATED: ResourcePolicyGroupPlacementPolicy.Collocation.ValueType = ...  # 103257554
    UNSPECIFIED_COLLOCATION: ResourcePolicyGroupPlacementPolicy.Collocation.ValueType = ...  # 464308205

    AVAILABILITY_DOMAIN_COUNT_FIELD_NUMBER: builtins.int
    COLLOCATION_FIELD_NUMBER: builtins.int
    VM_COUNT_FIELD_NUMBER: builtins.int
    availability_domain_count: builtins.int = ...
    """The number of availability domains instances will be spread across. If two instances are in different availability domain, they will not be put in the same low latency network"""

    collocation: typing.Text = ...
    """Specifies network collocation
    Check the Collocation enum for the list of possible values.
    """

    vm_count: builtins.int = ...
    """Number of vms in this placement group"""

    def __init__(self,
        *,
        availability_domain_count : typing.Optional[builtins.int] = ...,
        collocation : typing.Optional[typing.Text] = ...,
        vm_count : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_availability_domain_count",b"_availability_domain_count","_collocation",b"_collocation","_vm_count",b"_vm_count","availability_domain_count",b"availability_domain_count","collocation",b"collocation","vm_count",b"vm_count"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_availability_domain_count",b"_availability_domain_count","_collocation",b"_collocation","_vm_count",b"_vm_count","availability_domain_count",b"availability_domain_count","collocation",b"collocation","vm_count",b"vm_count"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_availability_domain_count",b"_availability_domain_count"]) -> typing.Optional[typing_extensions.Literal["availability_domain_count"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_collocation",b"_collocation"]) -> typing.Optional[typing_extensions.Literal["collocation"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_vm_count",b"_vm_count"]) -> typing.Optional[typing_extensions.Literal["vm_count"]]: ...
global___ResourcePolicyGroupPlacementPolicy = ResourcePolicyGroupPlacementPolicy

class ResourcePolicyHourlyCycle(google.protobuf.message.Message):
    """Time window specified for hourly operations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DURATION_FIELD_NUMBER: builtins.int
    HOURS_IN_CYCLE_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    duration: typing.Text = ...
    """[Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario."""

    hours_in_cycle: builtins.int = ...
    """Defines a schedule with units measured in hours. The value determines how many hours pass between the start of each cycle."""

    start_time: typing.Text = ...
    """Time within the window to start the operations. It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT."""

    def __init__(self,
        *,
        duration : typing.Optional[typing.Text] = ...,
        hours_in_cycle : typing.Optional[builtins.int] = ...,
        start_time : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_duration",b"_duration","_hours_in_cycle",b"_hours_in_cycle","_start_time",b"_start_time","duration",b"duration","hours_in_cycle",b"hours_in_cycle","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_duration",b"_duration","_hours_in_cycle",b"_hours_in_cycle","_start_time",b"_start_time","duration",b"duration","hours_in_cycle",b"hours_in_cycle","start_time",b"start_time"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_duration",b"_duration"]) -> typing.Optional[typing_extensions.Literal["duration"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_hours_in_cycle",b"_hours_in_cycle"]) -> typing.Optional[typing_extensions.Literal["hours_in_cycle"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_time",b"_start_time"]) -> typing.Optional[typing_extensions.Literal["start_time"]]: ...
global___ResourcePolicyHourlyCycle = ResourcePolicyHourlyCycle

class ResourcePolicyInstanceSchedulePolicy(google.protobuf.message.Message):
    """An InstanceSchedulePolicy specifies when and how frequent certain operations are performed on the instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXPIRATION_TIME_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    TIME_ZONE_FIELD_NUMBER: builtins.int
    VM_START_SCHEDULE_FIELD_NUMBER: builtins.int
    VM_STOP_SCHEDULE_FIELD_NUMBER: builtins.int
    expiration_time: typing.Text = ...
    """The expiration time of the schedule. The timestamp is an RFC3339 string."""

    start_time: typing.Text = ...
    """The start time of the schedule. The timestamp is an RFC3339 string."""

    time_zone: typing.Text = ...
    """Specifies the time zone to be used in interpreting Schedule.schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database."""

    @property
    def vm_start_schedule(self) -> global___ResourcePolicyInstanceSchedulePolicySchedule:
        """Specifies the schedule for starting instances."""
        pass
    @property
    def vm_stop_schedule(self) -> global___ResourcePolicyInstanceSchedulePolicySchedule:
        """Specifies the schedule for stopping instances."""
        pass
    def __init__(self,
        *,
        expiration_time : typing.Optional[typing.Text] = ...,
        start_time : typing.Optional[typing.Text] = ...,
        time_zone : typing.Optional[typing.Text] = ...,
        vm_start_schedule : typing.Optional[global___ResourcePolicyInstanceSchedulePolicySchedule] = ...,
        vm_stop_schedule : typing.Optional[global___ResourcePolicyInstanceSchedulePolicySchedule] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_expiration_time",b"_expiration_time","_start_time",b"_start_time","_time_zone",b"_time_zone","_vm_start_schedule",b"_vm_start_schedule","_vm_stop_schedule",b"_vm_stop_schedule","expiration_time",b"expiration_time","start_time",b"start_time","time_zone",b"time_zone","vm_start_schedule",b"vm_start_schedule","vm_stop_schedule",b"vm_stop_schedule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_expiration_time",b"_expiration_time","_start_time",b"_start_time","_time_zone",b"_time_zone","_vm_start_schedule",b"_vm_start_schedule","_vm_stop_schedule",b"_vm_stop_schedule","expiration_time",b"expiration_time","start_time",b"start_time","time_zone",b"time_zone","vm_start_schedule",b"vm_start_schedule","vm_stop_schedule",b"vm_stop_schedule"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_expiration_time",b"_expiration_time"]) -> typing.Optional[typing_extensions.Literal["expiration_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_time",b"_start_time"]) -> typing.Optional[typing_extensions.Literal["start_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_time_zone",b"_time_zone"]) -> typing.Optional[typing_extensions.Literal["time_zone"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_vm_start_schedule",b"_vm_start_schedule"]) -> typing.Optional[typing_extensions.Literal["vm_start_schedule"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_vm_stop_schedule",b"_vm_stop_schedule"]) -> typing.Optional[typing_extensions.Literal["vm_stop_schedule"]]: ...
global___ResourcePolicyInstanceSchedulePolicy = ResourcePolicyInstanceSchedulePolicy

class ResourcePolicyInstanceSchedulePolicySchedule(google.protobuf.message.Message):
    """Schedule for an instance operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SCHEDULE_FIELD_NUMBER: builtins.int
    schedule: typing.Text = ...
    """Specifies the frequency for the operation, using the unix-cron format."""

    def __init__(self,
        *,
        schedule : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_schedule",b"_schedule","schedule",b"schedule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_schedule",b"_schedule","schedule",b"schedule"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_schedule",b"_schedule"]) -> typing.Optional[typing_extensions.Literal["schedule"]]: ...
global___ResourcePolicyInstanceSchedulePolicySchedule = ResourcePolicyInstanceSchedulePolicySchedule

class ResourcePolicyList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ETAG_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    etag: typing.Text = ...
    id: typing.Text = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourcePolicy]:
        """[Output Only] A list of ResourcePolicy resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource.Always compute#resourcePoliciesList for listsof resourcePolicies"""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        etag : typing.Optional[typing.Text] = ...,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___ResourcePolicy]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","etag",b"etag","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","etag",b"etag","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_etag",b"_etag"]) -> typing.Optional[typing_extensions.Literal["etag"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ResourcePolicyList = ResourcePolicyList

class ResourcePolicyResourceStatus(google.protobuf.message.Message):
    """Contains output only fields. Use this sub-message for all output fields set on ResourcePolicy. The internal structure of this "status" field should mimic the structure of ResourcePolicy proto specification."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_SCHEDULE_POLICY_FIELD_NUMBER: builtins.int
    @property
    def instance_schedule_policy(self) -> global___ResourcePolicyResourceStatusInstanceSchedulePolicyStatus:
        """[Output Only] Specifies a set of output values reffering to the instance_schedule_policy system status. This field should have the same name as corresponding policy field."""
        pass
    def __init__(self,
        *,
        instance_schedule_policy : typing.Optional[global___ResourcePolicyResourceStatusInstanceSchedulePolicyStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance_schedule_policy",b"_instance_schedule_policy","instance_schedule_policy",b"instance_schedule_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance_schedule_policy",b"_instance_schedule_policy","instance_schedule_policy",b"instance_schedule_policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_schedule_policy",b"_instance_schedule_policy"]) -> typing.Optional[typing_extensions.Literal["instance_schedule_policy"]]: ...
global___ResourcePolicyResourceStatus = ResourcePolicyResourceStatus

class ResourcePolicyResourceStatusInstanceSchedulePolicyStatus(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAST_RUN_START_TIME_FIELD_NUMBER: builtins.int
    NEXT_RUN_START_TIME_FIELD_NUMBER: builtins.int
    last_run_start_time: typing.Text = ...
    """[Output Only] The last time the schedule successfully ran. The timestamp is an RFC3339 string."""

    next_run_start_time: typing.Text = ...
    """[Output Only] The next time the schedule is planned to run. The actual time might be slightly different. The timestamp is an RFC3339 string."""

    def __init__(self,
        *,
        last_run_start_time : typing.Optional[typing.Text] = ...,
        next_run_start_time : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_last_run_start_time",b"_last_run_start_time","_next_run_start_time",b"_next_run_start_time","last_run_start_time",b"last_run_start_time","next_run_start_time",b"next_run_start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_last_run_start_time",b"_last_run_start_time","_next_run_start_time",b"_next_run_start_time","last_run_start_time",b"last_run_start_time","next_run_start_time",b"next_run_start_time"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_last_run_start_time",b"_last_run_start_time"]) -> typing.Optional[typing_extensions.Literal["last_run_start_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_run_start_time",b"_next_run_start_time"]) -> typing.Optional[typing_extensions.Literal["next_run_start_time"]]: ...
global___ResourcePolicyResourceStatusInstanceSchedulePolicyStatus = ResourcePolicyResourceStatusInstanceSchedulePolicyStatus

class ResourcePolicySnapshotSchedulePolicy(google.protobuf.message.Message):
    """A snapshot schedule policy specifies when and how frequently snapshots are to be created for the target disk. Also specifies how many and how long these scheduled snapshots should be retained."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RETENTION_POLICY_FIELD_NUMBER: builtins.int
    SCHEDULE_FIELD_NUMBER: builtins.int
    SNAPSHOT_PROPERTIES_FIELD_NUMBER: builtins.int
    @property
    def retention_policy(self) -> global___ResourcePolicySnapshotSchedulePolicyRetentionPolicy:
        """Retention policy applied to snapshots created by this resource policy."""
        pass
    @property
    def schedule(self) -> global___ResourcePolicySnapshotSchedulePolicySchedule:
        """A Vm Maintenance Policy specifies what kind of infrastructure maintenance we are allowed to perform on this VM and when. Schedule that is applied to disks covered by this policy."""
        pass
    @property
    def snapshot_properties(self) -> global___ResourcePolicySnapshotSchedulePolicySnapshotProperties:
        """Properties with which snapshots are created such as labels, encryption keys."""
        pass
    def __init__(self,
        *,
        retention_policy : typing.Optional[global___ResourcePolicySnapshotSchedulePolicyRetentionPolicy] = ...,
        schedule : typing.Optional[global___ResourcePolicySnapshotSchedulePolicySchedule] = ...,
        snapshot_properties : typing.Optional[global___ResourcePolicySnapshotSchedulePolicySnapshotProperties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_retention_policy",b"_retention_policy","_schedule",b"_schedule","_snapshot_properties",b"_snapshot_properties","retention_policy",b"retention_policy","schedule",b"schedule","snapshot_properties",b"snapshot_properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_retention_policy",b"_retention_policy","_schedule",b"_schedule","_snapshot_properties",b"_snapshot_properties","retention_policy",b"retention_policy","schedule",b"schedule","snapshot_properties",b"snapshot_properties"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_retention_policy",b"_retention_policy"]) -> typing.Optional[typing_extensions.Literal["retention_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_schedule",b"_schedule"]) -> typing.Optional[typing_extensions.Literal["schedule"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_snapshot_properties",b"_snapshot_properties"]) -> typing.Optional[typing_extensions.Literal["snapshot_properties"]]: ...
global___ResourcePolicySnapshotSchedulePolicy = ResourcePolicySnapshotSchedulePolicy

class ResourcePolicySnapshotSchedulePolicyRetentionPolicy(google.protobuf.message.Message):
    """Policy for retention of scheduled snapshots."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _OnSourceDiskDelete:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _OnSourceDiskDeleteEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OnSourceDiskDelete.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ON_SOURCE_DISK_DELETE: ResourcePolicySnapshotSchedulePolicyRetentionPolicy.OnSourceDiskDelete.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        APPLY_RETENTION_POLICY: ResourcePolicySnapshotSchedulePolicyRetentionPolicy.OnSourceDiskDelete.ValueType = ...  # 535071332
        KEEP_AUTO_SNAPSHOTS: ResourcePolicySnapshotSchedulePolicyRetentionPolicy.OnSourceDiskDelete.ValueType = ...  # 258925689
        UNSPECIFIED_ON_SOURCE_DISK_DELETE: ResourcePolicySnapshotSchedulePolicyRetentionPolicy.OnSourceDiskDelete.ValueType = ...  # 239140769
    class OnSourceDiskDelete(_OnSourceDiskDelete, metaclass=_OnSourceDiskDeleteEnumTypeWrapper):
        """Specifies the behavior to apply to scheduled snapshots when the source disk is deleted."""
        pass

    UNDEFINED_ON_SOURCE_DISK_DELETE: ResourcePolicySnapshotSchedulePolicyRetentionPolicy.OnSourceDiskDelete.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    APPLY_RETENTION_POLICY: ResourcePolicySnapshotSchedulePolicyRetentionPolicy.OnSourceDiskDelete.ValueType = ...  # 535071332
    KEEP_AUTO_SNAPSHOTS: ResourcePolicySnapshotSchedulePolicyRetentionPolicy.OnSourceDiskDelete.ValueType = ...  # 258925689
    UNSPECIFIED_ON_SOURCE_DISK_DELETE: ResourcePolicySnapshotSchedulePolicyRetentionPolicy.OnSourceDiskDelete.ValueType = ...  # 239140769

    MAX_RETENTION_DAYS_FIELD_NUMBER: builtins.int
    ON_SOURCE_DISK_DELETE_FIELD_NUMBER: builtins.int
    max_retention_days: builtins.int = ...
    """Maximum age of the snapshot that is allowed to be kept."""

    on_source_disk_delete: typing.Text = ...
    """Specifies the behavior to apply to scheduled snapshots when the source disk is deleted.
    Check the OnSourceDiskDelete enum for the list of possible values.
    """

    def __init__(self,
        *,
        max_retention_days : typing.Optional[builtins.int] = ...,
        on_source_disk_delete : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_max_retention_days",b"_max_retention_days","_on_source_disk_delete",b"_on_source_disk_delete","max_retention_days",b"max_retention_days","on_source_disk_delete",b"on_source_disk_delete"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_max_retention_days",b"_max_retention_days","_on_source_disk_delete",b"_on_source_disk_delete","max_retention_days",b"max_retention_days","on_source_disk_delete",b"on_source_disk_delete"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_max_retention_days",b"_max_retention_days"]) -> typing.Optional[typing_extensions.Literal["max_retention_days"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_on_source_disk_delete",b"_on_source_disk_delete"]) -> typing.Optional[typing_extensions.Literal["on_source_disk_delete"]]: ...
global___ResourcePolicySnapshotSchedulePolicyRetentionPolicy = ResourcePolicySnapshotSchedulePolicyRetentionPolicy

class ResourcePolicySnapshotSchedulePolicySchedule(google.protobuf.message.Message):
    """A schedule for disks where the schedueled operations are performed."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DAILY_SCHEDULE_FIELD_NUMBER: builtins.int
    HOURLY_SCHEDULE_FIELD_NUMBER: builtins.int
    WEEKLY_SCHEDULE_FIELD_NUMBER: builtins.int
    @property
    def daily_schedule(self) -> global___ResourcePolicyDailyCycle: ...
    @property
    def hourly_schedule(self) -> global___ResourcePolicyHourlyCycle: ...
    @property
    def weekly_schedule(self) -> global___ResourcePolicyWeeklyCycle: ...
    def __init__(self,
        *,
        daily_schedule : typing.Optional[global___ResourcePolicyDailyCycle] = ...,
        hourly_schedule : typing.Optional[global___ResourcePolicyHourlyCycle] = ...,
        weekly_schedule : typing.Optional[global___ResourcePolicyWeeklyCycle] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_daily_schedule",b"_daily_schedule","_hourly_schedule",b"_hourly_schedule","_weekly_schedule",b"_weekly_schedule","daily_schedule",b"daily_schedule","hourly_schedule",b"hourly_schedule","weekly_schedule",b"weekly_schedule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_daily_schedule",b"_daily_schedule","_hourly_schedule",b"_hourly_schedule","_weekly_schedule",b"_weekly_schedule","daily_schedule",b"daily_schedule","hourly_schedule",b"hourly_schedule","weekly_schedule",b"weekly_schedule"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_daily_schedule",b"_daily_schedule"]) -> typing.Optional[typing_extensions.Literal["daily_schedule"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_hourly_schedule",b"_hourly_schedule"]) -> typing.Optional[typing_extensions.Literal["hourly_schedule"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_weekly_schedule",b"_weekly_schedule"]) -> typing.Optional[typing_extensions.Literal["weekly_schedule"]]: ...
global___ResourcePolicySnapshotSchedulePolicySchedule = ResourcePolicySnapshotSchedulePolicySchedule

class ResourcePolicySnapshotSchedulePolicySnapshotProperties(google.protobuf.message.Message):
    """Specified snapshot properties for scheduled snapshots created by this policy."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CHAIN_NAME_FIELD_NUMBER: builtins.int
    GUEST_FLUSH_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    STORAGE_LOCATIONS_FIELD_NUMBER: builtins.int
    chain_name: typing.Text = ...
    """Chain name that the snapshot is created in."""

    guest_flush: builtins.bool = ...
    """Indication to perform a 'guest aware' snapshot."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels to apply to scheduled snapshots. These can be later modified by the setLabels method. Label values may be empty."""
        pass
    @property
    def storage_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Cloud Storage bucket storage location of the auto snapshot (regional or multi-regional)."""
        pass
    def __init__(self,
        *,
        chain_name : typing.Optional[typing.Text] = ...,
        guest_flush : typing.Optional[builtins.bool] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        storage_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_chain_name",b"_chain_name","_guest_flush",b"_guest_flush","chain_name",b"chain_name","guest_flush",b"guest_flush"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_chain_name",b"_chain_name","_guest_flush",b"_guest_flush","chain_name",b"chain_name","guest_flush",b"guest_flush","labels",b"labels","storage_locations",b"storage_locations"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_chain_name",b"_chain_name"]) -> typing.Optional[typing_extensions.Literal["chain_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_guest_flush",b"_guest_flush"]) -> typing.Optional[typing_extensions.Literal["guest_flush"]]: ...
global___ResourcePolicySnapshotSchedulePolicySnapshotProperties = ResourcePolicySnapshotSchedulePolicySnapshotProperties

class ResourcePolicyWeeklyCycle(google.protobuf.message.Message):
    """Time window specified for weekly operations."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DAY_OF_WEEKS_FIELD_NUMBER: builtins.int
    @property
    def day_of_weeks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourcePolicyWeeklyCycleDayOfWeek]:
        """Up to 7 intervals/windows, one for each day of the week."""
        pass
    def __init__(self,
        *,
        day_of_weeks : typing.Optional[typing.Iterable[global___ResourcePolicyWeeklyCycleDayOfWeek]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["day_of_weeks",b"day_of_weeks"]) -> None: ...
global___ResourcePolicyWeeklyCycle = ResourcePolicyWeeklyCycle

class ResourcePolicyWeeklyCycleDayOfWeek(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Day:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DayEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Day.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_DAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        FRIDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 471398751
        INVALID: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 530283991
        MONDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 132310288
        SATURDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 279037881
        SUNDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 309626320
        THURSDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 207198682
        TUESDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 277509677
        WEDNESDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 422029110
    class Day(_Day, metaclass=_DayEnumTypeWrapper):
        """Defines a schedule that runs on specific days of the week. Specify one or more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY."""
        pass

    UNDEFINED_DAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    FRIDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 471398751
    INVALID: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 530283991
    MONDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 132310288
    SATURDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 279037881
    SUNDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 309626320
    THURSDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 207198682
    TUESDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 277509677
    WEDNESDAY: ResourcePolicyWeeklyCycleDayOfWeek.Day.ValueType = ...  # 422029110

    DAY_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    day: typing.Text = ...
    """Defines a schedule that runs on specific days of the week. Specify one or more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
    Check the Day enum for the list of possible values.
    """

    duration: typing.Text = ...
    """[Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario."""

    start_time: typing.Text = ...
    """Time within the window to start the operations. It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT."""

    def __init__(self,
        *,
        day : typing.Optional[typing.Text] = ...,
        duration : typing.Optional[typing.Text] = ...,
        start_time : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_day",b"_day","_duration",b"_duration","_start_time",b"_start_time","day",b"day","duration",b"duration","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_day",b"_day","_duration",b"_duration","_start_time",b"_start_time","day",b"day","duration",b"duration","start_time",b"start_time"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_day",b"_day"]) -> typing.Optional[typing_extensions.Literal["day"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_duration",b"_duration"]) -> typing.Optional[typing_extensions.Literal["duration"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_time",b"_start_time"]) -> typing.Optional[typing_extensions.Literal["start_time"]]: ...
global___ResourcePolicyWeeklyCycleDayOfWeek = ResourcePolicyWeeklyCycleDayOfWeek

class Route(google.protobuf.message.Message):
    """Represents a Route resource. A route defines a path from VM instances in the VPC network to a specific destination. This destination can be inside or outside the VPC network. For more information, read the Routes overview."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RouteType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RouteTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RouteType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ROUTE_TYPE: Route.RouteType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        BGP: Route.RouteType.ValueType = ...  # 65707
        STATIC: Route.RouteType.ValueType = ...  # 308331118
        SUBNET: Route.RouteType.ValueType = ...  # 309278557
        TRANSIT: Route.RouteType.ValueType = ...  # 187793843
    class RouteType(_RouteType, metaclass=_RouteTypeEnumTypeWrapper):
        """[Output Only] The type of this route, which can be one of the following values: - 'TRANSIT' for a transit route that this router learned from another Cloud Router and will readvertise to one of its BGP peers - 'SUBNET' for a route from a subnet of the VPC - 'BGP' for a route learned from a BGP peer of this router - 'STATIC' for a static route"""
        pass

    UNDEFINED_ROUTE_TYPE: Route.RouteType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    BGP: Route.RouteType.ValueType = ...  # 65707
    STATIC: Route.RouteType.ValueType = ...  # 308331118
    SUBNET: Route.RouteType.ValueType = ...  # 309278557
    TRANSIT: Route.RouteType.ValueType = ...  # 187793843

    AS_PATHS_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DEST_RANGE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    NEXT_HOP_GATEWAY_FIELD_NUMBER: builtins.int
    NEXT_HOP_ILB_FIELD_NUMBER: builtins.int
    NEXT_HOP_INSTANCE_FIELD_NUMBER: builtins.int
    NEXT_HOP_IP_FIELD_NUMBER: builtins.int
    NEXT_HOP_NETWORK_FIELD_NUMBER: builtins.int
    NEXT_HOP_PEERING_FIELD_NUMBER: builtins.int
    NEXT_HOP_VPN_TUNNEL_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    ROUTE_TYPE_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    WARNINGS_FIELD_NUMBER: builtins.int
    @property
    def as_paths(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouteAsPath]:
        """[Output Only] AS path."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this field when you create the resource."""

    dest_range: typing.Text = ...
    """The destination range of outgoing packets that this route applies to. Both IPv4 and IPv6 are supported."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of this resource. Always compute#routes for Route resources."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit."""

    network: typing.Text = ...
    """Fully-qualified URL of the network that this route applies to."""

    next_hop_gateway: typing.Text = ...
    """The URL to a gateway that should handle matching packets. You can only specify the internet gateway using a full or partial valid URL: projects/ project/global/gateways/default-internet-gateway"""

    next_hop_ilb: typing.Text = ...
    """The URL to a forwarding rule of type loadBalancingScheme=INTERNAL that should handle matching packets or the IP address of the forwarding Rule. For example, the following are all valid URLs: - 10.128.0.56 - https://www.googleapis.com/compute/v1/projects/project/regions/region /forwardingRules/forwardingRule - regions/region/forwardingRules/forwardingRule"""

    next_hop_instance: typing.Text = ...
    """The URL to an instance that should handle matching packets. You can specify this as a full or partial URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/"""

    next_hop_ip: typing.Text = ...
    """The network IP address of an instance that should handle matching packets. Only IPv4 is supported."""

    next_hop_network: typing.Text = ...
    """The URL of the local network if it should handle matching packets."""

    next_hop_peering: typing.Text = ...
    """[Output Only] The network peering name that should handle matching packets, which should conform to RFC1035."""

    next_hop_vpn_tunnel: typing.Text = ...
    """The URL to a VpnTunnel that should handle matching packets."""

    priority: builtins.int = ...
    """The priority of this route. Priority is used to break ties in cases where there is more than one matching route of equal prefix length. In cases where multiple routes have equal prefix length, the one with the lowest-numbered priority value wins. The default value is `1000`. The priority value must be from `0` to `65535`, inclusive."""

    route_type: typing.Text = ...
    """[Output Only] The type of this route, which can be one of the following values: - 'TRANSIT' for a transit route that this router learned from another Cloud Router and will readvertise to one of its BGP peers - 'SUBNET' for a route from a subnet of the VPC - 'BGP' for a route learned from a BGP peer of this router - 'STATIC' for a static route
    Check the RouteType enum for the list of possible values.
    """

    self_link: typing.Text = ...
    """[Output Only] Server-defined fully-qualified URL for this resource."""

    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of instance tags to which this route applies."""
        pass
    @property
    def warnings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Warnings]:
        """[Output Only] If potential misconfigurations are detected for this route, this field will be populated with warning messages."""
        pass
    def __init__(self,
        *,
        as_paths : typing.Optional[typing.Iterable[global___RouteAsPath]] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        dest_range : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        next_hop_gateway : typing.Optional[typing.Text] = ...,
        next_hop_ilb : typing.Optional[typing.Text] = ...,
        next_hop_instance : typing.Optional[typing.Text] = ...,
        next_hop_ip : typing.Optional[typing.Text] = ...,
        next_hop_network : typing.Optional[typing.Text] = ...,
        next_hop_peering : typing.Optional[typing.Text] = ...,
        next_hop_vpn_tunnel : typing.Optional[typing.Text] = ...,
        priority : typing.Optional[builtins.int] = ...,
        route_type : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        tags : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warnings : typing.Optional[typing.Iterable[global___Warnings]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_dest_range",b"_dest_range","_id",b"_id","_kind",b"_kind","_name",b"_name","_network",b"_network","_next_hop_gateway",b"_next_hop_gateway","_next_hop_ilb",b"_next_hop_ilb","_next_hop_instance",b"_next_hop_instance","_next_hop_ip",b"_next_hop_ip","_next_hop_network",b"_next_hop_network","_next_hop_peering",b"_next_hop_peering","_next_hop_vpn_tunnel",b"_next_hop_vpn_tunnel","_priority",b"_priority","_route_type",b"_route_type","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","dest_range",b"dest_range","id",b"id","kind",b"kind","name",b"name","network",b"network","next_hop_gateway",b"next_hop_gateway","next_hop_ilb",b"next_hop_ilb","next_hop_instance",b"next_hop_instance","next_hop_ip",b"next_hop_ip","next_hop_network",b"next_hop_network","next_hop_peering",b"next_hop_peering","next_hop_vpn_tunnel",b"next_hop_vpn_tunnel","priority",b"priority","route_type",b"route_type","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_dest_range",b"_dest_range","_id",b"_id","_kind",b"_kind","_name",b"_name","_network",b"_network","_next_hop_gateway",b"_next_hop_gateway","_next_hop_ilb",b"_next_hop_ilb","_next_hop_instance",b"_next_hop_instance","_next_hop_ip",b"_next_hop_ip","_next_hop_network",b"_next_hop_network","_next_hop_peering",b"_next_hop_peering","_next_hop_vpn_tunnel",b"_next_hop_vpn_tunnel","_priority",b"_priority","_route_type",b"_route_type","_self_link",b"_self_link","as_paths",b"as_paths","creation_timestamp",b"creation_timestamp","description",b"description","dest_range",b"dest_range","id",b"id","kind",b"kind","name",b"name","network",b"network","next_hop_gateway",b"next_hop_gateway","next_hop_ilb",b"next_hop_ilb","next_hop_instance",b"next_hop_instance","next_hop_ip",b"next_hop_ip","next_hop_network",b"next_hop_network","next_hop_peering",b"next_hop_peering","next_hop_vpn_tunnel",b"next_hop_vpn_tunnel","priority",b"priority","route_type",b"route_type","self_link",b"self_link","tags",b"tags","warnings",b"warnings"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_dest_range",b"_dest_range"]) -> typing.Optional[typing_extensions.Literal["dest_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_hop_gateway",b"_next_hop_gateway"]) -> typing.Optional[typing_extensions.Literal["next_hop_gateway"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_hop_ilb",b"_next_hop_ilb"]) -> typing.Optional[typing_extensions.Literal["next_hop_ilb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_hop_instance",b"_next_hop_instance"]) -> typing.Optional[typing_extensions.Literal["next_hop_instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_hop_ip",b"_next_hop_ip"]) -> typing.Optional[typing_extensions.Literal["next_hop_ip"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_hop_network",b"_next_hop_network"]) -> typing.Optional[typing_extensions.Literal["next_hop_network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_hop_peering",b"_next_hop_peering"]) -> typing.Optional[typing_extensions.Literal["next_hop_peering"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_hop_vpn_tunnel",b"_next_hop_vpn_tunnel"]) -> typing.Optional[typing_extensions.Literal["next_hop_vpn_tunnel"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_route_type",b"_route_type"]) -> typing.Optional[typing_extensions.Literal["route_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___Route = Route

class RouteAsPath(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PathSegmentType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PathSegmentTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PathSegmentType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PATH_SEGMENT_TYPE: RouteAsPath.PathSegmentType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        AS_CONFED_SEQUENCE: RouteAsPath.PathSegmentType.ValueType = ...  # 222152624
        AS_CONFED_SET: RouteAsPath.PathSegmentType.ValueType = ...  # 374040307
        AS_SEQUENCE: RouteAsPath.PathSegmentType.ValueType = ...  # 106735918
        AS_SET: RouteAsPath.PathSegmentType.ValueType = ...  # 329846453
    class PathSegmentType(_PathSegmentType, metaclass=_PathSegmentTypeEnumTypeWrapper):
        """[Output Only] The type of the AS Path, which can be one of the following values: - 'AS_SET': unordered set of autonomous systems that the route in has traversed - 'AS_SEQUENCE': ordered set of autonomous systems that the route has traversed - 'AS_CONFED_SEQUENCE': ordered set of Member Autonomous Systems in the local confederation that the route has traversed - 'AS_CONFED_SET': unordered set of Member Autonomous Systems in the local confederation that the route has traversed"""
        pass

    UNDEFINED_PATH_SEGMENT_TYPE: RouteAsPath.PathSegmentType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    AS_CONFED_SEQUENCE: RouteAsPath.PathSegmentType.ValueType = ...  # 222152624
    AS_CONFED_SET: RouteAsPath.PathSegmentType.ValueType = ...  # 374040307
    AS_SEQUENCE: RouteAsPath.PathSegmentType.ValueType = ...  # 106735918
    AS_SET: RouteAsPath.PathSegmentType.ValueType = ...  # 329846453

    AS_LISTS_FIELD_NUMBER: builtins.int
    PATH_SEGMENT_TYPE_FIELD_NUMBER: builtins.int
    @property
    def as_lists(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """[Output Only] The AS numbers of the AS Path."""
        pass
    path_segment_type: typing.Text = ...
    """[Output Only] The type of the AS Path, which can be one of the following values: - 'AS_SET': unordered set of autonomous systems that the route in has traversed - 'AS_SEQUENCE': ordered set of autonomous systems that the route has traversed - 'AS_CONFED_SEQUENCE': ordered set of Member Autonomous Systems in the local confederation that the route has traversed - 'AS_CONFED_SET': unordered set of Member Autonomous Systems in the local confederation that the route has traversed
    Check the PathSegmentType enum for the list of possible values.
    """

    def __init__(self,
        *,
        as_lists : typing.Optional[typing.Iterable[builtins.int]] = ...,
        path_segment_type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_path_segment_type",b"_path_segment_type","path_segment_type",b"path_segment_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_path_segment_type",b"_path_segment_type","as_lists",b"as_lists","path_segment_type",b"path_segment_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path_segment_type",b"_path_segment_type"]) -> typing.Optional[typing_extensions.Literal["path_segment_type"]]: ...
global___RouteAsPath = RouteAsPath

class RouteList(google.protobuf.message.Message):
    """Contains a list of Route resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Route]:
        """A list of Route resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Route]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RouteList = RouteList

class Router(google.protobuf.message.Message):
    """Represents a Cloud Router resource. For more information about Cloud Router, read the Cloud Router overview."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BGP_FIELD_NUMBER: builtins.int
    BGP_PEERS_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ENCRYPTED_INTERCONNECT_ROUTER_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INTERFACES_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NATS_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    @property
    def bgp(self) -> global___RouterBgp:
        """BGP information specific to this router."""
        pass
    @property
    def bgp_peers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterBgpPeer]:
        """BGP information that must be configured into the routing stack to establish BGP peering. This information must specify the peer ASN and either the interface name, IP address, or peer IP address. Please refer to RFC4273."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    encrypted_interconnect_router: builtins.bool = ...
    """Indicates if a router is dedicated for use with encrypted VLAN attachments (interconnectAttachments). Not currently available publicly."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def interfaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterInterface]:
        """Router interfaces. Each interface requires either one linked resource, (for example, linkedVpnTunnel), or IP address and IP address range (for example, ipRange), or both."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#router for routers."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def nats(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterNat]:
        """A list of NAT services created in this router."""
        pass
    network: typing.Text = ...
    """URI of the network to which this router belongs."""

    region: typing.Text = ...
    """[Output Only] URI of the region where the router resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    def __init__(self,
        *,
        bgp : typing.Optional[global___RouterBgp] = ...,
        bgp_peers : typing.Optional[typing.Iterable[global___RouterBgpPeer]] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        encrypted_interconnect_router : typing.Optional[builtins.bool] = ...,
        id : typing.Optional[builtins.int] = ...,
        interfaces : typing.Optional[typing.Iterable[global___RouterInterface]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        nats : typing.Optional[typing.Iterable[global___RouterNat]] = ...,
        network : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_bgp",b"_bgp","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_encrypted_interconnect_router",b"_encrypted_interconnect_router","_id",b"_id","_kind",b"_kind","_name",b"_name","_network",b"_network","_region",b"_region","_self_link",b"_self_link","bgp",b"bgp","creation_timestamp",b"creation_timestamp","description",b"description","encrypted_interconnect_router",b"encrypted_interconnect_router","id",b"id","kind",b"kind","name",b"name","network",b"network","region",b"region","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_bgp",b"_bgp","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_encrypted_interconnect_router",b"_encrypted_interconnect_router","_id",b"_id","_kind",b"_kind","_name",b"_name","_network",b"_network","_region",b"_region","_self_link",b"_self_link","bgp",b"bgp","bgp_peers",b"bgp_peers","creation_timestamp",b"creation_timestamp","description",b"description","encrypted_interconnect_router",b"encrypted_interconnect_router","id",b"id","interfaces",b"interfaces","kind",b"kind","name",b"name","nats",b"nats","network",b"network","region",b"region","self_link",b"self_link"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_bgp",b"_bgp"]) -> typing.Optional[typing_extensions.Literal["bgp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_encrypted_interconnect_router",b"_encrypted_interconnect_router"]) -> typing.Optional[typing_extensions.Literal["encrypted_interconnect_router"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___Router = Router

class RouterAdvertisedIpRange(google.protobuf.message.Message):
    """Description-tagged IP ranges for the router to advertise."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESCRIPTION_FIELD_NUMBER: builtins.int
    RANGE_FIELD_NUMBER: builtins.int
    description: typing.Text = ...
    """User-specified description for the IP range."""

    range: typing.Text = ...
    """The IP range to advertise. The value must be a CIDR-formatted string."""

    def __init__(self,
        *,
        description : typing.Optional[typing.Text] = ...,
        range : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_range",b"_range","description",b"description","range",b"range"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_range",b"_range","description",b"description","range",b"range"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_range",b"_range"]) -> typing.Optional[typing_extensions.Literal["range"]]: ...
global___RouterAdvertisedIpRange = RouterAdvertisedIpRange

class RouterAggregatedList(google.protobuf.message.Message):
    """Contains a list of routers."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___RoutersScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___RoutersScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___RoutersScopedList]:
        """A list of Router resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___RoutersScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RouterAggregatedList = RouterAggregatedList

class RouterBgp(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AdvertiseMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AdvertiseModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AdvertiseMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ADVERTISE_MODE: RouterBgp.AdvertiseMode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CUSTOM: RouterBgp.AdvertiseMode.ValueType = ...  # 388595569
        DEFAULT: RouterBgp.AdvertiseMode.ValueType = ...  # 115302945
    class AdvertiseMode(_AdvertiseMode, metaclass=_AdvertiseModeEnumTypeWrapper):
        """User-specified flag to indicate which mode to use for advertisement. The options are DEFAULT or CUSTOM."""
        pass

    UNDEFINED_ADVERTISE_MODE: RouterBgp.AdvertiseMode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CUSTOM: RouterBgp.AdvertiseMode.ValueType = ...  # 388595569
    DEFAULT: RouterBgp.AdvertiseMode.ValueType = ...  # 115302945

    class _AdvertisedGroups:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AdvertisedGroupsEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AdvertisedGroups.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ADVERTISED_GROUPS: RouterBgp.AdvertisedGroups.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALL_SUBNETS: RouterBgp.AdvertisedGroups.ValueType = ...  # 3622872
        """Advertise all available subnets (including peer VPC subnets)."""

    class AdvertisedGroups(_AdvertisedGroups, metaclass=_AdvertisedGroupsEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_ADVERTISED_GROUPS: RouterBgp.AdvertisedGroups.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALL_SUBNETS: RouterBgp.AdvertisedGroups.ValueType = ...  # 3622872
    """Advertise all available subnets (including peer VPC subnets)."""


    ADVERTISE_MODE_FIELD_NUMBER: builtins.int
    ADVERTISED_GROUPS_FIELD_NUMBER: builtins.int
    ADVERTISED_IP_RANGES_FIELD_NUMBER: builtins.int
    ASN_FIELD_NUMBER: builtins.int
    KEEPALIVE_INTERVAL_FIELD_NUMBER: builtins.int
    advertise_mode: typing.Text = ...
    """User-specified flag to indicate which mode to use for advertisement. The options are DEFAULT or CUSTOM.
    Check the AdvertiseMode enum for the list of possible values.
    """

    @property
    def advertised_groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """User-specified list of prefix groups to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and is advertised to all peers of the router. These groups will be advertised in addition to any specified prefixes. Leave this field blank to advertise no custom groups.
        Check the AdvertisedGroups enum for the list of possible values.
        """
        pass
    @property
    def advertised_ip_ranges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterAdvertisedIpRange]:
        """User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and is advertised to all peers of the router. These IP ranges will be advertised in addition to any specified groups. Leave this field blank to advertise no custom IP ranges."""
        pass
    asn: builtins.int = ...
    """Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN, either 16-bit or 32-bit. The value will be fixed for this router resource. All VPN tunnels that link to this router will have the same local ASN."""

    keepalive_interval: builtins.int = ...
    """The interval in seconds between BGP keepalive messages that are sent to the peer. Hold time is three times the interval at which keepalive messages are sent, and the hold time is the maximum number of seconds allowed to elapse between successive keepalive messages that BGP receives from a peer. BGP will use the smaller of either the local hold time value or the peer's hold time value as the hold time for the BGP connection between the two peers. If set, this value must be between 20 and 60. The default is 20."""

    def __init__(self,
        *,
        advertise_mode : typing.Optional[typing.Text] = ...,
        advertised_groups : typing.Optional[typing.Iterable[typing.Text]] = ...,
        advertised_ip_ranges : typing.Optional[typing.Iterable[global___RouterAdvertisedIpRange]] = ...,
        asn : typing.Optional[builtins.int] = ...,
        keepalive_interval : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_advertise_mode",b"_advertise_mode","_asn",b"_asn","_keepalive_interval",b"_keepalive_interval","advertise_mode",b"advertise_mode","asn",b"asn","keepalive_interval",b"keepalive_interval"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_advertise_mode",b"_advertise_mode","_asn",b"_asn","_keepalive_interval",b"_keepalive_interval","advertise_mode",b"advertise_mode","advertised_groups",b"advertised_groups","advertised_ip_ranges",b"advertised_ip_ranges","asn",b"asn","keepalive_interval",b"keepalive_interval"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_advertise_mode",b"_advertise_mode"]) -> typing.Optional[typing_extensions.Literal["advertise_mode"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_asn",b"_asn"]) -> typing.Optional[typing_extensions.Literal["asn"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_keepalive_interval",b"_keepalive_interval"]) -> typing.Optional[typing_extensions.Literal["keepalive_interval"]]: ...
global___RouterBgp = RouterBgp

class RouterBgpPeer(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AdvertiseMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AdvertiseModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AdvertiseMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ADVERTISE_MODE: RouterBgpPeer.AdvertiseMode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CUSTOM: RouterBgpPeer.AdvertiseMode.ValueType = ...  # 388595569
        DEFAULT: RouterBgpPeer.AdvertiseMode.ValueType = ...  # 115302945
    class AdvertiseMode(_AdvertiseMode, metaclass=_AdvertiseModeEnumTypeWrapper):
        """User-specified flag to indicate which mode to use for advertisement."""
        pass

    UNDEFINED_ADVERTISE_MODE: RouterBgpPeer.AdvertiseMode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CUSTOM: RouterBgpPeer.AdvertiseMode.ValueType = ...  # 388595569
    DEFAULT: RouterBgpPeer.AdvertiseMode.ValueType = ...  # 115302945

    class _AdvertisedGroups:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AdvertisedGroupsEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AdvertisedGroups.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ADVERTISED_GROUPS: RouterBgpPeer.AdvertisedGroups.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALL_SUBNETS: RouterBgpPeer.AdvertisedGroups.ValueType = ...  # 3622872
        """Advertise all available subnets (including peer VPC subnets)."""

    class AdvertisedGroups(_AdvertisedGroups, metaclass=_AdvertisedGroupsEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_ADVERTISED_GROUPS: RouterBgpPeer.AdvertisedGroups.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALL_SUBNETS: RouterBgpPeer.AdvertisedGroups.ValueType = ...  # 3622872
    """Advertise all available subnets (including peer VPC subnets)."""


    class _Enable:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _EnableEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Enable.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ENABLE: RouterBgpPeer.Enable.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        FALSE: RouterBgpPeer.Enable.ValueType = ...  # 66658563
        TRUE: RouterBgpPeer.Enable.ValueType = ...  # 2583950
    class Enable(_Enable, metaclass=_EnableEnumTypeWrapper):
        """The status of the BGP peer connection. If set to FALSE, any active session with the peer is terminated and all associated routing information is removed. If set to TRUE, the peer connection can be established with routing information. The default is TRUE."""
        pass

    UNDEFINED_ENABLE: RouterBgpPeer.Enable.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    FALSE: RouterBgpPeer.Enable.ValueType = ...  # 66658563
    TRUE: RouterBgpPeer.Enable.ValueType = ...  # 2583950

    class _ManagementType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ManagementTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ManagementType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_MANAGEMENT_TYPE: RouterBgpPeer.ManagementType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        MANAGED_BY_ATTACHMENT: RouterBgpPeer.ManagementType.ValueType = ...  # 458926411
        """The BGP peer is automatically created for PARTNER type InterconnectAttachment; Google will automatically create/delete this BGP peer when the PARTNER InterconnectAttachment is created/deleted, and Google will update the ipAddress and peerIpAddress when the PARTNER InterconnectAttachment is provisioned. This type of BGP peer cannot be created or deleted, but can be modified for all fields except for name, ipAddress and peerIpAddress."""

        MANAGED_BY_USER: RouterBgpPeer.ManagementType.ValueType = ...  # 317294067
        """Default value, the BGP peer is manually created and managed by user."""

    class ManagementType(_ManagementType, metaclass=_ManagementTypeEnumTypeWrapper):
        """[Output Only] The resource that configures and manages this BGP peer. - MANAGED_BY_USER is the default value and can be managed by you or other users - MANAGED_BY_ATTACHMENT is a BGP peer that is configured and managed by Cloud Interconnect, specifically by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of BGP peer when the PARTNER InterconnectAttachment is created, updated, or deleted."""
        pass

    UNDEFINED_MANAGEMENT_TYPE: RouterBgpPeer.ManagementType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    MANAGED_BY_ATTACHMENT: RouterBgpPeer.ManagementType.ValueType = ...  # 458926411
    """The BGP peer is automatically created for PARTNER type InterconnectAttachment; Google will automatically create/delete this BGP peer when the PARTNER InterconnectAttachment is created/deleted, and Google will update the ipAddress and peerIpAddress when the PARTNER InterconnectAttachment is provisioned. This type of BGP peer cannot be created or deleted, but can be modified for all fields except for name, ipAddress and peerIpAddress."""

    MANAGED_BY_USER: RouterBgpPeer.ManagementType.ValueType = ...  # 317294067
    """Default value, the BGP peer is manually created and managed by user."""


    ADVERTISE_MODE_FIELD_NUMBER: builtins.int
    ADVERTISED_GROUPS_FIELD_NUMBER: builtins.int
    ADVERTISED_IP_RANGES_FIELD_NUMBER: builtins.int
    ADVERTISED_ROUTE_PRIORITY_FIELD_NUMBER: builtins.int
    BFD_FIELD_NUMBER: builtins.int
    ENABLE_FIELD_NUMBER: builtins.int
    INTERFACE_NAME_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    MANAGEMENT_TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PEER_ASN_FIELD_NUMBER: builtins.int
    PEER_IP_ADDRESS_FIELD_NUMBER: builtins.int
    ROUTER_APPLIANCE_INSTANCE_FIELD_NUMBER: builtins.int
    advertise_mode: typing.Text = ...
    """User-specified flag to indicate which mode to use for advertisement.
    Check the AdvertiseMode enum for the list of possible values.
    """

    @property
    def advertised_groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """User-specified list of prefix groups to advertise in custom mode, which can take one of the following options: - ALL_SUBNETS: Advertises all available subnets, including peer VPC subnets. - ALL_VPC_SUBNETS: Advertises the router's own VPC subnets. Note that this field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the "bgp" message). These groups are advertised in addition to any specified prefixes. Leave this field blank to advertise no custom groups.
        Check the AdvertisedGroups enum for the list of possible values.
        """
        pass
    @property
    def advertised_ip_ranges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterAdvertisedIpRange]:
        """User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the "bgp" message). These IP ranges are advertised in addition to any specified groups. Leave this field blank to advertise no custom IP ranges."""
        pass
    advertised_route_priority: builtins.int = ...
    """The priority of routes advertised to this BGP peer. Where there is more than one matching route of maximum length, the routes with the lowest priority value win."""

    @property
    def bfd(self) -> global___RouterBgpPeerBfd:
        """BFD configuration for the BGP peering."""
        pass
    enable: typing.Text = ...
    """The status of the BGP peer connection. If set to FALSE, any active session with the peer is terminated and all associated routing information is removed. If set to TRUE, the peer connection can be established with routing information. The default is TRUE.
    Check the Enable enum for the list of possible values.
    """

    interface_name: typing.Text = ...
    """Name of the interface the BGP peer is associated with."""

    ip_address: typing.Text = ...
    """IP address of the interface inside Google Cloud Platform. Only IPv4 is supported."""

    management_type: typing.Text = ...
    """[Output Only] The resource that configures and manages this BGP peer. - MANAGED_BY_USER is the default value and can be managed by you or other users - MANAGED_BY_ATTACHMENT is a BGP peer that is configured and managed by Cloud Interconnect, specifically by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of BGP peer when the PARTNER InterconnectAttachment is created, updated, or deleted.
    Check the ManagementType enum for the list of possible values.
    """

    name: typing.Text = ...
    """Name of this BGP peer. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    peer_asn: builtins.int = ...
    """Peer BGP Autonomous System Number (ASN). Each BGP interface may use a different value."""

    peer_ip_address: typing.Text = ...
    """IP address of the BGP interface outside Google Cloud Platform. Only IPv4 is supported."""

    router_appliance_instance: typing.Text = ...
    """URI of the VM instance that is used as third-party router appliances such as Next Gen Firewalls, Virtual Routers, or Router Appliances. The VM instance must be located in zones contained in the same region as this Cloud Router. The VM instance is the peer side of the BGP session."""

    def __init__(self,
        *,
        advertise_mode : typing.Optional[typing.Text] = ...,
        advertised_groups : typing.Optional[typing.Iterable[typing.Text]] = ...,
        advertised_ip_ranges : typing.Optional[typing.Iterable[global___RouterAdvertisedIpRange]] = ...,
        advertised_route_priority : typing.Optional[builtins.int] = ...,
        bfd : typing.Optional[global___RouterBgpPeerBfd] = ...,
        enable : typing.Optional[typing.Text] = ...,
        interface_name : typing.Optional[typing.Text] = ...,
        ip_address : typing.Optional[typing.Text] = ...,
        management_type : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        peer_asn : typing.Optional[builtins.int] = ...,
        peer_ip_address : typing.Optional[typing.Text] = ...,
        router_appliance_instance : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_advertise_mode",b"_advertise_mode","_advertised_route_priority",b"_advertised_route_priority","_bfd",b"_bfd","_enable",b"_enable","_interface_name",b"_interface_name","_ip_address",b"_ip_address","_management_type",b"_management_type","_name",b"_name","_peer_asn",b"_peer_asn","_peer_ip_address",b"_peer_ip_address","_router_appliance_instance",b"_router_appliance_instance","advertise_mode",b"advertise_mode","advertised_route_priority",b"advertised_route_priority","bfd",b"bfd","enable",b"enable","interface_name",b"interface_name","ip_address",b"ip_address","management_type",b"management_type","name",b"name","peer_asn",b"peer_asn","peer_ip_address",b"peer_ip_address","router_appliance_instance",b"router_appliance_instance"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_advertise_mode",b"_advertise_mode","_advertised_route_priority",b"_advertised_route_priority","_bfd",b"_bfd","_enable",b"_enable","_interface_name",b"_interface_name","_ip_address",b"_ip_address","_management_type",b"_management_type","_name",b"_name","_peer_asn",b"_peer_asn","_peer_ip_address",b"_peer_ip_address","_router_appliance_instance",b"_router_appliance_instance","advertise_mode",b"advertise_mode","advertised_groups",b"advertised_groups","advertised_ip_ranges",b"advertised_ip_ranges","advertised_route_priority",b"advertised_route_priority","bfd",b"bfd","enable",b"enable","interface_name",b"interface_name","ip_address",b"ip_address","management_type",b"management_type","name",b"name","peer_asn",b"peer_asn","peer_ip_address",b"peer_ip_address","router_appliance_instance",b"router_appliance_instance"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_advertise_mode",b"_advertise_mode"]) -> typing.Optional[typing_extensions.Literal["advertise_mode"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_advertised_route_priority",b"_advertised_route_priority"]) -> typing.Optional[typing_extensions.Literal["advertised_route_priority"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_bfd",b"_bfd"]) -> typing.Optional[typing_extensions.Literal["bfd"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable",b"_enable"]) -> typing.Optional[typing_extensions.Literal["enable"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_interface_name",b"_interface_name"]) -> typing.Optional[typing_extensions.Literal["interface_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_address",b"_ip_address"]) -> typing.Optional[typing_extensions.Literal["ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_management_type",b"_management_type"]) -> typing.Optional[typing_extensions.Literal["management_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_asn",b"_peer_asn"]) -> typing.Optional[typing_extensions.Literal["peer_asn"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_ip_address",b"_peer_ip_address"]) -> typing.Optional[typing_extensions.Literal["peer_ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_router_appliance_instance",b"_router_appliance_instance"]) -> typing.Optional[typing_extensions.Literal["router_appliance_instance"]]: ...
global___RouterBgpPeer = RouterBgpPeer

class RouterBgpPeerBfd(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SessionInitializationMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SessionInitializationModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SessionInitializationMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_SESSION_INITIALIZATION_MODE: RouterBgpPeerBfd.SessionInitializationMode.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: RouterBgpPeerBfd.SessionInitializationMode.ValueType = ...  # 314733318
        DISABLED: RouterBgpPeerBfd.SessionInitializationMode.ValueType = ...  # 516696700
        PASSIVE: RouterBgpPeerBfd.SessionInitializationMode.ValueType = ...  # 462813959
    class SessionInitializationMode(_SessionInitializationMode, metaclass=_SessionInitializationModeEnumTypeWrapper):
        """The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is PASSIVE."""
        pass

    UNDEFINED_SESSION_INITIALIZATION_MODE: RouterBgpPeerBfd.SessionInitializationMode.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: RouterBgpPeerBfd.SessionInitializationMode.ValueType = ...  # 314733318
    DISABLED: RouterBgpPeerBfd.SessionInitializationMode.ValueType = ...  # 516696700
    PASSIVE: RouterBgpPeerBfd.SessionInitializationMode.ValueType = ...  # 462813959

    MIN_RECEIVE_INTERVAL_FIELD_NUMBER: builtins.int
    MIN_TRANSMIT_INTERVAL_FIELD_NUMBER: builtins.int
    MULTIPLIER_FIELD_NUMBER: builtins.int
    SESSION_INITIALIZATION_MODE_FIELD_NUMBER: builtins.int
    min_receive_interval: builtins.int = ...
    """The minimum interval, in milliseconds, between BFD control packets received from the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the transmit interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000."""

    min_transmit_interval: builtins.int = ...
    """The minimum interval, in milliseconds, between BFD control packets transmitted to the peer router. The actual value is negotiated between the two routers and is equal to the greater of this value and the corresponding receive interval of the other router. If set, this value must be between 1000 and 30000. The default is 1000."""

    multiplier: builtins.int = ...
    """The number of consecutive BFD packets that must be missed before BFD declares that a peer is unavailable. If set, the value must be a value between 5 and 16. The default is 5."""

    session_initialization_mode: typing.Text = ...
    """The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer. The default is PASSIVE.
    Check the SessionInitializationMode enum for the list of possible values.
    """

    def __init__(self,
        *,
        min_receive_interval : typing.Optional[builtins.int] = ...,
        min_transmit_interval : typing.Optional[builtins.int] = ...,
        multiplier : typing.Optional[builtins.int] = ...,
        session_initialization_mode : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_min_receive_interval",b"_min_receive_interval","_min_transmit_interval",b"_min_transmit_interval","_multiplier",b"_multiplier","_session_initialization_mode",b"_session_initialization_mode","min_receive_interval",b"min_receive_interval","min_transmit_interval",b"min_transmit_interval","multiplier",b"multiplier","session_initialization_mode",b"session_initialization_mode"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_min_receive_interval",b"_min_receive_interval","_min_transmit_interval",b"_min_transmit_interval","_multiplier",b"_multiplier","_session_initialization_mode",b"_session_initialization_mode","min_receive_interval",b"min_receive_interval","min_transmit_interval",b"min_transmit_interval","multiplier",b"multiplier","session_initialization_mode",b"session_initialization_mode"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_receive_interval",b"_min_receive_interval"]) -> typing.Optional[typing_extensions.Literal["min_receive_interval"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_transmit_interval",b"_min_transmit_interval"]) -> typing.Optional[typing_extensions.Literal["min_transmit_interval"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_multiplier",b"_multiplier"]) -> typing.Optional[typing_extensions.Literal["multiplier"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_session_initialization_mode",b"_session_initialization_mode"]) -> typing.Optional[typing_extensions.Literal["session_initialization_mode"]]: ...
global___RouterBgpPeerBfd = RouterBgpPeerBfd

class RouterInterface(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ManagementType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ManagementTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ManagementType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_MANAGEMENT_TYPE: RouterInterface.ManagementType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        MANAGED_BY_ATTACHMENT: RouterInterface.ManagementType.ValueType = ...  # 458926411
        """The interface is automatically created for PARTNER type InterconnectAttachment, Google will automatically create/update/delete this interface when the PARTNER InterconnectAttachment is created/provisioned/deleted. This type of interface cannot be manually managed by user."""

        MANAGED_BY_USER: RouterInterface.ManagementType.ValueType = ...  # 317294067
        """Default value, the interface is manually created and managed by user."""

    class ManagementType(_ManagementType, metaclass=_ManagementTypeEnumTypeWrapper):
        """[Output Only] The resource that configures and manages this interface. - MANAGED_BY_USER is the default value and can be managed directly by users. - MANAGED_BY_ATTACHMENT is an interface that is configured and managed by Cloud Interconnect, specifically, by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of interface when the PARTNER InterconnectAttachment is created, updated, or deleted."""
        pass

    UNDEFINED_MANAGEMENT_TYPE: RouterInterface.ManagementType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    MANAGED_BY_ATTACHMENT: RouterInterface.ManagementType.ValueType = ...  # 458926411
    """The interface is automatically created for PARTNER type InterconnectAttachment, Google will automatically create/update/delete this interface when the PARTNER InterconnectAttachment is created/provisioned/deleted. This type of interface cannot be manually managed by user."""

    MANAGED_BY_USER: RouterInterface.ManagementType.ValueType = ...  # 317294067
    """Default value, the interface is manually created and managed by user."""


    IP_RANGE_FIELD_NUMBER: builtins.int
    LINKED_INTERCONNECT_ATTACHMENT_FIELD_NUMBER: builtins.int
    LINKED_VPN_TUNNEL_FIELD_NUMBER: builtins.int
    MANAGEMENT_TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PRIVATE_IP_ADDRESS_FIELD_NUMBER: builtins.int
    REDUNDANT_INTERFACE_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    ip_range: typing.Text = ...
    """IP address and range of the interface. The IP range must be in the RFC3927 link-local IP address space. The value must be a CIDR-formatted string, for example: 169.254.0.1/30. NOTE: Do not truncate the address as it represents the IP address of the interface."""

    linked_interconnect_attachment: typing.Text = ...
    """URI of the linked Interconnect attachment. It must be in the same region as the router. Each interface can have one linked resource, which can be a VPN tunnel, an Interconnect attachment, or a virtual machine instance."""

    linked_vpn_tunnel: typing.Text = ...
    """URI of the linked VPN tunnel, which must be in the same region as the router. Each interface can have one linked resource, which can be a VPN tunnel, an Interconnect attachment, or a virtual machine instance."""

    management_type: typing.Text = ...
    """[Output Only] The resource that configures and manages this interface. - MANAGED_BY_USER is the default value and can be managed directly by users. - MANAGED_BY_ATTACHMENT is an interface that is configured and managed by Cloud Interconnect, specifically, by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of interface when the PARTNER InterconnectAttachment is created, updated, or deleted.
    Check the ManagementType enum for the list of possible values.
    """

    name: typing.Text = ...
    """Name of this interface entry. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    private_ip_address: typing.Text = ...
    """The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party Router Appliance, such as a Next Gen Firewall, a Virtual Router, or an SD-WAN VM."""

    redundant_interface: typing.Text = ...
    """Name of the interface that will be redundant with the current interface you are creating. The redundantInterface must belong to the same Cloud Router as the interface here. To establish the BGP session to a Router Appliance VM, you must create two BGP peers. The two BGP peers must be attached to two separate interfaces that are redundant with each other. The redundant_interface must be 1-63 characters long, and comply with RFC1035. Specifically, the redundant_interface must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    subnetwork: typing.Text = ...
    """The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router. When you establish a BGP session to a VM instance using this interface, the VM instance must belong to the same subnetwork as the subnetwork specified here."""

    def __init__(self,
        *,
        ip_range : typing.Optional[typing.Text] = ...,
        linked_interconnect_attachment : typing.Optional[typing.Text] = ...,
        linked_vpn_tunnel : typing.Optional[typing.Text] = ...,
        management_type : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        private_ip_address : typing.Optional[typing.Text] = ...,
        redundant_interface : typing.Optional[typing.Text] = ...,
        subnetwork : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ip_range",b"_ip_range","_linked_interconnect_attachment",b"_linked_interconnect_attachment","_linked_vpn_tunnel",b"_linked_vpn_tunnel","_management_type",b"_management_type","_name",b"_name","_private_ip_address",b"_private_ip_address","_redundant_interface",b"_redundant_interface","_subnetwork",b"_subnetwork","ip_range",b"ip_range","linked_interconnect_attachment",b"linked_interconnect_attachment","linked_vpn_tunnel",b"linked_vpn_tunnel","management_type",b"management_type","name",b"name","private_ip_address",b"private_ip_address","redundant_interface",b"redundant_interface","subnetwork",b"subnetwork"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ip_range",b"_ip_range","_linked_interconnect_attachment",b"_linked_interconnect_attachment","_linked_vpn_tunnel",b"_linked_vpn_tunnel","_management_type",b"_management_type","_name",b"_name","_private_ip_address",b"_private_ip_address","_redundant_interface",b"_redundant_interface","_subnetwork",b"_subnetwork","ip_range",b"ip_range","linked_interconnect_attachment",b"linked_interconnect_attachment","linked_vpn_tunnel",b"linked_vpn_tunnel","management_type",b"management_type","name",b"name","private_ip_address",b"private_ip_address","redundant_interface",b"redundant_interface","subnetwork",b"subnetwork"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_range",b"_ip_range"]) -> typing.Optional[typing_extensions.Literal["ip_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_linked_interconnect_attachment",b"_linked_interconnect_attachment"]) -> typing.Optional[typing_extensions.Literal["linked_interconnect_attachment"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_linked_vpn_tunnel",b"_linked_vpn_tunnel"]) -> typing.Optional[typing_extensions.Literal["linked_vpn_tunnel"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_management_type",b"_management_type"]) -> typing.Optional[typing_extensions.Literal["management_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_private_ip_address",b"_private_ip_address"]) -> typing.Optional[typing_extensions.Literal["private_ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_redundant_interface",b"_redundant_interface"]) -> typing.Optional[typing_extensions.Literal["redundant_interface"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_subnetwork",b"_subnetwork"]) -> typing.Optional[typing_extensions.Literal["subnetwork"]]: ...
global___RouterInterface = RouterInterface

class RouterList(google.protobuf.message.Message):
    """Contains a list of Router resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Router]:
        """A list of Router resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#router for routers."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Router]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RouterList = RouterList

class RouterNat(google.protobuf.message.Message):
    """Represents a Nat resource. It enables the VMs within the specified subnetworks to access Internet without external IP addresses. It specifies a list of subnetworks (and the ranges within) that want to use NAT. Customers can also provide the external IPs that would be used for NAT. GCP would auto-allocate ephemeral IPs if no external IPs are provided."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _NatIpAllocateOption:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NatIpAllocateOptionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NatIpAllocateOption.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_NAT_IP_ALLOCATE_OPTION: RouterNat.NatIpAllocateOption.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        AUTO_ONLY: RouterNat.NatIpAllocateOption.ValueType = ...  # 182333500
        """Nat IPs are allocated by GCP; customers can not specify any Nat IPs."""

        MANUAL_ONLY: RouterNat.NatIpAllocateOption.ValueType = ...  # 261251205
        """Only use Nat IPs provided by customers. When specified Nat IPs are not enough then the Nat service fails for new VMs."""

    class NatIpAllocateOption(_NatIpAllocateOption, metaclass=_NatIpAllocateOptionEnumTypeWrapper):
        """Specify the NatIpAllocateOption, which can take one of the following values: - MANUAL_ONLY: Uses only Nat IP addresses provided by customers. When there are not enough specified Nat IPs, the Nat service fails for new VMs. - AUTO_ONLY: Nat IPs are allocated by Google Cloud Platform; customers can't specify any Nat IPs. When choosing AUTO_ONLY, then nat_ip should be empty."""
        pass

    UNDEFINED_NAT_IP_ALLOCATE_OPTION: RouterNat.NatIpAllocateOption.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    AUTO_ONLY: RouterNat.NatIpAllocateOption.ValueType = ...  # 182333500
    """Nat IPs are allocated by GCP; customers can not specify any Nat IPs."""

    MANUAL_ONLY: RouterNat.NatIpAllocateOption.ValueType = ...  # 261251205
    """Only use Nat IPs provided by customers. When specified Nat IPs are not enough then the Nat service fails for new VMs."""


    class _SourceSubnetworkIpRangesToNat:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SourceSubnetworkIpRangesToNatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SourceSubnetworkIpRangesToNat.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_SOURCE_SUBNETWORK_IP_RANGES_TO_NAT: RouterNat.SourceSubnetworkIpRangesToNat.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALL_SUBNETWORKS_ALL_IP_RANGES: RouterNat.SourceSubnetworkIpRangesToNat.ValueType = ...  # 179964376
        """All the IP ranges in every Subnetwork are allowed to Nat."""

        ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: RouterNat.SourceSubnetworkIpRangesToNat.ValueType = ...  # 185573819
        """All the primary IP ranges in every Subnetwork are allowed to Nat."""

        LIST_OF_SUBNETWORKS: RouterNat.SourceSubnetworkIpRangesToNat.ValueType = ...  # 517542270
        """A list of Subnetworks are allowed to Nat (specified in the field subnetwork below)"""

    class SourceSubnetworkIpRangesToNat(_SourceSubnetworkIpRangesToNat, metaclass=_SourceSubnetworkIpRangesToNatEnumTypeWrapper):
        """Specify the Nat option, which can take one of the following values: - ALL_SUBNETWORKS_ALL_IP_RANGES: All of the IP ranges in every Subnetwork are allowed to Nat. - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All of the primary IP ranges in every Subnetwork are allowed to Nat. - LIST_OF_SUBNETWORKS: A list of Subnetworks are allowed to Nat (specified in the field subnetwork below) The default is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED. Note that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any other Router.Nat section in any Router for this network in this region."""
        pass

    UNDEFINED_SOURCE_SUBNETWORK_IP_RANGES_TO_NAT: RouterNat.SourceSubnetworkIpRangesToNat.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALL_SUBNETWORKS_ALL_IP_RANGES: RouterNat.SourceSubnetworkIpRangesToNat.ValueType = ...  # 179964376
    """All the IP ranges in every Subnetwork are allowed to Nat."""

    ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: RouterNat.SourceSubnetworkIpRangesToNat.ValueType = ...  # 185573819
    """All the primary IP ranges in every Subnetwork are allowed to Nat."""

    LIST_OF_SUBNETWORKS: RouterNat.SourceSubnetworkIpRangesToNat.ValueType = ...  # 517542270
    """A list of Subnetworks are allowed to Nat (specified in the field subnetwork below)"""


    DRAIN_NAT_IPS_FIELD_NUMBER: builtins.int
    ENABLE_ENDPOINT_INDEPENDENT_MAPPING_FIELD_NUMBER: builtins.int
    ICMP_IDLE_TIMEOUT_SEC_FIELD_NUMBER: builtins.int
    LOG_CONFIG_FIELD_NUMBER: builtins.int
    MIN_PORTS_PER_VM_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NAT_IP_ALLOCATE_OPTION_FIELD_NUMBER: builtins.int
    NAT_IPS_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    SOURCE_SUBNETWORK_IP_RANGES_TO_NAT_FIELD_NUMBER: builtins.int
    SUBNETWORKS_FIELD_NUMBER: builtins.int
    TCP_ESTABLISHED_IDLE_TIMEOUT_SEC_FIELD_NUMBER: builtins.int
    TCP_TIME_WAIT_TIMEOUT_SEC_FIELD_NUMBER: builtins.int
    TCP_TRANSITORY_IDLE_TIMEOUT_SEC_FIELD_NUMBER: builtins.int
    UDP_IDLE_TIMEOUT_SEC_FIELD_NUMBER: builtins.int
    @property
    def drain_nat_ips(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to the NAT. These IPs should be used for updating/patching a NAT only."""
        pass
    enable_endpoint_independent_mapping: builtins.bool = ...
    icmp_idle_timeout_sec: builtins.int = ...
    """Timeout (in seconds) for ICMP connections. Defaults to 30s if not set."""

    @property
    def log_config(self) -> global___RouterNatLogConfig:
        """Configure logging on this NAT."""
        pass
    min_ports_per_vm: builtins.int = ...
    """Minimum number of ports allocated to a VM from this NAT config. If not set, a default number of ports is allocated to a VM. This is rounded up to the nearest power of 2. For example, if the value of this field is 50, at least 64 ports are allocated to a VM."""

    name: typing.Text = ...
    """Unique name of this Nat service. The name must be 1-63 characters long and comply with RFC1035."""

    nat_ip_allocate_option: typing.Text = ...
    """Specify the NatIpAllocateOption, which can take one of the following values: - MANUAL_ONLY: Uses only Nat IP addresses provided by customers. When there are not enough specified Nat IPs, the Nat service fails for new VMs. - AUTO_ONLY: Nat IPs are allocated by Google Cloud Platform; customers can't specify any Nat IPs. When choosing AUTO_ONLY, then nat_ip should be empty.
    Check the NatIpAllocateOption enum for the list of possible values.
    """

    @property
    def nat_ips(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of URLs of the IP resources used for this Nat service. These IP addresses must be valid static external IP addresses assigned to the project."""
        pass
    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterNatRule]:
        """A list of rules associated with this NAT."""
        pass
    source_subnetwork_ip_ranges_to_nat: typing.Text = ...
    """Specify the Nat option, which can take one of the following values: - ALL_SUBNETWORKS_ALL_IP_RANGES: All of the IP ranges in every Subnetwork are allowed to Nat. - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All of the primary IP ranges in every Subnetwork are allowed to Nat. - LIST_OF_SUBNETWORKS: A list of Subnetworks are allowed to Nat (specified in the field subnetwork below) The default is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED. Note that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any other Router.Nat section in any Router for this network in this region.
    Check the SourceSubnetworkIpRangesToNat enum for the list of possible values.
    """

    @property
    def subnetworks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterNatSubnetworkToNat]:
        """A list of Subnetwork resources whose traffic should be translated by NAT Gateway. It is used only when LIST_OF_SUBNETWORKS is selected for the SubnetworkIpRangeToNatOption above."""
        pass
    tcp_established_idle_timeout_sec: builtins.int = ...
    """Timeout (in seconds) for TCP established connections. Defaults to 1200s if not set."""

    tcp_time_wait_timeout_sec: builtins.int = ...
    """Timeout (in seconds) for TCP connections that are in TIME_WAIT state. Defaults to 120s if not set."""

    tcp_transitory_idle_timeout_sec: builtins.int = ...
    """Timeout (in seconds) for TCP transitory connections. Defaults to 30s if not set."""

    udp_idle_timeout_sec: builtins.int = ...
    """Timeout (in seconds) for UDP connections. Defaults to 30s if not set."""

    def __init__(self,
        *,
        drain_nat_ips : typing.Optional[typing.Iterable[typing.Text]] = ...,
        enable_endpoint_independent_mapping : typing.Optional[builtins.bool] = ...,
        icmp_idle_timeout_sec : typing.Optional[builtins.int] = ...,
        log_config : typing.Optional[global___RouterNatLogConfig] = ...,
        min_ports_per_vm : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        nat_ip_allocate_option : typing.Optional[typing.Text] = ...,
        nat_ips : typing.Optional[typing.Iterable[typing.Text]] = ...,
        rules : typing.Optional[typing.Iterable[global___RouterNatRule]] = ...,
        source_subnetwork_ip_ranges_to_nat : typing.Optional[typing.Text] = ...,
        subnetworks : typing.Optional[typing.Iterable[global___RouterNatSubnetworkToNat]] = ...,
        tcp_established_idle_timeout_sec : typing.Optional[builtins.int] = ...,
        tcp_time_wait_timeout_sec : typing.Optional[builtins.int] = ...,
        tcp_transitory_idle_timeout_sec : typing.Optional[builtins.int] = ...,
        udp_idle_timeout_sec : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enable_endpoint_independent_mapping",b"_enable_endpoint_independent_mapping","_icmp_idle_timeout_sec",b"_icmp_idle_timeout_sec","_log_config",b"_log_config","_min_ports_per_vm",b"_min_ports_per_vm","_name",b"_name","_nat_ip_allocate_option",b"_nat_ip_allocate_option","_source_subnetwork_ip_ranges_to_nat",b"_source_subnetwork_ip_ranges_to_nat","_tcp_established_idle_timeout_sec",b"_tcp_established_idle_timeout_sec","_tcp_time_wait_timeout_sec",b"_tcp_time_wait_timeout_sec","_tcp_transitory_idle_timeout_sec",b"_tcp_transitory_idle_timeout_sec","_udp_idle_timeout_sec",b"_udp_idle_timeout_sec","enable_endpoint_independent_mapping",b"enable_endpoint_independent_mapping","icmp_idle_timeout_sec",b"icmp_idle_timeout_sec","log_config",b"log_config","min_ports_per_vm",b"min_ports_per_vm","name",b"name","nat_ip_allocate_option",b"nat_ip_allocate_option","source_subnetwork_ip_ranges_to_nat",b"source_subnetwork_ip_ranges_to_nat","tcp_established_idle_timeout_sec",b"tcp_established_idle_timeout_sec","tcp_time_wait_timeout_sec",b"tcp_time_wait_timeout_sec","tcp_transitory_idle_timeout_sec",b"tcp_transitory_idle_timeout_sec","udp_idle_timeout_sec",b"udp_idle_timeout_sec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enable_endpoint_independent_mapping",b"_enable_endpoint_independent_mapping","_icmp_idle_timeout_sec",b"_icmp_idle_timeout_sec","_log_config",b"_log_config","_min_ports_per_vm",b"_min_ports_per_vm","_name",b"_name","_nat_ip_allocate_option",b"_nat_ip_allocate_option","_source_subnetwork_ip_ranges_to_nat",b"_source_subnetwork_ip_ranges_to_nat","_tcp_established_idle_timeout_sec",b"_tcp_established_idle_timeout_sec","_tcp_time_wait_timeout_sec",b"_tcp_time_wait_timeout_sec","_tcp_transitory_idle_timeout_sec",b"_tcp_transitory_idle_timeout_sec","_udp_idle_timeout_sec",b"_udp_idle_timeout_sec","drain_nat_ips",b"drain_nat_ips","enable_endpoint_independent_mapping",b"enable_endpoint_independent_mapping","icmp_idle_timeout_sec",b"icmp_idle_timeout_sec","log_config",b"log_config","min_ports_per_vm",b"min_ports_per_vm","name",b"name","nat_ip_allocate_option",b"nat_ip_allocate_option","nat_ips",b"nat_ips","rules",b"rules","source_subnetwork_ip_ranges_to_nat",b"source_subnetwork_ip_ranges_to_nat","subnetworks",b"subnetworks","tcp_established_idle_timeout_sec",b"tcp_established_idle_timeout_sec","tcp_time_wait_timeout_sec",b"tcp_time_wait_timeout_sec","tcp_transitory_idle_timeout_sec",b"tcp_transitory_idle_timeout_sec","udp_idle_timeout_sec",b"udp_idle_timeout_sec"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_endpoint_independent_mapping",b"_enable_endpoint_independent_mapping"]) -> typing.Optional[typing_extensions.Literal["enable_endpoint_independent_mapping"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_icmp_idle_timeout_sec",b"_icmp_idle_timeout_sec"]) -> typing.Optional[typing_extensions.Literal["icmp_idle_timeout_sec"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_log_config",b"_log_config"]) -> typing.Optional[typing_extensions.Literal["log_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_ports_per_vm",b"_min_ports_per_vm"]) -> typing.Optional[typing_extensions.Literal["min_ports_per_vm"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_nat_ip_allocate_option",b"_nat_ip_allocate_option"]) -> typing.Optional[typing_extensions.Literal["nat_ip_allocate_option"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_subnetwork_ip_ranges_to_nat",b"_source_subnetwork_ip_ranges_to_nat"]) -> typing.Optional[typing_extensions.Literal["source_subnetwork_ip_ranges_to_nat"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tcp_established_idle_timeout_sec",b"_tcp_established_idle_timeout_sec"]) -> typing.Optional[typing_extensions.Literal["tcp_established_idle_timeout_sec"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tcp_time_wait_timeout_sec",b"_tcp_time_wait_timeout_sec"]) -> typing.Optional[typing_extensions.Literal["tcp_time_wait_timeout_sec"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tcp_transitory_idle_timeout_sec",b"_tcp_transitory_idle_timeout_sec"]) -> typing.Optional[typing_extensions.Literal["tcp_transitory_idle_timeout_sec"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_udp_idle_timeout_sec",b"_udp_idle_timeout_sec"]) -> typing.Optional[typing_extensions.Literal["udp_idle_timeout_sec"]]: ...
global___RouterNat = RouterNat

class RouterNatLogConfig(google.protobuf.message.Message):
    """Configuration of logging on a NAT."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Filter:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _FilterEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Filter.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_FILTER: RouterNatLogConfig.Filter.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALL: RouterNatLogConfig.Filter.ValueType = ...  # 64897
        """Export logs for all (successful and unsuccessful) connections."""

        ERRORS_ONLY: RouterNatLogConfig.Filter.ValueType = ...  # 307484672
        """Export logs for connection failures only."""

        TRANSLATIONS_ONLY: RouterNatLogConfig.Filter.ValueType = ...  # 357212649
        """Export logs for successful connections only."""

    class Filter(_Filter, metaclass=_FilterEnumTypeWrapper):
        """Specify the desired filtering of logs on this NAT. If unspecified, logs are exported for all connections handled by this NAT. This option can take one of the following values: - ERRORS_ONLY: Export logs only for connection failures. - TRANSLATIONS_ONLY: Export logs only for successful connections. - ALL: Export logs for all connections, successful and unsuccessful."""
        pass

    UNDEFINED_FILTER: RouterNatLogConfig.Filter.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALL: RouterNatLogConfig.Filter.ValueType = ...  # 64897
    """Export logs for all (successful and unsuccessful) connections."""

    ERRORS_ONLY: RouterNatLogConfig.Filter.ValueType = ...  # 307484672
    """Export logs for connection failures only."""

    TRANSLATIONS_ONLY: RouterNatLogConfig.Filter.ValueType = ...  # 357212649
    """Export logs for successful connections only."""


    ENABLE_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    enable: builtins.bool = ...
    """Indicates whether or not to export logs. This is false by default."""

    filter: typing.Text = ...
    """Specify the desired filtering of logs on this NAT. If unspecified, logs are exported for all connections handled by this NAT. This option can take one of the following values: - ERRORS_ONLY: Export logs only for connection failures. - TRANSLATIONS_ONLY: Export logs only for successful connections. - ALL: Export logs for all connections, successful and unsuccessful.
    Check the Filter enum for the list of possible values.
    """

    def __init__(self,
        *,
        enable : typing.Optional[builtins.bool] = ...,
        filter : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enable",b"_enable","_filter",b"_filter","enable",b"enable","filter",b"filter"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enable",b"_enable","_filter",b"_filter","enable",b"enable","filter",b"filter"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable",b"_enable"]) -> typing.Optional[typing_extensions.Literal["enable"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter",b"_filter"]) -> typing.Optional[typing_extensions.Literal["filter"]]: ...
global___RouterNatLogConfig = RouterNatLogConfig

class RouterNatRule(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACTION_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    MATCH_FIELD_NUMBER: builtins.int
    RULE_NUMBER_FIELD_NUMBER: builtins.int
    @property
    def action(self) -> global___RouterNatRuleAction:
        """The action to be enforced for traffic that matches this rule."""
        pass
    description: typing.Text = ...
    """An optional description of this rule."""

    match: typing.Text = ...
    """CEL expression that specifies the match condition that egress traffic from a VM is evaluated against. If it evaluates to true, the corresponding `action` is enforced. The following examples are valid match expressions for public NAT: "inIpRange(destination.ip, '1.1.0.0/16') || inIpRange(destination.ip, '2.2.0.0/16')" "destination.ip == '1.1.0.1' || destination.ip == '8.8.8.8'" The following example is a valid match expression for private NAT: "nexthop.hub == '/projects/my-project/global/hub/hub-1'" """

    rule_number: builtins.int = ...
    """An integer uniquely identifying a rule in the list. The rule number must be a positive value between 0 and 65000, and must be unique among rules within a NAT."""

    def __init__(self,
        *,
        action : typing.Optional[global___RouterNatRuleAction] = ...,
        description : typing.Optional[typing.Text] = ...,
        match : typing.Optional[typing.Text] = ...,
        rule_number : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_action",b"_action","_description",b"_description","_match",b"_match","_rule_number",b"_rule_number","action",b"action","description",b"description","match",b"match","rule_number",b"rule_number"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_action",b"_action","_description",b"_description","_match",b"_match","_rule_number",b"_rule_number","action",b"action","description",b"description","match",b"match","rule_number",b"rule_number"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_action",b"_action"]) -> typing.Optional[typing_extensions.Literal["action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_match",b"_match"]) -> typing.Optional[typing_extensions.Literal["match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rule_number",b"_rule_number"]) -> typing.Optional[typing_extensions.Literal["rule_number"]]: ...
global___RouterNatRule = RouterNatRule

class RouterNatRuleAction(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOURCE_NAT_ACTIVE_IPS_FIELD_NUMBER: builtins.int
    SOURCE_NAT_DRAIN_IPS_FIELD_NUMBER: builtins.int
    @property
    def source_nat_active_ips(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of URLs of the IP resources used for this NAT rule. These IP addresses must be valid static external IP addresses assigned to the project. This field is used for public NAT."""
        pass
    @property
    def source_nat_drain_ips(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to the NAT. These IPs should be used for updating/patching a NAT rule only. This field is used for public NAT."""
        pass
    def __init__(self,
        *,
        source_nat_active_ips : typing.Optional[typing.Iterable[typing.Text]] = ...,
        source_nat_drain_ips : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["source_nat_active_ips",b"source_nat_active_ips","source_nat_drain_ips",b"source_nat_drain_ips"]) -> None: ...
global___RouterNatRuleAction = RouterNatRuleAction

class RouterNatSubnetworkToNat(google.protobuf.message.Message):
    """Defines the IP ranges that want to use NAT for a subnetwork."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SourceIpRangesToNat:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SourceIpRangesToNatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SourceIpRangesToNat.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_SOURCE_IP_RANGES_TO_NAT: RouterNatSubnetworkToNat.SourceIpRangesToNat.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALL_IP_RANGES: RouterNatSubnetworkToNat.SourceIpRangesToNat.ValueType = ...  # 35608496
        """The primary and all the secondary ranges are allowed to Nat."""

        LIST_OF_SECONDARY_IP_RANGES: RouterNatSubnetworkToNat.SourceIpRangesToNat.ValueType = ...  # 192289308
        """A list of secondary ranges are allowed to Nat."""

        PRIMARY_IP_RANGE: RouterNatSubnetworkToNat.SourceIpRangesToNat.ValueType = ...  # 297109954
        """The primary range is allowed to Nat."""

    class SourceIpRangesToNat(_SourceIpRangesToNat, metaclass=_SourceIpRangesToNatEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_SOURCE_IP_RANGES_TO_NAT: RouterNatSubnetworkToNat.SourceIpRangesToNat.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALL_IP_RANGES: RouterNatSubnetworkToNat.SourceIpRangesToNat.ValueType = ...  # 35608496
    """The primary and all the secondary ranges are allowed to Nat."""

    LIST_OF_SECONDARY_IP_RANGES: RouterNatSubnetworkToNat.SourceIpRangesToNat.ValueType = ...  # 192289308
    """A list of secondary ranges are allowed to Nat."""

    PRIMARY_IP_RANGE: RouterNatSubnetworkToNat.SourceIpRangesToNat.ValueType = ...  # 297109954
    """The primary range is allowed to Nat."""


    NAME_FIELD_NUMBER: builtins.int
    SECONDARY_IP_RANGE_NAMES_FIELD_NUMBER: builtins.int
    SOURCE_IP_RANGES_TO_NAT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """URL for the subnetwork resource that will use NAT."""

    @property
    def secondary_ip_range_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of the secondary ranges of the Subnetwork that are allowed to use NAT. This can be populated only if "LIST_OF_SECONDARY_IP_RANGES" is one of the values in source_ip_ranges_to_nat."""
        pass
    @property
    def source_ip_ranges_to_nat(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Specify the options for NAT ranges in the Subnetwork. All options of a single value are valid except NAT_IP_RANGE_OPTION_UNSPECIFIED. The only valid option with multiple values is: ["PRIMARY_IP_RANGE", "LIST_OF_SECONDARY_IP_RANGES"] Default: [ALL_IP_RANGES]
        Check the SourceIpRangesToNat enum for the list of possible values.
        """
        pass
    def __init__(self,
        *,
        name : typing.Optional[typing.Text] = ...,
        secondary_ip_range_names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        source_ip_ranges_to_nat : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","name",b"name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","name",b"name","secondary_ip_range_names",b"secondary_ip_range_names","source_ip_ranges_to_nat",b"source_ip_ranges_to_nat"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
global___RouterNatSubnetworkToNat = RouterNatSubnetworkToNat

class RouterStatus(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BEST_ROUTES_FIELD_NUMBER: builtins.int
    BEST_ROUTES_FOR_ROUTER_FIELD_NUMBER: builtins.int
    BGP_PEER_STATUS_FIELD_NUMBER: builtins.int
    NAT_STATUS_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    @property
    def best_routes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Route]:
        """Best routes for this router's network."""
        pass
    @property
    def best_routes_for_router(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Route]:
        """Best routes learned by this router."""
        pass
    @property
    def bgp_peer_status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterStatusBgpPeerStatus]: ...
    @property
    def nat_status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterStatusNatStatus]: ...
    network: typing.Text = ...
    """URI of the network to which this router belongs."""

    def __init__(self,
        *,
        best_routes : typing.Optional[typing.Iterable[global___Route]] = ...,
        best_routes_for_router : typing.Optional[typing.Iterable[global___Route]] = ...,
        bgp_peer_status : typing.Optional[typing.Iterable[global___RouterStatusBgpPeerStatus]] = ...,
        nat_status : typing.Optional[typing.Iterable[global___RouterStatusNatStatus]] = ...,
        network : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_network",b"_network","network",b"network"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_network",b"_network","best_routes",b"best_routes","best_routes_for_router",b"best_routes_for_router","bgp_peer_status",b"bgp_peer_status","nat_status",b"nat_status","network",b"network"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
global___RouterStatus = RouterStatus

class RouterStatusBgpPeerStatus(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: RouterStatusBgpPeerStatus.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DOWN: RouterStatusBgpPeerStatus.Status.ValueType = ...  # 2104482
        UNKNOWN: RouterStatusBgpPeerStatus.Status.ValueType = ...  # 433141802
        UP: RouterStatusBgpPeerStatus.Status.ValueType = ...  # 2715
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """Status of the BGP peer: {UP, DOWN}"""
        pass

    UNDEFINED_STATUS: RouterStatusBgpPeerStatus.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DOWN: RouterStatusBgpPeerStatus.Status.ValueType = ...  # 2104482
    UNKNOWN: RouterStatusBgpPeerStatus.Status.ValueType = ...  # 433141802
    UP: RouterStatusBgpPeerStatus.Status.ValueType = ...  # 2715

    ADVERTISED_ROUTES_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    LINKED_VPN_TUNNEL_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NUM_LEARNED_ROUTES_FIELD_NUMBER: builtins.int
    PEER_IP_ADDRESS_FIELD_NUMBER: builtins.int
    ROUTER_APPLIANCE_INSTANCE_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    UPTIME_FIELD_NUMBER: builtins.int
    UPTIME_SECONDS_FIELD_NUMBER: builtins.int
    @property
    def advertised_routes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Route]:
        """Routes that were advertised to the remote BGP peer"""
        pass
    ip_address: typing.Text = ...
    """IP address of the local BGP interface."""

    linked_vpn_tunnel: typing.Text = ...
    """URL of the VPN tunnel that this BGP peer controls."""

    name: typing.Text = ...
    """Name of this BGP peer. Unique within the Routers resource."""

    num_learned_routes: builtins.int = ...
    """Number of routes learned from the remote BGP Peer."""

    peer_ip_address: typing.Text = ...
    """IP address of the remote BGP interface."""

    router_appliance_instance: typing.Text = ...
    """[Output only] URI of the VM instance that is used as third-party router appliances such as Next Gen Firewalls, Virtual Routers, or Router Appliances. The VM instance is the peer side of the BGP session."""

    state: typing.Text = ...
    """BGP state as specified in RFC1771."""

    status: typing.Text = ...
    """Status of the BGP peer: {UP, DOWN}
    Check the Status enum for the list of possible values.
    """

    uptime: typing.Text = ...
    """Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23 hours, 59 minutes, 59 seconds"""

    uptime_seconds: typing.Text = ...
    """Time this session has been up, in seconds. Format: 145"""

    def __init__(self,
        *,
        advertised_routes : typing.Optional[typing.Iterable[global___Route]] = ...,
        ip_address : typing.Optional[typing.Text] = ...,
        linked_vpn_tunnel : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        num_learned_routes : typing.Optional[builtins.int] = ...,
        peer_ip_address : typing.Optional[typing.Text] = ...,
        router_appliance_instance : typing.Optional[typing.Text] = ...,
        state : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        uptime : typing.Optional[typing.Text] = ...,
        uptime_seconds : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ip_address",b"_ip_address","_linked_vpn_tunnel",b"_linked_vpn_tunnel","_name",b"_name","_num_learned_routes",b"_num_learned_routes","_peer_ip_address",b"_peer_ip_address","_router_appliance_instance",b"_router_appliance_instance","_state",b"_state","_status",b"_status","_uptime",b"_uptime","_uptime_seconds",b"_uptime_seconds","ip_address",b"ip_address","linked_vpn_tunnel",b"linked_vpn_tunnel","name",b"name","num_learned_routes",b"num_learned_routes","peer_ip_address",b"peer_ip_address","router_appliance_instance",b"router_appliance_instance","state",b"state","status",b"status","uptime",b"uptime","uptime_seconds",b"uptime_seconds"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ip_address",b"_ip_address","_linked_vpn_tunnel",b"_linked_vpn_tunnel","_name",b"_name","_num_learned_routes",b"_num_learned_routes","_peer_ip_address",b"_peer_ip_address","_router_appliance_instance",b"_router_appliance_instance","_state",b"_state","_status",b"_status","_uptime",b"_uptime","_uptime_seconds",b"_uptime_seconds","advertised_routes",b"advertised_routes","ip_address",b"ip_address","linked_vpn_tunnel",b"linked_vpn_tunnel","name",b"name","num_learned_routes",b"num_learned_routes","peer_ip_address",b"peer_ip_address","router_appliance_instance",b"router_appliance_instance","state",b"state","status",b"status","uptime",b"uptime","uptime_seconds",b"uptime_seconds"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_address",b"_ip_address"]) -> typing.Optional[typing_extensions.Literal["ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_linked_vpn_tunnel",b"_linked_vpn_tunnel"]) -> typing.Optional[typing_extensions.Literal["linked_vpn_tunnel"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_num_learned_routes",b"_num_learned_routes"]) -> typing.Optional[typing_extensions.Literal["num_learned_routes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_ip_address",b"_peer_ip_address"]) -> typing.Optional[typing_extensions.Literal["peer_ip_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_router_appliance_instance",b"_router_appliance_instance"]) -> typing.Optional[typing_extensions.Literal["router_appliance_instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_uptime",b"_uptime"]) -> typing.Optional[typing_extensions.Literal["uptime"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_uptime_seconds",b"_uptime_seconds"]) -> typing.Optional[typing_extensions.Literal["uptime_seconds"]]: ...
global___RouterStatusBgpPeerStatus = RouterStatusBgpPeerStatus

class RouterStatusNatStatus(google.protobuf.message.Message):
    """Status of a NAT contained in this router."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTO_ALLOCATED_NAT_IPS_FIELD_NUMBER: builtins.int
    DRAIN_AUTO_ALLOCATED_NAT_IPS_FIELD_NUMBER: builtins.int
    DRAIN_USER_ALLOCATED_NAT_IPS_FIELD_NUMBER: builtins.int
    MIN_EXTRA_NAT_IPS_NEEDED_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NUM_VM_ENDPOINTS_WITH_NAT_MAPPINGS_FIELD_NUMBER: builtins.int
    RULE_STATUS_FIELD_NUMBER: builtins.int
    USER_ALLOCATED_NAT_IP_RESOURCES_FIELD_NUMBER: builtins.int
    USER_ALLOCATED_NAT_IPS_FIELD_NUMBER: builtins.int
    @property
    def auto_allocated_nat_ips(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of IPs auto-allocated for NAT. Example: ["1.1.1.1", "129.2.16.89"]"""
        pass
    @property
    def drain_auto_allocated_nat_ips(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of IPs auto-allocated for NAT that are in drain mode. Example: ["1.1.1.1", "179.12.26.133"]."""
        pass
    @property
    def drain_user_allocated_nat_ips(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of IPs user-allocated for NAT that are in drain mode. Example: ["1.1.1.1", "179.12.26.133"]."""
        pass
    min_extra_nat_ips_needed: builtins.int = ...
    """The number of extra IPs to allocate. This will be greater than 0 only if user-specified IPs are NOT enough to allow all configured VMs to use NAT. This value is meaningful only when auto-allocation of NAT IPs is *not* used."""

    name: typing.Text = ...
    """Unique name of this NAT."""

    num_vm_endpoints_with_nat_mappings: builtins.int = ...
    """Number of VM endpoints (i.e., Nics) that can use NAT."""

    @property
    def rule_status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RouterStatusNatStatusNatRuleStatus]:
        """Status of rules in this NAT."""
        pass
    @property
    def user_allocated_nat_ip_resources(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of fully qualified URLs of reserved IP address resources."""
        pass
    @property
    def user_allocated_nat_ips(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of IPs user-allocated for NAT. They will be raw IP strings like "179.12.26.133"."""
        pass
    def __init__(self,
        *,
        auto_allocated_nat_ips : typing.Optional[typing.Iterable[typing.Text]] = ...,
        drain_auto_allocated_nat_ips : typing.Optional[typing.Iterable[typing.Text]] = ...,
        drain_user_allocated_nat_ips : typing.Optional[typing.Iterable[typing.Text]] = ...,
        min_extra_nat_ips_needed : typing.Optional[builtins.int] = ...,
        name : typing.Optional[typing.Text] = ...,
        num_vm_endpoints_with_nat_mappings : typing.Optional[builtins.int] = ...,
        rule_status : typing.Optional[typing.Iterable[global___RouterStatusNatStatusNatRuleStatus]] = ...,
        user_allocated_nat_ip_resources : typing.Optional[typing.Iterable[typing.Text]] = ...,
        user_allocated_nat_ips : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_min_extra_nat_ips_needed",b"_min_extra_nat_ips_needed","_name",b"_name","_num_vm_endpoints_with_nat_mappings",b"_num_vm_endpoints_with_nat_mappings","min_extra_nat_ips_needed",b"min_extra_nat_ips_needed","name",b"name","num_vm_endpoints_with_nat_mappings",b"num_vm_endpoints_with_nat_mappings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_min_extra_nat_ips_needed",b"_min_extra_nat_ips_needed","_name",b"_name","_num_vm_endpoints_with_nat_mappings",b"_num_vm_endpoints_with_nat_mappings","auto_allocated_nat_ips",b"auto_allocated_nat_ips","drain_auto_allocated_nat_ips",b"drain_auto_allocated_nat_ips","drain_user_allocated_nat_ips",b"drain_user_allocated_nat_ips","min_extra_nat_ips_needed",b"min_extra_nat_ips_needed","name",b"name","num_vm_endpoints_with_nat_mappings",b"num_vm_endpoints_with_nat_mappings","rule_status",b"rule_status","user_allocated_nat_ip_resources",b"user_allocated_nat_ip_resources","user_allocated_nat_ips",b"user_allocated_nat_ips"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_extra_nat_ips_needed",b"_min_extra_nat_ips_needed"]) -> typing.Optional[typing_extensions.Literal["min_extra_nat_ips_needed"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_num_vm_endpoints_with_nat_mappings",b"_num_vm_endpoints_with_nat_mappings"]) -> typing.Optional[typing_extensions.Literal["num_vm_endpoints_with_nat_mappings"]]: ...
global___RouterStatusNatStatus = RouterStatusNatStatus

class RouterStatusNatStatusNatRuleStatus(google.protobuf.message.Message):
    """Status of a NAT Rule contained in this NAT."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACTIVE_NAT_IPS_FIELD_NUMBER: builtins.int
    DRAIN_NAT_IPS_FIELD_NUMBER: builtins.int
    MIN_EXTRA_IPS_NEEDED_FIELD_NUMBER: builtins.int
    NUM_VM_ENDPOINTS_WITH_NAT_MAPPINGS_FIELD_NUMBER: builtins.int
    RULE_NUMBER_FIELD_NUMBER: builtins.int
    @property
    def active_nat_ips(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of active IPs for NAT. Example: ["1.1.1.1", "179.12.26.133"]."""
        pass
    @property
    def drain_nat_ips(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of IPs for NAT that are in drain mode. Example: ["1.1.1.1", "179.12.26.133"]."""
        pass
    min_extra_ips_needed: builtins.int = ...
    """The number of extra IPs to allocate. This will be greater than 0 only if the existing IPs in this NAT Rule are NOT enough to allow all configured VMs to use NAT."""

    num_vm_endpoints_with_nat_mappings: builtins.int = ...
    """Number of VM endpoints (i.e., NICs) that have NAT Mappings from this NAT Rule."""

    rule_number: builtins.int = ...
    """Rule number of the rule."""

    def __init__(self,
        *,
        active_nat_ips : typing.Optional[typing.Iterable[typing.Text]] = ...,
        drain_nat_ips : typing.Optional[typing.Iterable[typing.Text]] = ...,
        min_extra_ips_needed : typing.Optional[builtins.int] = ...,
        num_vm_endpoints_with_nat_mappings : typing.Optional[builtins.int] = ...,
        rule_number : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_min_extra_ips_needed",b"_min_extra_ips_needed","_num_vm_endpoints_with_nat_mappings",b"_num_vm_endpoints_with_nat_mappings","_rule_number",b"_rule_number","min_extra_ips_needed",b"min_extra_ips_needed","num_vm_endpoints_with_nat_mappings",b"num_vm_endpoints_with_nat_mappings","rule_number",b"rule_number"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_min_extra_ips_needed",b"_min_extra_ips_needed","_num_vm_endpoints_with_nat_mappings",b"_num_vm_endpoints_with_nat_mappings","_rule_number",b"_rule_number","active_nat_ips",b"active_nat_ips","drain_nat_ips",b"drain_nat_ips","min_extra_ips_needed",b"min_extra_ips_needed","num_vm_endpoints_with_nat_mappings",b"num_vm_endpoints_with_nat_mappings","rule_number",b"rule_number"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_extra_ips_needed",b"_min_extra_ips_needed"]) -> typing.Optional[typing_extensions.Literal["min_extra_ips_needed"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_num_vm_endpoints_with_nat_mappings",b"_num_vm_endpoints_with_nat_mappings"]) -> typing.Optional[typing_extensions.Literal["num_vm_endpoints_with_nat_mappings"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rule_number",b"_rule_number"]) -> typing.Optional[typing_extensions.Literal["rule_number"]]: ...
global___RouterStatusNatStatusNatRuleStatus = RouterStatusNatStatusNatRuleStatus

class RouterStatusResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KIND_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    kind: typing.Text = ...
    """Type of resource."""

    @property
    def result(self) -> global___RouterStatus: ...
    def __init__(self,
        *,
        kind : typing.Optional[typing.Text] = ...,
        result : typing.Optional[global___RouterStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_kind",b"_kind","_result",b"_result","kind",b"kind","result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_kind",b"_kind","_result",b"_result","kind",b"kind","result",b"result"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_result",b"_result"]) -> typing.Optional[typing_extensions.Literal["result"]]: ...
global___RouterStatusResponse = RouterStatusResponse

class RoutersPreviewResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___Router:
        """Preview of given router."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___Router] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_resource",b"_resource","resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_resource",b"_resource","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_resource",b"_resource"]) -> typing.Optional[typing_extensions.Literal["resource"]]: ...
global___RoutersPreviewResponse = RoutersPreviewResponse

class RoutersScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ROUTERS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def routers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Router]:
        """A list of routers contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of routers when the list is empty."""
        pass
    def __init__(self,
        *,
        routers : typing.Optional[typing.Iterable[global___Router]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","routers",b"routers","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___RoutersScopedList = RoutersScopedList

class Rule(google.protobuf.message.Message):
    """This is deprecated and has no effect. Do not use."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Action:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ActionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Action.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ACTION: Rule.Action.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALLOW: Rule.Action.ValueType = ...  # 62368553
        """This is deprecated and has no effect. Do not use."""

        ALLOW_WITH_LOG: Rule.Action.ValueType = ...  # 76034177
        """This is deprecated and has no effect. Do not use."""

        DENY: Rule.Action.ValueType = ...  # 2094604
        """This is deprecated and has no effect. Do not use."""

        DENY_WITH_LOG: Rule.Action.ValueType = ...  # 351433982
        """This is deprecated and has no effect. Do not use."""

        LOG: Rule.Action.ValueType = ...  # 75556
        """This is deprecated and has no effect. Do not use."""

        NO_ACTION: Rule.Action.ValueType = ...  # 260643444
        """This is deprecated and has no effect. Do not use."""

    class Action(_Action, metaclass=_ActionEnumTypeWrapper):
        """This is deprecated and has no effect. Do not use."""
        pass

    UNDEFINED_ACTION: Rule.Action.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALLOW: Rule.Action.ValueType = ...  # 62368553
    """This is deprecated and has no effect. Do not use."""

    ALLOW_WITH_LOG: Rule.Action.ValueType = ...  # 76034177
    """This is deprecated and has no effect. Do not use."""

    DENY: Rule.Action.ValueType = ...  # 2094604
    """This is deprecated and has no effect. Do not use."""

    DENY_WITH_LOG: Rule.Action.ValueType = ...  # 351433982
    """This is deprecated and has no effect. Do not use."""

    LOG: Rule.Action.ValueType = ...  # 75556
    """This is deprecated and has no effect. Do not use."""

    NO_ACTION: Rule.Action.ValueType = ...  # 260643444
    """This is deprecated and has no effect. Do not use."""


    ACTION_FIELD_NUMBER: builtins.int
    CONDITIONS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    INS_FIELD_NUMBER: builtins.int
    LOG_CONFIGS_FIELD_NUMBER: builtins.int
    NOT_INS_FIELD_NUMBER: builtins.int
    PERMISSIONS_FIELD_NUMBER: builtins.int
    action: typing.Text = ...
    """This is deprecated and has no effect. Do not use.
    Check the Action enum for the list of possible values.
    """

    @property
    def conditions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Condition]:
        """This is deprecated and has no effect. Do not use."""
        pass
    description: typing.Text = ...
    """This is deprecated and has no effect. Do not use."""

    @property
    def ins(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """This is deprecated and has no effect. Do not use."""
        pass
    @property
    def log_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogConfig]:
        """This is deprecated and has no effect. Do not use."""
        pass
    @property
    def not_ins(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """This is deprecated and has no effect. Do not use."""
        pass
    @property
    def permissions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """This is deprecated and has no effect. Do not use."""
        pass
    def __init__(self,
        *,
        action : typing.Optional[typing.Text] = ...,
        conditions : typing.Optional[typing.Iterable[global___Condition]] = ...,
        description : typing.Optional[typing.Text] = ...,
        ins : typing.Optional[typing.Iterable[typing.Text]] = ...,
        log_configs : typing.Optional[typing.Iterable[global___LogConfig]] = ...,
        not_ins : typing.Optional[typing.Iterable[typing.Text]] = ...,
        permissions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_action",b"_action","_description",b"_description","action",b"action","description",b"description"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_action",b"_action","_description",b"_description","action",b"action","conditions",b"conditions","description",b"description","ins",b"ins","log_configs",b"log_configs","not_ins",b"not_ins","permissions",b"permissions"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_action",b"_action"]) -> typing.Optional[typing_extensions.Literal["action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
global___Rule = Rule

class SSLHealthCheck(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PortSpecification:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PortSpecificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PortSpecification.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PORT_SPECIFICATION: SSLHealthCheck.PortSpecification.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        USE_FIXED_PORT: SSLHealthCheck.PortSpecification.ValueType = ...  # 190235748
        """The port number in port is used for health checking."""

        USE_NAMED_PORT: SSLHealthCheck.PortSpecification.ValueType = ...  # 349300671
        """The portName is used for health checking."""

        USE_SERVING_PORT: SSLHealthCheck.PortSpecification.ValueType = ...  # 362637516
        """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""

    class PortSpecification(_PortSpecification, metaclass=_PortSpecificationEnumTypeWrapper):
        """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, SSL health check follows behavior specified in port and portName fields."""
        pass

    UNDEFINED_PORT_SPECIFICATION: SSLHealthCheck.PortSpecification.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    USE_FIXED_PORT: SSLHealthCheck.PortSpecification.ValueType = ...  # 190235748
    """The port number in port is used for health checking."""

    USE_NAMED_PORT: SSLHealthCheck.PortSpecification.ValueType = ...  # 349300671
    """The portName is used for health checking."""

    USE_SERVING_PORT: SSLHealthCheck.PortSpecification.ValueType = ...  # 362637516
    """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""


    class _ProxyHeader:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProxyHeaderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProxyHeader.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROXY_HEADER: SSLHealthCheck.ProxyHeader.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NONE: SSLHealthCheck.ProxyHeader.ValueType = ...  # 2402104
        PROXY_V1: SSLHealthCheck.ProxyHeader.ValueType = ...  # 334352940
    class ProxyHeader(_ProxyHeader, metaclass=_ProxyHeaderEnumTypeWrapper):
        """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE."""
        pass

    UNDEFINED_PROXY_HEADER: SSLHealthCheck.ProxyHeader.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NONE: SSLHealthCheck.ProxyHeader.ValueType = ...  # 2402104
    PROXY_V1: SSLHealthCheck.ProxyHeader.ValueType = ...  # 334352940

    PORT_FIELD_NUMBER: builtins.int
    PORT_NAME_FIELD_NUMBER: builtins.int
    PORT_SPECIFICATION_FIELD_NUMBER: builtins.int
    PROXY_HEADER_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    port: builtins.int = ...
    """The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535."""

    port_name: typing.Text = ...
    """Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence."""

    port_specification: typing.Text = ...
    """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, SSL health check follows behavior specified in port and portName fields.
    Check the PortSpecification enum for the list of possible values.
    """

    proxy_header: typing.Text = ...
    """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    Check the ProxyHeader enum for the list of possible values.
    """

    request: typing.Text = ...
    """The application data to send once the SSL connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII."""

    response: typing.Text = ...
    """The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII."""

    def __init__(self,
        *,
        port : typing.Optional[builtins.int] = ...,
        port_name : typing.Optional[typing.Text] = ...,
        port_specification : typing.Optional[typing.Text] = ...,
        proxy_header : typing.Optional[typing.Text] = ...,
        request : typing.Optional[typing.Text] = ...,
        response : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","_proxy_header",b"_proxy_header","_request",b"_request","_response",b"_response","port",b"port","port_name",b"port_name","port_specification",b"port_specification","proxy_header",b"proxy_header","request",b"request","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","_proxy_header",b"_proxy_header","_request",b"_request","_response",b"_response","port",b"port","port_name",b"port_name","port_specification",b"port_specification","proxy_header",b"proxy_header","request",b"request","response",b"response"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_name",b"_port_name"]) -> typing.Optional[typing_extensions.Literal["port_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_specification",b"_port_specification"]) -> typing.Optional[typing_extensions.Literal["port_specification"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_header",b"_proxy_header"]) -> typing.Optional[typing_extensions.Literal["proxy_header"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request",b"_request"]) -> typing.Optional[typing_extensions.Literal["request"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_response",b"_response"]) -> typing.Optional[typing_extensions.Literal["response"]]: ...
global___SSLHealthCheck = SSLHealthCheck

class ScalingScheduleStatus(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: ScalingScheduleStatus.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: ScalingScheduleStatus.State.ValueType = ...  # 314733318
        """The current autoscaling recommendation is influenced by this scaling schedule."""

        DISABLED: ScalingScheduleStatus.State.ValueType = ...  # 516696700
        """This scaling schedule has been disabled by the user."""

        OBSOLETE: ScalingScheduleStatus.State.ValueType = ...  # 66532761
        """This scaling schedule will never become active again."""

        READY: ScalingScheduleStatus.State.ValueType = ...  # 77848963
        """The current autoscaling recommendation is not influenced by this scaling schedule."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """[Output Only] The current state of a scaling schedule."""
        pass

    UNDEFINED_STATE: ScalingScheduleStatus.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: ScalingScheduleStatus.State.ValueType = ...  # 314733318
    """The current autoscaling recommendation is influenced by this scaling schedule."""

    DISABLED: ScalingScheduleStatus.State.ValueType = ...  # 516696700
    """This scaling schedule has been disabled by the user."""

    OBSOLETE: ScalingScheduleStatus.State.ValueType = ...  # 66532761
    """This scaling schedule will never become active again."""

    READY: ScalingScheduleStatus.State.ValueType = ...  # 77848963
    """The current autoscaling recommendation is not influenced by this scaling schedule."""


    LAST_START_TIME_FIELD_NUMBER: builtins.int
    NEXT_START_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    last_start_time: typing.Text = ...
    """[Output Only] The last time the scaling schedule became active. Note: this is a timestamp when a schedule actually became active, not when it was planned to do so. The timestamp is in RFC3339 text format."""

    next_start_time: typing.Text = ...
    """[Output Only] The next time the scaling schedule is to become active. Note: this is a timestamp when a schedule is planned to run, but the actual time might be slightly different. The timestamp is in RFC3339 text format."""

    state: typing.Text = ...
    """[Output Only] The current state of a scaling schedule.
    Check the State enum for the list of possible values.
    """

    def __init__(self,
        *,
        last_start_time : typing.Optional[typing.Text] = ...,
        next_start_time : typing.Optional[typing.Text] = ...,
        state : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_last_start_time",b"_last_start_time","_next_start_time",b"_next_start_time","_state",b"_state","last_start_time",b"last_start_time","next_start_time",b"next_start_time","state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_last_start_time",b"_last_start_time","_next_start_time",b"_next_start_time","_state",b"_state","last_start_time",b"last_start_time","next_start_time",b"next_start_time","state",b"state"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_last_start_time",b"_last_start_time"]) -> typing.Optional[typing_extensions.Literal["last_start_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_start_time",b"_next_start_time"]) -> typing.Optional[typing_extensions.Literal["next_start_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
global___ScalingScheduleStatus = ScalingScheduleStatus

class Scheduling(google.protobuf.message.Message):
    """Sets the scheduling options for an Instance. NextID: 21"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _OnHostMaintenance:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _OnHostMaintenanceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OnHostMaintenance.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ON_HOST_MAINTENANCE: Scheduling.OnHostMaintenance.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        MIGRATE: Scheduling.OnHostMaintenance.ValueType = ...  # 165699979
        """*[Default]* Allows Compute Engine to automatically migrate instances out of the way of maintenance events."""

        TERMINATE: Scheduling.OnHostMaintenance.ValueType = ...  # 527617601
        """Tells Compute Engine to terminate and (optionally) restart the instance away from the maintenance activity. If you would like your instance to be restarted, set the automaticRestart flag to true. Your instance may be restarted more than once, and it may be restarted outside the window of maintenance events."""

    class OnHostMaintenance(_OnHostMaintenance, metaclass=_OnHostMaintenanceEnumTypeWrapper):
        """Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Setting Instance Scheduling Options."""
        pass

    UNDEFINED_ON_HOST_MAINTENANCE: Scheduling.OnHostMaintenance.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    MIGRATE: Scheduling.OnHostMaintenance.ValueType = ...  # 165699979
    """*[Default]* Allows Compute Engine to automatically migrate instances out of the way of maintenance events."""

    TERMINATE: Scheduling.OnHostMaintenance.ValueType = ...  # 527617601
    """Tells Compute Engine to terminate and (optionally) restart the instance away from the maintenance activity. If you would like your instance to be restarted, set the automaticRestart flag to true. Your instance may be restarted more than once, and it may be restarted outside the window of maintenance events."""


    AUTOMATIC_RESTART_FIELD_NUMBER: builtins.int
    LOCATION_HINT_FIELD_NUMBER: builtins.int
    MIN_NODE_CPUS_FIELD_NUMBER: builtins.int
    NODE_AFFINITIES_FIELD_NUMBER: builtins.int
    ON_HOST_MAINTENANCE_FIELD_NUMBER: builtins.int
    PREEMPTIBLE_FIELD_NUMBER: builtins.int
    automatic_restart: builtins.bool = ...
    """Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted. By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine."""

    location_hint: typing.Text = ...
    """An opaque location hint used to place the instance close to other resources. This field is for use by internal tools that use the public API."""

    min_node_cpus: builtins.int = ...
    """The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node."""

    @property
    def node_affinities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SchedulingNodeAffinity]:
        """A set of node affinity and anti-affinity configurations. Refer to Configuring node affinity for more information. Overrides reservationAffinity."""
        pass
    on_host_maintenance: typing.Text = ...
    """Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Setting Instance Scheduling Options.
    Check the OnHostMaintenance enum for the list of possible values.
    """

    preemptible: builtins.bool = ...
    """Defines whether the instance is preemptible. This can only be set during instance creation or while the instance is stopped and therefore, in a `TERMINATED` state. See Instance Life Cycle for more information on the possible instance states."""

    def __init__(self,
        *,
        automatic_restart : typing.Optional[builtins.bool] = ...,
        location_hint : typing.Optional[typing.Text] = ...,
        min_node_cpus : typing.Optional[builtins.int] = ...,
        node_affinities : typing.Optional[typing.Iterable[global___SchedulingNodeAffinity]] = ...,
        on_host_maintenance : typing.Optional[typing.Text] = ...,
        preemptible : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_automatic_restart",b"_automatic_restart","_location_hint",b"_location_hint","_min_node_cpus",b"_min_node_cpus","_on_host_maintenance",b"_on_host_maintenance","_preemptible",b"_preemptible","automatic_restart",b"automatic_restart","location_hint",b"location_hint","min_node_cpus",b"min_node_cpus","on_host_maintenance",b"on_host_maintenance","preemptible",b"preemptible"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_automatic_restart",b"_automatic_restart","_location_hint",b"_location_hint","_min_node_cpus",b"_min_node_cpus","_on_host_maintenance",b"_on_host_maintenance","_preemptible",b"_preemptible","automatic_restart",b"automatic_restart","location_hint",b"location_hint","min_node_cpus",b"min_node_cpus","node_affinities",b"node_affinities","on_host_maintenance",b"on_host_maintenance","preemptible",b"preemptible"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_automatic_restart",b"_automatic_restart"]) -> typing.Optional[typing_extensions.Literal["automatic_restart"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_location_hint",b"_location_hint"]) -> typing.Optional[typing_extensions.Literal["location_hint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_node_cpus",b"_min_node_cpus"]) -> typing.Optional[typing_extensions.Literal["min_node_cpus"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_on_host_maintenance",b"_on_host_maintenance"]) -> typing.Optional[typing_extensions.Literal["on_host_maintenance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preemptible",b"_preemptible"]) -> typing.Optional[typing_extensions.Literal["preemptible"]]: ...
global___Scheduling = Scheduling

class SchedulingNodeAffinity(google.protobuf.message.Message):
    """Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Operator:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _OperatorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Operator.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_OPERATOR: SchedulingNodeAffinity.Operator.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        IN: SchedulingNodeAffinity.Operator.ValueType = ...  # 2341
        """Requires Compute Engine to seek for matched nodes."""

        NOT_IN: SchedulingNodeAffinity.Operator.ValueType = ...  # 161144369
        """Requires Compute Engine to avoid certain nodes."""

        OPERATOR_UNSPECIFIED: SchedulingNodeAffinity.Operator.ValueType = ...  # 128892924
    class Operator(_Operator, metaclass=_OperatorEnumTypeWrapper):
        """Defines the operation of node selection. Valid operators are IN for affinity and NOT_IN for anti-affinity."""
        pass

    UNDEFINED_OPERATOR: SchedulingNodeAffinity.Operator.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    IN: SchedulingNodeAffinity.Operator.ValueType = ...  # 2341
    """Requires Compute Engine to seek for matched nodes."""

    NOT_IN: SchedulingNodeAffinity.Operator.ValueType = ...  # 161144369
    """Requires Compute Engine to avoid certain nodes."""

    OPERATOR_UNSPECIFIED: SchedulingNodeAffinity.Operator.ValueType = ...  # 128892924

    KEY_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    key: typing.Text = ...
    """Corresponds to the label key of Node resource."""

    operator: typing.Text = ...
    """Defines the operation of node selection. Valid operators are IN for affinity and NOT_IN for anti-affinity.
    Check the Operator enum for the list of possible values.
    """

    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Corresponds to the label values of Node resource."""
        pass
    def __init__(self,
        *,
        key : typing.Optional[typing.Text] = ...,
        operator : typing.Optional[typing.Text] = ...,
        values : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_key",b"_key","_operator",b"_operator","key",b"key","operator",b"operator"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_key",b"_key","_operator",b"_operator","key",b"key","operator",b"operator","values",b"values"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_key",b"_key"]) -> typing.Optional[typing_extensions.Literal["key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_operator",b"_operator"]) -> typing.Optional[typing_extensions.Literal["operator"]]: ...
global___SchedulingNodeAffinity = SchedulingNodeAffinity

class ScratchDisks(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_GB_FIELD_NUMBER: builtins.int
    disk_gb: builtins.int = ...
    """Size of the scratch disk, defined in GB."""

    def __init__(self,
        *,
        disk_gb : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_disk_gb",b"_disk_gb","disk_gb",b"disk_gb"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_disk_gb",b"_disk_gb","disk_gb",b"disk_gb"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_gb",b"_disk_gb"]) -> typing.Optional[typing_extensions.Literal["disk_gb"]]: ...
global___ScratchDisks = ScratchDisks

class Screenshot(google.protobuf.message.Message):
    """An instance's screenshot."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTENTS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    contents: typing.Text = ...
    """[Output Only] The Base64-encoded screenshot data."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#screenshot for the screenshots."""

    def __init__(self,
        *,
        contents : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_contents",b"_contents","_kind",b"_kind","contents",b"contents","kind",b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_contents",b"_contents","_kind",b"_kind","contents",b"contents","kind",b"kind"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_contents",b"_contents"]) -> typing.Optional[typing_extensions.Literal["contents"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
global___Screenshot = Screenshot

class SecurityPoliciesListPreconfiguredExpressionSetsResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRECONFIGURED_EXPRESSION_SETS_FIELD_NUMBER: builtins.int
    @property
    def preconfigured_expression_sets(self) -> global___SecurityPoliciesWafConfig: ...
    def __init__(self,
        *,
        preconfigured_expression_sets : typing.Optional[global___SecurityPoliciesWafConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_preconfigured_expression_sets",b"_preconfigured_expression_sets","preconfigured_expression_sets",b"preconfigured_expression_sets"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_preconfigured_expression_sets",b"_preconfigured_expression_sets","preconfigured_expression_sets",b"preconfigured_expression_sets"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preconfigured_expression_sets",b"_preconfigured_expression_sets"]) -> typing.Optional[typing_extensions.Literal["preconfigured_expression_sets"]]: ...
global___SecurityPoliciesListPreconfiguredExpressionSetsResponse = SecurityPoliciesListPreconfiguredExpressionSetsResponse

class SecurityPoliciesWafConfig(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    WAF_RULES_FIELD_NUMBER: builtins.int
    @property
    def waf_rules(self) -> global___PreconfiguredWafSet: ...
    def __init__(self,
        *,
        waf_rules : typing.Optional[global___PreconfiguredWafSet] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_waf_rules",b"_waf_rules","waf_rules",b"waf_rules"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_waf_rules",b"_waf_rules","waf_rules",b"waf_rules"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_waf_rules",b"_waf_rules"]) -> typing.Optional[typing_extensions.Literal["waf_rules"]]: ...
global___SecurityPoliciesWafConfig = SecurityPoliciesWafConfig

class SecurityPolicy(google.protobuf.message.Message):
    """Represents a Google Cloud Armor security policy resource. Only external backend services that use load balancers can reference a security policy. For more information, see Google Cloud Armor security policy overview."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ADAPTIVE_PROTECTION_CONFIG_FIELD_NUMBER: builtins.int
    ADVANCED_OPTIONS_CONFIG_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    @property
    def adaptive_protection_config(self) -> global___SecurityPolicyAdaptiveProtectionConfig: ...
    @property
    def advanced_options_config(self) -> global___SecurityPolicyAdvancedOptionsConfig: ...
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    fingerprint: typing.Text = ...
    """Specifies a fingerprint for this resource, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make get() request to the security policy."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output only] Type of the resource. Always compute#securityPolicyfor security policies"""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SecurityPolicyRule]:
        """A list of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    def __init__(self,
        *,
        adaptive_protection_config : typing.Optional[global___SecurityPolicyAdaptiveProtectionConfig] = ...,
        advanced_options_config : typing.Optional[global___SecurityPolicyAdvancedOptionsConfig] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        rules : typing.Optional[typing.Iterable[global___SecurityPolicyRule]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_adaptive_protection_config",b"_adaptive_protection_config","_advanced_options_config",b"_advanced_options_config","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","adaptive_protection_config",b"adaptive_protection_config","advanced_options_config",b"advanced_options_config","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_adaptive_protection_config",b"_adaptive_protection_config","_advanced_options_config",b"_advanced_options_config","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","adaptive_protection_config",b"adaptive_protection_config","advanced_options_config",b"advanced_options_config","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","rules",b"rules","self_link",b"self_link"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_adaptive_protection_config",b"_adaptive_protection_config"]) -> typing.Optional[typing_extensions.Literal["adaptive_protection_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_advanced_options_config",b"_advanced_options_config"]) -> typing.Optional[typing_extensions.Literal["advanced_options_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___SecurityPolicy = SecurityPolicy

class SecurityPolicyAdaptiveProtectionConfig(google.protobuf.message.Message):
    """Configuration options for Cloud Armor Adaptive Protection (CAAP)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAYER7_DDOS_DEFENSE_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def layer7_ddos_defense_config(self) -> global___SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig:
        """If set to true, enables Cloud Armor Machine Learning."""
        pass
    def __init__(self,
        *,
        layer7_ddos_defense_config : typing.Optional[global___SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_layer7_ddos_defense_config",b"_layer7_ddos_defense_config","layer7_ddos_defense_config",b"layer7_ddos_defense_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_layer7_ddos_defense_config",b"_layer7_ddos_defense_config","layer7_ddos_defense_config",b"layer7_ddos_defense_config"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_layer7_ddos_defense_config",b"_layer7_ddos_defense_config"]) -> typing.Optional[typing_extensions.Literal["layer7_ddos_defense_config"]]: ...
global___SecurityPolicyAdaptiveProtectionConfig = SecurityPolicyAdaptiveProtectionConfig

class SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig(google.protobuf.message.Message):
    """Configuration options for L7 DDoS detection."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _RuleVisibility:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RuleVisibilityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RuleVisibility.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_RULE_VISIBILITY: SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig.RuleVisibility.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        PREMIUM: SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig.RuleVisibility.ValueType = ...  # 399530551
        STANDARD: SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig.RuleVisibility.ValueType = ...  # 484642493
    class RuleVisibility(_RuleVisibility, metaclass=_RuleVisibilityEnumTypeWrapper):
        """Rule visibility can be one of the following: STANDARD - opaque rules. (default) PREMIUM - transparent rules."""
        pass

    UNDEFINED_RULE_VISIBILITY: SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig.RuleVisibility.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    PREMIUM: SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig.RuleVisibility.ValueType = ...  # 399530551
    STANDARD: SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig.RuleVisibility.ValueType = ...  # 484642493

    ENABLE_FIELD_NUMBER: builtins.int
    RULE_VISIBILITY_FIELD_NUMBER: builtins.int
    enable: builtins.bool = ...
    """If set to true, enables CAAP for L7 DDoS detection."""

    rule_visibility: typing.Text = ...
    """Rule visibility can be one of the following: STANDARD - opaque rules. (default) PREMIUM - transparent rules.
    Check the RuleVisibility enum for the list of possible values.
    """

    def __init__(self,
        *,
        enable : typing.Optional[builtins.bool] = ...,
        rule_visibility : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enable",b"_enable","_rule_visibility",b"_rule_visibility","enable",b"enable","rule_visibility",b"rule_visibility"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enable",b"_enable","_rule_visibility",b"_rule_visibility","enable",b"enable","rule_visibility",b"rule_visibility"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable",b"_enable"]) -> typing.Optional[typing_extensions.Literal["enable"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_rule_visibility",b"_rule_visibility"]) -> typing.Optional[typing_extensions.Literal["rule_visibility"]]: ...
global___SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig = SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig

class SecurityPolicyAdvancedOptionsConfig(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _JsonParsing:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _JsonParsingEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_JsonParsing.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_JSON_PARSING: SecurityPolicyAdvancedOptionsConfig.JsonParsing.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DISABLED: SecurityPolicyAdvancedOptionsConfig.JsonParsing.ValueType = ...  # 516696700
        STANDARD: SecurityPolicyAdvancedOptionsConfig.JsonParsing.ValueType = ...  # 484642493
    class JsonParsing(_JsonParsing, metaclass=_JsonParsingEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_JSON_PARSING: SecurityPolicyAdvancedOptionsConfig.JsonParsing.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DISABLED: SecurityPolicyAdvancedOptionsConfig.JsonParsing.ValueType = ...  # 516696700
    STANDARD: SecurityPolicyAdvancedOptionsConfig.JsonParsing.ValueType = ...  # 484642493

    class _LogLevel:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LogLevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_LogLevel.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_LOG_LEVEL: SecurityPolicyAdvancedOptionsConfig.LogLevel.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NORMAL: SecurityPolicyAdvancedOptionsConfig.LogLevel.ValueType = ...  # 161067239
        VERBOSE: SecurityPolicyAdvancedOptionsConfig.LogLevel.ValueType = ...  # 532219234
    class LogLevel(_LogLevel, metaclass=_LogLevelEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_LOG_LEVEL: SecurityPolicyAdvancedOptionsConfig.LogLevel.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NORMAL: SecurityPolicyAdvancedOptionsConfig.LogLevel.ValueType = ...  # 161067239
    VERBOSE: SecurityPolicyAdvancedOptionsConfig.LogLevel.ValueType = ...  # 532219234

    JSON_PARSING_FIELD_NUMBER: builtins.int
    LOG_LEVEL_FIELD_NUMBER: builtins.int
    json_parsing: typing.Text = ...
    """
    Check the JsonParsing enum for the list of possible values.
    """

    log_level: typing.Text = ...
    """
    Check the LogLevel enum for the list of possible values.
    """

    def __init__(self,
        *,
        json_parsing : typing.Optional[typing.Text] = ...,
        log_level : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_json_parsing",b"_json_parsing","_log_level",b"_log_level","json_parsing",b"json_parsing","log_level",b"log_level"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_json_parsing",b"_json_parsing","_log_level",b"_log_level","json_parsing",b"json_parsing","log_level",b"log_level"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_json_parsing",b"_json_parsing"]) -> typing.Optional[typing_extensions.Literal["json_parsing"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_log_level",b"_log_level"]) -> typing.Optional[typing_extensions.Literal["log_level"]]: ...
global___SecurityPolicyAdvancedOptionsConfig = SecurityPolicyAdvancedOptionsConfig

class SecurityPolicyList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SecurityPolicy]:
        """A list of SecurityPolicy resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#securityPolicyList for listsof securityPolicies"""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___SecurityPolicy]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___SecurityPolicyList = SecurityPolicyList

class SecurityPolicyReference(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SECURITY_POLICY_FIELD_NUMBER: builtins.int
    security_policy: typing.Text = ...
    def __init__(self,
        *,
        security_policy : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_security_policy",b"_security_policy","security_policy",b"security_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_security_policy",b"_security_policy","security_policy",b"security_policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_security_policy",b"_security_policy"]) -> typing.Optional[typing_extensions.Literal["security_policy"]]: ...
global___SecurityPolicyReference = SecurityPolicyReference

class SecurityPolicyRule(google.protobuf.message.Message):
    """Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACTION_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    MATCH_FIELD_NUMBER: builtins.int
    PREVIEW_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    action: typing.Text = ...
    """The Action to perform when the client connection triggers the rule. Can currently be either "allow" or "deny()" where valid values for status are 403, 404, and 502."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    kind: typing.Text = ...
    """[Output only] Type of the resource. Always compute#securityPolicyRule for security policy rules"""

    @property
    def match(self) -> global___SecurityPolicyRuleMatcher:
        """A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced."""
        pass
    preview: builtins.bool = ...
    """If set to true, the specified action is not enforced."""

    priority: builtins.int = ...
    """An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority."""

    def __init__(self,
        *,
        action : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        match : typing.Optional[global___SecurityPolicyRuleMatcher] = ...,
        preview : typing.Optional[builtins.bool] = ...,
        priority : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_action",b"_action","_description",b"_description","_kind",b"_kind","_match",b"_match","_preview",b"_preview","_priority",b"_priority","action",b"action","description",b"description","kind",b"kind","match",b"match","preview",b"preview","priority",b"priority"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_action",b"_action","_description",b"_description","_kind",b"_kind","_match",b"_match","_preview",b"_preview","_priority",b"_priority","action",b"action","description",b"description","kind",b"kind","match",b"match","preview",b"preview","priority",b"priority"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_action",b"_action"]) -> typing.Optional[typing_extensions.Literal["action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_match",b"_match"]) -> typing.Optional[typing_extensions.Literal["match"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preview",b"_preview"]) -> typing.Optional[typing_extensions.Literal["preview"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_priority",b"_priority"]) -> typing.Optional[typing_extensions.Literal["priority"]]: ...
global___SecurityPolicyRule = SecurityPolicyRule

class SecurityPolicyRuleMatcher(google.protobuf.message.Message):
    """Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _VersionedExpr:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _VersionedExprEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VersionedExpr.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_VERSIONED_EXPR: SecurityPolicyRuleMatcher.VersionedExpr.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        SRC_IPS_V1: SecurityPolicyRuleMatcher.VersionedExpr.ValueType = ...  # 70925961
        """Matches the source IP address of a request to the IP ranges supplied in config."""

    class VersionedExpr(_VersionedExpr, metaclass=_VersionedExprEnumTypeWrapper):
        """Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config."""
        pass

    UNDEFINED_VERSIONED_EXPR: SecurityPolicyRuleMatcher.VersionedExpr.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    SRC_IPS_V1: SecurityPolicyRuleMatcher.VersionedExpr.ValueType = ...  # 70925961
    """Matches the source IP address of a request to the IP ranges supplied in config."""


    CONFIG_FIELD_NUMBER: builtins.int
    EXPR_FIELD_NUMBER: builtins.int
    VERSIONED_EXPR_FIELD_NUMBER: builtins.int
    @property
    def config(self) -> global___SecurityPolicyRuleMatcherConfig:
        """The configuration options available when specifying versioned_expr. This field must be specified if versioned_expr is specified and cannot be specified if versioned_expr is not specified."""
        pass
    @property
    def expr(self) -> global___Expr:
        """User defined CEVAL expression. A CEVAL expression is used to specify match criteria such as origin.ip, source.region_code and contents in the request header."""
        pass
    versioned_expr: typing.Text = ...
    """Preconfigured versioned expression. If this field is specified, config must also be specified. Available preconfigured expressions along with their requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range field in config.
    Check the VersionedExpr enum for the list of possible values.
    """

    def __init__(self,
        *,
        config : typing.Optional[global___SecurityPolicyRuleMatcherConfig] = ...,
        expr : typing.Optional[global___Expr] = ...,
        versioned_expr : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_config",b"_config","_expr",b"_expr","_versioned_expr",b"_versioned_expr","config",b"config","expr",b"expr","versioned_expr",b"versioned_expr"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_config",b"_config","_expr",b"_expr","_versioned_expr",b"_versioned_expr","config",b"config","expr",b"expr","versioned_expr",b"versioned_expr"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_config",b"_config"]) -> typing.Optional[typing_extensions.Literal["config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_expr",b"_expr"]) -> typing.Optional[typing_extensions.Literal["expr"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_versioned_expr",b"_versioned_expr"]) -> typing.Optional[typing_extensions.Literal["versioned_expr"]]: ...
global___SecurityPolicyRuleMatcher = SecurityPolicyRuleMatcher

class SecurityPolicyRuleMatcherConfig(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SRC_IP_RANGES_FIELD_NUMBER: builtins.int
    @property
    def src_ip_ranges(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """CIDR IP address range. Maximum number of src_ip_ranges allowed is 10."""
        pass
    def __init__(self,
        *,
        src_ip_ranges : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["src_ip_ranges",b"src_ip_ranges"]) -> None: ...
global___SecurityPolicyRuleMatcherConfig = SecurityPolicyRuleMatcherConfig

class SecuritySettings(google.protobuf.message.Message):
    """The authentication and authorization settings for a BackendService."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLIENT_TLS_POLICY_FIELD_NUMBER: builtins.int
    SUBJECT_ALT_NAMES_FIELD_NUMBER: builtins.int
    client_tls_policy: typing.Text = ...
    """Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends. clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted. Note: This field currently has no impact."""

    @property
    def subject_alt_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service. Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities. Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode). Note: This field currently has no impact."""
        pass
    def __init__(self,
        *,
        client_tls_policy : typing.Optional[typing.Text] = ...,
        subject_alt_names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_client_tls_policy",b"_client_tls_policy","client_tls_policy",b"client_tls_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_client_tls_policy",b"_client_tls_policy","client_tls_policy",b"client_tls_policy","subject_alt_names",b"subject_alt_names"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_client_tls_policy",b"_client_tls_policy"]) -> typing.Optional[typing_extensions.Literal["client_tls_policy"]]: ...
global___SecuritySettings = SecuritySettings

class SendDiagnosticInterruptInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SendDiagnosticInterrupt. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance",b"instance","project",b"project","zone",b"zone"]) -> None: ...
global___SendDiagnosticInterruptInstanceRequest = SendDiagnosticInterruptInstanceRequest

class SendDiagnosticInterruptInstanceResponse(google.protobuf.message.Message):
    """A response message for Instances.SendDiagnosticInterrupt. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___SendDiagnosticInterruptInstanceResponse = SendDiagnosticInterruptInstanceResponse

class SerialPortOutput(google.protobuf.message.Message):
    """An instance serial console output."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONTENTS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    contents: typing.Text = ...
    """[Output Only] The contents of the console output."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#serialPortOutput for serial port output."""

    next: builtins.int = ...
    """[Output Only] The position of the next byte of content, regardless of whether the content exists, following the output returned in the `contents` property. Use this value in the next request as the start parameter."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    start: builtins.int = ...
    """The starting byte position of the output that was returned. This should match the start parameter sent with the request. If the serial console output exceeds the size of the buffer (1 MB), older output is overwritten by newer content. The output start value will indicate the byte position of the output that was returned, which might be different than the `start` value that was specified in the request."""

    def __init__(self,
        *,
        contents : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next : typing.Optional[builtins.int] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        start : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_contents",b"_contents","_kind",b"_kind","_next",b"_next","_self_link",b"_self_link","_start",b"_start","contents",b"contents","kind",b"kind","next",b"next","self_link",b"self_link","start",b"start"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_contents",b"_contents","_kind",b"_kind","_next",b"_next","_self_link",b"_self_link","_start",b"_start","contents",b"contents","kind",b"kind","next",b"next","self_link",b"self_link","start",b"start"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_contents",b"_contents"]) -> typing.Optional[typing_extensions.Literal["contents"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next",b"_next"]) -> typing.Optional[typing_extensions.Literal["next"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start",b"_start"]) -> typing.Optional[typing_extensions.Literal["start"]]: ...
global___SerialPortOutput = SerialPortOutput

class ServerBinding(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: ServerBinding.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        RESTART_NODE_ON_ANY_SERVER: ServerBinding.Type.ValueType = ...  # 502950985
        """Node may associate with any physical server over its lifetime."""

        RESTART_NODE_ON_MINIMAL_SERVERS: ServerBinding.Type.ValueType = ...  # 204166495
        """Node may associate with minimal physical servers over its lifetime."""

        SERVER_BINDING_TYPE_UNSPECIFIED: ServerBinding.Type.ValueType = ...  # 180825512
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_TYPE: ServerBinding.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    RESTART_NODE_ON_ANY_SERVER: ServerBinding.Type.ValueType = ...  # 502950985
    """Node may associate with any physical server over its lifetime."""

    RESTART_NODE_ON_MINIMAL_SERVERS: ServerBinding.Type.ValueType = ...  # 204166495
    """Node may associate with minimal physical servers over its lifetime."""

    SERVER_BINDING_TYPE_UNSPECIFIED: ServerBinding.Type.ValueType = ...  # 180825512

    TYPE_FIELD_NUMBER: builtins.int
    type: typing.Text = ...
    """
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_type",b"_type","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_type",b"_type","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___ServerBinding = ServerBinding

class ServiceAccount(google.protobuf.message.Message):
    """A service account."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EMAIL_FIELD_NUMBER: builtins.int
    SCOPES_FIELD_NUMBER: builtins.int
    email: typing.Text = ...
    """Email address of the service account."""

    @property
    def scopes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The list of scopes to be made available for this service account."""
        pass
    def __init__(self,
        *,
        email : typing.Optional[typing.Text] = ...,
        scopes : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_email",b"_email","email",b"email"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_email",b"_email","email",b"email","scopes",b"scopes"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_email",b"_email"]) -> typing.Optional[typing_extensions.Literal["email"]]: ...
global___ServiceAccount = ServiceAccount

class ServiceAttachment(google.protobuf.message.Message):
    """Represents a ServiceAttachment resource. A service attachment represents a service that a producer has exposed. It encapsulates the load balancer which fronts the service runs and a list of NAT IP ranges that the producers uses to represent the consumers connecting to the service. next tag = 20"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ConnectionPreference:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ConnectionPreferenceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ConnectionPreference.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CONNECTION_PREFERENCE: ServiceAttachment.ConnectionPreference.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACCEPT_AUTOMATIC: ServiceAttachment.ConnectionPreference.ValueType = ...  # 75250580
        ACCEPT_MANUAL: ServiceAttachment.ConnectionPreference.ValueType = ...  # 373061341
        CONNECTION_PREFERENCE_UNSPECIFIED: ServiceAttachment.ConnectionPreference.ValueType = ...  # 34590772
    class ConnectionPreference(_ConnectionPreference, metaclass=_ConnectionPreferenceEnumTypeWrapper):
        """The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules."""
        pass

    UNDEFINED_CONNECTION_PREFERENCE: ServiceAttachment.ConnectionPreference.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACCEPT_AUTOMATIC: ServiceAttachment.ConnectionPreference.ValueType = ...  # 75250580
    ACCEPT_MANUAL: ServiceAttachment.ConnectionPreference.ValueType = ...  # 373061341
    CONNECTION_PREFERENCE_UNSPECIFIED: ServiceAttachment.ConnectionPreference.ValueType = ...  # 34590772

    CONNECTED_ENDPOINTS_FIELD_NUMBER: builtins.int
    CONNECTION_PREFERENCE_FIELD_NUMBER: builtins.int
    CONSUMER_ACCEPT_LISTS_FIELD_NUMBER: builtins.int
    CONSUMER_REJECT_LISTS_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ENABLE_PROXY_PROTOCOL_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NAT_SUBNETS_FIELD_NUMBER: builtins.int
    PRODUCER_FORWARDING_RULE_FIELD_NUMBER: builtins.int
    PSC_SERVICE_ATTACHMENT_ID_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    TARGET_SERVICE_FIELD_NUMBER: builtins.int
    @property
    def connected_endpoints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServiceAttachmentConnectedEndpoint]:
        """[Output Only] An array of connections for all the consumers connected to this service attachment."""
        pass
    connection_preference: typing.Text = ...
    """The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
    Check the ConnectionPreference enum for the list of possible values.
    """

    @property
    def consumer_accept_lists(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServiceAttachmentConsumerProjectLimit]:
        """Projects that are allowed to connect to this service attachment."""
        pass
    @property
    def consumer_reject_lists(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Projects that are not allowed to connect to this service attachment. The project can be specified using its id or number."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    enable_proxy_protocol: builtins.bool = ...
    """If true, enable the proxy protocol which is for supplying client TCP/IP address data in TCP connections that traverse proxies on their way to destination servers."""

    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a ServiceAttachment. An up-to-date fingerprint must be provided in order to patch/update the ServiceAttachment; otherwise, the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the ServiceAttachment."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource type. The server generates this identifier."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#serviceAttachment for service attachments."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def nat_subnets(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An array of URLs where each entry is the URL of a subnet provided by the service producer to use for NAT in this service attachment."""
        pass
    producer_forwarding_rule: typing.Text = ...
    """The URL of a forwarding rule with loadBalancingScheme INTERNAL* that is serving the endpoint identified by this service attachment."""

    @property
    def psc_service_attachment_id(self) -> global___Uint128:
        """[Output Only] An 128-bit global unique ID of the PSC service attachment."""
        pass
    region: typing.Text = ...
    """[Output Only] URL of the region where the service attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    target_service: typing.Text = ...
    """The URL of a service serving the endpoint identified by this service attachment."""

    def __init__(self,
        *,
        connected_endpoints : typing.Optional[typing.Iterable[global___ServiceAttachmentConnectedEndpoint]] = ...,
        connection_preference : typing.Optional[typing.Text] = ...,
        consumer_accept_lists : typing.Optional[typing.Iterable[global___ServiceAttachmentConsumerProjectLimit]] = ...,
        consumer_reject_lists : typing.Optional[typing.Iterable[typing.Text]] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        enable_proxy_protocol : typing.Optional[builtins.bool] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        nat_subnets : typing.Optional[typing.Iterable[typing.Text]] = ...,
        producer_forwarding_rule : typing.Optional[typing.Text] = ...,
        psc_service_attachment_id : typing.Optional[global___Uint128] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        target_service : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_connection_preference",b"_connection_preference","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_enable_proxy_protocol",b"_enable_proxy_protocol","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_producer_forwarding_rule",b"_producer_forwarding_rule","_psc_service_attachment_id",b"_psc_service_attachment_id","_region",b"_region","_self_link",b"_self_link","_target_service",b"_target_service","connection_preference",b"connection_preference","creation_timestamp",b"creation_timestamp","description",b"description","enable_proxy_protocol",b"enable_proxy_protocol","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","producer_forwarding_rule",b"producer_forwarding_rule","psc_service_attachment_id",b"psc_service_attachment_id","region",b"region","self_link",b"self_link","target_service",b"target_service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_connection_preference",b"_connection_preference","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_enable_proxy_protocol",b"_enable_proxy_protocol","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_producer_forwarding_rule",b"_producer_forwarding_rule","_psc_service_attachment_id",b"_psc_service_attachment_id","_region",b"_region","_self_link",b"_self_link","_target_service",b"_target_service","connected_endpoints",b"connected_endpoints","connection_preference",b"connection_preference","consumer_accept_lists",b"consumer_accept_lists","consumer_reject_lists",b"consumer_reject_lists","creation_timestamp",b"creation_timestamp","description",b"description","enable_proxy_protocol",b"enable_proxy_protocol","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","nat_subnets",b"nat_subnets","producer_forwarding_rule",b"producer_forwarding_rule","psc_service_attachment_id",b"psc_service_attachment_id","region",b"region","self_link",b"self_link","target_service",b"target_service"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_connection_preference",b"_connection_preference"]) -> typing.Optional[typing_extensions.Literal["connection_preference"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_proxy_protocol",b"_enable_proxy_protocol"]) -> typing.Optional[typing_extensions.Literal["enable_proxy_protocol"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_producer_forwarding_rule",b"_producer_forwarding_rule"]) -> typing.Optional[typing_extensions.Literal["producer_forwarding_rule"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_psc_service_attachment_id",b"_psc_service_attachment_id"]) -> typing.Optional[typing_extensions.Literal["psc_service_attachment_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_service",b"_target_service"]) -> typing.Optional[typing_extensions.Literal["target_service"]]: ...
global___ServiceAttachment = ServiceAttachment

class ServiceAttachmentAggregatedList(google.protobuf.message.Message):
    """Contains a list of ServiceAttachmentsScopedList."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___ServiceAttachmentsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___ServiceAttachmentsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ServiceAttachmentsScopedList]:
        """A list of ServiceAttachmentsScopedList resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___ServiceAttachmentsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ServiceAttachmentAggregatedList = ServiceAttachmentAggregatedList

class ServiceAttachmentConnectedEndpoint(google.protobuf.message.Message):
    """[Output Only] A connection connected to this service attachment."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACCEPTED: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 246714279
        """The connection has been accepted by the producer."""

        CLOSED: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 380163436
        """The connection has been closed by the producer."""

        PENDING: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 35394935
        """The connection is pending acceptance by the producer."""

        REJECTED: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 174130302
        """The consumer is still connected but not using the connection."""

        STATUS_UNSPECIFIED: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 42133066
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """The status of a connected endpoint to this service attachment."""
        pass

    UNDEFINED_STATUS: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACCEPTED: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 246714279
    """The connection has been accepted by the producer."""

    CLOSED: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 380163436
    """The connection has been closed by the producer."""

    PENDING: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 35394935
    """The connection is pending acceptance by the producer."""

    REJECTED: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 174130302
    """The consumer is still connected but not using the connection."""

    STATUS_UNSPECIFIED: ServiceAttachmentConnectedEndpoint.Status.ValueType = ...  # 42133066

    ENDPOINT_FIELD_NUMBER: builtins.int
    PSC_CONNECTION_ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    endpoint: typing.Text = ...
    """The url of a connected endpoint."""

    psc_connection_id: builtins.int = ...
    """The PSC connection id of the connected endpoint."""

    status: typing.Text = ...
    """The status of a connected endpoint to this service attachment.
    Check the Status enum for the list of possible values.
    """

    def __init__(self,
        *,
        endpoint : typing.Optional[typing.Text] = ...,
        psc_connection_id : typing.Optional[builtins.int] = ...,
        status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_endpoint",b"_endpoint","_psc_connection_id",b"_psc_connection_id","_status",b"_status","endpoint",b"endpoint","psc_connection_id",b"psc_connection_id","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_endpoint",b"_endpoint","_psc_connection_id",b"_psc_connection_id","_status",b"_status","endpoint",b"endpoint","psc_connection_id",b"psc_connection_id","status",b"status"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_endpoint",b"_endpoint"]) -> typing.Optional[typing_extensions.Literal["endpoint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_psc_connection_id",b"_psc_connection_id"]) -> typing.Optional[typing_extensions.Literal["psc_connection_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___ServiceAttachmentConnectedEndpoint = ServiceAttachmentConnectedEndpoint

class ServiceAttachmentConsumerProjectLimit(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONNECTION_LIMIT_FIELD_NUMBER: builtins.int
    PROJECT_ID_OR_NUM_FIELD_NUMBER: builtins.int
    connection_limit: builtins.int = ...
    """The value of the limit to set."""

    project_id_or_num: typing.Text = ...
    """The project id or number for the project to set the limit for."""

    def __init__(self,
        *,
        connection_limit : typing.Optional[builtins.int] = ...,
        project_id_or_num : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_connection_limit",b"_connection_limit","_project_id_or_num",b"_project_id_or_num","connection_limit",b"connection_limit","project_id_or_num",b"project_id_or_num"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_connection_limit",b"_connection_limit","_project_id_or_num",b"_project_id_or_num","connection_limit",b"connection_limit","project_id_or_num",b"project_id_or_num"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_connection_limit",b"_connection_limit"]) -> typing.Optional[typing_extensions.Literal["connection_limit"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_project_id_or_num",b"_project_id_or_num"]) -> typing.Optional[typing_extensions.Literal["project_id_or_num"]]: ...
global___ServiceAttachmentConsumerProjectLimit = ServiceAttachmentConsumerProjectLimit

class ServiceAttachmentList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServiceAttachment]:
        """A list of ServiceAttachment resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#serviceAttachment for service attachments."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___ServiceAttachment]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ServiceAttachmentList = ServiceAttachmentList

class ServiceAttachmentsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_ATTACHMENTS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def service_attachments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ServiceAttachment]:
        """A list of ServiceAttachments contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of service attachments when the list is empty."""
        pass
    def __init__(self,
        *,
        service_attachments : typing.Optional[typing.Iterable[global___ServiceAttachment]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","service_attachments",b"service_attachments","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ServiceAttachmentsScopedList = ServiceAttachmentsScopedList

class SetBackendServiceTargetSslProxyRequest(google.protobuf.message.Message):
    """A request message for TargetSslProxies.SetBackendService. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_SSL_PROXIES_SET_BACKEND_SERVICE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    TARGET_SSL_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_ssl_proxies_set_backend_service_request_resource(self) -> global___TargetSslProxiesSetBackendServiceRequest:
        """The body resource for this request"""
        pass
    target_ssl_proxy: typing.Text = ...
    """Name of the TargetSslProxy resource whose BackendService resource is to be set."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_ssl_proxies_set_backend_service_request_resource : typing.Optional[global___TargetSslProxiesSetBackendServiceRequest] = ...,
        target_ssl_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_ssl_proxies_set_backend_service_request_resource",b"target_ssl_proxies_set_backend_service_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_ssl_proxies_set_backend_service_request_resource",b"target_ssl_proxies_set_backend_service_request_resource","target_ssl_proxy",b"target_ssl_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetBackendServiceTargetSslProxyRequest = SetBackendServiceTargetSslProxyRequest

class SetBackendServiceTargetTcpProxyRequest(google.protobuf.message.Message):
    """A request message for TargetTcpProxies.SetBackendService. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_TCP_PROXIES_SET_BACKEND_SERVICE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    TARGET_TCP_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_tcp_proxies_set_backend_service_request_resource(self) -> global___TargetTcpProxiesSetBackendServiceRequest:
        """The body resource for this request"""
        pass
    target_tcp_proxy: typing.Text = ...
    """Name of the TargetTcpProxy resource whose BackendService resource is to be set."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_tcp_proxies_set_backend_service_request_resource : typing.Optional[global___TargetTcpProxiesSetBackendServiceRequest] = ...,
        target_tcp_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_tcp_proxies_set_backend_service_request_resource",b"target_tcp_proxies_set_backend_service_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_tcp_proxies_set_backend_service_request_resource",b"target_tcp_proxies_set_backend_service_request_resource","target_tcp_proxy",b"target_tcp_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetBackendServiceTargetTcpProxyRequest = SetBackendServiceTargetTcpProxyRequest

class SetBackupTargetPoolRequest(google.protobuf.message.Message):
    """A request message for TargetPools.SetBackup. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FAILOVER_RATIO_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_POOL_FIELD_NUMBER: builtins.int
    TARGET_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    failover_ratio: builtins.float = ...
    """New failoverRatio value for the target pool."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_pool: typing.Text = ...
    """Name of the TargetPool resource to set a backup pool for."""

    @property
    def target_reference_resource(self) -> global___TargetReference:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        failover_ratio : typing.Optional[builtins.float] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_pool : typing.Text = ...,
        target_reference_resource : typing.Optional[global___TargetReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_failover_ratio",b"_failover_ratio","_request_id",b"_request_id","failover_ratio",b"failover_ratio","request_id",b"request_id","target_reference_resource",b"target_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_failover_ratio",b"_failover_ratio","_request_id",b"_request_id","failover_ratio",b"failover_ratio","project",b"project","region",b"region","request_id",b"request_id","target_pool",b"target_pool","target_reference_resource",b"target_reference_resource"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_failover_ratio",b"_failover_ratio"]) -> typing.Optional[typing_extensions.Literal["failover_ratio"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetBackupTargetPoolRequest = SetBackupTargetPoolRequest

class SetCommonInstanceMetadataProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.SetCommonInstanceMetadata. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    METADATA_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    @property
    def metadata_resource(self) -> global___Metadata:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        metadata_resource : typing.Optional[global___Metadata] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","metadata_resource",b"metadata_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","metadata_resource",b"metadata_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetCommonInstanceMetadataProjectRequest = SetCommonInstanceMetadataProjectRequest

class SetDefaultNetworkTierProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.SetDefaultNetworkTier. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    PROJECTS_SET_DEFAULT_NETWORK_TIER_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    @property
    def projects_set_default_network_tier_request_resource(self) -> global___ProjectsSetDefaultNetworkTierRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        projects_set_default_network_tier_request_resource : typing.Optional[global___ProjectsSetDefaultNetworkTierRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","projects_set_default_network_tier_request_resource",b"projects_set_default_network_tier_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","projects_set_default_network_tier_request_resource",b"projects_set_default_network_tier_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetDefaultNetworkTierProjectRequest = SetDefaultNetworkTierProjectRequest

class SetDeletionProtectionInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetDeletionProtection. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DELETION_PROTECTION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    deletion_protection: builtins.bool = ...
    """Whether the resource should be protected against deletion."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        deletion_protection : typing.Optional[builtins.bool] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        resource : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_deletion_protection",b"_deletion_protection","_request_id",b"_request_id","deletion_protection",b"deletion_protection","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_deletion_protection",b"_deletion_protection","_request_id",b"_request_id","deletion_protection",b"deletion_protection","project",b"project","request_id",b"request_id","resource",b"resource","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deletion_protection",b"_deletion_protection"]) -> typing.Optional[typing_extensions.Literal["deletion_protection"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetDeletionProtectionInstanceRequest = SetDeletionProtectionInstanceRequest

class SetDiskAutoDeleteInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetDiskAutoDelete. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTO_DELETE_FIELD_NUMBER: builtins.int
    DEVICE_NAME_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    auto_delete: builtins.bool = ...
    """Whether to auto-delete the disk when the instance is deleted."""

    device_name: typing.Text = ...
    """The device name of the disk to modify. Make a get() request on the instance to view currently attached disks and device names."""

    instance: typing.Text = ...
    """The instance name for this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        auto_delete : builtins.bool = ...,
        device_name : typing.Text = ...,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","auto_delete",b"auto_delete","device_name",b"device_name","instance",b"instance","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetDiskAutoDeleteInstanceRequest = SetDiskAutoDeleteInstanceRequest

class SetIamPolicyDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    ZONE_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    @property
    def zone_set_policy_request_resource(self) -> global___ZoneSetPolicyRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        zone : typing.Text = ...,
        zone_set_policy_request_resource : typing.Optional[global___ZoneSetPolicyRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["zone_set_policy_request_resource",b"zone_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","zone",b"zone","zone_set_policy_request_resource",b"zone_set_policy_request_resource"]) -> None: ...
global___SetIamPolicyDiskRequest = SetIamPolicyDiskRequest

class SetIamPolicyFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_ORGANIZATION_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def global_organization_set_policy_request_resource(self) -> global___GlobalOrganizationSetPolicyRequest:
        """The body resource for this request"""
        pass
    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        global_organization_set_policy_request_resource : typing.Optional[global___GlobalOrganizationSetPolicyRequest] = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["global_organization_set_policy_request_resource",b"global_organization_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["global_organization_set_policy_request_resource",b"global_organization_set_policy_request_resource","resource",b"resource"]) -> None: ...
global___SetIamPolicyFirewallPolicyRequest = SetIamPolicyFirewallPolicyRequest

class SetIamPolicyImageRequest(google.protobuf.message.Message):
    """A request message for Images.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def global_set_policy_request_resource(self) -> global___GlobalSetPolicyRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        global_set_policy_request_resource : typing.Optional[global___GlobalSetPolicyRequest] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["global_set_policy_request_resource",b"global_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["global_set_policy_request_resource",b"global_set_policy_request_resource","project",b"project","resource",b"resource"]) -> None: ...
global___SetIamPolicyImageRequest = SetIamPolicyImageRequest

class SetIamPolicyInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    ZONE_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    @property
    def zone_set_policy_request_resource(self) -> global___ZoneSetPolicyRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        zone : typing.Text = ...,
        zone_set_policy_request_resource : typing.Optional[global___ZoneSetPolicyRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["zone_set_policy_request_resource",b"zone_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","zone",b"zone","zone_set_policy_request_resource",b"zone_set_policy_request_resource"]) -> None: ...
global___SetIamPolicyInstanceRequest = SetIamPolicyInstanceRequest

class SetIamPolicyInstanceTemplateRequest(google.protobuf.message.Message):
    """A request message for InstanceTemplates.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def global_set_policy_request_resource(self) -> global___GlobalSetPolicyRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        global_set_policy_request_resource : typing.Optional[global___GlobalSetPolicyRequest] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["global_set_policy_request_resource",b"global_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["global_set_policy_request_resource",b"global_set_policy_request_resource","project",b"project","resource",b"resource"]) -> None: ...
global___SetIamPolicyInstanceTemplateRequest = SetIamPolicyInstanceTemplateRequest

class SetIamPolicyLicenseRequest(google.protobuf.message.Message):
    """A request message for Licenses.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def global_set_policy_request_resource(self) -> global___GlobalSetPolicyRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        global_set_policy_request_resource : typing.Optional[global___GlobalSetPolicyRequest] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["global_set_policy_request_resource",b"global_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["global_set_policy_request_resource",b"global_set_policy_request_resource","project",b"project","resource",b"resource"]) -> None: ...
global___SetIamPolicyLicenseRequest = SetIamPolicyLicenseRequest

class SetIamPolicyNodeGroupRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    ZONE_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    @property
    def zone_set_policy_request_resource(self) -> global___ZoneSetPolicyRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        zone : typing.Text = ...,
        zone_set_policy_request_resource : typing.Optional[global___ZoneSetPolicyRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["zone_set_policy_request_resource",b"zone_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","zone",b"zone","zone_set_policy_request_resource",b"zone_set_policy_request_resource"]) -> None: ...
global___SetIamPolicyNodeGroupRequest = SetIamPolicyNodeGroupRequest

class SetIamPolicyNodeTemplateRequest(google.protobuf.message.Message):
    """A request message for NodeTemplates.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    @property
    def region_set_policy_request_resource(self) -> global___RegionSetPolicyRequest:
        """The body resource for this request"""
        pass
    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_set_policy_request_resource : typing.Optional[global___RegionSetPolicyRequest] = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["region_set_policy_request_resource",b"region_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","region_set_policy_request_resource",b"region_set_policy_request_resource","resource",b"resource"]) -> None: ...
global___SetIamPolicyNodeTemplateRequest = SetIamPolicyNodeTemplateRequest

class SetIamPolicyRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    @property
    def region_set_policy_request_resource(self) -> global___RegionSetPolicyRequest:
        """The body resource for this request"""
        pass
    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_set_policy_request_resource : typing.Optional[global___RegionSetPolicyRequest] = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["region_set_policy_request_resource",b"region_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","region_set_policy_request_resource",b"region_set_policy_request_resource","resource",b"resource"]) -> None: ...
global___SetIamPolicyRegionDiskRequest = SetIamPolicyRegionDiskRequest

class SetIamPolicyReservationRequest(google.protobuf.message.Message):
    """A request message for Reservations.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    ZONE_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    @property
    def zone_set_policy_request_resource(self) -> global___ZoneSetPolicyRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        zone : typing.Text = ...,
        zone_set_policy_request_resource : typing.Optional[global___ZoneSetPolicyRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["zone_set_policy_request_resource",b"zone_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","zone",b"zone","zone_set_policy_request_resource",b"zone_set_policy_request_resource"]) -> None: ...
global___SetIamPolicyReservationRequest = SetIamPolicyReservationRequest

class SetIamPolicyResourcePolicyRequest(google.protobuf.message.Message):
    """A request message for ResourcePolicies.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    @property
    def region_set_policy_request_resource(self) -> global___RegionSetPolicyRequest:
        """The body resource for this request"""
        pass
    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_set_policy_request_resource : typing.Optional[global___RegionSetPolicyRequest] = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["region_set_policy_request_resource",b"region_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","region_set_policy_request_resource",b"region_set_policy_request_resource","resource",b"resource"]) -> None: ...
global___SetIamPolicyResourcePolicyRequest = SetIamPolicyResourcePolicyRequest

class SetIamPolicyServiceAttachmentRequest(google.protobuf.message.Message):
    """A request message for ServiceAttachments.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    @property
    def region_set_policy_request_resource(self) -> global___RegionSetPolicyRequest:
        """The body resource for this request"""
        pass
    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_set_policy_request_resource : typing.Optional[global___RegionSetPolicyRequest] = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["region_set_policy_request_resource",b"region_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","region_set_policy_request_resource",b"region_set_policy_request_resource","resource",b"resource"]) -> None: ...
global___SetIamPolicyServiceAttachmentRequest = SetIamPolicyServiceAttachmentRequest

class SetIamPolicySnapshotRequest(google.protobuf.message.Message):
    """A request message for Snapshots.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def global_set_policy_request_resource(self) -> global___GlobalSetPolicyRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        global_set_policy_request_resource : typing.Optional[global___GlobalSetPolicyRequest] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["global_set_policy_request_resource",b"global_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["global_set_policy_request_resource",b"global_set_policy_request_resource","project",b"project","resource",b"resource"]) -> None: ...
global___SetIamPolicySnapshotRequest = SetIamPolicySnapshotRequest

class SetIamPolicySubnetworkRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.SetIamPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_SET_POLICY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    @property
    def region_set_policy_request_resource(self) -> global___RegionSetPolicyRequest:
        """The body resource for this request"""
        pass
    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_set_policy_request_resource : typing.Optional[global___RegionSetPolicyRequest] = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["region_set_policy_request_resource",b"region_set_policy_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","region_set_policy_request_resource",b"region_set_policy_request_resource","resource",b"resource"]) -> None: ...
global___SetIamPolicySubnetworkRequest = SetIamPolicySubnetworkRequest

class SetInstanceTemplateInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.SetInstanceTemplate. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGERS_SET_INSTANCE_TEMPLATE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group."""

    @property
    def instance_group_managers_set_instance_template_request_resource(self) -> global___InstanceGroupManagersSetInstanceTemplateRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_managers_set_instance_template_request_resource : typing.Optional[global___InstanceGroupManagersSetInstanceTemplateRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_managers_set_instance_template_request_resource",b"instance_group_managers_set_instance_template_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","instance_group_managers_set_instance_template_request_resource",b"instance_group_managers_set_instance_template_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetInstanceTemplateInstanceGroupManagerRequest = SetInstanceTemplateInstanceGroupManagerRequest

class SetInstanceTemplateRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.SetInstanceTemplate. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUP_MANAGERS_SET_TEMPLATE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    @property
    def region_instance_group_managers_set_template_request_resource(self) -> global___RegionInstanceGroupManagersSetTemplateRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_group_managers_set_template_request_resource : typing.Optional[global___RegionInstanceGroupManagersSetTemplateRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_instance_group_managers_set_template_request_resource",b"region_instance_group_managers_set_template_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","region_instance_group_managers_set_template_request_resource",b"region_instance_group_managers_set_template_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetInstanceTemplateRegionInstanceGroupManagerRequest = SetInstanceTemplateRegionInstanceGroupManagerRequest

class SetLabelsDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.SetLabels. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    ZONE_SET_LABELS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    @property
    def zone_set_labels_request_resource(self) -> global___ZoneSetLabelsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        resource : typing.Text = ...,
        zone : typing.Text = ...,
        zone_set_labels_request_resource : typing.Optional[global___ZoneSetLabelsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","zone_set_labels_request_resource",b"zone_set_labels_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","resource",b"resource","zone",b"zone","zone_set_labels_request_resource",b"zone_set_labels_request_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetLabelsDiskRequest = SetLabelsDiskRequest

class SetLabelsExternalVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for ExternalVpnGateways.SetLabels. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_SET_LABELS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def global_set_labels_request_resource(self) -> global___GlobalSetLabelsRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        global_set_labels_request_resource : typing.Optional[global___GlobalSetLabelsRequest] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["global_set_labels_request_resource",b"global_set_labels_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["global_set_labels_request_resource",b"global_set_labels_request_resource","project",b"project","resource",b"resource"]) -> None: ...
global___SetLabelsExternalVpnGatewayRequest = SetLabelsExternalVpnGatewayRequest

class SetLabelsForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for ForwardingRules.SetLabels. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_SET_LABELS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The region for this request."""

    @property
    def region_set_labels_request_resource(self) -> global___RegionSetLabelsRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_set_labels_request_resource : typing.Optional[global___RegionSetLabelsRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_set_labels_request_resource",b"region_set_labels_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","region_set_labels_request_resource",b"region_set_labels_request_resource","request_id",b"request_id","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetLabelsForwardingRuleRequest = SetLabelsForwardingRuleRequest

class SetLabelsGlobalForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for GlobalForwardingRules.SetLabels. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_SET_LABELS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def global_set_labels_request_resource(self) -> global___GlobalSetLabelsRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        global_set_labels_request_resource : typing.Optional[global___GlobalSetLabelsRequest] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["global_set_labels_request_resource",b"global_set_labels_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["global_set_labels_request_resource",b"global_set_labels_request_resource","project",b"project","resource",b"resource"]) -> None: ...
global___SetLabelsGlobalForwardingRuleRequest = SetLabelsGlobalForwardingRuleRequest

class SetLabelsImageRequest(google.protobuf.message.Message):
    """A request message for Images.SetLabels. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_SET_LABELS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def global_set_labels_request_resource(self) -> global___GlobalSetLabelsRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        global_set_labels_request_resource : typing.Optional[global___GlobalSetLabelsRequest] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["global_set_labels_request_resource",b"global_set_labels_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["global_set_labels_request_resource",b"global_set_labels_request_resource","project",b"project","resource",b"resource"]) -> None: ...
global___SetLabelsImageRequest = SetLabelsImageRequest

class SetLabelsInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetLabels. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    INSTANCES_SET_LABELS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    @property
    def instances_set_labels_request_resource(self) -> global___InstancesSetLabelsRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        instances_set_labels_request_resource : typing.Optional[global___InstancesSetLabelsRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instances_set_labels_request_resource",b"instances_set_labels_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","instances_set_labels_request_resource",b"instances_set_labels_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetLabelsInstanceRequest = SetLabelsInstanceRequest

class SetLabelsRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.SetLabels. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_SET_LABELS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The region for this request."""

    @property
    def region_set_labels_request_resource(self) -> global___RegionSetLabelsRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_set_labels_request_resource : typing.Optional[global___RegionSetLabelsRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_set_labels_request_resource",b"region_set_labels_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","region_set_labels_request_resource",b"region_set_labels_request_resource","request_id",b"request_id","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetLabelsRegionDiskRequest = SetLabelsRegionDiskRequest

class SetLabelsSnapshotRequest(google.protobuf.message.Message):
    """A request message for Snapshots.SetLabels. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GLOBAL_SET_LABELS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def global_set_labels_request_resource(self) -> global___GlobalSetLabelsRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        global_set_labels_request_resource : typing.Optional[global___GlobalSetLabelsRequest] = ...,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["global_set_labels_request_resource",b"global_set_labels_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["global_set_labels_request_resource",b"global_set_labels_request_resource","project",b"project","resource",b"resource"]) -> None: ...
global___SetLabelsSnapshotRequest = SetLabelsSnapshotRequest

class SetLabelsVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for VpnGateways.SetLabels. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_SET_LABELS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The region for this request."""

    @property
    def region_set_labels_request_resource(self) -> global___RegionSetLabelsRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_set_labels_request_resource : typing.Optional[global___RegionSetLabelsRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        resource : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_set_labels_request_resource",b"region_set_labels_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","region_set_labels_request_resource",b"region_set_labels_request_resource","request_id",b"request_id","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetLabelsVpnGatewayRequest = SetLabelsVpnGatewayRequest

class SetMachineResourcesInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetMachineResources. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    INSTANCES_SET_MACHINE_RESOURCES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    @property
    def instances_set_machine_resources_request_resource(self) -> global___InstancesSetMachineResourcesRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        instances_set_machine_resources_request_resource : typing.Optional[global___InstancesSetMachineResourcesRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instances_set_machine_resources_request_resource",b"instances_set_machine_resources_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","instances_set_machine_resources_request_resource",b"instances_set_machine_resources_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetMachineResourcesInstanceRequest = SetMachineResourcesInstanceRequest

class SetMachineTypeInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetMachineType. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    INSTANCES_SET_MACHINE_TYPE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    @property
    def instances_set_machine_type_request_resource(self) -> global___InstancesSetMachineTypeRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        instances_set_machine_type_request_resource : typing.Optional[global___InstancesSetMachineTypeRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instances_set_machine_type_request_resource",b"instances_set_machine_type_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","instances_set_machine_type_request_resource",b"instances_set_machine_type_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetMachineTypeInstanceRequest = SetMachineTypeInstanceRequest

class SetMetadataInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetMetadata. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    METADATA_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    @property
    def metadata_resource(self) -> global___Metadata:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        metadata_resource : typing.Optional[global___Metadata] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","metadata_resource",b"metadata_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","metadata_resource",b"metadata_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetMetadataInstanceRequest = SetMetadataInstanceRequest

class SetMinCpuPlatformInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetMinCpuPlatform. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    INSTANCES_SET_MIN_CPU_PLATFORM_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    @property
    def instances_set_min_cpu_platform_request_resource(self) -> global___InstancesSetMinCpuPlatformRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        instances_set_min_cpu_platform_request_resource : typing.Optional[global___InstancesSetMinCpuPlatformRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instances_set_min_cpu_platform_request_resource",b"instances_set_min_cpu_platform_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","instances_set_min_cpu_platform_request_resource",b"instances_set_min_cpu_platform_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetMinCpuPlatformInstanceRequest = SetMinCpuPlatformInstanceRequest

class SetNamedPortsInstanceGroupRequest(google.protobuf.message.Message):
    """A request message for InstanceGroups.SetNamedPorts. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_FIELD_NUMBER: builtins.int
    INSTANCE_GROUPS_SET_NAMED_PORTS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group: typing.Text = ...
    """The name of the instance group where the named ports are updated."""

    @property
    def instance_groups_set_named_ports_request_resource(self) -> global___InstanceGroupsSetNamedPortsRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the instance group is located."""

    def __init__(self,
        *,
        instance_group : typing.Text = ...,
        instance_groups_set_named_ports_request_resource : typing.Optional[global___InstanceGroupsSetNamedPortsRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_groups_set_named_ports_request_resource",b"instance_groups_set_named_ports_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group",b"instance_group","instance_groups_set_named_ports_request_resource",b"instance_groups_set_named_ports_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetNamedPortsInstanceGroupRequest = SetNamedPortsInstanceGroupRequest

class SetNamedPortsRegionInstanceGroupRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroups.SetNamedPorts. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUPS_SET_NAMED_PORTS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group: typing.Text = ...
    """The name of the regional instance group where the named ports are updated."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    @property
    def region_instance_groups_set_named_ports_request_resource(self) -> global___RegionInstanceGroupsSetNamedPortsRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_groups_set_named_ports_request_resource : typing.Optional[global___RegionInstanceGroupsSetNamedPortsRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_instance_groups_set_named_ports_request_resource",b"region_instance_groups_set_named_ports_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group",b"instance_group","project",b"project","region",b"region","region_instance_groups_set_named_ports_request_resource",b"region_instance_groups_set_named_ports_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetNamedPortsRegionInstanceGroupRequest = SetNamedPortsRegionInstanceGroupRequest

class SetNodeTemplateNodeGroupRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.SetNodeTemplate. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_GROUP_FIELD_NUMBER: builtins.int
    NODE_GROUPS_SET_NODE_TEMPLATE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    node_group: typing.Text = ...
    """Name of the NodeGroup resource to update."""

    @property
    def node_groups_set_node_template_request_resource(self) -> global___NodeGroupsSetNodeTemplateRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        node_group : typing.Text = ...,
        node_groups_set_node_template_request_resource : typing.Optional[global___NodeGroupsSetNodeTemplateRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_groups_set_node_template_request_resource",b"node_groups_set_node_template_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","node_group",b"node_group","node_groups_set_node_template_request_resource",b"node_groups_set_node_template_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetNodeTemplateNodeGroupRequest = SetNodeTemplateNodeGroupRequest

class SetPrivateIpGoogleAccessSubnetworkRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.SetPrivateIpGoogleAccess. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    SUBNETWORKS_SET_PRIVATE_IP_GOOGLE_ACCESS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    subnetwork: typing.Text = ...
    """Name of the Subnetwork resource."""

    @property
    def subnetworks_set_private_ip_google_access_request_resource(self) -> global___SubnetworksSetPrivateIpGoogleAccessRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        subnetwork : typing.Text = ...,
        subnetworks_set_private_ip_google_access_request_resource : typing.Optional[global___SubnetworksSetPrivateIpGoogleAccessRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","subnetworks_set_private_ip_google_access_request_resource",b"subnetworks_set_private_ip_google_access_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","subnetwork",b"subnetwork","subnetworks_set_private_ip_google_access_request_resource",b"subnetworks_set_private_ip_google_access_request_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetPrivateIpGoogleAccessSubnetworkRequest = SetPrivateIpGoogleAccessSubnetworkRequest

class SetProxyHeaderTargetSslProxyRequest(google.protobuf.message.Message):
    """A request message for TargetSslProxies.SetProxyHeader. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_SSL_PROXIES_SET_PROXY_HEADER_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    TARGET_SSL_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_ssl_proxies_set_proxy_header_request_resource(self) -> global___TargetSslProxiesSetProxyHeaderRequest:
        """The body resource for this request"""
        pass
    target_ssl_proxy: typing.Text = ...
    """Name of the TargetSslProxy resource whose ProxyHeader is to be set."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_ssl_proxies_set_proxy_header_request_resource : typing.Optional[global___TargetSslProxiesSetProxyHeaderRequest] = ...,
        target_ssl_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_ssl_proxies_set_proxy_header_request_resource",b"target_ssl_proxies_set_proxy_header_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_ssl_proxies_set_proxy_header_request_resource",b"target_ssl_proxies_set_proxy_header_request_resource","target_ssl_proxy",b"target_ssl_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetProxyHeaderTargetSslProxyRequest = SetProxyHeaderTargetSslProxyRequest

class SetProxyHeaderTargetTcpProxyRequest(google.protobuf.message.Message):
    """A request message for TargetTcpProxies.SetProxyHeader. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_TCP_PROXIES_SET_PROXY_HEADER_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    TARGET_TCP_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_tcp_proxies_set_proxy_header_request_resource(self) -> global___TargetTcpProxiesSetProxyHeaderRequest:
        """The body resource for this request"""
        pass
    target_tcp_proxy: typing.Text = ...
    """Name of the TargetTcpProxy resource whose ProxyHeader is to be set."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_tcp_proxies_set_proxy_header_request_resource : typing.Optional[global___TargetTcpProxiesSetProxyHeaderRequest] = ...,
        target_tcp_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_tcp_proxies_set_proxy_header_request_resource",b"target_tcp_proxies_set_proxy_header_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_tcp_proxies_set_proxy_header_request_resource",b"target_tcp_proxies_set_proxy_header_request_resource","target_tcp_proxy",b"target_tcp_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetProxyHeaderTargetTcpProxyRequest = SetProxyHeaderTargetTcpProxyRequest

class SetQuicOverrideTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpsProxies.SetQuicOverride. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXIES_SET_QUIC_OVERRIDE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_https_proxies_set_quic_override_request_resource(self) -> global___TargetHttpsProxiesSetQuicOverrideRequest:
        """The body resource for this request"""
        pass
    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy resource to set the QUIC override policy for. The name should conform to RFC1035."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_https_proxies_set_quic_override_request_resource : typing.Optional[global___TargetHttpsProxiesSetQuicOverrideRequest] = ...,
        target_https_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_https_proxies_set_quic_override_request_resource",b"target_https_proxies_set_quic_override_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_https_proxies_set_quic_override_request_resource",b"target_https_proxies_set_quic_override_request_resource","target_https_proxy",b"target_https_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetQuicOverrideTargetHttpsProxyRequest = SetQuicOverrideTargetHttpsProxyRequest

class SetSchedulingInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetScheduling. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SCHEDULING_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Instance name for this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def scheduling_resource(self) -> global___Scheduling:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        scheduling_resource : typing.Optional[global___Scheduling] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","scheduling_resource",b"scheduling_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","project",b"project","request_id",b"request_id","scheduling_resource",b"scheduling_resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetSchedulingInstanceRequest = SetSchedulingInstanceRequest

class SetSecurityPolicyBackendServiceRequest(google.protobuf.message.Message):
    """A request message for BackendServices.SetSecurityPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SECURITY_POLICY_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to which the security policy should be set. The name should conform to RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def security_policy_reference_resource(self) -> global___SecurityPolicyReference:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        security_policy_reference_resource : typing.Optional[global___SecurityPolicyReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","security_policy_reference_resource",b"security_policy_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service",b"backend_service","project",b"project","request_id",b"request_id","security_policy_reference_resource",b"security_policy_reference_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetSecurityPolicyBackendServiceRequest = SetSecurityPolicyBackendServiceRequest

class SetServiceAccountInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetServiceAccount. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    INSTANCES_SET_SERVICE_ACCOUNT_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance resource to start."""

    @property
    def instances_set_service_account_request_resource(self) -> global___InstancesSetServiceAccountRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        instances_set_service_account_request_resource : typing.Optional[global___InstancesSetServiceAccountRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instances_set_service_account_request_resource",b"instances_set_service_account_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","instances_set_service_account_request_resource",b"instances_set_service_account_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetServiceAccountInstanceRequest = SetServiceAccountInstanceRequest

class SetShieldedInstanceIntegrityPolicyInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetShieldedInstanceIntegrityPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SHIELDED_INSTANCE_INTEGRITY_POLICY_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name or id of the instance scoping this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def shielded_instance_integrity_policy_resource(self) -> global___ShieldedInstanceIntegrityPolicy:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        shielded_instance_integrity_policy_resource : typing.Optional[global___ShieldedInstanceIntegrityPolicy] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","shielded_instance_integrity_policy_resource",b"shielded_instance_integrity_policy_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","project",b"project","request_id",b"request_id","shielded_instance_integrity_policy_resource",b"shielded_instance_integrity_policy_resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetShieldedInstanceIntegrityPolicyInstanceRequest = SetShieldedInstanceIntegrityPolicyInstanceRequest

class SetSslCertificatesRegionTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpsProxies.SetSslCertificates. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_TARGET_HTTPS_PROXIES_SET_SSL_CERTIFICATES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    @property
    def region_target_https_proxies_set_ssl_certificates_request_resource(self) -> global___RegionTargetHttpsProxiesSetSslCertificatesRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy resource to set an SslCertificates resource for."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_target_https_proxies_set_ssl_certificates_request_resource : typing.Optional[global___RegionTargetHttpsProxiesSetSslCertificatesRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_https_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_target_https_proxies_set_ssl_certificates_request_resource",b"region_target_https_proxies_set_ssl_certificates_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","region_target_https_proxies_set_ssl_certificates_request_resource",b"region_target_https_proxies_set_ssl_certificates_request_resource","request_id",b"request_id","target_https_proxy",b"target_https_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetSslCertificatesRegionTargetHttpsProxyRequest = SetSslCertificatesRegionTargetHttpsProxyRequest

class SetSslCertificatesTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpsProxies.SetSslCertificates. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXIES_SET_SSL_CERTIFICATES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_https_proxies_set_ssl_certificates_request_resource(self) -> global___TargetHttpsProxiesSetSslCertificatesRequest:
        """The body resource for this request"""
        pass
    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy resource to set an SslCertificates resource for."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_https_proxies_set_ssl_certificates_request_resource : typing.Optional[global___TargetHttpsProxiesSetSslCertificatesRequest] = ...,
        target_https_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_https_proxies_set_ssl_certificates_request_resource",b"target_https_proxies_set_ssl_certificates_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_https_proxies_set_ssl_certificates_request_resource",b"target_https_proxies_set_ssl_certificates_request_resource","target_https_proxy",b"target_https_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetSslCertificatesTargetHttpsProxyRequest = SetSslCertificatesTargetHttpsProxyRequest

class SetSslCertificatesTargetSslProxyRequest(google.protobuf.message.Message):
    """A request message for TargetSslProxies.SetSslCertificates. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_SSL_PROXIES_SET_SSL_CERTIFICATES_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    TARGET_SSL_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_ssl_proxies_set_ssl_certificates_request_resource(self) -> global___TargetSslProxiesSetSslCertificatesRequest:
        """The body resource for this request"""
        pass
    target_ssl_proxy: typing.Text = ...
    """Name of the TargetSslProxy resource whose SslCertificate resource is to be set."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_ssl_proxies_set_ssl_certificates_request_resource : typing.Optional[global___TargetSslProxiesSetSslCertificatesRequest] = ...,
        target_ssl_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_ssl_proxies_set_ssl_certificates_request_resource",b"target_ssl_proxies_set_ssl_certificates_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_ssl_proxies_set_ssl_certificates_request_resource",b"target_ssl_proxies_set_ssl_certificates_request_resource","target_ssl_proxy",b"target_ssl_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetSslCertificatesTargetSslProxyRequest = SetSslCertificatesTargetSslProxyRequest

class SetSslPolicyTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpsProxies.SetSslPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SSL_POLICY_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def ssl_policy_reference_resource(self) -> global___SslPolicyReference:
        """The body resource for this request"""
        pass
    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy resource whose SSL policy is to be set. The name must be 1-63 characters long, and comply with RFC1035."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ssl_policy_reference_resource : typing.Optional[global___SslPolicyReference] = ...,
        target_https_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","ssl_policy_reference_resource",b"ssl_policy_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","ssl_policy_reference_resource",b"ssl_policy_reference_resource","target_https_proxy",b"target_https_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetSslPolicyTargetHttpsProxyRequest = SetSslPolicyTargetHttpsProxyRequest

class SetSslPolicyTargetSslProxyRequest(google.protobuf.message.Message):
    """A request message for TargetSslProxies.SetSslPolicy. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SSL_POLICY_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    TARGET_SSL_PROXY_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def ssl_policy_reference_resource(self) -> global___SslPolicyReference:
        """The body resource for this request"""
        pass
    target_ssl_proxy: typing.Text = ...
    """Name of the TargetSslProxy resource whose SSL policy is to be set. The name must be 1-63 characters long, and comply with RFC1035."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ssl_policy_reference_resource : typing.Optional[global___SslPolicyReference] = ...,
        target_ssl_proxy : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","ssl_policy_reference_resource",b"ssl_policy_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","ssl_policy_reference_resource",b"ssl_policy_reference_resource","target_ssl_proxy",b"target_ssl_proxy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetSslPolicyTargetSslProxyRequest = SetSslPolicyTargetSslProxyRequest

class SetTagsInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SetTags. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TAGS_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def tags_resource(self) -> global___Tags:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        tags_resource : typing.Optional[global___Tags] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","tags_resource",b"tags_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","project",b"project","request_id",b"request_id","tags_resource",b"tags_resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetTagsInstanceRequest = SetTagsInstanceRequest

class SetTargetForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for ForwardingRules.SetTarget. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    forwarding_rule: typing.Text = ...
    """Name of the ForwardingRule resource in which target is to be set."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_reference_resource(self) -> global___TargetReference:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        forwarding_rule : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_reference_resource : typing.Optional[global___TargetReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_reference_resource",b"target_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule",b"forwarding_rule","project",b"project","region",b"region","request_id",b"request_id","target_reference_resource",b"target_reference_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetTargetForwardingRuleRequest = SetTargetForwardingRuleRequest

class SetTargetGlobalForwardingRuleRequest(google.protobuf.message.Message):
    """A request message for GlobalForwardingRules.SetTarget. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FORWARDING_RULE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    forwarding_rule: typing.Text = ...
    """Name of the ForwardingRule resource in which target is to be set."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def target_reference_resource(self) -> global___TargetReference:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        forwarding_rule : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_reference_resource : typing.Optional[global___TargetReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","target_reference_resource",b"target_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","forwarding_rule",b"forwarding_rule","project",b"project","request_id",b"request_id","target_reference_resource",b"target_reference_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetTargetGlobalForwardingRuleRequest = SetTargetGlobalForwardingRuleRequest

class SetTargetPoolsInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.SetTargetPools. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGERS_SET_TARGET_POOLS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group."""

    @property
    def instance_group_managers_set_target_pools_request_resource(self) -> global___InstanceGroupManagersSetTargetPoolsRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_managers_set_target_pools_request_resource : typing.Optional[global___InstanceGroupManagersSetTargetPoolsRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_managers_set_target_pools_request_resource",b"instance_group_managers_set_target_pools_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","instance_group_managers_set_target_pools_request_resource",b"instance_group_managers_set_target_pools_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetTargetPoolsInstanceGroupManagerRequest = SetTargetPoolsInstanceGroupManagerRequest

class SetTargetPoolsRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.SetTargetPools. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUP_MANAGERS_SET_TARGET_POOLS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """Name of the managed instance group."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    @property
    def region_instance_group_managers_set_target_pools_request_resource(self) -> global___RegionInstanceGroupManagersSetTargetPoolsRequest:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_group_managers_set_target_pools_request_resource : typing.Optional[global___RegionInstanceGroupManagersSetTargetPoolsRequest] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_instance_group_managers_set_target_pools_request_resource",b"region_instance_group_managers_set_target_pools_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","region_instance_group_managers_set_target_pools_request_resource",b"region_instance_group_managers_set_target_pools_request_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetTargetPoolsRegionInstanceGroupManagerRequest = SetTargetPoolsRegionInstanceGroupManagerRequest

class SetUrlMapRegionTargetHttpProxyRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpProxies.SetUrlMap. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTP_PROXY_FIELD_NUMBER: builtins.int
    URL_MAP_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_http_proxy: typing.Text = ...
    """Name of the TargetHttpProxy to set a URL map for."""

    @property
    def url_map_reference_resource(self) -> global___UrlMapReference:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_http_proxy : typing.Text = ...,
        url_map_reference_resource : typing.Optional[global___UrlMapReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","url_map_reference_resource",b"url_map_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_http_proxy",b"target_http_proxy","url_map_reference_resource",b"url_map_reference_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetUrlMapRegionTargetHttpProxyRequest = SetUrlMapRegionTargetHttpProxyRequest

class SetUrlMapRegionTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for RegionTargetHttpsProxies.SetUrlMap. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    URL_MAP_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000). end_interface: MixerMutationRequestBuilder"""

    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy to set a URL map for."""

    @property
    def url_map_reference_resource(self) -> global___UrlMapReference:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_https_proxy : typing.Text = ...,
        url_map_reference_resource : typing.Optional[global___UrlMapReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","url_map_reference_resource",b"url_map_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","target_https_proxy",b"target_https_proxy","url_map_reference_resource",b"url_map_reference_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetUrlMapRegionTargetHttpsProxyRequest = SetUrlMapRegionTargetHttpsProxyRequest

class SetUrlMapTargetHttpProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpProxies.SetUrlMap. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTP_PROXY_FIELD_NUMBER: builtins.int
    URL_MAP_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_http_proxy: typing.Text = ...
    """Name of the TargetHttpProxy to set a URL map for."""

    @property
    def url_map_reference_resource(self) -> global___UrlMapReference:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_http_proxy : typing.Text = ...,
        url_map_reference_resource : typing.Optional[global___UrlMapReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","url_map_reference_resource",b"url_map_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_http_proxy",b"target_http_proxy","url_map_reference_resource",b"url_map_reference_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetUrlMapTargetHttpProxyRequest = SetUrlMapTargetHttpProxyRequest

class SetUrlMapTargetHttpsProxyRequest(google.protobuf.message.Message):
    """A request message for TargetHttpsProxies.SetUrlMap. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    TARGET_HTTPS_PROXY_FIELD_NUMBER: builtins.int
    URL_MAP_REFERENCE_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    target_https_proxy: typing.Text = ...
    """Name of the TargetHttpsProxy resource whose URL map is to be set."""

    @property
    def url_map_reference_resource(self) -> global___UrlMapReference:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        target_https_proxy : typing.Text = ...,
        url_map_reference_resource : typing.Optional[global___UrlMapReference] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","url_map_reference_resource",b"url_map_reference_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","target_https_proxy",b"target_https_proxy","url_map_reference_resource",b"url_map_reference_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetUrlMapTargetHttpsProxyRequest = SetUrlMapTargetHttpsProxyRequest

class SetUsageExportBucketProjectRequest(google.protobuf.message.Message):
    """A request message for Projects.SetUsageExportBucket. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    USAGE_EXPORT_LOCATION_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def usage_export_location_resource(self) -> global___UsageExportLocation:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        usage_export_location_resource : typing.Optional[global___UsageExportLocation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","usage_export_location_resource",b"usage_export_location_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","usage_export_location_resource",b"usage_export_location_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SetUsageExportBucketProjectRequest = SetUsageExportBucketProjectRequest

class ShieldedInstanceConfig(google.protobuf.message.Message):
    """A set of Shielded Instance options."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_INTEGRITY_MONITORING_FIELD_NUMBER: builtins.int
    ENABLE_SECURE_BOOT_FIELD_NUMBER: builtins.int
    ENABLE_VTPM_FIELD_NUMBER: builtins.int
    enable_integrity_monitoring: builtins.bool = ...
    """Defines whether the instance has integrity monitoring enabled. Enabled by default."""

    enable_secure_boot: builtins.bool = ...
    """Defines whether the instance has Secure Boot enabled. Disabled by default."""

    enable_vtpm: builtins.bool = ...
    """Defines whether the instance has the vTPM enabled. Enabled by default."""

    def __init__(self,
        *,
        enable_integrity_monitoring : typing.Optional[builtins.bool] = ...,
        enable_secure_boot : typing.Optional[builtins.bool] = ...,
        enable_vtpm : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enable_integrity_monitoring",b"_enable_integrity_monitoring","_enable_secure_boot",b"_enable_secure_boot","_enable_vtpm",b"_enable_vtpm","enable_integrity_monitoring",b"enable_integrity_monitoring","enable_secure_boot",b"enable_secure_boot","enable_vtpm",b"enable_vtpm"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enable_integrity_monitoring",b"_enable_integrity_monitoring","_enable_secure_boot",b"_enable_secure_boot","_enable_vtpm",b"_enable_vtpm","enable_integrity_monitoring",b"enable_integrity_monitoring","enable_secure_boot",b"enable_secure_boot","enable_vtpm",b"enable_vtpm"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_integrity_monitoring",b"_enable_integrity_monitoring"]) -> typing.Optional[typing_extensions.Literal["enable_integrity_monitoring"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_secure_boot",b"_enable_secure_boot"]) -> typing.Optional[typing_extensions.Literal["enable_secure_boot"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_vtpm",b"_enable_vtpm"]) -> typing.Optional[typing_extensions.Literal["enable_vtpm"]]: ...
global___ShieldedInstanceConfig = ShieldedInstanceConfig

class ShieldedInstanceIdentity(google.protobuf.message.Message):
    """A Shielded Instance Identity."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    SIGNING_KEY_FIELD_NUMBER: builtins.int
    @property
    def encryption_key(self) -> global___ShieldedInstanceIdentityEntry:
        """An Endorsement Key (EK) made by the RSA 2048 algorithm issued to the Shielded Instance's vTPM."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#shieldedInstanceIdentity for shielded Instance identity entry."""

    @property
    def signing_key(self) -> global___ShieldedInstanceIdentityEntry:
        """An Attestation Key (AK) made by the RSA 2048 algorithm issued to the Shielded Instance's vTPM."""
        pass
    def __init__(self,
        *,
        encryption_key : typing.Optional[global___ShieldedInstanceIdentityEntry] = ...,
        kind : typing.Optional[typing.Text] = ...,
        signing_key : typing.Optional[global___ShieldedInstanceIdentityEntry] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_encryption_key",b"_encryption_key","_kind",b"_kind","_signing_key",b"_signing_key","encryption_key",b"encryption_key","kind",b"kind","signing_key",b"signing_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_encryption_key",b"_encryption_key","_kind",b"_kind","_signing_key",b"_signing_key","encryption_key",b"encryption_key","kind",b"kind","signing_key",b"signing_key"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_encryption_key",b"_encryption_key"]) -> typing.Optional[typing_extensions.Literal["encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_signing_key",b"_signing_key"]) -> typing.Optional[typing_extensions.Literal["signing_key"]]: ...
global___ShieldedInstanceIdentity = ShieldedInstanceIdentity

class ShieldedInstanceIdentityEntry(google.protobuf.message.Message):
    """A Shielded Instance Identity Entry."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EK_CERT_FIELD_NUMBER: builtins.int
    EK_PUB_FIELD_NUMBER: builtins.int
    ek_cert: typing.Text = ...
    """A PEM-encoded X.509 certificate. This field can be empty."""

    ek_pub: typing.Text = ...
    """A PEM-encoded public key."""

    def __init__(self,
        *,
        ek_cert : typing.Optional[typing.Text] = ...,
        ek_pub : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ek_cert",b"_ek_cert","_ek_pub",b"_ek_pub","ek_cert",b"ek_cert","ek_pub",b"ek_pub"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ek_cert",b"_ek_cert","_ek_pub",b"_ek_pub","ek_cert",b"ek_cert","ek_pub",b"ek_pub"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ek_cert",b"_ek_cert"]) -> typing.Optional[typing_extensions.Literal["ek_cert"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ek_pub",b"_ek_pub"]) -> typing.Optional[typing_extensions.Literal["ek_pub"]]: ...
global___ShieldedInstanceIdentityEntry = ShieldedInstanceIdentityEntry

class ShieldedInstanceIntegrityPolicy(google.protobuf.message.Message):
    """The policy describes the baseline against which Instance boot integrity is measured."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPDATE_AUTO_LEARN_POLICY_FIELD_NUMBER: builtins.int
    update_auto_learn_policy: builtins.bool = ...
    """Updates the integrity policy baseline using the measurements from the VM instance's most recent boot."""

    def __init__(self,
        *,
        update_auto_learn_policy : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_update_auto_learn_policy",b"_update_auto_learn_policy","update_auto_learn_policy",b"update_auto_learn_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_update_auto_learn_policy",b"_update_auto_learn_policy","update_auto_learn_policy",b"update_auto_learn_policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_update_auto_learn_policy",b"_update_auto_learn_policy"]) -> typing.Optional[typing_extensions.Literal["update_auto_learn_policy"]]: ...
global___ShieldedInstanceIntegrityPolicy = ShieldedInstanceIntegrityPolicy

class SignedUrlKey(google.protobuf.message.Message):
    """Represents a customer-supplied Signing Key used by Cloud CDN Signed URLs"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    KEY_NAME_FIELD_NUMBER: builtins.int
    KEY_VALUE_FIELD_NUMBER: builtins.int
    key_name: typing.Text = ...
    """Name of the key. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    key_value: typing.Text = ...
    """128-bit key value used for signing the URL. The key value must be a valid RFC 4648 Section 5 base64url encoded string."""

    def __init__(self,
        *,
        key_name : typing.Optional[typing.Text] = ...,
        key_value : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_key_name",b"_key_name","_key_value",b"_key_value","key_name",b"key_name","key_value",b"key_value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_key_name",b"_key_name","_key_value",b"_key_value","key_name",b"key_name","key_value",b"key_value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_key_name",b"_key_name"]) -> typing.Optional[typing_extensions.Literal["key_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_key_value",b"_key_value"]) -> typing.Optional[typing_extensions.Literal["key_value"]]: ...
global___SignedUrlKey = SignedUrlKey

class SimulateMaintenanceEventInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.SimulateMaintenanceEvent. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance",b"instance","project",b"project","zone",b"zone"]) -> None: ...
global___SimulateMaintenanceEventInstanceRequest = SimulateMaintenanceEventInstanceRequest

class Snapshot(google.protobuf.message.Message):
    """Represents a Persistent Disk Snapshot resource. You can use snapshots to back up data on a regular interval. For more information, read Creating persistent disk snapshots."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Snapshot.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CREATING: Snapshot.Status.ValueType = ...  # 455564985
        """Snapshot creation is in progress."""

        DELETING: Snapshot.Status.ValueType = ...  # 528602024
        """Snapshot is currently being deleted."""

        FAILED: Snapshot.Status.ValueType = ...  # 455706685
        """Snapshot creation failed."""

        READY: Snapshot.Status.ValueType = ...  # 77848963
        """Snapshot has been created successfully."""

        UPLOADING: Snapshot.Status.ValueType = ...  # 267603489
        """Snapshot is being uploaded."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the snapshot. This can be CREATING, DELETING, FAILED, READY, or UPLOADING."""
        pass

    UNDEFINED_STATUS: Snapshot.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CREATING: Snapshot.Status.ValueType = ...  # 455564985
    """Snapshot creation is in progress."""

    DELETING: Snapshot.Status.ValueType = ...  # 528602024
    """Snapshot is currently being deleted."""

    FAILED: Snapshot.Status.ValueType = ...  # 455706685
    """Snapshot creation failed."""

    READY: Snapshot.Status.ValueType = ...  # 77848963
    """Snapshot has been created successfully."""

    UPLOADING: Snapshot.Status.ValueType = ...  # 267603489
    """Snapshot is being uploaded."""


    class _StorageBytesStatus:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StorageBytesStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_StorageBytesStatus.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STORAGE_BYTES_STATUS: Snapshot.StorageBytesStatus.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        UPDATING: Snapshot.StorageBytesStatus.ValueType = ...  # 494614342
        UP_TO_DATE: Snapshot.StorageBytesStatus.ValueType = ...  # 101306702
    class StorageBytesStatus(_StorageBytesStatus, metaclass=_StorageBytesStatusEnumTypeWrapper):
        """[Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date."""
        pass

    UNDEFINED_STORAGE_BYTES_STATUS: Snapshot.StorageBytesStatus.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    UPDATING: Snapshot.StorageBytesStatus.ValueType = ...  # 494614342
    UP_TO_DATE: Snapshot.StorageBytesStatus.ValueType = ...  # 101306702

    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    AUTO_CREATED_FIELD_NUMBER: builtins.int
    CHAIN_NAME_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISK_SIZE_GB_FIELD_NUMBER: builtins.int
    DOWNLOAD_BYTES_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    LICENSE_CODES_FIELD_NUMBER: builtins.int
    LICENSES_FIELD_NUMBER: builtins.int
    LOCATION_HINT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SATISFIES_PZS_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SNAPSHOT_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    SOURCE_DISK_FIELD_NUMBER: builtins.int
    SOURCE_DISK_ENCRYPTION_KEY_FIELD_NUMBER: builtins.int
    SOURCE_DISK_ID_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    STORAGE_BYTES_FIELD_NUMBER: builtins.int
    STORAGE_BYTES_STATUS_FIELD_NUMBER: builtins.int
    STORAGE_LOCATIONS_FIELD_NUMBER: builtins.int
    auto_created: builtins.bool = ...
    """[Output Only] Set to true if snapshots are automatically created by applying resource policy on the target disk."""

    chain_name: typing.Text = ...
    """Creates the new snapshot in the snapshot chain labeled with the specified name. The chain name must be 1-63 characters long and comply with RFC1035. This is an uncommon option only for advanced service owners who needs to create separate snapshot chains, for example, for chargeback tracking. When you describe your snapshot resource, this field is visible only if it has a non-empty value."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    disk_size_gb: builtins.int = ...
    """[Output Only] Size of the source disk, specified in GB."""

    download_bytes: builtins.int = ...
    """[Output Only] Number of bytes downloaded to restore a snapshot to a disk."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#snapshot for Snapshot resources."""

    label_fingerprint: typing.Text = ...
    """A fingerprint for the labels being applied to this snapshot, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a snapshot."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels to apply to this snapshot. These can be later modified by the setLabels method. Label values may be empty."""
        pass
    @property
    def license_codes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """[Output Only] Integer license codes indicating which licenses are attached to this snapshot."""
        pass
    @property
    def licenses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] A list of public visible licenses that apply to this snapshot. This can be because the original image had licenses attached (such as a Windows image)."""
        pass
    location_hint: typing.Text = ...
    """An opaque location hint used to place the snapshot close to other resources. This field is for use by internal tools that use the public API."""

    name: typing.Text = ...
    """Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    satisfies_pzs: builtins.bool = ...
    """[Output Only] Reserved for future use."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def snapshot_encryption_key(self) -> global___CustomerEncryptionKey:
        """Encrypts the snapshot using a customer-supplied encryption key. After you encrypt a snapshot using a customer-supplied key, you must provide the same key if you use the snapshot later. For example, you must provide the encryption key when you create a disk from the encrypted snapshot in a future request. Customer-supplied encryption keys do not protect access to metadata of the snapshot. If you do not provide an encryption key when creating the snapshot, then the snapshot will be encrypted using an automatically generated key and you do not need to provide a key to use the snapshot later."""
        pass
    source_disk: typing.Text = ...
    """The source disk used to create this snapshot."""

    @property
    def source_disk_encryption_key(self) -> global___CustomerEncryptionKey:
        """The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key."""
        pass
    source_disk_id: typing.Text = ...
    """[Output Only] The ID value of the disk used to create this snapshot. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given disk name."""

    status: typing.Text = ...
    """[Output Only] The status of the snapshot. This can be CREATING, DELETING, FAILED, READY, or UPLOADING.
    Check the Status enum for the list of possible values.
    """

    storage_bytes: builtins.int = ...
    """[Output Only] A size of the storage used by the snapshot. As snapshots share storage, this number is expected to change with snapshot creation/deletion."""

    storage_bytes_status: typing.Text = ...
    """[Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
    Check the StorageBytesStatus enum for the list of possible values.
    """

    @property
    def storage_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Cloud Storage bucket storage location of the snapshot (regional or multi-regional)."""
        pass
    def __init__(self,
        *,
        auto_created : typing.Optional[builtins.bool] = ...,
        chain_name : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        disk_size_gb : typing.Optional[builtins.int] = ...,
        download_bytes : typing.Optional[builtins.int] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        license_codes : typing.Optional[typing.Iterable[builtins.int]] = ...,
        licenses : typing.Optional[typing.Iterable[typing.Text]] = ...,
        location_hint : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        satisfies_pzs : typing.Optional[builtins.bool] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        snapshot_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        source_disk : typing.Optional[typing.Text] = ...,
        source_disk_encryption_key : typing.Optional[global___CustomerEncryptionKey] = ...,
        source_disk_id : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        storage_bytes : typing.Optional[builtins.int] = ...,
        storage_bytes_status : typing.Optional[typing.Text] = ...,
        storage_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_auto_created",b"_auto_created","_chain_name",b"_chain_name","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_disk_size_gb",b"_disk_size_gb","_download_bytes",b"_download_bytes","_id",b"_id","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_location_hint",b"_location_hint","_name",b"_name","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_snapshot_encryption_key",b"_snapshot_encryption_key","_source_disk",b"_source_disk","_source_disk_encryption_key",b"_source_disk_encryption_key","_source_disk_id",b"_source_disk_id","_status",b"_status","_storage_bytes",b"_storage_bytes","_storage_bytes_status",b"_storage_bytes_status","auto_created",b"auto_created","chain_name",b"chain_name","creation_timestamp",b"creation_timestamp","description",b"description","disk_size_gb",b"disk_size_gb","download_bytes",b"download_bytes","id",b"id","kind",b"kind","label_fingerprint",b"label_fingerprint","location_hint",b"location_hint","name",b"name","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","snapshot_encryption_key",b"snapshot_encryption_key","source_disk",b"source_disk","source_disk_encryption_key",b"source_disk_encryption_key","source_disk_id",b"source_disk_id","status",b"status","storage_bytes",b"storage_bytes","storage_bytes_status",b"storage_bytes_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_auto_created",b"_auto_created","_chain_name",b"_chain_name","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_disk_size_gb",b"_disk_size_gb","_download_bytes",b"_download_bytes","_id",b"_id","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_location_hint",b"_location_hint","_name",b"_name","_satisfies_pzs",b"_satisfies_pzs","_self_link",b"_self_link","_snapshot_encryption_key",b"_snapshot_encryption_key","_source_disk",b"_source_disk","_source_disk_encryption_key",b"_source_disk_encryption_key","_source_disk_id",b"_source_disk_id","_status",b"_status","_storage_bytes",b"_storage_bytes","_storage_bytes_status",b"_storage_bytes_status","auto_created",b"auto_created","chain_name",b"chain_name","creation_timestamp",b"creation_timestamp","description",b"description","disk_size_gb",b"disk_size_gb","download_bytes",b"download_bytes","id",b"id","kind",b"kind","label_fingerprint",b"label_fingerprint","labels",b"labels","license_codes",b"license_codes","licenses",b"licenses","location_hint",b"location_hint","name",b"name","satisfies_pzs",b"satisfies_pzs","self_link",b"self_link","snapshot_encryption_key",b"snapshot_encryption_key","source_disk",b"source_disk","source_disk_encryption_key",b"source_disk_encryption_key","source_disk_id",b"source_disk_id","status",b"status","storage_bytes",b"storage_bytes","storage_bytes_status",b"storage_bytes_status","storage_locations",b"storage_locations"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_auto_created",b"_auto_created"]) -> typing.Optional[typing_extensions.Literal["auto_created"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_chain_name",b"_chain_name"]) -> typing.Optional[typing_extensions.Literal["chain_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_disk_size_gb",b"_disk_size_gb"]) -> typing.Optional[typing_extensions.Literal["disk_size_gb"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_download_bytes",b"_download_bytes"]) -> typing.Optional[typing_extensions.Literal["download_bytes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_location_hint",b"_location_hint"]) -> typing.Optional[typing_extensions.Literal["location_hint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_satisfies_pzs",b"_satisfies_pzs"]) -> typing.Optional[typing_extensions.Literal["satisfies_pzs"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_snapshot_encryption_key",b"_snapshot_encryption_key"]) -> typing.Optional[typing_extensions.Literal["snapshot_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_disk",b"_source_disk"]) -> typing.Optional[typing_extensions.Literal["source_disk"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_disk_encryption_key",b"_source_disk_encryption_key"]) -> typing.Optional[typing_extensions.Literal["source_disk_encryption_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_disk_id",b"_source_disk_id"]) -> typing.Optional[typing_extensions.Literal["source_disk_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_storage_bytes",b"_storage_bytes"]) -> typing.Optional[typing_extensions.Literal["storage_bytes"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_storage_bytes_status",b"_storage_bytes_status"]) -> typing.Optional[typing_extensions.Literal["storage_bytes_status"]]: ...
global___Snapshot = Snapshot

class SnapshotList(google.protobuf.message.Message):
    """Contains a list of Snapshot resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Snapshot]:
        """A list of Snapshot resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Snapshot]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___SnapshotList = SnapshotList

class SourceInstanceParams(google.protobuf.message.Message):
    """A specification of the parameters to use when creating the instance template from a source instance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISK_CONFIGS_FIELD_NUMBER: builtins.int
    @property
    def disk_configs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DiskInstantiationConfig]:
        """Attached disks configuration. If not provided, defaults are applied: For boot disk and any other R/W disks, new custom images will be created from each disk. For read-only disks, they will be attached in read-only mode. Local SSD disks will be created as blank volumes."""
        pass
    def __init__(self,
        *,
        disk_configs : typing.Optional[typing.Iterable[global___DiskInstantiationConfig]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disk_configs",b"disk_configs"]) -> None: ...
global___SourceInstanceParams = SourceInstanceParams

class SslCertificate(google.protobuf.message.Message):
    """Represents an SSL Certificate resource. Google Compute Engine has two SSL Certificate resources: * [Global](/compute/docs/reference/rest/v1/sslCertificates) * [Regional](/compute/docs/reference/rest/v1/regionSslCertificates) The sslCertificates are used by: - external HTTPS load balancers - SSL proxy load balancers The regionSslCertificates are used by internal HTTPS load balancers. Optionally, certificate file contents that you upload can contain a set of up to five PEM-encoded certificates. The API call creates an object (sslCertificate) that holds this data. You can use SSL keys and certificates to secure connections to a load balancer. For more information, read Creating and using SSL certificates, SSL certificates quotas and limits, and Troubleshooting SSL certificates."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: SslCertificate.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        MANAGED: SslCertificate.Type.ValueType = ...  # 479501183
        """Google-managed SSLCertificate."""

        SELF_MANAGED: SslCertificate.Type.ValueType = ...  # 434437516
        """Certificate uploaded by user."""

        TYPE_UNSPECIFIED: SslCertificate.Type.ValueType = ...  # 437714322
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """(Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or "MANAGED". If not specified, the certificate is self-managed and the fields certificate and private_key are used."""
        pass

    UNDEFINED_TYPE: SslCertificate.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    MANAGED: SslCertificate.Type.ValueType = ...  # 479501183
    """Google-managed SSLCertificate."""

    SELF_MANAGED: SslCertificate.Type.ValueType = ...  # 434437516
    """Certificate uploaded by user."""

    TYPE_UNSPECIFIED: SslCertificate.Type.ValueType = ...  # 437714322

    CERTIFICATE_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPIRE_TIME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    MANAGED_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PRIVATE_KEY_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SELF_MANAGED_FIELD_NUMBER: builtins.int
    SUBJECT_ALTERNATIVE_NAMES_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    certificate: typing.Text = ...
    """A value read into memory from a certificate file. The certificate file must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    expire_time: typing.Text = ...
    """[Output Only] Expire time of the certificate. RFC3339"""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#sslCertificate for SSL certificates."""

    @property
    def managed(self) -> global___SslCertificateManagedSslCertificate:
        """Configuration and status of a managed SSL certificate."""
        pass
    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    private_key: typing.Text = ...
    """A value read into memory from a write-only private key file. The private key file must be in PEM format. For security, only insert requests include this field."""

    region: typing.Text = ...
    """[Output Only] URL of the region where the regional SSL Certificate resides. This field is not applicable to global SSL Certificate."""

    self_link: typing.Text = ...
    """[Output only] Server-defined URL for the resource."""

    @property
    def self_managed(self) -> global___SslCertificateSelfManagedSslCertificate:
        """Configuration and status of a self-managed SSL certificate."""
        pass
    @property
    def subject_alternative_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Domains associated with the certificate via Subject Alternative Name."""
        pass
    type: typing.Text = ...
    """(Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or "MANAGED". If not specified, the certificate is self-managed and the fields certificate and private_key are used.
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        certificate : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        expire_time : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        managed : typing.Optional[global___SslCertificateManagedSslCertificate] = ...,
        name : typing.Optional[typing.Text] = ...,
        private_key : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        self_managed : typing.Optional[global___SslCertificateSelfManagedSslCertificate] = ...,
        subject_alternative_names : typing.Optional[typing.Iterable[typing.Text]] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_certificate",b"_certificate","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_expire_time",b"_expire_time","_id",b"_id","_kind",b"_kind","_managed",b"_managed","_name",b"_name","_private_key",b"_private_key","_region",b"_region","_self_link",b"_self_link","_self_managed",b"_self_managed","_type",b"_type","certificate",b"certificate","creation_timestamp",b"creation_timestamp","description",b"description","expire_time",b"expire_time","id",b"id","kind",b"kind","managed",b"managed","name",b"name","private_key",b"private_key","region",b"region","self_link",b"self_link","self_managed",b"self_managed","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_certificate",b"_certificate","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_expire_time",b"_expire_time","_id",b"_id","_kind",b"_kind","_managed",b"_managed","_name",b"_name","_private_key",b"_private_key","_region",b"_region","_self_link",b"_self_link","_self_managed",b"_self_managed","_type",b"_type","certificate",b"certificate","creation_timestamp",b"creation_timestamp","description",b"description","expire_time",b"expire_time","id",b"id","kind",b"kind","managed",b"managed","name",b"name","private_key",b"private_key","region",b"region","self_link",b"self_link","self_managed",b"self_managed","subject_alternative_names",b"subject_alternative_names","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_certificate",b"_certificate"]) -> typing.Optional[typing_extensions.Literal["certificate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_expire_time",b"_expire_time"]) -> typing.Optional[typing_extensions.Literal["expire_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_managed",b"_managed"]) -> typing.Optional[typing_extensions.Literal["managed"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_private_key",b"_private_key"]) -> typing.Optional[typing_extensions.Literal["private_key"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_managed",b"_self_managed"]) -> typing.Optional[typing_extensions.Literal["self_managed"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___SslCertificate = SslCertificate

class SslCertificateAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___SslCertificatesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___SslCertificatesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___SslCertificatesScopedList]:
        """A list of SslCertificatesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#sslCertificateAggregatedList for lists of SSL Certificates."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___SslCertificatesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___SslCertificateAggregatedList = SslCertificateAggregatedList

class SslCertificateList(google.protobuf.message.Message):
    """Contains a list of SslCertificate resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SslCertificate]:
        """A list of SslCertificate resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___SslCertificate]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___SslCertificateList = SslCertificateList

class SslCertificateManagedSslCertificate(google.protobuf.message.Message):
    """Configuration and status of a managed SSL certificate."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 314733318
        """The certificate management is working, and a certificate has been provisioned."""

        MANAGED_CERTIFICATE_STATUS_UNSPECIFIED: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 474800850
        PROVISIONING: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 290896621
        """The certificate management is working. GCP will attempt to provision the first certificate."""

        PROVISIONING_FAILED: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 76813775
        """Certificate provisioning failed due to an issue with the DNS or load balancing configuration. For details of which domain failed, consult domain_status field."""

        PROVISIONING_FAILED_PERMANENTLY: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 275036203
        """Certificate provisioning failed due to an issue with the DNS or load balancing configuration. It won't be retried. To try again delete and create a new managed SslCertificate resource. For details of which domain failed, consult domain_status field."""

        RENEWAL_FAILED: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 434659076
        """Renewal of the certificate has failed due to an issue with the DNS or load balancing configuration. The existing cert is still serving; however, it will expire shortly. To provision a renewed certificate, delete and create a new managed SslCertificate resource. For details on which domain failed, consult domain_status field."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output only] Status of the managed certificate resource."""
        pass

    UNDEFINED_STATUS: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 314733318
    """The certificate management is working, and a certificate has been provisioned."""

    MANAGED_CERTIFICATE_STATUS_UNSPECIFIED: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 474800850
    PROVISIONING: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 290896621
    """The certificate management is working. GCP will attempt to provision the first certificate."""

    PROVISIONING_FAILED: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 76813775
    """Certificate provisioning failed due to an issue with the DNS or load balancing configuration. For details of which domain failed, consult domain_status field."""

    PROVISIONING_FAILED_PERMANENTLY: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 275036203
    """Certificate provisioning failed due to an issue with the DNS or load balancing configuration. It won't be retried. To try again delete and create a new managed SslCertificate resource. For details of which domain failed, consult domain_status field."""

    RENEWAL_FAILED: SslCertificateManagedSslCertificate.Status.ValueType = ...  # 434659076
    """Renewal of the certificate has failed due to an issue with the DNS or load balancing configuration. The existing cert is still serving; however, it will expire shortly. To provision a renewed certificate, delete and create a new managed SslCertificate resource. For details on which domain failed, consult domain_status field."""


    class DomainStatusEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DOMAIN_STATUS_FIELD_NUMBER: builtins.int
    DOMAINS_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    @property
    def domain_status(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """[Output only] Detailed statuses of the domains specified for managed certificate resource."""
        pass
    @property
    def domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The domains for which a managed SSL certificate will be generated. Each Google-managed SSL certificate supports up to the [maximum number of domains per Google-managed SSL certificate](/load-balancing/docs/quotas#ssl_certificates)."""
        pass
    status: typing.Text = ...
    """[Output only] Status of the managed certificate resource.
    Check the Status enum for the list of possible values.
    """

    def __init__(self,
        *,
        domain_status : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        domains : typing.Optional[typing.Iterable[typing.Text]] = ...,
        status : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_status",b"_status","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_status",b"_status","domain_status",b"domain_status","domains",b"domains","status",b"status"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___SslCertificateManagedSslCertificate = SslCertificateManagedSslCertificate

class SslCertificateSelfManagedSslCertificate(google.protobuf.message.Message):
    """Configuration and status of a self-managed SSL certificate."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CERTIFICATE_FIELD_NUMBER: builtins.int
    PRIVATE_KEY_FIELD_NUMBER: builtins.int
    certificate: typing.Text = ...
    """A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert."""

    private_key: typing.Text = ...
    """A write-only private key in PEM format. Only insert requests will include this field."""

    def __init__(self,
        *,
        certificate : typing.Optional[typing.Text] = ...,
        private_key : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_certificate",b"_certificate","_private_key",b"_private_key","certificate",b"certificate","private_key",b"private_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_certificate",b"_certificate","_private_key",b"_private_key","certificate",b"certificate","private_key",b"private_key"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_certificate",b"_certificate"]) -> typing.Optional[typing_extensions.Literal["certificate"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_private_key",b"_private_key"]) -> typing.Optional[typing_extensions.Literal["private_key"]]: ...
global___SslCertificateSelfManagedSslCertificate = SslCertificateSelfManagedSslCertificate

class SslCertificatesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SSL_CERTIFICATES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def ssl_certificates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SslCertificate]:
        """List of SslCertificates contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of backend services when the list is empty."""
        pass
    def __init__(self,
        *,
        ssl_certificates : typing.Optional[typing.Iterable[global___SslCertificate]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","ssl_certificates",b"ssl_certificates","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___SslCertificatesScopedList = SslCertificatesScopedList

class SslPoliciesList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SslPolicy]:
        """A list of SslPolicy resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#sslPoliciesList for lists of sslPolicies."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___SslPolicy]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___SslPoliciesList = SslPoliciesList

class SslPoliciesListAvailableFeaturesResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FEATURES_FIELD_NUMBER: builtins.int
    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        features : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["features",b"features"]) -> None: ...
global___SslPoliciesListAvailableFeaturesResponse = SslPoliciesListAvailableFeaturesResponse

class SslPolicy(google.protobuf.message.Message):
    """Represents an SSL Policy resource. Use SSL policies to control the SSL features, such as versions and cipher suites, offered by an HTTPS or SSL Proxy load balancer. For more information, read SSL Policy Concepts."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _MinTlsVersion:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MinTlsVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MinTlsVersion.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_MIN_TLS_VERSION: SslPolicy.MinTlsVersion.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        TLS_1_0: SslPolicy.MinTlsVersion.ValueType = ...  # 33116734
        """TLS 1.0"""

        TLS_1_1: SslPolicy.MinTlsVersion.ValueType = ...  # 33116735
        """TLS 1.1"""

        TLS_1_2: SslPolicy.MinTlsVersion.ValueType = ...  # 33116736
        """TLS 1.2"""

    class MinTlsVersion(_MinTlsVersion, metaclass=_MinTlsVersionEnumTypeWrapper):
        """The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2."""
        pass

    UNDEFINED_MIN_TLS_VERSION: SslPolicy.MinTlsVersion.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    TLS_1_0: SslPolicy.MinTlsVersion.ValueType = ...  # 33116734
    """TLS 1.0"""

    TLS_1_1: SslPolicy.MinTlsVersion.ValueType = ...  # 33116735
    """TLS 1.1"""

    TLS_1_2: SslPolicy.MinTlsVersion.ValueType = ...  # 33116736
    """TLS 1.2"""


    class _Profile:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProfileEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Profile.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROFILE: SslPolicy.Profile.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        COMPATIBLE: SslPolicy.Profile.ValueType = ...  # 179357396
        """Compatible profile. Allows the broadset set of clients, even those which support only out-of-date SSL features to negotiate with the load balancer."""

        CUSTOM: SslPolicy.Profile.ValueType = ...  # 388595569
        """Custom profile. Allow only the set of allowed SSL features specified in the customFeatures field."""

        MODERN: SslPolicy.Profile.ValueType = ...  # 132013855
        """Modern profile. Supports a wide set of SSL features, allowing modern clients to negotiate SSL with the load balancer."""

        RESTRICTED: SslPolicy.Profile.ValueType = ...  # 261551195
        """Restricted profile. Supports a reduced set of SSL features, intended to meet stricter compliance requirements."""

    class Profile(_Profile, metaclass=_ProfileEnumTypeWrapper):
        """Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field."""
        pass

    UNDEFINED_PROFILE: SslPolicy.Profile.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    COMPATIBLE: SslPolicy.Profile.ValueType = ...  # 179357396
    """Compatible profile. Allows the broadset set of clients, even those which support only out-of-date SSL features to negotiate with the load balancer."""

    CUSTOM: SslPolicy.Profile.ValueType = ...  # 388595569
    """Custom profile. Allow only the set of allowed SSL features specified in the customFeatures field."""

    MODERN: SslPolicy.Profile.ValueType = ...  # 132013855
    """Modern profile. Supports a wide set of SSL features, allowing modern clients to negotiate SSL with the load balancer."""

    RESTRICTED: SslPolicy.Profile.ValueType = ...  # 261551195
    """Restricted profile. Supports a reduced set of SSL features, intended to meet stricter compliance requirements."""


    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    CUSTOM_FEATURES_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ENABLED_FEATURES_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    MIN_TLS_VERSION_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROFILE_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNINGS_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def custom_features(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of features enabled when the selected profile is CUSTOM. The method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM."""
        pass
    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    @property
    def enabled_features(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] The list of features enabled in the SSL policy."""
        pass
    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a SslPolicy. An up-to-date fingerprint must be provided in order to update the SslPolicy, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an SslPolicy."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output only] Type of the resource. Always compute#sslPolicyfor SSL policies."""

    min_tls_version: typing.Text = ...
    """The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.
    Check the MinTlsVersion enum for the list of possible values.
    """

    name: typing.Text = ...
    """Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    profile: typing.Text = ...
    """Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.
    Check the Profile enum for the list of possible values.
    """

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def warnings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Warnings]:
        """[Output Only] If potential misconfigurations are detected for this SSL policy, this field will be populated with warning messages."""
        pass
    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        custom_features : typing.Optional[typing.Iterable[typing.Text]] = ...,
        description : typing.Optional[typing.Text] = ...,
        enabled_features : typing.Optional[typing.Iterable[typing.Text]] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        min_tls_version : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        profile : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warnings : typing.Optional[typing.Iterable[global___Warnings]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_min_tls_version",b"_min_tls_version","_name",b"_name","_profile",b"_profile","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","min_tls_version",b"min_tls_version","name",b"name","profile",b"profile","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_min_tls_version",b"_min_tls_version","_name",b"_name","_profile",b"_profile","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","custom_features",b"custom_features","description",b"description","enabled_features",b"enabled_features","fingerprint",b"fingerprint","id",b"id","kind",b"kind","min_tls_version",b"min_tls_version","name",b"name","profile",b"profile","self_link",b"self_link","warnings",b"warnings"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_min_tls_version",b"_min_tls_version"]) -> typing.Optional[typing_extensions.Literal["min_tls_version"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_profile",b"_profile"]) -> typing.Optional[typing_extensions.Literal["profile"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___SslPolicy = SslPolicy

class SslPolicyReference(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SSL_POLICY_FIELD_NUMBER: builtins.int
    ssl_policy: typing.Text = ...
    """URL of the SSL policy resource. Set this to empty string to clear any existing SSL policy associated with the target proxy resource."""

    def __init__(self,
        *,
        ssl_policy : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ssl_policy",b"_ssl_policy","ssl_policy",b"ssl_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ssl_policy",b"_ssl_policy","ssl_policy",b"ssl_policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ssl_policy",b"_ssl_policy"]) -> typing.Optional[typing_extensions.Literal["ssl_policy"]]: ...
global___SslPolicyReference = SslPolicyReference

class StartInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.Start. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance resource to start."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___StartInstanceRequest = StartInstanceRequest

class StartWithEncryptionKeyInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.StartWithEncryptionKey. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    INSTANCES_START_WITH_ENCRYPTION_KEY_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance resource to start."""

    @property
    def instances_start_with_encryption_key_request_resource(self) -> global___InstancesStartWithEncryptionKeyRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        instances_start_with_encryption_key_request_resource : typing.Optional[global___InstancesStartWithEncryptionKeyRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instances_start_with_encryption_key_request_resource",b"instances_start_with_encryption_key_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","instances_start_with_encryption_key_request_resource",b"instances_start_with_encryption_key_request_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___StartWithEncryptionKeyInstanceRequest = StartWithEncryptionKeyInstanceRequest

class StatefulPolicy(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRESERVED_STATE_FIELD_NUMBER: builtins.int
    @property
    def preserved_state(self) -> global___StatefulPolicyPreservedState: ...
    def __init__(self,
        *,
        preserved_state : typing.Optional[global___StatefulPolicyPreservedState] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_preserved_state",b"_preserved_state","preserved_state",b"preserved_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_preserved_state",b"_preserved_state","preserved_state",b"preserved_state"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preserved_state",b"_preserved_state"]) -> typing.Optional[typing_extensions.Literal["preserved_state"]]: ...
global___StatefulPolicy = StatefulPolicy

class StatefulPolicyPreservedState(google.protobuf.message.Message):
    """Configuration of preserved resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class DisksEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___StatefulPolicyPreservedStateDiskDevice: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___StatefulPolicyPreservedStateDiskDevice] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DISKS_FIELD_NUMBER: builtins.int
    @property
    def disks(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___StatefulPolicyPreservedStateDiskDevice]:
        """Disks created on the instances that will be preserved on instance delete, update, etc. This map is keyed with the device names of the disks."""
        pass
    def __init__(self,
        *,
        disks : typing.Optional[typing.Mapping[typing.Text, global___StatefulPolicyPreservedStateDiskDevice]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["disks",b"disks"]) -> None: ...
global___StatefulPolicyPreservedState = StatefulPolicyPreservedState

class StatefulPolicyPreservedStateDiskDevice(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AutoDelete:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AutoDeleteEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AutoDelete.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_AUTO_DELETE: StatefulPolicyPreservedStateDiskDevice.AutoDelete.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NEVER: StatefulPolicyPreservedStateDiskDevice.AutoDelete.ValueType = ...  # 74175084
        ON_PERMANENT_INSTANCE_DELETION: StatefulPolicyPreservedStateDiskDevice.AutoDelete.ValueType = ...  # 95727719
    class AutoDelete(_AutoDelete, metaclass=_AutoDeleteEnumTypeWrapper):
        """These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted."""
        pass

    UNDEFINED_AUTO_DELETE: StatefulPolicyPreservedStateDiskDevice.AutoDelete.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NEVER: StatefulPolicyPreservedStateDiskDevice.AutoDelete.ValueType = ...  # 74175084
    ON_PERMANENT_INSTANCE_DELETION: StatefulPolicyPreservedStateDiskDevice.AutoDelete.ValueType = ...  # 95727719

    AUTO_DELETE_FIELD_NUMBER: builtins.int
    auto_delete: typing.Text = ...
    """These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted.
    Check the AutoDelete enum for the list of possible values.
    """

    def __init__(self,
        *,
        auto_delete : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_auto_delete",b"_auto_delete","auto_delete",b"auto_delete"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_auto_delete",b"_auto_delete","auto_delete",b"auto_delete"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_auto_delete",b"_auto_delete"]) -> typing.Optional[typing_extensions.Literal["auto_delete"]]: ...
global___StatefulPolicyPreservedStateDiskDevice = StatefulPolicyPreservedStateDiskDevice

class StopInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.Stop. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance resource to stop."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___StopInstanceRequest = StopInstanceRequest

class Subnetwork(google.protobuf.message.Message):
    """Represents a Subnetwork resource. A subnetwork (also known as a subnet) is a logical partition of a Virtual Private Cloud network with one primary IP range and zero or more secondary IP ranges. For more information, read Virtual Private Cloud (VPC) Network."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Ipv6AccessType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _Ipv6AccessTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Ipv6AccessType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_IPV6_ACCESS_TYPE: Subnetwork.Ipv6AccessType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        EXTERNAL: Subnetwork.Ipv6AccessType.ValueType = ...  # 35607499
        """VMs on this subnet will be assigned IPv6 addresses that are accesible via the Internet, as well as the VPC network."""

        UNSPECIFIED_IPV6_ACCESS_TYPE: Subnetwork.Ipv6AccessType.ValueType = ...  # 313080613
        """IPv6 access type not set. Means this subnet hasn't been turned on IPv6 yet."""

    class Ipv6AccessType(_Ipv6AccessType, metaclass=_Ipv6AccessTypeEnumTypeWrapper):
        """The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet cannot enable direct path."""
        pass

    UNDEFINED_IPV6_ACCESS_TYPE: Subnetwork.Ipv6AccessType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    EXTERNAL: Subnetwork.Ipv6AccessType.ValueType = ...  # 35607499
    """VMs on this subnet will be assigned IPv6 addresses that are accesible via the Internet, as well as the VPC network."""

    UNSPECIFIED_IPV6_ACCESS_TYPE: Subnetwork.Ipv6AccessType.ValueType = ...  # 313080613
    """IPv6 access type not set. Means this subnet hasn't been turned on IPv6 yet."""


    class _PrivateIpv6GoogleAccess:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PrivateIpv6GoogleAccessEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PrivateIpv6GoogleAccess.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PRIVATE_IPV6_GOOGLE_ACCESS: Subnetwork.PrivateIpv6GoogleAccess.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DISABLE_GOOGLE_ACCESS: Subnetwork.PrivateIpv6GoogleAccess.ValueType = ...  # 450958579
        """Disable private IPv6 access to/from Google services."""

        ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE: Subnetwork.PrivateIpv6GoogleAccess.ValueType = ...  # 427975994
        """Bidirectional private IPv6 access to/from Google services."""

        ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE: Subnetwork.PrivateIpv6GoogleAccess.ValueType = ...  # 288210263
        """Outbound private IPv6 access from VMs in this subnet to Google services."""

    class PrivateIpv6GoogleAccess(_PrivateIpv6GoogleAccess, metaclass=_PrivateIpv6GoogleAccessEnumTypeWrapper):
        """The private IPv6 google access type for the VMs in this subnet. This is an expanded field of enablePrivateV6Access. If both fields are set, privateIpv6GoogleAccess will take priority. This field can be both set at resource creation time and updated using patch."""
        pass

    UNDEFINED_PRIVATE_IPV6_GOOGLE_ACCESS: Subnetwork.PrivateIpv6GoogleAccess.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DISABLE_GOOGLE_ACCESS: Subnetwork.PrivateIpv6GoogleAccess.ValueType = ...  # 450958579
    """Disable private IPv6 access to/from Google services."""

    ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE: Subnetwork.PrivateIpv6GoogleAccess.ValueType = ...  # 427975994
    """Bidirectional private IPv6 access to/from Google services."""

    ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE: Subnetwork.PrivateIpv6GoogleAccess.ValueType = ...  # 288210263
    """Outbound private IPv6 access from VMs in this subnet to Google services."""


    class _Purpose:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PurposeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Purpose.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PURPOSE: Subnetwork.Purpose.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        INTERNAL_HTTPS_LOAD_BALANCER: Subnetwork.Purpose.ValueType = ...  # 248748889
        """Subnet reserved for Internal HTTP(S) Load Balancing."""

        PRIVATE: Subnetwork.Purpose.ValueType = ...  # 403485027
        """Regular user created or automatically created subnet."""

        PRIVATE_RFC_1918: Subnetwork.Purpose.ValueType = ...  # 254902107
        """Regular user created or automatically created subnet."""

        PRIVATE_SERVICE_CONNECT: Subnetwork.Purpose.ValueType = ...  # 48134724
        """Subnetworks created for Private Service Connect in the producer network."""

    class Purpose(_Purpose, metaclass=_PurposeEnumTypeWrapper):
        """The purpose of the resource. This field can be either PRIVATE_RFC_1918 or INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults to PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER."""
        pass

    UNDEFINED_PURPOSE: Subnetwork.Purpose.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    INTERNAL_HTTPS_LOAD_BALANCER: Subnetwork.Purpose.ValueType = ...  # 248748889
    """Subnet reserved for Internal HTTP(S) Load Balancing."""

    PRIVATE: Subnetwork.Purpose.ValueType = ...  # 403485027
    """Regular user created or automatically created subnet."""

    PRIVATE_RFC_1918: Subnetwork.Purpose.ValueType = ...  # 254902107
    """Regular user created or automatically created subnet."""

    PRIVATE_SERVICE_CONNECT: Subnetwork.Purpose.ValueType = ...  # 48134724
    """Subnetworks created for Private Service Connect in the producer network."""


    class _Role:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _RoleEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Role.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_ROLE: Subnetwork.Role.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ACTIVE: Subnetwork.Role.ValueType = ...  # 314733318
        """The ACTIVE subnet that is currently used."""

        BACKUP: Subnetwork.Role.ValueType = ...  # 341010882
        """The BACKUP subnet that could be promoted to ACTIVE."""

    class Role(_Role, metaclass=_RoleEnumTypeWrapper):
        """The role of subnetwork. Currently, this field is only used when purpose = INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An ACTIVE subnetwork is one that is currently being used for Internal HTTP(S) Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining. This field can be updated with a patch request."""
        pass

    UNDEFINED_ROLE: Subnetwork.Role.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ACTIVE: Subnetwork.Role.ValueType = ...  # 314733318
    """The ACTIVE subnet that is currently used."""

    BACKUP: Subnetwork.Role.ValueType = ...  # 341010882
    """The BACKUP subnet that could be promoted to ACTIVE."""


    class _StackType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StackTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_StackType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STACK_TYPE: Subnetwork.StackType.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        IPV4_IPV6: Subnetwork.StackType.ValueType = ...  # 22197249
        """New VMs in this subnet can have both IPv4 and IPv6 addresses."""

        IPV4_ONLY: Subnetwork.StackType.ValueType = ...  # 22373798
        """New VMs in this subnet will only be assigned IPv4 addresses."""

        UNSPECIFIED_STACK_TYPE: Subnetwork.StackType.ValueType = ...  # 298084569
    class StackType(_StackType, metaclass=_StackTypeEnumTypeWrapper):
        """The stack type for this subnet to identify whether the IPv6 feature is enabled or not. If not specified IPV4_ONLY will be used. This field can be both set at resource creation time and updated using patch."""
        pass

    UNDEFINED_STACK_TYPE: Subnetwork.StackType.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    IPV4_IPV6: Subnetwork.StackType.ValueType = ...  # 22197249
    """New VMs in this subnet can have both IPv4 and IPv6 addresses."""

    IPV4_ONLY: Subnetwork.StackType.ValueType = ...  # 22373798
    """New VMs in this subnet will only be assigned IPv4 addresses."""

    UNSPECIFIED_STACK_TYPE: Subnetwork.StackType.ValueType = ...  # 298084569

    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: Subnetwork.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DRAINING: Subnetwork.State.ValueType = ...  # 480455402
        """Subnetwork is being drained."""

        READY: Subnetwork.State.ValueType = ...  # 77848963
        """Subnetwork is ready for use."""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """[Output Only] The state of the subnetwork, which can be one of the following values: READY: Subnetwork is created and ready to use DRAINING: only applicable to subnetworks that have the purpose set to INTERNAL_HTTPS_LOAD_BALANCER and indicates that connections to the load balancer are being drained. A subnetwork that is draining cannot be used or modified until it reaches a status of READY"""
        pass

    UNDEFINED_STATE: Subnetwork.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DRAINING: Subnetwork.State.ValueType = ...  # 480455402
    """Subnetwork is being drained."""

    READY: Subnetwork.State.ValueType = ...  # 77848963
    """Subnetwork is ready for use."""


    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ENABLE_FLOW_LOGS_FIELD_NUMBER: builtins.int
    EXTERNAL_IPV6_PREFIX_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    GATEWAY_ADDRESS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    IPV6_ACCESS_TYPE_FIELD_NUMBER: builtins.int
    IPV6_CIDR_RANGE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LOG_CONFIG_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    PRIVATE_IP_GOOGLE_ACCESS_FIELD_NUMBER: builtins.int
    PRIVATE_IPV6_GOOGLE_ACCESS_FIELD_NUMBER: builtins.int
    PURPOSE_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    ROLE_FIELD_NUMBER: builtins.int
    SECONDARY_IP_RANGES_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STACK_TYPE_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource. This field can be set only at resource creation time."""

    enable_flow_logs: builtins.bool = ...
    """Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is to disable flow logging. This field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER."""

    external_ipv6_prefix: typing.Text = ...
    """[Output Only] The range of external IPv6 addresses that are owned by this subnetwork."""

    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a Subnetwork. An up-to-date fingerprint must be provided in order to update the Subnetwork, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a Subnetwork."""

    gateway_address: typing.Text = ...
    """[Output Only] The gateway address for default routes to reach destination addresses outside this subnetwork."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    ip_cidr_range: typing.Text = ...
    """The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork. For example, 10.0.0.0/8 or 100.64.0.0/10. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported. This field is set at resource creation time. The range can be any range listed in the Valid ranges list. The range can be expanded after creation using expandIpCidrRange."""

    ipv6_access_type: typing.Text = ...
    """The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet cannot enable direct path.
    Check the Ipv6AccessType enum for the list of possible values.
    """

    ipv6_cidr_range: typing.Text = ...
    """[Output Only] The range of internal IPv6 addresses that are owned by this subnetwork."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#subnetwork for Subnetwork resources."""

    @property
    def log_config(self) -> global___SubnetworkLogConfig:
        """This field denotes the VPC flow logging options for this subnetwork. If logging is enabled, logs are exported to Cloud Logging."""
        pass
    name: typing.Text = ...
    """The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    network: typing.Text = ...
    """The URL of the network to which this subnetwork belongs, provided by the client when initially creating the subnetwork. This field can be set only at resource creation time."""

    private_ip_google_access: builtins.bool = ...
    """Whether the VMs in this subnet can access Google services without assigned external IP addresses. This field can be both set at resource creation time and updated using setPrivateIpGoogleAccess."""

    private_ipv6_google_access: typing.Text = ...
    """The private IPv6 google access type for the VMs in this subnet. This is an expanded field of enablePrivateV6Access. If both fields are set, privateIpv6GoogleAccess will take priority. This field can be both set at resource creation time and updated using patch.
    Check the PrivateIpv6GoogleAccess enum for the list of possible values.
    """

    purpose: typing.Text = ...
    """The purpose of the resource. This field can be either PRIVATE_RFC_1918 or INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults to PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
    Check the Purpose enum for the list of possible values.
    """

    region: typing.Text = ...
    """URL of the region where the Subnetwork resides. This field can be set only at resource creation time."""

    role: typing.Text = ...
    """The role of subnetwork. Currently, this field is only used when purpose = INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An ACTIVE subnetwork is one that is currently being used for Internal HTTP(S) Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to ACTIVE or is currently draining. This field can be updated with a patch request.
    Check the Role enum for the list of possible values.
    """

    @property
    def secondary_ip_ranges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubnetworkSecondaryRange]:
        """An array of configurations for secondary IP ranges for VM instances contained in this subnetwork. The primary IP of such VM must belong to the primary ipCidrRange of the subnetwork. The alias IPs may belong to either primary or secondary ranges. This field can be updated with a patch request."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    stack_type: typing.Text = ...
    """The stack type for this subnet to identify whether the IPv6 feature is enabled or not. If not specified IPV4_ONLY will be used. This field can be both set at resource creation time and updated using patch.
    Check the StackType enum for the list of possible values.
    """

    state: typing.Text = ...
    """[Output Only] The state of the subnetwork, which can be one of the following values: READY: Subnetwork is created and ready to use DRAINING: only applicable to subnetworks that have the purpose set to INTERNAL_HTTPS_LOAD_BALANCER and indicates that connections to the load balancer are being drained. A subnetwork that is draining cannot be used or modified until it reaches a status of READY
    Check the State enum for the list of possible values.
    """

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        enable_flow_logs : typing.Optional[builtins.bool] = ...,
        external_ipv6_prefix : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        gateway_address : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        ip_cidr_range : typing.Optional[typing.Text] = ...,
        ipv6_access_type : typing.Optional[typing.Text] = ...,
        ipv6_cidr_range : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        log_config : typing.Optional[global___SubnetworkLogConfig] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        private_ip_google_access : typing.Optional[builtins.bool] = ...,
        private_ipv6_google_access : typing.Optional[typing.Text] = ...,
        purpose : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        role : typing.Optional[typing.Text] = ...,
        secondary_ip_ranges : typing.Optional[typing.Iterable[global___SubnetworkSecondaryRange]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        stack_type : typing.Optional[typing.Text] = ...,
        state : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_enable_flow_logs",b"_enable_flow_logs","_external_ipv6_prefix",b"_external_ipv6_prefix","_fingerprint",b"_fingerprint","_gateway_address",b"_gateway_address","_id",b"_id","_ip_cidr_range",b"_ip_cidr_range","_ipv6_access_type",b"_ipv6_access_type","_ipv6_cidr_range",b"_ipv6_cidr_range","_kind",b"_kind","_log_config",b"_log_config","_name",b"_name","_network",b"_network","_private_ip_google_access",b"_private_ip_google_access","_private_ipv6_google_access",b"_private_ipv6_google_access","_purpose",b"_purpose","_region",b"_region","_role",b"_role","_self_link",b"_self_link","_stack_type",b"_stack_type","_state",b"_state","creation_timestamp",b"creation_timestamp","description",b"description","enable_flow_logs",b"enable_flow_logs","external_ipv6_prefix",b"external_ipv6_prefix","fingerprint",b"fingerprint","gateway_address",b"gateway_address","id",b"id","ip_cidr_range",b"ip_cidr_range","ipv6_access_type",b"ipv6_access_type","ipv6_cidr_range",b"ipv6_cidr_range","kind",b"kind","log_config",b"log_config","name",b"name","network",b"network","private_ip_google_access",b"private_ip_google_access","private_ipv6_google_access",b"private_ipv6_google_access","purpose",b"purpose","region",b"region","role",b"role","self_link",b"self_link","stack_type",b"stack_type","state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_enable_flow_logs",b"_enable_flow_logs","_external_ipv6_prefix",b"_external_ipv6_prefix","_fingerprint",b"_fingerprint","_gateway_address",b"_gateway_address","_id",b"_id","_ip_cidr_range",b"_ip_cidr_range","_ipv6_access_type",b"_ipv6_access_type","_ipv6_cidr_range",b"_ipv6_cidr_range","_kind",b"_kind","_log_config",b"_log_config","_name",b"_name","_network",b"_network","_private_ip_google_access",b"_private_ip_google_access","_private_ipv6_google_access",b"_private_ipv6_google_access","_purpose",b"_purpose","_region",b"_region","_role",b"_role","_self_link",b"_self_link","_stack_type",b"_stack_type","_state",b"_state","creation_timestamp",b"creation_timestamp","description",b"description","enable_flow_logs",b"enable_flow_logs","external_ipv6_prefix",b"external_ipv6_prefix","fingerprint",b"fingerprint","gateway_address",b"gateway_address","id",b"id","ip_cidr_range",b"ip_cidr_range","ipv6_access_type",b"ipv6_access_type","ipv6_cidr_range",b"ipv6_cidr_range","kind",b"kind","log_config",b"log_config","name",b"name","network",b"network","private_ip_google_access",b"private_ip_google_access","private_ipv6_google_access",b"private_ipv6_google_access","purpose",b"purpose","region",b"region","role",b"role","secondary_ip_ranges",b"secondary_ip_ranges","self_link",b"self_link","stack_type",b"stack_type","state",b"state"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable_flow_logs",b"_enable_flow_logs"]) -> typing.Optional[typing_extensions.Literal["enable_flow_logs"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_external_ipv6_prefix",b"_external_ipv6_prefix"]) -> typing.Optional[typing_extensions.Literal["external_ipv6_prefix"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gateway_address",b"_gateway_address"]) -> typing.Optional[typing_extensions.Literal["gateway_address"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range"]) -> typing.Optional[typing_extensions.Literal["ip_cidr_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ipv6_access_type",b"_ipv6_access_type"]) -> typing.Optional[typing_extensions.Literal["ipv6_access_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ipv6_cidr_range",b"_ipv6_cidr_range"]) -> typing.Optional[typing_extensions.Literal["ipv6_cidr_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_log_config",b"_log_config"]) -> typing.Optional[typing_extensions.Literal["log_config"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_private_ip_google_access",b"_private_ip_google_access"]) -> typing.Optional[typing_extensions.Literal["private_ip_google_access"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_private_ipv6_google_access",b"_private_ipv6_google_access"]) -> typing.Optional[typing_extensions.Literal["private_ipv6_google_access"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_purpose",b"_purpose"]) -> typing.Optional[typing_extensions.Literal["purpose"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_role",b"_role"]) -> typing.Optional[typing_extensions.Literal["role"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_stack_type",b"_stack_type"]) -> typing.Optional[typing_extensions.Literal["stack_type"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
global___Subnetwork = Subnetwork

class SubnetworkAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___SubnetworksScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___SubnetworksScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___SubnetworksScopedList]:
        """A list of SubnetworksScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#subnetworkAggregatedList for aggregated lists of subnetworks."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___SubnetworksScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___SubnetworkAggregatedList = SubnetworkAggregatedList

class SubnetworkList(google.protobuf.message.Message):
    """Contains a list of Subnetwork resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Subnetwork]:
        """A list of Subnetwork resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#subnetworkList for lists of subnetworks."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Subnetwork]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___SubnetworkList = SubnetworkList

class SubnetworkLogConfig(google.protobuf.message.Message):
    """The available logging options for this subnetwork."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _AggregationInterval:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AggregationIntervalEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AggregationInterval.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_AGGREGATION_INTERVAL: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        INTERVAL_10_MIN: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 487155916
        INTERVAL_15_MIN: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 491773521
        INTERVAL_1_MIN: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 69052714
        INTERVAL_30_SEC: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 7548937
        INTERVAL_5_MIN: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 72746798
        INTERVAL_5_SEC: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 72752429
    class AggregationInterval(_AggregationInterval, metaclass=_AggregationIntervalEnumTypeWrapper):
        """Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection."""
        pass

    UNDEFINED_AGGREGATION_INTERVAL: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    INTERVAL_10_MIN: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 487155916
    INTERVAL_15_MIN: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 491773521
    INTERVAL_1_MIN: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 69052714
    INTERVAL_30_SEC: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 7548937
    INTERVAL_5_MIN: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 72746798
    INTERVAL_5_SEC: SubnetworkLogConfig.AggregationInterval.ValueType = ...  # 72752429

    class _Metadata:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MetadataEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Metadata.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_METADATA: SubnetworkLogConfig.Metadata.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CUSTOM_METADATA: SubnetworkLogConfig.Metadata.ValueType = ...  # 62450749
        EXCLUDE_ALL_METADATA: SubnetworkLogConfig.Metadata.ValueType = ...  # 334519954
        INCLUDE_ALL_METADATA: SubnetworkLogConfig.Metadata.ValueType = ...  # 164619908
    class Metadata(_Metadata, metaclass=_MetadataEnumTypeWrapper):
        """Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA."""
        pass

    UNDEFINED_METADATA: SubnetworkLogConfig.Metadata.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CUSTOM_METADATA: SubnetworkLogConfig.Metadata.ValueType = ...  # 62450749
    EXCLUDE_ALL_METADATA: SubnetworkLogConfig.Metadata.ValueType = ...  # 334519954
    INCLUDE_ALL_METADATA: SubnetworkLogConfig.Metadata.ValueType = ...  # 164619908

    AGGREGATION_INTERVAL_FIELD_NUMBER: builtins.int
    ENABLE_FIELD_NUMBER: builtins.int
    FILTER_EXPR_FIELD_NUMBER: builtins.int
    FLOW_SAMPLING_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    METADATA_FIELDS_FIELD_NUMBER: builtins.int
    aggregation_interval: typing.Text = ...
    """Can only be specified if VPC flow logging for this subnetwork is enabled. Toggles the aggregation interval for collecting flow logs. Increasing the interval time will reduce the amount of generated flow logs for long lasting connections. Default is an interval of 5 seconds per connection.
    Check the AggregationInterval enum for the list of possible values.
    """

    enable: builtins.bool = ...
    """Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is to disable flow logging."""

    filter_expr: typing.Text = ...
    """Can only be specified if VPC flow logs for this subnetwork is enabled. Export filter used to define which VPC flow logs should be logged."""

    flow_sampling: builtins.float = ...
    """Can only be specified if VPC flow logging for this subnetwork is enabled. The value of the field must be in [0, 1]. Set the sampling rate of VPC flow logs within the subnetwork where 1.0 means all collected logs are reported and 0.0 means no logs are reported. Default is 0.5, which means half of all collected logs are reported."""

    metadata: typing.Text = ...
    """Can only be specified if VPC flow logs for this subnetwork is enabled. Configures whether all, none or a subset of metadata fields should be added to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
    Check the Metadata enum for the list of possible values.
    """

    @property
    def metadata_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Can only be specified if VPC flow logs for this subnetwork is enabled and "metadata" was set to CUSTOM_METADATA."""
        pass
    def __init__(self,
        *,
        aggregation_interval : typing.Optional[typing.Text] = ...,
        enable : typing.Optional[builtins.bool] = ...,
        filter_expr : typing.Optional[typing.Text] = ...,
        flow_sampling : typing.Optional[builtins.float] = ...,
        metadata : typing.Optional[typing.Text] = ...,
        metadata_fields : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_aggregation_interval",b"_aggregation_interval","_enable",b"_enable","_filter_expr",b"_filter_expr","_flow_sampling",b"_flow_sampling","_metadata",b"_metadata","aggregation_interval",b"aggregation_interval","enable",b"enable","filter_expr",b"filter_expr","flow_sampling",b"flow_sampling","metadata",b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_aggregation_interval",b"_aggregation_interval","_enable",b"_enable","_filter_expr",b"_filter_expr","_flow_sampling",b"_flow_sampling","_metadata",b"_metadata","aggregation_interval",b"aggregation_interval","enable",b"enable","filter_expr",b"filter_expr","flow_sampling",b"flow_sampling","metadata",b"metadata","metadata_fields",b"metadata_fields"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_aggregation_interval",b"_aggregation_interval"]) -> typing.Optional[typing_extensions.Literal["aggregation_interval"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enable",b"_enable"]) -> typing.Optional[typing_extensions.Literal["enable"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_filter_expr",b"_filter_expr"]) -> typing.Optional[typing_extensions.Literal["filter_expr"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_flow_sampling",b"_flow_sampling"]) -> typing.Optional[typing_extensions.Literal["flow_sampling"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_metadata",b"_metadata"]) -> typing.Optional[typing_extensions.Literal["metadata"]]: ...
global___SubnetworkLogConfig = SubnetworkLogConfig

class SubnetworkSecondaryRange(google.protobuf.message.Message):
    """Represents a secondary IP range of a subnetwork."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    RANGE_NAME_FIELD_NUMBER: builtins.int
    ip_cidr_range: typing.Text = ...
    """The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported. The range can be any range listed in the Valid ranges list."""

    range_name: typing.Text = ...
    """The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork."""

    def __init__(self,
        *,
        ip_cidr_range : typing.Optional[typing.Text] = ...,
        range_name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range","_range_name",b"_range_name","ip_cidr_range",b"ip_cidr_range","range_name",b"range_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range","_range_name",b"_range_name","ip_cidr_range",b"ip_cidr_range","range_name",b"range_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range"]) -> typing.Optional[typing_extensions.Literal["ip_cidr_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_range_name",b"_range_name"]) -> typing.Optional[typing_extensions.Literal["range_name"]]: ...
global___SubnetworkSecondaryRange = SubnetworkSecondaryRange

class SubnetworksExpandIpCidrRangeRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    ip_cidr_range: typing.Text = ...
    """The IP (in CIDR format or netmask) of internal addresses that are legal on this Subnetwork. This range should be disjoint from other subnetworks within this network. This range can only be larger than (i.e. a superset of) the range previously defined before the update."""

    def __init__(self,
        *,
        ip_cidr_range : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range","ip_cidr_range",b"ip_cidr_range"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range","ip_cidr_range",b"ip_cidr_range"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range"]) -> typing.Optional[typing_extensions.Literal["ip_cidr_range"]]: ...
global___SubnetworksExpandIpCidrRangeRequest = SubnetworksExpandIpCidrRangeRequest

class SubnetworksScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUBNETWORKS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def subnetworks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Subnetwork]:
        """A list of subnetworks contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """An informational warning that appears when the list of addresses is empty."""
        pass
    def __init__(self,
        *,
        subnetworks : typing.Optional[typing.Iterable[global___Subnetwork]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","subnetworks",b"subnetworks","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___SubnetworksScopedList = SubnetworksScopedList

class SubnetworksSetPrivateIpGoogleAccessRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRIVATE_IP_GOOGLE_ACCESS_FIELD_NUMBER: builtins.int
    private_ip_google_access: builtins.bool = ...
    def __init__(self,
        *,
        private_ip_google_access : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_private_ip_google_access",b"_private_ip_google_access","private_ip_google_access",b"private_ip_google_access"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_private_ip_google_access",b"_private_ip_google_access","private_ip_google_access",b"private_ip_google_access"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_private_ip_google_access",b"_private_ip_google_access"]) -> typing.Optional[typing_extensions.Literal["private_ip_google_access"]]: ...
global___SubnetworksSetPrivateIpGoogleAccessRequest = SubnetworksSetPrivateIpGoogleAccessRequest

class Subsetting(google.protobuf.message.Message):
    """Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing, Internal HTTP(S) load balancing and Traffic Director."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Policy:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PolicyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Policy.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_POLICY: Subsetting.Policy.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CONSISTENT_HASH_SUBSETTING: Subsetting.Policy.ValueType = ...  # 108989492
        """Subsetting based on consistent hashing. For Traffic Director, the number of backends per backend group (the subset size) is based on the `subset_size` parameter. For Internal HTTP(S) load balancing, the number of backends per backend group (the subset size) is dynamically adjusted in two cases: - As the number of proxy instances participating in Internal HTTP(S) load balancing increases, the subset size decreases. - When the total number of backends in a network exceeds the capacity of a single proxy instance, subset sizes are reduced automatically for each service that has backend subsetting enabled."""

        NONE: Subsetting.Policy.ValueType = ...  # 2402104
        """No Subsetting. Clients may open connections and send traffic to all backends of this backend service. This can lead to performance issues if there is substantial imbalance in the count of clients and backends."""

    class Policy(_Policy, metaclass=_PolicyEnumTypeWrapper):
        """"""
        pass

    UNDEFINED_POLICY: Subsetting.Policy.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CONSISTENT_HASH_SUBSETTING: Subsetting.Policy.ValueType = ...  # 108989492
    """Subsetting based on consistent hashing. For Traffic Director, the number of backends per backend group (the subset size) is based on the `subset_size` parameter. For Internal HTTP(S) load balancing, the number of backends per backend group (the subset size) is dynamically adjusted in two cases: - As the number of proxy instances participating in Internal HTTP(S) load balancing increases, the subset size decreases. - When the total number of backends in a network exceeds the capacity of a single proxy instance, subset sizes are reduced automatically for each service that has backend subsetting enabled."""

    NONE: Subsetting.Policy.ValueType = ...  # 2402104
    """No Subsetting. Clients may open connections and send traffic to all backends of this backend service. This can lead to performance issues if there is substantial imbalance in the count of clients and backends."""


    POLICY_FIELD_NUMBER: builtins.int
    policy: typing.Text = ...
    """
    Check the Policy enum for the list of possible values.
    """

    def __init__(self,
        *,
        policy : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_policy",b"_policy","policy",b"policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_policy",b"_policy","policy",b"policy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_policy",b"_policy"]) -> typing.Optional[typing_extensions.Literal["policy"]]: ...
global___Subsetting = Subsetting

class SwitchToCustomModeNetworkRequest(google.protobuf.message.Message):
    """A request message for Networks.SwitchToCustomMode. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    network: typing.Text = ...
    """Name of the network to be updated."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network",b"network","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___SwitchToCustomModeNetworkRequest = SwitchToCustomModeNetworkRequest

class TCPHealthCheck(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _PortSpecification:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _PortSpecificationEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PortSpecification.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PORT_SPECIFICATION: TCPHealthCheck.PortSpecification.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        USE_FIXED_PORT: TCPHealthCheck.PortSpecification.ValueType = ...  # 190235748
        """The port number in port is used for health checking."""

        USE_NAMED_PORT: TCPHealthCheck.PortSpecification.ValueType = ...  # 349300671
        """The portName is used for health checking."""

        USE_SERVING_PORT: TCPHealthCheck.PortSpecification.ValueType = ...  # 362637516
        """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""

    class PortSpecification(_PortSpecification, metaclass=_PortSpecificationEnumTypeWrapper):
        """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, TCP health check follows behavior specified in port and portName fields."""
        pass

    UNDEFINED_PORT_SPECIFICATION: TCPHealthCheck.PortSpecification.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    USE_FIXED_PORT: TCPHealthCheck.PortSpecification.ValueType = ...  # 190235748
    """The port number in port is used for health checking."""

    USE_NAMED_PORT: TCPHealthCheck.PortSpecification.ValueType = ...  # 349300671
    """The portName is used for health checking."""

    USE_SERVING_PORT: TCPHealthCheck.PortSpecification.ValueType = ...  # 362637516
    """For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking."""


    class _ProxyHeader:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProxyHeaderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProxyHeader.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROXY_HEADER: TCPHealthCheck.ProxyHeader.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NONE: TCPHealthCheck.ProxyHeader.ValueType = ...  # 2402104
        PROXY_V1: TCPHealthCheck.ProxyHeader.ValueType = ...  # 334352940
    class ProxyHeader(_ProxyHeader, metaclass=_ProxyHeaderEnumTypeWrapper):
        """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE."""
        pass

    UNDEFINED_PROXY_HEADER: TCPHealthCheck.ProxyHeader.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NONE: TCPHealthCheck.ProxyHeader.ValueType = ...  # 2402104
    PROXY_V1: TCPHealthCheck.ProxyHeader.ValueType = ...  # 334352940

    PORT_FIELD_NUMBER: builtins.int
    PORT_NAME_FIELD_NUMBER: builtins.int
    PORT_SPECIFICATION_FIELD_NUMBER: builtins.int
    PROXY_HEADER_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    port: builtins.int = ...
    """The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535."""

    port_name: typing.Text = ...
    """Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence."""

    port_specification: typing.Text = ...
    """Specifies how port is selected for health checking, can be one of following values: USE_FIXED_PORT: The port number in port is used for health checking. USE_NAMED_PORT: The portName is used for health checking. USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking. If not specified, TCP health check follows behavior specified in port and portName fields.
    Check the PortSpecification enum for the list of possible values.
    """

    proxy_header: typing.Text = ...
    """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    Check the ProxyHeader enum for the list of possible values.
    """

    request: typing.Text = ...
    """The application data to send once the TCP connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII."""

    response: typing.Text = ...
    """The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII."""

    def __init__(self,
        *,
        port : typing.Optional[builtins.int] = ...,
        port_name : typing.Optional[typing.Text] = ...,
        port_specification : typing.Optional[typing.Text] = ...,
        proxy_header : typing.Optional[typing.Text] = ...,
        request : typing.Optional[typing.Text] = ...,
        response : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","_proxy_header",b"_proxy_header","_request",b"_request","_response",b"_response","port",b"port","port_name",b"port_name","port_specification",b"port_specification","proxy_header",b"proxy_header","request",b"request","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_port",b"_port","_port_name",b"_port_name","_port_specification",b"_port_specification","_proxy_header",b"_proxy_header","_request",b"_request","_response",b"_response","port",b"port","port_name",b"port_name","port_specification",b"port_specification","proxy_header",b"proxy_header","request",b"request","response",b"response"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port",b"_port"]) -> typing.Optional[typing_extensions.Literal["port"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_name",b"_port_name"]) -> typing.Optional[typing_extensions.Literal["port_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_port_specification",b"_port_specification"]) -> typing.Optional[typing_extensions.Literal["port_specification"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_header",b"_proxy_header"]) -> typing.Optional[typing_extensions.Literal["proxy_header"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request",b"_request"]) -> typing.Optional[typing_extensions.Literal["request"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_response",b"_response"]) -> typing.Optional[typing_extensions.Literal["response"]]: ...
global___TCPHealthCheck = TCPHealthCheck

class Tags(google.protobuf.message.Message):
    """A set of instance tags."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    fingerprint: typing.Text = ...
    """Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035."""
        pass
    def __init__(self,
        *,
        fingerprint : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","fingerprint",b"fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_fingerprint",b"_fingerprint","fingerprint",b"fingerprint","items",b"items"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
global___Tags = Tags

class TargetGrpcProxy(google.protobuf.message.Message):
    """Represents a Target gRPC Proxy resource. A target gRPC proxy is a component of load balancers intended for load balancing gRPC traffic. Only global forwarding rules with load balancing scheme INTERNAL_SELF_MANAGED can reference a target gRPC proxy. The target gRPC Proxy references a URL map that specifies how traffic is routed to gRPC backend services."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SELF_LINK_WITH_ID_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    VALIDATE_FOR_PROXYLESS_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a TargetGrpcProxy. An up-to-date fingerprint must be provided in order to patch/update the TargetGrpcProxy; otherwise, the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the TargetGrpcProxy."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource type. The server generates this identifier."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#targetGrpcProxy for target grpc proxies."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    self_link_with_id: typing.Text = ...
    """[Output Only] Server-defined URL with id for the resource."""

    url_map: typing.Text = ...
    """URL to the UrlMap resource that defines the mapping from URL to the BackendService. The protocol field in the BackendService must be set to GRPC."""

    validate_for_proxyless: builtins.bool = ...
    """If true, indicates that the BackendServices referenced by the urlMap may be accessed by gRPC applications without using a sidecar proxy. This will enable configuration checks on urlMap and its referenced BackendServices to not allow unsupported features. A gRPC application must use "xds:///" scheme in the target URI of the service it is connecting to. If false, indicates that the BackendServices referenced by the urlMap will be accessed by gRPC applications via a sidecar proxy. In this case, a gRPC application must not use "xds:///" scheme in the target URI of the service it is connecting to"""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        self_link_with_id : typing.Optional[typing.Text] = ...,
        url_map : typing.Optional[typing.Text] = ...,
        validate_for_proxyless : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","_self_link_with_id",b"_self_link_with_id","_url_map",b"_url_map","_validate_for_proxyless",b"_validate_for_proxyless","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","self_link",b"self_link","self_link_with_id",b"self_link_with_id","url_map",b"url_map","validate_for_proxyless",b"validate_for_proxyless"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_self_link",b"_self_link","_self_link_with_id",b"_self_link_with_id","_url_map",b"_url_map","_validate_for_proxyless",b"_validate_for_proxyless","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","self_link",b"self_link","self_link_with_id",b"self_link_with_id","url_map",b"url_map","validate_for_proxyless",b"validate_for_proxyless"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link_with_id",b"_self_link_with_id"]) -> typing.Optional[typing_extensions.Literal["self_link_with_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_map",b"_url_map"]) -> typing.Optional[typing_extensions.Literal["url_map"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_validate_for_proxyless",b"_validate_for_proxyless"]) -> typing.Optional[typing_extensions.Literal["validate_for_proxyless"]]: ...
global___TargetGrpcProxy = TargetGrpcProxy

class TargetGrpcProxyList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetGrpcProxy]:
        """A list of TargetGrpcProxy resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#targetGrpcProxy for target grpc proxies."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___TargetGrpcProxy]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetGrpcProxyList = TargetGrpcProxyList

class TargetHttpProxiesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_HTTP_PROXIES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def target_http_proxies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetHttpProxy]:
        """A list of TargetHttpProxies contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of backend services when the list is empty."""
        pass
    def __init__(self,
        *,
        target_http_proxies : typing.Optional[typing.Iterable[global___TargetHttpProxy]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","target_http_proxies",b"target_http_proxies","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetHttpProxiesScopedList = TargetHttpProxiesScopedList

class TargetHttpProxy(google.protobuf.message.Message):
    """Represents a Target HTTP Proxy resource. Google Compute Engine has two Target HTTP Proxy resources: * [Global](/compute/docs/reference/rest/v1/targetHttpProxies) * [Regional](/compute/docs/reference/rest/v1/regionTargetHttpProxies) A target HTTP proxy is a component of GCP HTTP load balancers. * targetHttpProxies are used by external HTTP load balancers and Traffic Director. * regionTargetHttpProxies are used by internal HTTP load balancers. Forwarding rules reference a target HTTP proxy, and the target proxy then references a URL map. For more information, read Using Target Proxies and Forwarding rule concepts."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROXY_BIND_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a TargetHttpProxy. An up-to-date fingerprint must be provided in order to patch/update the TargetHttpProxy; otherwise, the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the TargetHttpProxy."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#targetHttpProxy for target HTTP proxies."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    proxy_bind: builtins.bool = ...
    """This field only applies when the forwarding rule that references this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When this field is set to true, Envoy proxies set up inbound traffic interception and bind to the IP address and port specified in the forwarding rule. This is generally useful when using Traffic Director to configure Envoy as a gateway or middle proxy (in other words, not a sidecar proxy). The Envoy proxy listens for inbound requests and handles requests when it receives them. The default is false."""

    region: typing.Text = ...
    """[Output Only] URL of the region where the regional Target HTTP Proxy resides. This field is not applicable to global Target HTTP Proxies."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    url_map: typing.Text = ...
    """URL to the UrlMap resource that defines the mapping from URL to the BackendService."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        proxy_bind : typing.Optional[builtins.bool] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        url_map : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_proxy_bind",b"_proxy_bind","_region",b"_region","_self_link",b"_self_link","_url_map",b"_url_map","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","proxy_bind",b"proxy_bind","region",b"region","self_link",b"self_link","url_map",b"url_map"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_proxy_bind",b"_proxy_bind","_region",b"_region","_self_link",b"_self_link","_url_map",b"_url_map","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","proxy_bind",b"proxy_bind","region",b"region","self_link",b"self_link","url_map",b"url_map"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_bind",b"_proxy_bind"]) -> typing.Optional[typing_extensions.Literal["proxy_bind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_map",b"_url_map"]) -> typing.Optional[typing_extensions.Literal["url_map"]]: ...
global___TargetHttpProxy = TargetHttpProxy

class TargetHttpProxyAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___TargetHttpProxiesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___TargetHttpProxiesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___TargetHttpProxiesScopedList]:
        """A list of TargetHttpProxiesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#targetHttpProxyAggregatedList for lists of Target HTTP Proxies."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___TargetHttpProxiesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___TargetHttpProxyAggregatedList = TargetHttpProxyAggregatedList

class TargetHttpProxyList(google.protobuf.message.Message):
    """A list of TargetHttpProxy resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetHttpProxy]:
        """A list of TargetHttpProxy resources."""
        pass
    kind: typing.Text = ...
    """Type of resource. Always compute#targetHttpProxyList for lists of target HTTP proxies."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___TargetHttpProxy]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetHttpProxyList = TargetHttpProxyList

class TargetHttpsProxiesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_HTTPS_PROXIES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def target_https_proxies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetHttpsProxy]:
        """A list of TargetHttpsProxies contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of backend services when the list is empty."""
        pass
    def __init__(self,
        *,
        target_https_proxies : typing.Optional[typing.Iterable[global___TargetHttpsProxy]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","target_https_proxies",b"target_https_proxies","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetHttpsProxiesScopedList = TargetHttpsProxiesScopedList

class TargetHttpsProxiesSetQuicOverrideRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _QuicOverride:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _QuicOverrideEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_QuicOverride.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_QUIC_OVERRIDE: TargetHttpsProxiesSetQuicOverrideRequest.QuicOverride.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DISABLE: TargetHttpsProxiesSetQuicOverrideRequest.QuicOverride.ValueType = ...  # 241807048
        """The load balancer will not attempt to negotiate QUIC with clients."""

        ENABLE: TargetHttpsProxiesSetQuicOverrideRequest.QuicOverride.ValueType = ...  # 438835587
        """The load balancer will attempt to negotiate QUIC with clients."""

        NONE: TargetHttpsProxiesSetQuicOverrideRequest.QuicOverride.ValueType = ...  # 2402104
        """No overrides to the default QUIC policy. This option is implicit if no QUIC override has been specified in the request."""

    class QuicOverride(_QuicOverride, metaclass=_QuicOverrideEnumTypeWrapper):
        """QUIC policy for the TargetHttpsProxy resource."""
        pass

    UNDEFINED_QUIC_OVERRIDE: TargetHttpsProxiesSetQuicOverrideRequest.QuicOverride.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DISABLE: TargetHttpsProxiesSetQuicOverrideRequest.QuicOverride.ValueType = ...  # 241807048
    """The load balancer will not attempt to negotiate QUIC with clients."""

    ENABLE: TargetHttpsProxiesSetQuicOverrideRequest.QuicOverride.ValueType = ...  # 438835587
    """The load balancer will attempt to negotiate QUIC with clients."""

    NONE: TargetHttpsProxiesSetQuicOverrideRequest.QuicOverride.ValueType = ...  # 2402104
    """No overrides to the default QUIC policy. This option is implicit if no QUIC override has been specified in the request."""


    QUIC_OVERRIDE_FIELD_NUMBER: builtins.int
    quic_override: typing.Text = ...
    """QUIC policy for the TargetHttpsProxy resource.
    Check the QuicOverride enum for the list of possible values.
    """

    def __init__(self,
        *,
        quic_override : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_quic_override",b"_quic_override","quic_override",b"quic_override"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_quic_override",b"_quic_override","quic_override",b"quic_override"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_quic_override",b"_quic_override"]) -> typing.Optional[typing_extensions.Literal["quic_override"]]: ...
global___TargetHttpsProxiesSetQuicOverrideRequest = TargetHttpsProxiesSetQuicOverrideRequest

class TargetHttpsProxiesSetSslCertificatesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SSL_CERTIFICATES_FIELD_NUMBER: builtins.int
    @property
    def ssl_certificates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """New set of SslCertificate resources to associate with this TargetHttpsProxy resource. At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates."""
        pass
    def __init__(self,
        *,
        ssl_certificates : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ssl_certificates",b"ssl_certificates"]) -> None: ...
global___TargetHttpsProxiesSetSslCertificatesRequest = TargetHttpsProxiesSetSslCertificatesRequest

class TargetHttpsProxy(google.protobuf.message.Message):
    """Represents a Target HTTPS Proxy resource. Google Compute Engine has two Target HTTPS Proxy resources: * [Global](/compute/docs/reference/rest/v1/targetHttpsProxies) * [Regional](/compute/docs/reference/rest/v1/regionTargetHttpsProxies) A target HTTPS proxy is a component of GCP HTTPS load balancers. * targetHttpsProxies are used by external HTTPS load balancers. * regionTargetHttpsProxies are used by internal HTTPS load balancers. Forwarding rules reference a target HTTPS proxy, and the target proxy then references a URL map. For more information, read Using Target Proxies and Forwarding rule concepts."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _QuicOverride:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _QuicOverrideEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_QuicOverride.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_QUIC_OVERRIDE: TargetHttpsProxy.QuicOverride.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DISABLE: TargetHttpsProxy.QuicOverride.ValueType = ...  # 241807048
        """The load balancer will not attempt to negotiate QUIC with clients."""

        ENABLE: TargetHttpsProxy.QuicOverride.ValueType = ...  # 438835587
        """The load balancer will attempt to negotiate QUIC with clients."""

        NONE: TargetHttpsProxy.QuicOverride.ValueType = ...  # 2402104
        """No overrides to the default QUIC policy. This option is implicit if no QUIC override has been specified in the request."""

    class QuicOverride(_QuicOverride, metaclass=_QuicOverrideEnumTypeWrapper):
        """Specifies the QUIC override policy for this TargetHttpsProxy resource. This setting determines whether the load balancer attempts to negotiate QUIC with clients. You can specify NONE, ENABLE, or DISABLE. - When quic-override is set to NONE, Google manages whether QUIC is used. - When quic-override is set to ENABLE, the load balancer uses QUIC when possible. - When quic-override is set to DISABLE, the load balancer doesn't use QUIC. - If the quic-override flag is not specified, NONE is implied."""
        pass

    UNDEFINED_QUIC_OVERRIDE: TargetHttpsProxy.QuicOverride.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DISABLE: TargetHttpsProxy.QuicOverride.ValueType = ...  # 241807048
    """The load balancer will not attempt to negotiate QUIC with clients."""

    ENABLE: TargetHttpsProxy.QuicOverride.ValueType = ...  # 438835587
    """The load balancer will attempt to negotiate QUIC with clients."""

    NONE: TargetHttpsProxy.QuicOverride.ValueType = ...  # 2402104
    """No overrides to the default QUIC policy. This option is implicit if no QUIC override has been specified in the request."""


    AUTHORIZATION_POLICY_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROXY_BIND_FIELD_NUMBER: builtins.int
    QUIC_OVERRIDE_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SERVER_TLS_POLICY_FIELD_NUMBER: builtins.int
    SSL_CERTIFICATES_FIELD_NUMBER: builtins.int
    SSL_POLICY_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    authorization_policy: typing.Text = ...
    """Optional. A URL referring to a networksecurity.AuthorizationPolicy resource that describes how the proxy should authorize inbound traffic. If left blank, access will not be restricted by an authorization policy. Refer to the AuthorizationPolicy resource for additional details. authorizationPolicy only applies to a global TargetHttpsProxy attached to globalForwardingRules with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. Note: This field currently has no impact."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a TargetHttpsProxy. An up-to-date fingerprint must be provided in order to patch the TargetHttpsProxy; otherwise, the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve the TargetHttpsProxy."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#targetHttpsProxy for target HTTPS proxies."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    proxy_bind: builtins.bool = ...
    """This field only applies when the forwarding rule that references this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When this field is set to true, Envoy proxies set up inbound traffic interception and bind to the IP address and port specified in the forwarding rule. This is generally useful when using Traffic Director to configure Envoy as a gateway or middle proxy (in other words, not a sidecar proxy). The Envoy proxy listens for inbound requests and handles requests when it receives them. The default is false."""

    quic_override: typing.Text = ...
    """Specifies the QUIC override policy for this TargetHttpsProxy resource. This setting determines whether the load balancer attempts to negotiate QUIC with clients. You can specify NONE, ENABLE, or DISABLE. - When quic-override is set to NONE, Google manages whether QUIC is used. - When quic-override is set to ENABLE, the load balancer uses QUIC when possible. - When quic-override is set to DISABLE, the load balancer doesn't use QUIC. - If the quic-override flag is not specified, NONE is implied.
    Check the QuicOverride enum for the list of possible values.
    """

    region: typing.Text = ...
    """[Output Only] URL of the region where the regional TargetHttpsProxy resides. This field is not applicable to global TargetHttpsProxies."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    server_tls_policy: typing.Text = ...
    """Optional. A URL referring to a networksecurity.ServerTlsPolicy resource that describes how the proxy should authenticate inbound traffic. serverTlsPolicy only applies to a global TargetHttpsProxy attached to globalForwardingRules with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted. Note: This field currently has no impact."""

    @property
    def ssl_certificates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer. At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates. sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED."""
        pass
    ssl_policy: typing.Text = ...
    """URL of SslPolicy resource that will be associated with the TargetHttpsProxy resource. If not set, the TargetHttpsProxy resource has no SSL policy configured."""

    url_map: typing.Text = ...
    """A fully-qualified or valid partial URL to the UrlMap resource that defines the mapping from URL to the BackendService. For example, the following are all valid URLs for specifying a URL map: - https://www.googleapis.compute/v1/projects/project/global/urlMaps/ url-map - projects/project/global/urlMaps/url-map - global/urlMaps/url-map"""

    def __init__(self,
        *,
        authorization_policy : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        proxy_bind : typing.Optional[builtins.bool] = ...,
        quic_override : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        server_tls_policy : typing.Optional[typing.Text] = ...,
        ssl_certificates : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ssl_policy : typing.Optional[typing.Text] = ...,
        url_map : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_authorization_policy",b"_authorization_policy","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_proxy_bind",b"_proxy_bind","_quic_override",b"_quic_override","_region",b"_region","_self_link",b"_self_link","_server_tls_policy",b"_server_tls_policy","_ssl_policy",b"_ssl_policy","_url_map",b"_url_map","authorization_policy",b"authorization_policy","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","proxy_bind",b"proxy_bind","quic_override",b"quic_override","region",b"region","self_link",b"self_link","server_tls_policy",b"server_tls_policy","ssl_policy",b"ssl_policy","url_map",b"url_map"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_authorization_policy",b"_authorization_policy","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_fingerprint",b"_fingerprint","_id",b"_id","_kind",b"_kind","_name",b"_name","_proxy_bind",b"_proxy_bind","_quic_override",b"_quic_override","_region",b"_region","_self_link",b"_self_link","_server_tls_policy",b"_server_tls_policy","_ssl_policy",b"_ssl_policy","_url_map",b"_url_map","authorization_policy",b"authorization_policy","creation_timestamp",b"creation_timestamp","description",b"description","fingerprint",b"fingerprint","id",b"id","kind",b"kind","name",b"name","proxy_bind",b"proxy_bind","quic_override",b"quic_override","region",b"region","self_link",b"self_link","server_tls_policy",b"server_tls_policy","ssl_certificates",b"ssl_certificates","ssl_policy",b"ssl_policy","url_map",b"url_map"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_authorization_policy",b"_authorization_policy"]) -> typing.Optional[typing_extensions.Literal["authorization_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_bind",b"_proxy_bind"]) -> typing.Optional[typing_extensions.Literal["proxy_bind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_quic_override",b"_quic_override"]) -> typing.Optional[typing_extensions.Literal["quic_override"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_server_tls_policy",b"_server_tls_policy"]) -> typing.Optional[typing_extensions.Literal["server_tls_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ssl_policy",b"_ssl_policy"]) -> typing.Optional[typing_extensions.Literal["ssl_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_map",b"_url_map"]) -> typing.Optional[typing_extensions.Literal["url_map"]]: ...
global___TargetHttpsProxy = TargetHttpsProxy

class TargetHttpsProxyAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___TargetHttpsProxiesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___TargetHttpsProxiesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___TargetHttpsProxiesScopedList]:
        """A list of TargetHttpsProxiesScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#targetHttpsProxyAggregatedList for lists of Target HTTP Proxies."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___TargetHttpsProxiesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetHttpsProxyAggregatedList = TargetHttpsProxyAggregatedList

class TargetHttpsProxyList(google.protobuf.message.Message):
    """Contains a list of TargetHttpsProxy resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetHttpsProxy]:
        """A list of TargetHttpsProxy resources."""
        pass
    kind: typing.Text = ...
    """Type of resource. Always compute#targetHttpsProxyList for lists of target HTTPS proxies."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___TargetHttpsProxy]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetHttpsProxyList = TargetHttpsProxyList

class TargetInstance(google.protobuf.message.Message):
    """Represents a Target Instance resource. You can use a target instance to handle traffic for one or more forwarding rules, which is ideal for forwarding protocol traffic that is managed by a single source. For example, ESP, AH, TCP, or UDP. For more information, read Target instances."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _NatPolicy:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _NatPolicyEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_NatPolicy.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_NAT_POLICY: TargetInstance.NatPolicy.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NO_NAT: TargetInstance.NatPolicy.ValueType = ...  # 161455491
        """No NAT performed."""

    class NatPolicy(_NatPolicy, metaclass=_NatPolicyEnumTypeWrapper):
        """NAT option controlling how IPs are NAT'ed to the instance. Currently only NO_NAT (default value) is supported."""
        pass

    UNDEFINED_NAT_POLICY: TargetInstance.NatPolicy.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NO_NAT: TargetInstance.NatPolicy.ValueType = ...  # 161455491
    """No NAT performed."""


    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NAT_POLICY_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    instance: typing.Text = ...
    """A URL to the virtual machine instance that handles traffic for this target instance. When creating a target instance, you can provide the fully-qualified URL or a valid partial URL to the desired virtual machine. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance - zones/zone/instances/instance"""

    kind: typing.Text = ...
    """[Output Only] The type of the resource. Always compute#targetInstance for target instances."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    nat_policy: typing.Text = ...
    """NAT option controlling how IPs are NAT'ed to the instance. Currently only NO_NAT (default value) is supported.
    Check the NatPolicy enum for the list of possible values.
    """

    network: typing.Text = ...
    """The URL of the network this target instance uses to forward traffic. If not specified, the traffic will be forwarded to the network that the default network interface belongs to."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    zone: typing.Text = ...
    """[Output Only] URL of the zone where the target instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        instance : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        nat_policy : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        zone : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_instance",b"_instance","_kind",b"_kind","_name",b"_name","_nat_policy",b"_nat_policy","_network",b"_network","_self_link",b"_self_link","_zone",b"_zone","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","instance",b"instance","kind",b"kind","name",b"name","nat_policy",b"nat_policy","network",b"network","self_link",b"self_link","zone",b"zone"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_instance",b"_instance","_kind",b"_kind","_name",b"_name","_nat_policy",b"_nat_policy","_network",b"_network","_self_link",b"_self_link","_zone",b"_zone","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","instance",b"instance","kind",b"kind","name",b"name","nat_policy",b"nat_policy","network",b"network","self_link",b"self_link","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance",b"_instance"]) -> typing.Optional[typing_extensions.Literal["instance"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_nat_policy",b"_nat_policy"]) -> typing.Optional[typing_extensions.Literal["nat_policy"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_zone",b"_zone"]) -> typing.Optional[typing_extensions.Literal["zone"]]: ...
global___TargetInstance = TargetInstance

class TargetInstanceAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___TargetInstancesScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___TargetInstancesScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___TargetInstancesScopedList]:
        """A list of TargetInstance resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___TargetInstancesScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetInstanceAggregatedList = TargetInstanceAggregatedList

class TargetInstanceList(google.protobuf.message.Message):
    """Contains a list of TargetInstance resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetInstance]:
        """A list of TargetInstance resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___TargetInstance]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetInstanceList = TargetInstanceList

class TargetInstancesScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_INSTANCES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def target_instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetInstance]:
        """A list of target instances contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of addresses when the list is empty."""
        pass
    def __init__(self,
        *,
        target_instances : typing.Optional[typing.Iterable[global___TargetInstance]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","target_instances",b"target_instances","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetInstancesScopedList = TargetInstancesScopedList

class TargetPool(google.protobuf.message.Message):
    """Represents a Target Pool resource. Target pools are used for network TCP/UDP load balancing. A target pool references member instances, an associated legacy HttpHealthCheck resource, and, optionally, a backup target pool. For more information, read Using target pools."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _SessionAffinity:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _SessionAffinityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SessionAffinity.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_SESSION_AFFINITY: TargetPool.SessionAffinity.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CLIENT_IP: TargetPool.SessionAffinity.ValueType = ...  # 345665051
        """2-tuple hash on packet's source and destination IP addresses. Connections from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy."""

        CLIENT_IP_NO_DESTINATION: TargetPool.SessionAffinity.ValueType = ...  # 106122516
        """1-tuple hash only on packet's source IP address. Connections from the same source IP address will be served by the same backend VM while that VM remains healthy. This option can only be used for Internal TCP/UDP Load Balancing."""

        CLIENT_IP_PORT_PROTO: TargetPool.SessionAffinity.ValueType = ...  # 221722926
        """5-tuple hash on packet's source and destination IP addresses, IP protocol, and source and destination ports. Connections for the same IP protocol from the same source IP address and port to the same destination IP address and port will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing."""

        CLIENT_IP_PROTO: TargetPool.SessionAffinity.ValueType = ...  # 25322148
        """3-tuple hash on packet's source and destination IP addresses, and IP protocol. Connections for the same IP protocol from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing."""

        GENERATED_COOKIE: TargetPool.SessionAffinity.ValueType = ...  # 370321204
        """Hash based on a cookie generated by the L7 loadbalancer. Only valid for HTTP(S) load balancing."""

        HEADER_FIELD: TargetPool.SessionAffinity.ValueType = ...  # 200737960
        """The hash is based on a user specified header field."""

        HTTP_COOKIE: TargetPool.SessionAffinity.ValueType = ...  # 494981627
        """The hash is based on a user provided cookie."""

        NONE: TargetPool.SessionAffinity.ValueType = ...  # 2402104
        """No session affinity. Connections from the same client IP may go to any instance in the pool."""

    class SessionAffinity(_SessionAffinity, metaclass=_SessionAffinityEnumTypeWrapper):
        """Session affinity option, must be one of the following values: NONE: Connections from the same client IP may go to any instance in the pool. CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy. CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy."""
        pass

    UNDEFINED_SESSION_AFFINITY: TargetPool.SessionAffinity.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CLIENT_IP: TargetPool.SessionAffinity.ValueType = ...  # 345665051
    """2-tuple hash on packet's source and destination IP addresses. Connections from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy."""

    CLIENT_IP_NO_DESTINATION: TargetPool.SessionAffinity.ValueType = ...  # 106122516
    """1-tuple hash only on packet's source IP address. Connections from the same source IP address will be served by the same backend VM while that VM remains healthy. This option can only be used for Internal TCP/UDP Load Balancing."""

    CLIENT_IP_PORT_PROTO: TargetPool.SessionAffinity.ValueType = ...  # 221722926
    """5-tuple hash on packet's source and destination IP addresses, IP protocol, and source and destination ports. Connections for the same IP protocol from the same source IP address and port to the same destination IP address and port will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing."""

    CLIENT_IP_PROTO: TargetPool.SessionAffinity.ValueType = ...  # 25322148
    """3-tuple hash on packet's source and destination IP addresses, and IP protocol. Connections for the same IP protocol from the same source IP address to the same destination IP address will be served by the same backend VM while that VM remains healthy. This option cannot be used for HTTP(S) load balancing."""

    GENERATED_COOKIE: TargetPool.SessionAffinity.ValueType = ...  # 370321204
    """Hash based on a cookie generated by the L7 loadbalancer. Only valid for HTTP(S) load balancing."""

    HEADER_FIELD: TargetPool.SessionAffinity.ValueType = ...  # 200737960
    """The hash is based on a user specified header field."""

    HTTP_COOKIE: TargetPool.SessionAffinity.ValueType = ...  # 494981627
    """The hash is based on a user provided cookie."""

    NONE: TargetPool.SessionAffinity.ValueType = ...  # 2402104
    """No session affinity. Connections from the same client IP may go to any instance in the pool."""


    BACKUP_POOL_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FAILOVER_RATIO_FIELD_NUMBER: builtins.int
    HEALTH_CHECKS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INSTANCES_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SESSION_AFFINITY_FIELD_NUMBER: builtins.int
    backup_pool: typing.Text = ...
    """The server-defined URL for the resource. This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its failoverRatio field is properly set to a value between [0, 1]. backupPool and failoverRatio together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below failoverRatio, traffic arriving at the load-balanced IP will be directed to the backup pool. In case where failoverRatio and backupPool are not set, or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy."""

    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    failover_ratio: builtins.float = ...
    """This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1]. If set, backupPool must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool. In case where failoverRatio is not set or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy."""

    @property
    def health_checks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The URL of the HttpHealthCheck resource. A member instance in this pool is considered healthy if and only if the health checks pass. Only legacy HttpHealthChecks are supported. Only one health check may be specified."""
        pass
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of resource URLs to the virtual machine instances serving this pool. They must live in zones contained in the same region as this pool."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#targetPool for target pools."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    region: typing.Text = ...
    """[Output Only] URL of the region where the target pool resides."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    session_affinity: typing.Text = ...
    """Session affinity option, must be one of the following values: NONE: Connections from the same client IP may go to any instance in the pool. CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy. CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy.
    Check the SessionAffinity enum for the list of possible values.
    """

    def __init__(self,
        *,
        backup_pool : typing.Optional[typing.Text] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        failover_ratio : typing.Optional[builtins.float] = ...,
        health_checks : typing.Optional[typing.Iterable[typing.Text]] = ...,
        id : typing.Optional[builtins.int] = ...,
        instances : typing.Optional[typing.Iterable[typing.Text]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        session_affinity : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_backup_pool",b"_backup_pool","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_failover_ratio",b"_failover_ratio","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","_session_affinity",b"_session_affinity","backup_pool",b"backup_pool","creation_timestamp",b"creation_timestamp","description",b"description","failover_ratio",b"failover_ratio","id",b"id","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link","session_affinity",b"session_affinity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_backup_pool",b"_backup_pool","_creation_timestamp",b"_creation_timestamp","_description",b"_description","_failover_ratio",b"_failover_ratio","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","_session_affinity",b"_session_affinity","backup_pool",b"backup_pool","creation_timestamp",b"creation_timestamp","description",b"description","failover_ratio",b"failover_ratio","health_checks",b"health_checks","id",b"id","instances",b"instances","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link","session_affinity",b"session_affinity"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_backup_pool",b"_backup_pool"]) -> typing.Optional[typing_extensions.Literal["backup_pool"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_failover_ratio",b"_failover_ratio"]) -> typing.Optional[typing_extensions.Literal["failover_ratio"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_session_affinity",b"_session_affinity"]) -> typing.Optional[typing_extensions.Literal["session_affinity"]]: ...
global___TargetPool = TargetPool

class TargetPoolAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___TargetPoolsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___TargetPoolsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___TargetPoolsScopedList]:
        """A list of TargetPool resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#targetPoolAggregatedList for aggregated lists of target pools."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___TargetPoolsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetPoolAggregatedList = TargetPoolAggregatedList

class TargetPoolInstanceHealth(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_STATUS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    @property
    def health_status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HealthStatus]: ...
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#targetPoolInstanceHealth when checking the health of an instance."""

    def __init__(self,
        *,
        health_status : typing.Optional[typing.Iterable[global___HealthStatus]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_kind",b"_kind","kind",b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_kind",b"_kind","health_status",b"health_status","kind",b"kind"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
global___TargetPoolInstanceHealth = TargetPoolInstanceHealth

class TargetPoolList(google.protobuf.message.Message):
    """Contains a list of TargetPool resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetPool]:
        """A list of TargetPool resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#targetPoolList for lists of target pools."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___TargetPool]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetPoolList = TargetPoolList

class TargetPoolsAddHealthCheckRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECKS_FIELD_NUMBER: builtins.int
    @property
    def health_checks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HealthCheckReference]:
        """The HttpHealthCheck to add to the target pool."""
        pass
    def __init__(self,
        *,
        health_checks : typing.Optional[typing.Iterable[global___HealthCheckReference]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["health_checks",b"health_checks"]) -> None: ...
global___TargetPoolsAddHealthCheckRequest = TargetPoolsAddHealthCheckRequest

class TargetPoolsAddInstanceRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceReference]:
        """A full or partial URL to an instance to add to this target pool. This can be a full or partial URL. For example, the following are valid URLs: - https://www.googleapis.com/compute/v1/projects/project-id/zones/zone /instances/instance-name - projects/project-id/zones/zone/instances/instance-name - zones/zone/instances/instance-name"""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[global___InstanceReference]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___TargetPoolsAddInstanceRequest = TargetPoolsAddInstanceRequest

class TargetPoolsRemoveHealthCheckRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECKS_FIELD_NUMBER: builtins.int
    @property
    def health_checks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HealthCheckReference]:
        """Health check URL to be removed. This can be a full or valid partial URL. For example, the following are valid URLs: - https://www.googleapis.com/compute/beta/projects/project /global/httpHealthChecks/health-check - projects/project/global/httpHealthChecks/health-check - global/httpHealthChecks/health-check"""
        pass
    def __init__(self,
        *,
        health_checks : typing.Optional[typing.Iterable[global___HealthCheckReference]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["health_checks",b"health_checks"]) -> None: ...
global___TargetPoolsRemoveHealthCheckRequest = TargetPoolsRemoveHealthCheckRequest

class TargetPoolsRemoveInstanceRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceReference]:
        """URLs of the instances to be removed from target pool."""
        pass
    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[global___InstanceReference]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["instances",b"instances"]) -> None: ...
global___TargetPoolsRemoveInstanceRequest = TargetPoolsRemoveInstanceRequest

class TargetPoolsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_POOLS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def target_pools(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetPool]:
        """A list of target pools contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of addresses when the list is empty."""
        pass
    def __init__(self,
        *,
        target_pools : typing.Optional[typing.Iterable[global___TargetPool]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","target_pools",b"target_pools","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetPoolsScopedList = TargetPoolsScopedList

class TargetReference(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_FIELD_NUMBER: builtins.int
    target: typing.Text = ...
    def __init__(self,
        *,
        target : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_target",b"_target","target",b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_target",b"_target","target",b"target"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target",b"_target"]) -> typing.Optional[typing_extensions.Literal["target"]]: ...
global___TargetReference = TargetReference

class TargetSslProxiesSetBackendServiceRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_FIELD_NUMBER: builtins.int
    service: typing.Text = ...
    """The URL of the new BackendService resource for the targetSslProxy."""

    def __init__(self,
        *,
        service : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_service",b"_service","service",b"service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_service",b"_service","service",b"service"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
global___TargetSslProxiesSetBackendServiceRequest = TargetSslProxiesSetBackendServiceRequest

class TargetSslProxiesSetProxyHeaderRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ProxyHeader:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProxyHeaderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProxyHeader.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROXY_HEADER: TargetSslProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NONE: TargetSslProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 2402104
        PROXY_V1: TargetSslProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 334352940
    class ProxyHeader(_ProxyHeader, metaclass=_ProxyHeaderEnumTypeWrapper):
        """The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed."""
        pass

    UNDEFINED_PROXY_HEADER: TargetSslProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NONE: TargetSslProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 2402104
    PROXY_V1: TargetSslProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 334352940

    PROXY_HEADER_FIELD_NUMBER: builtins.int
    proxy_header: typing.Text = ...
    """The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed.
    Check the ProxyHeader enum for the list of possible values.
    """

    def __init__(self,
        *,
        proxy_header : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_proxy_header",b"_proxy_header","proxy_header",b"proxy_header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_proxy_header",b"_proxy_header","proxy_header",b"proxy_header"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_header",b"_proxy_header"]) -> typing.Optional[typing_extensions.Literal["proxy_header"]]: ...
global___TargetSslProxiesSetProxyHeaderRequest = TargetSslProxiesSetProxyHeaderRequest

class TargetSslProxiesSetSslCertificatesRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SSL_CERTIFICATES_FIELD_NUMBER: builtins.int
    @property
    def ssl_certificates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """New set of URLs to SslCertificate resources to associate with this TargetSslProxy. At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates."""
        pass
    def __init__(self,
        *,
        ssl_certificates : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ssl_certificates",b"ssl_certificates"]) -> None: ...
global___TargetSslProxiesSetSslCertificatesRequest = TargetSslProxiesSetSslCertificatesRequest

class TargetSslProxy(google.protobuf.message.Message):
    """Represents a Target SSL Proxy resource. A target SSL proxy is a component of a SSL Proxy load balancer. Global forwarding rules reference a target SSL proxy, and the target proxy then references an external backend service. For more information, read Using Target Proxies."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ProxyHeader:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProxyHeaderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProxyHeader.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROXY_HEADER: TargetSslProxy.ProxyHeader.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NONE: TargetSslProxy.ProxyHeader.ValueType = ...  # 2402104
        PROXY_V1: TargetSslProxy.ProxyHeader.ValueType = ...  # 334352940
    class ProxyHeader(_ProxyHeader, metaclass=_ProxyHeaderEnumTypeWrapper):
        """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE."""
        pass

    UNDEFINED_PROXY_HEADER: TargetSslProxy.ProxyHeader.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NONE: TargetSslProxy.ProxyHeader.ValueType = ...  # 2402104
    PROXY_V1: TargetSslProxy.ProxyHeader.ValueType = ...  # 334352940

    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROXY_HEADER_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    SSL_CERTIFICATES_FIELD_NUMBER: builtins.int
    SSL_POLICY_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#targetSslProxy for target SSL proxies."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    proxy_header: typing.Text = ...
    """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    Check the ProxyHeader enum for the list of possible values.
    """

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    service: typing.Text = ...
    """URL to the BackendService resource."""

    @property
    def ssl_certificates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """URLs to SslCertificate resources that are used to authenticate connections to Backends. At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates. sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED."""
        pass
    ssl_policy: typing.Text = ...
    """URL of SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the TargetSslProxy resource will not have any SSL policy configured."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        proxy_header : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        service : typing.Optional[typing.Text] = ...,
        ssl_certificates : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ssl_policy : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_proxy_header",b"_proxy_header","_self_link",b"_self_link","_service",b"_service","_ssl_policy",b"_ssl_policy","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","proxy_header",b"proxy_header","self_link",b"self_link","service",b"service","ssl_policy",b"ssl_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_proxy_header",b"_proxy_header","_self_link",b"_self_link","_service",b"_service","_ssl_policy",b"_ssl_policy","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","proxy_header",b"proxy_header","self_link",b"self_link","service",b"service","ssl_certificates",b"ssl_certificates","ssl_policy",b"ssl_policy"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_header",b"_proxy_header"]) -> typing.Optional[typing_extensions.Literal["proxy_header"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ssl_policy",b"_ssl_policy"]) -> typing.Optional[typing_extensions.Literal["ssl_policy"]]: ...
global___TargetSslProxy = TargetSslProxy

class TargetSslProxyList(google.protobuf.message.Message):
    """Contains a list of TargetSslProxy resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetSslProxy]:
        """A list of TargetSslProxy resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___TargetSslProxy]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetSslProxyList = TargetSslProxyList

class TargetTcpProxiesSetBackendServiceRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_FIELD_NUMBER: builtins.int
    service: typing.Text = ...
    """The URL of the new BackendService resource for the targetTcpProxy."""

    def __init__(self,
        *,
        service : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_service",b"_service","service",b"service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_service",b"_service","service",b"service"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
global___TargetTcpProxiesSetBackendServiceRequest = TargetTcpProxiesSetBackendServiceRequest

class TargetTcpProxiesSetProxyHeaderRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ProxyHeader:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProxyHeaderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProxyHeader.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROXY_HEADER: TargetTcpProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NONE: TargetTcpProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 2402104
        PROXY_V1: TargetTcpProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 334352940
    class ProxyHeader(_ProxyHeader, metaclass=_ProxyHeaderEnumTypeWrapper):
        """The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed."""
        pass

    UNDEFINED_PROXY_HEADER: TargetTcpProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NONE: TargetTcpProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 2402104
    PROXY_V1: TargetTcpProxiesSetProxyHeaderRequest.ProxyHeader.ValueType = ...  # 334352940

    PROXY_HEADER_FIELD_NUMBER: builtins.int
    proxy_header: typing.Text = ...
    """The new type of proxy header to append before sending data to the backend. NONE or PROXY_V1 are allowed.
    Check the ProxyHeader enum for the list of possible values.
    """

    def __init__(self,
        *,
        proxy_header : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_proxy_header",b"_proxy_header","proxy_header",b"proxy_header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_proxy_header",b"_proxy_header","proxy_header",b"proxy_header"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_header",b"_proxy_header"]) -> typing.Optional[typing_extensions.Literal["proxy_header"]]: ...
global___TargetTcpProxiesSetProxyHeaderRequest = TargetTcpProxiesSetProxyHeaderRequest

class TargetTcpProxy(google.protobuf.message.Message):
    """Represents a Target TCP Proxy resource. A target TCP proxy is a component of a TCP Proxy load balancer. Global forwarding rules reference target TCP proxy, and the target proxy then references an external backend service. For more information, read TCP Proxy Load Balancing overview."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ProxyHeader:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ProxyHeaderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProxyHeader.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_PROXY_HEADER: TargetTcpProxy.ProxyHeader.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        NONE: TargetTcpProxy.ProxyHeader.ValueType = ...  # 2402104
        PROXY_V1: TargetTcpProxy.ProxyHeader.ValueType = ...  # 334352940
    class ProxyHeader(_ProxyHeader, metaclass=_ProxyHeaderEnumTypeWrapper):
        """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE."""
        pass

    UNDEFINED_PROXY_HEADER: TargetTcpProxy.ProxyHeader.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    NONE: TargetTcpProxy.ProxyHeader.ValueType = ...  # 2402104
    PROXY_V1: TargetTcpProxy.ProxyHeader.ValueType = ...  # 334352940

    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PROXY_BIND_FIELD_NUMBER: builtins.int
    PROXY_HEADER_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#targetTcpProxy for target TCP proxies."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    proxy_bind: builtins.bool = ...
    """This field only applies when the forwarding rule that references this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When this field is set to true, Envoy proxies set up inbound traffic interception and bind to the IP address and port specified in the forwarding rule. This is generally useful when using Traffic Director to configure Envoy as a gateway or middle proxy (in other words, not a sidecar proxy). The Envoy proxy listens for inbound requests and handles requests when it receives them. The default is false."""

    proxy_header: typing.Text = ...
    """Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
    Check the ProxyHeader enum for the list of possible values.
    """

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    service: typing.Text = ...
    """URL to the BackendService resource."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        proxy_bind : typing.Optional[builtins.bool] = ...,
        proxy_header : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        service : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_proxy_bind",b"_proxy_bind","_proxy_header",b"_proxy_header","_self_link",b"_self_link","_service",b"_service","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","proxy_bind",b"proxy_bind","proxy_header",b"proxy_header","self_link",b"self_link","service",b"service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_proxy_bind",b"_proxy_bind","_proxy_header",b"_proxy_header","_self_link",b"_self_link","_service",b"_service","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","proxy_bind",b"proxy_bind","proxy_header",b"proxy_header","self_link",b"self_link","service",b"service"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_bind",b"_proxy_bind"]) -> typing.Optional[typing_extensions.Literal["proxy_bind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_proxy_header",b"_proxy_header"]) -> typing.Optional[typing_extensions.Literal["proxy_header"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
global___TargetTcpProxy = TargetTcpProxy

class TargetTcpProxyList(google.protobuf.message.Message):
    """Contains a list of TargetTcpProxy resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetTcpProxy]:
        """A list of TargetTcpProxy resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___TargetTcpProxy]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetTcpProxyList = TargetTcpProxyList

class TargetVpnGateway(google.protobuf.message.Message):
    """Represents a Target VPN Gateway resource. The target VPN gateway resource represents a Classic Cloud VPN gateway. For more information, read the the Cloud VPN Overview."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: TargetVpnGateway.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CREATING: TargetVpnGateway.Status.ValueType = ...  # 455564985
        DELETING: TargetVpnGateway.Status.ValueType = ...  # 528602024
        FAILED: TargetVpnGateway.Status.ValueType = ...  # 455706685
        READY: TargetVpnGateway.Status.ValueType = ...  # 77848963
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the VPN gateway, which can be one of the following: CREATING, READY, FAILED, or DELETING."""
        pass

    UNDEFINED_STATUS: TargetVpnGateway.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CREATING: TargetVpnGateway.Status.ValueType = ...  # 455564985
    DELETING: TargetVpnGateway.Status.ValueType = ...  # 528602024
    FAILED: TargetVpnGateway.Status.ValueType = ...  # 455706685
    READY: TargetVpnGateway.Status.ValueType = ...  # 77848963

    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FORWARDING_RULES_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    TUNNELS_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    @property
    def forwarding_rules(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] A list of URLs to the ForwardingRule resources. ForwardingRules are created using compute.forwardingRules.insert and associated with a VPN gateway."""
        pass
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    network: typing.Text = ...
    """URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created."""

    region: typing.Text = ...
    """[Output Only] URL of the region where the target VPN gateway resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    status: typing.Text = ...
    """[Output Only] The status of the VPN gateway, which can be one of the following: CREATING, READY, FAILED, or DELETING.
    Check the Status enum for the list of possible values.
    """

    @property
    def tunnels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are created using the compute.vpntunnels.insert method and associated with a VPN gateway."""
        pass
    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        forwarding_rules : typing.Optional[typing.Iterable[typing.Text]] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        tunnels : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_network",b"_network","_region",b"_region","_self_link",b"_self_link","_status",b"_status","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","name",b"name","network",b"network","region",b"region","self_link",b"self_link","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_network",b"_network","_region",b"_region","_self_link",b"_self_link","_status",b"_status","creation_timestamp",b"creation_timestamp","description",b"description","forwarding_rules",b"forwarding_rules","id",b"id","kind",b"kind","name",b"name","network",b"network","region",b"region","self_link",b"self_link","status",b"status","tunnels",b"tunnels"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
global___TargetVpnGateway = TargetVpnGateway

class TargetVpnGatewayAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___TargetVpnGatewaysScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___TargetVpnGatewaysScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___TargetVpnGatewaysScopedList]:
        """A list of TargetVpnGateway resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___TargetVpnGatewaysScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetVpnGatewayAggregatedList = TargetVpnGatewayAggregatedList

class TargetVpnGatewayList(google.protobuf.message.Message):
    """Contains a list of TargetVpnGateway resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetVpnGateway]:
        """A list of TargetVpnGateway resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___TargetVpnGateway]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetVpnGatewayList = TargetVpnGatewayList

class TargetVpnGatewaysScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TARGET_VPN_GATEWAYS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def target_vpn_gateways(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TargetVpnGateway]:
        """[Output Only] A list of target VPN gateways contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning which replaces the list of addresses when the list is empty."""
        pass
    def __init__(self,
        *,
        target_vpn_gateways : typing.Optional[typing.Iterable[global___TargetVpnGateway]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","target_vpn_gateways",b"target_vpn_gateways","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___TargetVpnGatewaysScopedList = TargetVpnGatewaysScopedList

class TestFailure(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACTUAL_OUTPUT_URL_FIELD_NUMBER: builtins.int
    ACTUAL_REDIRECT_RESPONSE_CODE_FIELD_NUMBER: builtins.int
    ACTUAL_SERVICE_FIELD_NUMBER: builtins.int
    EXPECTED_OUTPUT_URL_FIELD_NUMBER: builtins.int
    EXPECTED_REDIRECT_RESPONSE_CODE_FIELD_NUMBER: builtins.int
    EXPECTED_SERVICE_FIELD_NUMBER: builtins.int
    HEADERS_FIELD_NUMBER: builtins.int
    HOST_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    actual_output_url: typing.Text = ...
    """The actual output URL evaluated by load balancer containing the scheme, host, path and query parameters."""

    actual_redirect_response_code: builtins.int = ...
    """Actual HTTP status code for rule with `urlRedirect` calculated by load balancer"""

    actual_service: typing.Text = ...
    """BackendService or BackendBucket returned by load balancer."""

    expected_output_url: typing.Text = ...
    """The expected output URL evaluated by load balancer containing the scheme, host, path and query parameters."""

    expected_redirect_response_code: builtins.int = ...
    """Expected HTTP status code for rule with `urlRedirect` calculated by load balancer"""

    expected_service: typing.Text = ...
    """Expected BackendService or BackendBucket resource the given URL should be mapped to."""

    @property
    def headers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UrlMapTestHeader]:
        """HTTP headers of the request."""
        pass
    host: typing.Text = ...
    """Host portion of the URL."""

    path: typing.Text = ...
    """Path portion including query parameters in the URL."""

    def __init__(self,
        *,
        actual_output_url : typing.Optional[typing.Text] = ...,
        actual_redirect_response_code : typing.Optional[builtins.int] = ...,
        actual_service : typing.Optional[typing.Text] = ...,
        expected_output_url : typing.Optional[typing.Text] = ...,
        expected_redirect_response_code : typing.Optional[builtins.int] = ...,
        expected_service : typing.Optional[typing.Text] = ...,
        headers : typing.Optional[typing.Iterable[global___UrlMapTestHeader]] = ...,
        host : typing.Optional[typing.Text] = ...,
        path : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_actual_output_url",b"_actual_output_url","_actual_redirect_response_code",b"_actual_redirect_response_code","_actual_service",b"_actual_service","_expected_output_url",b"_expected_output_url","_expected_redirect_response_code",b"_expected_redirect_response_code","_expected_service",b"_expected_service","_host",b"_host","_path",b"_path","actual_output_url",b"actual_output_url","actual_redirect_response_code",b"actual_redirect_response_code","actual_service",b"actual_service","expected_output_url",b"expected_output_url","expected_redirect_response_code",b"expected_redirect_response_code","expected_service",b"expected_service","host",b"host","path",b"path"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_actual_output_url",b"_actual_output_url","_actual_redirect_response_code",b"_actual_redirect_response_code","_actual_service",b"_actual_service","_expected_output_url",b"_expected_output_url","_expected_redirect_response_code",b"_expected_redirect_response_code","_expected_service",b"_expected_service","_host",b"_host","_path",b"_path","actual_output_url",b"actual_output_url","actual_redirect_response_code",b"actual_redirect_response_code","actual_service",b"actual_service","expected_output_url",b"expected_output_url","expected_redirect_response_code",b"expected_redirect_response_code","expected_service",b"expected_service","headers",b"headers","host",b"host","path",b"path"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_actual_output_url",b"_actual_output_url"]) -> typing.Optional[typing_extensions.Literal["actual_output_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_actual_redirect_response_code",b"_actual_redirect_response_code"]) -> typing.Optional[typing_extensions.Literal["actual_redirect_response_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_actual_service",b"_actual_service"]) -> typing.Optional[typing_extensions.Literal["actual_service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_expected_output_url",b"_expected_output_url"]) -> typing.Optional[typing_extensions.Literal["expected_output_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_expected_redirect_response_code",b"_expected_redirect_response_code"]) -> typing.Optional[typing_extensions.Literal["expected_redirect_response_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_expected_service",b"_expected_service"]) -> typing.Optional[typing_extensions.Literal["expected_service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_host",b"_host"]) -> typing.Optional[typing_extensions.Literal["host"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path",b"_path"]) -> typing.Optional[typing_extensions.Literal["path"]]: ...
global___TestFailure = TestFailure

class TestIamPermissionsDiskRequest(google.protobuf.message.Message):
    """A request message for Disks.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource","zone",b"zone"]) -> None: ...
global___TestIamPermissionsDiskRequest = TestIamPermissionsDiskRequest

class TestIamPermissionsExternalVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for ExternalVpnGateways.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsExternalVpnGatewayRequest = TestIamPermissionsExternalVpnGatewayRequest

class TestIamPermissionsFirewallPolicyRequest(google.protobuf.message.Message):
    """A request message for FirewallPolicies.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsFirewallPolicyRequest = TestIamPermissionsFirewallPolicyRequest

class TestIamPermissionsImageRequest(google.protobuf.message.Message):
    """A request message for Images.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsImageRequest = TestIamPermissionsImageRequest

class TestIamPermissionsInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource","zone",b"zone"]) -> None: ...
global___TestIamPermissionsInstanceRequest = TestIamPermissionsInstanceRequest

class TestIamPermissionsInstanceTemplateRequest(google.protobuf.message.Message):
    """A request message for InstanceTemplates.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsInstanceTemplateRequest = TestIamPermissionsInstanceTemplateRequest

class TestIamPermissionsLicenseCodeRequest(google.protobuf.message.Message):
    """A request message for LicenseCodes.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsLicenseCodeRequest = TestIamPermissionsLicenseCodeRequest

class TestIamPermissionsLicenseRequest(google.protobuf.message.Message):
    """A request message for Licenses.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsLicenseRequest = TestIamPermissionsLicenseRequest

class TestIamPermissionsNetworkEndpointGroupRequest(google.protobuf.message.Message):
    """A request message for NetworkEndpointGroups.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource","zone",b"zone"]) -> None: ...
global___TestIamPermissionsNetworkEndpointGroupRequest = TestIamPermissionsNetworkEndpointGroupRequest

class TestIamPermissionsNodeGroupRequest(google.protobuf.message.Message):
    """A request message for NodeGroups.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource","zone",b"zone"]) -> None: ...
global___TestIamPermissionsNodeGroupRequest = TestIamPermissionsNodeGroupRequest

class TestIamPermissionsNodeTemplateRequest(google.protobuf.message.Message):
    """A request message for NodeTemplates.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsNodeTemplateRequest = TestIamPermissionsNodeTemplateRequest

class TestIamPermissionsPacketMirroringRequest(google.protobuf.message.Message):
    """A request message for PacketMirrorings.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsPacketMirroringRequest = TestIamPermissionsPacketMirroringRequest

class TestIamPermissionsRegionDiskRequest(google.protobuf.message.Message):
    """A request message for RegionDisks.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsRegionDiskRequest = TestIamPermissionsRegionDiskRequest

class TestIamPermissionsReservationRequest(google.protobuf.message.Message):
    """A request message for Reservations.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource","zone",b"zone"]) -> None: ...
global___TestIamPermissionsReservationRequest = TestIamPermissionsReservationRequest

class TestIamPermissionsResourcePolicyRequest(google.protobuf.message.Message):
    """A request message for ResourcePolicies.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsResourcePolicyRequest = TestIamPermissionsResourcePolicyRequest

class TestIamPermissionsServiceAttachmentRequest(google.protobuf.message.Message):
    """A request message for ServiceAttachments.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsServiceAttachmentRequest = TestIamPermissionsServiceAttachmentRequest

class TestIamPermissionsSnapshotRequest(google.protobuf.message.Message):
    """A request message for Snapshots.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsSnapshotRequest = TestIamPermissionsSnapshotRequest

class TestIamPermissionsSubnetworkRequest(google.protobuf.message.Message):
    """A request message for Subnetworks.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsSubnetworkRequest = TestIamPermissionsSubnetworkRequest

class TestIamPermissionsVpnGatewayRequest(google.protobuf.message.Message):
    """A request message for VpnGateways.TestIamPermissions. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RESOURCE_FIELD_NUMBER: builtins.int
    TEST_PERMISSIONS_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """The name of the region for this request."""

    resource: typing.Text = ...
    """Name or id of the resource for this request."""

    @property
    def test_permissions_request_resource(self) -> global___TestPermissionsRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        resource : typing.Text = ...,
        test_permissions_request_resource : typing.Optional[global___TestPermissionsRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["test_permissions_request_resource",b"test_permissions_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","resource",b"resource","test_permissions_request_resource",b"test_permissions_request_resource"]) -> None: ...
global___TestIamPermissionsVpnGatewayRequest = TestIamPermissionsVpnGatewayRequest

class TestPermissionsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PERMISSIONS_FIELD_NUMBER: builtins.int
    @property
    def permissions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The set of permissions to check for the 'resource'. Permissions with wildcards (such as '*' or 'storage.*') are not allowed."""
        pass
    def __init__(self,
        *,
        permissions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["permissions",b"permissions"]) -> None: ...
global___TestPermissionsRequest = TestPermissionsRequest

class TestPermissionsResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PERMISSIONS_FIELD_NUMBER: builtins.int
    @property
    def permissions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A subset of `TestPermissionsRequest.permissions` that the caller is allowed."""
        pass
    def __init__(self,
        *,
        permissions : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["permissions",b"permissions"]) -> None: ...
global___TestPermissionsResponse = TestPermissionsResponse

class Uint128(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HIGH_FIELD_NUMBER: builtins.int
    LOW_FIELD_NUMBER: builtins.int
    high: builtins.int = ...
    low: builtins.int = ...
    def __init__(self,
        *,
        high : typing.Optional[builtins.int] = ...,
        low : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_high",b"_high","_low",b"_low","high",b"high","low",b"low"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_high",b"_high","_low",b"_low","high",b"high","low",b"low"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_high",b"_high"]) -> typing.Optional[typing_extensions.Literal["high"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_low",b"_low"]) -> typing.Optional[typing_extensions.Literal["low"]]: ...
global___Uint128 = Uint128

class UpdateAccessConfigInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.UpdateAccessConfig. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCESS_CONFIG_RESOURCE_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def access_config_resource(self) -> global___AccessConfig:
        """The body resource for this request"""
        pass
    instance: typing.Text = ...
    """The instance name for this request."""

    network_interface: typing.Text = ...
    """The name of the network interface where the access config is attached."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        access_config_resource : typing.Optional[global___AccessConfig] = ...,
        instance : typing.Text = ...,
        network_interface : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","access_config_resource",b"access_config_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","access_config_resource",b"access_config_resource","instance",b"instance","network_interface",b"network_interface","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateAccessConfigInstanceRequest = UpdateAccessConfigInstanceRequest

class UpdateAutoscalerRequest(google.protobuf.message.Message):
    """A request message for Autoscalers.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_FIELD_NUMBER: builtins.int
    AUTOSCALER_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    autoscaler: typing.Text = ...
    """Name of the autoscaler to update."""

    @property
    def autoscaler_resource(self) -> global___Autoscaler:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        autoscaler : typing.Optional[typing.Text] = ...,
        autoscaler_resource : typing.Optional[global___Autoscaler] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_autoscaler",b"_autoscaler","_request_id",b"_request_id","autoscaler",b"autoscaler","autoscaler_resource",b"autoscaler_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_autoscaler",b"_autoscaler","_request_id",b"_request_id","autoscaler",b"autoscaler","autoscaler_resource",b"autoscaler_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_autoscaler",b"_autoscaler"]) -> typing.Optional[typing_extensions.Literal["autoscaler"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateAutoscalerRequest = UpdateAutoscalerRequest

class UpdateBackendBucketRequest(google.protobuf.message.Message):
    """A request message for BackendBuckets.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_BUCKET_FIELD_NUMBER: builtins.int
    BACKEND_BUCKET_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_bucket: typing.Text = ...
    """Name of the BackendBucket resource to update."""

    @property
    def backend_bucket_resource(self) -> global___BackendBucket:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_bucket : typing.Text = ...,
        backend_bucket_resource : typing.Optional[global___BackendBucket] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_bucket_resource",b"backend_bucket_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_bucket",b"backend_bucket","backend_bucket_resource",b"backend_bucket_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateBackendBucketRequest = UpdateBackendBucketRequest

class UpdateBackendServiceRequest(google.protobuf.message.Message):
    """A request message for BackendServices.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    BACKEND_SERVICE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to update."""

    @property
    def backend_service_resource(self) -> global___BackendService:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        backend_service_resource : typing.Optional[global___BackendService] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service_resource",b"backend_service_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service",b"backend_service","backend_service_resource",b"backend_service_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateBackendServiceRequest = UpdateBackendServiceRequest

class UpdateDisplayDeviceInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.UpdateDisplayDevice. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISPLAY_DEVICE_RESOURCE_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    @property
    def display_device_resource(self) -> global___DisplayDevice:
        """The body resource for this request"""
        pass
    instance: typing.Text = ...
    """Name of the instance scoping this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        display_device_resource : typing.Optional[global___DisplayDevice] = ...,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","display_device_resource",b"display_device_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","display_device_resource",b"display_device_resource","instance",b"instance","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateDisplayDeviceInstanceRequest = UpdateDisplayDeviceInstanceRequest

class UpdateFirewallRequest(google.protobuf.message.Message):
    """A request message for Firewalls.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FIREWALL_FIELD_NUMBER: builtins.int
    FIREWALL_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    firewall: typing.Text = ...
    """Name of the firewall rule to update."""

    @property
    def firewall_resource(self) -> global___Firewall:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        firewall : typing.Text = ...,
        firewall_resource : typing.Optional[global___Firewall] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall_resource",b"firewall_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","firewall",b"firewall","firewall_resource",b"firewall_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateFirewallRequest = UpdateFirewallRequest

class UpdateHealthCheckRequest(google.protobuf.message.Message):
    """A request message for HealthChecks.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    HEALTH_CHECK_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    health_check: typing.Text = ...
    """Name of the HealthCheck resource to update."""

    @property
    def health_check_resource(self) -> global___HealthCheck:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check : typing.Text = ...,
        health_check_resource : typing.Optional[global___HealthCheck] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_resource",b"health_check_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check",b"health_check","health_check_resource",b"health_check_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateHealthCheckRequest = UpdateHealthCheckRequest

class UpdateInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    INSTANCE_RESOURCE_FIELD_NUMBER: builtins.int
    MINIMAL_ACTION_FIELD_NUMBER: builtins.int
    MOST_DISRUPTIVE_ALLOWED_ACTION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name of the instance resource to update."""

    @property
    def instance_resource(self) -> global___Instance:
        """The body resource for this request"""
        pass
    minimal_action: typing.Text = ...
    """Specifies the action to take when updating an instance even if the updated properties do not require it. If not specified, then Compute Engine acts based on the minimum action that the updated properties require."""

    most_disruptive_allowed_action: typing.Text = ...
    """Specifies the most disruptive action that can be taken on the instance as part of the update. Compute Engine returns an error if the instance properties require a more disruptive action as part of the instance update. Valid options from lowest to highest are NO_EFFECT, REFRESH, and RESTART."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        instance_resource : typing.Optional[global___Instance] = ...,
        minimal_action : typing.Optional[typing.Text] = ...,
        most_disruptive_allowed_action : typing.Optional[typing.Text] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_minimal_action",b"_minimal_action","_most_disruptive_allowed_action",b"_most_disruptive_allowed_action","_request_id",b"_request_id","instance_resource",b"instance_resource","minimal_action",b"minimal_action","most_disruptive_allowed_action",b"most_disruptive_allowed_action","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_minimal_action",b"_minimal_action","_most_disruptive_allowed_action",b"_most_disruptive_allowed_action","_request_id",b"_request_id","instance",b"instance","instance_resource",b"instance_resource","minimal_action",b"minimal_action","most_disruptive_allowed_action",b"most_disruptive_allowed_action","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_minimal_action",b"_minimal_action"]) -> typing.Optional[typing_extensions.Literal["minimal_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_most_disruptive_allowed_action",b"_most_disruptive_allowed_action"]) -> typing.Optional[typing_extensions.Literal["most_disruptive_allowed_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateInstanceRequest = UpdateInstanceRequest

class UpdateNetworkInterfaceInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.UpdateNetworkInterface. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_FIELD_NUMBER: builtins.int
    NETWORK_INTERFACE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """The instance name for this request."""

    network_interface: typing.Text = ...
    """The name of the network interface to update."""

    @property
    def network_interface_resource(self) -> global___NetworkInterface:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        network_interface : typing.Text = ...,
        network_interface_resource : typing.Optional[global___NetworkInterface] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network_interface_resource",b"network_interface_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","network_interface",b"network_interface","network_interface_resource",b"network_interface_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateNetworkInterfaceInstanceRequest = UpdateNetworkInterfaceInstanceRequest

class UpdatePeeringNetworkRequest(google.protobuf.message.Message):
    """A request message for Networks.UpdatePeering. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NETWORK_FIELD_NUMBER: builtins.int
    NETWORKS_UPDATE_PEERING_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    network: typing.Text = ...
    """Name of the network resource which the updated peering is belonging to."""

    @property
    def networks_update_peering_request_resource(self) -> global___NetworksUpdatePeeringRequest:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        network : typing.Text = ...,
        networks_update_peering_request_resource : typing.Optional[global___NetworksUpdatePeeringRequest] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","networks_update_peering_request_resource",b"networks_update_peering_request_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","network",b"network","networks_update_peering_request_resource",b"networks_update_peering_request_resource","project",b"project","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdatePeeringNetworkRequest = UpdatePeeringNetworkRequest

class UpdatePerInstanceConfigsInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for InstanceGroupManagers.UpdatePerInstanceConfigs. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    INSTANCE_GROUP_MANAGERS_UPDATE_PER_INSTANCE_CONFIGS_REQ_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It should conform to RFC1035."""

    @property
    def instance_group_managers_update_per_instance_configs_req_resource(self) -> global___InstanceGroupManagersUpdatePerInstanceConfigsReq:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    zone: typing.Text = ...
    """The name of the zone where the managed instance group is located. It should conform to RFC1035."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        instance_group_managers_update_per_instance_configs_req_resource : typing.Optional[global___InstanceGroupManagersUpdatePerInstanceConfigsReq] = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_managers_update_per_instance_configs_req_resource",b"instance_group_managers_update_per_instance_configs_req_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","instance_group_managers_update_per_instance_configs_req_resource",b"instance_group_managers_update_per_instance_configs_req_resource","project",b"project","request_id",b"request_id","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdatePerInstanceConfigsInstanceGroupManagerRequest = UpdatePerInstanceConfigsInstanceGroupManagerRequest

class UpdatePerInstanceConfigsRegionInstanceGroupManagerRequest(google.protobuf.message.Message):
    """A request message for RegionInstanceGroupManagers.UpdatePerInstanceConfigs. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_GROUP_MANAGER_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_INSTANCE_GROUP_MANAGER_UPDATE_INSTANCE_CONFIG_REQ_RESOURCE_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    instance_group_manager: typing.Text = ...
    """The name of the managed instance group. It should conform to RFC1035."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request, should conform to RFC1035."""

    @property
    def region_instance_group_manager_update_instance_config_req_resource(self) -> global___RegionInstanceGroupManagerUpdateInstanceConfigReq:
        """The body resource for this request"""
        pass
    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        instance_group_manager : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_instance_group_manager_update_instance_config_req_resource : typing.Optional[global___RegionInstanceGroupManagerUpdateInstanceConfigReq] = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","region_instance_group_manager_update_instance_config_req_resource",b"region_instance_group_manager_update_instance_config_req_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance_group_manager",b"instance_group_manager","project",b"project","region",b"region","region_instance_group_manager_update_instance_config_req_resource",b"region_instance_group_manager_update_instance_config_req_resource","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdatePerInstanceConfigsRegionInstanceGroupManagerRequest = UpdatePerInstanceConfigsRegionInstanceGroupManagerRequest

class UpdateRegionAutoscalerRequest(google.protobuf.message.Message):
    """A request message for RegionAutoscalers.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUTOSCALER_FIELD_NUMBER: builtins.int
    AUTOSCALER_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    autoscaler: typing.Text = ...
    """Name of the autoscaler to update."""

    @property
    def autoscaler_resource(self) -> global___Autoscaler:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        autoscaler : typing.Optional[typing.Text] = ...,
        autoscaler_resource : typing.Optional[global___Autoscaler] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_autoscaler",b"_autoscaler","_request_id",b"_request_id","autoscaler",b"autoscaler","autoscaler_resource",b"autoscaler_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_autoscaler",b"_autoscaler","_request_id",b"_request_id","autoscaler",b"autoscaler","autoscaler_resource",b"autoscaler_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_autoscaler",b"_autoscaler"]) -> typing.Optional[typing_extensions.Literal["autoscaler"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateRegionAutoscalerRequest = UpdateRegionAutoscalerRequest

class UpdateRegionBackendServiceRequest(google.protobuf.message.Message):
    """A request message for RegionBackendServices.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    BACKEND_SERVICE_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """Name of the BackendService resource to update."""

    @property
    def backend_service_resource(self) -> global___BackendService:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        backend_service : typing.Text = ...,
        backend_service_resource : typing.Optional[global___BackendService] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service_resource",b"backend_service_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","backend_service",b"backend_service","backend_service_resource",b"backend_service_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateRegionBackendServiceRequest = UpdateRegionBackendServiceRequest

class UpdateRegionHealthCheckRequest(google.protobuf.message.Message):
    """A request message for RegionHealthChecks.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTH_CHECK_FIELD_NUMBER: builtins.int
    HEALTH_CHECK_RESOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    health_check: typing.Text = ...
    """Name of the HealthCheck resource to update."""

    @property
    def health_check_resource(self) -> global___HealthCheck:
        """The body resource for this request"""
        pass
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    def __init__(self,
        *,
        health_check : typing.Text = ...,
        health_check_resource : typing.Optional[global___HealthCheck] = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check_resource",b"health_check_resource","request_id",b"request_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","health_check",b"health_check","health_check_resource",b"health_check_resource","project",b"project","region",b"region","request_id",b"request_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateRegionHealthCheckRequest = UpdateRegionHealthCheckRequest

class UpdateRegionUrlMapRequest(google.protobuf.message.Message):
    """A request message for RegionUrlMaps.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    URL_MAP_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    request_id: typing.Text = ...
    """begin_interface: MixerMutationRequestBuilder Request ID to support idempotency."""

    url_map: typing.Text = ...
    """Name of the UrlMap resource to update."""

    @property
    def url_map_resource(self) -> global___UrlMap:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        url_map : typing.Text = ...,
        url_map_resource : typing.Optional[global___UrlMap] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","url_map_resource",b"url_map_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","url_map",b"url_map","url_map_resource",b"url_map_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateRegionUrlMapRequest = UpdateRegionUrlMapRequest

class UpdateRouterRequest(google.protobuf.message.Message):
    """A request message for Routers.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    ROUTER_FIELD_NUMBER: builtins.int
    ROUTER_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    router: typing.Text = ...
    """Name of the Router resource to update."""

    @property
    def router_resource(self) -> global___Router:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        router : typing.Text = ...,
        router_resource : typing.Optional[global___Router] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","router_resource",b"router_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","region",b"region","request_id",b"request_id","router",b"router","router_resource",b"router_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateRouterRequest = UpdateRouterRequest

class UpdateShieldedInstanceConfigInstanceRequest(google.protobuf.message.Message):
    """A request message for Instances.UpdateShieldedInstanceConfig. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    SHIELDED_INSTANCE_CONFIG_RESOURCE_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    instance: typing.Text = ...
    """Name or id of the instance scoping this request."""

    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    @property
    def shielded_instance_config_resource(self) -> global___ShieldedInstanceConfig:
        """The body resource for this request"""
        pass
    zone: typing.Text = ...
    """The name of the zone for this request."""

    def __init__(self,
        *,
        instance : typing.Text = ...,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        shielded_instance_config_resource : typing.Optional[global___ShieldedInstanceConfig] = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","shielded_instance_config_resource",b"shielded_instance_config_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","instance",b"instance","project",b"project","request_id",b"request_id","shielded_instance_config_resource",b"shielded_instance_config_resource","zone",b"zone"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateShieldedInstanceConfigInstanceRequest = UpdateShieldedInstanceConfigInstanceRequest

class UpdateUrlMapRequest(google.protobuf.message.Message):
    """A request message for UrlMaps.Update. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    URL_MAP_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    request_id: typing.Text = ...
    """An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000)."""

    url_map: typing.Text = ...
    """Name of the UrlMap resource to update."""

    @property
    def url_map_resource(self) -> global___UrlMap:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        request_id : typing.Optional[typing.Text] = ...,
        url_map : typing.Text = ...,
        url_map_resource : typing.Optional[global___UrlMap] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","request_id",b"request_id","url_map_resource",b"url_map_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_request_id",b"_request_id","project",b"project","request_id",b"request_id","url_map",b"url_map","url_map_resource",b"url_map_resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_request_id",b"_request_id"]) -> typing.Optional[typing_extensions.Literal["request_id"]]: ...
global___UpdateUrlMapRequest = UpdateUrlMapRequest

class UrlMap(google.protobuf.message.Message):
    """Represents a URL Map resource. Google Compute Engine has two URL Map resources: * [Global](/compute/docs/reference/rest/v1/urlMaps) * [Regional](/compute/docs/reference/rest/v1/regionUrlMaps) A URL map resource is a component of certain types of GCP load balancers and Traffic Director. * urlMaps are used by external HTTP(S) load balancers and Traffic Director. * regionUrlMaps are used by internal HTTP(S) load balancers. For a list of supported URL map features by load balancer type, see the Load balancing features: Routing and traffic management table. For a list of supported URL map features for Traffic Director, see the Traffic Director features: Routing and traffic management table. This resource defines mappings from host names and URL paths to either a backend service or a backend bucket. To use the global urlMaps resource, the backend service must have a loadBalancingScheme of either EXTERNAL or INTERNAL_SELF_MANAGED. To use the regionUrlMaps resource, the backend service must have a loadBalancingScheme of INTERNAL_MANAGED. For more information, read URL Map Concepts."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEFAULT_ROUTE_ACTION_FIELD_NUMBER: builtins.int
    DEFAULT_SERVICE_FIELD_NUMBER: builtins.int
    DEFAULT_URL_REDIRECT_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    FINGERPRINT_FIELD_NUMBER: builtins.int
    HEADER_ACTION_FIELD_NUMBER: builtins.int
    HOST_RULES_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PATH_MATCHERS_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    TESTS_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def default_route_action(self) -> global___HttpRouteAction:
        """defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices. Only one of defaultRouteAction or defaultUrlRedirect must be set. UrlMaps for external HTTP(S) load balancers support only the urlRewrite action within defaultRouteAction. defaultRouteAction has no effect when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    default_service: typing.Text = ...
    """The full or partial URL of the defaultService resource to which traffic is directed if none of the hostRules match. If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of defaultService, defaultUrlRedirect or defaultRouteAction.weightedBackendService must be set. defaultService has no effect when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""

    @property
    def default_url_redirect(self) -> global___HttpRedirectAction:
        """When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set. Not supported when the URL map is bound to target gRPC proxy."""
        pass
    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    fingerprint: typing.Text = ...
    """Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a UrlMap."""

    @property
    def header_action(self) -> global___HttpHeaderAction:
        """Specifies changes to request and response headers that need to take effect for the selected backendService. The headerAction specified here take effect after headerAction specified under pathMatcher. Note that headerAction is not supported for Loadbalancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    @property
    def host_rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HostRule]:
        """The list of HostRules to use against the URL."""
        pass
    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#urlMaps for url maps."""

    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    @property
    def path_matchers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PathMatcher]:
        """The list of named PathMatchers to use against the URL."""
        pass
    region: typing.Text = ...
    """[Output Only] URL of the region where the regional URL map resides. This field is not applicable to global URL maps. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def tests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UrlMapTest]:
        """The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass. You can specify a maximum of 100 tests per UrlMap. Not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        default_route_action : typing.Optional[global___HttpRouteAction] = ...,
        default_service : typing.Optional[typing.Text] = ...,
        default_url_redirect : typing.Optional[global___HttpRedirectAction] = ...,
        description : typing.Optional[typing.Text] = ...,
        fingerprint : typing.Optional[typing.Text] = ...,
        header_action : typing.Optional[global___HttpHeaderAction] = ...,
        host_rules : typing.Optional[typing.Iterable[global___HostRule]] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        path_matchers : typing.Optional[typing.Iterable[global___PathMatcher]] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        tests : typing.Optional[typing.Iterable[global___UrlMapTest]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_default_route_action",b"_default_route_action","_default_service",b"_default_service","_default_url_redirect",b"_default_url_redirect","_description",b"_description","_fingerprint",b"_fingerprint","_header_action",b"_header_action","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","default_route_action",b"default_route_action","default_service",b"default_service","default_url_redirect",b"default_url_redirect","description",b"description","fingerprint",b"fingerprint","header_action",b"header_action","id",b"id","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_default_route_action",b"_default_route_action","_default_service",b"_default_service","_default_url_redirect",b"_default_url_redirect","_description",b"_description","_fingerprint",b"_fingerprint","_header_action",b"_header_action","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","default_route_action",b"default_route_action","default_service",b"default_service","default_url_redirect",b"default_url_redirect","description",b"description","fingerprint",b"fingerprint","header_action",b"header_action","host_rules",b"host_rules","id",b"id","kind",b"kind","name",b"name","path_matchers",b"path_matchers","region",b"region","self_link",b"self_link","tests",b"tests"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_route_action",b"_default_route_action"]) -> typing.Optional[typing_extensions.Literal["default_route_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_service",b"_default_service"]) -> typing.Optional[typing_extensions.Literal["default_service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_default_url_redirect",b"_default_url_redirect"]) -> typing.Optional[typing_extensions.Literal["default_url_redirect"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_fingerprint",b"_fingerprint"]) -> typing.Optional[typing_extensions.Literal["fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_header_action",b"_header_action"]) -> typing.Optional[typing_extensions.Literal["header_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___UrlMap = UrlMap

class UrlMapList(google.protobuf.message.Message):
    """Contains a list of UrlMap resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UrlMap]:
        """A list of UrlMap resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___UrlMap]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___UrlMapList = UrlMapList

class UrlMapReference(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URL_MAP_FIELD_NUMBER: builtins.int
    url_map: typing.Text = ...
    def __init__(self,
        *,
        url_map : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_url_map",b"_url_map","url_map",b"url_map"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_url_map",b"_url_map","url_map",b"url_map"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_map",b"_url_map"]) -> typing.Optional[typing_extensions.Literal["url_map"]]: ...
global___UrlMapReference = UrlMapReference

class UrlMapTest(google.protobuf.message.Message):
    """Message for the expected URL mappings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESCRIPTION_FIELD_NUMBER: builtins.int
    EXPECTED_OUTPUT_URL_FIELD_NUMBER: builtins.int
    EXPECTED_REDIRECT_RESPONSE_CODE_FIELD_NUMBER: builtins.int
    HEADERS_FIELD_NUMBER: builtins.int
    HOST_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    SERVICE_FIELD_NUMBER: builtins.int
    description: typing.Text = ...
    """Description of this test case."""

    expected_output_url: typing.Text = ...
    """The expected output URL evaluated by load balancer containing the scheme, host, path and query parameters. For rules that forward requests to backends, the test passes only when expectedOutputUrl matches the request forwarded by load balancer to backends. For rules with urlRewrite, the test verifies that the forwarded request matches hostRewrite and pathPrefixRewrite in the urlRewrite action. When service is specified, expectedOutputUrl`s scheme is ignored. For rules with urlRedirect, the test passes only if expectedOutputUrl matches the URL in the load balancer's redirect response. If urlRedirect specifies https_redirect, the test passes only if the scheme in expectedOutputUrl is also set to https. If urlRedirect specifies strip_query, the test passes only if expectedOutputUrl does not contain any query parameters. expectedOutputUrl is optional when service is specified."""

    expected_redirect_response_code: builtins.int = ...
    """For rules with urlRedirect, the test passes only if expectedRedirectResponseCode matches the HTTP status code in load balancer's redirect response. expectedRedirectResponseCode cannot be set when service is set."""

    @property
    def headers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UrlMapTestHeader]:
        """HTTP headers for this request. If headers contains a host header, then host must also match the header value."""
        pass
    host: typing.Text = ...
    """Host portion of the URL. If headers contains a host header, then host must also match the header value."""

    path: typing.Text = ...
    """Path portion of the URL."""

    service: typing.Text = ...
    """Expected BackendService or BackendBucket resource the given URL should be mapped to. service cannot be set if expectedRedirectResponseCode is set."""

    def __init__(self,
        *,
        description : typing.Optional[typing.Text] = ...,
        expected_output_url : typing.Optional[typing.Text] = ...,
        expected_redirect_response_code : typing.Optional[builtins.int] = ...,
        headers : typing.Optional[typing.Iterable[global___UrlMapTestHeader]] = ...,
        host : typing.Optional[typing.Text] = ...,
        path : typing.Optional[typing.Text] = ...,
        service : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_expected_output_url",b"_expected_output_url","_expected_redirect_response_code",b"_expected_redirect_response_code","_host",b"_host","_path",b"_path","_service",b"_service","description",b"description","expected_output_url",b"expected_output_url","expected_redirect_response_code",b"expected_redirect_response_code","host",b"host","path",b"path","service",b"service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_expected_output_url",b"_expected_output_url","_expected_redirect_response_code",b"_expected_redirect_response_code","_host",b"_host","_path",b"_path","_service",b"_service","description",b"description","expected_output_url",b"expected_output_url","expected_redirect_response_code",b"expected_redirect_response_code","headers",b"headers","host",b"host","path",b"path","service",b"service"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_expected_output_url",b"_expected_output_url"]) -> typing.Optional[typing_extensions.Literal["expected_output_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_expected_redirect_response_code",b"_expected_redirect_response_code"]) -> typing.Optional[typing_extensions.Literal["expected_redirect_response_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_host",b"_host"]) -> typing.Optional[typing_extensions.Literal["host"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path",b"_path"]) -> typing.Optional[typing_extensions.Literal["path"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_service",b"_service"]) -> typing.Optional[typing_extensions.Literal["service"]]: ...
global___UrlMapTest = UrlMapTest

class UrlMapTestHeader(google.protobuf.message.Message):
    """HTTP headers used in UrlMapTests."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Header name."""

    value: typing.Text = ...
    """Header value."""

    def __init__(self,
        *,
        name : typing.Optional[typing.Text] = ...,
        value : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","_value",b"_value","name",b"name","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","_value",b"_value","name",b"name","value",b"value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value",b"_value"]) -> typing.Optional[typing_extensions.Literal["value"]]: ...
global___UrlMapTestHeader = UrlMapTestHeader

class UrlMapValidationResult(google.protobuf.message.Message):
    """Message representing the validation result for a UrlMap."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOAD_ERRORS_FIELD_NUMBER: builtins.int
    LOAD_SUCCEEDED_FIELD_NUMBER: builtins.int
    TEST_FAILURES_FIELD_NUMBER: builtins.int
    TEST_PASSED_FIELD_NUMBER: builtins.int
    @property
    def load_errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    load_succeeded: builtins.bool = ...
    """Whether the given UrlMap can be successfully loaded. If false, 'loadErrors' indicates the reasons."""

    @property
    def test_failures(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TestFailure]: ...
    test_passed: builtins.bool = ...
    """If successfully loaded, this field indicates whether the test passed. If false, 'testFailures's indicate the reason of failure."""

    def __init__(self,
        *,
        load_errors : typing.Optional[typing.Iterable[typing.Text]] = ...,
        load_succeeded : typing.Optional[builtins.bool] = ...,
        test_failures : typing.Optional[typing.Iterable[global___TestFailure]] = ...,
        test_passed : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_load_succeeded",b"_load_succeeded","_test_passed",b"_test_passed","load_succeeded",b"load_succeeded","test_passed",b"test_passed"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_load_succeeded",b"_load_succeeded","_test_passed",b"_test_passed","load_errors",b"load_errors","load_succeeded",b"load_succeeded","test_failures",b"test_failures","test_passed",b"test_passed"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_load_succeeded",b"_load_succeeded"]) -> typing.Optional[typing_extensions.Literal["load_succeeded"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_test_passed",b"_test_passed"]) -> typing.Optional[typing_extensions.Literal["test_passed"]]: ...
global___UrlMapValidationResult = UrlMapValidationResult

class UrlMapsAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___UrlMapsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___UrlMapsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___UrlMapsScopedList]:
        """A list of UrlMapsScopedList resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___UrlMapsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___UrlMapsAggregatedList = UrlMapsAggregatedList

class UrlMapsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URL_MAPS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def url_maps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UrlMap]:
        """A list of UrlMaps contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of backend services when the list is empty."""
        pass
    def __init__(self,
        *,
        url_maps : typing.Optional[typing.Iterable[global___UrlMap]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","url_maps",b"url_maps","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___UrlMapsScopedList = UrlMapsScopedList

class UrlMapsValidateRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_FIELD_NUMBER: builtins.int
    @property
    def resource(self) -> global___UrlMap:
        """Content of the UrlMap to be validated."""
        pass
    def __init__(self,
        *,
        resource : typing.Optional[global___UrlMap] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_resource",b"_resource","resource",b"resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_resource",b"_resource","resource",b"resource"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_resource",b"_resource"]) -> typing.Optional[typing_extensions.Literal["resource"]]: ...
global___UrlMapsValidateRequest = UrlMapsValidateRequest

class UrlMapsValidateResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULT_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> global___UrlMapValidationResult: ...
    def __init__(self,
        *,
        result : typing.Optional[global___UrlMapValidationResult] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_result",b"_result","result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_result",b"_result","result",b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_result",b"_result"]) -> typing.Optional[typing_extensions.Literal["result"]]: ...
global___UrlMapsValidateResponse = UrlMapsValidateResponse

class UrlRewrite(google.protobuf.message.Message):
    """The spec for modifying the path before sending the request to the matched backend service."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HOST_REWRITE_FIELD_NUMBER: builtins.int
    PATH_PREFIX_REWRITE_FIELD_NUMBER: builtins.int
    host_rewrite: typing.Text = ...
    """Prior to forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be between 1 and 255 characters."""

    path_prefix_rewrite: typing.Text = ...
    """Prior to forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be between 1 and 1024 characters."""

    def __init__(self,
        *,
        host_rewrite : typing.Optional[typing.Text] = ...,
        path_prefix_rewrite : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_host_rewrite",b"_host_rewrite","_path_prefix_rewrite",b"_path_prefix_rewrite","host_rewrite",b"host_rewrite","path_prefix_rewrite",b"path_prefix_rewrite"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_host_rewrite",b"_host_rewrite","_path_prefix_rewrite",b"_path_prefix_rewrite","host_rewrite",b"host_rewrite","path_prefix_rewrite",b"path_prefix_rewrite"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_host_rewrite",b"_host_rewrite"]) -> typing.Optional[typing_extensions.Literal["host_rewrite"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path_prefix_rewrite",b"_path_prefix_rewrite"]) -> typing.Optional[typing_extensions.Literal["path_prefix_rewrite"]]: ...
global___UrlRewrite = UrlRewrite

class UsableSubnetwork(google.protobuf.message.Message):
    """Subnetwork which the current user has compute.subnetworks.use permission on."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    SECONDARY_IP_RANGES_FIELD_NUMBER: builtins.int
    SUBNETWORK_FIELD_NUMBER: builtins.int
    ip_cidr_range: typing.Text = ...
    """The range of internal addresses that are owned by this subnetwork."""

    network: typing.Text = ...
    """Network URL."""

    @property
    def secondary_ip_ranges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UsableSubnetworkSecondaryRange]:
        """Secondary IP ranges."""
        pass
    subnetwork: typing.Text = ...
    """Subnetwork URL."""

    def __init__(self,
        *,
        ip_cidr_range : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        secondary_ip_ranges : typing.Optional[typing.Iterable[global___UsableSubnetworkSecondaryRange]] = ...,
        subnetwork : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range","_network",b"_network","_subnetwork",b"_subnetwork","ip_cidr_range",b"ip_cidr_range","network",b"network","subnetwork",b"subnetwork"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range","_network",b"_network","_subnetwork",b"_subnetwork","ip_cidr_range",b"ip_cidr_range","network",b"network","secondary_ip_ranges",b"secondary_ip_ranges","subnetwork",b"subnetwork"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range"]) -> typing.Optional[typing_extensions.Literal["ip_cidr_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_subnetwork",b"_subnetwork"]) -> typing.Optional[typing_extensions.Literal["subnetwork"]]: ...
global___UsableSubnetwork = UsableSubnetwork

class UsableSubnetworkSecondaryRange(google.protobuf.message.Message):
    """Secondary IP range of a usable subnetwork."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IP_CIDR_RANGE_FIELD_NUMBER: builtins.int
    RANGE_NAME_FIELD_NUMBER: builtins.int
    ip_cidr_range: typing.Text = ...
    """The range of IP addresses belonging to this subnetwork secondary range."""

    range_name: typing.Text = ...
    """The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork."""

    def __init__(self,
        *,
        ip_cidr_range : typing.Optional[typing.Text] = ...,
        range_name : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range","_range_name",b"_range_name","ip_cidr_range",b"ip_cidr_range","range_name",b"range_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range","_range_name",b"_range_name","ip_cidr_range",b"ip_cidr_range","range_name",b"range_name"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_cidr_range",b"_ip_cidr_range"]) -> typing.Optional[typing_extensions.Literal["ip_cidr_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_range_name",b"_range_name"]) -> typing.Optional[typing_extensions.Literal["range_name"]]: ...
global___UsableSubnetworkSecondaryRange = UsableSubnetworkSecondaryRange

class UsableSubnetworksAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UsableSubnetwork]:
        """[Output] A list of usable subnetwork URLs."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#usableSubnetworksAggregatedList for aggregated lists of usable subnetworks."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results. In special cases listUsable may return 0 subnetworks and nextPageToken which still should be used to get the next page of results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___UsableSubnetwork]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___UsableSubnetworksAggregatedList = UsableSubnetworksAggregatedList

class UsageExportLocation(google.protobuf.message.Message):
    """The location in Cloud Storage and naming method of the daily usage report. Contains bucket_name and report_name prefix."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUCKET_NAME_FIELD_NUMBER: builtins.int
    REPORT_NAME_PREFIX_FIELD_NUMBER: builtins.int
    bucket_name: typing.Text = ...
    """The name of an existing bucket in Cloud Storage where the usage report object is stored. The Google Service Account is granted write access to this bucket. This can either be the bucket name by itself, such as example-bucket, or the bucket name with gs:// or https://storage.googleapis.com/ in front of it, such as gs://example-bucket."""

    report_name_prefix: typing.Text = ...
    """An optional prefix for the name of the usage report object stored in bucketName. If not supplied, defaults to usage_gce. The report is stored as a CSV file named report_name_prefix_gce_YYYYMMDD.csv where YYYYMMDD is the day of the usage according to Pacific Time. If you supply a prefix, it should conform to Cloud Storage object naming conventions."""

    def __init__(self,
        *,
        bucket_name : typing.Optional[typing.Text] = ...,
        report_name_prefix : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_bucket_name",b"_bucket_name","_report_name_prefix",b"_report_name_prefix","bucket_name",b"bucket_name","report_name_prefix",b"report_name_prefix"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_bucket_name",b"_bucket_name","_report_name_prefix",b"_report_name_prefix","bucket_name",b"bucket_name","report_name_prefix",b"report_name_prefix"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_bucket_name",b"_bucket_name"]) -> typing.Optional[typing_extensions.Literal["bucket_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_report_name_prefix",b"_report_name_prefix"]) -> typing.Optional[typing_extensions.Literal["report_name_prefix"]]: ...
global___UsageExportLocation = UsageExportLocation

class ValidateRegionUrlMapRequest(google.protobuf.message.Message):
    """A request message for RegionUrlMaps.Validate. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REGION_URL_MAPS_VALIDATE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region scoping this request."""

    @property
    def region_url_maps_validate_request_resource(self) -> global___RegionUrlMapsValidateRequest:
        """The body resource for this request"""
        pass
    url_map: typing.Text = ...
    """Name of the UrlMap resource to be validated as."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        region : typing.Text = ...,
        region_url_maps_validate_request_resource : typing.Optional[global___RegionUrlMapsValidateRequest] = ...,
        url_map : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["region_url_maps_validate_request_resource",b"region_url_maps_validate_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","region",b"region","region_url_maps_validate_request_resource",b"region_url_maps_validate_request_resource","url_map",b"url_map"]) -> None: ...
global___ValidateRegionUrlMapRequest = ValidateRegionUrlMapRequest

class ValidateUrlMapRequest(google.protobuf.message.Message):
    """A request message for UrlMaps.Validate. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    URL_MAP_FIELD_NUMBER: builtins.int
    URL_MAPS_VALIDATE_REQUEST_RESOURCE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Project ID for this request."""

    url_map: typing.Text = ...
    """Name of the UrlMap resource to be validated as."""

    @property
    def url_maps_validate_request_resource(self) -> global___UrlMapsValidateRequest:
        """The body resource for this request"""
        pass
    def __init__(self,
        *,
        project : typing.Text = ...,
        url_map : typing.Text = ...,
        url_maps_validate_request_resource : typing.Optional[global___UrlMapsValidateRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["url_maps_validate_request_resource",b"url_maps_validate_request_resource"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project","url_map",b"url_map","url_maps_validate_request_resource",b"url_maps_validate_request_resource"]) -> None: ...
global___ValidateUrlMapRequest = ValidateUrlMapRequest

class VmEndpointNatMappings(google.protobuf.message.Message):
    """Contain information of Nat mapping for a VM endpoint (i.e., NIC)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_NAME_FIELD_NUMBER: builtins.int
    INTERFACE_NAT_MAPPINGS_FIELD_NUMBER: builtins.int
    instance_name: typing.Text = ...
    """Name of the VM instance which the endpoint belongs to"""

    @property
    def interface_nat_mappings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VmEndpointNatMappingsInterfaceNatMappings]: ...
    def __init__(self,
        *,
        instance_name : typing.Optional[typing.Text] = ...,
        interface_nat_mappings : typing.Optional[typing.Iterable[global___VmEndpointNatMappingsInterfaceNatMappings]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_instance_name",b"_instance_name","instance_name",b"instance_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_instance_name",b"_instance_name","instance_name",b"instance_name","interface_nat_mappings",b"interface_nat_mappings"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_instance_name",b"_instance_name"]) -> typing.Optional[typing_extensions.Literal["instance_name"]]: ...
global___VmEndpointNatMappings = VmEndpointNatMappings

class VmEndpointNatMappingsInterfaceNatMappings(google.protobuf.message.Message):
    """Contain information of Nat mapping for an interface of this endpoint."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DRAIN_NAT_IP_PORT_RANGES_FIELD_NUMBER: builtins.int
    NAT_IP_PORT_RANGES_FIELD_NUMBER: builtins.int
    NUM_TOTAL_DRAIN_NAT_PORTS_FIELD_NUMBER: builtins.int
    NUM_TOTAL_NAT_PORTS_FIELD_NUMBER: builtins.int
    SOURCE_ALIAS_IP_RANGE_FIELD_NUMBER: builtins.int
    SOURCE_VIRTUAL_IP_FIELD_NUMBER: builtins.int
    @property
    def drain_nat_ip_port_ranges(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of all drain IP:port-range mappings assigned to this interface. These ranges are inclusive, that is, both the first and the last ports can be used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"]."""
        pass
    @property
    def nat_ip_port_ranges(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of all IP:port-range mappings assigned to this interface. These ranges are inclusive, that is, both the first and the last ports can be used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"]."""
        pass
    num_total_drain_nat_ports: builtins.int = ...
    """Total number of drain ports across all NAT IPs allocated to this interface. It equals to the aggregated port number in the field drain_nat_ip_port_ranges."""

    num_total_nat_ports: builtins.int = ...
    """Total number of ports across all NAT IPs allocated to this interface. It equals to the aggregated port number in the field nat_ip_port_ranges."""

    source_alias_ip_range: typing.Text = ...
    """Alias IP range for this interface endpoint. It will be a private (RFC 1918) IP range. Examples: "10.33.4.55/32", or "192.168.5.0/24"."""

    source_virtual_ip: typing.Text = ...
    """Primary IP of the VM for this NIC."""

    def __init__(self,
        *,
        drain_nat_ip_port_ranges : typing.Optional[typing.Iterable[typing.Text]] = ...,
        nat_ip_port_ranges : typing.Optional[typing.Iterable[typing.Text]] = ...,
        num_total_drain_nat_ports : typing.Optional[builtins.int] = ...,
        num_total_nat_ports : typing.Optional[builtins.int] = ...,
        source_alias_ip_range : typing.Optional[typing.Text] = ...,
        source_virtual_ip : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_num_total_drain_nat_ports",b"_num_total_drain_nat_ports","_num_total_nat_ports",b"_num_total_nat_ports","_source_alias_ip_range",b"_source_alias_ip_range","_source_virtual_ip",b"_source_virtual_ip","num_total_drain_nat_ports",b"num_total_drain_nat_ports","num_total_nat_ports",b"num_total_nat_ports","source_alias_ip_range",b"source_alias_ip_range","source_virtual_ip",b"source_virtual_ip"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_num_total_drain_nat_ports",b"_num_total_drain_nat_ports","_num_total_nat_ports",b"_num_total_nat_ports","_source_alias_ip_range",b"_source_alias_ip_range","_source_virtual_ip",b"_source_virtual_ip","drain_nat_ip_port_ranges",b"drain_nat_ip_port_ranges","nat_ip_port_ranges",b"nat_ip_port_ranges","num_total_drain_nat_ports",b"num_total_drain_nat_ports","num_total_nat_ports",b"num_total_nat_ports","source_alias_ip_range",b"source_alias_ip_range","source_virtual_ip",b"source_virtual_ip"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_num_total_drain_nat_ports",b"_num_total_drain_nat_ports"]) -> typing.Optional[typing_extensions.Literal["num_total_drain_nat_ports"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_num_total_nat_ports",b"_num_total_nat_ports"]) -> typing.Optional[typing_extensions.Literal["num_total_nat_ports"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_alias_ip_range",b"_source_alias_ip_range"]) -> typing.Optional[typing_extensions.Literal["source_alias_ip_range"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_virtual_ip",b"_source_virtual_ip"]) -> typing.Optional[typing_extensions.Literal["source_virtual_ip"]]: ...
global___VmEndpointNatMappingsInterfaceNatMappings = VmEndpointNatMappingsInterfaceNatMappings

class VmEndpointNatMappingsList(google.protobuf.message.Message):
    """Contains a list of VmEndpointNatMappings."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#vmEndpointNatMappingsList for lists of Nat mappings of VM endpoints."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    @property
    def result(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VmEndpointNatMappings]:
        """[Output Only] A list of Nat mapping information of VM endpoints."""
        pass
    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        result : typing.Optional[typing.Iterable[global___VmEndpointNatMappings]] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","result",b"result","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___VmEndpointNatMappingsList = VmEndpointNatMappingsList

class VpnGateway(google.protobuf.message.Message):
    """Represents a HA VPN gateway. HA VPN is a high-availability (HA) Cloud VPN solution that lets you securely connect your on-premises network to your Google Cloud Virtual Private Cloud network through an IPsec VPN connection in a single region. For more information about Cloud HA VPN solutions, see Cloud VPN topologies ."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NETWORK_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    VPN_INTERFACES_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#vpnGateway for VPN gateways."""

    label_fingerprint: typing.Text = ...
    """A fingerprint for the labels being applied to this VpnGateway, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an VpnGateway."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty."""
        pass
    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    network: typing.Text = ...
    """URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created."""

    region: typing.Text = ...
    """[Output Only] URL of the region where the VPN gateway resides."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    @property
    def vpn_interfaces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VpnGatewayVpnGatewayInterface]:
        """The list of VPN interfaces associated with this VPN gateway."""
        pass
    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        name : typing.Optional[typing.Text] = ...,
        network : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        vpn_interfaces : typing.Optional[typing.Iterable[global___VpnGatewayVpnGatewayInterface]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_name",b"_name","_network",b"_network","_region",b"_region","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","label_fingerprint",b"label_fingerprint","name",b"name","network",b"network","region",b"region","self_link",b"self_link"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_id",b"_id","_kind",b"_kind","_label_fingerprint",b"_label_fingerprint","_name",b"_name","_network",b"_network","_region",b"_region","_self_link",b"_self_link","creation_timestamp",b"creation_timestamp","description",b"description","id",b"id","kind",b"kind","label_fingerprint",b"label_fingerprint","labels",b"labels","name",b"name","network",b"network","region",b"region","self_link",b"self_link","vpn_interfaces",b"vpn_interfaces"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_network",b"_network"]) -> typing.Optional[typing_extensions.Literal["network"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
global___VpnGateway = VpnGateway

class VpnGatewayAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___VpnGatewaysScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___VpnGatewaysScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___VpnGatewaysScopedList]:
        """A list of VpnGateway resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#vpnGateway for VPN gateways."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___VpnGatewaysScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___VpnGatewayAggregatedList = VpnGatewayAggregatedList

class VpnGatewayList(google.protobuf.message.Message):
    """Contains a list of VpnGateway resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VpnGateway]:
        """A list of VpnGateway resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#vpnGateway for VPN gateways."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___VpnGateway]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___VpnGatewayList = VpnGatewayList

class VpnGatewayStatus(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VPN_CONNECTIONS_FIELD_NUMBER: builtins.int
    @property
    def vpn_connections(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VpnGatewayStatusVpnConnection]:
        """List of VPN connection for this VpnGateway."""
        pass
    def __init__(self,
        *,
        vpn_connections : typing.Optional[typing.Iterable[global___VpnGatewayStatusVpnConnection]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["vpn_connections",b"vpn_connections"]) -> None: ...
global___VpnGatewayStatus = VpnGatewayStatus

class VpnGatewayStatusHighAvailabilityRequirementState(google.protobuf.message.Message):
    """Describes the high availability requirement state for the VPN connection between this Cloud VPN gateway and a peer gateway."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATE: VpnGatewayStatusHighAvailabilityRequirementState.State.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CONNECTION_REDUNDANCY_MET: VpnGatewayStatusHighAvailabilityRequirementState.State.ValueType = ...  # 505242907
        """VPN tunnels are configured with adequate redundancy from Cloud VPN gateway to the peer VPN gateway. For both GCP-to-non-GCP and GCP-to-GCP connections, the adequate redundancy is a pre-requirement for users to get 99.99% availability on GCP side; please note that for any connection, end-to-end 99.99% availability is subject to proper configuration on the peer VPN gateway."""

        CONNECTION_REDUNDANCY_NOT_MET: VpnGatewayStatusHighAvailabilityRequirementState.State.ValueType = ...  # 511863311
        """VPN tunnels are not configured with adequate redundancy from the Cloud VPN gateway to the peer gateway"""

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Indicates the high availability requirement state for the VPN connection. Valid values are CONNECTION_REDUNDANCY_MET, CONNECTION_REDUNDANCY_NOT_MET."""
        pass

    UNDEFINED_STATE: VpnGatewayStatusHighAvailabilityRequirementState.State.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CONNECTION_REDUNDANCY_MET: VpnGatewayStatusHighAvailabilityRequirementState.State.ValueType = ...  # 505242907
    """VPN tunnels are configured with adequate redundancy from Cloud VPN gateway to the peer VPN gateway. For both GCP-to-non-GCP and GCP-to-GCP connections, the adequate redundancy is a pre-requirement for users to get 99.99% availability on GCP side; please note that for any connection, end-to-end 99.99% availability is subject to proper configuration on the peer VPN gateway."""

    CONNECTION_REDUNDANCY_NOT_MET: VpnGatewayStatusHighAvailabilityRequirementState.State.ValueType = ...  # 511863311
    """VPN tunnels are not configured with adequate redundancy from the Cloud VPN gateway to the peer gateway"""


    class _UnsatisfiedReason:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UnsatisfiedReasonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UnsatisfiedReason.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_UNSATISFIED_REASON: VpnGatewayStatusHighAvailabilityRequirementState.UnsatisfiedReason.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        INCOMPLETE_TUNNELS_COVERAGE: VpnGatewayStatusHighAvailabilityRequirementState.UnsatisfiedReason.ValueType = ...  # 55917437
    class UnsatisfiedReason(_UnsatisfiedReason, metaclass=_UnsatisfiedReasonEnumTypeWrapper):
        """Indicates the reason why the VPN connection does not meet the high availability redundancy criteria/requirement. Valid values is INCOMPLETE_TUNNELS_COVERAGE."""
        pass

    UNDEFINED_UNSATISFIED_REASON: VpnGatewayStatusHighAvailabilityRequirementState.UnsatisfiedReason.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    INCOMPLETE_TUNNELS_COVERAGE: VpnGatewayStatusHighAvailabilityRequirementState.UnsatisfiedReason.ValueType = ...  # 55917437

    STATE_FIELD_NUMBER: builtins.int
    UNSATISFIED_REASON_FIELD_NUMBER: builtins.int
    state: typing.Text = ...
    """Indicates the high availability requirement state for the VPN connection. Valid values are CONNECTION_REDUNDANCY_MET, CONNECTION_REDUNDANCY_NOT_MET.
    Check the State enum for the list of possible values.
    """

    unsatisfied_reason: typing.Text = ...
    """Indicates the reason why the VPN connection does not meet the high availability redundancy criteria/requirement. Valid values is INCOMPLETE_TUNNELS_COVERAGE.
    Check the UnsatisfiedReason enum for the list of possible values.
    """

    def __init__(self,
        *,
        state : typing.Optional[typing.Text] = ...,
        unsatisfied_reason : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_state",b"_state","_unsatisfied_reason",b"_unsatisfied_reason","state",b"state","unsatisfied_reason",b"unsatisfied_reason"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_state",b"_state","_unsatisfied_reason",b"_unsatisfied_reason","state",b"state","unsatisfied_reason",b"unsatisfied_reason"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_unsatisfied_reason",b"_unsatisfied_reason"]) -> typing.Optional[typing_extensions.Literal["unsatisfied_reason"]]: ...
global___VpnGatewayStatusHighAvailabilityRequirementState = VpnGatewayStatusHighAvailabilityRequirementState

class VpnGatewayStatusTunnel(google.protobuf.message.Message):
    """Contains some information about a VPN tunnel."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCAL_GATEWAY_INTERFACE_FIELD_NUMBER: builtins.int
    PEER_GATEWAY_INTERFACE_FIELD_NUMBER: builtins.int
    TUNNEL_URL_FIELD_NUMBER: builtins.int
    local_gateway_interface: builtins.int = ...
    """The VPN gateway interface this VPN tunnel is associated with."""

    peer_gateway_interface: builtins.int = ...
    """The peer gateway interface this VPN tunnel is connected to, the peer gateway could either be an external VPN gateway or GCP VPN gateway."""

    tunnel_url: typing.Text = ...
    """URL reference to the VPN tunnel."""

    def __init__(self,
        *,
        local_gateway_interface : typing.Optional[builtins.int] = ...,
        peer_gateway_interface : typing.Optional[builtins.int] = ...,
        tunnel_url : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_local_gateway_interface",b"_local_gateway_interface","_peer_gateway_interface",b"_peer_gateway_interface","_tunnel_url",b"_tunnel_url","local_gateway_interface",b"local_gateway_interface","peer_gateway_interface",b"peer_gateway_interface","tunnel_url",b"tunnel_url"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_local_gateway_interface",b"_local_gateway_interface","_peer_gateway_interface",b"_peer_gateway_interface","_tunnel_url",b"_tunnel_url","local_gateway_interface",b"local_gateway_interface","peer_gateway_interface",b"peer_gateway_interface","tunnel_url",b"tunnel_url"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_local_gateway_interface",b"_local_gateway_interface"]) -> typing.Optional[typing_extensions.Literal["local_gateway_interface"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_gateway_interface",b"_peer_gateway_interface"]) -> typing.Optional[typing_extensions.Literal["peer_gateway_interface"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_tunnel_url",b"_tunnel_url"]) -> typing.Optional[typing_extensions.Literal["tunnel_url"]]: ...
global___VpnGatewayStatusTunnel = VpnGatewayStatusTunnel

class VpnGatewayStatusVpnConnection(google.protobuf.message.Message):
    """A VPN connection contains all VPN tunnels connected from this VpnGateway to the same peer gateway. The peer gateway could either be a external VPN gateway or GCP VPN gateway."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PEER_EXTERNAL_GATEWAY_FIELD_NUMBER: builtins.int
    PEER_GCP_GATEWAY_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    TUNNELS_FIELD_NUMBER: builtins.int
    peer_external_gateway: typing.Text = ...
    """URL reference to the peer external VPN gateways to which the VPN tunnels in this VPN connection are connected. This field is mutually exclusive with peer_gcp_gateway."""

    peer_gcp_gateway: typing.Text = ...
    """URL reference to the peer side VPN gateways to which the VPN tunnels in this VPN connection are connected. This field is mutually exclusive with peer_gcp_gateway."""

    @property
    def state(self) -> global___VpnGatewayStatusHighAvailabilityRequirementState:
        """HighAvailabilityRequirementState for the VPN connection."""
        pass
    @property
    def tunnels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VpnGatewayStatusTunnel]:
        """List of VPN tunnels that are in this VPN connection."""
        pass
    def __init__(self,
        *,
        peer_external_gateway : typing.Optional[typing.Text] = ...,
        peer_gcp_gateway : typing.Optional[typing.Text] = ...,
        state : typing.Optional[global___VpnGatewayStatusHighAvailabilityRequirementState] = ...,
        tunnels : typing.Optional[typing.Iterable[global___VpnGatewayStatusTunnel]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_peer_external_gateway",b"_peer_external_gateway","_peer_gcp_gateway",b"_peer_gcp_gateway","_state",b"_state","peer_external_gateway",b"peer_external_gateway","peer_gcp_gateway",b"peer_gcp_gateway","state",b"state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_peer_external_gateway",b"_peer_external_gateway","_peer_gcp_gateway",b"_peer_gcp_gateway","_state",b"_state","peer_external_gateway",b"peer_external_gateway","peer_gcp_gateway",b"peer_gcp_gateway","state",b"state","tunnels",b"tunnels"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_external_gateway",b"_peer_external_gateway"]) -> typing.Optional[typing_extensions.Literal["peer_external_gateway"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_gcp_gateway",b"_peer_gcp_gateway"]) -> typing.Optional[typing_extensions.Literal["peer_gcp_gateway"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_state",b"_state"]) -> typing.Optional[typing_extensions.Literal["state"]]: ...
global___VpnGatewayStatusVpnConnection = VpnGatewayStatusVpnConnection

class VpnGatewayVpnGatewayInterface(google.protobuf.message.Message):
    """A VPN gateway interface."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    INTERCONNECT_ATTACHMENT_FIELD_NUMBER: builtins.int
    IP_ADDRESS_FIELD_NUMBER: builtins.int
    id: builtins.int = ...
    """[Output Only] Numeric identifier for this VPN interface associated with the VPN gateway."""

    interconnect_attachment: typing.Text = ...
    """URL of the VLAN attachment (interconnectAttachment) resource for this VPN gateway interface. When the value of this field is present, the VPN gateway is used for IPsec-encrypted Cloud Interconnect; all egress or ingress traffic for this VPN gateway interface goes through the specified VLAN attachment resource. Not currently available publicly."""

    ip_address: typing.Text = ...
    """[Output Only] IP address for this VPN interface associated with the VPN gateway. The IP address could be either a regional external IP address or a regional internal IP address. The two IP addresses for a VPN gateway must be all regional external or regional internal IP addresses. There cannot be a mix of regional external IP addresses and regional internal IP addresses. For IPsec-encrypted Cloud Interconnect, the IP addresses for both interfaces could either be regional internal IP addresses or regional external IP addresses. For regular (non IPsec-encrypted Cloud Interconnect) HA VPN tunnels, the IP address must be a regional external IP address."""

    def __init__(self,
        *,
        id : typing.Optional[builtins.int] = ...,
        interconnect_attachment : typing.Optional[typing.Text] = ...,
        ip_address : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_interconnect_attachment",b"_interconnect_attachment","_ip_address",b"_ip_address","id",b"id","interconnect_attachment",b"interconnect_attachment","ip_address",b"ip_address"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_interconnect_attachment",b"_interconnect_attachment","_ip_address",b"_ip_address","id",b"id","interconnect_attachment",b"interconnect_attachment","ip_address",b"ip_address"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_interconnect_attachment",b"_interconnect_attachment"]) -> typing.Optional[typing_extensions.Literal["interconnect_attachment"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ip_address",b"_ip_address"]) -> typing.Optional[typing_extensions.Literal["ip_address"]]: ...
global___VpnGatewayVpnGatewayInterface = VpnGatewayVpnGatewayInterface

class VpnGatewaysGetStatusResponse(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULT_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> global___VpnGatewayStatus: ...
    def __init__(self,
        *,
        result : typing.Optional[global___VpnGatewayStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_result",b"_result","result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_result",b"_result","result",b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_result",b"_result"]) -> typing.Optional[typing_extensions.Literal["result"]]: ...
global___VpnGatewaysGetStatusResponse = VpnGatewaysGetStatusResponse

class VpnGatewaysScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VPN_GATEWAYS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def vpn_gateways(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VpnGateway]:
        """[Output Only] A list of VPN gateways contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning which replaces the list of addresses when the list is empty."""
        pass
    def __init__(self,
        *,
        vpn_gateways : typing.Optional[typing.Iterable[global___VpnGateway]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","vpn_gateways",b"vpn_gateways","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___VpnGatewaysScopedList = VpnGatewaysScopedList

class VpnTunnel(google.protobuf.message.Message):
    """Represents a Cloud VPN Tunnel resource. For more information about VPN, read the the Cloud VPN Overview."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: VpnTunnel.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        ALLOCATING_RESOURCES: VpnTunnel.Status.ValueType = ...  # 320922816
        """Cloud VPN is in the process of allocating all required resources (specifically, a borg task)."""

        AUTHORIZATION_ERROR: VpnTunnel.Status.ValueType = ...  # 23580290
        """Auth error (e.g. bad shared secret)."""

        DEPROVISIONING: VpnTunnel.Status.ValueType = ...  # 428935662
        """Resources is being deallocated for the VPN tunnel."""

        ESTABLISHED: VpnTunnel.Status.ValueType = ...  # 88852344
        """Secure session is successfully established with peer VPN."""

        FAILED: VpnTunnel.Status.ValueType = ...  # 455706685
        """Tunnel creation has failed and the tunnel is not ready to be used."""

        FIRST_HANDSHAKE: VpnTunnel.Status.ValueType = ...  # 191393000
        """Successful first handshake with peer VPN."""

        NEGOTIATION_FAILURE: VpnTunnel.Status.ValueType = ...  # 360325868
        """Handshake failed."""

        NETWORK_ERROR: VpnTunnel.Status.ValueType = ...  # 193912951
        """Deprecated, replaced by NO_INCOMING_PACKETS"""

        NO_INCOMING_PACKETS: VpnTunnel.Status.ValueType = ...  # 119983216
        """No incoming packets from peer"""

        PROVISIONING: VpnTunnel.Status.ValueType = ...  # 290896621
        """Resource is being allocated for the VPN tunnel."""

        REJECTED: VpnTunnel.Status.ValueType = ...  # 174130302
        """Tunnel configuration was rejected, can be result of being denylisted."""

        STOPPED: VpnTunnel.Status.ValueType = ...  # 444276141
        """Tunnel is stopped due to its Forwarding Rules being deleted."""

        WAITING_FOR_FULL_CONFIG: VpnTunnel.Status.ValueType = ...  # 41640522
        """Waiting to receive all VPN-related configs from user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule and Route resources are needed to setup VPN tunnel."""

    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] The status of the VPN tunnel, which can be one of the following: - PROVISIONING: Resource is being allocated for the VPN tunnel. - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel. - FIRST_HANDSHAKE: Successful first handshake with the peer VPN. - ESTABLISHED: Secure session is successfully established with the peer VPN. - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret). - NEGOTIATION_FAILURE: Handshake failed. - DEPROVISIONING: Resources are being deallocated for the VPN tunnel. - FAILED: Tunnel creation has failed and the tunnel is not ready to be used. - NO_INCOMING_PACKETS: No incoming packets from peer. - REJECTED: Tunnel configuration was rejected, can be result of being denied access. - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources. - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state. - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT. - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel."""
        pass

    UNDEFINED_STATUS: VpnTunnel.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    ALLOCATING_RESOURCES: VpnTunnel.Status.ValueType = ...  # 320922816
    """Cloud VPN is in the process of allocating all required resources (specifically, a borg task)."""

    AUTHORIZATION_ERROR: VpnTunnel.Status.ValueType = ...  # 23580290
    """Auth error (e.g. bad shared secret)."""

    DEPROVISIONING: VpnTunnel.Status.ValueType = ...  # 428935662
    """Resources is being deallocated for the VPN tunnel."""

    ESTABLISHED: VpnTunnel.Status.ValueType = ...  # 88852344
    """Secure session is successfully established with peer VPN."""

    FAILED: VpnTunnel.Status.ValueType = ...  # 455706685
    """Tunnel creation has failed and the tunnel is not ready to be used."""

    FIRST_HANDSHAKE: VpnTunnel.Status.ValueType = ...  # 191393000
    """Successful first handshake with peer VPN."""

    NEGOTIATION_FAILURE: VpnTunnel.Status.ValueType = ...  # 360325868
    """Handshake failed."""

    NETWORK_ERROR: VpnTunnel.Status.ValueType = ...  # 193912951
    """Deprecated, replaced by NO_INCOMING_PACKETS"""

    NO_INCOMING_PACKETS: VpnTunnel.Status.ValueType = ...  # 119983216
    """No incoming packets from peer"""

    PROVISIONING: VpnTunnel.Status.ValueType = ...  # 290896621
    """Resource is being allocated for the VPN tunnel."""

    REJECTED: VpnTunnel.Status.ValueType = ...  # 174130302
    """Tunnel configuration was rejected, can be result of being denylisted."""

    STOPPED: VpnTunnel.Status.ValueType = ...  # 444276141
    """Tunnel is stopped due to its Forwarding Rules being deleted."""

    WAITING_FOR_FULL_CONFIG: VpnTunnel.Status.ValueType = ...  # 41640522
    """Waiting to receive all VPN-related configs from user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule and Route resources are needed to setup VPN tunnel."""


    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DETAILED_STATUS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    IKE_VERSION_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    LOCAL_TRAFFIC_SELECTOR_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    PEER_EXTERNAL_GATEWAY_FIELD_NUMBER: builtins.int
    PEER_EXTERNAL_GATEWAY_INTERFACE_FIELD_NUMBER: builtins.int
    PEER_GCP_GATEWAY_FIELD_NUMBER: builtins.int
    PEER_IP_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    REMOTE_TRAFFIC_SELECTOR_FIELD_NUMBER: builtins.int
    ROUTER_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    SHARED_SECRET_FIELD_NUMBER: builtins.int
    SHARED_SECRET_HASH_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    TARGET_VPN_GATEWAY_FIELD_NUMBER: builtins.int
    VPN_GATEWAY_FIELD_NUMBER: builtins.int
    VPN_GATEWAY_INTERFACE_FIELD_NUMBER: builtins.int
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    description: typing.Text = ...
    """An optional description of this resource. Provide this property when you create the resource."""

    detailed_status: typing.Text = ...
    """[Output Only] Detailed status message for the VPN tunnel."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    ike_version: builtins.int = ...
    """IKE protocol version to use when establishing the VPN tunnel with the peer VPN gateway. Acceptable IKE versions are 1 or 2. The default version is 2."""

    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels."""

    @property
    def local_traffic_selector(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Local traffic selector to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported."""
        pass
    name: typing.Text = ...
    """Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash."""

    peer_external_gateway: typing.Text = ...
    """URL of the peer side external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field is exclusive with the field peerGcpGateway."""

    peer_external_gateway_interface: builtins.int = ...
    """The interface ID of the external VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created."""

    peer_gcp_gateway: typing.Text = ...
    """URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected. Provided by the client when the VPN tunnel is created. This field can be used when creating highly available VPN from VPC network to VPC network, the field is exclusive with the field peerExternalGateway. If provided, the VPN tunnel will automatically use the same vpnGatewayInterface ID in the peer GCP VPN gateway."""

    peer_ip: typing.Text = ...
    """IP address of the peer VPN gateway. Only IPv4 is supported."""

    region: typing.Text = ...
    """[Output Only] URL of the region where the VPN tunnel resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body."""

    @property
    def remote_traffic_selector(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Remote traffic selectors to use when establishing the VPN tunnel with the peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported."""
        pass
    router: typing.Text = ...
    """URL of the router resource to be used for dynamic routing."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    shared_secret: typing.Text = ...
    """Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway."""

    shared_secret_hash: typing.Text = ...
    """Hash of the shared secret."""

    status: typing.Text = ...
    """[Output Only] The status of the VPN tunnel, which can be one of the following: - PROVISIONING: Resource is being allocated for the VPN tunnel. - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel. - FIRST_HANDSHAKE: Successful first handshake with the peer VPN. - ESTABLISHED: Secure session is successfully established with the peer VPN. - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret). - NEGOTIATION_FAILURE: Handshake failed. - DEPROVISIONING: Resources are being deallocated for the VPN tunnel. - FAILED: Tunnel creation has failed and the tunnel is not ready to be used. - NO_INCOMING_PACKETS: No incoming packets from peer. - REJECTED: Tunnel configuration was rejected, can be result of being denied access. - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources. - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state. - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT. - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel.
    Check the Status enum for the list of possible values.
    """

    target_vpn_gateway: typing.Text = ...
    """URL of the Target VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created."""

    vpn_gateway: typing.Text = ...
    """URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created. This must be used (instead of target_vpn_gateway) if a High Availability VPN gateway resource is created."""

    vpn_gateway_interface: builtins.int = ...
    """The interface ID of the VPN gateway with which this VPN tunnel is associated."""

    def __init__(self,
        *,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        detailed_status : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        ike_version : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        local_traffic_selector : typing.Optional[typing.Iterable[typing.Text]] = ...,
        name : typing.Optional[typing.Text] = ...,
        peer_external_gateway : typing.Optional[typing.Text] = ...,
        peer_external_gateway_interface : typing.Optional[builtins.int] = ...,
        peer_gcp_gateway : typing.Optional[typing.Text] = ...,
        peer_ip : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        remote_traffic_selector : typing.Optional[typing.Iterable[typing.Text]] = ...,
        router : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        shared_secret : typing.Optional[typing.Text] = ...,
        shared_secret_hash : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        target_vpn_gateway : typing.Optional[typing.Text] = ...,
        vpn_gateway : typing.Optional[typing.Text] = ...,
        vpn_gateway_interface : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_detailed_status",b"_detailed_status","_id",b"_id","_ike_version",b"_ike_version","_kind",b"_kind","_name",b"_name","_peer_external_gateway",b"_peer_external_gateway","_peer_external_gateway_interface",b"_peer_external_gateway_interface","_peer_gcp_gateway",b"_peer_gcp_gateway","_peer_ip",b"_peer_ip","_region",b"_region","_router",b"_router","_self_link",b"_self_link","_shared_secret",b"_shared_secret","_shared_secret_hash",b"_shared_secret_hash","_status",b"_status","_target_vpn_gateway",b"_target_vpn_gateway","_vpn_gateway",b"_vpn_gateway","_vpn_gateway_interface",b"_vpn_gateway_interface","creation_timestamp",b"creation_timestamp","description",b"description","detailed_status",b"detailed_status","id",b"id","ike_version",b"ike_version","kind",b"kind","name",b"name","peer_external_gateway",b"peer_external_gateway","peer_external_gateway_interface",b"peer_external_gateway_interface","peer_gcp_gateway",b"peer_gcp_gateway","peer_ip",b"peer_ip","region",b"region","router",b"router","self_link",b"self_link","shared_secret",b"shared_secret","shared_secret_hash",b"shared_secret_hash","status",b"status","target_vpn_gateway",b"target_vpn_gateway","vpn_gateway",b"vpn_gateway","vpn_gateway_interface",b"vpn_gateway_interface"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_description",b"_description","_detailed_status",b"_detailed_status","_id",b"_id","_ike_version",b"_ike_version","_kind",b"_kind","_name",b"_name","_peer_external_gateway",b"_peer_external_gateway","_peer_external_gateway_interface",b"_peer_external_gateway_interface","_peer_gcp_gateway",b"_peer_gcp_gateway","_peer_ip",b"_peer_ip","_region",b"_region","_router",b"_router","_self_link",b"_self_link","_shared_secret",b"_shared_secret","_shared_secret_hash",b"_shared_secret_hash","_status",b"_status","_target_vpn_gateway",b"_target_vpn_gateway","_vpn_gateway",b"_vpn_gateway","_vpn_gateway_interface",b"_vpn_gateway_interface","creation_timestamp",b"creation_timestamp","description",b"description","detailed_status",b"detailed_status","id",b"id","ike_version",b"ike_version","kind",b"kind","local_traffic_selector",b"local_traffic_selector","name",b"name","peer_external_gateway",b"peer_external_gateway","peer_external_gateway_interface",b"peer_external_gateway_interface","peer_gcp_gateway",b"peer_gcp_gateway","peer_ip",b"peer_ip","region",b"region","remote_traffic_selector",b"remote_traffic_selector","router",b"router","self_link",b"self_link","shared_secret",b"shared_secret","shared_secret_hash",b"shared_secret_hash","status",b"status","target_vpn_gateway",b"target_vpn_gateway","vpn_gateway",b"vpn_gateway","vpn_gateway_interface",b"vpn_gateway_interface"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_detailed_status",b"_detailed_status"]) -> typing.Optional[typing_extensions.Literal["detailed_status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ike_version",b"_ike_version"]) -> typing.Optional[typing_extensions.Literal["ike_version"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_external_gateway",b"_peer_external_gateway"]) -> typing.Optional[typing_extensions.Literal["peer_external_gateway"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_external_gateway_interface",b"_peer_external_gateway_interface"]) -> typing.Optional[typing_extensions.Literal["peer_external_gateway_interface"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_gcp_gateway",b"_peer_gcp_gateway"]) -> typing.Optional[typing_extensions.Literal["peer_gcp_gateway"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_peer_ip",b"_peer_ip"]) -> typing.Optional[typing_extensions.Literal["peer_ip"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_router",b"_router"]) -> typing.Optional[typing_extensions.Literal["router"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_shared_secret",b"_shared_secret"]) -> typing.Optional[typing_extensions.Literal["shared_secret"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_shared_secret_hash",b"_shared_secret_hash"]) -> typing.Optional[typing_extensions.Literal["shared_secret_hash"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_target_vpn_gateway",b"_target_vpn_gateway"]) -> typing.Optional[typing_extensions.Literal["target_vpn_gateway"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_vpn_gateway",b"_vpn_gateway"]) -> typing.Optional[typing_extensions.Literal["vpn_gateway"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_vpn_gateway_interface",b"_vpn_gateway_interface"]) -> typing.Optional[typing_extensions.Literal["vpn_gateway_interface"]]: ...
global___VpnTunnel = VpnTunnel

class VpnTunnelAggregatedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ItemsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___VpnTunnelsScopedList: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___VpnTunnelsScopedList] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    UNREACHABLES_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___VpnTunnelsScopedList]:
        """A list of VpnTunnelsScopedList resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def unreachables(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Unreachable resources."""
        pass
    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Mapping[typing.Text, global___VpnTunnelsScopedList]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        unreachables : typing.Optional[typing.Iterable[typing.Text]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","unreachables",b"unreachables","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___VpnTunnelAggregatedList = VpnTunnelAggregatedList

class VpnTunnelList(google.protobuf.message.Message):
    """Contains a list of VpnTunnel resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VpnTunnel]:
        """A list of VpnTunnel resources."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___VpnTunnel]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___VpnTunnelList = VpnTunnelList

class VpnTunnelsScopedList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VPN_TUNNELS_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    @property
    def vpn_tunnels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VpnTunnel]:
        """A list of VPN tunnels contained in this scope."""
        pass
    @property
    def warning(self) -> global___Warning:
        """Informational warning which replaces the list of addresses when the list is empty."""
        pass
    def __init__(self,
        *,
        vpn_tunnels : typing.Optional[typing.Iterable[global___VpnTunnel]] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_warning",b"_warning","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_warning",b"_warning","vpn_tunnels",b"vpn_tunnels","warning",b"warning"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___VpnTunnelsScopedList = VpnTunnelsScopedList

class WafExpressionSet(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ALIASES_FIELD_NUMBER: builtins.int
    EXPRESSIONS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    @property
    def aliases(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of alternate IDs. The format should be: - E.g. XSS-stable Generic suffix like "stable" is particularly useful if a policy likes to avail newer set of expressions without having to change the policy. A given alias name can't be used for more than one entity set."""
        pass
    @property
    def expressions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WafExpressionSetExpression]:
        """List of available expressions."""
        pass
    id: typing.Text = ...
    """Google specified expression set ID. The format should be: - E.g. XSS-20170329 required"""

    def __init__(self,
        *,
        aliases : typing.Optional[typing.Iterable[typing.Text]] = ...,
        expressions : typing.Optional[typing.Iterable[global___WafExpressionSetExpression]] = ...,
        id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","id",b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","aliases",b"aliases","expressions",b"expressions","id",b"id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
global___WafExpressionSet = WafExpressionSet

class WafExpressionSetExpression(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """Expression ID should uniquely identify the origin of the expression. E.g. owasp-crs-v020901-id973337 identifies Owasp core rule set version 2.9.1 rule id 973337. The ID could be used to determine the individual attack definition that has been detected. It could also be used to exclude it from the policy in case of false positive. required"""

    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","id",b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","id",b"id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
global___WafExpressionSetExpression = WafExpressionSetExpression

class WaitGlobalOperationRequest(google.protobuf.message.Message):
    """A request message for GlobalOperations.Wait. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation",b"operation","project",b"project"]) -> None: ...
global___WaitGlobalOperationRequest = WaitGlobalOperationRequest

class WaitRegionOperationRequest(google.protobuf.message.Message):
    """A request message for RegionOperations.Wait. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    region: typing.Text = ...
    """Name of the region for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        project : typing.Text = ...,
        region : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation",b"operation","project",b"project","region",b"region"]) -> None: ...
global___WaitRegionOperationRequest = WaitRegionOperationRequest

class WaitZoneOperationRequest(google.protobuf.message.Message):
    """A request message for ZoneOperations.Wait. See the method description for details."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATION_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    operation: typing.Text = ...
    """Name of the Operations resource to return."""

    project: typing.Text = ...
    """Project ID for this request."""

    zone: typing.Text = ...
    """Name of the zone for this request."""

    def __init__(self,
        *,
        operation : typing.Text = ...,
        project : typing.Text = ...,
        zone : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation",b"operation","project",b"project","zone",b"zone"]) -> None: ...
global___WaitZoneOperationRequest = WaitZoneOperationRequest

class Warning(google.protobuf.message.Message):
    """[Output Only] Informational warning message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Code:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Code.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CODE: Warning.Code.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CLEANUP_FAILED: Warning.Code.ValueType = ...  # 150308440
        """Warning about failed cleanup of transient changes made by a failed operation."""

        DEPRECATED_RESOURCE_USED: Warning.Code.ValueType = ...  # 391835586
        """A link to a deprecated resource was created."""

        DEPRECATED_TYPE_USED: Warning.Code.ValueType = ...  # 346526230
        """When deploying and at least one of the resources has a type marked as deprecated"""

        DISK_SIZE_LARGER_THAN_IMAGE_SIZE: Warning.Code.ValueType = ...  # 369442967
        """The user created a boot disk that is larger than image size."""

        EXPERIMENTAL_TYPE_USED: Warning.Code.ValueType = ...  # 451954443
        """When deploying and at least one of the resources has a type marked as experimental"""

        EXTERNAL_API_WARNING: Warning.Code.ValueType = ...  # 175546307
        """Warning that is present in an external api call"""

        FIELD_VALUE_OVERRIDEN: Warning.Code.ValueType = ...  # 329669423
        """Warning that value of a field has been overridden. Deprecated unused field."""

        INJECTED_KERNELS_DEPRECATED: Warning.Code.ValueType = ...  # 417377419
        """The operation involved use of an injected kernel, which is deprecated."""

        LARGE_DEPLOYMENT_WARNING: Warning.Code.ValueType = ...  # 481440678
        """When deploying a deployment with a exceedingly large number of resources"""

        MISSING_TYPE_DEPENDENCY: Warning.Code.ValueType = ...  # 344505463
        """A resource depends on a missing type"""

        NEXT_HOP_ADDRESS_NOT_ASSIGNED: Warning.Code.ValueType = ...  # 324964999
        """The route's nextHopIp address is not assigned to an instance on the network."""

        NEXT_HOP_CANNOT_IP_FORWARD: Warning.Code.ValueType = ...  # 383382887
        """The route's next hop instance cannot ip forward."""

        NEXT_HOP_INSTANCE_NOT_FOUND: Warning.Code.ValueType = ...  # 464250446
        """The route's nextHopInstance URL refers to an instance that does not exist."""

        NEXT_HOP_INSTANCE_NOT_ON_NETWORK: Warning.Code.ValueType = ...  # 243758146
        """The route's nextHopInstance URL refers to an instance that is not on the same network as the route."""

        NEXT_HOP_NOT_RUNNING: Warning.Code.ValueType = ...  # 417081265
        """The route's next hop instance does not have a status of RUNNING."""

        NOT_CRITICAL_ERROR: Warning.Code.ValueType = ...  # 105763924
        """Error which is not critical. We decided to continue the process despite the mentioned error."""

        NO_RESULTS_ON_PAGE: Warning.Code.ValueType = ...  # 30036744
        """No results are present on a particular list page."""

        PARTIAL_SUCCESS: Warning.Code.ValueType = ...  # 39966469
        """Success is reported, but some results may be missing due to errors"""

        REQUIRED_TOS_AGREEMENT: Warning.Code.ValueType = ...  # 3745539
        """The user attempted to use a resource that requires a TOS they have not accepted."""

        RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning.Code.ValueType = ...  # 496728641
        """Warning that a resource is in use."""

        RESOURCE_NOT_DELETED: Warning.Code.ValueType = ...  # 168598460
        """One or more of the resources set to auto-delete could not be deleted because they were in use."""

        SCHEMA_VALIDATION_IGNORED: Warning.Code.ValueType = ...  # 275245642
        """When a resource schema validation is ignored."""

        SINGLE_INSTANCE_PROPERTY_TEMPLATE: Warning.Code.ValueType = ...  # 268305617
        """Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group."""

        UNDECLARED_PROPERTIES: Warning.Code.ValueType = ...  # 390513439
        """When undeclared properties in the schema are present"""

        UNREACHABLE: Warning.Code.ValueType = ...  # 13328052
        """A given scope cannot be reached."""

    class Code(_Code, metaclass=_CodeEnumTypeWrapper):
        """[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response."""
        pass

    UNDEFINED_CODE: Warning.Code.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CLEANUP_FAILED: Warning.Code.ValueType = ...  # 150308440
    """Warning about failed cleanup of transient changes made by a failed operation."""

    DEPRECATED_RESOURCE_USED: Warning.Code.ValueType = ...  # 391835586
    """A link to a deprecated resource was created."""

    DEPRECATED_TYPE_USED: Warning.Code.ValueType = ...  # 346526230
    """When deploying and at least one of the resources has a type marked as deprecated"""

    DISK_SIZE_LARGER_THAN_IMAGE_SIZE: Warning.Code.ValueType = ...  # 369442967
    """The user created a boot disk that is larger than image size."""

    EXPERIMENTAL_TYPE_USED: Warning.Code.ValueType = ...  # 451954443
    """When deploying and at least one of the resources has a type marked as experimental"""

    EXTERNAL_API_WARNING: Warning.Code.ValueType = ...  # 175546307
    """Warning that is present in an external api call"""

    FIELD_VALUE_OVERRIDEN: Warning.Code.ValueType = ...  # 329669423
    """Warning that value of a field has been overridden. Deprecated unused field."""

    INJECTED_KERNELS_DEPRECATED: Warning.Code.ValueType = ...  # 417377419
    """The operation involved use of an injected kernel, which is deprecated."""

    LARGE_DEPLOYMENT_WARNING: Warning.Code.ValueType = ...  # 481440678
    """When deploying a deployment with a exceedingly large number of resources"""

    MISSING_TYPE_DEPENDENCY: Warning.Code.ValueType = ...  # 344505463
    """A resource depends on a missing type"""

    NEXT_HOP_ADDRESS_NOT_ASSIGNED: Warning.Code.ValueType = ...  # 324964999
    """The route's nextHopIp address is not assigned to an instance on the network."""

    NEXT_HOP_CANNOT_IP_FORWARD: Warning.Code.ValueType = ...  # 383382887
    """The route's next hop instance cannot ip forward."""

    NEXT_HOP_INSTANCE_NOT_FOUND: Warning.Code.ValueType = ...  # 464250446
    """The route's nextHopInstance URL refers to an instance that does not exist."""

    NEXT_HOP_INSTANCE_NOT_ON_NETWORK: Warning.Code.ValueType = ...  # 243758146
    """The route's nextHopInstance URL refers to an instance that is not on the same network as the route."""

    NEXT_HOP_NOT_RUNNING: Warning.Code.ValueType = ...  # 417081265
    """The route's next hop instance does not have a status of RUNNING."""

    NOT_CRITICAL_ERROR: Warning.Code.ValueType = ...  # 105763924
    """Error which is not critical. We decided to continue the process despite the mentioned error."""

    NO_RESULTS_ON_PAGE: Warning.Code.ValueType = ...  # 30036744
    """No results are present on a particular list page."""

    PARTIAL_SUCCESS: Warning.Code.ValueType = ...  # 39966469
    """Success is reported, but some results may be missing due to errors"""

    REQUIRED_TOS_AGREEMENT: Warning.Code.ValueType = ...  # 3745539
    """The user attempted to use a resource that requires a TOS they have not accepted."""

    RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warning.Code.ValueType = ...  # 496728641
    """Warning that a resource is in use."""

    RESOURCE_NOT_DELETED: Warning.Code.ValueType = ...  # 168598460
    """One or more of the resources set to auto-delete could not be deleted because they were in use."""

    SCHEMA_VALIDATION_IGNORED: Warning.Code.ValueType = ...  # 275245642
    """When a resource schema validation is ignored."""

    SINGLE_INSTANCE_PROPERTY_TEMPLATE: Warning.Code.ValueType = ...  # 268305617
    """Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group."""

    UNDECLARED_PROPERTIES: Warning.Code.ValueType = ...  # 390513439
    """When undeclared properties in the schema are present"""

    UNREACHABLE: Warning.Code.ValueType = ...  # 13328052
    """A given scope cannot be reached."""


    CODE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    code: typing.Text = ...
    """[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    Check the Code enum for the list of possible values.
    """

    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Data]:
        """[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }"""
        pass
    message: typing.Text = ...
    """[Output Only] A human-readable description of the warning code."""

    def __init__(self,
        *,
        code : typing.Optional[typing.Text] = ...,
        data : typing.Optional[typing.Iterable[global___Data]] = ...,
        message : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_code",b"_code","_message",b"_message","code",b"code","message",b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_code",b"_code","_message",b"_message","code",b"code","data",b"data","message",b"message"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_code",b"_code"]) -> typing.Optional[typing_extensions.Literal["code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message",b"_message"]) -> typing.Optional[typing_extensions.Literal["message"]]: ...
global___Warning = Warning

class Warnings(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Code:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Code.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_CODE: Warnings.Code.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        CLEANUP_FAILED: Warnings.Code.ValueType = ...  # 150308440
        """Warning about failed cleanup of transient changes made by a failed operation."""

        DEPRECATED_RESOURCE_USED: Warnings.Code.ValueType = ...  # 391835586
        """A link to a deprecated resource was created."""

        DEPRECATED_TYPE_USED: Warnings.Code.ValueType = ...  # 346526230
        """When deploying and at least one of the resources has a type marked as deprecated"""

        DISK_SIZE_LARGER_THAN_IMAGE_SIZE: Warnings.Code.ValueType = ...  # 369442967
        """The user created a boot disk that is larger than image size."""

        EXPERIMENTAL_TYPE_USED: Warnings.Code.ValueType = ...  # 451954443
        """When deploying and at least one of the resources has a type marked as experimental"""

        EXTERNAL_API_WARNING: Warnings.Code.ValueType = ...  # 175546307
        """Warning that is present in an external api call"""

        FIELD_VALUE_OVERRIDEN: Warnings.Code.ValueType = ...  # 329669423
        """Warning that value of a field has been overridden. Deprecated unused field."""

        INJECTED_KERNELS_DEPRECATED: Warnings.Code.ValueType = ...  # 417377419
        """The operation involved use of an injected kernel, which is deprecated."""

        LARGE_DEPLOYMENT_WARNING: Warnings.Code.ValueType = ...  # 481440678
        """When deploying a deployment with a exceedingly large number of resources"""

        MISSING_TYPE_DEPENDENCY: Warnings.Code.ValueType = ...  # 344505463
        """A resource depends on a missing type"""

        NEXT_HOP_ADDRESS_NOT_ASSIGNED: Warnings.Code.ValueType = ...  # 324964999
        """The route's nextHopIp address is not assigned to an instance on the network."""

        NEXT_HOP_CANNOT_IP_FORWARD: Warnings.Code.ValueType = ...  # 383382887
        """The route's next hop instance cannot ip forward."""

        NEXT_HOP_INSTANCE_NOT_FOUND: Warnings.Code.ValueType = ...  # 464250446
        """The route's nextHopInstance URL refers to an instance that does not exist."""

        NEXT_HOP_INSTANCE_NOT_ON_NETWORK: Warnings.Code.ValueType = ...  # 243758146
        """The route's nextHopInstance URL refers to an instance that is not on the same network as the route."""

        NEXT_HOP_NOT_RUNNING: Warnings.Code.ValueType = ...  # 417081265
        """The route's next hop instance does not have a status of RUNNING."""

        NOT_CRITICAL_ERROR: Warnings.Code.ValueType = ...  # 105763924
        """Error which is not critical. We decided to continue the process despite the mentioned error."""

        NO_RESULTS_ON_PAGE: Warnings.Code.ValueType = ...  # 30036744
        """No results are present on a particular list page."""

        PARTIAL_SUCCESS: Warnings.Code.ValueType = ...  # 39966469
        """Success is reported, but some results may be missing due to errors"""

        REQUIRED_TOS_AGREEMENT: Warnings.Code.ValueType = ...  # 3745539
        """The user attempted to use a resource that requires a TOS they have not accepted."""

        RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warnings.Code.ValueType = ...  # 496728641
        """Warning that a resource is in use."""

        RESOURCE_NOT_DELETED: Warnings.Code.ValueType = ...  # 168598460
        """One or more of the resources set to auto-delete could not be deleted because they were in use."""

        SCHEMA_VALIDATION_IGNORED: Warnings.Code.ValueType = ...  # 275245642
        """When a resource schema validation is ignored."""

        SINGLE_INSTANCE_PROPERTY_TEMPLATE: Warnings.Code.ValueType = ...  # 268305617
        """Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group."""

        UNDECLARED_PROPERTIES: Warnings.Code.ValueType = ...  # 390513439
        """When undeclared properties in the schema are present"""

        UNREACHABLE: Warnings.Code.ValueType = ...  # 13328052
        """A given scope cannot be reached."""

    class Code(_Code, metaclass=_CodeEnumTypeWrapper):
        """[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response."""
        pass

    UNDEFINED_CODE: Warnings.Code.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    CLEANUP_FAILED: Warnings.Code.ValueType = ...  # 150308440
    """Warning about failed cleanup of transient changes made by a failed operation."""

    DEPRECATED_RESOURCE_USED: Warnings.Code.ValueType = ...  # 391835586
    """A link to a deprecated resource was created."""

    DEPRECATED_TYPE_USED: Warnings.Code.ValueType = ...  # 346526230
    """When deploying and at least one of the resources has a type marked as deprecated"""

    DISK_SIZE_LARGER_THAN_IMAGE_SIZE: Warnings.Code.ValueType = ...  # 369442967
    """The user created a boot disk that is larger than image size."""

    EXPERIMENTAL_TYPE_USED: Warnings.Code.ValueType = ...  # 451954443
    """When deploying and at least one of the resources has a type marked as experimental"""

    EXTERNAL_API_WARNING: Warnings.Code.ValueType = ...  # 175546307
    """Warning that is present in an external api call"""

    FIELD_VALUE_OVERRIDEN: Warnings.Code.ValueType = ...  # 329669423
    """Warning that value of a field has been overridden. Deprecated unused field."""

    INJECTED_KERNELS_DEPRECATED: Warnings.Code.ValueType = ...  # 417377419
    """The operation involved use of an injected kernel, which is deprecated."""

    LARGE_DEPLOYMENT_WARNING: Warnings.Code.ValueType = ...  # 481440678
    """When deploying a deployment with a exceedingly large number of resources"""

    MISSING_TYPE_DEPENDENCY: Warnings.Code.ValueType = ...  # 344505463
    """A resource depends on a missing type"""

    NEXT_HOP_ADDRESS_NOT_ASSIGNED: Warnings.Code.ValueType = ...  # 324964999
    """The route's nextHopIp address is not assigned to an instance on the network."""

    NEXT_HOP_CANNOT_IP_FORWARD: Warnings.Code.ValueType = ...  # 383382887
    """The route's next hop instance cannot ip forward."""

    NEXT_HOP_INSTANCE_NOT_FOUND: Warnings.Code.ValueType = ...  # 464250446
    """The route's nextHopInstance URL refers to an instance that does not exist."""

    NEXT_HOP_INSTANCE_NOT_ON_NETWORK: Warnings.Code.ValueType = ...  # 243758146
    """The route's nextHopInstance URL refers to an instance that is not on the same network as the route."""

    NEXT_HOP_NOT_RUNNING: Warnings.Code.ValueType = ...  # 417081265
    """The route's next hop instance does not have a status of RUNNING."""

    NOT_CRITICAL_ERROR: Warnings.Code.ValueType = ...  # 105763924
    """Error which is not critical. We decided to continue the process despite the mentioned error."""

    NO_RESULTS_ON_PAGE: Warnings.Code.ValueType = ...  # 30036744
    """No results are present on a particular list page."""

    PARTIAL_SUCCESS: Warnings.Code.ValueType = ...  # 39966469
    """Success is reported, but some results may be missing due to errors"""

    REQUIRED_TOS_AGREEMENT: Warnings.Code.ValueType = ...  # 3745539
    """The user attempted to use a resource that requires a TOS they have not accepted."""

    RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING: Warnings.Code.ValueType = ...  # 496728641
    """Warning that a resource is in use."""

    RESOURCE_NOT_DELETED: Warnings.Code.ValueType = ...  # 168598460
    """One or more of the resources set to auto-delete could not be deleted because they were in use."""

    SCHEMA_VALIDATION_IGNORED: Warnings.Code.ValueType = ...  # 275245642
    """When a resource schema validation is ignored."""

    SINGLE_INSTANCE_PROPERTY_TEMPLATE: Warnings.Code.ValueType = ...  # 268305617
    """Instance template used in instance group manager is valid as such, but its application does not make a lot of sense, because it allows only single instance in instance group."""

    UNDECLARED_PROPERTIES: Warnings.Code.ValueType = ...  # 390513439
    """When undeclared properties in the schema are present"""

    UNREACHABLE: Warnings.Code.ValueType = ...  # 13328052
    """A given scope cannot be reached."""


    CODE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    code: typing.Text = ...
    """[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
    Check the Code enum for the list of possible values.
    """

    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Data]:
        """[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }"""
        pass
    message: typing.Text = ...
    """[Output Only] A human-readable description of the warning code."""

    def __init__(self,
        *,
        code : typing.Optional[typing.Text] = ...,
        data : typing.Optional[typing.Iterable[global___Data]] = ...,
        message : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_code",b"_code","_message",b"_message","code",b"code","message",b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_code",b"_code","_message",b"_message","code",b"code","data",b"data","message",b"message"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_code",b"_code"]) -> typing.Optional[typing_extensions.Literal["code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_message",b"_message"]) -> typing.Optional[typing_extensions.Literal["message"]]: ...
global___Warnings = Warnings

class WeightedBackendService(google.protobuf.message.Message):
    """In contrast to a single BackendService in HttpRouteAction to which all matching traffic is directed to, WeightedBackendService allows traffic to be split across multiple BackendServices. The volume of traffic for each BackendService is proportional to the weight specified in each WeightedBackendService"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BACKEND_SERVICE_FIELD_NUMBER: builtins.int
    HEADER_ACTION_FIELD_NUMBER: builtins.int
    WEIGHT_FIELD_NUMBER: builtins.int
    backend_service: typing.Text = ...
    """The full or partial URL to the default BackendService resource. Before forwarding the request to backendService, the loadbalancer applies any relevant headerActions specified as part of this backendServiceWeight."""

    @property
    def header_action(self) -> global___HttpHeaderAction:
        """Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap. Note that headerAction is not supported for Loadbalancers that have their loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound to target gRPC proxy that has validateForProxyless field set to true."""
        pass
    weight: builtins.int = ...
    """Specifies the fraction of traffic sent to backendService, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backendService, subsequent requests will be sent to the same backendService as determined by the BackendService's session affinity policy. The value must be between 0 and 1000"""

    def __init__(self,
        *,
        backend_service : typing.Optional[typing.Text] = ...,
        header_action : typing.Optional[global___HttpHeaderAction] = ...,
        weight : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_backend_service",b"_backend_service","_header_action",b"_header_action","_weight",b"_weight","backend_service",b"backend_service","header_action",b"header_action","weight",b"weight"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_backend_service",b"_backend_service","_header_action",b"_header_action","_weight",b"_weight","backend_service",b"backend_service","header_action",b"header_action","weight",b"weight"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_backend_service",b"_backend_service"]) -> typing.Optional[typing_extensions.Literal["backend_service"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_header_action",b"_header_action"]) -> typing.Optional[typing_extensions.Literal["header_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_weight",b"_weight"]) -> typing.Optional[typing_extensions.Literal["weight"]]: ...
global___WeightedBackendService = WeightedBackendService

class XpnHostList(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Project]:
        """[Output Only] A list of shared VPC host project URLs."""
        pass
    kind: typing.Text = ...
    """[Output Only] Type of resource. Always compute#xpnHostList for lists of shared VPC hosts."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Project]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___XpnHostList = XpnHostList

class XpnResourceId(google.protobuf.message.Message):
    """Service resource (a.k.a service project) ID."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_TYPE: XpnResourceId.Type.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        PROJECT: XpnResourceId.Type.ValueType = ...  # 408671993
        XPN_RESOURCE_TYPE_UNSPECIFIED: XpnResourceId.Type.ValueType = ...  # 151607034
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        """The type of the service resource."""
        pass

    UNDEFINED_TYPE: XpnResourceId.Type.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    PROJECT: XpnResourceId.Type.ValueType = ...  # 408671993
    XPN_RESOURCE_TYPE_UNSPECIFIED: XpnResourceId.Type.ValueType = ...  # 151607034

    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """The ID of the service resource. In the case of projects, this field supports project id (e.g., my-project-123) and project number (e.g. 12345678)."""

    type: typing.Text = ...
    """The type of the service resource.
    Check the Type enum for the list of possible values.
    """

    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        type : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_type",b"_type","id",b"id","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_type",b"_type","id",b"id","type",b"type"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_type",b"_type"]) -> typing.Optional[typing_extensions.Literal["type"]]: ...
global___XpnResourceId = XpnResourceId

class Zone(google.protobuf.message.Message):
    """Represents a Zone resource. A zone is a deployment area. These deployment areas are subsets of a region. For example the zone us-east1-a is located in the us-east1 region. For more information, read Regions and Zones."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Status:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNDEFINED_STATUS: Zone.Status.ValueType = ...  # 0
        """A value indicating that the enum field is not set."""

        DOWN: Zone.Status.ValueType = ...  # 2104482
        UP: Zone.Status.ValueType = ...  # 2715
    class Status(_Status, metaclass=_StatusEnumTypeWrapper):
        """[Output Only] Status of the zone, either UP or DOWN."""
        pass

    UNDEFINED_STATUS: Zone.Status.ValueType = ...  # 0
    """A value indicating that the enum field is not set."""

    DOWN: Zone.Status.ValueType = ...  # 2104482
    UP: Zone.Status.ValueType = ...  # 2715

    AVAILABLE_CPU_PLATFORMS_FIELD_NUMBER: builtins.int
    CREATION_TIMESTAMP_FIELD_NUMBER: builtins.int
    DEPRECATED_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    SUPPORTS_PZS_FIELD_NUMBER: builtins.int
    @property
    def available_cpu_platforms(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """[Output Only] Available cpu/platform selections for the zone."""
        pass
    creation_timestamp: typing.Text = ...
    """[Output Only] Creation timestamp in RFC3339 text format."""

    @property
    def deprecated(self) -> global___DeprecationStatus:
        """[Output Only] The deprecation status associated with this zone."""
        pass
    description: typing.Text = ...
    """[Output Only] Textual description of the resource."""

    id: builtins.int = ...
    """[Output Only] The unique identifier for the resource. This identifier is defined by the server."""

    kind: typing.Text = ...
    """[Output Only] Type of the resource. Always compute#zone for zones."""

    name: typing.Text = ...
    """[Output Only] Name of the resource."""

    region: typing.Text = ...
    """[Output Only] Full URL reference to the region which hosts the zone."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for the resource."""

    status: typing.Text = ...
    """[Output Only] Status of the zone, either UP or DOWN.
    Check the Status enum for the list of possible values.
    """

    supports_pzs: builtins.bool = ...
    """[Output Only] Reserved for future use."""

    def __init__(self,
        *,
        available_cpu_platforms : typing.Optional[typing.Iterable[typing.Text]] = ...,
        creation_timestamp : typing.Optional[typing.Text] = ...,
        deprecated : typing.Optional[global___DeprecationStatus] = ...,
        description : typing.Optional[typing.Text] = ...,
        id : typing.Optional[builtins.int] = ...,
        kind : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        region : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        status : typing.Optional[typing.Text] = ...,
        supports_pzs : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","_status",b"_status","_supports_pzs",b"_supports_pzs","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","id",b"id","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link","status",b"status","supports_pzs",b"supports_pzs"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp","_deprecated",b"_deprecated","_description",b"_description","_id",b"_id","_kind",b"_kind","_name",b"_name","_region",b"_region","_self_link",b"_self_link","_status",b"_status","_supports_pzs",b"_supports_pzs","available_cpu_platforms",b"available_cpu_platforms","creation_timestamp",b"creation_timestamp","deprecated",b"deprecated","description",b"description","id",b"id","kind",b"kind","name",b"name","region",b"region","self_link",b"self_link","status",b"status","supports_pzs",b"supports_pzs"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_creation_timestamp",b"_creation_timestamp"]) -> typing.Optional[typing_extensions.Literal["creation_timestamp"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_deprecated",b"_deprecated"]) -> typing.Optional[typing_extensions.Literal["deprecated"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_region",b"_region"]) -> typing.Optional[typing_extensions.Literal["region"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_status",b"_status"]) -> typing.Optional[typing_extensions.Literal["status"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_supports_pzs",b"_supports_pzs"]) -> typing.Optional[typing_extensions.Literal["supports_pzs"]]: ...
global___Zone = Zone

class ZoneList(google.protobuf.message.Message):
    """Contains a list of zone resources."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    SELF_LINK_FIELD_NUMBER: builtins.int
    WARNING_FIELD_NUMBER: builtins.int
    id: typing.Text = ...
    """[Output Only] Unique identifier for the resource; defined by the server."""

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Zone]:
        """A list of Zone resources."""
        pass
    kind: typing.Text = ...
    """Type of resource."""

    next_page_token: typing.Text = ...
    """[Output Only] This token allows you to get the next page of results for list requests. If the number of results is larger than maxResults, use the nextPageToken as a value for the query parameter pageToken in the next list request. Subsequent list requests will have their own nextPageToken to continue paging through the results."""

    self_link: typing.Text = ...
    """[Output Only] Server-defined URL for this resource."""

    @property
    def warning(self) -> global___Warning:
        """[Output Only] Informational warning message."""
        pass
    def __init__(self,
        *,
        id : typing.Optional[typing.Text] = ...,
        items : typing.Optional[typing.Iterable[global___Zone]] = ...,
        kind : typing.Optional[typing.Text] = ...,
        next_page_token : typing.Optional[typing.Text] = ...,
        self_link : typing.Optional[typing.Text] = ...,
        warning : typing.Optional[global___Warning] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_id",b"_id","_kind",b"_kind","_next_page_token",b"_next_page_token","_self_link",b"_self_link","_warning",b"_warning","id",b"id","items",b"items","kind",b"kind","next_page_token",b"next_page_token","self_link",b"self_link","warning",b"warning"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_kind",b"_kind"]) -> typing.Optional[typing_extensions.Literal["kind"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_next_page_token",b"_next_page_token"]) -> typing.Optional[typing_extensions.Literal["next_page_token"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_self_link",b"_self_link"]) -> typing.Optional[typing_extensions.Literal["self_link"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_warning",b"_warning"]) -> typing.Optional[typing_extensions.Literal["warning"]]: ...
global___ZoneList = ZoneList

class ZoneSetLabelsRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class LabelsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    LABEL_FINGERPRINT_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    label_fingerprint: typing.Text = ...
    """The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. Make a get() request to the resource to get the latest fingerprint."""

    @property
    def labels(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The labels to set for this resource."""
        pass
    def __init__(self,
        *,
        label_fingerprint : typing.Optional[typing.Text] = ...,
        labels : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint","label_fingerprint",b"label_fingerprint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint","label_fingerprint",b"label_fingerprint","labels",b"labels"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_label_fingerprint",b"_label_fingerprint"]) -> typing.Optional[typing_extensions.Literal["label_fingerprint"]]: ...
global___ZoneSetLabelsRequest = ZoneSetLabelsRequest

class ZoneSetPolicyRequest(google.protobuf.message.Message):
    """"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BINDINGS_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    POLICY_FIELD_NUMBER: builtins.int
    @property
    def bindings(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Binding]:
        """Flatten Policy to create a backwacd compatible wire-format. Deprecated. Use 'policy' to specify bindings."""
        pass
    etag: typing.Text = ...
    """Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag."""

    @property
    def policy(self) -> global___Policy:
        """REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them."""
        pass
    def __init__(self,
        *,
        bindings : typing.Optional[typing.Iterable[global___Binding]] = ...,
        etag : typing.Optional[typing.Text] = ...,
        policy : typing.Optional[global___Policy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_policy",b"_policy","etag",b"etag","policy",b"policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_etag",b"_etag","_policy",b"_policy","bindings",b"bindings","etag",b"etag","policy",b"policy"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_etag",b"_etag"]) -> typing.Optional[typing_extensions.Literal["etag"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_policy",b"_policy"]) -> typing.Optional[typing_extensions.Literal["policy"]]: ...
global___ZoneSetPolicyRequest = ZoneSetPolicyRequest
