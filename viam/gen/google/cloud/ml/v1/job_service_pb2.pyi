"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TrainingInput(google.protobuf.message.Message):
    """Represents input parameters for a training job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ScaleTier:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ScaleTierEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ScaleTier.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        BASIC: TrainingInput.ScaleTier.ValueType = ...  # 0
        """A single worker instance. This tier is suitable for learning how to use
        Cloud ML, and for experimenting with new models using small datasets.
        """

        STANDARD_1: TrainingInput.ScaleTier.ValueType = ...  # 1
        """Many workers and a few parameter servers."""

        PREMIUM_1: TrainingInput.ScaleTier.ValueType = ...  # 3
        """A large number of workers with many parameter servers."""

        BASIC_GPU: TrainingInput.ScaleTier.ValueType = ...  # 6
        """A single worker instance [with a GPU](ml/docs/how-tos/using-gpus)."""

        CUSTOM: TrainingInput.ScaleTier.ValueType = ...  # 5
        """The CUSTOM tier is not a set tier, but rather enables you to use your
        own cluster specification. When you use this tier, set values to
        configure your processing cluster according to these guidelines:

        *   You _must_ set `TrainingInput.masterType` to specify the type
            of machine to use for your master node. This is the only required
            setting.

        *   You _may_ set `TrainingInput.workerCount` to specify the number of
            workers to use. If you specify one or more workers, you _must_ also
            set `TrainingInput.workerType` to specify the type of machine to use
            for your worker nodes.

        *   You _may_ set `TrainingInput.parameterServerCount` to specify the
            number of parameter servers to use. If you specify one or more
            parameter servers, you _must_ also set
            `TrainingInput.parameterServerType` to specify the type of machine to
            use for your parameter servers.

        Note that all of your workers must use the same machine type, which can
        be different from your parameter server type and master type. Your
        parameter servers must likewise use the same machine type, which can be
        different from your worker type and master type.
        """

    class ScaleTier(_ScaleTier, metaclass=_ScaleTierEnumTypeWrapper):
        """A scale tier is an abstract representation of the resources Cloud ML
        will allocate to a training job. When selecting a scale tier for your
        training job, you should consider the size of your training dataset and
        the complexity of your model. As the tiers increase, virtual machines are
        added to handle your job, and the individual machines in the cluster
        generally have more memory and greater processing power than they do at
        lower tiers. The number of training units charged per hour of processing
        increases as tiers get more advanced. Refer to the
        [pricing guide](/ml/pricing) for more details. Note that in addition to
        incurring costs, your use of training resources is constrained by the
        [quota policy](/ml/quota).
        """
        pass

    BASIC: TrainingInput.ScaleTier.ValueType = ...  # 0
    """A single worker instance. This tier is suitable for learning how to use
    Cloud ML, and for experimenting with new models using small datasets.
    """

    STANDARD_1: TrainingInput.ScaleTier.ValueType = ...  # 1
    """Many workers and a few parameter servers."""

    PREMIUM_1: TrainingInput.ScaleTier.ValueType = ...  # 3
    """A large number of workers with many parameter servers."""

    BASIC_GPU: TrainingInput.ScaleTier.ValueType = ...  # 6
    """A single worker instance [with a GPU](ml/docs/how-tos/using-gpus)."""

    CUSTOM: TrainingInput.ScaleTier.ValueType = ...  # 5
    """The CUSTOM tier is not a set tier, but rather enables you to use your
    own cluster specification. When you use this tier, set values to
    configure your processing cluster according to these guidelines:

    *   You _must_ set `TrainingInput.masterType` to specify the type
        of machine to use for your master node. This is the only required
        setting.

    *   You _may_ set `TrainingInput.workerCount` to specify the number of
        workers to use. If you specify one or more workers, you _must_ also
        set `TrainingInput.workerType` to specify the type of machine to use
        for your worker nodes.

    *   You _may_ set `TrainingInput.parameterServerCount` to specify the
        number of parameter servers to use. If you specify one or more
        parameter servers, you _must_ also set
        `TrainingInput.parameterServerType` to specify the type of machine to
        use for your parameter servers.

    Note that all of your workers must use the same machine type, which can
    be different from your parameter server type and master type. Your
    parameter servers must likewise use the same machine type, which can be
    different from your worker type and master type.
    """


    SCALE_TIER_FIELD_NUMBER: builtins.int
    MASTER_TYPE_FIELD_NUMBER: builtins.int
    WORKER_TYPE_FIELD_NUMBER: builtins.int
    PARAMETER_SERVER_TYPE_FIELD_NUMBER: builtins.int
    WORKER_COUNT_FIELD_NUMBER: builtins.int
    PARAMETER_SERVER_COUNT_FIELD_NUMBER: builtins.int
    PACKAGE_URIS_FIELD_NUMBER: builtins.int
    PYTHON_MODULE_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    HYPERPARAMETERS_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    JOB_DIR_FIELD_NUMBER: builtins.int
    RUNTIME_VERSION_FIELD_NUMBER: builtins.int
    scale_tier: global___TrainingInput.ScaleTier.ValueType = ...
    """Required. Specifies the machine types, the number of replicas for workers
    and parameter servers.
    """

    master_type: typing.Text = ...
    """Optional. Specifies the type of virtual machine to use for your training
    job's master worker.

    The following types are supported:

    <dl>
      <dt>standard</dt>
      <dd>
      A basic machine configuration suitable for training simple models with
      small to moderate datasets.
      </dd>
      <dt>large_model</dt>
      <dd>
      A machine with a lot of memory, specially suited for parameter servers
      when your model is large (having many hidden layers or layers with very
      large numbers of nodes).
      </dd>
      <dt>complex_model_s</dt>
      <dd>
      A machine suitable for the master and workers of the cluster when your
      model requires more computation than the standard machine can handle
      satisfactorily.
      </dd>
      <dt>complex_model_m</dt>
      <dd>
      A machine with roughly twice the number of cores and roughly double the
      memory of <code suppresswarning="true">complex_model_s</code>.
      </dd>
      <dt>complex_model_l</dt>
      <dd>
      A machine with roughly twice the number of cores and roughly double the
      memory of <code suppresswarning="true">complex_model_m</code>.
      </dd>
      <dt>standard_gpu</dt>
      <dd>
      A machine equivalent to <code suppresswarning="true">standard</code> that
      also includes a
      <a href="ml/docs/how-tos/using-gpus">
      GPU that you can use in your trainer</a>.
      </dd>
      <dt>complex_model_m_gpu</dt>
      <dd>
      A machine equivalent to
      <code suppresswarning="true">coplex_model_m</code> that also includes
      four GPUs.
      </dd>
    </dl>

    You must set this value when `scaleTier` is set to `CUSTOM`.
    """

    worker_type: typing.Text = ...
    """Optional. Specifies the type of virtual machine to use for your training
    job's worker nodes.

    The supported values are the same as those described in the entry for
    `masterType`.

    This value must be present when `scaleTier` is set to `CUSTOM` and
    `workerCount` is greater than zero.
    """

    parameter_server_type: typing.Text = ...
    """Optional. Specifies the type of virtual machine to use for your training
    job's parameter server.

    The supported values are the same as those described in the entry for
    `master_type`.

    This value must be present when `scaleTier` is set to `CUSTOM` and
    `parameter_server_count` is greater than zero.
    """

    worker_count: builtins.int = ...
    """Optional. The number of worker replicas to use for the training job. Each
    replica in the cluster will be of the type specified in `worker_type`.

    This value can only be used when `scale_tier` is set to `CUSTOM`. If you
    set this value, you must also set `worker_type`.
    """

    parameter_server_count: builtins.int = ...
    """Optional. The number of parameter server replicas to use for the training
    job. Each replica in the cluster will be of the type specified in
    `parameter_server_type`.

    This value can only be used when `scale_tier` is set to `CUSTOM`.If you
    set this value, you must also set `parameter_server_type`.
    """

    @property
    def package_uris(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. The Google Cloud Storage location of the packages with
        the training program and any additional dependencies.
        """
        pass
    python_module: typing.Text = ...
    """Required. The Python module name to run after installing the packages."""

    @property
    def args(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Optional. Command line arguments to pass to the program."""
        pass
    @property
    def hyperparameters(self) -> global___HyperparameterSpec:
        """Optional. The set of Hyperparameters to tune."""
        pass
    region: typing.Text = ...
    """Required. The Google Compute Engine region to run the training job in."""

    job_dir: typing.Text = ...
    """Optional. A Google Cloud Storage path in which to store training outputs
    and other data needed for training. This path is passed to your TensorFlow
    program as the 'job_dir' command-line argument. The benefit of specifying
    this field is that Cloud ML validates the path for use in training.
    """

    runtime_version: typing.Text = ...
    """Optional. The Google Cloud ML runtime version to use for training.  If not
    set, Google Cloud ML will choose the latest stable version.
    """

    def __init__(self,
        *,
        scale_tier : global___TrainingInput.ScaleTier.ValueType = ...,
        master_type : typing.Text = ...,
        worker_type : typing.Text = ...,
        parameter_server_type : typing.Text = ...,
        worker_count : builtins.int = ...,
        parameter_server_count : builtins.int = ...,
        package_uris : typing.Optional[typing.Iterable[typing.Text]] = ...,
        python_module : typing.Text = ...,
        args : typing.Optional[typing.Iterable[typing.Text]] = ...,
        hyperparameters : typing.Optional[global___HyperparameterSpec] = ...,
        region : typing.Text = ...,
        job_dir : typing.Text = ...,
        runtime_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hyperparameters",b"hyperparameters"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["args",b"args","hyperparameters",b"hyperparameters","job_dir",b"job_dir","master_type",b"master_type","package_uris",b"package_uris","parameter_server_count",b"parameter_server_count","parameter_server_type",b"parameter_server_type","python_module",b"python_module","region",b"region","runtime_version",b"runtime_version","scale_tier",b"scale_tier","worker_count",b"worker_count","worker_type",b"worker_type"]) -> None: ...
global___TrainingInput = TrainingInput

class HyperparameterSpec(google.protobuf.message.Message):
    """Represents a set of hyperparameters to optimize."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _GoalType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _GoalTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_GoalType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        GOAL_TYPE_UNSPECIFIED: HyperparameterSpec.GoalType.ValueType = ...  # 0
        """Goal Type will default to maximize."""

        MAXIMIZE: HyperparameterSpec.GoalType.ValueType = ...  # 1
        """Maximize the goal metric."""

        MINIMIZE: HyperparameterSpec.GoalType.ValueType = ...  # 2
        """Minimize the goal metric."""

    class GoalType(_GoalType, metaclass=_GoalTypeEnumTypeWrapper):
        """The available types of optimization goals."""
        pass

    GOAL_TYPE_UNSPECIFIED: HyperparameterSpec.GoalType.ValueType = ...  # 0
    """Goal Type will default to maximize."""

    MAXIMIZE: HyperparameterSpec.GoalType.ValueType = ...  # 1
    """Maximize the goal metric."""

    MINIMIZE: HyperparameterSpec.GoalType.ValueType = ...  # 2
    """Minimize the goal metric."""


    GOAL_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    MAX_TRIALS_FIELD_NUMBER: builtins.int
    MAX_PARALLEL_TRIALS_FIELD_NUMBER: builtins.int
    HYPERPARAMETER_METRIC_TAG_FIELD_NUMBER: builtins.int
    goal: global___HyperparameterSpec.GoalType.ValueType = ...
    """Required. The type of goal to use for tuning. Available types are
    `MAXIMIZE` and `MINIMIZE`.

    Defaults to `MAXIMIZE`.
    """

    @property
    def params(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ParameterSpec]:
        """Required. The set of parameters to tune."""
        pass
    max_trials: builtins.int = ...
    """Optional. How many training trials should be attempted to optimize
    the specified hyperparameters.

    Defaults to one.
    """

    max_parallel_trials: builtins.int = ...
    """Optional. The number of training trials to run concurrently.
    You can reduce the time it takes to perform hyperparameter tuning by adding
    trials in parallel. However, each trail only benefits from the information
    gained in completed trials. That means that a trial does not get access to
    the results of trials running at the same time, which could reduce the
    quality of the overall optimization.

    Each trial will use the same scale tier and machine types.

    Defaults to one.
    """

    hyperparameter_metric_tag: typing.Text = ...
    """Optional. The Tensorflow summary tag name to use for optimizing trials. For
    current versions of Tensorflow, this tag name should exactly match what is
    shown in Tensorboard, including all scopes.  For versions of Tensorflow
    prior to 0.12, this should be only the tag passed to tf.Summary.
    By default, "training/hptuning/metric" will be used.
    """

    def __init__(self,
        *,
        goal : global___HyperparameterSpec.GoalType.ValueType = ...,
        params : typing.Optional[typing.Iterable[global___ParameterSpec]] = ...,
        max_trials : builtins.int = ...,
        max_parallel_trials : builtins.int = ...,
        hyperparameter_metric_tag : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["goal",b"goal","hyperparameter_metric_tag",b"hyperparameter_metric_tag","max_parallel_trials",b"max_parallel_trials","max_trials",b"max_trials","params",b"params"]) -> None: ...
global___HyperparameterSpec = HyperparameterSpec

class ParameterSpec(google.protobuf.message.Message):
    """Represents a single hyperparameter to optimize."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ParameterType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ParameterTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ParameterType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        PARAMETER_TYPE_UNSPECIFIED: ParameterSpec.ParameterType.ValueType = ...  # 0
        """You must specify a valid type. Using this unspecified type will result in
        an error.
        """

        DOUBLE: ParameterSpec.ParameterType.ValueType = ...  # 1
        """Type for real-valued parameters."""

        INTEGER: ParameterSpec.ParameterType.ValueType = ...  # 2
        """Type for integral parameters."""

        CATEGORICAL: ParameterSpec.ParameterType.ValueType = ...  # 3
        """The parameter is categorical, with a value chosen from the categories
        field.
        """

        DISCRETE: ParameterSpec.ParameterType.ValueType = ...  # 4
        """The parameter is real valued, with a fixed set of feasible points. If
        `type==DISCRETE`, feasible_points must be provided, and
        {`min_value`, `max_value`} will be ignored.
        """

    class ParameterType(_ParameterType, metaclass=_ParameterTypeEnumTypeWrapper):
        """The type of the parameter."""
        pass

    PARAMETER_TYPE_UNSPECIFIED: ParameterSpec.ParameterType.ValueType = ...  # 0
    """You must specify a valid type. Using this unspecified type will result in
    an error.
    """

    DOUBLE: ParameterSpec.ParameterType.ValueType = ...  # 1
    """Type for real-valued parameters."""

    INTEGER: ParameterSpec.ParameterType.ValueType = ...  # 2
    """Type for integral parameters."""

    CATEGORICAL: ParameterSpec.ParameterType.ValueType = ...  # 3
    """The parameter is categorical, with a value chosen from the categories
    field.
    """

    DISCRETE: ParameterSpec.ParameterType.ValueType = ...  # 4
    """The parameter is real valued, with a fixed set of feasible points. If
    `type==DISCRETE`, feasible_points must be provided, and
    {`min_value`, `max_value`} will be ignored.
    """


    class _ScaleType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ScaleTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ScaleType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        NONE: ParameterSpec.ScaleType.ValueType = ...  # 0
        """By default, no scaling is applied."""

        UNIT_LINEAR_SCALE: ParameterSpec.ScaleType.ValueType = ...  # 1
        """Scales the feasible space to (0, 1) linearly."""

        UNIT_LOG_SCALE: ParameterSpec.ScaleType.ValueType = ...  # 2
        """Scales the feasible space logarithmically to (0, 1). The entire feasible
        space must be strictly positive.
        """

        UNIT_REVERSE_LOG_SCALE: ParameterSpec.ScaleType.ValueType = ...  # 3
        """Scales the feasible space "reverse" logarithmically to (0, 1). The result
        is that values close to the top of the feasible space are spread out more
        than points near the bottom. The entire feasible space must be strictly
        positive.
        """

    class ScaleType(_ScaleType, metaclass=_ScaleTypeEnumTypeWrapper):
        """The type of scaling that should be applied to this parameter."""
        pass

    NONE: ParameterSpec.ScaleType.ValueType = ...  # 0
    """By default, no scaling is applied."""

    UNIT_LINEAR_SCALE: ParameterSpec.ScaleType.ValueType = ...  # 1
    """Scales the feasible space to (0, 1) linearly."""

    UNIT_LOG_SCALE: ParameterSpec.ScaleType.ValueType = ...  # 2
    """Scales the feasible space logarithmically to (0, 1). The entire feasible
    space must be strictly positive.
    """

    UNIT_REVERSE_LOG_SCALE: ParameterSpec.ScaleType.ValueType = ...  # 3
    """Scales the feasible space "reverse" logarithmically to (0, 1). The result
    is that values close to the top of the feasible space are spread out more
    than points near the bottom. The entire feasible space must be strictly
    positive.
    """


    PARAMETER_NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    MIN_VALUE_FIELD_NUMBER: builtins.int
    MAX_VALUE_FIELD_NUMBER: builtins.int
    CATEGORICAL_VALUES_FIELD_NUMBER: builtins.int
    DISCRETE_VALUES_FIELD_NUMBER: builtins.int
    SCALE_TYPE_FIELD_NUMBER: builtins.int
    parameter_name: typing.Text = ...
    """Required. The parameter name must be unique amongst all ParameterConfigs in
    a HyperparameterSpec message. E.g., "learning_rate".
    """

    type: global___ParameterSpec.ParameterType.ValueType = ...
    """Required. The type of the parameter."""

    min_value: builtins.float = ...
    """Required if type is `DOUBLE` or `INTEGER`. This field
    should be unset if type is `CATEGORICAL`. This value should be integers if
    type is INTEGER.
    """

    max_value: builtins.float = ...
    """Required if typeis `DOUBLE` or `INTEGER`. This field
    should be unset if type is `CATEGORICAL`. This value should be integers if
    type is `INTEGER`.
    """

    @property
    def categorical_values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required if type is `CATEGORICAL`. The list of possible categories."""
        pass
    @property
    def discrete_values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Required if type is `DISCRETE`.
        A list of feasible points.
        The list should be in strictly increasing order. For instance, this
        parameter might have possible settings of 1.5, 2.5, and 4.0. This list
        should not contain more than 1,000 values.
        """
        pass
    scale_type: global___ParameterSpec.ScaleType.ValueType = ...
    """Optional. How the parameter should be scaled to the hypercube.
    Leave unset for categorical parameters.
    Some kind of scaling is strongly recommended for real or integral
    parameters (e.g., `UNIT_LINEAR_SCALE`).
    """

    def __init__(self,
        *,
        parameter_name : typing.Text = ...,
        type : global___ParameterSpec.ParameterType.ValueType = ...,
        min_value : builtins.float = ...,
        max_value : builtins.float = ...,
        categorical_values : typing.Optional[typing.Iterable[typing.Text]] = ...,
        discrete_values : typing.Optional[typing.Iterable[builtins.float]] = ...,
        scale_type : global___ParameterSpec.ScaleType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["categorical_values",b"categorical_values","discrete_values",b"discrete_values","max_value",b"max_value","min_value",b"min_value","parameter_name",b"parameter_name","scale_type",b"scale_type","type",b"type"]) -> None: ...
global___ParameterSpec = ParameterSpec

class HyperparameterOutput(google.protobuf.message.Message):
    """Represents the result of a single hyperparameter tuning trial from a
    training job. The TrainingOutput object that is returned on successful
    completion of a training job with hyperparameter tuning includes a list
    of HyperparameterOutput objects, one for each successful trial.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class HyperparameterMetric(google.protobuf.message.Message):
        """An observed value of a metric."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        TRAINING_STEP_FIELD_NUMBER: builtins.int
        OBJECTIVE_VALUE_FIELD_NUMBER: builtins.int
        training_step: builtins.int = ...
        """The global training step for this metric."""

        objective_value: builtins.float = ...
        """The objective value at this training step."""

        def __init__(self,
            *,
            training_step : builtins.int = ...,
            objective_value : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["objective_value",b"objective_value","training_step",b"training_step"]) -> None: ...

    class HyperparametersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TRIAL_ID_FIELD_NUMBER: builtins.int
    HYPERPARAMETERS_FIELD_NUMBER: builtins.int
    FINAL_METRIC_FIELD_NUMBER: builtins.int
    ALL_METRICS_FIELD_NUMBER: builtins.int
    trial_id: typing.Text = ...
    """The trial id for these results."""

    @property
    def hyperparameters(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """The hyperparameters given to this trial."""
        pass
    @property
    def final_metric(self) -> global___HyperparameterOutput.HyperparameterMetric:
        """The final objective metric seen for this trial."""
        pass
    @property
    def all_metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HyperparameterOutput.HyperparameterMetric]:
        """All recorded object metrics for this trial."""
        pass
    def __init__(self,
        *,
        trial_id : typing.Text = ...,
        hyperparameters : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        final_metric : typing.Optional[global___HyperparameterOutput.HyperparameterMetric] = ...,
        all_metrics : typing.Optional[typing.Iterable[global___HyperparameterOutput.HyperparameterMetric]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["final_metric",b"final_metric"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["all_metrics",b"all_metrics","final_metric",b"final_metric","hyperparameters",b"hyperparameters","trial_id",b"trial_id"]) -> None: ...
global___HyperparameterOutput = HyperparameterOutput

class TrainingOutput(google.protobuf.message.Message):
    """Represents results of a training job. Output only."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMPLETED_TRIAL_COUNT_FIELD_NUMBER: builtins.int
    TRIALS_FIELD_NUMBER: builtins.int
    CONSUMED_ML_UNITS_FIELD_NUMBER: builtins.int
    IS_HYPERPARAMETER_TUNING_JOB_FIELD_NUMBER: builtins.int
    completed_trial_count: builtins.int = ...
    """The number of hyperparameter tuning trials that completed successfully.
    Only set for hyperparameter tuning jobs.
    """

    @property
    def trials(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HyperparameterOutput]:
        """Results for individual Hyperparameter trials.
        Only set for hyperparameter tuning jobs.
        """
        pass
    consumed_ml_units: builtins.float = ...
    """The amount of ML units consumed by the job."""

    is_hyperparameter_tuning_job: builtins.bool = ...
    """Whether this job is a hyperparameter tuning job."""

    def __init__(self,
        *,
        completed_trial_count : builtins.int = ...,
        trials : typing.Optional[typing.Iterable[global___HyperparameterOutput]] = ...,
        consumed_ml_units : builtins.float = ...,
        is_hyperparameter_tuning_job : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["completed_trial_count",b"completed_trial_count","consumed_ml_units",b"consumed_ml_units","is_hyperparameter_tuning_job",b"is_hyperparameter_tuning_job","trials",b"trials"]) -> None: ...
global___TrainingOutput = TrainingOutput

class PredictionInput(google.protobuf.message.Message):
    """Represents input parameters for a prediction job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _DataFormat:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _DataFormatEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DataFormat.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DATA_FORMAT_UNSPECIFIED: PredictionInput.DataFormat.ValueType = ...  # 0
        """Unspecified format."""

        TEXT: PredictionInput.DataFormat.ValueType = ...  # 1
        """The source file is a text file with instances separated by the
        new-line character.
        """

        TF_RECORD: PredictionInput.DataFormat.ValueType = ...  # 2
        """The source file is a TFRecord file."""

        TF_RECORD_GZIP: PredictionInput.DataFormat.ValueType = ...  # 3
        """The source file is a GZIP-compressed TFRecord file."""

    class DataFormat(_DataFormat, metaclass=_DataFormatEnumTypeWrapper):
        """The format used to separate data instances in the source files."""
        pass

    DATA_FORMAT_UNSPECIFIED: PredictionInput.DataFormat.ValueType = ...  # 0
    """Unspecified format."""

    TEXT: PredictionInput.DataFormat.ValueType = ...  # 1
    """The source file is a text file with instances separated by the
    new-line character.
    """

    TF_RECORD: PredictionInput.DataFormat.ValueType = ...  # 2
    """The source file is a TFRecord file."""

    TF_RECORD_GZIP: PredictionInput.DataFormat.ValueType = ...  # 3
    """The source file is a GZIP-compressed TFRecord file."""


    MODEL_NAME_FIELD_NUMBER: builtins.int
    VERSION_NAME_FIELD_NUMBER: builtins.int
    URI_FIELD_NUMBER: builtins.int
    DATA_FORMAT_FIELD_NUMBER: builtins.int
    INPUT_PATHS_FIELD_NUMBER: builtins.int
    OUTPUT_PATH_FIELD_NUMBER: builtins.int
    MAX_WORKER_COUNT_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RUNTIME_VERSION_FIELD_NUMBER: builtins.int
    model_name: typing.Text = ...
    """Use this field if you want to use the default version for the specified
    model. The string must use the following format:

    `"projects/<var>[YOUR_PROJECT]</var>/models/<var>[YOUR_MODEL]</var>"`
    """

    version_name: typing.Text = ...
    """Use this field if you want to specify a version of the model to use. The
    string is formatted the same way as `model_version`, with the addition
    of the version information:

    `"projects/<var>[YOUR_PROJECT]</var>/models/<var>YOUR_MODEL/versions/<var>[YOUR_VERSION]</var>"`
    """

    uri: typing.Text = ...
    """Use this field if you want to specify a Google Cloud Storage path for
    the model to use.
    """

    data_format: global___PredictionInput.DataFormat.ValueType = ...
    """Required. The format of the input data files."""

    @property
    def input_paths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Required. The Google Cloud Storage location of the input data files.
        May contain wildcards.
        """
        pass
    output_path: typing.Text = ...
    """Required. The output Google Cloud Storage location."""

    max_worker_count: builtins.int = ...
    """Optional. The maximum number of workers to be used for parallel processing.
    Defaults to 10 if not specified.
    """

    region: typing.Text = ...
    """Required. The Google Compute Engine region to run the prediction job in."""

    runtime_version: typing.Text = ...
    """Optional. The Google Cloud ML runtime version to use for this batch
    prediction. If not set, Google Cloud ML will pick the runtime version used
    during the CreateVersion request for this model version, or choose the
    latest stable version when model version information is not available
    such as when the model is specified by uri.
    """

    def __init__(self,
        *,
        model_name : typing.Text = ...,
        version_name : typing.Text = ...,
        uri : typing.Text = ...,
        data_format : global___PredictionInput.DataFormat.ValueType = ...,
        input_paths : typing.Optional[typing.Iterable[typing.Text]] = ...,
        output_path : typing.Text = ...,
        max_worker_count : builtins.int = ...,
        region : typing.Text = ...,
        runtime_version : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model_name",b"model_name","model_version",b"model_version","uri",b"uri","version_name",b"version_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_format",b"data_format","input_paths",b"input_paths","max_worker_count",b"max_worker_count","model_name",b"model_name","model_version",b"model_version","output_path",b"output_path","region",b"region","runtime_version",b"runtime_version","uri",b"uri","version_name",b"version_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["model_version",b"model_version"]) -> typing.Optional[typing_extensions.Literal["model_name","version_name","uri"]]: ...
global___PredictionInput = PredictionInput

class PredictionOutput(google.protobuf.message.Message):
    """Represents results of a prediction job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OUTPUT_PATH_FIELD_NUMBER: builtins.int
    PREDICTION_COUNT_FIELD_NUMBER: builtins.int
    ERROR_COUNT_FIELD_NUMBER: builtins.int
    NODE_HOURS_FIELD_NUMBER: builtins.int
    output_path: typing.Text = ...
    """The output Google Cloud Storage location provided at the job creation time."""

    prediction_count: builtins.int = ...
    """The number of generated predictions."""

    error_count: builtins.int = ...
    """The number of data instances which resulted in errors."""

    node_hours: builtins.float = ...
    """Node hours used by the batch prediction job."""

    def __init__(self,
        *,
        output_path : typing.Text = ...,
        prediction_count : builtins.int = ...,
        error_count : builtins.int = ...,
        node_hours : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["error_count",b"error_count","node_hours",b"node_hours","output_path",b"output_path","prediction_count",b"prediction_count"]) -> None: ...
global___PredictionOutput = PredictionOutput

class Job(google.protobuf.message.Message):
    """Represents a training or prediction job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _State:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        STATE_UNSPECIFIED: Job.State.ValueType = ...  # 0
        """The job state is unspecified."""

        QUEUED: Job.State.ValueType = ...  # 1
        """The job has been just created and processing has not yet begun."""

        PREPARING: Job.State.ValueType = ...  # 2
        """The service is preparing to run the job."""

        RUNNING: Job.State.ValueType = ...  # 3
        """The job is in progress."""

        SUCCEEDED: Job.State.ValueType = ...  # 4
        """The job completed successfully."""

        FAILED: Job.State.ValueType = ...  # 5
        """The job failed.
        `error_message` should contain the details of the failure.
        """

        CANCELLING: Job.State.ValueType = ...  # 6
        """The job is being cancelled.
        `error_message` should describe the reason for the cancellation.
        """

        CANCELLED: Job.State.ValueType = ...  # 7
        """The job has been cancelled.
        `error_message` should describe the reason for the cancellation.
        """

    class State(_State, metaclass=_StateEnumTypeWrapper):
        """Describes the job state."""
        pass

    STATE_UNSPECIFIED: Job.State.ValueType = ...  # 0
    """The job state is unspecified."""

    QUEUED: Job.State.ValueType = ...  # 1
    """The job has been just created and processing has not yet begun."""

    PREPARING: Job.State.ValueType = ...  # 2
    """The service is preparing to run the job."""

    RUNNING: Job.State.ValueType = ...  # 3
    """The job is in progress."""

    SUCCEEDED: Job.State.ValueType = ...  # 4
    """The job completed successfully."""

    FAILED: Job.State.ValueType = ...  # 5
    """The job failed.
    `error_message` should contain the details of the failure.
    """

    CANCELLING: Job.State.ValueType = ...  # 6
    """The job is being cancelled.
    `error_message` should describe the reason for the cancellation.
    """

    CANCELLED: Job.State.ValueType = ...  # 7
    """The job has been cancelled.
    `error_message` should describe the reason for the cancellation.
    """


    JOB_ID_FIELD_NUMBER: builtins.int
    TRAINING_INPUT_FIELD_NUMBER: builtins.int
    PREDICTION_INPUT_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    STATE_FIELD_NUMBER: builtins.int
    ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    TRAINING_OUTPUT_FIELD_NUMBER: builtins.int
    PREDICTION_OUTPUT_FIELD_NUMBER: builtins.int
    job_id: typing.Text = ...
    """Required. The user-specified id of the job."""

    @property
    def training_input(self) -> global___TrainingInput:
        """Input parameters to create a training job."""
        pass
    @property
    def prediction_input(self) -> global___PredictionInput:
        """Input parameters to create a prediction job."""
        pass
    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. When the job was created."""
        pass
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. When the job processing was started."""
        pass
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. When the job processing was completed."""
        pass
    state: global___Job.State.ValueType = ...
    """Output only. The detailed state of a job."""

    error_message: typing.Text = ...
    """Output only. The details of a failure or a cancellation."""

    @property
    def training_output(self) -> global___TrainingOutput:
        """The current training job result."""
        pass
    @property
    def prediction_output(self) -> global___PredictionOutput:
        """The current prediction job result."""
        pass
    def __init__(self,
        *,
        job_id : typing.Text = ...,
        training_input : typing.Optional[global___TrainingInput] = ...,
        prediction_input : typing.Optional[global___PredictionInput] = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        start_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        state : global___Job.State.ValueType = ...,
        error_message : typing.Text = ...,
        training_output : typing.Optional[global___TrainingOutput] = ...,
        prediction_output : typing.Optional[global___PredictionOutput] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","input",b"input","output",b"output","prediction_input",b"prediction_input","prediction_output",b"prediction_output","start_time",b"start_time","training_input",b"training_input","training_output",b"training_output"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","end_time",b"end_time","error_message",b"error_message","input",b"input","job_id",b"job_id","output",b"output","prediction_input",b"prediction_input","prediction_output",b"prediction_output","start_time",b"start_time","state",b"state","training_input",b"training_input","training_output",b"training_output"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["input",b"input"]) -> typing.Optional[typing_extensions.Literal["training_input","prediction_input"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["output",b"output"]) -> typing.Optional[typing_extensions.Literal["training_output","prediction_output"]]: ...
global___Job = Job

class CreateJobRequest(google.protobuf.message.Message):
    """Request message for the CreateJob method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    JOB_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The project name.

    Authorization: requires `Editor` role on the specified project.
    """

    @property
    def job(self) -> global___Job:
        """Required. The job to create."""
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        job : typing.Optional[global___Job] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["job",b"job"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["job",b"job","parent",b"parent"]) -> None: ...
global___CreateJobRequest = CreateJobRequest

class ListJobsRequest(google.protobuf.message.Message):
    """Request message for the ListJobs method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The name of the project for which to list jobs.

    Authorization: requires `Viewer` role on the specified project.
    """

    filter: typing.Text = ...
    """Optional. Specifies the subset of jobs to retrieve."""

    page_token: typing.Text = ...
    """Optional. A page token to request the next page of results.

    You get the token from the `next_page_token` field of the response from
    the previous call.
    """

    page_size: builtins.int = ...
    """Optional. The number of jobs to retrieve per "page" of results. If there
    are more remaining results than this number, the response message will
    contain a valid value in the `next_page_token` field.

    The default value is 20, and the maximum page size is 100.
    """

    def __init__(self,
        *,
        parent : typing.Text = ...,
        filter : typing.Text = ...,
        page_token : typing.Text = ...,
        page_size : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter",b"filter","page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListJobsRequest = ListJobsRequest

class ListJobsResponse(google.protobuf.message.Message):
    """Response message for the ListJobs method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    JOBS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def jobs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Job]:
        """The list of jobs."""
        pass
    next_page_token: typing.Text = ...
    """Optional. Pass this token as the `page_token` field of the request for a
    subsequent call.
    """

    def __init__(self,
        *,
        jobs : typing.Optional[typing.Iterable[global___Job]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["jobs",b"jobs","next_page_token",b"next_page_token"]) -> None: ...
global___ListJobsResponse = ListJobsResponse

class GetJobRequest(google.protobuf.message.Message):
    """Request message for the GetJob method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the job to get the description of.

    Authorization: requires `Viewer` role on the parent project.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetJobRequest = GetJobRequest

class CancelJobRequest(google.protobuf.message.Message):
    """Request message for the CancelJob method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The name of the job to cancel.

    Authorization: requires `Editor` role on the parent project.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___CancelJobRequest = CancelJobRequest
