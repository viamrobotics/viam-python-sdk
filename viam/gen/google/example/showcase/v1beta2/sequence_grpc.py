# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/example/showcase/v1beta2/sequence.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.client_pb2
import google.api.field_behavior_pb2
import google.api.resource_pb2
import google.protobuf.duration_pb2
import google.protobuf.empty_pb2
import google.protobuf.timestamp_pb2
import google.rpc.status_pb2
import google.example.showcase.v1beta2.sequence_pb2


class SequenceServiceBase(abc.ABC):

    @abc.abstractmethod
    async def CreateSequence(self, stream: 'grpclib.server.Stream[google.example.showcase.v1beta2.sequence_pb2.CreateSequenceRequest, google.example.showcase.v1beta2.sequence_pb2.Sequence]') -> None:
        pass

    @abc.abstractmethod
    async def GetSequenceReport(self, stream: 'grpclib.server.Stream[google.example.showcase.v1beta2.sequence_pb2.GetSequenceReportRequest, google.example.showcase.v1beta2.sequence_pb2.SequenceReport]') -> None:
        pass

    @abc.abstractmethod
    async def AttemptSequence(self, stream: 'grpclib.server.Stream[google.example.showcase.v1beta2.sequence_pb2.AttemptSequenceRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.example.showcase.v1beta2.SequenceService/CreateSequence': grpclib.const.Handler(
                self.CreateSequence,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.example.showcase.v1beta2.sequence_pb2.CreateSequenceRequest,
                google.example.showcase.v1beta2.sequence_pb2.Sequence,
            ),
            '/google.example.showcase.v1beta2.SequenceService/GetSequenceReport': grpclib.const.Handler(
                self.GetSequenceReport,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.example.showcase.v1beta2.sequence_pb2.GetSequenceReportRequest,
                google.example.showcase.v1beta2.sequence_pb2.SequenceReport,
            ),
            '/google.example.showcase.v1beta2.SequenceService/AttemptSequence': grpclib.const.Handler(
                self.AttemptSequence,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.example.showcase.v1beta2.sequence_pb2.AttemptSequenceRequest,
                google.protobuf.empty_pb2.Empty,
            ),
        }


class SequenceServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateSequence = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.example.showcase.v1beta2.SequenceService/CreateSequence',
            google.example.showcase.v1beta2.sequence_pb2.CreateSequenceRequest,
            google.example.showcase.v1beta2.sequence_pb2.Sequence,
        )
        self.GetSequenceReport = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.example.showcase.v1beta2.SequenceService/GetSequenceReport',
            google.example.showcase.v1beta2.sequence_pb2.GetSequenceReportRequest,
            google.example.showcase.v1beta2.sequence_pb2.SequenceReport,
        )
        self.AttemptSequence = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.example.showcase.v1beta2.SequenceService/AttemptSequence',
            google.example.showcase.v1beta2.sequence_pb2.AttemptSequenceRequest,
            google.protobuf.empty_pb2.Empty,
        )
