"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.bigtable.admin.v2.instance_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CreateInstanceRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.CreateInstance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ClustersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> google.bigtable.admin.v2.instance_pb2.Cluster: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[google.bigtable.admin.v2.instance_pb2.Cluster] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PARENT_FIELD_NUMBER: builtins.int
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    CLUSTERS_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The unique name of the project in which to create the new instance.
    Values are of the form `projects/{project}`.
    """

    instance_id: typing.Text = ...
    """Required. The ID to be used when referring to the new instance within its project,
    e.g., just `myinstance` rather than
    `projects/myproject/instances/myinstance`.
    """

    @property
    def instance(self) -> google.bigtable.admin.v2.instance_pb2.Instance:
        """Required. The instance to create.
        Fields marked `OutputOnly` must be left blank.
        """
        pass
    @property
    def clusters(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, google.bigtable.admin.v2.instance_pb2.Cluster]:
        """Required. The clusters to be created within the instance, mapped by desired
        cluster ID, e.g., just `mycluster` rather than
        `projects/myproject/instances/myinstance/clusters/mycluster`.
        Fields marked `OutputOnly` must be left blank.
        Currently, at most four clusters can be specified.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        instance_id : typing.Text = ...,
        instance : typing.Optional[google.bigtable.admin.v2.instance_pb2.Instance] = ...,
        clusters : typing.Optional[typing.Mapping[typing.Text, google.bigtable.admin.v2.instance_pb2.Cluster]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["instance",b"instance"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["clusters",b"clusters","instance",b"instance","instance_id",b"instance_id","parent",b"parent"]) -> None: ...
global___CreateInstanceRequest = CreateInstanceRequest

class GetInstanceRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.GetInstance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The unique name of the requested instance. Values are of the form
    `projects/{project}/instances/{instance}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetInstanceRequest = GetInstanceRequest

class ListInstancesRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.ListInstances."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The unique name of the project for which a list of instances is requested.
    Values are of the form `projects/{project}`.
    """

    page_token: typing.Text = ...
    """DEPRECATED: This field is unused and ignored."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListInstancesRequest = ListInstancesRequest

class ListInstancesResponse(google.protobuf.message.Message):
    """Response message for BigtableInstanceAdmin.ListInstances."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCES_FIELD_NUMBER: builtins.int
    FAILED_LOCATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def instances(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.bigtable.admin.v2.instance_pb2.Instance]:
        """The list of requested instances."""
        pass
    @property
    def failed_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations from which Instance information could not be retrieved,
        due to an outage or some other transient condition.
        Instances whose Clusters are all in one of the failed locations
        may be missing from `instances`, and Instances with at least one
        Cluster in a failed location may only have partial information returned.
        Values are of the form `projects/<project>/locations/<zone_id>`
        """
        pass
    next_page_token: typing.Text = ...
    """DEPRECATED: This field is unused and ignored."""

    def __init__(self,
        *,
        instances : typing.Optional[typing.Iterable[google.bigtable.admin.v2.instance_pb2.Instance]] = ...,
        failed_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["failed_locations",b"failed_locations","instances",b"instances","next_page_token",b"next_page_token"]) -> None: ...
global___ListInstancesResponse = ListInstancesResponse

class PartialUpdateInstanceRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.PartialUpdateInstance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INSTANCE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def instance(self) -> google.bigtable.admin.v2.instance_pb2.Instance:
        """Required. The Instance which will (partially) replace the current value."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The subset of Instance fields which should be replaced.
        Must be explicitly set.
        """
        pass
    def __init__(self,
        *,
        instance : typing.Optional[google.bigtable.admin.v2.instance_pb2.Instance] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["instance",b"instance","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["instance",b"instance","update_mask",b"update_mask"]) -> None: ...
global___PartialUpdateInstanceRequest = PartialUpdateInstanceRequest

class DeleteInstanceRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.DeleteInstance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The unique name of the instance to be deleted.
    Values are of the form `projects/{project}/instances/{instance}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteInstanceRequest = DeleteInstanceRequest

class CreateClusterRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.CreateCluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    CLUSTER_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The unique name of the instance in which to create the new cluster.
    Values are of the form
    `projects/{project}/instances/{instance}`.
    """

    cluster_id: typing.Text = ...
    """Required. The ID to be used when referring to the new cluster within its instance,
    e.g., just `mycluster` rather than
    `projects/myproject/instances/myinstance/clusters/mycluster`.
    """

    @property
    def cluster(self) -> google.bigtable.admin.v2.instance_pb2.Cluster:
        """Required. The cluster to be created.
        Fields marked `OutputOnly` must be left blank.
        """
        pass
    def __init__(self,
        *,
        parent : typing.Text = ...,
        cluster_id : typing.Text = ...,
        cluster : typing.Optional[google.bigtable.admin.v2.instance_pb2.Cluster] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cluster",b"cluster"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster",b"cluster","cluster_id",b"cluster_id","parent",b"parent"]) -> None: ...
global___CreateClusterRequest = CreateClusterRequest

class GetClusterRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.GetCluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The unique name of the requested cluster. Values are of the form
    `projects/{project}/instances/{instance}/clusters/{cluster}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetClusterRequest = GetClusterRequest

class ListClustersRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.ListClusters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The unique name of the instance for which a list of clusters is requested.
    Values are of the form `projects/{project}/instances/{instance}`.
    Use `{instance} = '-'` to list Clusters for all Instances in a project,
    e.g., `projects/myproject/instances/-`.
    """

    page_token: typing.Text = ...
    """DEPRECATED: This field is unused and ignored."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListClustersRequest = ListClustersRequest

class ListClustersResponse(google.protobuf.message.Message):
    """Response message for BigtableInstanceAdmin.ListClusters."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLUSTERS_FIELD_NUMBER: builtins.int
    FAILED_LOCATIONS_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def clusters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.bigtable.admin.v2.instance_pb2.Cluster]:
        """The list of requested clusters."""
        pass
    @property
    def failed_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations from which Cluster information could not be retrieved,
        due to an outage or some other transient condition.
        Clusters from these locations may be missing from `clusters`,
        or may only have partial information returned.
        Values are of the form `projects/<project>/locations/<zone_id>`
        """
        pass
    next_page_token: typing.Text = ...
    """DEPRECATED: This field is unused and ignored."""

    def __init__(self,
        *,
        clusters : typing.Optional[typing.Iterable[google.bigtable.admin.v2.instance_pb2.Cluster]] = ...,
        failed_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        next_page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["clusters",b"clusters","failed_locations",b"failed_locations","next_page_token",b"next_page_token"]) -> None: ...
global___ListClustersResponse = ListClustersResponse

class DeleteClusterRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.DeleteCluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The unique name of the cluster to be deleted. Values are of the form
    `projects/{project}/instances/{instance}/clusters/{cluster}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___DeleteClusterRequest = DeleteClusterRequest

class CreateInstanceMetadata(google.protobuf.message.Message):
    """The metadata for the Operation returned by CreateInstance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ORIGINAL_REQUEST_FIELD_NUMBER: builtins.int
    REQUEST_TIME_FIELD_NUMBER: builtins.int
    FINISH_TIME_FIELD_NUMBER: builtins.int
    @property
    def original_request(self) -> global___CreateInstanceRequest:
        """The request that prompted the initiation of this CreateInstance operation."""
        pass
    @property
    def request_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the original request was received."""
        pass
    @property
    def finish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the operation failed or was completed successfully."""
        pass
    def __init__(self,
        *,
        original_request : typing.Optional[global___CreateInstanceRequest] = ...,
        request_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        finish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["finish_time",b"finish_time","original_request",b"original_request","request_time",b"request_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["finish_time",b"finish_time","original_request",b"original_request","request_time",b"request_time"]) -> None: ...
global___CreateInstanceMetadata = CreateInstanceMetadata

class UpdateInstanceMetadata(google.protobuf.message.Message):
    """The metadata for the Operation returned by UpdateInstance."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ORIGINAL_REQUEST_FIELD_NUMBER: builtins.int
    REQUEST_TIME_FIELD_NUMBER: builtins.int
    FINISH_TIME_FIELD_NUMBER: builtins.int
    @property
    def original_request(self) -> global___PartialUpdateInstanceRequest:
        """The request that prompted the initiation of this UpdateInstance operation."""
        pass
    @property
    def request_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the original request was received."""
        pass
    @property
    def finish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the operation failed or was completed successfully."""
        pass
    def __init__(self,
        *,
        original_request : typing.Optional[global___PartialUpdateInstanceRequest] = ...,
        request_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        finish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["finish_time",b"finish_time","original_request",b"original_request","request_time",b"request_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["finish_time",b"finish_time","original_request",b"original_request","request_time",b"request_time"]) -> None: ...
global___UpdateInstanceMetadata = UpdateInstanceMetadata

class CreateClusterMetadata(google.protobuf.message.Message):
    """The metadata for the Operation returned by CreateCluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ORIGINAL_REQUEST_FIELD_NUMBER: builtins.int
    REQUEST_TIME_FIELD_NUMBER: builtins.int
    FINISH_TIME_FIELD_NUMBER: builtins.int
    @property
    def original_request(self) -> global___CreateClusterRequest:
        """The request that prompted the initiation of this CreateCluster operation."""
        pass
    @property
    def request_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the original request was received."""
        pass
    @property
    def finish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the operation failed or was completed successfully."""
        pass
    def __init__(self,
        *,
        original_request : typing.Optional[global___CreateClusterRequest] = ...,
        request_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        finish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["finish_time",b"finish_time","original_request",b"original_request","request_time",b"request_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["finish_time",b"finish_time","original_request",b"original_request","request_time",b"request_time"]) -> None: ...
global___CreateClusterMetadata = CreateClusterMetadata

class UpdateClusterMetadata(google.protobuf.message.Message):
    """The metadata for the Operation returned by UpdateCluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ORIGINAL_REQUEST_FIELD_NUMBER: builtins.int
    REQUEST_TIME_FIELD_NUMBER: builtins.int
    FINISH_TIME_FIELD_NUMBER: builtins.int
    @property
    def original_request(self) -> google.bigtable.admin.v2.instance_pb2.Cluster:
        """The request that prompted the initiation of this UpdateCluster operation."""
        pass
    @property
    def request_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the original request was received."""
        pass
    @property
    def finish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the operation failed or was completed successfully."""
        pass
    def __init__(self,
        *,
        original_request : typing.Optional[google.bigtable.admin.v2.instance_pb2.Cluster] = ...,
        request_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        finish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["finish_time",b"finish_time","original_request",b"original_request","request_time",b"request_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["finish_time",b"finish_time","original_request",b"original_request","request_time",b"request_time"]) -> None: ...
global___UpdateClusterMetadata = UpdateClusterMetadata

class PartialUpdateClusterMetadata(google.protobuf.message.Message):
    """The metadata for the Operation returned by PartialUpdateCluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_TIME_FIELD_NUMBER: builtins.int
    FINISH_TIME_FIELD_NUMBER: builtins.int
    ORIGINAL_REQUEST_FIELD_NUMBER: builtins.int
    @property
    def request_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the original request was received."""
        pass
    @property
    def finish_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """The time at which the operation failed or was completed successfully."""
        pass
    @property
    def original_request(self) -> global___PartialUpdateClusterRequest:
        """The original request for PartialUpdateCluster."""
        pass
    def __init__(self,
        *,
        request_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        finish_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        original_request : typing.Optional[global___PartialUpdateClusterRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["finish_time",b"finish_time","original_request",b"original_request","request_time",b"request_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["finish_time",b"finish_time","original_request",b"original_request","request_time",b"request_time"]) -> None: ...
global___PartialUpdateClusterMetadata = PartialUpdateClusterMetadata

class PartialUpdateClusterRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.PartialUpdateCluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CLUSTER_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    @property
    def cluster(self) -> google.bigtable.admin.v2.instance_pb2.Cluster:
        """Required. The Cluster which contains the partial updates to be applied, subject to
        the update_mask.
        """
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The subset of Cluster fields which should be replaced."""
        pass
    def __init__(self,
        *,
        cluster : typing.Optional[google.bigtable.admin.v2.instance_pb2.Cluster] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cluster",b"cluster","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster",b"cluster","update_mask",b"update_mask"]) -> None: ...
global___PartialUpdateClusterRequest = PartialUpdateClusterRequest

class CreateAppProfileRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.CreateAppProfile."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    APP_PROFILE_ID_FIELD_NUMBER: builtins.int
    APP_PROFILE_FIELD_NUMBER: builtins.int
    IGNORE_WARNINGS_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The unique name of the instance in which to create the new app profile.
    Values are of the form
    `projects/{project}/instances/{instance}`.
    """

    app_profile_id: typing.Text = ...
    """Required. The ID to be used when referring to the new app profile within its
    instance, e.g., just `myprofile` rather than
    `projects/myproject/instances/myinstance/appProfiles/myprofile`.
    """

    @property
    def app_profile(self) -> google.bigtable.admin.v2.instance_pb2.AppProfile:
        """Required. The app profile to be created.
        Fields marked `OutputOnly` will be ignored.
        """
        pass
    ignore_warnings: builtins.bool = ...
    """If true, ignore safety checks when creating the app profile."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        app_profile_id : typing.Text = ...,
        app_profile : typing.Optional[google.bigtable.admin.v2.instance_pb2.AppProfile] = ...,
        ignore_warnings : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app_profile",b"app_profile"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_profile",b"app_profile","app_profile_id",b"app_profile_id","ignore_warnings",b"ignore_warnings","parent",b"parent"]) -> None: ...
global___CreateAppProfileRequest = CreateAppProfileRequest

class GetAppProfileRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.GetAppProfile."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The unique name of the requested app profile. Values are of the form
    `projects/{project}/instances/{instance}/appProfiles/{app_profile}`.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name"]) -> None: ...
global___GetAppProfileRequest = GetAppProfileRequest

class ListAppProfilesRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.ListAppProfiles."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    parent: typing.Text = ...
    """Required. The unique name of the instance for which a list of app profiles is
    requested. Values are of the form
    `projects/{project}/instances/{instance}`.
    Use `{instance} = '-'` to list AppProfiles for all Instances in a project,
    e.g., `projects/myproject/instances/-`.
    """

    page_size: builtins.int = ...
    """Maximum number of results per page.

    A page_size of zero lets the server choose the number of items to return.
    A page_size which is strictly positive will return at most that many items.
    A negative page_size will cause an error.

    Following the first request, subsequent paginated calls are not required
    to pass a page_size. If a page_size is set in subsequent calls, it must
    match the page_size given in the first request.
    """

    page_token: typing.Text = ...
    """The value of `next_page_token` returned by a previous call."""

    def __init__(self,
        *,
        parent : typing.Text = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["page_size",b"page_size","page_token",b"page_token","parent",b"parent"]) -> None: ...
global___ListAppProfilesRequest = ListAppProfilesRequest

class ListAppProfilesResponse(google.protobuf.message.Message):
    """Response message for BigtableInstanceAdmin.ListAppProfiles."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    APP_PROFILES_FIELD_NUMBER: builtins.int
    NEXT_PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FAILED_LOCATIONS_FIELD_NUMBER: builtins.int
    @property
    def app_profiles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.bigtable.admin.v2.instance_pb2.AppProfile]:
        """The list of requested app profiles."""
        pass
    next_page_token: typing.Text = ...
    """Set if not all app profiles could be returned in a single response.
    Pass this value to `page_token` in another request to get the next
    page of results.
    """

    @property
    def failed_locations(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Locations from which AppProfile information could not be retrieved,
        due to an outage or some other transient condition.
        AppProfiles from these locations may be missing from `app_profiles`.
        Values are of the form `projects/<project>/locations/<zone_id>`
        """
        pass
    def __init__(self,
        *,
        app_profiles : typing.Optional[typing.Iterable[google.bigtable.admin.v2.instance_pb2.AppProfile]] = ...,
        next_page_token : typing.Text = ...,
        failed_locations : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_profiles",b"app_profiles","failed_locations",b"failed_locations","next_page_token",b"next_page_token"]) -> None: ...
global___ListAppProfilesResponse = ListAppProfilesResponse

class UpdateAppProfileRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.UpdateAppProfile."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    APP_PROFILE_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    IGNORE_WARNINGS_FIELD_NUMBER: builtins.int
    @property
    def app_profile(self) -> google.bigtable.admin.v2.instance_pb2.AppProfile:
        """Required. The app profile which will (partially) replace the current value."""
        pass
    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """Required. The subset of app profile fields which should be replaced.
        If unset, all fields will be replaced.
        """
        pass
    ignore_warnings: builtins.bool = ...
    """If true, ignore safety checks when updating the app profile."""

    def __init__(self,
        *,
        app_profile : typing.Optional[google.bigtable.admin.v2.instance_pb2.AppProfile] = ...,
        update_mask : typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ignore_warnings : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["app_profile",b"app_profile","update_mask",b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_profile",b"app_profile","ignore_warnings",b"ignore_warnings","update_mask",b"update_mask"]) -> None: ...
global___UpdateAppProfileRequest = UpdateAppProfileRequest

class DeleteAppProfileRequest(google.protobuf.message.Message):
    """Request message for BigtableInstanceAdmin.DeleteAppProfile."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    IGNORE_WARNINGS_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Required. The unique name of the app profile to be deleted. Values are of the form
    `projects/{project}/instances/{instance}/appProfiles/{app_profile}`.
    """

    ignore_warnings: builtins.bool = ...
    """Required. If true, ignore safety checks when deleting the app profile."""

    def __init__(self,
        *,
        name : typing.Text = ...,
        ignore_warnings : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ignore_warnings",b"ignore_warnings","name",b"name"]) -> None: ...
global___DeleteAppProfileRequest = DeleteAppProfileRequest

class UpdateAppProfileMetadata(google.protobuf.message.Message):
    """The metadata for the Operation returned by UpdateAppProfile."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___UpdateAppProfileMetadata = UpdateAppProfileMetadata
