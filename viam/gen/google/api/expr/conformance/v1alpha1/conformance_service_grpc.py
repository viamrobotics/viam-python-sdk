# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/api/expr/conformance/v1alpha1/conformance_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.expr.v1alpha1.checked_pb2
import google.api.expr.v1alpha1.eval_pb2
import google.api.expr.v1alpha1.syntax_pb2
import google.rpc.status_pb2
import google.api.client_pb2
import google.api.expr.conformance.v1alpha1.conformance_service_pb2


class ConformanceServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Parse(self, stream: 'grpclib.server.Stream[google.api.expr.conformance.v1alpha1.conformance_service_pb2.ParseRequest, google.api.expr.conformance.v1alpha1.conformance_service_pb2.ParseResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Check(self, stream: 'grpclib.server.Stream[google.api.expr.conformance.v1alpha1.conformance_service_pb2.CheckRequest, google.api.expr.conformance.v1alpha1.conformance_service_pb2.CheckResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Eval(self, stream: 'grpclib.server.Stream[google.api.expr.conformance.v1alpha1.conformance_service_pb2.EvalRequest, google.api.expr.conformance.v1alpha1.conformance_service_pb2.EvalResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.api.expr.conformance.v1alpha1.ConformanceService/Parse': grpclib.const.Handler(
                self.Parse,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.api.expr.conformance.v1alpha1.conformance_service_pb2.ParseRequest,
                google.api.expr.conformance.v1alpha1.conformance_service_pb2.ParseResponse,
            ),
            '/google.api.expr.conformance.v1alpha1.ConformanceService/Check': grpclib.const.Handler(
                self.Check,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.api.expr.conformance.v1alpha1.conformance_service_pb2.CheckRequest,
                google.api.expr.conformance.v1alpha1.conformance_service_pb2.CheckResponse,
            ),
            '/google.api.expr.conformance.v1alpha1.ConformanceService/Eval': grpclib.const.Handler(
                self.Eval,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.api.expr.conformance.v1alpha1.conformance_service_pb2.EvalRequest,
                google.api.expr.conformance.v1alpha1.conformance_service_pb2.EvalResponse,
            ),
        }


class ConformanceServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Parse = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.api.expr.conformance.v1alpha1.ConformanceService/Parse',
            google.api.expr.conformance.v1alpha1.conformance_service_pb2.ParseRequest,
            google.api.expr.conformance.v1alpha1.conformance_service_pb2.ParseResponse,
        )
        self.Check = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.api.expr.conformance.v1alpha1.ConformanceService/Check',
            google.api.expr.conformance.v1alpha1.conformance_service_pb2.CheckRequest,
            google.api.expr.conformance.v1alpha1.conformance_service_pb2.CheckResponse,
        )
        self.Eval = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.api.expr.conformance.v1alpha1.ConformanceService/Eval',
            google.api.expr.conformance.v1alpha1.conformance_service_pb2.EvalRequest,
            google.api.expr.conformance.v1alpha1.conformance_service_pb2.EvalResponse,
        )
