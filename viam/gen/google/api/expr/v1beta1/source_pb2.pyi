"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SourceInfo(google.protobuf.message.Message):
    """Source information collected at parse time."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class PositionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : builtins.int = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    LOCATION_FIELD_NUMBER: builtins.int
    LINE_OFFSETS_FIELD_NUMBER: builtins.int
    POSITIONS_FIELD_NUMBER: builtins.int
    location: typing.Text = ...
    """The location name. All position information attached to an expression is
    relative to this location.

    The location could be a file, UI element, or similar. For example,
    `acme/app/AnvilPolicy.cel`.
    """

    @property
    def line_offsets(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Monotonically increasing list of character offsets where newlines appear.

        The line number of a given position is the index `i` where for a given
        `id` the `line_offsets[i] < id_positions[id] < line_offsets[i+1]`. The
        column may be derivd from `id_positions[id] - line_offsets[i]`.
        """
        pass
    @property
    def positions(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]:
        """A map from the parse node id (e.g. `Expr.id`) to the character offset
        within source.
        """
        pass
    def __init__(self,
        *,
        location : typing.Text = ...,
        line_offsets : typing.Optional[typing.Iterable[builtins.int]] = ...,
        positions : typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["line_offsets",b"line_offsets","location",b"location","positions",b"positions"]) -> None: ...
global___SourceInfo = SourceInfo

class SourcePosition(google.protobuf.message.Message):
    """A specific position in source."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCATION_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LINE_FIELD_NUMBER: builtins.int
    COLUMN_FIELD_NUMBER: builtins.int
    location: typing.Text = ...
    """The soucre location name (e.g. file name)."""

    offset: builtins.int = ...
    """The character offset."""

    line: builtins.int = ...
    """The 1-based index of the starting line in the source text
    where the issue occurs, or 0 if unknown.
    """

    column: builtins.int = ...
    """The 0-based index of the starting position within the line of source text
    where the issue occurs.  Only meaningful if line is nonzer..
    """

    def __init__(self,
        *,
        location : typing.Text = ...,
        offset : builtins.int = ...,
        line : builtins.int = ...,
        column : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["column",b"column","line",b"line","location",b"location","offset",b"offset"]) -> None: ...
global___SourcePosition = SourcePosition
