"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.api.servicecontrol.v1.check_error_pb2
import google.api.servicecontrol.v1.operation_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CheckRequest(google.protobuf.message.Message):
    """Request message for the Check method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_NAME_FIELD_NUMBER: builtins.int
    OPERATION_FIELD_NUMBER: builtins.int
    SERVICE_CONFIG_ID_FIELD_NUMBER: builtins.int
    service_name: typing.Text = ...
    """The service name as specified in its service configuration. For example,
    `"pubsub.googleapis.com"`.

    See
    [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
    for the definition of a service name.
    """

    @property
    def operation(self) -> google.api.servicecontrol.v1.operation_pb2.Operation:
        """The operation to be checked."""
        pass
    service_config_id: typing.Text = ...
    """Specifies which version of service configuration should be used to process
    the request.

    If unspecified or no matching version can be found, the
    latest one will be used.
    """

    def __init__(self,
        *,
        service_name : typing.Text = ...,
        operation : typing.Optional[google.api.servicecontrol.v1.operation_pb2.Operation] = ...,
        service_config_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["operation",b"operation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["operation",b"operation","service_config_id",b"service_config_id","service_name",b"service_name"]) -> None: ...
global___CheckRequest = CheckRequest

class CheckResponse(google.protobuf.message.Message):
    """Response message for the Check method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class CheckInfo(google.protobuf.message.Message):
        """Contains additional information about the check operation."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        UNUSED_ARGUMENTS_FIELD_NUMBER: builtins.int
        CONSUMER_INFO_FIELD_NUMBER: builtins.int
        @property
        def unused_arguments(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """A list of fields and label keys that are ignored by the server.
            The client doesn't need to send them for following requests to improve
            performance and allow better aggregation.
            """
            pass
        @property
        def consumer_info(self) -> global___CheckResponse.ConsumerInfo:
            """Consumer info of this check."""
            pass
        def __init__(self,
            *,
            unused_arguments : typing.Optional[typing.Iterable[typing.Text]] = ...,
            consumer_info : typing.Optional[global___CheckResponse.ConsumerInfo] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["consumer_info",b"consumer_info"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["consumer_info",b"consumer_info","unused_arguments",b"unused_arguments"]) -> None: ...

    class ConsumerInfo(google.protobuf.message.Message):
        """`ConsumerInfo` provides information about the consumer."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class _ConsumerType:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ConsumerTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ConsumerType.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
            CONSUMER_TYPE_UNSPECIFIED: CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...  # 0
            """This is never used."""

            PROJECT: CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...  # 1
            """The consumer is a Google Cloud Project."""

            FOLDER: CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...  # 2
            """The consumer is a Google Cloud Folder."""

            ORGANIZATION: CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...  # 3
            """The consumer is a Google Cloud Organization."""

            SERVICE_SPECIFIC: CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...  # 4
            """Service-specific resource container which is defined by the service
            producer to offer their users the ability to manage service control
            functionalities at a finer level of granularity than the PROJECT.
            """

        class ConsumerType(_ConsumerType, metaclass=_ConsumerTypeEnumTypeWrapper):
            """The type of the consumer as defined in
            [Google Resource Manager](https://cloud.google.com/resource-manager/).
            """
            pass

        CONSUMER_TYPE_UNSPECIFIED: CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...  # 0
        """This is never used."""

        PROJECT: CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...  # 1
        """The consumer is a Google Cloud Project."""

        FOLDER: CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...  # 2
        """The consumer is a Google Cloud Folder."""

        ORGANIZATION: CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...  # 3
        """The consumer is a Google Cloud Organization."""

        SERVICE_SPECIFIC: CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...  # 4
        """Service-specific resource container which is defined by the service
        producer to offer their users the ability to manage service control
        functionalities at a finer level of granularity than the PROJECT.
        """


        PROJECT_NUMBER_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        CONSUMER_NUMBER_FIELD_NUMBER: builtins.int
        project_number: builtins.int = ...
        """The Google cloud project number, e.g. 1234567890. A value of 0 indicates
        no project number is found.

        NOTE: This field is deprecated after we support flexible consumer
        id. New code should not depend on this field anymore.
        """

        type: global___CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...
        """The type of the consumer which should have been defined in
        [Google Resource Manager](https://cloud.google.com/resource-manager/).
        """

        consumer_number: builtins.int = ...
        """The consumer identity number, can be Google cloud project number, folder
        number or organization number e.g. 1234567890. A value of 0 indicates no
        consumer number is found.
        """

        def __init__(self,
            *,
            project_number : builtins.int = ...,
            type : global___CheckResponse.ConsumerInfo.ConsumerType.ValueType = ...,
            consumer_number : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["consumer_number",b"consumer_number","project_number",b"project_number","type",b"type"]) -> None: ...

    OPERATION_ID_FIELD_NUMBER: builtins.int
    CHECK_ERRORS_FIELD_NUMBER: builtins.int
    SERVICE_CONFIG_ID_FIELD_NUMBER: builtins.int
    SERVICE_ROLLOUT_ID_FIELD_NUMBER: builtins.int
    CHECK_INFO_FIELD_NUMBER: builtins.int
    operation_id: typing.Text = ...
    """The same operation_id value used in the
    [CheckRequest][google.api.servicecontrol.v1.CheckRequest]. Used for logging
    and diagnostics purposes.
    """

    @property
    def check_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.api.servicecontrol.v1.check_error_pb2.CheckError]:
        """Indicate the decision of the check.

        If no check errors are present, the service should process the operation.
        Otherwise the service should use the list of errors to determine the
        appropriate action.
        """
        pass
    service_config_id: typing.Text = ...
    """The actual config id used to process the request."""

    service_rollout_id: typing.Text = ...
    """The current service rollout id used to process the request."""

    @property
    def check_info(self) -> global___CheckResponse.CheckInfo:
        """Feedback data returned from the server during processing a Check request."""
        pass
    def __init__(self,
        *,
        operation_id : typing.Text = ...,
        check_errors : typing.Optional[typing.Iterable[google.api.servicecontrol.v1.check_error_pb2.CheckError]] = ...,
        service_config_id : typing.Text = ...,
        service_rollout_id : typing.Text = ...,
        check_info : typing.Optional[global___CheckResponse.CheckInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["check_info",b"check_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["check_errors",b"check_errors","check_info",b"check_info","operation_id",b"operation_id","service_config_id",b"service_config_id","service_rollout_id",b"service_rollout_id"]) -> None: ...
global___CheckResponse = CheckResponse

class ReportRequest(google.protobuf.message.Message):
    """Request message for the Report method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SERVICE_NAME_FIELD_NUMBER: builtins.int
    OPERATIONS_FIELD_NUMBER: builtins.int
    SERVICE_CONFIG_ID_FIELD_NUMBER: builtins.int
    service_name: typing.Text = ...
    """The service name as specified in its service configuration. For example,
    `"pubsub.googleapis.com"`.

    See
    [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
    for the definition of a service name.
    """

    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.api.servicecontrol.v1.operation_pb2.Operation]:
        """Operations to be reported.

        Typically the service should report one operation per request.
        Putting multiple operations into a single request is allowed, but should
        be used only when multiple operations are natually available at the time
        of the report.

        There is no limit on the number of operations in the same ReportRequest,
        however the ReportRequest size should be no larger than 1MB. See
        [ReportResponse.report_errors][google.api.servicecontrol.v1.ReportResponse.report_errors]
        for partial failure behavior.
        """
        pass
    service_config_id: typing.Text = ...
    """Specifies which version of service config should be used to process the
    request.

    If unspecified or no matching version can be found, the
    latest one will be used.
    """

    def __init__(self,
        *,
        service_name : typing.Text = ...,
        operations : typing.Optional[typing.Iterable[google.api.servicecontrol.v1.operation_pb2.Operation]] = ...,
        service_config_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operations",b"operations","service_config_id",b"service_config_id","service_name",b"service_name"]) -> None: ...
global___ReportRequest = ReportRequest

class ReportResponse(google.protobuf.message.Message):
    """Response message for the Report method."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ReportError(google.protobuf.message.Message):
        """Represents the processing error of one
        [Operation][google.api.servicecontrol.v1.Operation] in the request.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        OPERATION_ID_FIELD_NUMBER: builtins.int
        STATUS_FIELD_NUMBER: builtins.int
        operation_id: typing.Text = ...
        """The
        [Operation.operation_id][google.api.servicecontrol.v1.Operation.operation_id]
        value from the request.
        """

        @property
        def status(self) -> google.rpc.status_pb2.Status:
            """Details of the error when processing the
            [Operation][google.api.servicecontrol.v1.Operation].
            """
            pass
        def __init__(self,
            *,
            operation_id : typing.Text = ...,
            status : typing.Optional[google.rpc.status_pb2.Status] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["status",b"status"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["operation_id",b"operation_id","status",b"status"]) -> None: ...

    REPORT_ERRORS_FIELD_NUMBER: builtins.int
    SERVICE_CONFIG_ID_FIELD_NUMBER: builtins.int
    SERVICE_ROLLOUT_ID_FIELD_NUMBER: builtins.int
    @property
    def report_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ReportResponse.ReportError]:
        """Partial failures, one for each `Operation` in the request that failed
        processing. There are three possible combinations of the RPC status:

        1. The combination of a successful RPC status and an empty `report_errors`
           list indicates a complete success where all `Operations` in the
           request are processed successfully.
        2. The combination of a successful RPC status and a non-empty
           `report_errors` list indicates a partial success where some
           `Operations` in the request succeeded. Each
           `Operation` that failed processing has a corresponding item
           in this list.
        3. A failed RPC status indicates a general non-deterministic failure.
           When this happens, it's impossible to know which of the
           'Operations' in the request succeeded or failed.
        """
        pass
    service_config_id: typing.Text = ...
    """The actual config id used to process the request."""

    service_rollout_id: typing.Text = ...
    """The current service rollout id used to process the request."""

    def __init__(self,
        *,
        report_errors : typing.Optional[typing.Iterable[global___ReportResponse.ReportError]] = ...,
        service_config_id : typing.Text = ...,
        service_rollout_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["report_errors",b"report_errors","service_config_id",b"service_config_id","service_rollout_id",b"service_rollout_id"]) -> None: ...
global___ReportResponse = ReportResponse
