"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CheckError(google.protobuf.message.Message):
    """Defines the errors to be returned in
    [google.api.servicecontrol.v1.CheckResponse.check_errors][google.api.servicecontrol.v1.CheckResponse.check_errors].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _Code:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Code.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        ERROR_CODE_UNSPECIFIED: CheckError.Code.ValueType = ...  # 0
        """This is never used in `CheckResponse`."""

        NOT_FOUND: CheckError.Code.ValueType = ...  # 5
        """The consumer's project id, network container, or resource container was
        not found. Same as [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND].
        """

        PERMISSION_DENIED: CheckError.Code.ValueType = ...  # 7
        """The consumer doesn't have access to the specified resource.
        Same as [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED].
        """

        RESOURCE_EXHAUSTED: CheckError.Code.ValueType = ...  # 8
        """Quota check failed. Same as [google.rpc.Code.RESOURCE_EXHAUSTED][google.rpc.Code.RESOURCE_EXHAUSTED]."""

        SERVICE_NOT_ACTIVATED: CheckError.Code.ValueType = ...  # 104
        """The consumer hasn't activated the service."""

        BILLING_DISABLED: CheckError.Code.ValueType = ...  # 107
        """The consumer cannot access the service because billing is disabled."""

        PROJECT_DELETED: CheckError.Code.ValueType = ...  # 108
        """The consumer's project has been marked as deleted (soft deletion)."""

        PROJECT_INVALID: CheckError.Code.ValueType = ...  # 114
        """The consumer's project number or id does not represent a valid project."""

        CONSUMER_INVALID: CheckError.Code.ValueType = ...  # 125
        """The input consumer info does not represent a valid consumer folder or
        organization.
        """

        IP_ADDRESS_BLOCKED: CheckError.Code.ValueType = ...  # 109
        """The IP address of the consumer is invalid for the specific consumer
        project.
        """

        REFERER_BLOCKED: CheckError.Code.ValueType = ...  # 110
        """The referer address of the consumer request is invalid for the specific
        consumer project.
        """

        CLIENT_APP_BLOCKED: CheckError.Code.ValueType = ...  # 111
        """The client application of the consumer request is invalid for the
        specific consumer project.
        """

        API_TARGET_BLOCKED: CheckError.Code.ValueType = ...  # 122
        """The API targeted by this request is invalid for the specified consumer
        project.
        """

        API_KEY_INVALID: CheckError.Code.ValueType = ...  # 105
        """The consumer's API key is invalid."""

        API_KEY_EXPIRED: CheckError.Code.ValueType = ...  # 112
        """The consumer's API Key has expired."""

        API_KEY_NOT_FOUND: CheckError.Code.ValueType = ...  # 113
        """The consumer's API Key was not found in config record."""

        INVALID_CREDENTIAL: CheckError.Code.ValueType = ...  # 123
        """The credential in the request can not be verified."""

        NAMESPACE_LOOKUP_UNAVAILABLE: CheckError.Code.ValueType = ...  # 300
        """The backend server for looking up project id/number is unavailable."""

        SERVICE_STATUS_UNAVAILABLE: CheckError.Code.ValueType = ...  # 301
        """The backend server for checking service status is unavailable."""

        BILLING_STATUS_UNAVAILABLE: CheckError.Code.ValueType = ...  # 302
        """The backend server for checking billing status is unavailable."""

        CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE: CheckError.Code.ValueType = ...  # 305
        """Cloud Resource Manager backend server is unavailable."""

    class Code(_Code, metaclass=_CodeEnumTypeWrapper):
        """Error codes for Check responses."""
        pass

    ERROR_CODE_UNSPECIFIED: CheckError.Code.ValueType = ...  # 0
    """This is never used in `CheckResponse`."""

    NOT_FOUND: CheckError.Code.ValueType = ...  # 5
    """The consumer's project id, network container, or resource container was
    not found. Same as [google.rpc.Code.NOT_FOUND][google.rpc.Code.NOT_FOUND].
    """

    PERMISSION_DENIED: CheckError.Code.ValueType = ...  # 7
    """The consumer doesn't have access to the specified resource.
    Same as [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED].
    """

    RESOURCE_EXHAUSTED: CheckError.Code.ValueType = ...  # 8
    """Quota check failed. Same as [google.rpc.Code.RESOURCE_EXHAUSTED][google.rpc.Code.RESOURCE_EXHAUSTED]."""

    SERVICE_NOT_ACTIVATED: CheckError.Code.ValueType = ...  # 104
    """The consumer hasn't activated the service."""

    BILLING_DISABLED: CheckError.Code.ValueType = ...  # 107
    """The consumer cannot access the service because billing is disabled."""

    PROJECT_DELETED: CheckError.Code.ValueType = ...  # 108
    """The consumer's project has been marked as deleted (soft deletion)."""

    PROJECT_INVALID: CheckError.Code.ValueType = ...  # 114
    """The consumer's project number or id does not represent a valid project."""

    CONSUMER_INVALID: CheckError.Code.ValueType = ...  # 125
    """The input consumer info does not represent a valid consumer folder or
    organization.
    """

    IP_ADDRESS_BLOCKED: CheckError.Code.ValueType = ...  # 109
    """The IP address of the consumer is invalid for the specific consumer
    project.
    """

    REFERER_BLOCKED: CheckError.Code.ValueType = ...  # 110
    """The referer address of the consumer request is invalid for the specific
    consumer project.
    """

    CLIENT_APP_BLOCKED: CheckError.Code.ValueType = ...  # 111
    """The client application of the consumer request is invalid for the
    specific consumer project.
    """

    API_TARGET_BLOCKED: CheckError.Code.ValueType = ...  # 122
    """The API targeted by this request is invalid for the specified consumer
    project.
    """

    API_KEY_INVALID: CheckError.Code.ValueType = ...  # 105
    """The consumer's API key is invalid."""

    API_KEY_EXPIRED: CheckError.Code.ValueType = ...  # 112
    """The consumer's API Key has expired."""

    API_KEY_NOT_FOUND: CheckError.Code.ValueType = ...  # 113
    """The consumer's API Key was not found in config record."""

    INVALID_CREDENTIAL: CheckError.Code.ValueType = ...  # 123
    """The credential in the request can not be verified."""

    NAMESPACE_LOOKUP_UNAVAILABLE: CheckError.Code.ValueType = ...  # 300
    """The backend server for looking up project id/number is unavailable."""

    SERVICE_STATUS_UNAVAILABLE: CheckError.Code.ValueType = ...  # 301
    """The backend server for checking service status is unavailable."""

    BILLING_STATUS_UNAVAILABLE: CheckError.Code.ValueType = ...  # 302
    """The backend server for checking billing status is unavailable."""

    CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE: CheckError.Code.ValueType = ...  # 305
    """Cloud Resource Manager backend server is unavailable."""


    CODE_FIELD_NUMBER: builtins.int
    SUBJECT_FIELD_NUMBER: builtins.int
    DETAIL_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    code: global___CheckError.Code.ValueType = ...
    """The error code."""

    subject: typing.Text = ...
    """Subject to whom this error applies. See the specific code enum for more
    details on this field. For example:

    - "project:<project-id or project-number>"
    - "folder:<folder-id>"
    - "organization:<organization-id>"
    """

    detail: typing.Text = ...
    """Free-form text providing details on the error cause of the error."""

    @property
    def status(self) -> google.rpc.status_pb2.Status:
        """Contains public information about the check error. If available,
        `status.code` will be non zero and client can propagate it out as public
        error.
        """
        pass
    def __init__(self,
        *,
        code : global___CheckError.Code.ValueType = ...,
        subject : typing.Text = ...,
        detail : typing.Text = ...,
        status : typing.Optional[google.rpc.status_pb2.Status] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code",b"code","detail",b"detail","status",b"status","subject",b"subject"]) -> None: ...
global___CheckError = CheckError
