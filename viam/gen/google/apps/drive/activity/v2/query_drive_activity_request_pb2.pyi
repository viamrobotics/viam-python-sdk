"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class QueryDriveActivityRequest(google.protobuf.message.Message):
    """The request message for querying Drive activity."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ITEM_NAME_FIELD_NUMBER: builtins.int
    ANCESTOR_NAME_FIELD_NUMBER: builtins.int
    CONSOLIDATION_STRATEGY_FIELD_NUMBER: builtins.int
    PAGE_SIZE_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    item_name: typing.Text = ...
    """Return activities for this Drive item. The format is
    `items/ITEM_ID`.
    """

    ancestor_name: typing.Text = ...
    """Return activities for this Drive folder and all children and descendants.
    The format is `items/ITEM_ID`.
    """

    @property
    def consolidation_strategy(self) -> global___ConsolidationStrategy:
        """Details on how to consolidate related actions that make up the activity. If
        not set, then related actions are not consolidated.
        """
        pass
    page_size: builtins.int = ...
    """The miminum number of activities desired in the response; the server will
    attempt to return at least this quanitity. The server may also return fewer
    activities if it has a partial response ready before the request times out.
    If not set, a default value is used.
    """

    page_token: typing.Text = ...
    """The token identifying which page of results to return. Set this to the
    next_page_token value returned from a previous query to obtain the
    following page of results. If not set, the first page of results will be
    returned.
    """

    filter: typing.Text = ...
    """The filtering for items returned from this query request. The format of the
    filter string is a sequence of expressions, joined by an optional "AND",
    where each expression is of the form "field operator value".

    Supported fields:

      - `time`: Uses numerical operators on date values either in
        terms of milliseconds since Jan 1, 1970 or in RFC 3339 format.
        Examples:
          - `time > 1452409200000 AND time <= 1492812924310`
          - `time >= "2016-01-10T01:02:03-05:00"`

      - `detail.action_detail_case`: Uses the "has" operator (:) and
        either a singular value or a list of allowed action types enclosed in
        parentheses.
        Examples:
          - `detail.action_detail_case: RENAME`
          - `detail.action_detail_case:(CREATE EDIT)`
          - `-detail.action_detail_case:MOVE`
    """

    def __init__(self,
        *,
        item_name : typing.Text = ...,
        ancestor_name : typing.Text = ...,
        consolidation_strategy : typing.Optional[global___ConsolidationStrategy] = ...,
        page_size : builtins.int = ...,
        page_token : typing.Text = ...,
        filter : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ancestor_name",b"ancestor_name","consolidation_strategy",b"consolidation_strategy","item_name",b"item_name","key",b"key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ancestor_name",b"ancestor_name","consolidation_strategy",b"consolidation_strategy","filter",b"filter","item_name",b"item_name","key",b"key","page_size",b"page_size","page_token",b"page_token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["key",b"key"]) -> typing.Optional[typing_extensions.Literal["item_name","ancestor_name"]]: ...
global___QueryDriveActivityRequest = QueryDriveActivityRequest

class ConsolidationStrategy(google.protobuf.message.Message):
    """How the individual activities are consolidated. A set of activities may be
    consolidated into one combined activity if they are related in some way, such
    as one actor performing the same action on multiple targets, or multiple
    actors performing the same action on a single target. The strategy defines
    the rules for which activities are related.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class NoConsolidation(google.protobuf.message.Message):
        """A strategy which does no consolidation of individual activities."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class Legacy(google.protobuf.message.Message):
        """A strategy which consolidates activities using the grouping rules from the
        legacy V1 Activity API. Similar actions occurring within a window of time
        can be grouped across multiple targets (such as moving a set of files at
        once) or multiple actors (such as several users editing the same item).
        Grouping rules for this strategy are specific to each type of action.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    NONE_FIELD_NUMBER: builtins.int
    LEGACY_FIELD_NUMBER: builtins.int
    @property
    def none(self) -> global___ConsolidationStrategy.NoConsolidation:
        """The individual activities are not consolidated."""
        pass
    @property
    def legacy(self) -> global___ConsolidationStrategy.Legacy:
        """The individual activities are consolidated using the legacy strategy."""
        pass
    def __init__(self,
        *,
        none : typing.Optional[global___ConsolidationStrategy.NoConsolidation] = ...,
        legacy : typing.Optional[global___ConsolidationStrategy.Legacy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["legacy",b"legacy","none",b"none","strategy",b"strategy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["legacy",b"legacy","none",b"none","strategy",b"strategy"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["strategy",b"strategy"]) -> typing.Optional[typing_extensions.Literal["none","legacy"]]: ...
global___ConsolidationStrategy = ConsolidationStrategy
