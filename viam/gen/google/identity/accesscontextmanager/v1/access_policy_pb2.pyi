"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AccessPolicy(google.protobuf.message.Message):
    """`AccessPolicy` is a container for `AccessLevels` (which define the necessary
    attributes to use Google Cloud services) and `ServicePerimeters` (which
    define regions of services able to freely pass data within a perimeter). An
    access policy is globally visible within an organization, and the
    restrictions it specifies apply to all projects within an organization.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    CREATE_TIME_FIELD_NUMBER: builtins.int
    UPDATE_TIME_FIELD_NUMBER: builtins.int
    ETAG_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Output only. Resource name of the `AccessPolicy`. Format:
    `accessPolicies/{access_policy}`
    """

    parent: typing.Text = ...
    """Required. The parent of this `AccessPolicy` in the Cloud Resource
    Hierarchy. Currently immutable once created. Format:
    `organizations/{organization_id}`
    """

    title: typing.Text = ...
    """Required. Human readable title. Does not affect behavior."""

    @property
    def create_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time the `AccessPolicy` was created in UTC."""
        pass
    @property
    def update_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Output only. Time the `AccessPolicy` was updated in UTC."""
        pass
    etag: typing.Text = ...
    """Output only. An opaque identifier for the current version of the
    `AccessPolicy`. This will always be a strongly validated etag, meaning that
    two Access Polices will be identical if and only if their etags are
    identical. Clients should not expect this to be in any specific format.
    """

    def __init__(self,
        *,
        name : typing.Text = ...,
        parent : typing.Text = ...,
        title : typing.Text = ...,
        create_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        update_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        etag : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["create_time",b"create_time","update_time",b"update_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["create_time",b"create_time","etag",b"etag","name",b"name","parent",b"parent","title",b"title","update_time",b"update_time"]) -> None: ...
global___AccessPolicy = AccessPolicy
