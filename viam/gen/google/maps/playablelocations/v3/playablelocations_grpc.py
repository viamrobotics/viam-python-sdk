# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/maps/playablelocations/v3/playablelocations.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.api.field_behavior_pb2
import google.maps.playablelocations.v3.resources_pb2
import google.maps.playablelocations.v3.sample.resources_pb2
import google.maps.unity.clientinfo_pb2
import google.protobuf.duration_pb2
import google.api.client_pb2
import google.maps.playablelocations.v3.playablelocations_pb2


class PlayableLocationsBase(abc.ABC):

    @abc.abstractmethod
    async def SamplePlayableLocations(self, stream: 'grpclib.server.Stream[google.maps.playablelocations.v3.playablelocations_pb2.SamplePlayableLocationsRequest, google.maps.playablelocations.v3.playablelocations_pb2.SamplePlayableLocationsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def LogPlayerReports(self, stream: 'grpclib.server.Stream[google.maps.playablelocations.v3.playablelocations_pb2.LogPlayerReportsRequest, google.maps.playablelocations.v3.playablelocations_pb2.LogPlayerReportsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def LogImpressions(self, stream: 'grpclib.server.Stream[google.maps.playablelocations.v3.playablelocations_pb2.LogImpressionsRequest, google.maps.playablelocations.v3.playablelocations_pb2.LogImpressionsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.maps.playablelocations.v3.PlayableLocations/SamplePlayableLocations': grpclib.const.Handler(
                self.SamplePlayableLocations,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.maps.playablelocations.v3.playablelocations_pb2.SamplePlayableLocationsRequest,
                google.maps.playablelocations.v3.playablelocations_pb2.SamplePlayableLocationsResponse,
            ),
            '/google.maps.playablelocations.v3.PlayableLocations/LogPlayerReports': grpclib.const.Handler(
                self.LogPlayerReports,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.maps.playablelocations.v3.playablelocations_pb2.LogPlayerReportsRequest,
                google.maps.playablelocations.v3.playablelocations_pb2.LogPlayerReportsResponse,
            ),
            '/google.maps.playablelocations.v3.PlayableLocations/LogImpressions': grpclib.const.Handler(
                self.LogImpressions,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.maps.playablelocations.v3.playablelocations_pb2.LogImpressionsRequest,
                google.maps.playablelocations.v3.playablelocations_pb2.LogImpressionsResponse,
            ),
        }


class PlayableLocationsStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.SamplePlayableLocations = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.maps.playablelocations.v3.PlayableLocations/SamplePlayableLocations',
            google.maps.playablelocations.v3.playablelocations_pb2.SamplePlayableLocationsRequest,
            google.maps.playablelocations.v3.playablelocations_pb2.SamplePlayableLocationsResponse,
        )
        self.LogPlayerReports = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.maps.playablelocations.v3.PlayableLocations/LogPlayerReports',
            google.maps.playablelocations.v3.playablelocations_pb2.LogPlayerReportsRequest,
            google.maps.playablelocations.v3.playablelocations_pb2.LogPlayerReportsResponse,
        )
        self.LogImpressions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/google.maps.playablelocations.v3.PlayableLocations/LogImpressions',
            google.maps.playablelocations.v3.playablelocations_pb2.LogImpressionsRequest,
            google.maps.playablelocations.v3.playablelocations_pb2.LogImpressionsResponse,
        )
