"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.maps.routes.v1.compute_routes_request_pb2
import google.maps.routes.v1.polyline_pb2
import google.maps.routes.v1.waypoint_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ComputeCustomRoutesRequest(google.protobuf.message.Message):
    """ComputeCustomRoutes request message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ORIGIN_FIELD_NUMBER: builtins.int
    DESTINATION_FIELD_NUMBER: builtins.int
    INTERMEDIATES_FIELD_NUMBER: builtins.int
    TRAVEL_MODE_FIELD_NUMBER: builtins.int
    ROUTING_PREFERENCE_FIELD_NUMBER: builtins.int
    POLYLINE_QUALITY_FIELD_NUMBER: builtins.int
    POLYLINE_ENCODING_FIELD_NUMBER: builtins.int
    DEPARTURE_TIME_FIELD_NUMBER: builtins.int
    ROUTE_MODIFIERS_FIELD_NUMBER: builtins.int
    ROUTE_OBJECTIVE_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    @property
    def origin(self) -> google.maps.routes.v1.waypoint_pb2.Waypoint:
        """Required. Origin waypoint."""
        pass
    @property
    def destination(self) -> google.maps.routes.v1.waypoint_pb2.Waypoint:
        """Required. Destination waypoint."""
        pass
    @property
    def intermediates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.maps.routes.v1.waypoint_pb2.Waypoint]:
        """Optional. A set of waypoints along the route (excluding terminal points), for either
        stopping at or passing by. Up to 25 intermediate waypoints are supported.
        """
        pass
    travel_mode: google.maps.routes.v1.compute_routes_request_pb2.RouteTravelMode.ValueType = ...
    """Optional. Specifies the mode of transportation. Only DRIVE is supported now."""

    routing_preference: google.maps.routes.v1.compute_routes_request_pb2.RoutingPreference.ValueType = ...
    """Optional. Specifies how to compute the route. The server attempts to use the selected
    routing preference to compute the route. If the routing preference results
    in an error or an extra long latency, then an error is returned. In the
    future, we might implement a fallback mechanism to use a different option
    when the preferred option does not give a valid result. You can specify
    this option only when the `travel_mode` is `DRIVE` or `TWO_WHEELER`,
    otherwise the request fails.
    """

    polyline_quality: google.maps.routes.v1.polyline_pb2.PolylineQuality.ValueType = ...
    """Optional. Specifies your preference for the quality of the polyline."""

    polyline_encoding: google.maps.routes.v1.polyline_pb2.PolylineEncoding.ValueType = ...
    """Optional. Specifies the preferred encoding for the polyline."""

    @property
    def departure_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Optional. The departure time. If you don't set this value, then this value
        defaults to the time that you made the request. If you set this value to a
        time that has already occurred, then the request fails.
        """
        pass
    @property
    def route_modifiers(self) -> google.maps.routes.v1.compute_routes_request_pb2.RouteModifiers:
        """Optional. A set of conditions to satisfy that affect the way routes are calculated."""
        pass
    @property
    def route_objective(self) -> global___RouteObjective:
        """Required. A route objective to optimize for."""
        pass
    language_code: typing.Text = ...
    """Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
    information, see
    http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. See
    [Language Support](https://developers.google.com/maps/faq#languagesupport)
    for the list of supported languages. When you don't provide this value, the
    display language is inferred from the location of the route request.
    """

    units: google.maps.routes.v1.compute_routes_request_pb2.Units.ValueType = ...
    """Optional. Specifies the units of measure for the display fields. This includes the
    `instruction` field in `NavigationInstruction`. The units of measure used
    for the route, leg, step distance, and duration are not affected by this
    value. If you don't provide this value, then the display units are inferred
    from the location of the request.
    """

    def __init__(self,
        *,
        origin : typing.Optional[google.maps.routes.v1.waypoint_pb2.Waypoint] = ...,
        destination : typing.Optional[google.maps.routes.v1.waypoint_pb2.Waypoint] = ...,
        intermediates : typing.Optional[typing.Iterable[google.maps.routes.v1.waypoint_pb2.Waypoint]] = ...,
        travel_mode : google.maps.routes.v1.compute_routes_request_pb2.RouteTravelMode.ValueType = ...,
        routing_preference : google.maps.routes.v1.compute_routes_request_pb2.RoutingPreference.ValueType = ...,
        polyline_quality : google.maps.routes.v1.polyline_pb2.PolylineQuality.ValueType = ...,
        polyline_encoding : google.maps.routes.v1.polyline_pb2.PolylineEncoding.ValueType = ...,
        departure_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        route_modifiers : typing.Optional[google.maps.routes.v1.compute_routes_request_pb2.RouteModifiers] = ...,
        route_objective : typing.Optional[global___RouteObjective] = ...,
        language_code : typing.Text = ...,
        units : google.maps.routes.v1.compute_routes_request_pb2.Units.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["departure_time",b"departure_time","destination",b"destination","origin",b"origin","route_modifiers",b"route_modifiers","route_objective",b"route_objective"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["departure_time",b"departure_time","destination",b"destination","intermediates",b"intermediates","language_code",b"language_code","origin",b"origin","polyline_encoding",b"polyline_encoding","polyline_quality",b"polyline_quality","route_modifiers",b"route_modifiers","route_objective",b"route_objective","routing_preference",b"routing_preference","travel_mode",b"travel_mode","units",b"units"]) -> None: ...
global___ComputeCustomRoutesRequest = ComputeCustomRoutesRequest

class RouteObjective(google.protobuf.message.Message):
    """Encapsulates an objective to optimize for by ComputeCustomRoutes."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class RateCard(google.protobuf.message.Message):
        """Encapsulates a RateCard route objective."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class MonetaryCost(google.protobuf.message.Message):
            """Encapsulates the cost used in the rate card."""
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VALUE_FIELD_NUMBER: builtins.int
            value: builtins.float = ...
            """Required. The cost value in local currency inferred from the request."""

            def __init__(self,
                *,
                value : builtins.float = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["value",b"value"]) -> None: ...

        COST_PER_MINUTE_FIELD_NUMBER: builtins.int
        COST_PER_KM_FIELD_NUMBER: builtins.int
        INCLUDE_TOLLS_FIELD_NUMBER: builtins.int
        @property
        def cost_per_minute(self) -> global___RouteObjective.RateCard.MonetaryCost:
            """Optional. Cost per minute."""
            pass
        @property
        def cost_per_km(self) -> global___RouteObjective.RateCard.MonetaryCost:
            """Optional. Cost per kilometer."""
            pass
        include_tolls: builtins.bool = ...
        """Optional. Whether to include toll cost in the overall cost."""

        def __init__(self,
            *,
            cost_per_minute : typing.Optional[global___RouteObjective.RateCard.MonetaryCost] = ...,
            cost_per_km : typing.Optional[global___RouteObjective.RateCard.MonetaryCost] = ...,
            include_tolls : builtins.bool = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["cost_per_km",b"cost_per_km","cost_per_minute",b"cost_per_minute"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["cost_per_km",b"cost_per_km","cost_per_minute",b"cost_per_minute","include_tolls",b"include_tolls"]) -> None: ...

    RATE_CARD_FIELD_NUMBER: builtins.int
    @property
    def rate_card(self) -> global___RouteObjective.RateCard:
        """The RateCard objective."""
        pass
    def __init__(self,
        *,
        rate_card : typing.Optional[global___RouteObjective.RateCard] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["objective",b"objective","rate_card",b"rate_card"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["objective",b"objective","rate_card",b"rate_card"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["objective",b"objective"]) -> typing.Optional[typing_extensions.Literal["rate_card"]]: ...
global___RouteObjective = RouteObjective
