"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.maps.routes.v1.polyline_pb2
import google.maps.routes.v1.toll_passes_pb2
import google.maps.routes.v1.vehicle_emission_type_pb2
import google.maps.routes.v1.waypoint_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _RouteTravelMode:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _RouteTravelModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RouteTravelMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    TRAVEL_MODE_UNSPECIFIED: RouteTravelMode.ValueType = ...  # 0
    """No travel mode specified. Defaults to `DRIVE`."""

    DRIVE: RouteTravelMode.ValueType = ...  # 1
    """Travel by passenger car."""

    BICYCLE: RouteTravelMode.ValueType = ...  # 2
    """Travel by bicycle."""

    WALK: RouteTravelMode.ValueType = ...  # 3
    """Travel by walking."""

    TWO_WHEELER: RouteTravelMode.ValueType = ...  # 4
    """Two-wheeled, motorized vehicle. For example, motorcycle. Note that this
    differs from the `BICYCLE` travel mode which covers human-powered mode.
    """

    TAXI: RouteTravelMode.ValueType = ...  # 5
    """Travel by licensed taxi, which may allow the vehicle to travel on
    designated taxi lanes in some areas.
    """

class RouteTravelMode(_RouteTravelMode, metaclass=_RouteTravelModeEnumTypeWrapper):
    """A set of values used to specify the mode of travel."""
    pass

TRAVEL_MODE_UNSPECIFIED: RouteTravelMode.ValueType = ...  # 0
"""No travel mode specified. Defaults to `DRIVE`."""

DRIVE: RouteTravelMode.ValueType = ...  # 1
"""Travel by passenger car."""

BICYCLE: RouteTravelMode.ValueType = ...  # 2
"""Travel by bicycle."""

WALK: RouteTravelMode.ValueType = ...  # 3
"""Travel by walking."""

TWO_WHEELER: RouteTravelMode.ValueType = ...  # 4
"""Two-wheeled, motorized vehicle. For example, motorcycle. Note that this
differs from the `BICYCLE` travel mode which covers human-powered mode.
"""

TAXI: RouteTravelMode.ValueType = ...  # 5
"""Travel by licensed taxi, which may allow the vehicle to travel on
designated taxi lanes in some areas.
"""

global___RouteTravelMode = RouteTravelMode


class _RoutingPreference:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _RoutingPreferenceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RoutingPreference.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    ROUTING_PREFERENCE_UNSPECIFIED: RoutingPreference.ValueType = ...  # 0
    """No routing preference specified. Default to `TRAFFIC_AWARE`."""

    TRAFFIC_UNAWARE: RoutingPreference.ValueType = ...  # 1
    """Computes routes without taking traffic conditions into consideration.
    Suitable when traffic conditions don't matter. Using this value produces
    the lowest latency.
    """

    TRAFFIC_AWARE: RoutingPreference.ValueType = ...  # 2
    """Calculates routes taking traffic conditions into consideration. In contrast
    to `TRAFFIC_AWARE_OPTIMAL`, some optimizations are applied to significantly
    reduce latency.
    """

    TRAFFIC_AWARE_OPTIMAL: RoutingPreference.ValueType = ...  # 3
    """Calculates the routes taking traffic conditions into consideration,
    without applying most performance optimizations. Using this value produces
    the highest latency.
    """

class RoutingPreference(_RoutingPreference, metaclass=_RoutingPreferenceEnumTypeWrapper):
    """A set of values that specify factors to take into consideration when
    calculating the route.
    """
    pass

ROUTING_PREFERENCE_UNSPECIFIED: RoutingPreference.ValueType = ...  # 0
"""No routing preference specified. Default to `TRAFFIC_AWARE`."""

TRAFFIC_UNAWARE: RoutingPreference.ValueType = ...  # 1
"""Computes routes without taking traffic conditions into consideration.
Suitable when traffic conditions don't matter. Using this value produces
the lowest latency.
"""

TRAFFIC_AWARE: RoutingPreference.ValueType = ...  # 2
"""Calculates routes taking traffic conditions into consideration. In contrast
to `TRAFFIC_AWARE_OPTIMAL`, some optimizations are applied to significantly
reduce latency.
"""

TRAFFIC_AWARE_OPTIMAL: RoutingPreference.ValueType = ...  # 3
"""Calculates the routes taking traffic conditions into consideration,
without applying most performance optimizations. Using this value produces
the highest latency.
"""

global___RoutingPreference = RoutingPreference


class _Units:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _UnitsEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Units.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNITS_UNSPECIFIED: Units.ValueType = ...  # 0
    """Units of measure not specified. Defaults to the unit of measure inferred
    from the request.
    """

    METRIC: Units.ValueType = ...  # 1
    """Metric units of measure."""

    IMPERIAL: Units.ValueType = ...  # 2
    """Imperial (English) units of measure."""

class Units(_Units, metaclass=_UnitsEnumTypeWrapper):
    """A set of values that specify the unit of measure used in the display."""
    pass

UNITS_UNSPECIFIED: Units.ValueType = ...  # 0
"""Units of measure not specified. Defaults to the unit of measure inferred
from the request.
"""

METRIC: Units.ValueType = ...  # 1
"""Metric units of measure."""

IMPERIAL: Units.ValueType = ...  # 2
"""Imperial (English) units of measure."""

global___Units = Units


class ComputeRoutesRequest(google.protobuf.message.Message):
    """ComputeRoutes request message."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ORIGIN_FIELD_NUMBER: builtins.int
    DESTINATION_FIELD_NUMBER: builtins.int
    INTERMEDIATES_FIELD_NUMBER: builtins.int
    TRAVEL_MODE_FIELD_NUMBER: builtins.int
    ROUTING_PREFERENCE_FIELD_NUMBER: builtins.int
    POLYLINE_QUALITY_FIELD_NUMBER: builtins.int
    POLYLINE_ENCODING_FIELD_NUMBER: builtins.int
    DEPARTURE_TIME_FIELD_NUMBER: builtins.int
    COMPUTE_ALTERNATIVE_ROUTES_FIELD_NUMBER: builtins.int
    ROUTE_MODIFIERS_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    @property
    def origin(self) -> google.maps.routes.v1.waypoint_pb2.Waypoint:
        """Required. Origin waypoint."""
        pass
    @property
    def destination(self) -> google.maps.routes.v1.waypoint_pb2.Waypoint:
        """Required. Destination waypoint."""
        pass
    @property
    def intermediates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.maps.routes.v1.waypoint_pb2.Waypoint]:
        """Optional. A set of waypoints along the route (excluding terminal points),
        for either stopping at or passing by. Up to 25 intermediate waypoints are
        supported.
        """
        pass
    travel_mode: global___RouteTravelMode.ValueType = ...
    """Optional. Specifies the mode of transportation."""

    routing_preference: global___RoutingPreference.ValueType = ...
    """Optional. Specifies how to compute the route. The server
    attempts to use the selected routing preference to compute the route. If
     the routing preference results in an error or an extra long latency, then
    an error is returned. In the future, we might implement a fallback
    mechanism to use a different option when the preferred option does not give
    a valid result. You can specify this option only when the `travel_mode` is
    `DRIVE` or `TWO_WHEELER`, otherwise the request fails.
    """

    polyline_quality: google.maps.routes.v1.polyline_pb2.PolylineQuality.ValueType = ...
    """Optional. Specifies your preference for the quality of the polyline."""

    polyline_encoding: google.maps.routes.v1.polyline_pb2.PolylineEncoding.ValueType = ...
    """Optional. Specifies the preferred encoding for the polyline."""

    @property
    def departure_time(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Optional. The departure time. If you don't set this value, then this value
        defaults to the time that you made the request. If you set this value to a
        time that has already occurred, then the request fails.
        """
        pass
    compute_alternative_routes: builtins.bool = ...
    """Specifies whether to calculate alternate routes in addition to the route."""

    @property
    def route_modifiers(self) -> global___RouteModifiers:
        """Optional. A set of conditions to satisfy that affect the way routes are
        calculated.
        """
        pass
    language_code: typing.Text = ...
    """Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more
    information, see
    http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. See
    [Language Support](https://developers.google.com/maps/faq#languagesupport)
    for the list of supported languages. When you don't provide this value, the
    display language is inferred from the location of the route request.
    """

    units: global___Units.ValueType = ...
    """Optional. Specifies the units of measure for the display fields. This
    includes the `instruction` field in `NavigationInstruction`. The units of
    measure used for the route, leg, step distance, and duration are not
    affected by this value. If you don't provide this value, then the display
    units are inferred from the location of the request.
    """

    def __init__(self,
        *,
        origin : typing.Optional[google.maps.routes.v1.waypoint_pb2.Waypoint] = ...,
        destination : typing.Optional[google.maps.routes.v1.waypoint_pb2.Waypoint] = ...,
        intermediates : typing.Optional[typing.Iterable[google.maps.routes.v1.waypoint_pb2.Waypoint]] = ...,
        travel_mode : global___RouteTravelMode.ValueType = ...,
        routing_preference : global___RoutingPreference.ValueType = ...,
        polyline_quality : google.maps.routes.v1.polyline_pb2.PolylineQuality.ValueType = ...,
        polyline_encoding : google.maps.routes.v1.polyline_pb2.PolylineEncoding.ValueType = ...,
        departure_time : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        compute_alternative_routes : builtins.bool = ...,
        route_modifiers : typing.Optional[global___RouteModifiers] = ...,
        language_code : typing.Text = ...,
        units : global___Units.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["departure_time",b"departure_time","destination",b"destination","origin",b"origin","route_modifiers",b"route_modifiers"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["compute_alternative_routes",b"compute_alternative_routes","departure_time",b"departure_time","destination",b"destination","intermediates",b"intermediates","language_code",b"language_code","origin",b"origin","polyline_encoding",b"polyline_encoding","polyline_quality",b"polyline_quality","route_modifiers",b"route_modifiers","routing_preference",b"routing_preference","travel_mode",b"travel_mode","units",b"units"]) -> None: ...
global___ComputeRoutesRequest = ComputeRoutesRequest

class RouteModifiers(google.protobuf.message.Message):
    """Encapsulates a set of optional conditions to satisfy when calculating the
    routes.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AVOID_TOLLS_FIELD_NUMBER: builtins.int
    AVOID_HIGHWAYS_FIELD_NUMBER: builtins.int
    AVOID_FERRIES_FIELD_NUMBER: builtins.int
    AVOID_INDOOR_FIELD_NUMBER: builtins.int
    VEHICLE_INFO_FIELD_NUMBER: builtins.int
    TOLL_PASSES_FIELD_NUMBER: builtins.int
    avoid_tolls: builtins.bool = ...
    """Specifies whether to avoid toll roads where reasonable. Preference will be
    given to routes not containing toll roads. Applies only to the `DRIVE` and
    `TWO_WHEELER` travel modes.
    """

    avoid_highways: builtins.bool = ...
    """Specifies whether to avoid highways where reasonable. Preference will be
    given to routes not containing highways. Applies only to the `DRIVE` and
    `TWO_WHEELER` travel modes.
    """

    avoid_ferries: builtins.bool = ...
    """Specifies whether to avoid ferries where reasonable. Preference will be
    given to routes not containing travel by ferries.
    Applies only to the `DRIVE` and`TWO_WHEELER` travel modes.
    """

    avoid_indoor: builtins.bool = ...
    """Specifies whether to avoid navigating indoors where reasonable. Preference
    will be given to routes not containing indoor navigation.
    Applies only to the `WALK` travel mode.
    """

    @property
    def vehicle_info(self) -> global___VehicleInfo:
        """Specifies the vehicle information."""
        pass
    @property
    def toll_passes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[google.maps.routes.v1.toll_passes_pb2.TollPass.ValueType]:
        """Encapsulates information about toll passes.
        If toll passes are provided, the API tries to return the pass price. If
        toll passes are not provided, the API treats the toll pass as unknown and
        tries to return the cash price.
        Applies only to the DRIVE and TWO_WHEELER travel modes.
        """
        pass
    def __init__(self,
        *,
        avoid_tolls : builtins.bool = ...,
        avoid_highways : builtins.bool = ...,
        avoid_ferries : builtins.bool = ...,
        avoid_indoor : builtins.bool = ...,
        vehicle_info : typing.Optional[global___VehicleInfo] = ...,
        toll_passes : typing.Optional[typing.Iterable[google.maps.routes.v1.toll_passes_pb2.TollPass.ValueType]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["vehicle_info",b"vehicle_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["avoid_ferries",b"avoid_ferries","avoid_highways",b"avoid_highways","avoid_indoor",b"avoid_indoor","avoid_tolls",b"avoid_tolls","toll_passes",b"toll_passes","vehicle_info",b"vehicle_info"]) -> None: ...
global___RouteModifiers = RouteModifiers

class VehicleInfo(google.protobuf.message.Message):
    """Encapsulates the vehicle information, such as the license plate last
    character.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LICENSE_PLATE_LAST_CHARACTER_FIELD_NUMBER: builtins.int
    EMISSION_TYPE_FIELD_NUMBER: builtins.int
    license_plate_last_character: typing.Text = ...
    """Specifies the license plate last character. Could be a digit or a letter."""

    emission_type: google.maps.routes.v1.vehicle_emission_type_pb2.VehicleEmissionType.ValueType = ...
    """Describes the vehicle's emission type.
    Applies only to the DRIVE travel mode.
    """

    def __init__(self,
        *,
        license_plate_last_character : typing.Text = ...,
        emission_type : google.maps.routes.v1.vehicle_emission_type_pb2.VehicleEmissionType.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["emission_type",b"emission_type","license_plate_last_character",b"license_plate_last_character"]) -> None: ...
global___VehicleInfo = VehicleInfo
