"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.wrappers_pb2
import google.type.latlng_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Waypoint(google.protobuf.message.Message):
    """Encapsulates a waypoint. Waypoints mark both the beginning and end of a
    route, and include intermediate stops along the route.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LOCATION_FIELD_NUMBER: builtins.int
    PLACE_ID_FIELD_NUMBER: builtins.int
    VIA_FIELD_NUMBER: builtins.int
    VEHICLE_STOPOVER_FIELD_NUMBER: builtins.int
    SIDE_OF_ROAD_FIELD_NUMBER: builtins.int
    @property
    def location(self) -> global___Location:
        """A point specified using geographic coordinates, including an optional
        heading.
        """
        pass
    place_id: typing.Text = ...
    """The POI Place ID associated with the waypoint."""

    via: builtins.bool = ...
    """Marks this waypoint as a milestone, as opposed to a stopping point. For
    each non-via waypoint in the request, the response appends an entry to the
    `legs` array to provide the details for stopovers on that leg of the
    trip. Set this value to true when you want the route to pass through this
    waypoint without stopping over. Via waypoints don't cause an entry to be
    added to the `legs` array, but they do route the journey through the
    waypoint. You can only set this value on waypoints that are intermediates.
    If you set this field on terminal waypoints, then the request fails.
    """

    vehicle_stopover: builtins.bool = ...
    """Indicates that the waypoint is meant for vehicles to stop at, where the
    intention is to either pickup or drop-off. When you set this value, the
    calculated route won't include non-`via` waypoints on roads that are
    unsuitable for pickup and drop-off. This option works only for `DRIVE` and
    `TWO_WHEELER` travel modes, and when the `location_type` is `location`.
    """

    side_of_road: builtins.bool = ...
    """Indicates that the location of this waypoint is meant to have a preference
    for the vehicle to stop at a particular side of road. When you set this
    value, the route will pass through the location so that the vehicle can
    stop at the side of road that the location is biased towards from the
    center of the road. This option works only for 'DRIVE' and 'TWO_WHEELER'
    travel modes, and when the 'location_type' is set to 'location'.
    """

    def __init__(self,
        *,
        location : typing.Optional[global___Location] = ...,
        place_id : typing.Text = ...,
        via : builtins.bool = ...,
        vehicle_stopover : builtins.bool = ...,
        side_of_road : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["location",b"location","location_type",b"location_type","place_id",b"place_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["location",b"location","location_type",b"location_type","place_id",b"place_id","side_of_road",b"side_of_road","vehicle_stopover",b"vehicle_stopover","via",b"via"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["location_type",b"location_type"]) -> typing.Optional[typing_extensions.Literal["location","place_id"]]: ...
global___Waypoint = Waypoint

class Location(google.protobuf.message.Message):
    """Encapsulates a location (a geographic point, and an optional heading)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LAT_LNG_FIELD_NUMBER: builtins.int
    HEADING_FIELD_NUMBER: builtins.int
    @property
    def lat_lng(self) -> google.type.latlng_pb2.LatLng:
        """The waypoint's geographic coordinates."""
        pass
    @property
    def heading(self) -> google.protobuf.wrappers_pb2.Int32Value:
        """The compass heading associated with the direction of the flow of traffic.
        This value is used to specify the side of the road to use for pickup and
        drop-off. Heading values can be from 0 to 360, where 0 specifies a heading
        of due North, 90 specifies a heading of due East, etc. You can use this
        field only for `DRIVE` and `TWO_WHEELER` travel modes.
        """
        pass
    def __init__(self,
        *,
        lat_lng : typing.Optional[google.type.latlng_pb2.LatLng] = ...,
        heading : typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["heading",b"heading","lat_lng",b"lat_lng"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["heading",b"heading","lat_lng",b"lat_lng"]) -> None: ...
global___Location = Location
