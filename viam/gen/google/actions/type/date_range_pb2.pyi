"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.type.date_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class DateRange(google.protobuf.message.Message):
    """Represents a range based on whole or partial calendar dates, e.g. the
    duration of a hotel reservation or the Common Era. This can represent:

    * A range between full dates, e.g. the duration of a hotel reservation
    * A range between years, e.g. a historical era
    * A range between year/month dates, e.g. the duration of a job on a resume
    * A range beginning in a year, e.g. the Common Era
    * A range ending on a specific date, e.g. the period of time before an event

    While [google.type.Date][google.type.Date] allows zero years, DateRange does not. Year must
    always be non-zero.

    End cannot be chronologically before start. For example, if start has year
    2000, end cannot have year 1999.

    When both set, start and end must have exactly the same precision. That is,
    they must have the same fields populated with non-zero values. For example,
    if start specifies only year and month, then end must also specify only year
    and month (but not day).

    The date range is inclusive. That is, the dates specified by start and end
    are part of the date range. For example, the date January 1, 2000 falls
    within any date with start or end equal to January 1, 2000. When determining
    whether a date is inside a date range, the date should only be compared to
    start and end when those values are set.

    When a date and date range are specified to different degrees of precision,
    the rules for evaluating whether that date is inside the date range are as
    follows:

     * When comparing the date to the start of the date range, unspecified months
       should be replaced with 1, and unspecified days should be replaced with 1.
       For example, the year 2000 is within the date range with start equal to
       January 1, 2000 and no end. And the date January 1, 2000 is within the
       date range with start equal to the year 2000 and no end.

     * When comparing the date to the end of the date range, unspecified months
       should be replaced with 12, and unspecified days should be replaced with
       the last valid day for the month/year. For example, the year 2000 is
       within the date range with start equal to January 1, 1999 and end equal to
       December 31, 2000. And the date December 31, 2001 is within the date range
       with start equal to the year 2000 and end equal to the year 2001.

    The semantics of start and end are the same as those of [google.type.Date][google.type.Date],
    except that year must always be non-zero in DateRange.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    @property
    def start(self) -> google.type.date_pb2.Date:
        """Date at which the date range begins. If unset, the date range has no
        beginning bound.
        """
        pass
    @property
    def end(self) -> google.type.date_pb2.Date:
        """Date at which the date range ends. If unset, the date range has no ending
        bound.
        """
        pass
    def __init__(self,
        *,
        start : typing.Optional[google.type.date_pb2.Date] = ...,
        end : typing.Optional[google.type.date_pb2.Date] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end",b"end","start",b"start"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end",b"end","start",b"start"]) -> None: ...
global___DateRange = DateRange
