"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.type.datetime_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class DateTimeRange(google.protobuf.message.Message):
    """Represents a date and time range. This can represent:

    * A range between points in time with time zone or offset, e.g. the duration
      of a flight which starts in the "America/New_York" time zone and ends in
      the "Australia/Sydney" time zone
    * A range between points in time without time zone/offset info, e.g. an
      appointment in local time
    * A range starting at a specific date and time, e.g. the range of time which
      can be measured in milliseconds since the Unix epoch (period starting with
      1970-01-01T00:00:00Z)
    * A range ending at a specific date and time, e.g. range of time before
      a deadline

    When considering whether a DateTime falls within a DateTimeRange, the start
    of the range is inclusive and the end is exclusive.

    While [google.type.DateTime][google.type.DateTime] allows zero years, DateTimeRange does not.
    Year must always be non-zero.

    When both start and end are set, either both or neither must have a
    time_offset. When set, time_offset can be specified by either utc_offset or
    time_zone and must match for start and end, that is if start has utc_offset
    set then end must also have utc_offset set. The values of utc_offset or
    time_zone need not be the same for start and end.

    When both start and end are set, start must be chronologically less than or
    equal to end. When start and end are equal, the range is empty.

    The semantics of start and end are the same as those of
    [google.type.DateTime][google.type.DateTime].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    @property
    def start(self) -> google.type.datetime_pb2.DateTime:
        """DateTime at which the date range begins. If unset, the range has no
        beginning bound.
        """
        pass
    @property
    def end(self) -> google.type.datetime_pb2.DateTime:
        """DateTime at which the date range ends. If unset, the range has no ending
        bound.
        """
        pass
    def __init__(self,
        *,
        start : typing.Optional[google.type.datetime_pb2.DateTime] = ...,
        end : typing.Optional[google.type.datetime_pb2.DateTime] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end",b"end","start",b"start"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end",b"end","start",b"start"]) -> None: ...
global___DateTimeRange = DateTimeRange
