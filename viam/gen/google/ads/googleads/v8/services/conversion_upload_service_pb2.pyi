"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v8.common.offline_user_data_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.rpc.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class UploadClickConversionsRequest(google.protobuf.message.Message):
    """Request message for [ConversionUploadService.UploadClickConversions][google.ads.googleads.v8.services.ConversionUploadService.UploadClickConversions]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CUSTOMER_ID_FIELD_NUMBER: builtins.int
    CONVERSIONS_FIELD_NUMBER: builtins.int
    PARTIAL_FAILURE_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    customer_id: typing.Text = ...
    """Required. The ID of the customer performing the upload."""

    @property
    def conversions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ClickConversion]:
        """Required. The conversions that are being uploaded."""
        pass
    partial_failure: builtins.bool = ...
    """Required. If true, successful operations will be carried out and invalid
    operations will return errors. If false, all operations will be carried
    out in one transaction if and only if they are all valid.
    This should always be set to true.
    See
    https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
    for more information about partial failure.
    """

    validate_only: builtins.bool = ...
    """If true, the request is validated but not executed. Only errors are
    returned, not results.
    """

    def __init__(self,
        *,
        customer_id : typing.Text = ...,
        conversions : typing.Optional[typing.Iterable[global___ClickConversion]] = ...,
        partial_failure : builtins.bool = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["conversions",b"conversions","customer_id",b"customer_id","partial_failure",b"partial_failure","validate_only",b"validate_only"]) -> None: ...
global___UploadClickConversionsRequest = UploadClickConversionsRequest

class UploadClickConversionsResponse(google.protobuf.message.Message):
    """Response message for [ConversionUploadService.UploadClickConversions][google.ads.googleads.v8.services.ConversionUploadService.UploadClickConversions]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARTIAL_FAILURE_ERROR_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    @property
    def partial_failure_error(self) -> google.rpc.status_pb2.Status:
        """Errors that pertain to conversion failures in the partial failure mode.
        Returned when all errors occur inside the conversions. If any errors occur
        outside the conversions (e.g. auth errors), we return an RPC level error.
        See
        https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
        for more information about partial failure.
        """
        pass
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ClickConversionResult]:
        """Returned for successfully processed conversions. Proto will be empty for
        rows that received an error. Results are not returned when validate_only is
        true.
        """
        pass
    def __init__(self,
        *,
        partial_failure_error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        results : typing.Optional[typing.Iterable[global___ClickConversionResult]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["partial_failure_error",b"partial_failure_error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["partial_failure_error",b"partial_failure_error","results",b"results"]) -> None: ...
global___UploadClickConversionsResponse = UploadClickConversionsResponse

class UploadCallConversionsRequest(google.protobuf.message.Message):
    """Request message for [ConversionUploadService.UploadCallConversions][google.ads.googleads.v8.services.ConversionUploadService.UploadCallConversions]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CUSTOMER_ID_FIELD_NUMBER: builtins.int
    CONVERSIONS_FIELD_NUMBER: builtins.int
    PARTIAL_FAILURE_FIELD_NUMBER: builtins.int
    VALIDATE_ONLY_FIELD_NUMBER: builtins.int
    customer_id: typing.Text = ...
    """Required. The ID of the customer performing the upload."""

    @property
    def conversions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CallConversion]:
        """Required. The conversions that are being uploaded."""
        pass
    partial_failure: builtins.bool = ...
    """Required. If true, successful operations will be carried out and invalid
    operations will return errors. If false, all operations will be carried
    out in one transaction if and only if they are all valid.
    This should always be set to true.
    See
    https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
    for more information about partial failure.
    """

    validate_only: builtins.bool = ...
    """If true, the request is validated but not executed. Only errors are
    returned, not results.
    """

    def __init__(self,
        *,
        customer_id : typing.Text = ...,
        conversions : typing.Optional[typing.Iterable[global___CallConversion]] = ...,
        partial_failure : builtins.bool = ...,
        validate_only : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["conversions",b"conversions","customer_id",b"customer_id","partial_failure",b"partial_failure","validate_only",b"validate_only"]) -> None: ...
global___UploadCallConversionsRequest = UploadCallConversionsRequest

class UploadCallConversionsResponse(google.protobuf.message.Message):
    """Response message for [ConversionUploadService.UploadCallConversions][google.ads.googleads.v8.services.ConversionUploadService.UploadCallConversions]."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARTIAL_FAILURE_ERROR_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    @property
    def partial_failure_error(self) -> google.rpc.status_pb2.Status:
        """Errors that pertain to conversion failures in the partial failure mode.
        Returned when all errors occur inside the conversions. If any errors occur
        outside the conversions (e.g. auth errors), we return an RPC level error.
        See
        https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
        for more information about partial failure.
        """
        pass
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CallConversionResult]:
        """Returned for successfully processed conversions. Proto will be empty for
        rows that received an error. Results are not returned when validate_only is
        true.
        """
        pass
    def __init__(self,
        *,
        partial_failure_error : typing.Optional[google.rpc.status_pb2.Status] = ...,
        results : typing.Optional[typing.Iterable[global___CallConversionResult]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["partial_failure_error",b"partial_failure_error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["partial_failure_error",b"partial_failure_error","results",b"results"]) -> None: ...
global___UploadCallConversionsResponse = UploadCallConversionsResponse

class ClickConversion(google.protobuf.message.Message):
    """A click conversion."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GCLID_FIELD_NUMBER: builtins.int
    CONVERSION_ACTION_FIELD_NUMBER: builtins.int
    CONVERSION_DATE_TIME_FIELD_NUMBER: builtins.int
    CONVERSION_VALUE_FIELD_NUMBER: builtins.int
    CURRENCY_CODE_FIELD_NUMBER: builtins.int
    ORDER_ID_FIELD_NUMBER: builtins.int
    EXTERNAL_ATTRIBUTION_DATA_FIELD_NUMBER: builtins.int
    CUSTOM_VARIABLES_FIELD_NUMBER: builtins.int
    CART_DATA_FIELD_NUMBER: builtins.int
    USER_IDENTIFIERS_FIELD_NUMBER: builtins.int
    gclid: typing.Text = ...
    """The Google click ID (gclid) associated with this conversion."""

    conversion_action: typing.Text = ...
    """Resource name of the conversion action associated with this conversion.
    Note: Although this resource name consists of a customer id and a
    conversion action id, validation will ignore the customer id and use the
    conversion action id as the sole identifier of the conversion action.
    """

    conversion_date_time: typing.Text = ...
    """The date time at which the conversion occurred. Must be after
    the click time. The timezone must be specified. The format is
    "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. “2019-01-01 12:32:45-08:00”.
    """

    conversion_value: builtins.float = ...
    """The value of the conversion for the advertiser."""

    currency_code: typing.Text = ...
    """Currency associated with the conversion value. This is the ISO 4217
    3-character currency code. For example: USD, EUR.
    """

    order_id: typing.Text = ...
    """The order ID associated with the conversion. An order id can only be used
    for one conversion per conversion action.
    """

    @property
    def external_attribution_data(self) -> global___ExternalAttributionData:
        """Additional data about externally attributed conversions. This field
        is required for conversions with an externally attributed conversion
        action, but should not be set otherwise.
        """
        pass
    @property
    def custom_variables(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CustomVariable]:
        """The custom variables associated with this conversion."""
        pass
    @property
    def cart_data(self) -> global___CartData:
        """The cart data associated with this conversion."""
        pass
    @property
    def user_identifiers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.offline_user_data_pb2.UserIdentifier]:
        """The user identifiers associated with this conversion. Only hashed_email and
        hashed_phone_number are supported for conversion uploads. The maximum
        number of user identifiers for each conversion is 5.
        """
        pass
    def __init__(self,
        *,
        gclid : typing.Optional[typing.Text] = ...,
        conversion_action : typing.Optional[typing.Text] = ...,
        conversion_date_time : typing.Optional[typing.Text] = ...,
        conversion_value : typing.Optional[builtins.float] = ...,
        currency_code : typing.Optional[typing.Text] = ...,
        order_id : typing.Optional[typing.Text] = ...,
        external_attribution_data : typing.Optional[global___ExternalAttributionData] = ...,
        custom_variables : typing.Optional[typing.Iterable[global___CustomVariable]] = ...,
        cart_data : typing.Optional[global___CartData] = ...,
        user_identifiers : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.offline_user_data_pb2.UserIdentifier]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_conversion_action",b"_conversion_action","_conversion_date_time",b"_conversion_date_time","_conversion_value",b"_conversion_value","_currency_code",b"_currency_code","_gclid",b"_gclid","_order_id",b"_order_id","cart_data",b"cart_data","conversion_action",b"conversion_action","conversion_date_time",b"conversion_date_time","conversion_value",b"conversion_value","currency_code",b"currency_code","external_attribution_data",b"external_attribution_data","gclid",b"gclid","order_id",b"order_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_conversion_action",b"_conversion_action","_conversion_date_time",b"_conversion_date_time","_conversion_value",b"_conversion_value","_currency_code",b"_currency_code","_gclid",b"_gclid","_order_id",b"_order_id","cart_data",b"cart_data","conversion_action",b"conversion_action","conversion_date_time",b"conversion_date_time","conversion_value",b"conversion_value","currency_code",b"currency_code","custom_variables",b"custom_variables","external_attribution_data",b"external_attribution_data","gclid",b"gclid","order_id",b"order_id","user_identifiers",b"user_identifiers"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_action",b"_conversion_action"]) -> typing.Optional[typing_extensions.Literal["conversion_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_date_time",b"_conversion_date_time"]) -> typing.Optional[typing_extensions.Literal["conversion_date_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_value",b"_conversion_value"]) -> typing.Optional[typing_extensions.Literal["conversion_value"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_currency_code",b"_currency_code"]) -> typing.Optional[typing_extensions.Literal["currency_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gclid",b"_gclid"]) -> typing.Optional[typing_extensions.Literal["gclid"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_order_id",b"_order_id"]) -> typing.Optional[typing_extensions.Literal["order_id"]]: ...
global___ClickConversion = ClickConversion

class CallConversion(google.protobuf.message.Message):
    """A call conversion."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CALLER_ID_FIELD_NUMBER: builtins.int
    CALL_START_DATE_TIME_FIELD_NUMBER: builtins.int
    CONVERSION_ACTION_FIELD_NUMBER: builtins.int
    CONVERSION_DATE_TIME_FIELD_NUMBER: builtins.int
    CONVERSION_VALUE_FIELD_NUMBER: builtins.int
    CURRENCY_CODE_FIELD_NUMBER: builtins.int
    CUSTOM_VARIABLES_FIELD_NUMBER: builtins.int
    caller_id: typing.Text = ...
    """The caller id from which this call was placed. Caller id is expected to be
    in E.164 format with preceding '+' sign. e.g. "+16502531234".
    """

    call_start_date_time: typing.Text = ...
    """The date time at which the call occurred. The timezone must be specified.
    The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm",
    e.g. "2019-01-01 12:32:45-08:00".
    """

    conversion_action: typing.Text = ...
    """Resource name of the conversion action associated with this conversion.
    Note: Although this resource name consists of a customer id and a
    conversion action id, validation will ignore the customer id and use the
    conversion action id as the sole identifier of the conversion action.
    """

    conversion_date_time: typing.Text = ...
    """The date time at which the conversion occurred. Must be after the call
    time. The timezone must be specified. The format is
    "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
    """

    conversion_value: builtins.float = ...
    """The value of the conversion for the advertiser."""

    currency_code: typing.Text = ...
    """Currency associated with the conversion value. This is the ISO 4217
    3-character currency code. For example: USD, EUR.
    """

    @property
    def custom_variables(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CustomVariable]:
        """The custom variables associated with this conversion."""
        pass
    def __init__(self,
        *,
        caller_id : typing.Optional[typing.Text] = ...,
        call_start_date_time : typing.Optional[typing.Text] = ...,
        conversion_action : typing.Optional[typing.Text] = ...,
        conversion_date_time : typing.Optional[typing.Text] = ...,
        conversion_value : typing.Optional[builtins.float] = ...,
        currency_code : typing.Optional[typing.Text] = ...,
        custom_variables : typing.Optional[typing.Iterable[global___CustomVariable]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_call_start_date_time",b"_call_start_date_time","_caller_id",b"_caller_id","_conversion_action",b"_conversion_action","_conversion_date_time",b"_conversion_date_time","_conversion_value",b"_conversion_value","_currency_code",b"_currency_code","call_start_date_time",b"call_start_date_time","caller_id",b"caller_id","conversion_action",b"conversion_action","conversion_date_time",b"conversion_date_time","conversion_value",b"conversion_value","currency_code",b"currency_code"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_call_start_date_time",b"_call_start_date_time","_caller_id",b"_caller_id","_conversion_action",b"_conversion_action","_conversion_date_time",b"_conversion_date_time","_conversion_value",b"_conversion_value","_currency_code",b"_currency_code","call_start_date_time",b"call_start_date_time","caller_id",b"caller_id","conversion_action",b"conversion_action","conversion_date_time",b"conversion_date_time","conversion_value",b"conversion_value","currency_code",b"currency_code","custom_variables",b"custom_variables"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_call_start_date_time",b"_call_start_date_time"]) -> typing.Optional[typing_extensions.Literal["call_start_date_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_caller_id",b"_caller_id"]) -> typing.Optional[typing_extensions.Literal["caller_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_action",b"_conversion_action"]) -> typing.Optional[typing_extensions.Literal["conversion_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_date_time",b"_conversion_date_time"]) -> typing.Optional[typing_extensions.Literal["conversion_date_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_value",b"_conversion_value"]) -> typing.Optional[typing_extensions.Literal["conversion_value"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_currency_code",b"_currency_code"]) -> typing.Optional[typing_extensions.Literal["currency_code"]]: ...
global___CallConversion = CallConversion

class ExternalAttributionData(google.protobuf.message.Message):
    """Contains additional information about externally attributed conversions."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EXTERNAL_ATTRIBUTION_CREDIT_FIELD_NUMBER: builtins.int
    EXTERNAL_ATTRIBUTION_MODEL_FIELD_NUMBER: builtins.int
    external_attribution_credit: builtins.float = ...
    """Represents the fraction of the conversion that is attributed to the
    Google Ads click.
    """

    external_attribution_model: typing.Text = ...
    """Specifies the attribution model name."""

    def __init__(self,
        *,
        external_attribution_credit : typing.Optional[builtins.float] = ...,
        external_attribution_model : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_external_attribution_credit",b"_external_attribution_credit","_external_attribution_model",b"_external_attribution_model","external_attribution_credit",b"external_attribution_credit","external_attribution_model",b"external_attribution_model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_external_attribution_credit",b"_external_attribution_credit","_external_attribution_model",b"_external_attribution_model","external_attribution_credit",b"external_attribution_credit","external_attribution_model",b"external_attribution_model"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_external_attribution_credit",b"_external_attribution_credit"]) -> typing.Optional[typing_extensions.Literal["external_attribution_credit"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_external_attribution_model",b"_external_attribution_model"]) -> typing.Optional[typing_extensions.Literal["external_attribution_model"]]: ...
global___ExternalAttributionData = ExternalAttributionData

class ClickConversionResult(google.protobuf.message.Message):
    """Identifying information for a successfully processed ClickConversion."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GCLID_FIELD_NUMBER: builtins.int
    CONVERSION_ACTION_FIELD_NUMBER: builtins.int
    CONVERSION_DATE_TIME_FIELD_NUMBER: builtins.int
    USER_IDENTIFIERS_FIELD_NUMBER: builtins.int
    gclid: typing.Text = ...
    """The Google Click ID (gclid) associated with this conversion."""

    conversion_action: typing.Text = ...
    """Resource name of the conversion action associated with this conversion."""

    conversion_date_time: typing.Text = ...
    """The date time at which the conversion occurred. The format is
    "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. “2019-01-01 12:32:45-08:00”.
    """

    @property
    def user_identifiers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.offline_user_data_pb2.UserIdentifier]:
        """The user identifiers associated with this conversion. Only hashed_email and
        hashed_phone_number are supported for conversion uploads. The maximum
        number of user identifiers for each conversion is 5.
        """
        pass
    def __init__(self,
        *,
        gclid : typing.Optional[typing.Text] = ...,
        conversion_action : typing.Optional[typing.Text] = ...,
        conversion_date_time : typing.Optional[typing.Text] = ...,
        user_identifiers : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.offline_user_data_pb2.UserIdentifier]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_conversion_action",b"_conversion_action","_conversion_date_time",b"_conversion_date_time","_gclid",b"_gclid","conversion_action",b"conversion_action","conversion_date_time",b"conversion_date_time","gclid",b"gclid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_conversion_action",b"_conversion_action","_conversion_date_time",b"_conversion_date_time","_gclid",b"_gclid","conversion_action",b"conversion_action","conversion_date_time",b"conversion_date_time","gclid",b"gclid","user_identifiers",b"user_identifiers"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_action",b"_conversion_action"]) -> typing.Optional[typing_extensions.Literal["conversion_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_date_time",b"_conversion_date_time"]) -> typing.Optional[typing_extensions.Literal["conversion_date_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gclid",b"_gclid"]) -> typing.Optional[typing_extensions.Literal["gclid"]]: ...
global___ClickConversionResult = ClickConversionResult

class CallConversionResult(google.protobuf.message.Message):
    """Identifying information for a successfully processed CallConversionUpload."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CALLER_ID_FIELD_NUMBER: builtins.int
    CALL_START_DATE_TIME_FIELD_NUMBER: builtins.int
    CONVERSION_ACTION_FIELD_NUMBER: builtins.int
    CONVERSION_DATE_TIME_FIELD_NUMBER: builtins.int
    caller_id: typing.Text = ...
    """The caller id from which this call was placed. Caller id is expected to be
    in E.164 format with preceding '+' sign.
    """

    call_start_date_time: typing.Text = ...
    """The date time at which the call occurred. The format is
    "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
    """

    conversion_action: typing.Text = ...
    """Resource name of the conversion action associated with this conversion."""

    conversion_date_time: typing.Text = ...
    """The date time at which the conversion occurred. The format is
    "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
    """

    def __init__(self,
        *,
        caller_id : typing.Optional[typing.Text] = ...,
        call_start_date_time : typing.Optional[typing.Text] = ...,
        conversion_action : typing.Optional[typing.Text] = ...,
        conversion_date_time : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_call_start_date_time",b"_call_start_date_time","_caller_id",b"_caller_id","_conversion_action",b"_conversion_action","_conversion_date_time",b"_conversion_date_time","call_start_date_time",b"call_start_date_time","caller_id",b"caller_id","conversion_action",b"conversion_action","conversion_date_time",b"conversion_date_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_call_start_date_time",b"_call_start_date_time","_caller_id",b"_caller_id","_conversion_action",b"_conversion_action","_conversion_date_time",b"_conversion_date_time","call_start_date_time",b"call_start_date_time","caller_id",b"caller_id","conversion_action",b"conversion_action","conversion_date_time",b"conversion_date_time"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_call_start_date_time",b"_call_start_date_time"]) -> typing.Optional[typing_extensions.Literal["call_start_date_time"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_caller_id",b"_caller_id"]) -> typing.Optional[typing_extensions.Literal["caller_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_action",b"_conversion_action"]) -> typing.Optional[typing_extensions.Literal["conversion_action"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_conversion_date_time",b"_conversion_date_time"]) -> typing.Optional[typing_extensions.Literal["conversion_date_time"]]: ...
global___CallConversionResult = CallConversionResult

class CustomVariable(google.protobuf.message.Message):
    """A custom variable."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONVERSION_CUSTOM_VARIABLE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    conversion_custom_variable: typing.Text = ...
    """Resource name of the custom variable associated with this conversion.
    Note: Although this resource name consists of a customer id and a
    conversion custom variable id, validation will ignore the customer id and
    use the conversion custom variable id as the sole identifier of the
    conversion custom variable.
    """

    value: typing.Text = ...
    """The value string of this custom variable.
    The value of the custom variable should not contain private customer data,
    such as email addresses or phone numbers.
    """

    def __init__(self,
        *,
        conversion_custom_variable : typing.Text = ...,
        value : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["conversion_custom_variable",b"conversion_custom_variable","value",b"value"]) -> None: ...
global___CustomVariable = CustomVariable

class CartData(google.protobuf.message.Message):
    """Contains additional information about cart data."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Item(google.protobuf.message.Message):
        """Contains data of the items purchased."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PRODUCT_ID_FIELD_NUMBER: builtins.int
        QUANTITY_FIELD_NUMBER: builtins.int
        UNIT_PRICE_FIELD_NUMBER: builtins.int
        product_id: typing.Text = ...
        """The shopping id of the item. Must be equal to the Merchant Center product
        identifier.
        """

        quantity: builtins.int = ...
        """Number of items sold."""

        unit_price: builtins.float = ...
        """Unit price excluding tax, shipping, and any transaction
        level discounts. The currency code is the same as that in the
        ClickConversion message.
        """

        def __init__(self,
            *,
            product_id : typing.Text = ...,
            quantity : builtins.int = ...,
            unit_price : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["product_id",b"product_id","quantity",b"quantity","unit_price",b"unit_price"]) -> None: ...

    MERCHANT_ID_FIELD_NUMBER: builtins.int
    FEED_COUNTRY_CODE_FIELD_NUMBER: builtins.int
    FEED_LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    LOCAL_TRANSACTION_COST_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    merchant_id: typing.Text = ...
    """The Merchant Center ID where the items are uploaded."""

    feed_country_code: typing.Text = ...
    """The country code associated with the feed where the items are uploaded."""

    feed_language_code: typing.Text = ...
    """The language code associated with the feed where the items are uploaded."""

    local_transaction_cost: builtins.float = ...
    """Sum of all transaction level discounts, such as free shipping and
    coupon discounts for the whole cart. The currency code is the same
    as that in the ClickConversion message.
    """

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CartData.Item]:
        """Data of the items purchased."""
        pass
    def __init__(self,
        *,
        merchant_id : typing.Text = ...,
        feed_country_code : typing.Text = ...,
        feed_language_code : typing.Text = ...,
        local_transaction_cost : builtins.float = ...,
        items : typing.Optional[typing.Iterable[global___CartData.Item]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["feed_country_code",b"feed_country_code","feed_language_code",b"feed_language_code","items",b"items","local_transaction_cost",b"local_transaction_cost","merchant_id",b"merchant_id"]) -> None: ...
global___CartData = CartData
