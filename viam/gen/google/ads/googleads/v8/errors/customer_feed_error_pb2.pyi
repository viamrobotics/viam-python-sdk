"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CustomerFeedErrorEnum(google.protobuf.message.Message):
    """Proto file describing customer feed errors.

    Container for enum describing possible customer feed errors.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CustomerFeedError:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CustomerFeedErrorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CustomerFeedError.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 0
        """Enum unspecified."""

        UNKNOWN: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 1
        """The received error code is not known in this version."""

        FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 2
        """An active feed already exists for this customer and place holder type."""

        CANNOT_CREATE_FOR_REMOVED_FEED: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 3
        """The specified feed is removed."""

        CANNOT_CREATE_ALREADY_EXISTING_CUSTOMER_FEED: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 4
        """The CustomerFeed already exists. Update should be used to modify the
        existing CustomerFeed.
        """

        CANNOT_MODIFY_REMOVED_CUSTOMER_FEED: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 5
        """Cannot update removed customer feed."""

        INVALID_PLACEHOLDER_TYPE: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 6
        """Invalid placeholder type."""

        MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 7
        """Feed mapping for this placeholder type does not exist."""

        PLACEHOLDER_TYPE_NOT_ALLOWED_ON_CUSTOMER_FEED: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 8
        """Placeholder not allowed at the account level."""

    class CustomerFeedError(_CustomerFeedError, metaclass=_CustomerFeedErrorEnumTypeWrapper):
        """Enum describing possible customer feed errors."""
        pass

    UNSPECIFIED: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 0
    """Enum unspecified."""

    UNKNOWN: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 1
    """The received error code is not known in this version."""

    FEED_ALREADY_EXISTS_FOR_PLACEHOLDER_TYPE: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 2
    """An active feed already exists for this customer and place holder type."""

    CANNOT_CREATE_FOR_REMOVED_FEED: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 3
    """The specified feed is removed."""

    CANNOT_CREATE_ALREADY_EXISTING_CUSTOMER_FEED: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 4
    """The CustomerFeed already exists. Update should be used to modify the
    existing CustomerFeed.
    """

    CANNOT_MODIFY_REMOVED_CUSTOMER_FEED: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 5
    """Cannot update removed customer feed."""

    INVALID_PLACEHOLDER_TYPE: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 6
    """Invalid placeholder type."""

    MISSING_FEEDMAPPING_FOR_PLACEHOLDER_TYPE: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 7
    """Feed mapping for this placeholder type does not exist."""

    PLACEHOLDER_TYPE_NOT_ALLOWED_ON_CUSTOMER_FEED: CustomerFeedErrorEnum.CustomerFeedError.ValueType = ...  # 8
    """Placeholder not allowed at the account level."""


    def __init__(self,
        ) -> None: ...
global___CustomerFeedErrorEnum = CustomerFeedErrorEnum
