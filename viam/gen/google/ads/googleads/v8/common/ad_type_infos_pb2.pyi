"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v8.common.ad_asset_pb2
import google.ads.googleads.v8.enums.call_conversion_reporting_state_pb2
import google.ads.googleads.v8.enums.display_ad_format_setting_pb2
import google.ads.googleads.v8.enums.display_upload_product_type_pb2
import google.ads.googleads.v8.enums.legacy_app_install_ad_app_store_pb2
import google.ads.googleads.v8.enums.mime_type_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TextAdInfo(google.protobuf.message.Message):
    """Proto file containing info messages for specific ad types.

    A text ad.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINE_FIELD_NUMBER: builtins.int
    DESCRIPTION1_FIELD_NUMBER: builtins.int
    DESCRIPTION2_FIELD_NUMBER: builtins.int
    headline: typing.Text = ...
    """The headline of the ad."""

    description1: typing.Text = ...
    """The first line of the ad's description."""

    description2: typing.Text = ...
    """The second line of the ad's description."""

    def __init__(self,
        *,
        headline : typing.Optional[typing.Text] = ...,
        description1 : typing.Optional[typing.Text] = ...,
        description2 : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description1",b"_description1","_description2",b"_description2","_headline",b"_headline","description1",b"description1","description2",b"description2","headline",b"headline"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description1",b"_description1","_description2",b"_description2","_headline",b"_headline","description1",b"description1","description2",b"description2","headline",b"headline"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description1",b"_description1"]) -> typing.Optional[typing_extensions.Literal["description1"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description2",b"_description2"]) -> typing.Optional[typing_extensions.Literal["description2"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_headline",b"_headline"]) -> typing.Optional[typing_extensions.Literal["headline"]]: ...
global___TextAdInfo = TextAdInfo

class ExpandedTextAdInfo(google.protobuf.message.Message):
    """An expanded text ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINE_PART1_FIELD_NUMBER: builtins.int
    HEADLINE_PART2_FIELD_NUMBER: builtins.int
    HEADLINE_PART3_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DESCRIPTION2_FIELD_NUMBER: builtins.int
    PATH1_FIELD_NUMBER: builtins.int
    PATH2_FIELD_NUMBER: builtins.int
    headline_part1: typing.Text = ...
    """The first part of the ad's headline."""

    headline_part2: typing.Text = ...
    """The second part of the ad's headline."""

    headline_part3: typing.Text = ...
    """The third part of the ad's headline."""

    description: typing.Text = ...
    """The description of the ad."""

    description2: typing.Text = ...
    """The second description of the ad."""

    path1: typing.Text = ...
    """The text that can appear alongside the ad's displayed URL."""

    path2: typing.Text = ...
    """Additional text that can appear alongside the ad's displayed URL."""

    def __init__(self,
        *,
        headline_part1 : typing.Optional[typing.Text] = ...,
        headline_part2 : typing.Optional[typing.Text] = ...,
        headline_part3 : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        description2 : typing.Optional[typing.Text] = ...,
        path1 : typing.Optional[typing.Text] = ...,
        path2 : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_description2",b"_description2","_headline_part1",b"_headline_part1","_headline_part2",b"_headline_part2","_headline_part3",b"_headline_part3","_path1",b"_path1","_path2",b"_path2","description",b"description","description2",b"description2","headline_part1",b"headline_part1","headline_part2",b"headline_part2","headline_part3",b"headline_part3","path1",b"path1","path2",b"path2"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_description2",b"_description2","_headline_part1",b"_headline_part1","_headline_part2",b"_headline_part2","_headline_part3",b"_headline_part3","_path1",b"_path1","_path2",b"_path2","description",b"description","description2",b"description2","headline_part1",b"headline_part1","headline_part2",b"headline_part2","headline_part3",b"headline_part3","path1",b"path1","path2",b"path2"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description2",b"_description2"]) -> typing.Optional[typing_extensions.Literal["description2"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_headline_part1",b"_headline_part1"]) -> typing.Optional[typing_extensions.Literal["headline_part1"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_headline_part2",b"_headline_part2"]) -> typing.Optional[typing_extensions.Literal["headline_part2"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_headline_part3",b"_headline_part3"]) -> typing.Optional[typing_extensions.Literal["headline_part3"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path1",b"_path1"]) -> typing.Optional[typing_extensions.Literal["path1"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path2",b"_path2"]) -> typing.Optional[typing_extensions.Literal["path2"]]: ...
global___ExpandedTextAdInfo = ExpandedTextAdInfo

class ExpandedDynamicSearchAdInfo(google.protobuf.message.Message):
    """An expanded dynamic search ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DESCRIPTION2_FIELD_NUMBER: builtins.int
    description: typing.Text = ...
    """The description of the ad."""

    description2: typing.Text = ...
    """The second description of the ad."""

    def __init__(self,
        *,
        description : typing.Optional[typing.Text] = ...,
        description2 : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_description2",b"_description2","description",b"description","description2",b"description2"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_description2",b"_description2","description",b"description","description2",b"description2"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description2",b"_description2"]) -> typing.Optional[typing_extensions.Literal["description2"]]: ...
global___ExpandedDynamicSearchAdInfo = ExpandedDynamicSearchAdInfo

class HotelAdInfo(google.protobuf.message.Message):
    """A hotel ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___HotelAdInfo = HotelAdInfo

class ShoppingSmartAdInfo(google.protobuf.message.Message):
    """A Smart Shopping ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ShoppingSmartAdInfo = ShoppingSmartAdInfo

class ShoppingProductAdInfo(google.protobuf.message.Message):
    """A standard Shopping ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___ShoppingProductAdInfo = ShoppingProductAdInfo

class ShoppingComparisonListingAdInfo(google.protobuf.message.Message):
    """A Shopping Comparison Listing ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINE_FIELD_NUMBER: builtins.int
    headline: typing.Text = ...
    """Headline of the ad. This field is required. Allowed length is between 25
    and 45 characters.
    """

    def __init__(self,
        *,
        headline : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_headline",b"_headline","headline",b"headline"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_headline",b"_headline","headline",b"headline"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_headline",b"_headline"]) -> typing.Optional[typing_extensions.Literal["headline"]]: ...
global___ShoppingComparisonListingAdInfo = ShoppingComparisonListingAdInfo

class GmailAdInfo(google.protobuf.message.Message):
    """A Gmail ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEASER_FIELD_NUMBER: builtins.int
    HEADER_IMAGE_FIELD_NUMBER: builtins.int
    MARKETING_IMAGE_FIELD_NUMBER: builtins.int
    MARKETING_IMAGE_HEADLINE_FIELD_NUMBER: builtins.int
    MARKETING_IMAGE_DESCRIPTION_FIELD_NUMBER: builtins.int
    MARKETING_IMAGE_DISPLAY_CALL_TO_ACTION_FIELD_NUMBER: builtins.int
    PRODUCT_IMAGES_FIELD_NUMBER: builtins.int
    PRODUCT_VIDEOS_FIELD_NUMBER: builtins.int
    @property
    def teaser(self) -> global___GmailTeaser:
        """The Gmail teaser."""
        pass
    header_image: typing.Text = ...
    """The MediaFile resource name of the header image. Valid image types are GIF,
    JPEG and PNG. The minimum size is 300x100 pixels and the aspect ratio must
    be between 3:1 and 5:1 (+-1%).
    """

    marketing_image: typing.Text = ...
    """The MediaFile resource name of the marketing image. Valid image types are
    GIF, JPEG and PNG. The image must either be landscape with a minimum size
    of 600x314 pixels and aspect ratio of 600:314 (+-1%) or square with a
    minimum size of 300x300 pixels and aspect ratio of 1:1 (+-1%)
    """

    marketing_image_headline: typing.Text = ...
    """Headline of the marketing image."""

    marketing_image_description: typing.Text = ...
    """Description of the marketing image."""

    @property
    def marketing_image_display_call_to_action(self) -> global___DisplayCallToAction:
        """Display-call-to-action of the marketing image."""
        pass
    @property
    def product_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProductImage]:
        """Product images. Up to 15 images are supported."""
        pass
    @property
    def product_videos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ProductVideo]:
        """Product videos. Up to 7 videos are supported. At least one product video
        or a marketing image must be specified.
        """
        pass
    def __init__(self,
        *,
        teaser : typing.Optional[global___GmailTeaser] = ...,
        header_image : typing.Optional[typing.Text] = ...,
        marketing_image : typing.Optional[typing.Text] = ...,
        marketing_image_headline : typing.Optional[typing.Text] = ...,
        marketing_image_description : typing.Optional[typing.Text] = ...,
        marketing_image_display_call_to_action : typing.Optional[global___DisplayCallToAction] = ...,
        product_images : typing.Optional[typing.Iterable[global___ProductImage]] = ...,
        product_videos : typing.Optional[typing.Iterable[global___ProductVideo]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_header_image",b"_header_image","_marketing_image",b"_marketing_image","_marketing_image_description",b"_marketing_image_description","_marketing_image_headline",b"_marketing_image_headline","header_image",b"header_image","marketing_image",b"marketing_image","marketing_image_description",b"marketing_image_description","marketing_image_display_call_to_action",b"marketing_image_display_call_to_action","marketing_image_headline",b"marketing_image_headline","teaser",b"teaser"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_header_image",b"_header_image","_marketing_image",b"_marketing_image","_marketing_image_description",b"_marketing_image_description","_marketing_image_headline",b"_marketing_image_headline","header_image",b"header_image","marketing_image",b"marketing_image","marketing_image_description",b"marketing_image_description","marketing_image_display_call_to_action",b"marketing_image_display_call_to_action","marketing_image_headline",b"marketing_image_headline","product_images",b"product_images","product_videos",b"product_videos","teaser",b"teaser"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_header_image",b"_header_image"]) -> typing.Optional[typing_extensions.Literal["header_image"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_marketing_image",b"_marketing_image"]) -> typing.Optional[typing_extensions.Literal["marketing_image"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_marketing_image_description",b"_marketing_image_description"]) -> typing.Optional[typing_extensions.Literal["marketing_image_description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_marketing_image_headline",b"_marketing_image_headline"]) -> typing.Optional[typing_extensions.Literal["marketing_image_headline"]]: ...
global___GmailAdInfo = GmailAdInfo

class GmailTeaser(google.protobuf.message.Message):
    """Gmail teaser data. The teaser is a small header that acts as an invitation
    to view the rest of the ad (the body).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    BUSINESS_NAME_FIELD_NUMBER: builtins.int
    LOGO_IMAGE_FIELD_NUMBER: builtins.int
    headline: typing.Text = ...
    """Headline of the teaser."""

    description: typing.Text = ...
    """Description of the teaser."""

    business_name: typing.Text = ...
    """Business name of the advertiser."""

    logo_image: typing.Text = ...
    """The MediaFile resource name of the logo image. Valid image types are GIF,
    JPEG and PNG. The minimum size is 144x144 pixels and the aspect ratio must
    be 1:1 (+-1%).
    """

    def __init__(self,
        *,
        headline : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        business_name : typing.Optional[typing.Text] = ...,
        logo_image : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_business_name",b"_business_name","_description",b"_description","_headline",b"_headline","_logo_image",b"_logo_image","business_name",b"business_name","description",b"description","headline",b"headline","logo_image",b"logo_image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_business_name",b"_business_name","_description",b"_description","_headline",b"_headline","_logo_image",b"_logo_image","business_name",b"business_name","description",b"description","headline",b"headline","logo_image",b"logo_image"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_business_name",b"_business_name"]) -> typing.Optional[typing_extensions.Literal["business_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_headline",b"_headline"]) -> typing.Optional[typing_extensions.Literal["headline"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_logo_image",b"_logo_image"]) -> typing.Optional[typing_extensions.Literal["logo_image"]]: ...
global___GmailTeaser = GmailTeaser

class DisplayCallToAction(google.protobuf.message.Message):
    """Data for display call to action. The call to action is a piece of the ad
    that prompts the user to do something. Like clicking a link or making a phone
    call.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TEXT_FIELD_NUMBER: builtins.int
    TEXT_COLOR_FIELD_NUMBER: builtins.int
    URL_COLLECTION_ID_FIELD_NUMBER: builtins.int
    text: typing.Text = ...
    """Text for the display-call-to-action."""

    text_color: typing.Text = ...
    """Text color for the display-call-to-action in hexadecimal, e.g. #ffffff for
    white.
    """

    url_collection_id: typing.Text = ...
    """Identifies the URL collection in the `ad.url_collections` field. If not
    set, the URL defaults to `final_url`.
    """

    def __init__(self,
        *,
        text : typing.Optional[typing.Text] = ...,
        text_color : typing.Optional[typing.Text] = ...,
        url_collection_id : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_text",b"_text","_text_color",b"_text_color","_url_collection_id",b"_url_collection_id","text",b"text","text_color",b"text_color","url_collection_id",b"url_collection_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_text",b"_text","_text_color",b"_text_color","_url_collection_id",b"_url_collection_id","text",b"text","text_color",b"text_color","url_collection_id",b"url_collection_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_text",b"_text"]) -> typing.Optional[typing_extensions.Literal["text"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_text_color",b"_text_color"]) -> typing.Optional[typing_extensions.Literal["text_color"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url_collection_id",b"_url_collection_id"]) -> typing.Optional[typing_extensions.Literal["url_collection_id"]]: ...
global___DisplayCallToAction = DisplayCallToAction

class ProductImage(google.protobuf.message.Message):
    """Product image specific data."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRODUCT_IMAGE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DISPLAY_CALL_TO_ACTION_FIELD_NUMBER: builtins.int
    product_image: typing.Text = ...
    """The MediaFile resource name of the product image. Valid image types are
    GIF, JPEG and PNG. The minimum size is 300x300 pixels and the aspect ratio
    must be 1:1 (+-1%).
    """

    description: typing.Text = ...
    """Description of the product."""

    @property
    def display_call_to_action(self) -> global___DisplayCallToAction:
        """Display-call-to-action of the product image."""
        pass
    def __init__(self,
        *,
        product_image : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        display_call_to_action : typing.Optional[global___DisplayCallToAction] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_product_image",b"_product_image","description",b"description","display_call_to_action",b"display_call_to_action","product_image",b"product_image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_product_image",b"_product_image","description",b"description","display_call_to_action",b"display_call_to_action","product_image",b"product_image"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_product_image",b"_product_image"]) -> typing.Optional[typing_extensions.Literal["product_image"]]: ...
global___ProductImage = ProductImage

class ProductVideo(google.protobuf.message.Message):
    """Product video specific data."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRODUCT_VIDEO_FIELD_NUMBER: builtins.int
    product_video: typing.Text = ...
    """The MediaFile resource name of a video which must be hosted on YouTube."""

    def __init__(self,
        *,
        product_video : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_product_video",b"_product_video","product_video",b"product_video"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_product_video",b"_product_video","product_video",b"product_video"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_product_video",b"_product_video"]) -> typing.Optional[typing_extensions.Literal["product_video"]]: ...
global___ProductVideo = ProductVideo

class ImageAdInfo(google.protobuf.message.Message):
    """An image ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PIXEL_WIDTH_FIELD_NUMBER: builtins.int
    PIXEL_HEIGHT_FIELD_NUMBER: builtins.int
    IMAGE_URL_FIELD_NUMBER: builtins.int
    PREVIEW_PIXEL_WIDTH_FIELD_NUMBER: builtins.int
    PREVIEW_PIXEL_HEIGHT_FIELD_NUMBER: builtins.int
    PREVIEW_IMAGE_URL_FIELD_NUMBER: builtins.int
    MIME_TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    MEDIA_FILE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    AD_ID_TO_COPY_IMAGE_FROM_FIELD_NUMBER: builtins.int
    pixel_width: builtins.int = ...
    """Width in pixels of the full size image."""

    pixel_height: builtins.int = ...
    """Height in pixels of the full size image."""

    image_url: typing.Text = ...
    """URL of the full size image."""

    preview_pixel_width: builtins.int = ...
    """Width in pixels of the preview size image."""

    preview_pixel_height: builtins.int = ...
    """Height in pixels of the preview size image."""

    preview_image_url: typing.Text = ...
    """URL of the preview size image."""

    mime_type: google.ads.googleads.v8.enums.mime_type_pb2.MimeTypeEnum.MimeType.ValueType = ...
    """The mime type of the image."""

    name: typing.Text = ...
    """The name of the image. If the image was created from a MediaFile, this is
    the MediaFile's name. If the image was created from bytes, this is empty.
    """

    media_file: typing.Text = ...
    """The MediaFile resource to use for the image."""

    data: builtins.bytes = ...
    """Raw image data as bytes."""

    ad_id_to_copy_image_from: builtins.int = ...
    """An ad ID to copy the image from."""

    def __init__(self,
        *,
        pixel_width : typing.Optional[builtins.int] = ...,
        pixel_height : typing.Optional[builtins.int] = ...,
        image_url : typing.Optional[typing.Text] = ...,
        preview_pixel_width : typing.Optional[builtins.int] = ...,
        preview_pixel_height : typing.Optional[builtins.int] = ...,
        preview_image_url : typing.Optional[typing.Text] = ...,
        mime_type : google.ads.googleads.v8.enums.mime_type_pb2.MimeTypeEnum.MimeType.ValueType = ...,
        name : typing.Optional[typing.Text] = ...,
        media_file : typing.Text = ...,
        data : builtins.bytes = ...,
        ad_id_to_copy_image_from : builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_image_url",b"_image_url","_name",b"_name","_pixel_height",b"_pixel_height","_pixel_width",b"_pixel_width","_preview_image_url",b"_preview_image_url","_preview_pixel_height",b"_preview_pixel_height","_preview_pixel_width",b"_preview_pixel_width","ad_id_to_copy_image_from",b"ad_id_to_copy_image_from","data",b"data","image",b"image","image_url",b"image_url","media_file",b"media_file","name",b"name","pixel_height",b"pixel_height","pixel_width",b"pixel_width","preview_image_url",b"preview_image_url","preview_pixel_height",b"preview_pixel_height","preview_pixel_width",b"preview_pixel_width"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_image_url",b"_image_url","_name",b"_name","_pixel_height",b"_pixel_height","_pixel_width",b"_pixel_width","_preview_image_url",b"_preview_image_url","_preview_pixel_height",b"_preview_pixel_height","_preview_pixel_width",b"_preview_pixel_width","ad_id_to_copy_image_from",b"ad_id_to_copy_image_from","data",b"data","image",b"image","image_url",b"image_url","media_file",b"media_file","mime_type",b"mime_type","name",b"name","pixel_height",b"pixel_height","pixel_width",b"pixel_width","preview_image_url",b"preview_image_url","preview_pixel_height",b"preview_pixel_height","preview_pixel_width",b"preview_pixel_width"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_image_url",b"_image_url"]) -> typing.Optional[typing_extensions.Literal["image_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pixel_height",b"_pixel_height"]) -> typing.Optional[typing_extensions.Literal["pixel_height"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_pixel_width",b"_pixel_width"]) -> typing.Optional[typing_extensions.Literal["pixel_width"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preview_image_url",b"_preview_image_url"]) -> typing.Optional[typing_extensions.Literal["preview_image_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preview_pixel_height",b"_preview_pixel_height"]) -> typing.Optional[typing_extensions.Literal["preview_pixel_height"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preview_pixel_width",b"_preview_pixel_width"]) -> typing.Optional[typing_extensions.Literal["preview_pixel_width"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["image",b"image"]) -> typing.Optional[typing_extensions.Literal["media_file","data","ad_id_to_copy_image_from"]]: ...
global___ImageAdInfo = ImageAdInfo

class VideoBumperInStreamAdInfo(google.protobuf.message.Message):
    """Representation of video bumper in-stream ad format (very short in-stream
    non-skippable video ad).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMPANION_BANNER_FIELD_NUMBER: builtins.int
    companion_banner: typing.Text = ...
    """The MediaFile resource name of the companion banner used with the ad."""

    def __init__(self,
        *,
        companion_banner : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_companion_banner",b"_companion_banner","companion_banner",b"companion_banner"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_companion_banner",b"_companion_banner","companion_banner",b"companion_banner"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_companion_banner",b"_companion_banner"]) -> typing.Optional[typing_extensions.Literal["companion_banner"]]: ...
global___VideoBumperInStreamAdInfo = VideoBumperInStreamAdInfo

class VideoNonSkippableInStreamAdInfo(google.protobuf.message.Message):
    """Representation of video non-skippable in-stream ad format (15 second
    in-stream non-skippable video ad).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COMPANION_BANNER_FIELD_NUMBER: builtins.int
    companion_banner: typing.Text = ...
    """The MediaFile resource name of the companion banner used with the ad."""

    def __init__(self,
        *,
        companion_banner : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_companion_banner",b"_companion_banner","companion_banner",b"companion_banner"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_companion_banner",b"_companion_banner","companion_banner",b"companion_banner"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_companion_banner",b"_companion_banner"]) -> typing.Optional[typing_extensions.Literal["companion_banner"]]: ...
global___VideoNonSkippableInStreamAdInfo = VideoNonSkippableInStreamAdInfo

class VideoTrueViewInStreamAdInfo(google.protobuf.message.Message):
    """Representation of video TrueView in-stream ad format (ad shown during video
    playback, often at beginning, which displays a skip button a few seconds into
    the video).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACTION_BUTTON_LABEL_FIELD_NUMBER: builtins.int
    ACTION_HEADLINE_FIELD_NUMBER: builtins.int
    COMPANION_BANNER_FIELD_NUMBER: builtins.int
    action_button_label: typing.Text = ...
    """Label on the CTA (call-to-action) button taking the user to the video ad's
    final URL.
    Required for TrueView for action campaigns, optional otherwise.
    """

    action_headline: typing.Text = ...
    """Additional text displayed with the CTA (call-to-action) button to give
    context and encourage clicking on the button.
    """

    companion_banner: typing.Text = ...
    """The MediaFile resource name of the companion banner used with the ad."""

    def __init__(self,
        *,
        action_button_label : typing.Optional[typing.Text] = ...,
        action_headline : typing.Optional[typing.Text] = ...,
        companion_banner : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_action_button_label",b"_action_button_label","_action_headline",b"_action_headline","_companion_banner",b"_companion_banner","action_button_label",b"action_button_label","action_headline",b"action_headline","companion_banner",b"companion_banner"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_action_button_label",b"_action_button_label","_action_headline",b"_action_headline","_companion_banner",b"_companion_banner","action_button_label",b"action_button_label","action_headline",b"action_headline","companion_banner",b"companion_banner"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_action_button_label",b"_action_button_label"]) -> typing.Optional[typing_extensions.Literal["action_button_label"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_action_headline",b"_action_headline"]) -> typing.Optional[typing_extensions.Literal["action_headline"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_companion_banner",b"_companion_banner"]) -> typing.Optional[typing_extensions.Literal["companion_banner"]]: ...
global___VideoTrueViewInStreamAdInfo = VideoTrueViewInStreamAdInfo

class VideoOutstreamAdInfo(google.protobuf.message.Message):
    """Representation of video out-stream ad format (ad shown alongside a feed
    with automatic playback, without sound).
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    headline: typing.Text = ...
    """The headline of the ad."""

    description: typing.Text = ...
    """The description line."""

    def __init__(self,
        *,
        headline : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description",b"_description","_headline",b"_headline","description",b"description","headline",b"headline"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description",b"_description","_headline",b"_headline","description",b"description","headline",b"headline"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_headline",b"_headline"]) -> typing.Optional[typing_extensions.Literal["headline"]]: ...
global___VideoOutstreamAdInfo = VideoOutstreamAdInfo

class VideoTrueViewDiscoveryAdInfo(google.protobuf.message.Message):
    """Representation of video TrueView discovery ad format."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINE_FIELD_NUMBER: builtins.int
    DESCRIPTION1_FIELD_NUMBER: builtins.int
    DESCRIPTION2_FIELD_NUMBER: builtins.int
    headline: typing.Text = ...
    """The headline of the ad."""

    description1: typing.Text = ...
    """First text line for a TrueView video discovery ad."""

    description2: typing.Text = ...
    """Second text line for a TrueView video discovery ad."""

    def __init__(self,
        *,
        headline : typing.Optional[typing.Text] = ...,
        description1 : typing.Optional[typing.Text] = ...,
        description2 : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description1",b"_description1","_description2",b"_description2","_headline",b"_headline","description1",b"description1","description2",b"description2","headline",b"headline"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description1",b"_description1","_description2",b"_description2","_headline",b"_headline","description1",b"description1","description2",b"description2","headline",b"headline"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description1",b"_description1"]) -> typing.Optional[typing_extensions.Literal["description1"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description2",b"_description2"]) -> typing.Optional[typing_extensions.Literal["description2"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_headline",b"_headline"]) -> typing.Optional[typing_extensions.Literal["headline"]]: ...
global___VideoTrueViewDiscoveryAdInfo = VideoTrueViewDiscoveryAdInfo

class VideoAdInfo(google.protobuf.message.Message):
    """A video ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MEDIA_FILE_FIELD_NUMBER: builtins.int
    IN_STREAM_FIELD_NUMBER: builtins.int
    BUMPER_FIELD_NUMBER: builtins.int
    OUT_STREAM_FIELD_NUMBER: builtins.int
    NON_SKIPPABLE_FIELD_NUMBER: builtins.int
    DISCOVERY_FIELD_NUMBER: builtins.int
    media_file: typing.Text = ...
    """The MediaFile resource to use for the video."""

    @property
    def in_stream(self) -> global___VideoTrueViewInStreamAdInfo:
        """Video TrueView in-stream ad format."""
        pass
    @property
    def bumper(self) -> global___VideoBumperInStreamAdInfo:
        """Video bumper in-stream ad format."""
        pass
    @property
    def out_stream(self) -> global___VideoOutstreamAdInfo:
        """Video out-stream ad format."""
        pass
    @property
    def non_skippable(self) -> global___VideoNonSkippableInStreamAdInfo:
        """Video non-skippable in-stream ad format."""
        pass
    @property
    def discovery(self) -> global___VideoTrueViewDiscoveryAdInfo:
        """Video TrueView discovery ad format."""
        pass
    def __init__(self,
        *,
        media_file : typing.Optional[typing.Text] = ...,
        in_stream : typing.Optional[global___VideoTrueViewInStreamAdInfo] = ...,
        bumper : typing.Optional[global___VideoBumperInStreamAdInfo] = ...,
        out_stream : typing.Optional[global___VideoOutstreamAdInfo] = ...,
        non_skippable : typing.Optional[global___VideoNonSkippableInStreamAdInfo] = ...,
        discovery : typing.Optional[global___VideoTrueViewDiscoveryAdInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_media_file",b"_media_file","bumper",b"bumper","discovery",b"discovery","format",b"format","in_stream",b"in_stream","media_file",b"media_file","non_skippable",b"non_skippable","out_stream",b"out_stream"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_media_file",b"_media_file","bumper",b"bumper","discovery",b"discovery","format",b"format","in_stream",b"in_stream","media_file",b"media_file","non_skippable",b"non_skippable","out_stream",b"out_stream"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_media_file",b"_media_file"]) -> typing.Optional[typing_extensions.Literal["media_file"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["format",b"format"]) -> typing.Optional[typing_extensions.Literal["in_stream","bumper","out_stream","non_skippable","discovery"]]: ...
global___VideoAdInfo = VideoAdInfo

class VideoResponsiveAdInfo(google.protobuf.message.Message):
    """A video responsive ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINES_FIELD_NUMBER: builtins.int
    LONG_HEADLINES_FIELD_NUMBER: builtins.int
    DESCRIPTIONS_FIELD_NUMBER: builtins.int
    CALL_TO_ACTIONS_FIELD_NUMBER: builtins.int
    VIDEOS_FIELD_NUMBER: builtins.int
    COMPANION_BANNERS_FIELD_NUMBER: builtins.int
    @property
    def headlines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets used for the short headline, e.g. the "Call To Action"
        banner. Currently, only a single value for the short headline is supported.
        """
        pass
    @property
    def long_headlines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets used for the long headline.
        Currently, only a single value for the long headline is supported.
        """
        pass
    @property
    def descriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets used for the description.
        Currently, only a single value for the description is supported.
        """
        pass
    @property
    def call_to_actions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets used for the button, e.g. the "Call To Action" button.
        Currently, only a single value for the button is supported.
        """
        pass
    @property
    def videos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdVideoAsset]:
        """List of YouTube video assets used for the ad.
        Currently, only a single value for the YouTube video asset is supported.
        """
        pass
    @property
    def companion_banners(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]:
        """List of image assets used for the companion banner.
        Currently, only a single value for the companion banner asset is supported.
        """
        pass
    def __init__(self,
        *,
        headlines : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        long_headlines : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        descriptions : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        call_to_actions : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        videos : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdVideoAsset]] = ...,
        companion_banners : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["call_to_actions",b"call_to_actions","companion_banners",b"companion_banners","descriptions",b"descriptions","headlines",b"headlines","long_headlines",b"long_headlines","videos",b"videos"]) -> None: ...
global___VideoResponsiveAdInfo = VideoResponsiveAdInfo

class ResponsiveSearchAdInfo(google.protobuf.message.Message):
    """A responsive search ad.

    Responsive search ads let you create an ad that adapts to show more text, and
    more relevant messages, to your customers. Enter multiple headlines and
    descriptions when creating a responsive search ad, and over time, Google Ads
    will automatically test different combinations and learn which combinations
    perform best. By adapting your ad's content to more closely match potential
    customers' search terms, responsive search ads may improve your campaign's
    performance.

    More information at https://support.google.com/google-ads/answer/7684791
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINES_FIELD_NUMBER: builtins.int
    DESCRIPTIONS_FIELD_NUMBER: builtins.int
    PATH1_FIELD_NUMBER: builtins.int
    PATH2_FIELD_NUMBER: builtins.int
    @property
    def headlines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for headlines. When the ad serves the headlines will
        be selected from this list.
        """
        pass
    @property
    def descriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for descriptions. When the ad serves the descriptions
        will be selected from this list.
        """
        pass
    path1: typing.Text = ...
    """First part of text that can be appended to the URL in the ad."""

    path2: typing.Text = ...
    """Second part of text that can be appended to the URL in the ad. This field
    can only be set when `path1` is also set.
    """

    def __init__(self,
        *,
        headlines : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        descriptions : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        path1 : typing.Optional[typing.Text] = ...,
        path2 : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_path1",b"_path1","_path2",b"_path2","path1",b"path1","path2",b"path2"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_path1",b"_path1","_path2",b"_path2","descriptions",b"descriptions","headlines",b"headlines","path1",b"path1","path2",b"path2"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path1",b"_path1"]) -> typing.Optional[typing_extensions.Literal["path1"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path2",b"_path2"]) -> typing.Optional[typing_extensions.Literal["path2"]]: ...
global___ResponsiveSearchAdInfo = ResponsiveSearchAdInfo

class LegacyResponsiveDisplayAdInfo(google.protobuf.message.Message):
    """A legacy responsive display ad. Ads of this type are labeled 'Responsive ads'
    in the Google Ads UI.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SHORT_HEADLINE_FIELD_NUMBER: builtins.int
    LONG_HEADLINE_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    BUSINESS_NAME_FIELD_NUMBER: builtins.int
    ALLOW_FLEXIBLE_COLOR_FIELD_NUMBER: builtins.int
    ACCENT_COLOR_FIELD_NUMBER: builtins.int
    MAIN_COLOR_FIELD_NUMBER: builtins.int
    CALL_TO_ACTION_TEXT_FIELD_NUMBER: builtins.int
    LOGO_IMAGE_FIELD_NUMBER: builtins.int
    SQUARE_LOGO_IMAGE_FIELD_NUMBER: builtins.int
    MARKETING_IMAGE_FIELD_NUMBER: builtins.int
    SQUARE_MARKETING_IMAGE_FIELD_NUMBER: builtins.int
    FORMAT_SETTING_FIELD_NUMBER: builtins.int
    PRICE_PREFIX_FIELD_NUMBER: builtins.int
    PROMO_TEXT_FIELD_NUMBER: builtins.int
    short_headline: typing.Text = ...
    """The short version of the ad's headline."""

    long_headline: typing.Text = ...
    """The long version of the ad's headline."""

    description: typing.Text = ...
    """The description of the ad."""

    business_name: typing.Text = ...
    """The business name in the ad."""

    allow_flexible_color: builtins.bool = ...
    """Advertiser's consent to allow flexible color. When true, the ad may be
    served with different color if necessary. When false, the ad will be served
    with the specified colors or a neutral color.
    The default value is `true`.
    Must be true if `main_color` and `accent_color` are not set.
    """

    accent_color: typing.Text = ...
    """The accent color of the ad in hexadecimal, e.g. #ffffff for white.
    If one of `main_color` and `accent_color` is set, the other is required as
    well.
    """

    main_color: typing.Text = ...
    """The main color of the ad in hexadecimal, e.g. #ffffff for white.
    If one of `main_color` and `accent_color` is set, the other is required as
    well.
    """

    call_to_action_text: typing.Text = ...
    """The call-to-action text for the ad."""

    logo_image: typing.Text = ...
    """The MediaFile resource name of the logo image used in the ad."""

    square_logo_image: typing.Text = ...
    """The MediaFile resource name of the square logo image used in the ad."""

    marketing_image: typing.Text = ...
    """The MediaFile resource name of the marketing image used in the ad."""

    square_marketing_image: typing.Text = ...
    """The MediaFile resource name of the square marketing image used in the ad."""

    format_setting: google.ads.googleads.v8.enums.display_ad_format_setting_pb2.DisplayAdFormatSettingEnum.DisplayAdFormatSetting.ValueType = ...
    """Specifies which format the ad will be served in. Default is ALL_FORMATS."""

    price_prefix: typing.Text = ...
    """Prefix before price. E.g. 'as low as'."""

    promo_text: typing.Text = ...
    """Promotion text used for dynamic formats of responsive ads. For example
    'Free two-day shipping'.
    """

    def __init__(self,
        *,
        short_headline : typing.Optional[typing.Text] = ...,
        long_headline : typing.Optional[typing.Text] = ...,
        description : typing.Optional[typing.Text] = ...,
        business_name : typing.Optional[typing.Text] = ...,
        allow_flexible_color : typing.Optional[builtins.bool] = ...,
        accent_color : typing.Optional[typing.Text] = ...,
        main_color : typing.Optional[typing.Text] = ...,
        call_to_action_text : typing.Optional[typing.Text] = ...,
        logo_image : typing.Optional[typing.Text] = ...,
        square_logo_image : typing.Optional[typing.Text] = ...,
        marketing_image : typing.Optional[typing.Text] = ...,
        square_marketing_image : typing.Optional[typing.Text] = ...,
        format_setting : google.ads.googleads.v8.enums.display_ad_format_setting_pb2.DisplayAdFormatSettingEnum.DisplayAdFormatSetting.ValueType = ...,
        price_prefix : typing.Optional[typing.Text] = ...,
        promo_text : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_accent_color",b"_accent_color","_allow_flexible_color",b"_allow_flexible_color","_business_name",b"_business_name","_call_to_action_text",b"_call_to_action_text","_description",b"_description","_logo_image",b"_logo_image","_long_headline",b"_long_headline","_main_color",b"_main_color","_marketing_image",b"_marketing_image","_price_prefix",b"_price_prefix","_promo_text",b"_promo_text","_short_headline",b"_short_headline","_square_logo_image",b"_square_logo_image","_square_marketing_image",b"_square_marketing_image","accent_color",b"accent_color","allow_flexible_color",b"allow_flexible_color","business_name",b"business_name","call_to_action_text",b"call_to_action_text","description",b"description","logo_image",b"logo_image","long_headline",b"long_headline","main_color",b"main_color","marketing_image",b"marketing_image","price_prefix",b"price_prefix","promo_text",b"promo_text","short_headline",b"short_headline","square_logo_image",b"square_logo_image","square_marketing_image",b"square_marketing_image"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_accent_color",b"_accent_color","_allow_flexible_color",b"_allow_flexible_color","_business_name",b"_business_name","_call_to_action_text",b"_call_to_action_text","_description",b"_description","_logo_image",b"_logo_image","_long_headline",b"_long_headline","_main_color",b"_main_color","_marketing_image",b"_marketing_image","_price_prefix",b"_price_prefix","_promo_text",b"_promo_text","_short_headline",b"_short_headline","_square_logo_image",b"_square_logo_image","_square_marketing_image",b"_square_marketing_image","accent_color",b"accent_color","allow_flexible_color",b"allow_flexible_color","business_name",b"business_name","call_to_action_text",b"call_to_action_text","description",b"description","format_setting",b"format_setting","logo_image",b"logo_image","long_headline",b"long_headline","main_color",b"main_color","marketing_image",b"marketing_image","price_prefix",b"price_prefix","promo_text",b"promo_text","short_headline",b"short_headline","square_logo_image",b"square_logo_image","square_marketing_image",b"square_marketing_image"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_accent_color",b"_accent_color"]) -> typing.Optional[typing_extensions.Literal["accent_color"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_allow_flexible_color",b"_allow_flexible_color"]) -> typing.Optional[typing_extensions.Literal["allow_flexible_color"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_business_name",b"_business_name"]) -> typing.Optional[typing_extensions.Literal["business_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_call_to_action_text",b"_call_to_action_text"]) -> typing.Optional[typing_extensions.Literal["call_to_action_text"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description",b"_description"]) -> typing.Optional[typing_extensions.Literal["description"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_logo_image",b"_logo_image"]) -> typing.Optional[typing_extensions.Literal["logo_image"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_long_headline",b"_long_headline"]) -> typing.Optional[typing_extensions.Literal["long_headline"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_main_color",b"_main_color"]) -> typing.Optional[typing_extensions.Literal["main_color"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_marketing_image",b"_marketing_image"]) -> typing.Optional[typing_extensions.Literal["marketing_image"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_price_prefix",b"_price_prefix"]) -> typing.Optional[typing_extensions.Literal["price_prefix"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_promo_text",b"_promo_text"]) -> typing.Optional[typing_extensions.Literal["promo_text"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_short_headline",b"_short_headline"]) -> typing.Optional[typing_extensions.Literal["short_headline"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_square_logo_image",b"_square_logo_image"]) -> typing.Optional[typing_extensions.Literal["square_logo_image"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_square_marketing_image",b"_square_marketing_image"]) -> typing.Optional[typing_extensions.Literal["square_marketing_image"]]: ...
global___LegacyResponsiveDisplayAdInfo = LegacyResponsiveDisplayAdInfo

class AppAdInfo(google.protobuf.message.Message):
    """An app ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MANDATORY_AD_TEXT_FIELD_NUMBER: builtins.int
    HEADLINES_FIELD_NUMBER: builtins.int
    DESCRIPTIONS_FIELD_NUMBER: builtins.int
    IMAGES_FIELD_NUMBER: builtins.int
    YOUTUBE_VIDEOS_FIELD_NUMBER: builtins.int
    HTML5_MEDIA_BUNDLES_FIELD_NUMBER: builtins.int
    @property
    def mandatory_ad_text(self) -> google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset:
        """Mandatory ad text."""
        pass
    @property
    def headlines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for headlines. When the ad serves the headlines will
        be selected from this list.
        """
        pass
    @property
    def descriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for descriptions. When the ad serves the descriptions
        will be selected from this list.
        """
        pass
    @property
    def images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]:
        """List of image assets that may be displayed with the ad."""
        pass
    @property
    def youtube_videos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdVideoAsset]:
        """List of YouTube video assets that may be displayed with the ad."""
        pass
    @property
    def html5_media_bundles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdMediaBundleAsset]:
        """List of media bundle assets that may be used with the ad."""
        pass
    def __init__(self,
        *,
        mandatory_ad_text : typing.Optional[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset] = ...,
        headlines : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        descriptions : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        images : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]] = ...,
        youtube_videos : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdVideoAsset]] = ...,
        html5_media_bundles : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdMediaBundleAsset]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["mandatory_ad_text",b"mandatory_ad_text"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["descriptions",b"descriptions","headlines",b"headlines","html5_media_bundles",b"html5_media_bundles","images",b"images","mandatory_ad_text",b"mandatory_ad_text","youtube_videos",b"youtube_videos"]) -> None: ...
global___AppAdInfo = AppAdInfo

class AppEngagementAdInfo(google.protobuf.message.Message):
    """App engagement ads allow you to write text encouraging a specific action in
    the app, like checking in, making a purchase, or booking a flight.
    They allow you to send users to a specific part of your app where they can
    find what they're looking for easier and faster.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINES_FIELD_NUMBER: builtins.int
    DESCRIPTIONS_FIELD_NUMBER: builtins.int
    IMAGES_FIELD_NUMBER: builtins.int
    VIDEOS_FIELD_NUMBER: builtins.int
    @property
    def headlines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for headlines. When the ad serves the headlines will
        be selected from this list.
        """
        pass
    @property
    def descriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for descriptions. When the ad serves the descriptions
        will be selected from this list.
        """
        pass
    @property
    def images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]:
        """List of image assets that may be displayed with the ad."""
        pass
    @property
    def videos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdVideoAsset]:
        """List of video assets that may be displayed with the ad."""
        pass
    def __init__(self,
        *,
        headlines : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        descriptions : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        images : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]] = ...,
        videos : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdVideoAsset]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["descriptions",b"descriptions","headlines",b"headlines","images",b"images","videos",b"videos"]) -> None: ...
global___AppEngagementAdInfo = AppEngagementAdInfo

class LegacyAppInstallAdInfo(google.protobuf.message.Message):
    """A legacy app install ad that only can be used by a few select customers."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    APP_ID_FIELD_NUMBER: builtins.int
    APP_STORE_FIELD_NUMBER: builtins.int
    HEADLINE_FIELD_NUMBER: builtins.int
    DESCRIPTION1_FIELD_NUMBER: builtins.int
    DESCRIPTION2_FIELD_NUMBER: builtins.int
    app_id: typing.Text = ...
    """The ID of the mobile app."""

    app_store: google.ads.googleads.v8.enums.legacy_app_install_ad_app_store_pb2.LegacyAppInstallAdAppStoreEnum.LegacyAppInstallAdAppStore.ValueType = ...
    """The app store the mobile app is available in."""

    headline: typing.Text = ...
    """The headline of the ad."""

    description1: typing.Text = ...
    """The first description line of the ad."""

    description2: typing.Text = ...
    """The second description line of the ad."""

    def __init__(self,
        *,
        app_id : typing.Optional[typing.Text] = ...,
        app_store : google.ads.googleads.v8.enums.legacy_app_install_ad_app_store_pb2.LegacyAppInstallAdAppStoreEnum.LegacyAppInstallAdAppStore.ValueType = ...,
        headline : typing.Optional[typing.Text] = ...,
        description1 : typing.Optional[typing.Text] = ...,
        description2 : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_app_id",b"_app_id","_description1",b"_description1","_description2",b"_description2","_headline",b"_headline","app_id",b"app_id","description1",b"description1","description2",b"description2","headline",b"headline"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_app_id",b"_app_id","_description1",b"_description1","_description2",b"_description2","_headline",b"_headline","app_id",b"app_id","app_store",b"app_store","description1",b"description1","description2",b"description2","headline",b"headline"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_app_id",b"_app_id"]) -> typing.Optional[typing_extensions.Literal["app_id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description1",b"_description1"]) -> typing.Optional[typing_extensions.Literal["description1"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description2",b"_description2"]) -> typing.Optional[typing_extensions.Literal["description2"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_headline",b"_headline"]) -> typing.Optional[typing_extensions.Literal["headline"]]: ...
global___LegacyAppInstallAdInfo = LegacyAppInstallAdInfo

class ResponsiveDisplayAdInfo(google.protobuf.message.Message):
    """A responsive display ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MARKETING_IMAGES_FIELD_NUMBER: builtins.int
    SQUARE_MARKETING_IMAGES_FIELD_NUMBER: builtins.int
    LOGO_IMAGES_FIELD_NUMBER: builtins.int
    SQUARE_LOGO_IMAGES_FIELD_NUMBER: builtins.int
    HEADLINES_FIELD_NUMBER: builtins.int
    LONG_HEADLINE_FIELD_NUMBER: builtins.int
    DESCRIPTIONS_FIELD_NUMBER: builtins.int
    YOUTUBE_VIDEOS_FIELD_NUMBER: builtins.int
    BUSINESS_NAME_FIELD_NUMBER: builtins.int
    MAIN_COLOR_FIELD_NUMBER: builtins.int
    ACCENT_COLOR_FIELD_NUMBER: builtins.int
    ALLOW_FLEXIBLE_COLOR_FIELD_NUMBER: builtins.int
    CALL_TO_ACTION_TEXT_FIELD_NUMBER: builtins.int
    PRICE_PREFIX_FIELD_NUMBER: builtins.int
    PROMO_TEXT_FIELD_NUMBER: builtins.int
    FORMAT_SETTING_FIELD_NUMBER: builtins.int
    CONTROL_SPEC_FIELD_NUMBER: builtins.int
    @property
    def marketing_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]:
        """Marketing images to be used in the ad. Valid image types are GIF,
        JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
        be 1.91:1 (+-1%). At least one `marketing_image` is required. Combined
        with `square_marketing_images`, the maximum is 15.
        """
        pass
    @property
    def square_marketing_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]:
        """Square marketing images to be used in the ad. Valid image types are GIF,
        JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
        be 1:1 (+-1%). At least one square `marketing_image` is required. Combined
        with `marketing_images`, the maximum is 15.
        """
        pass
    @property
    def logo_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]:
        """Logo images to be used in the ad. Valid image types are GIF,
        JPEG, and PNG. The minimum size is 512x128 and the aspect ratio must
        be 4:1 (+-1%). Combined with `square_logo_images`, the maximum is 5.
        """
        pass
    @property
    def square_logo_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]:
        """Square logo images to be used in the ad. Valid image types are GIF,
        JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must
        be 1:1 (+-1%). Combined with `square_logo_images`, the maximum is 5.
        """
        pass
    @property
    def headlines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """Short format headlines for the ad. The maximum length is 30 characters.
        At least 1 and max 5 headlines can be specified.
        """
        pass
    @property
    def long_headline(self) -> google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset:
        """A required long format headline. The maximum length is 90 characters."""
        pass
    @property
    def descriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """Descriptive texts for the ad. The maximum length is 90 characters. At
        least 1 and max 5 headlines can be specified.
        """
        pass
    @property
    def youtube_videos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdVideoAsset]:
        """Optional YouTube videos for the ad. A maximum of 5 videos can be specified."""
        pass
    business_name: typing.Text = ...
    """The advertiser/brand name. Maximum display width is 25."""

    main_color: typing.Text = ...
    """The main color of the ad in hexadecimal, e.g. #ffffff for white.
    If one of `main_color` and `accent_color` is set, the other is required as
    well.
    """

    accent_color: typing.Text = ...
    """The accent color of the ad in hexadecimal, e.g. #ffffff for white.
    If one of `main_color` and `accent_color` is set, the other is required as
    well.
    """

    allow_flexible_color: builtins.bool = ...
    """Advertiser's consent to allow flexible color. When true, the ad may be
    served with different color if necessary. When false, the ad will be served
    with the specified colors or a neutral color.
    The default value is `true`.
    Must be true if `main_color` and `accent_color` are not set.
    """

    call_to_action_text: typing.Text = ...
    """The call-to-action text for the ad. Maximum display width is 30."""

    price_prefix: typing.Text = ...
    """Prefix before price. E.g. 'as low as'."""

    promo_text: typing.Text = ...
    """Promotion text used for dynamic formats of responsive ads. For example
    'Free two-day shipping'.
    """

    format_setting: google.ads.googleads.v8.enums.display_ad_format_setting_pb2.DisplayAdFormatSettingEnum.DisplayAdFormatSetting.ValueType = ...
    """Specifies which format the ad will be served in. Default is ALL_FORMATS."""

    @property
    def control_spec(self) -> global___ResponsiveDisplayAdControlSpec:
        """Specification for various creative controls."""
        pass
    def __init__(self,
        *,
        marketing_images : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]] = ...,
        square_marketing_images : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]] = ...,
        logo_images : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]] = ...,
        square_logo_images : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]] = ...,
        headlines : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        long_headline : typing.Optional[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset] = ...,
        descriptions : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        youtube_videos : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdVideoAsset]] = ...,
        business_name : typing.Optional[typing.Text] = ...,
        main_color : typing.Optional[typing.Text] = ...,
        accent_color : typing.Optional[typing.Text] = ...,
        allow_flexible_color : typing.Optional[builtins.bool] = ...,
        call_to_action_text : typing.Optional[typing.Text] = ...,
        price_prefix : typing.Optional[typing.Text] = ...,
        promo_text : typing.Optional[typing.Text] = ...,
        format_setting : google.ads.googleads.v8.enums.display_ad_format_setting_pb2.DisplayAdFormatSettingEnum.DisplayAdFormatSetting.ValueType = ...,
        control_spec : typing.Optional[global___ResponsiveDisplayAdControlSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_accent_color",b"_accent_color","_allow_flexible_color",b"_allow_flexible_color","_business_name",b"_business_name","_call_to_action_text",b"_call_to_action_text","_main_color",b"_main_color","_price_prefix",b"_price_prefix","_promo_text",b"_promo_text","accent_color",b"accent_color","allow_flexible_color",b"allow_flexible_color","business_name",b"business_name","call_to_action_text",b"call_to_action_text","control_spec",b"control_spec","long_headline",b"long_headline","main_color",b"main_color","price_prefix",b"price_prefix","promo_text",b"promo_text"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_accent_color",b"_accent_color","_allow_flexible_color",b"_allow_flexible_color","_business_name",b"_business_name","_call_to_action_text",b"_call_to_action_text","_main_color",b"_main_color","_price_prefix",b"_price_prefix","_promo_text",b"_promo_text","accent_color",b"accent_color","allow_flexible_color",b"allow_flexible_color","business_name",b"business_name","call_to_action_text",b"call_to_action_text","control_spec",b"control_spec","descriptions",b"descriptions","format_setting",b"format_setting","headlines",b"headlines","logo_images",b"logo_images","long_headline",b"long_headline","main_color",b"main_color","marketing_images",b"marketing_images","price_prefix",b"price_prefix","promo_text",b"promo_text","square_logo_images",b"square_logo_images","square_marketing_images",b"square_marketing_images","youtube_videos",b"youtube_videos"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_accent_color",b"_accent_color"]) -> typing.Optional[typing_extensions.Literal["accent_color"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_allow_flexible_color",b"_allow_flexible_color"]) -> typing.Optional[typing_extensions.Literal["allow_flexible_color"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_business_name",b"_business_name"]) -> typing.Optional[typing_extensions.Literal["business_name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_call_to_action_text",b"_call_to_action_text"]) -> typing.Optional[typing_extensions.Literal["call_to_action_text"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_main_color",b"_main_color"]) -> typing.Optional[typing_extensions.Literal["main_color"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_price_prefix",b"_price_prefix"]) -> typing.Optional[typing_extensions.Literal["price_prefix"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_promo_text",b"_promo_text"]) -> typing.Optional[typing_extensions.Literal["promo_text"]]: ...
global___ResponsiveDisplayAdInfo = ResponsiveDisplayAdInfo

class LocalAdInfo(google.protobuf.message.Message):
    """A local ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINES_FIELD_NUMBER: builtins.int
    DESCRIPTIONS_FIELD_NUMBER: builtins.int
    CALL_TO_ACTIONS_FIELD_NUMBER: builtins.int
    MARKETING_IMAGES_FIELD_NUMBER: builtins.int
    LOGO_IMAGES_FIELD_NUMBER: builtins.int
    VIDEOS_FIELD_NUMBER: builtins.int
    PATH1_FIELD_NUMBER: builtins.int
    PATH2_FIELD_NUMBER: builtins.int
    @property
    def headlines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for headlines. When the ad serves the headlines will
        be selected from this list. At least 1 and at most 5 headlines must be
        specified.
        """
        pass
    @property
    def descriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for descriptions. When the ad serves the descriptions
        will be selected from this list. At least 1 and at most 5 descriptions must
        be specified.
        """
        pass
    @property
    def call_to_actions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for call-to-actions. When the ad serves the
        call-to-actions will be selected from this list. Call-to-actions are
        optional and at most 5 can be specified.
        """
        pass
    @property
    def marketing_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]:
        """List of marketing image assets that may be displayed with the ad. The
        images must be 314x600 pixels or 320x320 pixels. At least 1 and at most
        20 image assets must be specified.
        """
        pass
    @property
    def logo_images(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]:
        """List of logo image assets that may be displayed with the ad. The images
        must be 128x128 pixels and not larger than 120KB. At least 1 and at most 5
        image assets must be specified.
        """
        pass
    @property
    def videos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdVideoAsset]:
        """List of YouTube video assets that may be displayed with the ad. Videos
        are optional and at most 20 can be specified.
        """
        pass
    path1: typing.Text = ...
    """First part of optional text that can be appended to the URL in the ad."""

    path2: typing.Text = ...
    """Second part of optional text that can be appended to the URL in the ad.
    This field can only be set when `path1` is also set.
    """

    def __init__(self,
        *,
        headlines : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        descriptions : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        call_to_actions : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        marketing_images : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]] = ...,
        logo_images : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdImageAsset]] = ...,
        videos : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdVideoAsset]] = ...,
        path1 : typing.Optional[typing.Text] = ...,
        path2 : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_path1",b"_path1","_path2",b"_path2","path1",b"path1","path2",b"path2"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_path1",b"_path1","_path2",b"_path2","call_to_actions",b"call_to_actions","descriptions",b"descriptions","headlines",b"headlines","logo_images",b"logo_images","marketing_images",b"marketing_images","path1",b"path1","path2",b"path2","videos",b"videos"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path1",b"_path1"]) -> typing.Optional[typing_extensions.Literal["path1"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_path2",b"_path2"]) -> typing.Optional[typing_extensions.Literal["path2"]]: ...
global___LocalAdInfo = LocalAdInfo

class DisplayUploadAdInfo(google.protobuf.message.Message):
    """A generic type of display ad. The exact ad format is controlled by the
    `display_upload_product_type` field, which determines what kinds of data
    need to be included with the ad.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DISPLAY_UPLOAD_PRODUCT_TYPE_FIELD_NUMBER: builtins.int
    MEDIA_BUNDLE_FIELD_NUMBER: builtins.int
    display_upload_product_type: google.ads.googleads.v8.enums.display_upload_product_type_pb2.DisplayUploadProductTypeEnum.DisplayUploadProductType.ValueType = ...
    """The product type of this ad. See comments on the enum for details."""

    @property
    def media_bundle(self) -> google.ads.googleads.v8.common.ad_asset_pb2.AdMediaBundleAsset:
        """A media bundle asset to be used in the ad. For information about the
        media bundle for HTML5_UPLOAD_AD, see
        https://support.google.com/google-ads/answer/1722096
        Media bundles that are part of dynamic product types use a special format
        that needs to be created through the Google Web Designer. See
        https://support.google.com/webdesigner/answer/7543898 for more
        information.
        """
        pass
    def __init__(self,
        *,
        display_upload_product_type : google.ads.googleads.v8.enums.display_upload_product_type_pb2.DisplayUploadProductTypeEnum.DisplayUploadProductType.ValueType = ...,
        media_bundle : typing.Optional[google.ads.googleads.v8.common.ad_asset_pb2.AdMediaBundleAsset] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["media_asset",b"media_asset","media_bundle",b"media_bundle"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["display_upload_product_type",b"display_upload_product_type","media_asset",b"media_asset","media_bundle",b"media_bundle"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["media_asset",b"media_asset"]) -> typing.Optional[typing_extensions.Literal["media_bundle"]]: ...
global___DisplayUploadAdInfo = DisplayUploadAdInfo

class ResponsiveDisplayAdControlSpec(google.protobuf.message.Message):
    """Specification for various creative controls for a responsive display ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENABLE_ASSET_ENHANCEMENTS_FIELD_NUMBER: builtins.int
    ENABLE_AUTOGEN_VIDEO_FIELD_NUMBER: builtins.int
    enable_asset_enhancements: builtins.bool = ...
    """Whether the advertiser has opted into the asset enhancements feature."""

    enable_autogen_video: builtins.bool = ...
    """Whether the advertiser has opted into auto-gen video feature."""

    def __init__(self,
        *,
        enable_asset_enhancements : builtins.bool = ...,
        enable_autogen_video : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["enable_asset_enhancements",b"enable_asset_enhancements","enable_autogen_video",b"enable_autogen_video"]) -> None: ...
global___ResponsiveDisplayAdControlSpec = ResponsiveDisplayAdControlSpec

class SmartCampaignAdInfo(google.protobuf.message.Message):
    """A Smart campaign ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADLINES_FIELD_NUMBER: builtins.int
    DESCRIPTIONS_FIELD_NUMBER: builtins.int
    @property
    def headlines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for headlines. When the ad serves the headlines will
        be selected from this list. 3 headlines must be specified.
        """
        pass
    @property
    def descriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]:
        """List of text assets for descriptions. When the ad serves the descriptions
        will be selected from this list. 2 descriptions must be specified.
        """
        pass
    def __init__(self,
        *,
        headlines : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        descriptions : typing.Optional[typing.Iterable[google.ads.googleads.v8.common.ad_asset_pb2.AdTextAsset]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["descriptions",b"descriptions","headlines",b"headlines"]) -> None: ...
global___SmartCampaignAdInfo = SmartCampaignAdInfo

class CallAdInfo(google.protobuf.message.Message):
    """A call ad."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    COUNTRY_CODE_FIELD_NUMBER: builtins.int
    PHONE_NUMBER_FIELD_NUMBER: builtins.int
    BUSINESS_NAME_FIELD_NUMBER: builtins.int
    HEADLINE1_FIELD_NUMBER: builtins.int
    HEADLINE2_FIELD_NUMBER: builtins.int
    DESCRIPTION1_FIELD_NUMBER: builtins.int
    DESCRIPTION2_FIELD_NUMBER: builtins.int
    CALL_TRACKED_FIELD_NUMBER: builtins.int
    DISABLE_CALL_CONVERSION_FIELD_NUMBER: builtins.int
    PHONE_NUMBER_VERIFICATION_URL_FIELD_NUMBER: builtins.int
    CONVERSION_ACTION_FIELD_NUMBER: builtins.int
    CONVERSION_REPORTING_STATE_FIELD_NUMBER: builtins.int
    PATH1_FIELD_NUMBER: builtins.int
    PATH2_FIELD_NUMBER: builtins.int
    country_code: typing.Text = ...
    """The country code in the ad."""

    phone_number: typing.Text = ...
    """The phone number in the ad."""

    business_name: typing.Text = ...
    """The business name in the ad."""

    headline1: typing.Text = ...
    """First headline in the ad."""

    headline2: typing.Text = ...
    """Second headline in the ad."""

    description1: typing.Text = ...
    """The first line of the ad's description."""

    description2: typing.Text = ...
    """The second line of the ad's description."""

    call_tracked: builtins.bool = ...
    """Whether to enable call tracking for the creative. Enabling call
    tracking also enables call conversions.
    """

    disable_call_conversion: builtins.bool = ...
    """Whether to disable call conversion for the creative.
    If set to `true`, disables call conversions even when `call_tracked` is
    `true`.
    If `call_tracked` is `false`, this field is ignored.
    """

    phone_number_verification_url: typing.Text = ...
    """The URL to be used for phone number verification."""

    conversion_action: typing.Text = ...
    """The conversion action to attribute a call conversion to. If not set a
    default conversion action is used. This field only has effect if
    `call_tracked` is set to `true`. Otherwise this field is ignored.
    """

    conversion_reporting_state: google.ads.googleads.v8.enums.call_conversion_reporting_state_pb2.CallConversionReportingStateEnum.CallConversionReportingState.ValueType = ...
    """The call conversion behavior of this call ad. It can use its own call
    conversion setting, inherit the account level setting, or be disabled.
    """

    path1: typing.Text = ...
    """First part of text that can be appended to the URL in the ad. Optional."""

    path2: typing.Text = ...
    """Second part of text that can be appended to the URL in the ad. This field
    can only be set when `path1` is also set. Optional.
    """

    def __init__(self,
        *,
        country_code : typing.Text = ...,
        phone_number : typing.Text = ...,
        business_name : typing.Text = ...,
        headline1 : typing.Text = ...,
        headline2 : typing.Text = ...,
        description1 : typing.Text = ...,
        description2 : typing.Text = ...,
        call_tracked : builtins.bool = ...,
        disable_call_conversion : builtins.bool = ...,
        phone_number_verification_url : typing.Text = ...,
        conversion_action : typing.Text = ...,
        conversion_reporting_state : google.ads.googleads.v8.enums.call_conversion_reporting_state_pb2.CallConversionReportingStateEnum.CallConversionReportingState.ValueType = ...,
        path1 : typing.Text = ...,
        path2 : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["business_name",b"business_name","call_tracked",b"call_tracked","conversion_action",b"conversion_action","conversion_reporting_state",b"conversion_reporting_state","country_code",b"country_code","description1",b"description1","description2",b"description2","disable_call_conversion",b"disable_call_conversion","headline1",b"headline1","headline2",b"headline2","path1",b"path1","path2",b"path2","phone_number",b"phone_number","phone_number_verification_url",b"phone_number_verification_url"]) -> None: ...
global___CallAdInfo = CallAdInfo
