"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class IncomeRangeTypeEnum(google.protobuf.message.Message):
    """Proto file describing income range types.

    Container for enum describing the type of demographic income ranges.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _IncomeRangeType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _IncomeRangeTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_IncomeRangeType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 0
        """Not specified."""

        UNKNOWN: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 1
        """Used for return value only. Represents value unknown in this version."""

        INCOME_RANGE_0_50: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510001
        """0%-50%."""

        INCOME_RANGE_50_60: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510002
        """50% to 60%."""

        INCOME_RANGE_60_70: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510003
        """60% to 70%."""

        INCOME_RANGE_70_80: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510004
        """70% to 80%."""

        INCOME_RANGE_80_90: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510005
        """80% to 90%."""

        INCOME_RANGE_90_UP: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510006
        """Greater than 90%."""

        INCOME_RANGE_UNDETERMINED: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510000
        """Undetermined income range."""

    class IncomeRangeType(_IncomeRangeType, metaclass=_IncomeRangeTypeEnumTypeWrapper):
        """The type of demographic income ranges (e.g. between 0% to 50%)."""
        pass

    UNSPECIFIED: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 0
    """Not specified."""

    UNKNOWN: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 1
    """Used for return value only. Represents value unknown in this version."""

    INCOME_RANGE_0_50: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510001
    """0%-50%."""

    INCOME_RANGE_50_60: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510002
    """50% to 60%."""

    INCOME_RANGE_60_70: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510003
    """60% to 70%."""

    INCOME_RANGE_70_80: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510004
    """70% to 80%."""

    INCOME_RANGE_80_90: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510005
    """80% to 90%."""

    INCOME_RANGE_90_UP: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510006
    """Greater than 90%."""

    INCOME_RANGE_UNDETERMINED: IncomeRangeTypeEnum.IncomeRangeType.ValueType = ...  # 510000
    """Undetermined income range."""


    def __init__(self,
        ) -> None: ...
global___IncomeRangeTypeEnum = IncomeRangeTypeEnum
