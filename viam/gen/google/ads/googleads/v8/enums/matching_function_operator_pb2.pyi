"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class MatchingFunctionOperatorEnum(google.protobuf.message.Message):
    """Proto file describing matching function operators.

    Container for enum describing matching function operator.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _MatchingFunctionOperator:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _MatchingFunctionOperatorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_MatchingFunctionOperator.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 0
        """Not specified."""

        UNKNOWN: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 1
        """Used for return value only. Represents value unknown in this version."""

        IN: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 2
        """The IN operator."""

        IDENTITY: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 3
        """The IDENTITY operator."""

        EQUALS: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 4
        """The EQUALS operator"""

        AND: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 5
        """Operator that takes two or more operands that are of type
        FunctionOperand and checks that all the operands evaluate to true.
        For functions related to ad formats, all the operands must be in
        left_operands.
        """

        CONTAINS_ANY: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 6
        """Operator that returns true if the elements in left_operands contain any
        of the elements in right_operands. Otherwise, return false. The
        right_operands must contain at least 1 and no more than 3
        ConstantOperands.
        """

    class MatchingFunctionOperator(_MatchingFunctionOperator, metaclass=_MatchingFunctionOperatorEnumTypeWrapper):
        """Possible operators in a matching function."""
        pass

    UNSPECIFIED: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 0
    """Not specified."""

    UNKNOWN: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 1
    """Used for return value only. Represents value unknown in this version."""

    IN: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 2
    """The IN operator."""

    IDENTITY: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 3
    """The IDENTITY operator."""

    EQUALS: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 4
    """The EQUALS operator"""

    AND: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 5
    """Operator that takes two or more operands that are of type
    FunctionOperand and checks that all the operands evaluate to true.
    For functions related to ad formats, all the operands must be in
    left_operands.
    """

    CONTAINS_ANY: MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...  # 6
    """Operator that returns true if the elements in left_operands contain any
    of the elements in right_operands. Otherwise, return false. The
    right_operands must contain at least 1 and no more than 3
    ConstantOperands.
    """


    def __init__(self,
        ) -> None: ...
global___MatchingFunctionOperatorEnum = MatchingFunctionOperatorEnum
