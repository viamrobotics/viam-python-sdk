"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class UserListCombinedRuleOperatorEnum(google.protobuf.message.Message):
    """Logical operator connecting two rules."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _UserListCombinedRuleOperator:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _UserListCombinedRuleOperatorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UserListCombinedRuleOperator.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator.ValueType = ...  # 0
        """Not specified."""

        UNKNOWN: UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator.ValueType = ...  # 1
        """Used for return value only. Represents value unknown in this version."""

        AND: UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator.ValueType = ...  # 2
        """A AND B."""

        AND_NOT: UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator.ValueType = ...  # 3
        """A AND NOT B."""

    class UserListCombinedRuleOperator(_UserListCombinedRuleOperator, metaclass=_UserListCombinedRuleOperatorEnumTypeWrapper):
        """Enum describing possible user list combined rule operators."""
        pass

    UNSPECIFIED: UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator.ValueType = ...  # 0
    """Not specified."""

    UNKNOWN: UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator.ValueType = ...  # 1
    """Used for return value only. Represents value unknown in this version."""

    AND: UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator.ValueType = ...  # 2
    """A AND B."""

    AND_NOT: UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator.ValueType = ...  # 3
    """A AND NOT B."""


    def __init__(self,
        ) -> None: ...
global___UserListCombinedRuleOperatorEnum = UserListCombinedRuleOperatorEnum
