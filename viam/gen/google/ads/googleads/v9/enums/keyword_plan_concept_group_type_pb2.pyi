"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class KeywordPlanConceptGroupTypeEnum(google.protobuf.message.Message):
    """Proto file describing Keyword Planner Concept Group types.

    Container for enumeration of keyword plan concept group types.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _KeywordPlanConceptGroupType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _KeywordPlanConceptGroupTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_KeywordPlanConceptGroupType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType.ValueType = ...  # 0
        """The concept group classification different from brand/non-brand.
        This is a catch all bucket for all classifications that are none of the
        below.
        """

        UNKNOWN: KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType.ValueType = ...  # 1
        """The value is unknown in this version."""

        BRAND: KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType.ValueType = ...  # 2
        """The concept group classification is based on BRAND."""

        OTHER_BRANDS: KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType.ValueType = ...  # 3
        """The concept group classification based on BRAND, that didn't fit well
        with the BRAND classifications. These are generally outliers and can have
        very few keywords in this type of classification.
        """

        NON_BRAND: KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType.ValueType = ...  # 4
        """These concept group classification is not based on BRAND. This is
        returned for generic keywords that don't have a brand association.
        """

    class KeywordPlanConceptGroupType(_KeywordPlanConceptGroupType, metaclass=_KeywordPlanConceptGroupTypeEnumTypeWrapper):
        """Enumerates keyword plan concept group types."""
        pass

    UNSPECIFIED: KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType.ValueType = ...  # 0
    """The concept group classification different from brand/non-brand.
    This is a catch all bucket for all classifications that are none of the
    below.
    """

    UNKNOWN: KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType.ValueType = ...  # 1
    """The value is unknown in this version."""

    BRAND: KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType.ValueType = ...  # 2
    """The concept group classification is based on BRAND."""

    OTHER_BRANDS: KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType.ValueType = ...  # 3
    """The concept group classification based on BRAND, that didn't fit well
    with the BRAND classifications. These are generally outliers and can have
    very few keywords in this type of classification.
    """

    NON_BRAND: KeywordPlanConceptGroupTypeEnum.KeywordPlanConceptGroupType.ValueType = ...  # 4
    """These concept group classification is not based on BRAND. This is
    returned for generic keywords that don't have a brand association.
    """


    def __init__(self,
        ) -> None: ...
global___KeywordPlanConceptGroupTypeEnum = KeywordPlanConceptGroupTypeEnum
