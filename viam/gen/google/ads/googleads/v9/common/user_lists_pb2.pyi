"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v9.enums.customer_match_upload_key_type_pb2
import google.ads.googleads.v9.enums.user_list_combined_rule_operator_pb2
import google.ads.googleads.v9.enums.user_list_crm_data_source_type_pb2
import google.ads.googleads.v9.enums.user_list_date_rule_item_operator_pb2
import google.ads.googleads.v9.enums.user_list_logical_rule_operator_pb2
import google.ads.googleads.v9.enums.user_list_number_rule_item_operator_pb2
import google.ads.googleads.v9.enums.user_list_prepopulation_status_pb2
import google.ads.googleads.v9.enums.user_list_rule_type_pb2
import google.ads.googleads.v9.enums.user_list_string_rule_item_operator_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SimilarUserListInfo(google.protobuf.message.Message):
    """Proto file describing user list types.

    SimilarUserList is a list of users which are similar to users from another
    UserList. These lists are read-only and automatically created by Google.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SEED_USER_LIST_FIELD_NUMBER: builtins.int
    seed_user_list: typing.Text = ...
    """Seed UserList from which this list is derived."""

    def __init__(self,
        *,
        seed_user_list : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_seed_user_list",b"_seed_user_list","seed_user_list",b"seed_user_list"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_seed_user_list",b"_seed_user_list","seed_user_list",b"seed_user_list"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_seed_user_list",b"_seed_user_list"]) -> typing.Optional[typing_extensions.Literal["seed_user_list"]]: ...
global___SimilarUserListInfo = SimilarUserListInfo

class CrmBasedUserListInfo(google.protobuf.message.Message):
    """UserList of CRM users provided by the advertiser."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    APP_ID_FIELD_NUMBER: builtins.int
    UPLOAD_KEY_TYPE_FIELD_NUMBER: builtins.int
    DATA_SOURCE_TYPE_FIELD_NUMBER: builtins.int
    app_id: typing.Text = ...
    """A string that uniquely identifies a mobile application from which the data
    was collected.
    For iOS, the ID string is the 9 digit string that appears at the end of an
    App Store URL (e.g., "476943146" for "Flood-It! 2" whose App Store link is
    http://itunes.apple.com/us/app/flood-it!-2/id476943146).
    For Android, the ID string is the application's package name
    (e.g., "com.labpixies.colordrips" for "Color Drips" given Google Play link
    https://play.google.com/store/apps/details?id=com.labpixies.colordrips).
    Required when creating CrmBasedUserList for uploading mobile advertising
    IDs.
    """

    upload_key_type: google.ads.googleads.v9.enums.customer_match_upload_key_type_pb2.CustomerMatchUploadKeyTypeEnum.CustomerMatchUploadKeyType.ValueType = ...
    """Matching key type of the list.
    Mixed data types are not allowed on the same list.
    This field is required for an ADD operation.
    """

    data_source_type: google.ads.googleads.v9.enums.user_list_crm_data_source_type_pb2.UserListCrmDataSourceTypeEnum.UserListCrmDataSourceType.ValueType = ...
    """Data source of the list. Default value is FIRST_PARTY.
    Only customers on the allow-list can create third-party sourced CRM lists.
    """

    def __init__(self,
        *,
        app_id : typing.Optional[typing.Text] = ...,
        upload_key_type : google.ads.googleads.v9.enums.customer_match_upload_key_type_pb2.CustomerMatchUploadKeyTypeEnum.CustomerMatchUploadKeyType.ValueType = ...,
        data_source_type : google.ads.googleads.v9.enums.user_list_crm_data_source_type_pb2.UserListCrmDataSourceTypeEnum.UserListCrmDataSourceType.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_app_id",b"_app_id","app_id",b"app_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_app_id",b"_app_id","app_id",b"app_id","data_source_type",b"data_source_type","upload_key_type",b"upload_key_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_app_id",b"_app_id"]) -> typing.Optional[typing_extensions.Literal["app_id"]]: ...
global___CrmBasedUserListInfo = CrmBasedUserListInfo

class UserListRuleInfo(google.protobuf.message.Message):
    """A client defined rule based on custom parameters sent by web sites or
    uploaded by the advertiser.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RULE_TYPE_FIELD_NUMBER: builtins.int
    RULE_ITEM_GROUPS_FIELD_NUMBER: builtins.int
    rule_type: google.ads.googleads.v9.enums.user_list_rule_type_pb2.UserListRuleTypeEnum.UserListRuleType.ValueType = ...
    """Rule type is used to determine how to group rule items.

    The default is OR of ANDs (disjunctive normal form).
    That is, rule items will be ANDed together within rule item groups and the
    groups themselves will be ORed together.

    Currently AND of ORs (conjunctive normal form) is only supported for
    ExpressionRuleUserList.
    """

    @property
    def rule_item_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UserListRuleItemGroupInfo]:
        """List of rule item groups that defines this rule.
        Rule item groups are grouped together based on rule_type.
        """
        pass
    def __init__(self,
        *,
        rule_type : google.ads.googleads.v9.enums.user_list_rule_type_pb2.UserListRuleTypeEnum.UserListRuleType.ValueType = ...,
        rule_item_groups : typing.Optional[typing.Iterable[global___UserListRuleItemGroupInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["rule_item_groups",b"rule_item_groups","rule_type",b"rule_type"]) -> None: ...
global___UserListRuleInfo = UserListRuleInfo

class UserListRuleItemGroupInfo(google.protobuf.message.Message):
    """A group of rule items."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RULE_ITEMS_FIELD_NUMBER: builtins.int
    @property
    def rule_items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UserListRuleItemInfo]:
        """Rule items that will be grouped together based on rule_type."""
        pass
    def __init__(self,
        *,
        rule_items : typing.Optional[typing.Iterable[global___UserListRuleItemInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["rule_items",b"rule_items"]) -> None: ...
global___UserListRuleItemGroupInfo = UserListRuleItemGroupInfo

class UserListRuleItemInfo(google.protobuf.message.Message):
    """An atomic rule item."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    NUMBER_RULE_ITEM_FIELD_NUMBER: builtins.int
    STRING_RULE_ITEM_FIELD_NUMBER: builtins.int
    DATE_RULE_ITEM_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Rule variable name. It should match the corresponding key name fired
    by the pixel.
    A name must begin with US-ascii letters or underscore or UTF8 code that is
    greater than 127 and consist of US-ascii letters or digits or underscore or
    UTF8 code that is greater than 127.
    For websites, there are two built-in variable URL (name = 'url__') and
    referrer URL (name = 'ref_url__').
    This field must be populated when creating a new rule item.
    """

    @property
    def number_rule_item(self) -> global___UserListNumberRuleItemInfo:
        """An atomic rule item composed of a number operation."""
        pass
    @property
    def string_rule_item(self) -> global___UserListStringRuleItemInfo:
        """An atomic rule item composed of a string operation."""
        pass
    @property
    def date_rule_item(self) -> global___UserListDateRuleItemInfo:
        """An atomic rule item composed of a date operation."""
        pass
    def __init__(self,
        *,
        name : typing.Optional[typing.Text] = ...,
        number_rule_item : typing.Optional[global___UserListNumberRuleItemInfo] = ...,
        string_rule_item : typing.Optional[global___UserListStringRuleItemInfo] = ...,
        date_rule_item : typing.Optional[global___UserListDateRuleItemInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_name",b"_name","date_rule_item",b"date_rule_item","name",b"name","number_rule_item",b"number_rule_item","rule_item",b"rule_item","string_rule_item",b"string_rule_item"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_name",b"_name","date_rule_item",b"date_rule_item","name",b"name","number_rule_item",b"number_rule_item","rule_item",b"rule_item","string_rule_item",b"string_rule_item"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["rule_item",b"rule_item"]) -> typing.Optional[typing_extensions.Literal["number_rule_item","string_rule_item","date_rule_item"]]: ...
global___UserListRuleItemInfo = UserListRuleItemInfo

class UserListDateRuleItemInfo(google.protobuf.message.Message):
    """A rule item composed of a date operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATOR_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    OFFSET_IN_DAYS_FIELD_NUMBER: builtins.int
    operator: google.ads.googleads.v9.enums.user_list_date_rule_item_operator_pb2.UserListDateRuleItemOperatorEnum.UserListDateRuleItemOperator.ValueType = ...
    """Date comparison operator.
    This field is required and must be populated when creating new date
    rule item.
    """

    value: typing.Text = ...
    """String representing date value to be compared with the rule variable.
    Supported date format is YYYY-MM-DD.
    Times are reported in the customer's time zone.
    """

    offset_in_days: builtins.int = ...
    """The relative date value of the right hand side denoted by number of days
    offset from now. The value field will override this field when both are
    present.
    """

    def __init__(self,
        *,
        operator : google.ads.googleads.v9.enums.user_list_date_rule_item_operator_pb2.UserListDateRuleItemOperatorEnum.UserListDateRuleItemOperator.ValueType = ...,
        value : typing.Optional[typing.Text] = ...,
        offset_in_days : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_offset_in_days",b"_offset_in_days","_value",b"_value","offset_in_days",b"offset_in_days","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_offset_in_days",b"_offset_in_days","_value",b"_value","offset_in_days",b"offset_in_days","operator",b"operator","value",b"value"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_offset_in_days",b"_offset_in_days"]) -> typing.Optional[typing_extensions.Literal["offset_in_days"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value",b"_value"]) -> typing.Optional[typing_extensions.Literal["value"]]: ...
global___UserListDateRuleItemInfo = UserListDateRuleItemInfo

class UserListNumberRuleItemInfo(google.protobuf.message.Message):
    """A rule item composed of a number operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATOR_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    operator: google.ads.googleads.v9.enums.user_list_number_rule_item_operator_pb2.UserListNumberRuleItemOperatorEnum.UserListNumberRuleItemOperator.ValueType = ...
    """Number comparison operator.
    This field is required and must be populated when creating a new number
    rule item.
    """

    value: builtins.float = ...
    """Number value to be compared with the variable.
    This field is required and must be populated when creating a new number
    rule item.
    """

    def __init__(self,
        *,
        operator : google.ads.googleads.v9.enums.user_list_number_rule_item_operator_pb2.UserListNumberRuleItemOperatorEnum.UserListNumberRuleItemOperator.ValueType = ...,
        value : typing.Optional[builtins.float] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_value",b"_value","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_value",b"_value","operator",b"operator","value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value",b"_value"]) -> typing.Optional[typing_extensions.Literal["value"]]: ...
global___UserListNumberRuleItemInfo = UserListNumberRuleItemInfo

class UserListStringRuleItemInfo(google.protobuf.message.Message):
    """A rule item composed of a string operation."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATOR_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    operator: google.ads.googleads.v9.enums.user_list_string_rule_item_operator_pb2.UserListStringRuleItemOperatorEnum.UserListStringRuleItemOperator.ValueType = ...
    """String comparison operator.
    This field is required and must be populated when creating a new string
    rule item.
    """

    value: typing.Text = ...
    """The right hand side of the string rule item. For URLs or referrer URLs,
    the value can not contain illegal URL chars such as newlines, quotes,
    tabs, or parentheses. This field is required and must be populated when
    creating a new string rule item.
    """

    def __init__(self,
        *,
        operator : google.ads.googleads.v9.enums.user_list_string_rule_item_operator_pb2.UserListStringRuleItemOperatorEnum.UserListStringRuleItemOperator.ValueType = ...,
        value : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_value",b"_value","value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_value",b"_value","operator",b"operator","value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_value",b"_value"]) -> typing.Optional[typing_extensions.Literal["value"]]: ...
global___UserListStringRuleItemInfo = UserListStringRuleItemInfo

class CombinedRuleUserListInfo(google.protobuf.message.Message):
    """User lists defined by combining two rules, left operand and right operand.
    There are two operators: AND where left operand and right operand have to be
    true; AND_NOT where left operand is true but right operand is false.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LEFT_OPERAND_FIELD_NUMBER: builtins.int
    RIGHT_OPERAND_FIELD_NUMBER: builtins.int
    RULE_OPERATOR_FIELD_NUMBER: builtins.int
    @property
    def left_operand(self) -> global___UserListRuleInfo:
        """Left operand of the combined rule.
        This field is required and must be populated when creating new combined
        rule based user list.
        """
        pass
    @property
    def right_operand(self) -> global___UserListRuleInfo:
        """Right operand of the combined rule.
        This field is required and must be populated when creating new combined
        rule based user list.
        """
        pass
    rule_operator: google.ads.googleads.v9.enums.user_list_combined_rule_operator_pb2.UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator.ValueType = ...
    """Operator to connect the two operands.

    Required for creating a combined rule user list.
    """

    def __init__(self,
        *,
        left_operand : typing.Optional[global___UserListRuleInfo] = ...,
        right_operand : typing.Optional[global___UserListRuleInfo] = ...,
        rule_operator : google.ads.googleads.v9.enums.user_list_combined_rule_operator_pb2.UserListCombinedRuleOperatorEnum.UserListCombinedRuleOperator.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["left_operand",b"left_operand","right_operand",b"right_operand"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["left_operand",b"left_operand","right_operand",b"right_operand","rule_operator",b"rule_operator"]) -> None: ...
global___CombinedRuleUserListInfo = CombinedRuleUserListInfo

class DateSpecificRuleUserListInfo(google.protobuf.message.Message):
    """Visitors of a page during specific dates."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RULE_FIELD_NUMBER: builtins.int
    START_DATE_FIELD_NUMBER: builtins.int
    END_DATE_FIELD_NUMBER: builtins.int
    @property
    def rule(self) -> global___UserListRuleInfo:
        """Boolean rule that defines visitor of a page.

        Required for creating a date specific rule user list.
        """
        pass
    start_date: typing.Text = ...
    """Start date of users visit. If set to 2000-01-01, then the list includes all
    users before end_date. The date's format should be YYYY-MM-DD.

    Required for creating a data specific rule user list.
    """

    end_date: typing.Text = ...
    """Last date of users visit. If set to 2037-12-30, then the list includes all
    users after start_date. The date's format should be YYYY-MM-DD.

    Required for creating a data specific rule user list.
    """

    def __init__(self,
        *,
        rule : typing.Optional[global___UserListRuleInfo] = ...,
        start_date : typing.Optional[typing.Text] = ...,
        end_date : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_end_date",b"_end_date","_start_date",b"_start_date","end_date",b"end_date","rule",b"rule","start_date",b"start_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_end_date",b"_end_date","_start_date",b"_start_date","end_date",b"end_date","rule",b"rule","start_date",b"start_date"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_end_date",b"_end_date"]) -> typing.Optional[typing_extensions.Literal["end_date"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_start_date",b"_start_date"]) -> typing.Optional[typing_extensions.Literal["start_date"]]: ...
global___DateSpecificRuleUserListInfo = DateSpecificRuleUserListInfo

class ExpressionRuleUserListInfo(google.protobuf.message.Message):
    """Visitors of a page. The page visit is defined by one boolean rule expression."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RULE_FIELD_NUMBER: builtins.int
    @property
    def rule(self) -> global___UserListRuleInfo:
        """Boolean rule that defines this user list. The rule consists of a list of
        rule item groups and each rule item group consists of a list of rule items.
        All the rule item groups are ORed or ANDed together for evaluation based on
        rule.rule_type.

        Required for creating an expression rule user list.
        """
        pass
    def __init__(self,
        *,
        rule : typing.Optional[global___UserListRuleInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["rule",b"rule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["rule",b"rule"]) -> None: ...
global___ExpressionRuleUserListInfo = ExpressionRuleUserListInfo

class RuleBasedUserListInfo(google.protobuf.message.Message):
    """Representation of a userlist that is generated by a rule."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PREPOPULATION_STATUS_FIELD_NUMBER: builtins.int
    COMBINED_RULE_USER_LIST_FIELD_NUMBER: builtins.int
    DATE_SPECIFIC_RULE_USER_LIST_FIELD_NUMBER: builtins.int
    EXPRESSION_RULE_USER_LIST_FIELD_NUMBER: builtins.int
    prepopulation_status: google.ads.googleads.v9.enums.user_list_prepopulation_status_pb2.UserListPrepopulationStatusEnum.UserListPrepopulationStatus.ValueType = ...
    """The status of pre-population. The field is default to NONE if not set which
    means the previous users will not be considered. If set to REQUESTED, past
    site visitors or app users who match the list definition will be included
    in the list (works on the Display Network only). This will only
    add past users from within the last 30 days, depending on the
    list's membership duration and the date when the remarketing tag is added.
    The status will be updated to FINISHED once request is processed, or FAILED
    if the request fails.
    """

    @property
    def combined_rule_user_list(self) -> global___CombinedRuleUserListInfo:
        """User lists defined by combining two rules.
        There are two operators: AND, where the left and right operands have to
        be true; AND_NOT where left operand is true but right operand is false.
        """
        pass
    @property
    def date_specific_rule_user_list(self) -> global___DateSpecificRuleUserListInfo:
        """Visitors of a page during specific dates. The visiting periods are
        defined as follows:
        Between start_date (inclusive) and end_date (inclusive);
        Before end_date (exclusive) with start_date = 2000-01-01;
        After start_date (exclusive) with end_date = 2037-12-30.
        """
        pass
    @property
    def expression_rule_user_list(self) -> global___ExpressionRuleUserListInfo:
        """Visitors of a page. The page visit is defined by one boolean rule
        expression.
        """
        pass
    def __init__(self,
        *,
        prepopulation_status : google.ads.googleads.v9.enums.user_list_prepopulation_status_pb2.UserListPrepopulationStatusEnum.UserListPrepopulationStatus.ValueType = ...,
        combined_rule_user_list : typing.Optional[global___CombinedRuleUserListInfo] = ...,
        date_specific_rule_user_list : typing.Optional[global___DateSpecificRuleUserListInfo] = ...,
        expression_rule_user_list : typing.Optional[global___ExpressionRuleUserListInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["combined_rule_user_list",b"combined_rule_user_list","date_specific_rule_user_list",b"date_specific_rule_user_list","expression_rule_user_list",b"expression_rule_user_list","rule_based_user_list",b"rule_based_user_list"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["combined_rule_user_list",b"combined_rule_user_list","date_specific_rule_user_list",b"date_specific_rule_user_list","expression_rule_user_list",b"expression_rule_user_list","prepopulation_status",b"prepopulation_status","rule_based_user_list",b"rule_based_user_list"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["rule_based_user_list",b"rule_based_user_list"]) -> typing.Optional[typing_extensions.Literal["combined_rule_user_list","date_specific_rule_user_list","expression_rule_user_list"]]: ...
global___RuleBasedUserListInfo = RuleBasedUserListInfo

class LogicalUserListInfo(google.protobuf.message.Message):
    """Represents a user list that is a custom combination of user lists."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RULES_FIELD_NUMBER: builtins.int
    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UserListLogicalRuleInfo]:
        """Logical list rules that define this user list. The rules are defined as a
        logical operator (ALL/ANY/NONE) and a list of user lists. All the rules are
        ANDed when they are evaluated.

        Required for creating a logical user list.
        """
        pass
    def __init__(self,
        *,
        rules : typing.Optional[typing.Iterable[global___UserListLogicalRuleInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["rules",b"rules"]) -> None: ...
global___LogicalUserListInfo = LogicalUserListInfo

class UserListLogicalRuleInfo(google.protobuf.message.Message):
    """A user list logical rule. A rule has a logical operator (and/or/not) and a
    list of user lists as operands.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OPERATOR_FIELD_NUMBER: builtins.int
    RULE_OPERANDS_FIELD_NUMBER: builtins.int
    operator: google.ads.googleads.v9.enums.user_list_logical_rule_operator_pb2.UserListLogicalRuleOperatorEnum.UserListLogicalRuleOperator.ValueType = ...
    """The logical operator of the rule."""

    @property
    def rule_operands(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LogicalUserListOperandInfo]:
        """The list of operands of the rule."""
        pass
    def __init__(self,
        *,
        operator : google.ads.googleads.v9.enums.user_list_logical_rule_operator_pb2.UserListLogicalRuleOperatorEnum.UserListLogicalRuleOperator.ValueType = ...,
        rule_operands : typing.Optional[typing.Iterable[global___LogicalUserListOperandInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operator",b"operator","rule_operands",b"rule_operands"]) -> None: ...
global___UserListLogicalRuleInfo = UserListLogicalRuleInfo

class LogicalUserListOperandInfo(google.protobuf.message.Message):
    """Operand of logical user list that consists of a user list."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    USER_LIST_FIELD_NUMBER: builtins.int
    user_list: typing.Text = ...
    """Resource name of a user list as an operand."""

    def __init__(self,
        *,
        user_list : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_user_list",b"_user_list","user_list",b"user_list"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_user_list",b"_user_list","user_list",b"user_list"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_user_list",b"_user_list"]) -> typing.Optional[typing_extensions.Literal["user_list"]]: ...
global___LogicalUserListOperandInfo = LogicalUserListOperandInfo

class BasicUserListInfo(google.protobuf.message.Message):
    """User list targeting as a collection of conversions or remarketing actions."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACTIONS_FIELD_NUMBER: builtins.int
    @property
    def actions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UserListActionInfo]:
        """Actions associated with this user list."""
        pass
    def __init__(self,
        *,
        actions : typing.Optional[typing.Iterable[global___UserListActionInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["actions",b"actions"]) -> None: ...
global___BasicUserListInfo = BasicUserListInfo

class UserListActionInfo(google.protobuf.message.Message):
    """Represents an action type used for building remarketing user lists."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CONVERSION_ACTION_FIELD_NUMBER: builtins.int
    REMARKETING_ACTION_FIELD_NUMBER: builtins.int
    conversion_action: typing.Text = ...
    """A conversion action that's not generated from remarketing."""

    remarketing_action: typing.Text = ...
    """A remarketing action."""

    def __init__(self,
        *,
        conversion_action : typing.Text = ...,
        remarketing_action : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["conversion_action",b"conversion_action","remarketing_action",b"remarketing_action","user_list_action",b"user_list_action"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["conversion_action",b"conversion_action","remarketing_action",b"remarketing_action","user_list_action",b"user_list_action"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["user_list_action",b"user_list_action"]) -> typing.Optional[typing_extensions.Literal["conversion_action","remarketing_action"]]: ...
global___UserListActionInfo = UserListActionInfo
