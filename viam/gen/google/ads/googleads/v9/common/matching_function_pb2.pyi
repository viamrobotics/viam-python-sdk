"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v9.enums.matching_function_context_type_pb2
import google.ads.googleads.v9.enums.matching_function_operator_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class MatchingFunction(google.protobuf.message.Message):
    """Proto file describing a matching function.

    Matching function associated with a
    CustomerFeed, CampaignFeed, or AdGroupFeed. The matching function is used
    to filter the set of feed items selected.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FUNCTION_STRING_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    LEFT_OPERANDS_FIELD_NUMBER: builtins.int
    RIGHT_OPERANDS_FIELD_NUMBER: builtins.int
    function_string: typing.Text = ...
    """String representation of the Function.

    Examples:

    1. IDENTITY(true) or IDENTITY(false). All or no feed items served.
    2. EQUALS(CONTEXT.DEVICE,"Mobile")
    3. IN(FEED_ITEM_ID,{1000001,1000002,1000003})
    4. CONTAINS_ANY(FeedAttribute[12345678,0],{"Mars cruise","Venus cruise"})
    5. AND(IN(FEED_ITEM_ID,{10001,10002}),EQUALS(CONTEXT.DEVICE,"Mobile"))

    For more details, visit
    https://developers.google.com/adwords/api/docs/guides/feed-matching-functions

    Note that because multiple strings may represent the same underlying
    function (whitespace and single versus double quotation marks, for
    example), the value returned may not be identical to the string sent in a
    mutate request.
    """

    operator: google.ads.googleads.v9.enums.matching_function_operator_pb2.MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...
    """Operator for a function."""

    @property
    def left_operands(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operand]:
        """The operands on the left hand side of the equation. This is also the
        operand to be used for single operand expressions such as NOT.
        """
        pass
    @property
    def right_operands(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operand]:
        """The operands on the right hand side of the equation."""
        pass
    def __init__(self,
        *,
        function_string : typing.Optional[typing.Text] = ...,
        operator : google.ads.googleads.v9.enums.matching_function_operator_pb2.MatchingFunctionOperatorEnum.MatchingFunctionOperator.ValueType = ...,
        left_operands : typing.Optional[typing.Iterable[global___Operand]] = ...,
        right_operands : typing.Optional[typing.Iterable[global___Operand]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_function_string",b"_function_string","function_string",b"function_string"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_function_string",b"_function_string","function_string",b"function_string","left_operands",b"left_operands","operator",b"operator","right_operands",b"right_operands"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_function_string",b"_function_string"]) -> typing.Optional[typing_extensions.Literal["function_string"]]: ...
global___MatchingFunction = MatchingFunction

class Operand(google.protobuf.message.Message):
    """An operand in a matching function."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ConstantOperand(google.protobuf.message.Message):
        """A constant operand in a matching function."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        STRING_VALUE_FIELD_NUMBER: builtins.int
        LONG_VALUE_FIELD_NUMBER: builtins.int
        BOOLEAN_VALUE_FIELD_NUMBER: builtins.int
        DOUBLE_VALUE_FIELD_NUMBER: builtins.int
        string_value: typing.Text = ...
        """String value of the operand if it is a string type."""

        long_value: builtins.int = ...
        """Int64 value of the operand if it is a int64 type."""

        boolean_value: builtins.bool = ...
        """Boolean value of the operand if it is a boolean type."""

        double_value: builtins.float = ...
        """Double value of the operand if it is a double type."""

        def __init__(self,
            *,
            string_value : typing.Text = ...,
            long_value : builtins.int = ...,
            boolean_value : builtins.bool = ...,
            double_value : builtins.float = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["boolean_value",b"boolean_value","constant_operand_value",b"constant_operand_value","double_value",b"double_value","long_value",b"long_value","string_value",b"string_value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["boolean_value",b"boolean_value","constant_operand_value",b"constant_operand_value","double_value",b"double_value","long_value",b"long_value","string_value",b"string_value"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["constant_operand_value",b"constant_operand_value"]) -> typing.Optional[typing_extensions.Literal["string_value","long_value","boolean_value","double_value"]]: ...

    class FeedAttributeOperand(google.protobuf.message.Message):
        """A feed attribute operand in a matching function.
        Used to represent a feed attribute in feed.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        FEED_ID_FIELD_NUMBER: builtins.int
        FEED_ATTRIBUTE_ID_FIELD_NUMBER: builtins.int
        feed_id: builtins.int = ...
        """The associated feed. Required."""

        feed_attribute_id: builtins.int = ...
        """Id of the referenced feed attribute. Required."""

        def __init__(self,
            *,
            feed_id : typing.Optional[builtins.int] = ...,
            feed_attribute_id : typing.Optional[builtins.int] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["_feed_attribute_id",b"_feed_attribute_id","_feed_id",b"_feed_id","feed_attribute_id",b"feed_attribute_id","feed_id",b"feed_id"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["_feed_attribute_id",b"_feed_attribute_id","_feed_id",b"_feed_id","feed_attribute_id",b"feed_attribute_id","feed_id",b"feed_id"]) -> None: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_feed_attribute_id",b"_feed_attribute_id"]) -> typing.Optional[typing_extensions.Literal["feed_attribute_id"]]: ...
        @typing.overload
        def WhichOneof(self, oneof_group: typing_extensions.Literal["_feed_id",b"_feed_id"]) -> typing.Optional[typing_extensions.Literal["feed_id"]]: ...

    class FunctionOperand(google.protobuf.message.Message):
        """A function operand in a matching function.
        Used to represent nested functions.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        MATCHING_FUNCTION_FIELD_NUMBER: builtins.int
        @property
        def matching_function(self) -> global___MatchingFunction:
            """The matching function held in this operand."""
            pass
        def __init__(self,
            *,
            matching_function : typing.Optional[global___MatchingFunction] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["matching_function",b"matching_function"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["matching_function",b"matching_function"]) -> None: ...

    class RequestContextOperand(google.protobuf.message.Message):
        """An operand in a function referring to a value in the request context."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        CONTEXT_TYPE_FIELD_NUMBER: builtins.int
        context_type: google.ads.googleads.v9.enums.matching_function_context_type_pb2.MatchingFunctionContextTypeEnum.MatchingFunctionContextType.ValueType = ...
        """Type of value to be referred in the request context."""

        def __init__(self,
            *,
            context_type : google.ads.googleads.v9.enums.matching_function_context_type_pb2.MatchingFunctionContextTypeEnum.MatchingFunctionContextType.ValueType = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["context_type",b"context_type"]) -> None: ...

    CONSTANT_OPERAND_FIELD_NUMBER: builtins.int
    FEED_ATTRIBUTE_OPERAND_FIELD_NUMBER: builtins.int
    FUNCTION_OPERAND_FIELD_NUMBER: builtins.int
    REQUEST_CONTEXT_OPERAND_FIELD_NUMBER: builtins.int
    @property
    def constant_operand(self) -> global___Operand.ConstantOperand:
        """A constant operand in a matching function."""
        pass
    @property
    def feed_attribute_operand(self) -> global___Operand.FeedAttributeOperand:
        """This operand specifies a feed attribute in feed."""
        pass
    @property
    def function_operand(self) -> global___Operand.FunctionOperand:
        """A function operand in a matching function.
        Used to represent nested functions.
        """
        pass
    @property
    def request_context_operand(self) -> global___Operand.RequestContextOperand:
        """An operand in a function referring to a value in the request context."""
        pass
    def __init__(self,
        *,
        constant_operand : typing.Optional[global___Operand.ConstantOperand] = ...,
        feed_attribute_operand : typing.Optional[global___Operand.FeedAttributeOperand] = ...,
        function_operand : typing.Optional[global___Operand.FunctionOperand] = ...,
        request_context_operand : typing.Optional[global___Operand.RequestContextOperand] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["constant_operand",b"constant_operand","feed_attribute_operand",b"feed_attribute_operand","function_argument_operand",b"function_argument_operand","function_operand",b"function_operand","request_context_operand",b"request_context_operand"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["constant_operand",b"constant_operand","feed_attribute_operand",b"feed_attribute_operand","function_argument_operand",b"function_argument_operand","function_operand",b"function_operand","request_context_operand",b"request_context_operand"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["function_argument_operand",b"function_argument_operand"]) -> typing.Optional[typing_extensions.Literal["constant_operand","feed_attribute_operand","function_operand","request_context_operand"]]: ...
global___Operand = Operand
