"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v9.enums.media_type_pb2
import google.ads.googleads.v9.enums.mime_type_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class MediaFile(google.protobuf.message.Message):
    """Proto file describing the media file resource.

    A media file.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    MIME_TYPE_FIELD_NUMBER: builtins.int
    SOURCE_URL_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    FILE_SIZE_FIELD_NUMBER: builtins.int
    IMAGE_FIELD_NUMBER: builtins.int
    MEDIA_BUNDLE_FIELD_NUMBER: builtins.int
    AUDIO_FIELD_NUMBER: builtins.int
    VIDEO_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """Immutable. The resource name of the media file.
    Media file resource names have the form:

    `customers/{customer_id}/mediaFiles/{media_file_id}`
    """

    id: builtins.int = ...
    """Output only. The ID of the media file."""

    type: google.ads.googleads.v9.enums.media_type_pb2.MediaTypeEnum.MediaType.ValueType = ...
    """Immutable. Type of the media file."""

    mime_type: google.ads.googleads.v9.enums.mime_type_pb2.MimeTypeEnum.MimeType.ValueType = ...
    """Output only. The mime type of the media file."""

    source_url: typing.Text = ...
    """Immutable. The URL of where the original media file was downloaded from (or a file
    name). Only used for media of type AUDIO and IMAGE.
    """

    name: typing.Text = ...
    """Immutable. The name of the media file. The name can be used by clients to help
    identify previously uploaded media.
    """

    file_size: builtins.int = ...
    """Output only. The size of the media file in bytes."""

    @property
    def image(self) -> global___MediaImage:
        """Immutable. Encapsulates an Image."""
        pass
    @property
    def media_bundle(self) -> global___MediaBundle:
        """Immutable. A ZIP archive media the content of which contains HTML5 assets."""
        pass
    @property
    def audio(self) -> global___MediaAudio:
        """Output only. Encapsulates an Audio."""
        pass
    @property
    def video(self) -> global___MediaVideo:
        """Immutable. Encapsulates a Video."""
        pass
    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        id : typing.Optional[builtins.int] = ...,
        type : google.ads.googleads.v9.enums.media_type_pb2.MediaTypeEnum.MediaType.ValueType = ...,
        mime_type : google.ads.googleads.v9.enums.mime_type_pb2.MimeTypeEnum.MimeType.ValueType = ...,
        source_url : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        file_size : typing.Optional[builtins.int] = ...,
        image : typing.Optional[global___MediaImage] = ...,
        media_bundle : typing.Optional[global___MediaBundle] = ...,
        audio : typing.Optional[global___MediaAudio] = ...,
        video : typing.Optional[global___MediaVideo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_file_size",b"_file_size","_id",b"_id","_name",b"_name","_source_url",b"_source_url","audio",b"audio","file_size",b"file_size","id",b"id","image",b"image","media_bundle",b"media_bundle","mediatype",b"mediatype","name",b"name","source_url",b"source_url","video",b"video"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_file_size",b"_file_size","_id",b"_id","_name",b"_name","_source_url",b"_source_url","audio",b"audio","file_size",b"file_size","id",b"id","image",b"image","media_bundle",b"media_bundle","mediatype",b"mediatype","mime_type",b"mime_type","name",b"name","resource_name",b"resource_name","source_url",b"source_url","type",b"type","video",b"video"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_file_size",b"_file_size"]) -> typing.Optional[typing_extensions.Literal["file_size"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_source_url",b"_source_url"]) -> typing.Optional[typing_extensions.Literal["source_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["mediatype",b"mediatype"]) -> typing.Optional[typing_extensions.Literal["image","media_bundle","audio","video"]]: ...
global___MediaFile = MediaFile

class MediaImage(google.protobuf.message.Message):
    """Encapsulates an Image."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_FIELD_NUMBER: builtins.int
    FULL_SIZE_IMAGE_URL_FIELD_NUMBER: builtins.int
    PREVIEW_SIZE_IMAGE_URL_FIELD_NUMBER: builtins.int
    data: builtins.bytes = ...
    """Immutable. Raw image data."""

    full_size_image_url: typing.Text = ...
    """Output only. The url to the full size version of the image."""

    preview_size_image_url: typing.Text = ...
    """Output only. The url to the preview size version of the image."""

    def __init__(self,
        *,
        data : typing.Optional[builtins.bytes] = ...,
        full_size_image_url : typing.Optional[typing.Text] = ...,
        preview_size_image_url : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_data",b"_data","_full_size_image_url",b"_full_size_image_url","_preview_size_image_url",b"_preview_size_image_url","data",b"data","full_size_image_url",b"full_size_image_url","preview_size_image_url",b"preview_size_image_url"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_data",b"_data","_full_size_image_url",b"_full_size_image_url","_preview_size_image_url",b"_preview_size_image_url","data",b"data","full_size_image_url",b"full_size_image_url","preview_size_image_url",b"preview_size_image_url"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_data",b"_data"]) -> typing.Optional[typing_extensions.Literal["data"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_full_size_image_url",b"_full_size_image_url"]) -> typing.Optional[typing_extensions.Literal["full_size_image_url"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_preview_size_image_url",b"_preview_size_image_url"]) -> typing.Optional[typing_extensions.Literal["preview_size_image_url"]]: ...
global___MediaImage = MediaImage

class MediaBundle(google.protobuf.message.Message):
    """Represents a ZIP archive media the content of which contains HTML5 assets."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    data: builtins.bytes = ...
    """Immutable. Raw zipped data."""

    url: typing.Text = ...
    """Output only. The url to access the uploaded zipped data.
    E.g. https://tpc.googlesyndication.com/simgad/123
    This field is read-only.
    """

    def __init__(self,
        *,
        data : typing.Optional[builtins.bytes] = ...,
        url : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_data",b"_data","_url",b"_url","data",b"data","url",b"url"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_data",b"_data","_url",b"_url","data",b"data","url",b"url"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_data",b"_data"]) -> typing.Optional[typing_extensions.Literal["data"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_url",b"_url"]) -> typing.Optional[typing_extensions.Literal["url"]]: ...
global___MediaBundle = MediaBundle

class MediaAudio(google.protobuf.message.Message):
    """Encapsulates an Audio."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AD_DURATION_MILLIS_FIELD_NUMBER: builtins.int
    ad_duration_millis: builtins.int = ...
    """Output only. The duration of the Audio in milliseconds."""

    def __init__(self,
        *,
        ad_duration_millis : typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ad_duration_millis",b"_ad_duration_millis","ad_duration_millis",b"ad_duration_millis"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ad_duration_millis",b"_ad_duration_millis","ad_duration_millis",b"ad_duration_millis"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ad_duration_millis",b"_ad_duration_millis"]) -> typing.Optional[typing_extensions.Literal["ad_duration_millis"]]: ...
global___MediaAudio = MediaAudio

class MediaVideo(google.protobuf.message.Message):
    """Encapsulates a Video."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AD_DURATION_MILLIS_FIELD_NUMBER: builtins.int
    YOUTUBE_VIDEO_ID_FIELD_NUMBER: builtins.int
    ADVERTISING_ID_CODE_FIELD_NUMBER: builtins.int
    ISCI_CODE_FIELD_NUMBER: builtins.int
    ad_duration_millis: builtins.int = ...
    """Output only. The duration of the Video in milliseconds."""

    youtube_video_id: typing.Text = ...
    """Immutable. The YouTube video ID (as seen in YouTube URLs). Adding prefix
    "https://www.youtube.com/watch?v=" to this ID will get the YouTube
    streaming URL for this video.
    """

    advertising_id_code: typing.Text = ...
    """Output only. The Advertising Digital Identification code for this video, as defined by
    the American Association of Advertising Agencies, used mainly for
    television commercials.
    """

    isci_code: typing.Text = ...
    """Output only. The Industry Standard Commercial Identifier code for this video, used
    mainly for television commercials.
    """

    def __init__(self,
        *,
        ad_duration_millis : typing.Optional[builtins.int] = ...,
        youtube_video_id : typing.Optional[typing.Text] = ...,
        advertising_id_code : typing.Optional[typing.Text] = ...,
        isci_code : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ad_duration_millis",b"_ad_duration_millis","_advertising_id_code",b"_advertising_id_code","_isci_code",b"_isci_code","_youtube_video_id",b"_youtube_video_id","ad_duration_millis",b"ad_duration_millis","advertising_id_code",b"advertising_id_code","isci_code",b"isci_code","youtube_video_id",b"youtube_video_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ad_duration_millis",b"_ad_duration_millis","_advertising_id_code",b"_advertising_id_code","_isci_code",b"_isci_code","_youtube_video_id",b"_youtube_video_id","ad_duration_millis",b"ad_duration_millis","advertising_id_code",b"advertising_id_code","isci_code",b"isci_code","youtube_video_id",b"youtube_video_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ad_duration_millis",b"_ad_duration_millis"]) -> typing.Optional[typing_extensions.Literal["ad_duration_millis"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_advertising_id_code",b"_advertising_id_code"]) -> typing.Optional[typing_extensions.Literal["advertising_id_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_isci_code",b"_isci_code"]) -> typing.Optional[typing_extensions.Literal["isci_code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_youtube_video_id",b"_youtube_video_id"]) -> typing.Optional[typing_extensions.Literal["youtube_video_id"]]: ...
global___MediaVideo = MediaVideo
