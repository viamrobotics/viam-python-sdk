"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.ads.googleads.v9.common.click_location_pb2
import google.ads.googleads.v9.common.criteria_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ClickView(google.protobuf.message.Message):
    """Proto file describing the ClickView resource.

    A click view with metrics aggregated at each click level, including both
    valid and invalid clicks. For non-Search campaigns, metrics.clicks
    represents the number of valid and invalid interactions.
    Queries including ClickView must have a filter limiting the results to one
    day and can be requested for dates back to 90 days before the time of the
    request.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    GCLID_FIELD_NUMBER: builtins.int
    AREA_OF_INTEREST_FIELD_NUMBER: builtins.int
    LOCATION_OF_PRESENCE_FIELD_NUMBER: builtins.int
    PAGE_NUMBER_FIELD_NUMBER: builtins.int
    AD_GROUP_AD_FIELD_NUMBER: builtins.int
    CAMPAIGN_LOCATION_TARGET_FIELD_NUMBER: builtins.int
    USER_LIST_FIELD_NUMBER: builtins.int
    KEYWORD_FIELD_NUMBER: builtins.int
    KEYWORD_INFO_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """Output only. The resource name of the click view.
    Click view resource names have the form:

    `customers/{customer_id}/clickViews/{date (yyyy-MM-dd)}~{gclid}`
    """

    gclid: typing.Text = ...
    """Output only. The Google Click ID."""

    @property
    def area_of_interest(self) -> google.ads.googleads.v9.common.click_location_pb2.ClickLocation:
        """Output only. The location criteria matching the area of interest associated with the
        impression.
        """
        pass
    @property
    def location_of_presence(self) -> google.ads.googleads.v9.common.click_location_pb2.ClickLocation:
        """Output only. The location criteria matching the location of presence associated with the
        impression.
        """
        pass
    page_number: builtins.int = ...
    """Output only. Page number in search results where the ad was shown."""

    ad_group_ad: typing.Text = ...
    """Output only. The associated ad."""

    campaign_location_target: typing.Text = ...
    """Output only. The associated campaign location target, if one exists."""

    user_list: typing.Text = ...
    """Output only. The associated user list, if one exists."""

    keyword: typing.Text = ...
    """Output only. The associated keyword, if one exists and the click corresponds to the
    SEARCH channel.
    """

    @property
    def keyword_info(self) -> google.ads.googleads.v9.common.criteria_pb2.KeywordInfo:
        """Output only. Basic information about the associated keyword, if it exists."""
        pass
    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        gclid : typing.Optional[typing.Text] = ...,
        area_of_interest : typing.Optional[google.ads.googleads.v9.common.click_location_pb2.ClickLocation] = ...,
        location_of_presence : typing.Optional[google.ads.googleads.v9.common.click_location_pb2.ClickLocation] = ...,
        page_number : typing.Optional[builtins.int] = ...,
        ad_group_ad : typing.Optional[typing.Text] = ...,
        campaign_location_target : typing.Optional[typing.Text] = ...,
        user_list : typing.Optional[typing.Text] = ...,
        keyword : typing.Text = ...,
        keyword_info : typing.Optional[google.ads.googleads.v9.common.criteria_pb2.KeywordInfo] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_ad_group_ad",b"_ad_group_ad","_campaign_location_target",b"_campaign_location_target","_gclid",b"_gclid","_page_number",b"_page_number","_user_list",b"_user_list","ad_group_ad",b"ad_group_ad","area_of_interest",b"area_of_interest","campaign_location_target",b"campaign_location_target","gclid",b"gclid","keyword_info",b"keyword_info","location_of_presence",b"location_of_presence","page_number",b"page_number","user_list",b"user_list"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_ad_group_ad",b"_ad_group_ad","_campaign_location_target",b"_campaign_location_target","_gclid",b"_gclid","_page_number",b"_page_number","_user_list",b"_user_list","ad_group_ad",b"ad_group_ad","area_of_interest",b"area_of_interest","campaign_location_target",b"campaign_location_target","gclid",b"gclid","keyword",b"keyword","keyword_info",b"keyword_info","location_of_presence",b"location_of_presence","page_number",b"page_number","resource_name",b"resource_name","user_list",b"user_list"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ad_group_ad",b"_ad_group_ad"]) -> typing.Optional[typing_extensions.Literal["ad_group_ad"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_campaign_location_target",b"_campaign_location_target"]) -> typing.Optional[typing_extensions.Literal["campaign_location_target"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gclid",b"_gclid"]) -> typing.Optional[typing_extensions.Literal["gclid"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_page_number",b"_page_number"]) -> typing.Optional[typing_extensions.Literal["page_number"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_user_list",b"_user_list"]) -> typing.Optional[typing_extensions.Literal["user_list"]]: ...
global___ClickView = ClickView
