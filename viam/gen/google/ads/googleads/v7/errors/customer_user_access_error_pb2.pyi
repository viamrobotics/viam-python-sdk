"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CustomerUserAccessErrorEnum(google.protobuf.message.Message):
    """Proto file describing CustomerUserAccess errors.

    Container for enum describing possible CustomerUserAccess errors.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _CustomerUserAccessError:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _CustomerUserAccessErrorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CustomerUserAccessError.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNSPECIFIED: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 0
        """Enum unspecified."""

        UNKNOWN: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 1
        """The received error code is not known in this version."""

        INVALID_USER_ID: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 2
        """There is no user associated with the user id specified."""

        REMOVAL_DISALLOWED: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 3
        """Unable to remove the access between the user and customer."""

        DISALLOWED_ACCESS_ROLE: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 4
        """Unable to add or update the access role as specified."""

        LAST_ADMIN_USER_OF_SERVING_CUSTOMER: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 5
        """The user can't remove itself from an active serving customer if it's the
        last admin user and the customer doesn't have any owner manager
        """

        LAST_ADMIN_USER_OF_MANAGER: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 6
        """Last admin user cannot be removed from a manager."""

    class CustomerUserAccessError(_CustomerUserAccessError, metaclass=_CustomerUserAccessErrorEnumTypeWrapper):
        """Enum describing possible customer user access errors."""
        pass

    UNSPECIFIED: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 0
    """Enum unspecified."""

    UNKNOWN: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 1
    """The received error code is not known in this version."""

    INVALID_USER_ID: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 2
    """There is no user associated with the user id specified."""

    REMOVAL_DISALLOWED: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 3
    """Unable to remove the access between the user and customer."""

    DISALLOWED_ACCESS_ROLE: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 4
    """Unable to add or update the access role as specified."""

    LAST_ADMIN_USER_OF_SERVING_CUSTOMER: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 5
    """The user can't remove itself from an active serving customer if it's the
    last admin user and the customer doesn't have any owner manager
    """

    LAST_ADMIN_USER_OF_MANAGER: CustomerUserAccessErrorEnum.CustomerUserAccessError.ValueType = ...  # 6
    """Last admin user cannot be removed from a manager."""


    def __init__(self,
        ) -> None: ...
global___CustomerUserAccessErrorEnum = CustomerUserAccessErrorEnum
