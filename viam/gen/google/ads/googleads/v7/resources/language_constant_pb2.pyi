"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class LanguageConstant(google.protobuf.message.Message):
    """Proto file describing the language constant resource.

    A language.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TARGETABLE_FIELD_NUMBER: builtins.int
    resource_name: typing.Text = ...
    """Output only. The resource name of the language constant.
    Language constant resource names have the form:

    `languageConstants/{criterion_id}`
    """

    id: builtins.int = ...
    """Output only. The ID of the language constant."""

    code: typing.Text = ...
    """Output only. The language code, e.g. "en_US", "en_AU", "es", "fr", etc."""

    name: typing.Text = ...
    """Output only. The full name of the language in English, e.g., "English (US)", "Spanish",
    etc.
    """

    targetable: builtins.bool = ...
    """Output only. Whether the language is targetable."""

    def __init__(self,
        *,
        resource_name : typing.Text = ...,
        id : typing.Optional[builtins.int] = ...,
        code : typing.Optional[typing.Text] = ...,
        name : typing.Optional[typing.Text] = ...,
        targetable : typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_code",b"_code","_id",b"_id","_name",b"_name","_targetable",b"_targetable","code",b"code","id",b"id","name",b"name","targetable",b"targetable"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_code",b"_code","_id",b"_id","_name",b"_name","_targetable",b"_targetable","code",b"code","id",b"id","name",b"name","resource_name",b"resource_name","targetable",b"targetable"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_code",b"_code"]) -> typing.Optional[typing_extensions.Literal["code"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_id",b"_id"]) -> typing.Optional[typing_extensions.Literal["id"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_targetable",b"_targetable"]) -> typing.Optional[typing_extensions.Literal["targetable"]]: ...
global___LanguageConstant = LanguageConstant
