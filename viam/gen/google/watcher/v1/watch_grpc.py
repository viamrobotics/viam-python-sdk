# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: google/watcher/v1/watch.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.protobuf.any_pb2
import google.protobuf.empty_pb2
import google.watcher.v1.watch_pb2


class WatcherBase(abc.ABC):

    @abc.abstractmethod
    async def Watch(self, stream: 'grpclib.server.Stream[google.watcher.v1.watch_pb2.Request, google.watcher.v1.watch_pb2.ChangeBatch]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/google.watcher.v1.Watcher/Watch': grpclib.const.Handler(
                self.Watch,
                grpclib.const.Cardinality.UNARY_STREAM,
                google.watcher.v1.watch_pb2.Request,
                google.watcher.v1.watch_pb2.ChangeBatch,
            ),
        }


class WatcherStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Watch = grpclib.client.UnaryStreamMethod(
            channel,
            '/google.watcher.v1.Watcher/Watch',
            google.watcher.v1.watch_pb2.Request,
            google.watcher.v1.watch_pb2.ChangeBatch,
        )
